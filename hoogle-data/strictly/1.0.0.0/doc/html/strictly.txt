-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Combinators for strictifying functions
--   
--   Combinators for strictifying functions
@package strictly
@version 1.0.0.0


-- | Turn a function lazy in its arguments into a function strict in its
--   arguments.
--   
--   It should be noted that this does nothing to change the internals of a
--   function. If the function is lazy on the inside, these combinators
--   cannot fix that. They only change the external entry point to the
--   function: the indicated number of arguments will be forced before
--   attempting to evaluate the function.
--   
--   For finer control over evaluation strategies, use the
--   <tt>parallel</tt> package.
module Control.Strictly

-- | Equivalent to <tt>$!</tt>
--   
--   <tt>strictly1</tt> is idempotent.
--   
--   <pre>
--   strictly1 (strictly1 f) x ≡ strictly1 f x
--   </pre>
strictly1 :: (a -> b) -> a -> b
strictly2 :: (a -> b -> c) -> a -> b -> c
strictly3 :: (a -> b -> c -> d) -> a -> b -> c -> d

-- | Equivalent to <tt>$!!</tt>
--   
--   <tt>veryStrictly1</tt> is idempotent.
--   
--   <pre>
--   veryStrictly1 (veryStrictly1 f) x ≡ veryStrictly1 f x
--   </pre>
veryStrictly1 :: NFData a => (a -> b) -> a -> b
veryStrictly2 :: (NFData a, NFData b) => (a -> b -> c) -> a -> b -> c
veryStrictly3 :: (NFData a, NFData b, NFData c) => (a -> b -> c -> d) -> a -> b -> c -> d
