-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Amazon Elastic MapReduce SDK.
--   
@package amazonka-emr
@version 0.3.6

module Network.AWS.EMR.Types

-- | Version <tt>2009-03-31</tt> of the Amazon Elastic MapReduce service.
data EMR
data JSONError :: *
data MarketType

-- | ON_DEMAND
OnDemand :: MarketType

-- | SPOT
Spot :: MarketType
data InstanceGroupConfig

-- | <a>InstanceGroupConfig</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>igcBidPrice</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>igcInstanceCount</a> <tt>::</tt> <a>Int</a></li>
--   <li><a>igcInstanceRole</a> <tt>::</tt> <a>InstanceRoleType</a></li>
--   <li><a>igcInstanceType</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>igcMarket</a> <tt>::</tt> <a>Maybe</a> <a>MarketType</a></li>
--   <li><a>igcName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
instanceGroupConfig :: InstanceRoleType -> Text -> Int -> InstanceGroupConfig

-- | Bid price for each Amazon EC2 instance in the instance group when
--   launching nodes as Spot Instances, expressed in USD.
igcBidPrice :: Lens' InstanceGroupConfig (Maybe Text)

-- | Target number of instances for the instance group.
igcInstanceCount :: Lens' InstanceGroupConfig Int

-- | The role of the instance group in the cluster.
igcInstanceRole :: Lens' InstanceGroupConfig InstanceRoleType

-- | The Amazon EC2 instance type for all instances in the instance group.
igcInstanceType :: Lens' InstanceGroupConfig Text

-- | Market type of the Amazon EC2 instances used to create a cluster node.
igcMarket :: Lens' InstanceGroupConfig (Maybe MarketType)

-- | Friendly name given to the instance group.
igcName :: Lens' InstanceGroupConfig (Maybe Text)
data InstanceStateChangeReason

-- | <a>InstanceStateChangeReason</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>iscrCode</a> <tt>::</tt> <a>Maybe</a>
--   <a>InstanceStateChangeReasonCode</a></li>
--   <li><a>iscrMessage</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
instanceStateChangeReason :: InstanceStateChangeReason

-- | The programmable code for the state change reason.
iscrCode :: Lens' InstanceStateChangeReason (Maybe InstanceStateChangeReasonCode)

-- | The status change reason description.
iscrMessage :: Lens' InstanceStateChangeReason (Maybe Text)
data JobFlowDetail

-- | <a>JobFlowDetail</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>jfdAmiVersion</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>jfdBootstrapActions</a> <tt>::</tt>
--   [<a>BootstrapActionDetail</a>]</li>
--   <li><a>jfdExecutionStatusDetail</a> <tt>::</tt>
--   <a>JobFlowExecutionStatusDetail</a></li>
--   <li><a>jfdInstances</a> <tt>::</tt> <a>JobFlowInstancesDetail</a></li>
--   <li><a>jfdJobFlowId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>jfdJobFlowRole</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>jfdLogUri</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>jfdName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>jfdServiceRole</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>jfdSteps</a> <tt>::</tt> [<a>StepDetail</a>]</li>
--   <li><a>jfdSupportedProducts</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>jfdVisibleToAllUsers</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   </ul>
jobFlowDetail :: Text -> Text -> JobFlowExecutionStatusDetail -> JobFlowInstancesDetail -> JobFlowDetail

-- | The version of the AMI used to initialize Amazon EC2 instances in the
--   job flow. For a list of AMI versions currently supported by Amazon
--   ElasticMapReduce, go to <a>AMI Versions Supported in Elastic
--   MapReduce</a> in the <i>Amazon Elastic MapReduce Developer's
--   Guide.</i>
jfdAmiVersion :: Lens' JobFlowDetail (Maybe Text)

-- | A list of the bootstrap actions run by the job flow.
jfdBootstrapActions :: Lens' JobFlowDetail [BootstrapActionDetail]

-- | Describes the execution status of the job flow.
jfdExecutionStatusDetail :: Lens' JobFlowDetail JobFlowExecutionStatusDetail

-- | Describes the Amazon EC2 instances of the job flow.
jfdInstances :: Lens' JobFlowDetail JobFlowInstancesDetail

-- | The job flow identifier.
jfdJobFlowId :: Lens' JobFlowDetail Text

-- | The IAM role that was specified when the job flow was launched. The
--   EC2 instances of the job flow assume this role.
jfdJobFlowRole :: Lens' JobFlowDetail (Maybe Text)

-- | The location in Amazon S3 where log files for the job are stored.
jfdLogUri :: Lens' JobFlowDetail (Maybe Text)

-- | The name of the job flow.
jfdName :: Lens' JobFlowDetail Text

-- | The IAM role that will be assumed by the Amazon EMR service to access
--   AWS resources on your behalf.
jfdServiceRole :: Lens' JobFlowDetail (Maybe Text)

-- | A list of steps run by the job flow.
jfdSteps :: Lens' JobFlowDetail [StepDetail]

-- | A list of strings set by third party software when the job flow is
--   launched. If you are not using third party software to manage the job
--   flow this value is empty.
jfdSupportedProducts :: Lens' JobFlowDetail [Text]

-- | Specifies whether the job flow is visible to all IAM users of the AWS
--   account associated with the job flow. If this value is set to
--   <tt>true</tt>, all IAM users of that AWS account can view and (if they
--   have the proper policy permissions set) manage the job flow. If it is
--   set to <tt>false</tt>, only the IAM user that created the job flow can
--   view and manage it. This value can be changed using the
--   <tt>SetVisibleToAllUsers</tt> action.
jfdVisibleToAllUsers :: Lens' JobFlowDetail (Maybe Bool)
data KeyValue

-- | <a>KeyValue</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>kvKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>kvValue</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
keyValue :: KeyValue

-- | The unique identifier of a key value pair.
kvKey :: Lens' KeyValue (Maybe Text)

-- | The value part of the identified key.
kvValue :: Lens' KeyValue (Maybe Text)
data SupportedProductConfig

-- | <a>SupportedProductConfig</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>spcArgs</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>spcName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
supportedProductConfig :: SupportedProductConfig

-- | The list of user-supplied arguments.
spcArgs :: Lens' SupportedProductConfig [Text]

-- | The name of the product configuration.
spcName :: Lens' SupportedProductConfig (Maybe Text)
data Command

-- | <a>Command</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cArgs</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>cName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cScriptPath</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
command :: Command

-- | Arguments for Amazon EMR to pass to the command for execution.
cArgs :: Lens' Command [Text]

-- | The name of the command.
cName :: Lens' Command (Maybe Text)

-- | The Amazon S3 location of the command script.
cScriptPath :: Lens' Command (Maybe Text)
data StepExecutionState

-- | CANCELLED
Cancelled :: StepExecutionState

-- | COMPLETED
Completed :: StepExecutionState

-- | CONTINUE
Continue :: StepExecutionState

-- | FAILED
Failed :: StepExecutionState

-- | INTERRUPTED
Interrupted :: StepExecutionState

-- | PENDING
Pending :: StepExecutionState

-- | RUNNING
Running :: StepExecutionState
data ActionOnFailure

-- | CANCEL_AND_WAIT
AOFCancelAndWait :: ActionOnFailure

-- | CONTINUE
AOFContinue :: ActionOnFailure

-- | TERMINATE_CLUSTER
AOFTerminateCluster :: ActionOnFailure

-- | TERMINATE_JOB_FLOW
AOFTerminateJobFlow :: ActionOnFailure
data ClusterStateChangeReason

-- | <a>ClusterStateChangeReason</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cscrCode</a> <tt>::</tt> <a>Maybe</a>
--   <a>ClusterStateChangeReasonCode</a></li>
--   <li><a>cscrMessage</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
clusterStateChangeReason :: ClusterStateChangeReason

-- | The programmatic code for the state change reason.
cscrCode :: Lens' ClusterStateChangeReason (Maybe ClusterStateChangeReasonCode)

-- | The descriptive message for the state change reason.
cscrMessage :: Lens' ClusterStateChangeReason (Maybe Text)
data Tag

-- | <a>Tag</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>tagKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>tagValue</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
tag :: Tag

-- | A user-defined key, which is the minimum required information for a
--   valid tag. For more information, see <a>Tagging Amazon EMR
--   Resources</a>.
tagKey :: Lens' Tag (Maybe Text)

-- | A user-defined value, which is optional in a tag. For more
--   information, see <a>Tagging Amazon EMR Resources</a>.
tagValue :: Lens' Tag (Maybe Text)
data Application

-- | <a>Application</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>aAdditionalInfo</a> <tt>::</tt> <a>HashMap</a> <a>Text</a>
--   <a>Text</a></li>
--   <li><a>aArgs</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>aName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>aVersion</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
application :: Application

-- | This option is for advanced users only. This is meta information about
--   third-party applications that third-party vendors use for testing
--   purposes.
aAdditionalInfo :: Lens' Application (HashMap Text Text)

-- | Arguments for Amazon EMR to pass to the application.
aArgs :: Lens' Application [Text]

-- | The name of the application.
aName :: Lens' Application (Maybe Text)

-- | The version of the application.
aVersion :: Lens' Application (Maybe Text)
data JobFlowExecutionStatusDetail

-- | <a>JobFlowExecutionStatusDetail</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>jfesdCreationDateTime</a> <tt>::</tt> <a>UTCTime</a></li>
--   <li><a>jfesdEndDateTime</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>jfesdLastStateChangeReason</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>jfesdReadyDateTime</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>jfesdStartDateTime</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>jfesdState</a> <tt>::</tt> <a>JobFlowExecutionState</a></li>
--   </ul>
jobFlowExecutionStatusDetail :: JobFlowExecutionState -> UTCTime -> JobFlowExecutionStatusDetail

-- | The creation date and time of the job flow.
jfesdCreationDateTime :: Lens' JobFlowExecutionStatusDetail UTCTime

-- | The completion date and time of the job flow.
jfesdEndDateTime :: Lens' JobFlowExecutionStatusDetail (Maybe UTCTime)

-- | Description of the job flow last changed state.
jfesdLastStateChangeReason :: Lens' JobFlowExecutionStatusDetail (Maybe Text)

-- | The date and time when the job flow was ready to start running
--   bootstrap actions.
jfesdReadyDateTime :: Lens' JobFlowExecutionStatusDetail (Maybe UTCTime)

-- | The start date and time of the job flow.
jfesdStartDateTime :: Lens' JobFlowExecutionStatusDetail (Maybe UTCTime)

-- | The state of the job flow.
jfesdState :: Lens' JobFlowExecutionStatusDetail JobFlowExecutionState
data InstanceGroupStatus

-- | <a>InstanceGroupStatus</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>igsState</a> <tt>::</tt> <a>Maybe</a>
--   <a>InstanceGroupState</a></li>
--   <li><a>igsStateChangeReason</a> <tt>::</tt> <a>Maybe</a>
--   <a>InstanceGroupStateChangeReason</a></li>
--   <li><a>igsTimeline</a> <tt>::</tt> <a>Maybe</a>
--   <a>InstanceGroupTimeline</a></li>
--   </ul>
instanceGroupStatus :: InstanceGroupStatus

-- | The current state of the instance group.
igsState :: Lens' InstanceGroupStatus (Maybe InstanceGroupState)

-- | The status change reason details for the instance group.
igsStateChangeReason :: Lens' InstanceGroupStatus (Maybe InstanceGroupStateChangeReason)

-- | The timeline of the instance group status over time.
igsTimeline :: Lens' InstanceGroupStatus (Maybe InstanceGroupTimeline)
data Cluster

-- | <a>Cluster</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>c1Applications</a> <tt>::</tt> [<a>Application</a>]</li>
--   <li><a>c1AutoTerminate</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>c1Ec2InstanceAttributes</a> <tt>::</tt> <a>Maybe</a>
--   <a>Ec2InstanceAttributes</a></li>
--   <li><a>c1Id</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>c1LogUri</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>c1MasterPublicDnsName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>c1Name</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>c1NormalizedInstanceHours</a> <tt>::</tt> <a>Maybe</a>
--   <a>Int</a></li>
--   <li><a>c1RequestedAmiVersion</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>c1RunningAmiVersion</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>c1ServiceRole</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>c1Status</a> <tt>::</tt> <a>ClusterStatus</a></li>
--   <li><a>c1Tags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   <li><a>c1TerminationProtected</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>c1VisibleToAllUsers</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   </ul>
cluster :: Text -> Text -> ClusterStatus -> Cluster

-- | The applications installed on this cluster.
c1Applications :: Lens' Cluster [Application]

-- | Specifies whether the cluster should terminate after completing all
--   steps.
c1AutoTerminate :: Lens' Cluster (Maybe Bool)
c1Ec2InstanceAttributes :: Lens' Cluster (Maybe Ec2InstanceAttributes)

-- | The unique identifier for the cluster.
c1Id :: Lens' Cluster Text

-- | The path to the Amazon S3 location where logs for this cluster are
--   stored.
c1LogUri :: Lens' Cluster (Maybe Text)

-- | The public DNS name of the master Ec2 instance.
c1MasterPublicDnsName :: Lens' Cluster (Maybe Text)

-- | The name of the cluster.
c1Name :: Lens' Cluster Text

-- | An approximation of the cost of the job flow, represented in
--   m1.small/hours. This value is incremented one time for every hour an
--   m1.small instance runs. Larger instances are weighted more, so an EC2
--   instance that is roughly four times more expensive would result in the
--   normalized instance hours being incremented by four. This result is
--   only an approximation and does not reflect the actual billing rate.
c1NormalizedInstanceHours :: Lens' Cluster (Maybe Int)

-- | The AMI version requested for this cluster.
c1RequestedAmiVersion :: Lens' Cluster (Maybe Text)

-- | The AMI version running on this cluster. This differs from the
--   requested version only if the requested version is a meta version,
--   such as "latest".
c1RunningAmiVersion :: Lens' Cluster (Maybe Text)

-- | The IAM role that will be assumed by the Amazon EMR service to access
--   AWS resources on your behalf.
c1ServiceRole :: Lens' Cluster (Maybe Text)

-- | The current status details about the cluster.
c1Status :: Lens' Cluster ClusterStatus

-- | A list of tags associated with a cluster.
c1Tags :: Lens' Cluster [Tag]

-- | Indicates whether Amazon EMR will lock the cluster to prevent the EC2
--   instances from being terminated by an API call or user intervention,
--   or in the event of a cluster error.
c1TerminationProtected :: Lens' Cluster (Maybe Bool)

-- | Indicates whether the job flow is visible to all IAM users of the AWS
--   account associated with the job flow. If this value is set to
--   <tt>true</tt>, all IAM users of that AWS account can view and manage
--   the job flow if they have the proper policy permissions set. If this
--   value is <tt>false</tt>, only the IAM user that created the cluster
--   can view and manage it. This value can be changed using the
--   <tt>SetVisibleToAllUsers</tt> action.
c1VisibleToAllUsers :: Lens' Cluster (Maybe Bool)
data InstanceTimeline

-- | <a>InstanceTimeline</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>itCreationDateTime</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>itEndDateTime</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>itReadyDateTime</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   </ul>
instanceTimeline :: InstanceTimeline

-- | The creation date and time of the instance.
itCreationDateTime :: Lens' InstanceTimeline (Maybe UTCTime)

-- | The date and time when the instance was terminated.
itEndDateTime :: Lens' InstanceTimeline (Maybe UTCTime)

-- | The date and time when the instance was ready to perform tasks.
itReadyDateTime :: Lens' InstanceTimeline (Maybe UTCTime)
data Ec2InstanceAttributes

-- | <a>Ec2InstanceAttributes</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>eiaAdditionalMasterSecurityGroups</a> <tt>::</tt>
--   [<a>Text</a>]</li>
--   <li><a>eiaAdditionalSlaveSecurityGroups</a> <tt>::</tt>
--   [<a>Text</a>]</li>
--   <li><a>eiaEc2AvailabilityZone</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>eiaEc2KeyName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>eiaEc2SubnetId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>eiaEmrManagedMasterSecurityGroup</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>eiaEmrManagedSlaveSecurityGroup</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>eiaIamInstanceProfile</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
ec2InstanceAttributes :: Ec2InstanceAttributes

-- | A list of additional Amazon EC2 security group IDs for the master
--   node.
eiaAdditionalMasterSecurityGroups :: Lens' Ec2InstanceAttributes [Text]

-- | A list of additional Amazon EC2 security group IDs for the slave
--   nodes.
eiaAdditionalSlaveSecurityGroups :: Lens' Ec2InstanceAttributes [Text]

-- | The Availability Zone in which the cluster will run.
eiaEc2AvailabilityZone :: Lens' Ec2InstanceAttributes (Maybe Text)

-- | The name of the Amazon EC2 key pair to use when connecting with SSH
--   into the master node as a user named "hadoop".
eiaEc2KeyName :: Lens' Ec2InstanceAttributes (Maybe Text)

-- | To launch the job flow in Amazon VPC, set this parameter to the
--   identifier of the Amazon VPC subnet where you want the job flow to
--   launch. If you do not specify this value, the job flow is launched in
--   the normal AWS cloud, outside of a VPC.
--   
--   Amazon VPC currently does not support cluster compute quadruple extra
--   large (cc1.4xlarge) instances. Thus, you cannot specify the
--   cc1.4xlarge instance type for nodes of a job flow launched in a VPC.
eiaEc2SubnetId :: Lens' Ec2InstanceAttributes (Maybe Text)

-- | The identifier of the Amazon EC2 security group (managed by Amazon
--   Elastic MapReduce) for the master node.
eiaEmrManagedMasterSecurityGroup :: Lens' Ec2InstanceAttributes (Maybe Text)

-- | The identifier of the Amazon EC2 security group (managed by Amazon
--   Elastic MapReduce) for the slave nodes.
eiaEmrManagedSlaveSecurityGroup :: Lens' Ec2InstanceAttributes (Maybe Text)

-- | The IAM role that was specified when the job flow was launched. The
--   EC2 instances of the job flow assume this role.
eiaIamInstanceProfile :: Lens' Ec2InstanceAttributes (Maybe Text)
data StepStateChangeReasonCode

-- | NONE
None :: StepStateChangeReasonCode
data ClusterState

-- | BOOTSTRAPPING
CSBootstrapping :: ClusterState

-- | RUNNING
CSRunning :: ClusterState

-- | STARTING
CSStarting :: ClusterState

-- | TERMINATED
CSTerminated :: ClusterState

-- | TERMINATED_WITH_ERRORS
CSTerminatedWithErrors :: ClusterState

-- | TERMINATING
CSTerminating :: ClusterState

-- | WAITING
CSWaiting :: ClusterState
data HadoopStepConfig

-- | <a>HadoopStepConfig</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>hscArgs</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>hscJar</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>hscMainClass</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>hscProperties</a> <tt>::</tt> <a>HashMap</a> <a>Text</a>
--   <a>Text</a></li>
--   </ul>
hadoopStepConfig :: HadoopStepConfig

-- | The list of command line arguments to pass to the JAR file's main
--   function for execution.
hscArgs :: Lens' HadoopStepConfig [Text]

-- | The path to the JAR file that runs during the step.
hscJar :: Lens' HadoopStepConfig (Maybe Text)

-- | The name of the main class in the specified Java file. If not
--   specified, the JAR file should specify a main class in its manifest
--   file.
hscMainClass :: Lens' HadoopStepConfig (Maybe Text)

-- | The list of Java properties that are set when the step runs. You can
--   use these properties to pass key value pairs to your main function.
hscProperties :: Lens' HadoopStepConfig (HashMap Text Text)
data JobFlowExecutionState

-- | BOOTSTRAPPING
JFESBootstrapping :: JobFlowExecutionState

-- | COMPLETED
JFESCompleted :: JobFlowExecutionState

-- | FAILED
JFESFailed :: JobFlowExecutionState

-- | RUNNING
JFESRunning :: JobFlowExecutionState

-- | SHUTTING_DOWN
JFESShuttingDown :: JobFlowExecutionState

-- | STARTING
JFESStarting :: JobFlowExecutionState

-- | TERMINATED
JFESTerminated :: JobFlowExecutionState

-- | WAITING
JFESWaiting :: JobFlowExecutionState
data StepDetail

-- | <a>StepDetail</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sdExecutionStatusDetail</a> <tt>::</tt>
--   <a>StepExecutionStatusDetail</a></li>
--   <li><a>sdStepConfig</a> <tt>::</tt> <a>StepConfig</a></li>
--   </ul>
stepDetail :: StepConfig -> StepExecutionStatusDetail -> StepDetail

-- | The description of the step status.
sdExecutionStatusDetail :: Lens' StepDetail StepExecutionStatusDetail

-- | The step configuration.
sdStepConfig :: Lens' StepDetail StepConfig
data InstanceGroupStateChangeReason

-- | <a>InstanceGroupStateChangeReason</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>igscrCode</a> <tt>::</tt> <a>Maybe</a>
--   <a>InstanceGroupStateChangeReasonCode</a></li>
--   <li><a>igscrMessage</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
instanceGroupStateChangeReason :: InstanceGroupStateChangeReason

-- | The programmable code for the state change reason.
igscrCode :: Lens' InstanceGroupStateChangeReason (Maybe InstanceGroupStateChangeReasonCode)

-- | The status change reason description.
igscrMessage :: Lens' InstanceGroupStateChangeReason (Maybe Text)
data InstanceGroupType

-- | CORE
Core :: InstanceGroupType

-- | MASTER
Master :: InstanceGroupType

-- | TASK
Task :: InstanceGroupType
data InstanceGroupStateChangeReasonCode

-- | CLUSTER_TERMINATED
ClusterTerminated :: InstanceGroupStateChangeReasonCode

-- | INSTANCE_FAILURE
InstanceFailure :: InstanceGroupStateChangeReasonCode

-- | INTERNAL_ERROR
InternalError :: InstanceGroupStateChangeReasonCode

-- | VALIDATION_ERROR
ValidationError :: InstanceGroupStateChangeReasonCode
data StepStatus

-- | <a>StepStatus</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ssState</a> <tt>::</tt> <a>Maybe</a> <a>StepState</a></li>
--   <li><a>ssStateChangeReason</a> <tt>::</tt> <a>Maybe</a>
--   <a>StepStateChangeReason</a></li>
--   <li><a>ssTimeline</a> <tt>::</tt> <a>Maybe</a>
--   <a>StepTimeline</a></li>
--   </ul>
stepStatus :: StepStatus

-- | The execution state of the cluster step.
ssState :: Lens' StepStatus (Maybe StepState)

-- | The reason for the step execution status change.
ssStateChangeReason :: Lens' StepStatus (Maybe StepStateChangeReason)

-- | The timeline of the cluster step status over time.
ssTimeline :: Lens' StepStatus (Maybe StepTimeline)
data StepSummary

-- | <a>StepSummary</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ssActionOnFailure</a> <tt>::</tt> <a>Maybe</a>
--   <a>ActionOnFailure</a></li>
--   <li><a>ssConfig</a> <tt>::</tt> <a>Maybe</a>
--   <a>HadoopStepConfig</a></li>
--   <li><a>ssId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ssName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ssStatus</a> <tt>::</tt> <a>Maybe</a> <a>StepStatus</a></li>
--   </ul>
stepSummary :: StepSummary

-- | This specifies what action to take when the cluster step fails.
--   Possible values are TERMINATE_CLUSTER, CANCEL_AND_WAIT, and CONTINUE.
ssActionOnFailure :: Lens' StepSummary (Maybe ActionOnFailure)

-- | The Hadoop job configuration of the cluster step.
ssConfig :: Lens' StepSummary (Maybe HadoopStepConfig)

-- | The identifier of the cluster step.
ssId :: Lens' StepSummary (Maybe Text)

-- | The name of the cluster step.
ssName :: Lens' StepSummary (Maybe Text)

-- | The current execution status details of the cluster step.
ssStatus :: Lens' StepSummary (Maybe StepStatus)
data InstanceGroupState

-- | ARRESTED
IGSArrested :: InstanceGroupState

-- | BOOTSTRAPPING
IGSBootstrapping :: InstanceGroupState

-- | ENDED
IGSEnded :: InstanceGroupState

-- | PROVISIONING
IGSProvisioning :: InstanceGroupState

-- | RESIZING
IGSResizing :: InstanceGroupState

-- | RUNNING
IGSRunning :: InstanceGroupState

-- | SHUTTING_DOWN
IGSShuttingDown :: InstanceGroupState

-- | SUSPENDED
IGSSuspended :: InstanceGroupState

-- | TERMINATED
IGSTerminated :: InstanceGroupState

-- | TERMINATING
IGSTerminating :: InstanceGroupState
data StepTimeline

-- | <a>StepTimeline</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>stCreationDateTime</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>stEndDateTime</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>stStartDateTime</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   </ul>
stepTimeline :: StepTimeline

-- | The date and time when the cluster step was created.
stCreationDateTime :: Lens' StepTimeline (Maybe UTCTime)

-- | The date and time when the cluster step execution completed or failed.
stEndDateTime :: Lens' StepTimeline (Maybe UTCTime)

-- | The date and time when the cluster step execution started.
stStartDateTime :: Lens' StepTimeline (Maybe UTCTime)
data PlacementType

-- | <a>PlacementType</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ptAvailabilityZone</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
placementType :: Text -> PlacementType

-- | The Amazon EC2 Availability Zone for the job flow.
ptAvailabilityZone :: Lens' PlacementType Text
data HadoopJarStepConfig

-- | <a>HadoopJarStepConfig</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>hjscArgs</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>hjscJar</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>hjscMainClass</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>hjscProperties</a> <tt>::</tt> [<a>KeyValue</a>]</li>
--   </ul>
hadoopJarStepConfig :: Text -> HadoopJarStepConfig

-- | A list of command line arguments passed to the JAR file's main
--   function when executed.
hjscArgs :: Lens' HadoopJarStepConfig [Text]

-- | A path to a JAR file run during the step.
hjscJar :: Lens' HadoopJarStepConfig Text

-- | The name of the main class in the specified Java file. If not
--   specified, the JAR file should specify a Main-Class in its manifest
--   file.
hjscMainClass :: Lens' HadoopJarStepConfig (Maybe Text)

-- | A list of Java properties that are set when the step runs. You can use
--   these properties to pass key value pairs to your main function.
hjscProperties :: Lens' HadoopJarStepConfig [KeyValue]
data InstanceGroupModifyConfig

-- | <a>InstanceGroupModifyConfig</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>igmcEC2InstanceIdsToTerminate</a> <tt>::</tt>
--   [<a>Text</a>]</li>
--   <li><a>igmcInstanceCount</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>igmcInstanceGroupId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
instanceGroupModifyConfig :: Text -> InstanceGroupModifyConfig

-- | The EC2 InstanceIds to terminate. For advanced users only. Once you
--   terminate the instances, the instance group will not return to its
--   original requested size.
igmcEC2InstanceIdsToTerminate :: Lens' InstanceGroupModifyConfig [Text]

-- | Target size for the instance group.
igmcInstanceCount :: Lens' InstanceGroupModifyConfig (Maybe Int)

-- | Unique ID of the instance group to expand or shrink.
igmcInstanceGroupId :: Lens' InstanceGroupModifyConfig Text
data InstanceGroupDetail

-- | <a>InstanceGroupDetail</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>igdBidPrice</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>igdCreationDateTime</a> <tt>::</tt> <a>UTCTime</a></li>
--   <li><a>igdEndDateTime</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>igdInstanceGroupId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>igdInstanceRequestCount</a> <tt>::</tt> <a>Int</a></li>
--   <li><a>igdInstanceRole</a> <tt>::</tt> <a>InstanceRoleType</a></li>
--   <li><a>igdInstanceRunningCount</a> <tt>::</tt> <a>Int</a></li>
--   <li><a>igdInstanceType</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>igdLastStateChangeReason</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>igdMarket</a> <tt>::</tt> <a>MarketType</a></li>
--   <li><a>igdName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>igdReadyDateTime</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>igdStartDateTime</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>igdState</a> <tt>::</tt> <a>InstanceGroupState</a></li>
--   </ul>
instanceGroupDetail :: MarketType -> InstanceRoleType -> Text -> Int -> Int -> InstanceGroupState -> UTCTime -> InstanceGroupDetail

-- | Bid price for EC2 Instances when launching nodes as Spot Instances,
--   expressed in USD.
igdBidPrice :: Lens' InstanceGroupDetail (Maybe Text)

-- | The date/time the instance group was created.
igdCreationDateTime :: Lens' InstanceGroupDetail UTCTime

-- | The date/time the instance group was terminated.
igdEndDateTime :: Lens' InstanceGroupDetail (Maybe UTCTime)

-- | Unique identifier for the instance group.
igdInstanceGroupId :: Lens' InstanceGroupDetail (Maybe Text)

-- | Target number of instances to run in the instance group.
igdInstanceRequestCount :: Lens' InstanceGroupDetail Int

-- | Instance group role in the cluster
igdInstanceRole :: Lens' InstanceGroupDetail InstanceRoleType

-- | Actual count of running instances.
igdInstanceRunningCount :: Lens' InstanceGroupDetail Int

-- | Amazon EC2 Instance type.
igdInstanceType :: Lens' InstanceGroupDetail Text

-- | Details regarding the state of the instance group.
igdLastStateChangeReason :: Lens' InstanceGroupDetail (Maybe Text)

-- | Market type of the Amazon EC2 instances used to create a cluster node.
igdMarket :: Lens' InstanceGroupDetail MarketType

-- | Friendly name for the instance group.
igdName :: Lens' InstanceGroupDetail (Maybe Text)

-- | The date/time the instance group was available to the cluster.
igdReadyDateTime :: Lens' InstanceGroupDetail (Maybe UTCTime)

-- | The date/time the instance group was started.
igdStartDateTime :: Lens' InstanceGroupDetail (Maybe UTCTime)

-- | State of instance group. The following values are deprecated:
--   STARTING, TERMINATED, and FAILED.
igdState :: Lens' InstanceGroupDetail InstanceGroupState
data StepStateChangeReason

-- | <a>StepStateChangeReason</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sscrCode</a> <tt>::</tt> <a>Maybe</a>
--   <a>StepStateChangeReasonCode</a></li>
--   <li><a>sscrMessage</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
stepStateChangeReason :: StepStateChangeReason

-- | The programmable code for the state change reason.
sscrCode :: Lens' StepStateChangeReason (Maybe StepStateChangeReasonCode)

-- | The descriptive message for the state change reason.
sscrMessage :: Lens' StepStateChangeReason (Maybe Text)
data ClusterStateChangeReasonCode

-- | ALL_STEPS_COMPLETED
CSCRCAllStepsCompleted :: ClusterStateChangeReasonCode

-- | BOOTSTRAP_FAILURE
CSCRCBootstrapFailure :: ClusterStateChangeReasonCode

-- | INSTANCE_FAILURE
CSCRCInstanceFailure :: ClusterStateChangeReasonCode

-- | INTERNAL_ERROR
CSCRCInternalError :: ClusterStateChangeReasonCode

-- | STEP_FAILURE
CSCRCStepFailure :: ClusterStateChangeReasonCode

-- | USER_REQUEST
CSCRCUserRequest :: ClusterStateChangeReasonCode

-- | VALIDATION_ERROR
CSCRCValidationError :: ClusterStateChangeReasonCode
data Step

-- | <a>Step</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sActionOnFailure</a> <tt>::</tt> <a>Maybe</a>
--   <a>ActionOnFailure</a></li>
--   <li><a>sConfig</a> <tt>::</tt> <a>Maybe</a>
--   <a>HadoopStepConfig</a></li>
--   <li><a>sId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>sName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>sStatus</a> <tt>::</tt> <a>Maybe</a> <a>StepStatus</a></li>
--   </ul>
step :: Step

-- | This specifies what action to take when the cluster step fails.
--   Possible values are TERMINATE_CLUSTER, CANCEL_AND_WAIT, and CONTINUE.
sActionOnFailure :: Lens' Step (Maybe ActionOnFailure)

-- | The Hadoop job configuration of the cluster step.
sConfig :: Lens' Step (Maybe HadoopStepConfig)

-- | The identifier of the cluster step.
sId :: Lens' Step (Maybe Text)

-- | The name of the cluster step.
sName :: Lens' Step (Maybe Text)

-- | The current execution status details of the cluster step.
sStatus :: Lens' Step (Maybe StepStatus)
data StepState

-- | CANCELLED
SSCancelled :: StepState

-- | COMPLETED
SSCompleted :: StepState

-- | FAILED
SSFailed :: StepState

-- | INTERRUPTED
SSInterrupted :: StepState

-- | PENDING
SSPending :: StepState

-- | RUNNING
SSRunning :: StepState
data InstanceGroupTimeline

-- | <a>InstanceGroupTimeline</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>igtCreationDateTime</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>igtEndDateTime</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>igtReadyDateTime</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   </ul>
instanceGroupTimeline :: InstanceGroupTimeline

-- | The creation date and time of the instance group.
igtCreationDateTime :: Lens' InstanceGroupTimeline (Maybe UTCTime)

-- | The date and time when the instance group terminated.
igtEndDateTime :: Lens' InstanceGroupTimeline (Maybe UTCTime)

-- | The date and time when the instance group became ready to perform
--   tasks.
igtReadyDateTime :: Lens' InstanceGroupTimeline (Maybe UTCTime)
data BootstrapActionDetail

-- | <a>BootstrapActionDetail</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>badBootstrapActionConfig</a> <tt>::</tt> <a>Maybe</a>
--   <a>BootstrapActionConfig</a></li>
--   </ul>
bootstrapActionDetail :: BootstrapActionDetail

-- | A description of the bootstrap action.
badBootstrapActionConfig :: Lens' BootstrapActionDetail (Maybe BootstrapActionConfig)
data StepExecutionStatusDetail

-- | <a>StepExecutionStatusDetail</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sesdCreationDateTime</a> <tt>::</tt> <a>UTCTime</a></li>
--   <li><a>sesdEndDateTime</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>sesdLastStateChangeReason</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>sesdStartDateTime</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>sesdState</a> <tt>::</tt> <a>StepExecutionState</a></li>
--   </ul>
stepExecutionStatusDetail :: StepExecutionState -> UTCTime -> StepExecutionStatusDetail

-- | The creation date and time of the step.
sesdCreationDateTime :: Lens' StepExecutionStatusDetail UTCTime

-- | The completion date and time of the step.
sesdEndDateTime :: Lens' StepExecutionStatusDetail (Maybe UTCTime)

-- | A description of the step's current state.
sesdLastStateChangeReason :: Lens' StepExecutionStatusDetail (Maybe Text)

-- | The start date and time of the step.
sesdStartDateTime :: Lens' StepExecutionStatusDetail (Maybe UTCTime)

-- | The state of the job flow step.
sesdState :: Lens' StepExecutionStatusDetail StepExecutionState
data InstanceStatus

-- | <a>InstanceStatus</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>isState</a> <tt>::</tt> <a>Maybe</a> <a>InstanceState</a></li>
--   <li><a>isStateChangeReason</a> <tt>::</tt> <a>Maybe</a>
--   <a>InstanceStateChangeReason</a></li>
--   <li><a>isTimeline</a> <tt>::</tt> <a>Maybe</a>
--   <a>InstanceTimeline</a></li>
--   </ul>
instanceStatus :: InstanceStatus

-- | The current state of the instance.
isState :: Lens' InstanceStatus (Maybe InstanceState)

-- | The details of the status change reason for the instance.
isStateChangeReason :: Lens' InstanceStatus (Maybe InstanceStateChangeReason)

-- | The timeline of the instance status over time.
isTimeline :: Lens' InstanceStatus (Maybe InstanceTimeline)
data InstanceRoleType

-- | CORE
IRTCore :: InstanceRoleType

-- | MASTER
IRTMaster :: InstanceRoleType

-- | TASK
IRTTask :: InstanceRoleType
data JobFlowInstancesConfig

-- | <a>JobFlowInstancesConfig</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>jficAdditionalMasterSecurityGroups</a> <tt>::</tt>
--   [<a>Text</a>]</li>
--   <li><a>jficAdditionalSlaveSecurityGroups</a> <tt>::</tt>
--   [<a>Text</a>]</li>
--   <li><a>jficEc2KeyName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>jficEc2SubnetId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>jficEmrManagedMasterSecurityGroup</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>jficEmrManagedSlaveSecurityGroup</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>jficHadoopVersion</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>jficInstanceCount</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>jficInstanceGroups</a> <tt>::</tt>
--   [<a>InstanceGroupConfig</a>]</li>
--   <li><a>jficKeepJobFlowAliveWhenNoSteps</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>jficMasterInstanceType</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>jficPlacement</a> <tt>::</tt> <a>Maybe</a>
--   <a>PlacementType</a></li>
--   <li><a>jficSlaveInstanceType</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>jficTerminationProtected</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   </ul>
jobFlowInstancesConfig :: JobFlowInstancesConfig

-- | A list of additional Amazon EC2 security group IDs for the master
--   node.
jficAdditionalMasterSecurityGroups :: Lens' JobFlowInstancesConfig [Text]

-- | A list of additional Amazon EC2 security group IDs for the slave
--   nodes.
jficAdditionalSlaveSecurityGroups :: Lens' JobFlowInstancesConfig [Text]

-- | The name of the Amazon EC2 key pair that can be used to ssh to the
--   master node as the user called "hadoop."
jficEc2KeyName :: Lens' JobFlowInstancesConfig (Maybe Text)

-- | To launch the job flow in Amazon Virtual Private Cloud (Amazon VPC),
--   set this parameter to the identifier of the Amazon VPC subnet where
--   you want the job flow to launch. If you do not specify this value, the
--   job flow is launched in the normal Amazon Web Services cloud, outside
--   of an Amazon VPC.
--   
--   Amazon VPC currently does not support cluster compute quadruple extra
--   large (cc1.4xlarge) instances. Thus you cannot specify the cc1.4xlarge
--   instance type for nodes of a job flow launched in a Amazon VPC.
jficEc2SubnetId :: Lens' JobFlowInstancesConfig (Maybe Text)

-- | The identifier of the Amazon EC2 security group (managed by Amazon
--   ElasticMapReduce) for the master node.
jficEmrManagedMasterSecurityGroup :: Lens' JobFlowInstancesConfig (Maybe Text)

-- | The identifier of the Amazon EC2 security group (managed by Amazon
--   ElasticMapReduce) for the slave nodes.
jficEmrManagedSlaveSecurityGroup :: Lens' JobFlowInstancesConfig (Maybe Text)

-- | The Hadoop version for the job flow. Valid inputs are "0.18", "0.20",
--   "0.20.205", "1.0.3", "2.2.0", or "2.4.0". If you do not set this
--   value, the default of 0.18 is used, unless the AmiVersion parameter is
--   set in the RunJobFlow call, in which case the default version of
--   Hadoop for that AMI version is used.
jficHadoopVersion :: Lens' JobFlowInstancesConfig (Maybe Text)

-- | The number of Amazon EC2 instances used to execute the job flow.
jficInstanceCount :: Lens' JobFlowInstancesConfig (Maybe Int)

-- | Configuration for the job flow's instance groups.
jficInstanceGroups :: Lens' JobFlowInstancesConfig [InstanceGroupConfig]

-- | Specifies whether the job flow should terminate after completing all
--   steps.
jficKeepJobFlowAliveWhenNoSteps :: Lens' JobFlowInstancesConfig (Maybe Bool)

-- | The EC2 instance type of the master node.
jficMasterInstanceType :: Lens' JobFlowInstancesConfig (Maybe Text)

-- | The Availability Zone the job flow will run in.
jficPlacement :: Lens' JobFlowInstancesConfig (Maybe PlacementType)

-- | The EC2 instance type of the slave nodes.
jficSlaveInstanceType :: Lens' JobFlowInstancesConfig (Maybe Text)

-- | Specifies whether to lock the job flow to prevent the Amazon EC2
--   instances from being terminated by API call, user intervention, or in
--   the event of a job flow error.
jficTerminationProtected :: Lens' JobFlowInstancesConfig (Maybe Bool)
data StepConfig

-- | <a>StepConfig</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>scActionOnFailure</a> <tt>::</tt> <a>Maybe</a>
--   <a>ActionOnFailure</a></li>
--   <li><a>scHadoopJarStep</a> <tt>::</tt> <a>HadoopJarStepConfig</a></li>
--   <li><a>scName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
stepConfig :: Text -> HadoopJarStepConfig -> StepConfig

-- | The action to take if the job flow step fails.
scActionOnFailure :: Lens' StepConfig (Maybe ActionOnFailure)

-- | The JAR file used for the job flow step.
scHadoopJarStep :: Lens' StepConfig HadoopJarStepConfig

-- | The name of the job flow step.
scName :: Lens' StepConfig Text
data InstanceGroup

-- | <a>InstanceGroup</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>igBidPrice</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>igId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>igInstanceGroupType</a> <tt>::</tt> <a>Maybe</a>
--   <a>InstanceGroupType</a></li>
--   <li><a>igInstanceType</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>igMarket</a> <tt>::</tt> <a>Maybe</a> <a>MarketType</a></li>
--   <li><a>igName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>igRequestedInstanceCount</a> <tt>::</tt> <a>Maybe</a>
--   <a>Int</a></li>
--   <li><a>igRunningInstanceCount</a> <tt>::</tt> <a>Maybe</a>
--   <a>Int</a></li>
--   <li><a>igStatus</a> <tt>::</tt> <a>Maybe</a>
--   <a>InstanceGroupStatus</a></li>
--   </ul>
instanceGroup :: InstanceGroup

-- | The bid price for each EC2 instance in the instance group when
--   launching nodes as Spot Instances, expressed in USD.
igBidPrice :: Lens' InstanceGroup (Maybe Text)

-- | The identifier of the instance group.
igId :: Lens' InstanceGroup (Maybe Text)

-- | The type of the instance group. Valid values are MASTER, CORE or TASK.
igInstanceGroupType :: Lens' InstanceGroup (Maybe InstanceGroupType)

-- | The EC2 instance type for all instances in the instance group.
igInstanceType :: Lens' InstanceGroup (Maybe Text)

-- | The marketplace to provision instances for this group. Valid values
--   are ON_DEMAND or SPOT.
igMarket :: Lens' InstanceGroup (Maybe MarketType)

-- | The name of the instance group.
igName :: Lens' InstanceGroup (Maybe Text)

-- | The target number of instances for the instance group.
igRequestedInstanceCount :: Lens' InstanceGroup (Maybe Int)

-- | The number of instances currently running in this instance group.
igRunningInstanceCount :: Lens' InstanceGroup (Maybe Int)

-- | The current status of the instance group.
igStatus :: Lens' InstanceGroup (Maybe InstanceGroupStatus)
data BootstrapActionConfig

-- | <a>BootstrapActionConfig</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>bacName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>bacScriptBootstrapAction</a> <tt>::</tt>
--   <a>ScriptBootstrapActionConfig</a></li>
--   </ul>
bootstrapActionConfig :: Text -> ScriptBootstrapActionConfig -> BootstrapActionConfig

-- | The name of the bootstrap action.
bacName :: Lens' BootstrapActionConfig Text

-- | The script run by the bootstrap action.
bacScriptBootstrapAction :: Lens' BootstrapActionConfig ScriptBootstrapActionConfig
data ClusterSummary

-- | <a>ClusterSummary</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>csId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>csName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>csNormalizedInstanceHours</a> <tt>::</tt> <a>Maybe</a>
--   <a>Int</a></li>
--   <li><a>csStatus</a> <tt>::</tt> <a>Maybe</a> <a>ClusterStatus</a></li>
--   </ul>
clusterSummary :: ClusterSummary

-- | The unique identifier for the cluster.
csId :: Lens' ClusterSummary (Maybe Text)

-- | The name of the cluster.
csName :: Lens' ClusterSummary (Maybe Text)

-- | An approximation of the cost of the job flow, represented in
--   m1.small/hours. This value is incremented one time for every hour an
--   m1.small instance runs. Larger instances are weighted more, so an EC2
--   instance that is roughly four times more expensive would result in the
--   normalized instance hours being incremented by four. This result is
--   only an approximation and does not reflect the actual billing rate.
csNormalizedInstanceHours :: Lens' ClusterSummary (Maybe Int)

-- | The details about the current status of the cluster.
csStatus :: Lens' ClusterSummary (Maybe ClusterStatus)
data JobFlowInstancesDetail

-- | <a>JobFlowInstancesDetail</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>jfidEc2KeyName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>jfidEc2SubnetId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>jfidHadoopVersion</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>jfidInstanceCount</a> <tt>::</tt> <a>Int</a></li>
--   <li><a>jfidInstanceGroups</a> <tt>::</tt>
--   [<a>InstanceGroupDetail</a>]</li>
--   <li><a>jfidKeepJobFlowAliveWhenNoSteps</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>jfidMasterInstanceId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>jfidMasterInstanceType</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>jfidMasterPublicDnsName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>jfidNormalizedInstanceHours</a> <tt>::</tt> <a>Maybe</a>
--   <a>Int</a></li>
--   <li><a>jfidPlacement</a> <tt>::</tt> <a>Maybe</a>
--   <a>PlacementType</a></li>
--   <li><a>jfidSlaveInstanceType</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>jfidTerminationProtected</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   </ul>
jobFlowInstancesDetail :: Text -> Text -> Int -> JobFlowInstancesDetail

-- | The name of an Amazon EC2 key pair that can be used to ssh to the
--   master node of job flow.
jfidEc2KeyName :: Lens' JobFlowInstancesDetail (Maybe Text)

-- | For job flows launched within Amazon Virtual Private Cloud, this value
--   specifies the identifier of the subnet where the job flow was
--   launched.
jfidEc2SubnetId :: Lens' JobFlowInstancesDetail (Maybe Text)

-- | The Hadoop version for the job flow.
jfidHadoopVersion :: Lens' JobFlowInstancesDetail (Maybe Text)

-- | The number of Amazon EC2 instances in the cluster. If the value is 1,
--   the same instance serves as both the master and slave node. If the
--   value is greater than 1, one instance is the master node and all
--   others are slave nodes.
jfidInstanceCount :: Lens' JobFlowInstancesDetail Int

-- | Details about the job flow's instance groups.
jfidInstanceGroups :: Lens' JobFlowInstancesDetail [InstanceGroupDetail]

-- | Specifies whether the job flow should terminate after completing all
--   steps.
jfidKeepJobFlowAliveWhenNoSteps :: Lens' JobFlowInstancesDetail (Maybe Bool)

-- | The Amazon EC2 instance identifier of the master node.
jfidMasterInstanceId :: Lens' JobFlowInstancesDetail (Maybe Text)

-- | The Amazon EC2 master node instance type.
jfidMasterInstanceType :: Lens' JobFlowInstancesDetail Text

-- | The DNS name of the master node.
jfidMasterPublicDnsName :: Lens' JobFlowInstancesDetail (Maybe Text)

-- | An approximation of the cost of the job flow, represented in
--   m1.small/hours. This value is incremented once for every hour an
--   m1.small runs. Larger instances are weighted more, so an Amazon EC2
--   instance that is roughly four times more expensive would result in the
--   normalized instance hours being incremented by four. This result is
--   only an approximation and does not reflect the actual billing rate.
jfidNormalizedInstanceHours :: Lens' JobFlowInstancesDetail (Maybe Int)

-- | The Amazon EC2 Availability Zone for the job flow.
jfidPlacement :: Lens' JobFlowInstancesDetail (Maybe PlacementType)

-- | The Amazon EC2 slave node instance type.
jfidSlaveInstanceType :: Lens' JobFlowInstancesDetail Text

-- | Specifies whether the Amazon EC2 instances in the cluster are
--   protected from termination by API calls, user intervention, or in the
--   event of a job flow error.
jfidTerminationProtected :: Lens' JobFlowInstancesDetail (Maybe Bool)
data ClusterStatus

-- | <a>ClusterStatus</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>csState</a> <tt>::</tt> <a>Maybe</a> <a>ClusterState</a></li>
--   <li><a>csStateChangeReason</a> <tt>::</tt> <a>Maybe</a>
--   <a>ClusterStateChangeReason</a></li>
--   <li><a>csTimeline</a> <tt>::</tt> <a>Maybe</a>
--   <a>ClusterTimeline</a></li>
--   </ul>
clusterStatus :: ClusterStatus

-- | The current state of the cluster.
csState :: Lens' ClusterStatus (Maybe ClusterState)

-- | The reason for the cluster status change.
csStateChangeReason :: Lens' ClusterStatus (Maybe ClusterStateChangeReason)

-- | A timeline that represents the status of a cluster over the lifetime
--   of the cluster.
csTimeline :: Lens' ClusterStatus (Maybe ClusterTimeline)
data InstanceState

-- | AWAITING_FULFILLMENT
ISAwaitingFulfillment :: InstanceState

-- | BOOTSTRAPPING
ISBootstrapping :: InstanceState

-- | PROVISIONING
ISProvisioning :: InstanceState

-- | RUNNING
ISRunning :: InstanceState

-- | TERMINATED
ISTerminated :: InstanceState
data ClusterTimeline

-- | <a>ClusterTimeline</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ctCreationDateTime</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>ctEndDateTime</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>ctReadyDateTime</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   </ul>
clusterTimeline :: ClusterTimeline

-- | The creation date and time of the cluster.
ctCreationDateTime :: Lens' ClusterTimeline (Maybe UTCTime)

-- | The date and time when the cluster was terminated.
ctEndDateTime :: Lens' ClusterTimeline (Maybe UTCTime)

-- | The date and time when the cluster was ready to execute steps.
ctReadyDateTime :: Lens' ClusterTimeline (Maybe UTCTime)
data InstanceStateChangeReasonCode

-- | BOOTSTRAP_FAILURE
ISCRCBootstrapFailure :: InstanceStateChangeReasonCode

-- | CLUSTER_TERMINATED
ISCRCClusterTerminated :: InstanceStateChangeReasonCode

-- | INSTANCE_FAILURE
ISCRCInstanceFailure :: InstanceStateChangeReasonCode

-- | INTERNAL_ERROR
ISCRCInternalError :: InstanceStateChangeReasonCode

-- | VALIDATION_ERROR
ISCRCValidationError :: InstanceStateChangeReasonCode
data Instance

-- | <a>Instance</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>iEc2InstanceId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iPrivateDnsName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iPrivateIpAddress</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iPublicDnsName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iPublicIpAddress</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iStatus</a> <tt>::</tt> <a>Maybe</a> <a>InstanceStatus</a></li>
--   </ul>
instance' :: Instance

-- | The unique identifier of the instance in Amazon EC2.
iEc2InstanceId :: Lens' Instance (Maybe Text)

-- | The unique identifier for the instance in Amazon EMR.
iId :: Lens' Instance (Maybe Text)

-- | The private DNS name of the instance.
iPrivateDnsName :: Lens' Instance (Maybe Text)

-- | The private IP address of the instance.
iPrivateIpAddress :: Lens' Instance (Maybe Text)

-- | The public DNS name of the instance.
iPublicDnsName :: Lens' Instance (Maybe Text)

-- | The public IP address of the instance.
iPublicIpAddress :: Lens' Instance (Maybe Text)

-- | The current status of the instance.
iStatus :: Lens' Instance (Maybe InstanceStatus)
data ScriptBootstrapActionConfig

-- | <a>ScriptBootstrapActionConfig</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sbacArgs</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>sbacPath</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
scriptBootstrapActionConfig :: Text -> ScriptBootstrapActionConfig

-- | A list of command line arguments to pass to the bootstrap action
--   script.
sbacArgs :: Lens' ScriptBootstrapActionConfig [Text]

-- | Location of the script to run during a bootstrap action. Can be either
--   a location in Amazon S3 or on a local file system.
sbacPath :: Lens' ScriptBootstrapActionConfig Text
instance Eq MarketType
instance Ord MarketType
instance Read MarketType
instance Show MarketType
instance Generic MarketType
instance Enum MarketType
instance Eq KeyValue
instance Ord KeyValue
instance Read KeyValue
instance Show KeyValue
instance Eq SupportedProductConfig
instance Ord SupportedProductConfig
instance Read SupportedProductConfig
instance Show SupportedProductConfig
instance Eq Command
instance Ord Command
instance Read Command
instance Show Command
instance Eq StepExecutionState
instance Ord StepExecutionState
instance Read StepExecutionState
instance Show StepExecutionState
instance Generic StepExecutionState
instance Enum StepExecutionState
instance Eq ActionOnFailure
instance Ord ActionOnFailure
instance Read ActionOnFailure
instance Show ActionOnFailure
instance Generic ActionOnFailure
instance Enum ActionOnFailure
instance Eq Tag
instance Ord Tag
instance Read Tag
instance Show Tag
instance Eq Application
instance Read Application
instance Show Application
instance Eq InstanceTimeline
instance Ord InstanceTimeline
instance Read InstanceTimeline
instance Show InstanceTimeline
instance Eq Ec2InstanceAttributes
instance Ord Ec2InstanceAttributes
instance Read Ec2InstanceAttributes
instance Show Ec2InstanceAttributes
instance Eq StepStateChangeReasonCode
instance Ord StepStateChangeReasonCode
instance Read StepStateChangeReasonCode
instance Show StepStateChangeReasonCode
instance Generic StepStateChangeReasonCode
instance Enum StepStateChangeReasonCode
instance Eq ClusterState
instance Ord ClusterState
instance Read ClusterState
instance Show ClusterState
instance Generic ClusterState
instance Enum ClusterState
instance Eq HadoopStepConfig
instance Read HadoopStepConfig
instance Show HadoopStepConfig
instance Eq JobFlowExecutionState
instance Ord JobFlowExecutionState
instance Read JobFlowExecutionState
instance Show JobFlowExecutionState
instance Generic JobFlowExecutionState
instance Enum JobFlowExecutionState
instance Eq JobFlowExecutionStatusDetail
instance Read JobFlowExecutionStatusDetail
instance Show JobFlowExecutionStatusDetail
instance Eq InstanceGroupType
instance Ord InstanceGroupType
instance Read InstanceGroupType
instance Show InstanceGroupType
instance Generic InstanceGroupType
instance Enum InstanceGroupType
instance Eq InstanceGroupStateChangeReasonCode
instance Ord InstanceGroupStateChangeReasonCode
instance Read InstanceGroupStateChangeReasonCode
instance Show InstanceGroupStateChangeReasonCode
instance Generic InstanceGroupStateChangeReasonCode
instance Enum InstanceGroupStateChangeReasonCode
instance Eq InstanceGroupStateChangeReason
instance Read InstanceGroupStateChangeReason
instance Show InstanceGroupStateChangeReason
instance Eq InstanceGroupState
instance Ord InstanceGroupState
instance Read InstanceGroupState
instance Show InstanceGroupState
instance Generic InstanceGroupState
instance Enum InstanceGroupState
instance Eq StepTimeline
instance Ord StepTimeline
instance Read StepTimeline
instance Show StepTimeline
instance Eq PlacementType
instance Ord PlacementType
instance Read PlacementType
instance Show PlacementType
instance Monoid PlacementType
instance IsString PlacementType
instance Eq HadoopJarStepConfig
instance Read HadoopJarStepConfig
instance Show HadoopJarStepConfig
instance Eq InstanceGroupModifyConfig
instance Ord InstanceGroupModifyConfig
instance Read InstanceGroupModifyConfig
instance Show InstanceGroupModifyConfig
instance Eq StepStateChangeReason
instance Read StepStateChangeReason
instance Show StepStateChangeReason
instance Eq ClusterStateChangeReasonCode
instance Ord ClusterStateChangeReasonCode
instance Read ClusterStateChangeReasonCode
instance Show ClusterStateChangeReasonCode
instance Generic ClusterStateChangeReasonCode
instance Enum ClusterStateChangeReasonCode
instance Eq ClusterStateChangeReason
instance Read ClusterStateChangeReason
instance Show ClusterStateChangeReason
instance Eq StepState
instance Ord StepState
instance Read StepState
instance Show StepState
instance Generic StepState
instance Enum StepState
instance Eq StepStatus
instance Read StepStatus
instance Show StepStatus
instance Eq Step
instance Read Step
instance Show Step
instance Eq StepSummary
instance Read StepSummary
instance Show StepSummary
instance Eq InstanceGroupTimeline
instance Ord InstanceGroupTimeline
instance Read InstanceGroupTimeline
instance Show InstanceGroupTimeline
instance Eq InstanceGroupStatus
instance Read InstanceGroupStatus
instance Show InstanceGroupStatus
instance Eq StepExecutionStatusDetail
instance Read StepExecutionStatusDetail
instance Show StepExecutionStatusDetail
instance Eq InstanceRoleType
instance Ord InstanceRoleType
instance Read InstanceRoleType
instance Show InstanceRoleType
instance Generic InstanceRoleType
instance Enum InstanceRoleType
instance Eq InstanceGroupDetail
instance Read InstanceGroupDetail
instance Show InstanceGroupDetail
instance Eq InstanceGroupConfig
instance Read InstanceGroupConfig
instance Show InstanceGroupConfig
instance Eq JobFlowInstancesConfig
instance Read JobFlowInstancesConfig
instance Show JobFlowInstancesConfig
instance Eq StepConfig
instance Read StepConfig
instance Show StepConfig
instance Eq StepDetail
instance Read StepDetail
instance Show StepDetail
instance Eq InstanceGroup
instance Read InstanceGroup
instance Show InstanceGroup
instance Eq JobFlowInstancesDetail
instance Read JobFlowInstancesDetail
instance Show JobFlowInstancesDetail
instance Eq InstanceState
instance Ord InstanceState
instance Read InstanceState
instance Show InstanceState
instance Generic InstanceState
instance Enum InstanceState
instance Eq ClusterTimeline
instance Ord ClusterTimeline
instance Read ClusterTimeline
instance Show ClusterTimeline
instance Eq ClusterStatus
instance Read ClusterStatus
instance Show ClusterStatus
instance Eq ClusterSummary
instance Read ClusterSummary
instance Show ClusterSummary
instance Eq Cluster
instance Read Cluster
instance Show Cluster
instance Eq InstanceStateChangeReasonCode
instance Ord InstanceStateChangeReasonCode
instance Read InstanceStateChangeReasonCode
instance Show InstanceStateChangeReasonCode
instance Generic InstanceStateChangeReasonCode
instance Enum InstanceStateChangeReasonCode
instance Eq InstanceStateChangeReason
instance Read InstanceStateChangeReason
instance Show InstanceStateChangeReason
instance Eq InstanceStatus
instance Read InstanceStatus
instance Show InstanceStatus
instance Eq Instance
instance Read Instance
instance Show Instance
instance Eq ScriptBootstrapActionConfig
instance Ord ScriptBootstrapActionConfig
instance Read ScriptBootstrapActionConfig
instance Show ScriptBootstrapActionConfig
instance Eq BootstrapActionConfig
instance Read BootstrapActionConfig
instance Show BootstrapActionConfig
instance Eq BootstrapActionDetail
instance Read BootstrapActionDetail
instance Show BootstrapActionDetail
instance Eq JobFlowDetail
instance Read JobFlowDetail
instance Show JobFlowDetail
instance Datatype D1MarketType
instance Constructor C1_0MarketType
instance Constructor C1_1MarketType
instance Datatype D1StepExecutionState
instance Constructor C1_0StepExecutionState
instance Constructor C1_1StepExecutionState
instance Constructor C1_2StepExecutionState
instance Constructor C1_3StepExecutionState
instance Constructor C1_4StepExecutionState
instance Constructor C1_5StepExecutionState
instance Constructor C1_6StepExecutionState
instance Datatype D1ActionOnFailure
instance Constructor C1_0ActionOnFailure
instance Constructor C1_1ActionOnFailure
instance Constructor C1_2ActionOnFailure
instance Constructor C1_3ActionOnFailure
instance Datatype D1StepStateChangeReasonCode
instance Constructor C1_0StepStateChangeReasonCode
instance Datatype D1ClusterState
instance Constructor C1_0ClusterState
instance Constructor C1_1ClusterState
instance Constructor C1_2ClusterState
instance Constructor C1_3ClusterState
instance Constructor C1_4ClusterState
instance Constructor C1_5ClusterState
instance Constructor C1_6ClusterState
instance Datatype D1JobFlowExecutionState
instance Constructor C1_0JobFlowExecutionState
instance Constructor C1_1JobFlowExecutionState
instance Constructor C1_2JobFlowExecutionState
instance Constructor C1_3JobFlowExecutionState
instance Constructor C1_4JobFlowExecutionState
instance Constructor C1_5JobFlowExecutionState
instance Constructor C1_6JobFlowExecutionState
instance Constructor C1_7JobFlowExecutionState
instance Datatype D1InstanceGroupType
instance Constructor C1_0InstanceGroupType
instance Constructor C1_1InstanceGroupType
instance Constructor C1_2InstanceGroupType
instance Datatype D1InstanceGroupStateChangeReasonCode
instance Constructor C1_0InstanceGroupStateChangeReasonCode
instance Constructor C1_1InstanceGroupStateChangeReasonCode
instance Constructor C1_2InstanceGroupStateChangeReasonCode
instance Constructor C1_3InstanceGroupStateChangeReasonCode
instance Datatype D1InstanceGroupState
instance Constructor C1_0InstanceGroupState
instance Constructor C1_1InstanceGroupState
instance Constructor C1_2InstanceGroupState
instance Constructor C1_3InstanceGroupState
instance Constructor C1_4InstanceGroupState
instance Constructor C1_5InstanceGroupState
instance Constructor C1_6InstanceGroupState
instance Constructor C1_7InstanceGroupState
instance Constructor C1_8InstanceGroupState
instance Constructor C1_9InstanceGroupState
instance Datatype D1ClusterStateChangeReasonCode
instance Constructor C1_0ClusterStateChangeReasonCode
instance Constructor C1_1ClusterStateChangeReasonCode
instance Constructor C1_2ClusterStateChangeReasonCode
instance Constructor C1_3ClusterStateChangeReasonCode
instance Constructor C1_4ClusterStateChangeReasonCode
instance Constructor C1_5ClusterStateChangeReasonCode
instance Constructor C1_6ClusterStateChangeReasonCode
instance Datatype D1StepState
instance Constructor C1_0StepState
instance Constructor C1_1StepState
instance Constructor C1_2StepState
instance Constructor C1_3StepState
instance Constructor C1_4StepState
instance Constructor C1_5StepState
instance Datatype D1InstanceRoleType
instance Constructor C1_0InstanceRoleType
instance Constructor C1_1InstanceRoleType
instance Constructor C1_2InstanceRoleType
instance Datatype D1InstanceState
instance Constructor C1_0InstanceState
instance Constructor C1_1InstanceState
instance Constructor C1_2InstanceState
instance Constructor C1_3InstanceState
instance Constructor C1_4InstanceState
instance Datatype D1InstanceStateChangeReasonCode
instance Constructor C1_0InstanceStateChangeReasonCode
instance Constructor C1_1InstanceStateChangeReasonCode
instance Constructor C1_2InstanceStateChangeReasonCode
instance Constructor C1_3InstanceStateChangeReasonCode
instance Constructor C1_4InstanceStateChangeReasonCode
instance ToJSON ScriptBootstrapActionConfig
instance FromJSON ScriptBootstrapActionConfig
instance ToJSON Instance
instance FromJSON Instance
instance ToJSON InstanceStateChangeReasonCode
instance FromJSON InstanceStateChangeReasonCode
instance ToQuery InstanceStateChangeReasonCode
instance ToHeader InstanceStateChangeReasonCode
instance ToByteString InstanceStateChangeReasonCode
instance ToText InstanceStateChangeReasonCode
instance FromText InstanceStateChangeReasonCode
instance Hashable InstanceStateChangeReasonCode
instance ToJSON ClusterTimeline
instance FromJSON ClusterTimeline
instance ToJSON InstanceState
instance FromJSON InstanceState
instance ToQuery InstanceState
instance ToHeader InstanceState
instance ToByteString InstanceState
instance ToText InstanceState
instance FromText InstanceState
instance Hashable InstanceState
instance ToJSON ClusterStatus
instance FromJSON ClusterStatus
instance ToJSON JobFlowInstancesDetail
instance FromJSON JobFlowInstancesDetail
instance ToJSON ClusterSummary
instance FromJSON ClusterSummary
instance ToJSON BootstrapActionConfig
instance FromJSON BootstrapActionConfig
instance ToJSON InstanceGroup
instance FromJSON InstanceGroup
instance ToJSON StepConfig
instance FromJSON StepConfig
instance ToJSON JobFlowInstancesConfig
instance FromJSON JobFlowInstancesConfig
instance ToJSON InstanceRoleType
instance FromJSON InstanceRoleType
instance ToQuery InstanceRoleType
instance ToHeader InstanceRoleType
instance ToByteString InstanceRoleType
instance ToText InstanceRoleType
instance FromText InstanceRoleType
instance Hashable InstanceRoleType
instance ToJSON InstanceStatus
instance FromJSON InstanceStatus
instance ToJSON StepExecutionStatusDetail
instance FromJSON StepExecutionStatusDetail
instance ToJSON BootstrapActionDetail
instance FromJSON BootstrapActionDetail
instance ToJSON InstanceGroupTimeline
instance FromJSON InstanceGroupTimeline
instance ToJSON StepState
instance FromJSON StepState
instance ToQuery StepState
instance ToHeader StepState
instance ToByteString StepState
instance ToText StepState
instance FromText StepState
instance Hashable StepState
instance ToJSON Step
instance FromJSON Step
instance ToJSON ClusterStateChangeReasonCode
instance FromJSON ClusterStateChangeReasonCode
instance ToQuery ClusterStateChangeReasonCode
instance ToHeader ClusterStateChangeReasonCode
instance ToByteString ClusterStateChangeReasonCode
instance ToText ClusterStateChangeReasonCode
instance FromText ClusterStateChangeReasonCode
instance Hashable ClusterStateChangeReasonCode
instance ToJSON StepStateChangeReason
instance FromJSON StepStateChangeReason
instance ToJSON InstanceGroupDetail
instance FromJSON InstanceGroupDetail
instance ToJSON InstanceGroupModifyConfig
instance FromJSON InstanceGroupModifyConfig
instance ToJSON HadoopJarStepConfig
instance FromJSON HadoopJarStepConfig
instance ToJSON PlacementType
instance FromJSON PlacementType
instance ToJSON StepTimeline
instance FromJSON StepTimeline
instance ToJSON InstanceGroupState
instance FromJSON InstanceGroupState
instance ToQuery InstanceGroupState
instance ToHeader InstanceGroupState
instance ToByteString InstanceGroupState
instance ToText InstanceGroupState
instance FromText InstanceGroupState
instance Hashable InstanceGroupState
instance ToJSON StepSummary
instance FromJSON StepSummary
instance ToJSON StepStatus
instance FromJSON StepStatus
instance ToJSON InstanceGroupStateChangeReasonCode
instance FromJSON InstanceGroupStateChangeReasonCode
instance ToQuery InstanceGroupStateChangeReasonCode
instance ToHeader InstanceGroupStateChangeReasonCode
instance ToByteString InstanceGroupStateChangeReasonCode
instance ToText InstanceGroupStateChangeReasonCode
instance FromText InstanceGroupStateChangeReasonCode
instance Hashable InstanceGroupStateChangeReasonCode
instance ToJSON InstanceGroupType
instance FromJSON InstanceGroupType
instance ToQuery InstanceGroupType
instance ToHeader InstanceGroupType
instance ToByteString InstanceGroupType
instance ToText InstanceGroupType
instance FromText InstanceGroupType
instance Hashable InstanceGroupType
instance ToJSON InstanceGroupStateChangeReason
instance FromJSON InstanceGroupStateChangeReason
instance ToJSON StepDetail
instance FromJSON StepDetail
instance ToJSON JobFlowExecutionState
instance FromJSON JobFlowExecutionState
instance ToQuery JobFlowExecutionState
instance ToHeader JobFlowExecutionState
instance ToByteString JobFlowExecutionState
instance ToText JobFlowExecutionState
instance FromText JobFlowExecutionState
instance Hashable JobFlowExecutionState
instance ToJSON HadoopStepConfig
instance FromJSON HadoopStepConfig
instance ToJSON ClusterState
instance FromJSON ClusterState
instance ToQuery ClusterState
instance ToHeader ClusterState
instance ToByteString ClusterState
instance ToText ClusterState
instance FromText ClusterState
instance Hashable ClusterState
instance ToJSON StepStateChangeReasonCode
instance FromJSON StepStateChangeReasonCode
instance ToQuery StepStateChangeReasonCode
instance ToHeader StepStateChangeReasonCode
instance ToByteString StepStateChangeReasonCode
instance ToText StepStateChangeReasonCode
instance FromText StepStateChangeReasonCode
instance Hashable StepStateChangeReasonCode
instance ToJSON Ec2InstanceAttributes
instance FromJSON Ec2InstanceAttributes
instance ToJSON InstanceTimeline
instance FromJSON InstanceTimeline
instance ToJSON Cluster
instance FromJSON Cluster
instance ToJSON InstanceGroupStatus
instance FromJSON InstanceGroupStatus
instance ToJSON JobFlowExecutionStatusDetail
instance FromJSON JobFlowExecutionStatusDetail
instance ToJSON Application
instance FromJSON Application
instance ToJSON Tag
instance FromJSON Tag
instance ToJSON ClusterStateChangeReason
instance FromJSON ClusterStateChangeReason
instance ToJSON ActionOnFailure
instance FromJSON ActionOnFailure
instance ToQuery ActionOnFailure
instance ToHeader ActionOnFailure
instance ToByteString ActionOnFailure
instance ToText ActionOnFailure
instance FromText ActionOnFailure
instance Hashable ActionOnFailure
instance ToJSON StepExecutionState
instance FromJSON StepExecutionState
instance ToQuery StepExecutionState
instance ToHeader StepExecutionState
instance ToByteString StepExecutionState
instance ToText StepExecutionState
instance FromText StepExecutionState
instance Hashable StepExecutionState
instance ToJSON Command
instance FromJSON Command
instance ToJSON SupportedProductConfig
instance FromJSON SupportedProductConfig
instance ToJSON KeyValue
instance FromJSON KeyValue
instance ToJSON JobFlowDetail
instance FromJSON JobFlowDetail
instance ToJSON InstanceStateChangeReason
instance FromJSON InstanceStateChangeReason
instance ToJSON InstanceGroupConfig
instance FromJSON InstanceGroupConfig
instance ToJSON MarketType
instance FromJSON MarketType
instance ToQuery MarketType
instance ToHeader MarketType
instance ToByteString MarketType
instance ToText MarketType
instance FromText MarketType
instance Hashable MarketType
instance AWSService EMR


-- | TerminateJobFlows shuts a list of job flows down. When a job flow is
--   shut down, any step not yet completed is canceled and the EC2
--   instances on which the job flow is running are stopped. Any log files
--   not already saved are uploaded to Amazon S3 if a LogUri was specified
--   when the job flow was created.
--   
--   The maximum number of JobFlows allowed is 10. The call to
--   TerminateJobFlows is asynchronous. Depending on the configuration of
--   the job flow, it may take up to 5-20 minutes for the job flow to
--   completely terminate and release allocated resources, such as Amazon
--   EC2 instances.
--   
--   
--   <a>http://docs.aws.amazon.com/ElasticMapReduce/latest/API/API_TerminateJobFlows.html</a>
module Network.AWS.EMR.TerminateJobFlows
data TerminateJobFlows

-- | <a>TerminateJobFlows</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>tjfJobFlowIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
terminateJobFlows :: TerminateJobFlows

-- | A list of job flows to be shutdown.
tjfJobFlowIds :: Lens' TerminateJobFlows [Text]
data TerminateJobFlowsResponse

-- | <a>TerminateJobFlowsResponse</a> constructor.
terminateJobFlowsResponse :: TerminateJobFlowsResponse
instance Eq TerminateJobFlows
instance Ord TerminateJobFlows
instance Read TerminateJobFlows
instance Show TerminateJobFlows
instance Monoid TerminateJobFlows
instance Semigroup TerminateJobFlows
instance Eq TerminateJobFlowsResponse
instance Ord TerminateJobFlowsResponse
instance Read TerminateJobFlowsResponse
instance Show TerminateJobFlowsResponse
instance Generic TerminateJobFlowsResponse
instance Datatype D1TerminateJobFlowsResponse
instance Constructor C1_0TerminateJobFlowsResponse
instance AWSRequest TerminateJobFlows
instance ToJSON TerminateJobFlows
instance ToHeaders TerminateJobFlows
instance ToQuery TerminateJobFlows
instance ToPath TerminateJobFlows
instance IsList TerminateJobFlows


-- | Sets whether all AWS Identity and Access Management (IAM) users under
--   your account can access the specified job flows. This action works on
--   running job flows. You can also set the visibility of a job flow when
--   you launch it using the <tt>VisibleToAllUsers</tt> parameter of
--   <tt>RunJobFlow</tt>. The SetVisibleToAllUsers action can be called
--   only by an IAM user who created the job flow or the AWS account that
--   owns the job flow.
--   
--   
--   <a>http://docs.aws.amazon.com/ElasticMapReduce/latest/API/API_SetVisibleToAllUsers.html</a>
module Network.AWS.EMR.SetVisibleToAllUsers
data SetVisibleToAllUsers

-- | <a>SetVisibleToAllUsers</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>svtauJobFlowIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>svtauVisibleToAllUsers</a> <tt>::</tt> <a>Bool</a></li>
--   </ul>
setVisibleToAllUsers :: Bool -> SetVisibleToAllUsers

-- | Identifiers of the job flows to receive the new visibility setting.
svtauJobFlowIds :: Lens' SetVisibleToAllUsers [Text]

-- | Whether the specified job flows are visible to all IAM users of the
--   AWS account associated with the job flow. If this value is set to
--   True, all IAM users of that AWS account can view and, if they have the
--   proper IAM policy permissions set, manage the job flows. If it is set
--   to False, only the IAM user that created a job flow can view and
--   manage it.
svtauVisibleToAllUsers :: Lens' SetVisibleToAllUsers Bool
data SetVisibleToAllUsersResponse

-- | <a>SetVisibleToAllUsersResponse</a> constructor.
setVisibleToAllUsersResponse :: SetVisibleToAllUsersResponse
instance Eq SetVisibleToAllUsers
instance Ord SetVisibleToAllUsers
instance Read SetVisibleToAllUsers
instance Show SetVisibleToAllUsers
instance Eq SetVisibleToAllUsersResponse
instance Ord SetVisibleToAllUsersResponse
instance Read SetVisibleToAllUsersResponse
instance Show SetVisibleToAllUsersResponse
instance Generic SetVisibleToAllUsersResponse
instance Datatype D1SetVisibleToAllUsersResponse
instance Constructor C1_0SetVisibleToAllUsersResponse
instance AWSRequest SetVisibleToAllUsers
instance ToJSON SetVisibleToAllUsers
instance ToHeaders SetVisibleToAllUsers
instance ToQuery SetVisibleToAllUsers
instance ToPath SetVisibleToAllUsers


-- | SetTerminationProtection locks a job flow so the Amazon EC2 instances
--   in the cluster cannot be terminated by user intervention, an API call,
--   or in the event of a job-flow error. The cluster still terminates upon
--   successful completion of the job flow. Calling
--   SetTerminationProtection on a job flow is analogous to calling the
--   Amazon EC2 DisableAPITermination API on all of the EC2 instances in a
--   cluster.
--   
--   SetTerminationProtection is used to prevent accidental termination of
--   a job flow and to ensure that in the event of an error, the instances
--   will persist so you can recover any data stored in their ephemeral
--   instance storage.
--   
--   To terminate a job flow that has been locked by setting
--   SetTerminationProtection to <tt>true</tt>, you must first unlock the
--   job flow by a subsequent call to SetTerminationProtection in which you
--   set the value to <tt>false</tt>.
--   
--   For more information, go to <a>Protecting a Job Flow from
--   Termination</a> in the <i>Amazon Elastic MapReduce Developer's
--   Guide.</i>
--   
--   
--   <a>http://docs.aws.amazon.com/ElasticMapReduce/latest/API/API_SetTerminationProtection.html</a>
module Network.AWS.EMR.SetTerminationProtection
data SetTerminationProtection

-- | <a>SetTerminationProtection</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>stpJobFlowIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>stpTerminationProtected</a> <tt>::</tt> <a>Bool</a></li>
--   </ul>
setTerminationProtection :: Bool -> SetTerminationProtection

-- | A list of strings that uniquely identify the job flows to protect.
--   This identifier is returned by <tt>RunJobFlow</tt> and can also be
--   obtained from <tt>DescribeJobFlows</tt> .
stpJobFlowIds :: Lens' SetTerminationProtection [Text]

-- | A Boolean that indicates whether to protect the job flow and prevent
--   the Amazon EC2 instances in the cluster from shutting down due to API
--   calls, user intervention, or job-flow error.
stpTerminationProtected :: Lens' SetTerminationProtection Bool
data SetTerminationProtectionResponse

-- | <a>SetTerminationProtectionResponse</a> constructor.
setTerminationProtectionResponse :: SetTerminationProtectionResponse
instance Eq SetTerminationProtection
instance Ord SetTerminationProtection
instance Read SetTerminationProtection
instance Show SetTerminationProtection
instance Eq SetTerminationProtectionResponse
instance Ord SetTerminationProtectionResponse
instance Read SetTerminationProtectionResponse
instance Show SetTerminationProtectionResponse
instance Generic SetTerminationProtectionResponse
instance Datatype D1SetTerminationProtectionResponse
instance Constructor C1_0SetTerminationProtectionResponse
instance AWSRequest SetTerminationProtection
instance ToJSON SetTerminationProtection
instance ToHeaders SetTerminationProtection
instance ToQuery SetTerminationProtection
instance ToPath SetTerminationProtection


-- | RunJobFlow creates and starts running a new job flow. The job flow
--   will run the steps specified. Once the job flow completes, the cluster
--   is stopped and the HDFS partition is lost. To prevent loss of data,
--   configure the last step of the job flow to store results in Amazon S3.
--   If the <a>JobFlowInstancesConfig</a>
--   <tt>KeepJobFlowAliveWhenNoSteps</tt> parameter is set to
--   <tt>TRUE</tt>, the job flow will transition to the WAITING state
--   rather than shutting down once the steps have completed.
--   
--   For additional protection, you can set the
--   <a>JobFlowInstancesConfig</a> <tt>TerminationProtected</tt> parameter
--   to <tt>TRUE</tt> to lock the job flow and prevent it from being
--   terminated by API call, user intervention, or in the event of a job
--   flow error.
--   
--   A maximum of 256 steps are allowed in each job flow.
--   
--   If your job flow is long-running (such as a Hive data warehouse) or
--   complex, you may require more than 256 steps to process your data. You
--   can bypass the 256-step limitation in various ways, including using
--   the SSH shell to connect to the master node and submitting queries
--   directly to the software running on the master node, such as Hive and
--   Hadoop. For more information on how to do this, go to <a>Add More than
--   256 Steps to a Job Flow</a> in the <i>Amazon ElasticMapReduce
--   Developer's Guide</i>.
--   
--   For long running job flows, we recommend that you periodically store
--   your results.
--   
--   
--   <a>http://docs.aws.amazon.com/ElasticMapReduce/latest/API/API_RunJobFlow.html</a>
module Network.AWS.EMR.RunJobFlow
data RunJobFlow

-- | <a>RunJobFlow</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rjfAdditionalInfo</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rjfAmiVersion</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rjfBootstrapActions</a> <tt>::</tt>
--   [<a>BootstrapActionConfig</a>]</li>
--   <li><a>rjfInstances</a> <tt>::</tt> <a>JobFlowInstancesConfig</a></li>
--   <li><a>rjfJobFlowRole</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rjfLogUri</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rjfName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rjfNewSupportedProducts</a> <tt>::</tt>
--   [<a>SupportedProductConfig</a>]</li>
--   <li><a>rjfServiceRole</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rjfSteps</a> <tt>::</tt> [<a>StepConfig</a>]</li>
--   <li><a>rjfSupportedProducts</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>rjfTags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   <li><a>rjfVisibleToAllUsers</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   </ul>
runJobFlow :: Text -> JobFlowInstancesConfig -> RunJobFlow

-- | A JSON string for selecting additional features.
rjfAdditionalInfo :: Lens' RunJobFlow (Maybe Text)

-- | The version of the Amazon Machine Image (AMI) to use when launching
--   Amazon EC2 instances in the job flow. The following values are valid:
--   
--   "latest" (uses the latest AMI) The version number of the AMI to use,
--   for example, "2.0" If the AMI supports multiple versions of Hadoop
--   (for example, AMI 1.0 supports both Hadoop 0.18 and 0.20) you can use
--   the <a>JobFlowInstancesConfig</a> <tt>HadoopVersion</tt> parameter to
--   modify the version of Hadoop from the defaults shown above.
--   
--   For details about the AMI versions currently supported by Amazon
--   Elastic MapReduce, go to <a>AMI Versions Supported in Elastic
--   MapReduce</a> in the <i>AmazonElastic MapReduce Developer's Guide.</i>
rjfAmiVersion :: Lens' RunJobFlow (Maybe Text)

-- | A list of bootstrap actions that will be run before Hadoop is started
--   on the cluster nodes.
rjfBootstrapActions :: Lens' RunJobFlow [BootstrapActionConfig]

-- | A specification of the number and type of Amazon EC2 instances on
--   which to run the job flow.
rjfInstances :: Lens' RunJobFlow JobFlowInstancesConfig

-- | An IAM role for the job flow. The EC2 instances of the job flow assume
--   this role. The default role is <tt>EMRJobflowDefault</tt>. In order to
--   use the default role, you must have already created it using the CLI.
rjfJobFlowRole :: Lens' RunJobFlow (Maybe Text)

-- | The location in Amazon S3 to write the log files of the job flow. If a
--   value is not provided, logs are not created.
rjfLogUri :: Lens' RunJobFlow (Maybe Text)

-- | The name of the job flow.
rjfName :: Lens' RunJobFlow Text

-- | A list of strings that indicates third-party software to use with the
--   job flow that accepts a user argument list. EMR accepts and forwards
--   the argument list to the corresponding installation script as
--   bootstrap action arguments. For more information, see <a>Launch a Job
--   Flow on the MapR Distribution forHadoop</a>. Currently supported
--   values are:
--   
--   "mapr-m3" - launch the job flow using MapR M3 Edition. "mapr-m5" -
--   launch the job flow using MapR M5 Edition. "mapr" with the user
--   arguments specifying "--edition,m3" or "--edition,m5" - launch the job
--   flow using MapR M3 or M5 Edition respectively.
rjfNewSupportedProducts :: Lens' RunJobFlow [SupportedProductConfig]

-- | The IAM role that will be assumed by the Amazon EMR service to access
--   AWS resources on your behalf.
rjfServiceRole :: Lens' RunJobFlow (Maybe Text)

-- | A list of steps to be executed by the job flow.
rjfSteps :: Lens' RunJobFlow [StepConfig]

-- | A list of strings that indicates third-party software to use with the
--   job flow. For more information, go to <a>Use Third Party Applications
--   with Amazon EMR</a> . Currently supported values are:
--   
--   "mapr-m3" - launch the job flow using MapR M3 Edition. "mapr-m5" -
--   launch the job flow using MapR M5 Edition.
rjfSupportedProducts :: Lens' RunJobFlow [Text]

-- | A list of tags to associate with a cluster and propagate to Amazon EC2
--   instances.
rjfTags :: Lens' RunJobFlow [Tag]

-- | Whether the job flow is visible to all IAM users of the AWS account
--   associated with the job flow. If this value is set to <tt>true</tt>,
--   all IAM users of that AWS account can view and (if they have the
--   proper policy permissions set) manage the job flow. If it is set to
--   <tt>false</tt>, only the IAM user that created the job flow can view
--   and manage it.
rjfVisibleToAllUsers :: Lens' RunJobFlow (Maybe Bool)
data RunJobFlowResponse

-- | <a>RunJobFlowResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rjfrJobFlowId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
runJobFlowResponse :: RunJobFlowResponse

-- | An unique identifier for the job flow.
rjfrJobFlowId :: Lens' RunJobFlowResponse (Maybe Text)
instance Eq RunJobFlow
instance Read RunJobFlow
instance Show RunJobFlow
instance Eq RunJobFlowResponse
instance Ord RunJobFlowResponse
instance Read RunJobFlowResponse
instance Show RunJobFlowResponse
instance Monoid RunJobFlowResponse
instance FromJSON RunJobFlowResponse
instance AWSRequest RunJobFlow
instance ToJSON RunJobFlow
instance ToHeaders RunJobFlow
instance ToQuery RunJobFlow
instance ToPath RunJobFlow


-- | Removes tags from an Amazon EMR resource. Tags make it easier to
--   associate clusters in various ways, such as grouping clusters to track
--   your Amazon EMR resource allocation costs. For more information, see
--   <a>Tagging Amazon EMRResources</a>.
--   
--   The following example removes the stack tag with value Prod from a
--   cluster:
--   
--   
--   <a>http://docs.aws.amazon.com/ElasticMapReduce/latest/API/API_RemoveTags.html</a>
module Network.AWS.EMR.RemoveTags
data RemoveTags

-- | <a>RemoveTags</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rtResourceId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rtTagKeys</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
removeTags :: Text -> RemoveTags

-- | The Amazon EMR resource identifier from which tags will be removed.
--   This value must be a cluster identifier.
rtResourceId :: Lens' RemoveTags Text

-- | A list of tag keys to remove from a resource.
rtTagKeys :: Lens' RemoveTags [Text]
data RemoveTagsResponse

-- | <a>RemoveTagsResponse</a> constructor.
removeTagsResponse :: RemoveTagsResponse
instance Eq RemoveTags
instance Ord RemoveTags
instance Read RemoveTags
instance Show RemoveTags
instance Eq RemoveTagsResponse
instance Ord RemoveTagsResponse
instance Read RemoveTagsResponse
instance Show RemoveTagsResponse
instance Generic RemoveTagsResponse
instance Datatype D1RemoveTagsResponse
instance Constructor C1_0RemoveTagsResponse
instance AWSRequest RemoveTags
instance ToJSON RemoveTags
instance ToHeaders RemoveTags
instance ToQuery RemoveTags
instance ToPath RemoveTags


-- | ModifyInstanceGroups modifies the number of nodes and configuration
--   settings of an instance group. The input parameters include the new
--   target instance count for the group and the instance group ID. The
--   call will either succeed or fail atomically.
--   
--   
--   <a>http://docs.aws.amazon.com/ElasticMapReduce/latest/API/API_ModifyInstanceGroups.html</a>
module Network.AWS.EMR.ModifyInstanceGroups
data ModifyInstanceGroups

-- | <a>ModifyInstanceGroups</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>migInstanceGroups</a> <tt>::</tt>
--   [<a>InstanceGroupModifyConfig</a>]</li>
--   </ul>
modifyInstanceGroups :: ModifyInstanceGroups

-- | Instance groups to change.
migInstanceGroups :: Lens' ModifyInstanceGroups [InstanceGroupModifyConfig]
data ModifyInstanceGroupsResponse

-- | <a>ModifyInstanceGroupsResponse</a> constructor.
modifyInstanceGroupsResponse :: ModifyInstanceGroupsResponse
instance Eq ModifyInstanceGroups
instance Read ModifyInstanceGroups
instance Show ModifyInstanceGroups
instance Monoid ModifyInstanceGroups
instance Semigroup ModifyInstanceGroups
instance Eq ModifyInstanceGroupsResponse
instance Ord ModifyInstanceGroupsResponse
instance Read ModifyInstanceGroupsResponse
instance Show ModifyInstanceGroupsResponse
instance Generic ModifyInstanceGroupsResponse
instance Datatype D1ModifyInstanceGroupsResponse
instance Constructor C1_0ModifyInstanceGroupsResponse
instance AWSRequest ModifyInstanceGroups
instance ToJSON ModifyInstanceGroups
instance ToHeaders ModifyInstanceGroups
instance ToQuery ModifyInstanceGroups
instance ToPath ModifyInstanceGroups
instance IsList ModifyInstanceGroups


-- | Provides a list of steps for the cluster.
--   
--   
--   <a>http://docs.aws.amazon.com/ElasticMapReduce/latest/API/API_ListSteps.html</a>
module Network.AWS.EMR.ListSteps
data ListSteps

-- | <a>ListSteps</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lsClusterId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>lsMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lsStepIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>lsStepStates</a> <tt>::</tt> [<a>StepState</a>]</li>
--   </ul>
listSteps :: Text -> ListSteps

-- | The identifier of the cluster for which to list the steps.
lsClusterId :: Lens' ListSteps Text

-- | The pagination token that indicates the next set of results to
--   retrieve.
lsMarker :: Lens' ListSteps (Maybe Text)

-- | The filter to limit the step list based on the identifier of the
--   steps.
lsStepIds :: Lens' ListSteps [Text]

-- | The filter to limit the step list based on certain states.
lsStepStates :: Lens' ListSteps [StepState]
data ListStepsResponse

-- | <a>ListStepsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lsrMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lsrSteps</a> <tt>::</tt> [<a>StepSummary</a>]</li>
--   </ul>
listStepsResponse :: ListStepsResponse

-- | The pagination token that indicates the next set of results to
--   retrieve.
lsrMarker :: Lens' ListStepsResponse (Maybe Text)

-- | The filtered list of steps for the cluster.
lsrSteps :: Lens' ListStepsResponse [StepSummary]
instance Eq ListSteps
instance Read ListSteps
instance Show ListSteps
instance Eq ListStepsResponse
instance Read ListStepsResponse
instance Show ListStepsResponse
instance AWSPager ListSteps
instance FromJSON ListStepsResponse
instance AWSRequest ListSteps
instance ToJSON ListSteps
instance ToHeaders ListSteps
instance ToQuery ListSteps
instance ToPath ListSteps


-- | Provides information about the cluster instances that Amazon EMR
--   provisions on behalf of a user when it creates the cluster. For
--   example, this operation indicates when the EC2 instances reach the
--   Ready state, when instances become available to Amazon EMR to use for
--   jobs, and the IP addresses for cluster instances, etc.
--   
--   
--   <a>http://docs.aws.amazon.com/ElasticMapReduce/latest/API/API_ListInstances.html</a>
module Network.AWS.EMR.ListInstances
data ListInstances

-- | <a>ListInstances</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>liClusterId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>liInstanceGroupId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>liInstanceGroupTypes</a> <tt>::</tt>
--   [<a>InstanceGroupType</a>]</li>
--   <li><a>liMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listInstances :: Text -> ListInstances

-- | The identifier of the cluster for which to list the instances.
liClusterId :: Lens' ListInstances Text

-- | The identifier of the instance group for which to list the instances.
liInstanceGroupId :: Lens' ListInstances (Maybe Text)

-- | The type of instance group for which to list the instances.
liInstanceGroupTypes :: Lens' ListInstances [InstanceGroupType]

-- | The pagination token that indicates the next set of results to
--   retrieve.
liMarker :: Lens' ListInstances (Maybe Text)
data ListInstancesResponse

-- | <a>ListInstancesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lirInstances</a> <tt>::</tt> [<a>Instance</a>]</li>
--   <li><a>lirMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listInstancesResponse :: ListInstancesResponse

-- | The list of instances for the cluster and given filters.
lirInstances :: Lens' ListInstancesResponse [Instance]

-- | The pagination token that indicates the next set of results to
--   retrieve.
lirMarker :: Lens' ListInstancesResponse (Maybe Text)
instance Eq ListInstances
instance Read ListInstances
instance Show ListInstances
instance Eq ListInstancesResponse
instance Read ListInstancesResponse
instance Show ListInstancesResponse
instance AWSPager ListInstances
instance FromJSON ListInstancesResponse
instance AWSRequest ListInstances
instance ToJSON ListInstances
instance ToHeaders ListInstances
instance ToQuery ListInstances
instance ToPath ListInstances


-- | Provides all available details about the instance groups in a cluster.
--   
--   
--   <a>http://docs.aws.amazon.com/ElasticMapReduce/latest/API/API_ListInstanceGroups.html</a>
module Network.AWS.EMR.ListInstanceGroups
data ListInstanceGroups

-- | <a>ListInstanceGroups</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ligClusterId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ligMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listInstanceGroups :: Text -> ListInstanceGroups

-- | The identifier of the cluster for which to list the instance groups.
ligClusterId :: Lens' ListInstanceGroups Text

-- | The pagination token that indicates the next set of results to
--   retrieve.
ligMarker :: Lens' ListInstanceGroups (Maybe Text)
data ListInstanceGroupsResponse

-- | <a>ListInstanceGroupsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ligrInstanceGroups</a> <tt>::</tt> [<a>InstanceGroup</a>]</li>
--   <li><a>ligrMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listInstanceGroupsResponse :: ListInstanceGroupsResponse

-- | The list of instance groups for the cluster and given filters.
ligrInstanceGroups :: Lens' ListInstanceGroupsResponse [InstanceGroup]

-- | The pagination token that indicates the next set of results to
--   retrieve.
ligrMarker :: Lens' ListInstanceGroupsResponse (Maybe Text)
instance Eq ListInstanceGroups
instance Ord ListInstanceGroups
instance Read ListInstanceGroups
instance Show ListInstanceGroups
instance Eq ListInstanceGroupsResponse
instance Read ListInstanceGroupsResponse
instance Show ListInstanceGroupsResponse
instance AWSPager ListInstanceGroups
instance FromJSON ListInstanceGroupsResponse
instance AWSRequest ListInstanceGroups
instance ToJSON ListInstanceGroups
instance ToHeaders ListInstanceGroups
instance ToQuery ListInstanceGroups
instance ToPath ListInstanceGroups


-- | Provides the status of all clusters visible to this AWS account.
--   Allows you to filter the list of clusters based on certain criteria;
--   for example, filtering by cluster creation date and time or by status.
--   This call returns a maximum of 50 clusters per call, but returns a
--   marker to track the paging of the cluster list across multiple
--   ListClusters calls.
--   
--   
--   <a>http://docs.aws.amazon.com/ElasticMapReduce/latest/API/API_ListClusters.html</a>
module Network.AWS.EMR.ListClusters
data ListClusters

-- | <a>ListClusters</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lcClusterStates</a> <tt>::</tt> [<a>ClusterState</a>]</li>
--   <li><a>lcCreatedAfter</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>lcCreatedBefore</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>lcMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listClusters :: ListClusters

-- | The cluster state filters to apply when listing clusters.
lcClusterStates :: Lens' ListClusters [ClusterState]

-- | The creation date and time beginning value filter for listing clusters
--   .
lcCreatedAfter :: Lens' ListClusters (Maybe UTCTime)

-- | The creation date and time end value filter for listing clusters .
lcCreatedBefore :: Lens' ListClusters (Maybe UTCTime)

-- | The pagination token that indicates the next set of results to
--   retrieve.
lcMarker :: Lens' ListClusters (Maybe Text)
data ListClustersResponse

-- | <a>ListClustersResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lcrClusters</a> <tt>::</tt> [<a>ClusterSummary</a>]</li>
--   <li><a>lcrMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listClustersResponse :: ListClustersResponse

-- | The list of clusters for the account based on the given filters.
lcrClusters :: Lens' ListClustersResponse [ClusterSummary]

-- | The pagination token that indicates the next set of results to
--   retrieve.
lcrMarker :: Lens' ListClustersResponse (Maybe Text)
instance Eq ListClusters
instance Read ListClusters
instance Show ListClusters
instance Eq ListClustersResponse
instance Read ListClustersResponse
instance Show ListClustersResponse
instance AWSPager ListClusters
instance FromJSON ListClustersResponse
instance AWSRequest ListClusters
instance ToJSON ListClusters
instance ToHeaders ListClusters
instance ToQuery ListClusters
instance ToPath ListClusters


-- | Provides information about the bootstrap actions associated with a
--   cluster.
--   
--   
--   <a>http://docs.aws.amazon.com/ElasticMapReduce/latest/API/API_ListBootstrapActions.html</a>
module Network.AWS.EMR.ListBootstrapActions
data ListBootstrapActions

-- | <a>ListBootstrapActions</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lbaClusterId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>lbaMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listBootstrapActions :: Text -> ListBootstrapActions

-- | The cluster identifier for the bootstrap actions to list .
lbaClusterId :: Lens' ListBootstrapActions Text

-- | The pagination token that indicates the next set of results to
--   retrieve .
lbaMarker :: Lens' ListBootstrapActions (Maybe Text)
data ListBootstrapActionsResponse

-- | <a>ListBootstrapActionsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lbarBootstrapActions</a> <tt>::</tt> [<a>Command</a>]</li>
--   <li><a>lbarMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listBootstrapActionsResponse :: ListBootstrapActionsResponse

-- | The bootstrap actions associated with the cluster .
lbarBootstrapActions :: Lens' ListBootstrapActionsResponse [Command]

-- | The pagination token that indicates the next set of results to
--   retrieve .
lbarMarker :: Lens' ListBootstrapActionsResponse (Maybe Text)
instance Eq ListBootstrapActions
instance Ord ListBootstrapActions
instance Read ListBootstrapActions
instance Show ListBootstrapActions
instance Eq ListBootstrapActionsResponse
instance Read ListBootstrapActionsResponse
instance Show ListBootstrapActionsResponse
instance AWSPager ListBootstrapActions
instance FromJSON ListBootstrapActionsResponse
instance AWSRequest ListBootstrapActions
instance ToJSON ListBootstrapActions
instance ToHeaders ListBootstrapActions
instance ToQuery ListBootstrapActions
instance ToPath ListBootstrapActions


-- | Provides more detail about the cluster step.
--   
--   
--   <a>http://docs.aws.amazon.com/ElasticMapReduce/latest/API/API_DescribeStep.html</a>
module Network.AWS.EMR.DescribeStep
data DescribeStep

-- | <a>DescribeStep</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsClusterId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>dsStepId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
describeStep :: Text -> Text -> DescribeStep

-- | The identifier of the cluster with steps to describe.
dsClusterId :: Lens' DescribeStep Text

-- | The identifier of the step to describe.
dsStepId :: Lens' DescribeStep Text
data DescribeStepResponse

-- | <a>DescribeStepResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsrStep</a> <tt>::</tt> <a>Maybe</a> <a>Step</a></li>
--   </ul>
describeStepResponse :: DescribeStepResponse

-- | The step details for the requested step identifier.
dsrStep :: Lens' DescribeStepResponse (Maybe Step)
instance Eq DescribeStep
instance Ord DescribeStep
instance Read DescribeStep
instance Show DescribeStep
instance Eq DescribeStepResponse
instance Read DescribeStepResponse
instance Show DescribeStepResponse
instance FromJSON DescribeStepResponse
instance AWSRequest DescribeStep
instance ToJSON DescribeStep
instance ToHeaders DescribeStep
instance ToQuery DescribeStep
instance ToPath DescribeStep


-- | This API is deprecated and will eventually be removed. We recommend
--   you use <tt>ListClusters</tt>, <tt>DescribeCluster</tt>,
--   <tt>ListSteps</tt>, <tt>ListInstanceGroups</tt> and
--   <tt>ListBootstrapActions</tt> instead.
--   
--   DescribeJobFlows returns a list of job flows that match all of the
--   supplied parameters. The parameters can include a list of job flow
--   IDs, job flow states, and restrictions on job flow creation date and
--   time.
--   
--   Regardless of supplied parameters, only job flows created within the
--   last two months are returned.
--   
--   If no parameters are supplied, then job flows matching either of the
--   following criteria are returned:
--   
--   Job flows created and completed in the last two weeks Job flows
--   created within the last two months that are in one of the following
--   states: <tt>RUNNING</tt>, <tt>WAITING</tt>, <tt>SHUTTING_DOWN</tt>,
--   <tt>STARTING</tt> Amazon Elastic MapReduce can return a maximum of 512
--   job flow descriptions.
--   
--   
--   <a>http://docs.aws.amazon.com/ElasticMapReduce/latest/API/API_DescribeJobFlows.html</a>
module Network.AWS.EMR.DescribeJobFlows
data DescribeJobFlows

-- | <a>DescribeJobFlows</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>djfCreatedAfter</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>djfCreatedBefore</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>djfJobFlowIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>djfJobFlowStates</a> <tt>::</tt>
--   [<a>JobFlowExecutionState</a>]</li>
--   </ul>
describeJobFlows :: DescribeJobFlows

-- | Return only job flows created after this date and time.
djfCreatedAfter :: Lens' DescribeJobFlows (Maybe UTCTime)

-- | Return only job flows created before this date and time.
djfCreatedBefore :: Lens' DescribeJobFlows (Maybe UTCTime)

-- | Return only job flows whose job flow ID is contained in this list.
djfJobFlowIds :: Lens' DescribeJobFlows [Text]

-- | Return only job flows whose state is contained in this list.
djfJobFlowStates :: Lens' DescribeJobFlows [JobFlowExecutionState]
data DescribeJobFlowsResponse

-- | <a>DescribeJobFlowsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>djfrJobFlows</a> <tt>::</tt> [<a>JobFlowDetail</a>]</li>
--   </ul>
describeJobFlowsResponse :: DescribeJobFlowsResponse

-- | A list of job flows matching the parameters supplied.
djfrJobFlows :: Lens' DescribeJobFlowsResponse [JobFlowDetail]
instance Eq DescribeJobFlows
instance Read DescribeJobFlows
instance Show DescribeJobFlows
instance Eq DescribeJobFlowsResponse
instance Read DescribeJobFlowsResponse
instance Show DescribeJobFlowsResponse
instance Monoid DescribeJobFlowsResponse
instance Semigroup DescribeJobFlowsResponse
instance FromJSON DescribeJobFlowsResponse
instance AWSRequest DescribeJobFlows
instance ToJSON DescribeJobFlows
instance ToHeaders DescribeJobFlows
instance ToQuery DescribeJobFlows
instance ToPath DescribeJobFlows
instance IsList DescribeJobFlowsResponse


-- | Provides cluster-level details including status, hardware and software
--   configuration, VPC settings, and so on. For information about the
--   cluster steps, see <tt>ListSteps</tt>.
--   
--   
--   <a>http://docs.aws.amazon.com/ElasticMapReduce/latest/API/API_DescribeCluster.html</a>
module Network.AWS.EMR.DescribeCluster
data DescribeCluster

-- | <a>DescribeCluster</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dcClusterId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
describeCluster :: Text -> DescribeCluster

-- | The identifier of the cluster to describe.
dcClusterId :: Lens' DescribeCluster Text
data DescribeClusterResponse

-- | <a>DescribeClusterResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dcrCluster</a> <tt>::</tt> <a>Cluster</a></li>
--   </ul>
describeClusterResponse :: Cluster -> DescribeClusterResponse

-- | This output contains the details for the requested cluster.
dcrCluster :: Lens' DescribeClusterResponse Cluster
instance Eq DescribeCluster
instance Ord DescribeCluster
instance Read DescribeCluster
instance Show DescribeCluster
instance Monoid DescribeCluster
instance IsString DescribeCluster
instance Eq DescribeClusterResponse
instance Read DescribeClusterResponse
instance Show DescribeClusterResponse
instance FromJSON DescribeClusterResponse
instance AWSRequest DescribeCluster
instance ToJSON DescribeCluster
instance ToHeaders DescribeCluster
instance ToQuery DescribeCluster
instance ToPath DescribeCluster

module Network.AWS.EMR.Waiters
clusterRunning :: Wait DescribeCluster


-- | Adds tags to an Amazon EMR resource. Tags make it easier to associate
--   clusters in various ways, such as grouping clusters to track your
--   Amazon EMR resource allocation costs. For more information, see
--   <a>Tagging Amazon EMRResources</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/ElasticMapReduce/latest/API/API_AddTags.html</a>
module Network.AWS.EMR.AddTags
data AddTags

-- | <a>AddTags</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>atResourceId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>atTags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   </ul>
addTags :: Text -> AddTags

-- | The Amazon EMR resource identifier to which tags will be added. This
--   value must be a cluster identifier.
atResourceId :: Lens' AddTags Text

-- | A list of tags to associate with a cluster and propagate to Amazon EC2
--   instances. Tags are user-defined key/value pairs that consist of a
--   required key string with a maximum of 128 characters, and an optional
--   value string with a maximum of 256 characters.
atTags :: Lens' AddTags [Tag]
data AddTagsResponse

-- | <a>AddTagsResponse</a> constructor.
addTagsResponse :: AddTagsResponse
instance Eq AddTags
instance Read AddTags
instance Show AddTags
instance Eq AddTagsResponse
instance Ord AddTagsResponse
instance Read AddTagsResponse
instance Show AddTagsResponse
instance Generic AddTagsResponse
instance Datatype D1AddTagsResponse
instance Constructor C1_0AddTagsResponse
instance AWSRequest AddTags
instance ToJSON AddTags
instance ToHeaders AddTags
instance ToQuery AddTags
instance ToPath AddTags


-- | AddJobFlowSteps adds new steps to a running job flow. A maximum of 256
--   steps are allowed in each job flow.
--   
--   If your job flow is long-running (such as a Hive data warehouse) or
--   complex, you may require more than 256 steps to process your data. You
--   can bypass the 256-step limitation in various ways, including using
--   the SSH shell to connect to the master node and submitting queries
--   directly to the software running on the master node, such as Hive and
--   Hadoop. For more information on how to do this, go to <a>Add More than
--   256 Steps to a Job Flow</a> in the <i>Amazon ElasticMapReduce
--   Developer's Guide</i>.
--   
--   A step specifies the location of a JAR file stored either on the
--   master node of the job flow or in Amazon S3. Each step is performed by
--   the main function of the main class of the JAR file. The main class
--   can be specified either in the manifest of the JAR or by using the
--   MainFunction parameter of the step.
--   
--   Elastic MapReduce executes each step in the order listed. For a step
--   to be considered complete, the main function must exit with a zero
--   exit code and all Hadoop jobs started while the step was running must
--   have completed and run successfully.
--   
--   You can only add steps to a job flow that is in one of the following
--   states: STARTING, BOOTSTRAPPING, RUNNING, or WAITING.
--   
--   
--   <a>http://docs.aws.amazon.com/ElasticMapReduce/latest/API/API_AddJobFlowSteps.html</a>
module Network.AWS.EMR.AddJobFlowSteps
data AddJobFlowSteps

-- | <a>AddJobFlowSteps</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ajfsJobFlowId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ajfsSteps</a> <tt>::</tt> [<a>StepConfig</a>]</li>
--   </ul>
addJobFlowSteps :: Text -> AddJobFlowSteps

-- | A string that uniquely identifies the job flow. This identifier is
--   returned by <tt>RunJobFlow</tt> and can also be obtained from
--   <tt>ListClusters</tt>.
ajfsJobFlowId :: Lens' AddJobFlowSteps Text

-- | A list of <a>StepConfig</a> to be executed by the job flow.
ajfsSteps :: Lens' AddJobFlowSteps [StepConfig]
data AddJobFlowStepsResponse

-- | <a>AddJobFlowStepsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ajfsrStepIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
addJobFlowStepsResponse :: AddJobFlowStepsResponse

-- | The identifiers of the list of steps added to the job flow.
ajfsrStepIds :: Lens' AddJobFlowStepsResponse [Text]
instance Eq AddJobFlowSteps
instance Read AddJobFlowSteps
instance Show AddJobFlowSteps
instance Eq AddJobFlowStepsResponse
instance Ord AddJobFlowStepsResponse
instance Read AddJobFlowStepsResponse
instance Show AddJobFlowStepsResponse
instance Monoid AddJobFlowStepsResponse
instance Semigroup AddJobFlowStepsResponse
instance FromJSON AddJobFlowStepsResponse
instance AWSRequest AddJobFlowSteps
instance ToJSON AddJobFlowSteps
instance ToHeaders AddJobFlowSteps
instance ToQuery AddJobFlowSteps
instance ToPath AddJobFlowSteps
instance IsList AddJobFlowStepsResponse


-- | AddInstanceGroups adds an instance group to a running cluster.
--   
--   
--   <a>http://docs.aws.amazon.com/ElasticMapReduce/latest/API/API_AddInstanceGroups.html</a>
module Network.AWS.EMR.AddInstanceGroups
data AddInstanceGroups

-- | <a>AddInstanceGroups</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>aigInstanceGroups</a> <tt>::</tt>
--   [<a>InstanceGroupConfig</a>]</li>
--   <li><a>aigJobFlowId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
addInstanceGroups :: Text -> AddInstanceGroups

-- | Instance Groups to add.
aigInstanceGroups :: Lens' AddInstanceGroups [InstanceGroupConfig]

-- | Job flow in which to add the instance groups.
aigJobFlowId :: Lens' AddInstanceGroups Text
data AddInstanceGroupsResponse

-- | <a>AddInstanceGroupsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>aigrInstanceGroupIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>aigrJobFlowId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
addInstanceGroupsResponse :: AddInstanceGroupsResponse

-- | Instance group IDs of the newly created instance groups.
aigrInstanceGroupIds :: Lens' AddInstanceGroupsResponse [Text]

-- | The job flow ID in which the instance groups are added.
aigrJobFlowId :: Lens' AddInstanceGroupsResponse (Maybe Text)
instance Eq AddInstanceGroups
instance Read AddInstanceGroups
instance Show AddInstanceGroups
instance Eq AddInstanceGroupsResponse
instance Ord AddInstanceGroupsResponse
instance Read AddInstanceGroupsResponse
instance Show AddInstanceGroupsResponse
instance FromJSON AddInstanceGroupsResponse
instance AWSRequest AddInstanceGroups
instance ToJSON AddInstanceGroups
instance ToHeaders AddInstanceGroups
instance ToQuery AddInstanceGroups
instance ToPath AddInstanceGroups


-- | Amazon Elastic MapReduce (Amazon EMR) is a web service that makes it
--   easy to process large amounts of data efficiently. Amazon EMR uses
--   Hadoop processing combined with several AWS products to do such tasks
--   as web indexing, data mining, log file analysis, machine learning,
--   scientific simulation, and data warehousing.
module Network.AWS.EMR
