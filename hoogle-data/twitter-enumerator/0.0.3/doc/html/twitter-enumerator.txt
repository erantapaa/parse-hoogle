-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Twitter API package with enumerator interface and Streaming API support.
--   
--   This package uses enumerator package for access Twitter API.
@package twitter-enumerator
@version 0.0.3

module Web.Twitter.Enumerator.Monad
type TW = ReaderT TWEnv IO
data TWEnv
TWEnv :: OAuth -> Credential -> Maybe Proxy -> Maybe Manager -> TWEnv
twOAuth :: TWEnv -> OAuth
twCredential :: TWEnv -> Credential
twProxy :: TWEnv -> Maybe Proxy
twManager :: TWEnv -> Maybe Manager
runTW :: TWEnv -> TW a -> IO a
runTWManager :: TWEnv -> Manager -> TW a -> IO a
newEnv :: OAuth -> TWEnv
getOAuth :: TW OAuth
getCredential :: TW Credential
getProxy :: TW (Maybe Proxy)
getManager :: TW Manager
signOAuthTW :: Request IO -> TW (Request IO)

module Web.Twitter.Enumerator.Types
data TwitterException
HTTPStatusCodeException :: Status -> TwitterException
ParserException :: SomeException -> [ByteString] -> TwitterException
TwitterErrorMessage :: Text -> Value -> TwitterException
type DateString = String
type UserId = Integer
type Friends = [UserId]
type URLString = String
type UserName = Text
type StatusId = Integer
type LanguageCode = String
data StreamingAPI
SStatus :: Status -> StreamingAPI
SRetweetedStatus :: RetweetedStatus -> StreamingAPI
SEvent :: Event -> StreamingAPI
SDelete :: Delete -> StreamingAPI
SFriends :: Friends -> StreamingAPI
SUnknown :: Value -> StreamingAPI
data Status
Status :: DateString -> StatusId -> Text -> String -> Bool -> Maybe Entities -> Maybe StatusId -> Maybe UserId -> Maybe Bool -> Maybe Integer -> User -> Status
statusCreatedAt :: Status -> DateString
statusId :: Status -> StatusId
statusText :: Status -> Text
statusSource :: Status -> String
statusTruncated :: Status -> Bool
statusEntities :: Status -> Maybe Entities
statusInReplyTo :: Status -> Maybe StatusId
statusInReplyToUser :: Status -> Maybe UserId
statusFavorite :: Status -> Maybe Bool
statusRetweetCount :: Status -> Maybe Integer
statusUser :: Status -> User
data SearchStatus
SearchStatus :: DateString -> StatusId -> Text -> String -> UserId -> UserName -> SearchStatus
searchStatusCreatedAt :: SearchStatus -> DateString
searchStatusId :: SearchStatus -> StatusId
searchStatusText :: SearchStatus -> Text
searchStatusSource :: SearchStatus -> String
searchStatusUserId :: SearchStatus -> UserId
searchStatusUserName :: SearchStatus -> UserName
data RetweetedStatus
RetweetedStatus :: DateString -> StatusId -> Text -> String -> Bool -> Maybe Entities -> User -> Status -> RetweetedStatus
rsCreatedAt :: RetweetedStatus -> DateString
rsId :: RetweetedStatus -> StatusId
rsText :: RetweetedStatus -> Text
rsSource :: RetweetedStatus -> String
rsTruncated :: RetweetedStatus -> Bool
rsEntities :: RetweetedStatus -> Maybe Entities
rsUser :: RetweetedStatus -> User
rsRetweetedStatus :: RetweetedStatus -> Status
data EventTarget
ETUser :: User -> EventTarget
ETStatus :: Status -> EventTarget
ETList :: List -> EventTarget
ETUnknown :: Value -> EventTarget
data Event
Event :: DateString -> Maybe EventTarget -> String -> EventTarget -> EventTarget -> Event
evCreatedAt :: Event -> DateString
evTargetObject :: Event -> Maybe EventTarget
evEvent :: Event -> String
evTarget :: Event -> EventTarget
evSource :: Event -> EventTarget
data Delete
Delete :: StatusId -> UserId -> Delete
delId :: Delete -> StatusId
delUserId :: Delete -> UserId
data User
User :: UserId -> UserName -> String -> Maybe Text -> Maybe Text -> Maybe URLString -> Maybe URLString -> Maybe Bool -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe LanguageCode -> Maybe DateString -> User
userId :: User -> UserId
userName :: User -> UserName
userScreenName :: User -> String
userDescription :: User -> Maybe Text
userLocation :: User -> Maybe Text
userProfileImageURL :: User -> Maybe URLString
userURL :: User -> Maybe URLString
userProtected :: User -> Maybe Bool
userFollowers :: User -> Maybe Int
userFriends :: User -> Maybe Int
userTweets :: User -> Maybe Int
userLangCode :: User -> Maybe LanguageCode
userCreatedAt :: User -> Maybe DateString
data List
List :: Int -> String -> String -> Int -> Int -> String -> User -> List
listId :: List -> Int
listName :: List -> String
listFullName :: List -> String
listMemberCount :: List -> Int
listSubscriberCount :: List -> Int
listMode :: List -> String
listUser :: List -> User

-- | Entity handling.
data Entities
Entities :: [Entity HashTagEntity] -> [Entity UserEntity] -> [Entity URLEntity] -> Entities
enHashTags :: Entities -> [Entity HashTagEntity]
enUserMentions :: Entities -> [Entity UserEntity]
enURLs :: Entities -> [Entity URLEntity]
data Entity a
Entity :: a -> EntityIndices -> Entity a

-- | The detail information of the specific entity types (HashTag, URL,
--   User)
entityBody :: Entity a -> a

-- | The character positions the Entity was extracted from
entityIndices :: Entity a -> EntityIndices
data HashTagEntity
HashTagEntity :: Text -> HashTagEntity

-- | The Hashtag text
hashTagText :: HashTagEntity -> Text

-- | The <a>UserEntity</a> is just a wrapper around <a>User</a> which is a
--   bit wasteful, and should probably be replaced by just storing the id,
--   name and screen name here.
data UserEntity
UserEntity :: User -> UserEntity
data URLEntity
URLEntity :: URLString -> URLString -> Text -> URLEntity

-- | The URL that was extracted
ueURL :: URLEntity -> URLString

-- | The fully resolved URL (only for t.co links)
ueExpanded :: URLEntity -> URLString

-- | Not a URL but a string to display instead of the URL (only for t.co
--   links)
ueDisplay :: URLEntity -> Text
checkError :: Object -> Parser a
instance Typeable TwitterException
instance Show TwitterException
instance Show SearchStatus
instance Eq SearchStatus
instance Show EventType
instance Eq EventType
instance Show Delete
instance Eq Delete
instance Show User
instance Eq User
instance Show List
instance Eq List
instance Show HashTagEntity
instance Eq HashTagEntity
instance Show UserEntity
instance Eq UserEntity
instance Show URLEntity
instance Eq URLEntity
instance Show a => Show (Entity a)
instance Eq a => Eq (Entity a)
instance Show Entities
instance Eq Entities
instance Show Status
instance Eq Status
instance Show EventTarget
instance Eq EventTarget
instance Show Event
instance Eq Event
instance Show RetweetedStatus
instance Eq RetweetedStatus
instance Show StreamingAPI
instance Eq StreamingAPI
instance FromJSON a => FromJSON (Entity a)
instance FromJSON Entities
instance FromJSON URLEntity
instance FromJSON UserEntity
instance FromJSON HashTagEntity
instance FromJSON List
instance FromJSON User
instance FromJSON Delete
instance FromJSON Event
instance FromJSON EventTarget
instance FromJSON RetweetedStatus
instance FromJSON SearchStatus
instance FromJSON Status
instance FromJSON StreamingAPI
instance Exception TwitterException

module Web.Twitter.Enumerator.Api
api :: Bool -> ByteString -> String -> Query -> Iteratee ByteString IO a -> Iteratee ByteString TW a
endpoint :: String
endpointSearch :: String
data UserParam
UserIdParam :: UserId -> UserParam
ScreenNameParam :: String -> UserParam
data ListParam
ListIdParam :: Integer -> ListParam
ListNameParam :: String -> ListParam
mkUserParam :: UserParam -> Query
mkListParam :: ListParam -> Query
instance Show UserParam
instance Eq UserParam
instance Show ListParam
instance Eq ListParam

module Web.Twitter.Enumerator.Fetch
data UserParam
UserIdParam :: UserId -> UserParam
ScreenNameParam :: String -> UserParam
data ListParam
ListIdParam :: Integer -> ListParam
ListNameParam :: String -> ListParam
statusesHomeTimeline :: Query -> Enumerator Status TW a
statusesMentions :: Query -> Enumerator Status TW a
statusesPublicTimeline :: Query -> Enumerator Status TW a
statusesRetweetedByMe :: Query -> Enumerator Status TW a
statusesRetweetedToMe :: Query -> Enumerator Status TW a
statusesRetweetsOfMe :: Query -> Enumerator Status TW a
statusesUserTimeline :: Query -> Enumerator Status TW a
statusesRetweetedToUser :: Query -> Enumerator Status TW a
statusesRetweetedByUser :: Query -> Enumerator Status TW a
statusesIdRetweetedBy :: StatusId -> Query -> Enumerator User TW a
statusesIdRetweetedByIds :: StatusId -> Query -> Enumerator UserId TW a
statusesRetweetsId :: StatusId -> Query -> TW [RetweetedStatus]
statusesShowId :: StatusId -> Query -> TW Status
search :: String -> Enumerator SearchStatus TW a
friendsIds, followersIds :: UserParam -> Enumerator UserId TW a
usersShow :: UserParam -> TW User
listsAll :: UserParam -> Enumerator List TW a
listsMembers :: ListParam -> Enumerator User TW a
userstream :: Iteratee StreamingAPI IO a -> Iteratee ByteString TW a
statusesFilter :: Query -> Iteratee StreamingAPI IO a -> Iteratee ByteString TW a
instance Show a => Show (Cursor a)
instance Eq a => Eq (Cursor a)

module Web.Twitter.Enumerator.Post
statusesUpdate :: Text -> Query -> TW Status
statusesRetweetId :: Integer -> Query -> TW RetweetedStatus
friendshipsCreate :: UserParam -> Query -> TW User
favoritesCreate :: StatusId -> Query -> TW Status
favoritesDestroy :: StatusId -> Query -> TW Status
retweet :: Integer -> Iteratee ByteString IO a -> Iteratee ByteString TW a
friendshipCreate :: UserId -> Iteratee ByteString IO a -> Iteratee ByteString TW a

module Web.Twitter.Enumerator
