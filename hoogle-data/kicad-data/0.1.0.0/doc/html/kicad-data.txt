-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Parser and writer for KiCad files.
--   
@package kicad-data
@version 0.1.0.0

module Data.Kicad.SExpr.SExpr
data SExpr
AtomKey :: Keyword -> SExpr
AtomStr :: String -> SExpr
AtomDbl :: Double -> SExpr
List :: [SExpr] -> SExpr
data Keyword
KeyZoneConnect :: Keyword
KeyXyz :: Keyword
KeyXy :: Keyword
KeyWidth :: Keyword
KeyThickness :: Keyword
KeyThermalWidth :: Keyword
KeyThermalGap :: Keyword
KeyTedit :: Keyword
KeyTags :: Keyword
KeyStart :: Keyword
KeySolderPasteMarginRatio :: Keyword
KeySolderPasteMargin :: Keyword
KeySolderMaskMargin :: Keyword
KeySize :: Keyword
KeyScale :: Keyword
KeyRotate :: Keyword
KeyRectDelta :: Keyword
KeyPts :: Keyword
KeyPad :: Keyword
KeyOffset :: Keyword
KeyModule :: Keyword
KeyModel :: Keyword
KeyLayers :: Keyword
KeyLayer :: Keyword
KeyFpText :: Keyword
KeyFpPoly :: Keyword
KeyFpLine :: Keyword
KeyFpCircle :: Keyword
KeyFpArc :: Keyword
KeyFont :: Keyword
KeyEnd :: Keyword
KeyEffects :: Keyword
KeyDrill :: Keyword
KeyDescr :: Keyword
KeyClearance :: Keyword
KeyCenter :: Keyword
KeyAutoplaceCost90 :: Keyword
KeyAutoplaceCost180 :: Keyword
KeyAttr :: Keyword
KeyAt :: Keyword
KeyAngle :: Keyword
class SExpressable a
toSExpr :: SExpressable a => a -> SExpr
instance Show Keyword
instance Eq Keyword
instance Enum Keyword
instance Bounded Keyword
instance Show SExpr
instance Eq SExpr

module Data.Kicad.SExpr.Write

-- | Pretty-print a <a>SExpr</a> as a readable <a>Doc</a>.
pretty :: SExpr -> Doc

-- | Serialize an SExpr as a compact s-expression <a>String</a>.
write :: SExpr -> String

-- | Write a <a>Keyword</a> as a <a>String</a>. Removes "Key" from the
--   <a>Show</a> instance and converts the rest to underscore (e.g
--   KeyFpTextType becomes "fp_text_type").
writeKeyword :: Keyword -> String

module Data.Kicad.SExpr.Parse

-- | Parse a <a>String</a> as a <a>SExpr</a> or return an error.
parse :: String -> Either String SExpr

module Data.Kicad.SExpr
data SExpr
AtomKey :: Keyword -> SExpr
AtomStr :: String -> SExpr
AtomDbl :: Double -> SExpr
List :: [SExpr] -> SExpr
data Keyword
KeyZoneConnect :: Keyword
KeyXyz :: Keyword
KeyXy :: Keyword
KeyWidth :: Keyword
KeyThickness :: Keyword
KeyThermalWidth :: Keyword
KeyThermalGap :: Keyword
KeyTedit :: Keyword
KeyTags :: Keyword
KeyStart :: Keyword
KeySolderPasteMarginRatio :: Keyword
KeySolderPasteMargin :: Keyword
KeySolderMaskMargin :: Keyword
KeySize :: Keyword
KeyScale :: Keyword
KeyRotate :: Keyword
KeyRectDelta :: Keyword
KeyPts :: Keyword
KeyPad :: Keyword
KeyOffset :: Keyword
KeyModule :: Keyword
KeyModel :: Keyword
KeyLayers :: Keyword
KeyLayer :: Keyword
KeyFpText :: Keyword
KeyFpPoly :: Keyword
KeyFpLine :: Keyword
KeyFpCircle :: Keyword
KeyFpArc :: Keyword
KeyFont :: Keyword
KeyEnd :: Keyword
KeyEffects :: Keyword
KeyDrill :: Keyword
KeyDescr :: Keyword
KeyClearance :: Keyword
KeyCenter :: Keyword
KeyAutoplaceCost90 :: Keyword
KeyAutoplaceCost180 :: Keyword
KeyAttr :: Keyword
KeyAt :: Keyword
KeyAngle :: Keyword
class SExpressable a
toSExpr :: SExpressable a => a -> SExpr

-- | Pretty-print a <a>SExpr</a> as a readable <a>Doc</a>.
pretty :: SExpr -> Doc

-- | Serialize an SExpr as a compact s-expression <a>String</a>.
write :: SExpr -> String

-- | Write a <a>Keyword</a> as a <a>String</a>. Removes "Key" from the
--   <a>Show</a> instance and converts the rest to underscore (e.g
--   KeyFpTextType becomes "fp_text_type").
writeKeyword :: Keyword -> String

-- | Parse a <a>String</a> as a <a>SExpr</a> or return an error.
parse :: String -> Either String SExpr

module Data.Kicad.PcbnewExpr.PcbnewExpr
data PcbnewExpr
PcbnewExprModule :: PcbnewModule -> PcbnewExpr
PcbnewExprItem :: PcbnewItem -> PcbnewExpr
PcbnewExprAttribute :: PcbnewAttribute -> PcbnewExpr
data PcbnewModule
PcbnewModule :: String -> PcbnewLayerT -> [PcbnewAttribute] -> [PcbnewItem] -> PcbnewModule
pcbnewModuleName :: PcbnewModule -> String
pcbnewModuleLayer :: PcbnewModule -> PcbnewLayerT
pcbnewModuleAttrs :: PcbnewModule -> [PcbnewAttribute]
pcbnewModuleItems :: PcbnewModule -> [PcbnewItem]
data PcbnewItem
PcbnewFpText :: PcbnewFpTextTypeT -> String -> PcbnewAtT -> PcbnewLayerT -> Bool -> (Double, Double) -> Double -> Bool -> PcbnewItem
fpTextType :: PcbnewItem -> PcbnewFpTextTypeT
fpTextStr :: PcbnewItem -> String
itemAt :: PcbnewItem -> PcbnewAtT
itemLayer :: PcbnewItem -> PcbnewLayerT
fpTextHide :: PcbnewItem -> Bool
itemSize :: PcbnewItem -> (Double, Double)
fpTextThickness :: PcbnewItem -> Double
fpTextItalic :: PcbnewItem -> Bool
PcbnewFpLine :: (Double, Double) -> (Double, Double) -> PcbnewLayerT -> Double -> PcbnewItem
itemStart :: PcbnewItem -> (Double, Double)
itemEnd :: PcbnewItem -> (Double, Double)
itemLayer :: PcbnewItem -> PcbnewLayerT
itemWidth :: PcbnewItem -> Double
PcbnewFpCircle :: (Double, Double) -> (Double, Double) -> PcbnewLayerT -> Double -> PcbnewItem
itemStart :: PcbnewItem -> (Double, Double)
itemEnd :: PcbnewItem -> (Double, Double)
itemLayer :: PcbnewItem -> PcbnewLayerT
itemWidth :: PcbnewItem -> Double
PcbnewFpArc :: (Double, Double) -> (Double, Double) -> Double -> PcbnewLayerT -> Double -> PcbnewItem
itemStart :: PcbnewItem -> (Double, Double)
itemEnd :: PcbnewItem -> (Double, Double)
fpArcAngle :: PcbnewItem -> Double
itemLayer :: PcbnewItem -> PcbnewLayerT
itemWidth :: PcbnewItem -> Double
PcbnewFpPoly :: [(Double, Double)] -> PcbnewLayerT -> Double -> PcbnewItem
fpPolyPts :: PcbnewItem -> [(Double, Double)]
itemLayer :: PcbnewItem -> PcbnewLayerT
itemWidth :: PcbnewItem -> Double
PcbnewPad :: String -> PcbnewPadTypeT -> PcbnewPadShapeT -> PcbnewAtT -> (Double, Double) -> [PcbnewLayerT] -> [PcbnewAttribute] -> PcbnewItem
padNumber :: PcbnewItem -> String
padType :: PcbnewItem -> PcbnewPadTypeT
padShape :: PcbnewItem -> PcbnewPadShapeT
itemAt :: PcbnewItem -> PcbnewAtT
itemSize :: PcbnewItem -> (Double, Double)
padLayers :: PcbnewItem -> [PcbnewLayerT]
padAttributes_ :: PcbnewItem -> [PcbnewAttribute]
data PcbnewAttribute
PcbnewLayer :: PcbnewLayerT -> PcbnewAttribute
PcbnewAt :: PcbnewAtT -> PcbnewAttribute
PcbnewFpTextType :: PcbnewFpTextTypeT -> PcbnewAttribute
PcbnewSize :: (Double, Double) -> PcbnewAttribute
PcbnewThickness :: Double -> PcbnewAttribute
PcbnewTedit :: String -> PcbnewAttribute
PcbnewItalic :: PcbnewAttribute
PcbnewHide :: PcbnewAttribute
PcbnewLocked :: PcbnewAttribute
PcbnewStart :: (Double, Double) -> PcbnewAttribute
PcbnewEnd :: (Double, Double) -> PcbnewAttribute
PcbnewWidth :: Double -> PcbnewAttribute
PcbnewDescr :: String -> PcbnewAttribute
PcbnewTags :: String -> PcbnewAttribute
PcbnewAttr :: String -> PcbnewAttribute
PcbnewLayers :: [PcbnewLayerT] -> PcbnewAttribute
PcbnewDrill :: PcbnewDrillT -> PcbnewAttribute
PcbnewRectDelta :: (Double, Double) -> PcbnewAttribute
PcbnewFpTextEffects :: PcbnewAttribute -> PcbnewAttribute
PcbnewFont :: (Double, Double) -> Double -> Bool -> PcbnewAttribute
pcbnewFontSize :: PcbnewAttribute -> (Double, Double)
pcbnewFontThickness :: PcbnewAttribute -> Double
pcbnewFontItalic :: PcbnewAttribute -> Bool
PcbnewAngle :: Double -> PcbnewAttribute
PcbnewXy :: (Double, Double) -> PcbnewAttribute
PcbnewPts :: [(Double, Double)] -> PcbnewAttribute
PcbnewModel :: String -> PcbnewXyzT -> PcbnewXyzT -> PcbnewXyzT -> PcbnewAttribute
pcbnewModelPath :: PcbnewAttribute -> String
pcbnewModelAt :: PcbnewAttribute -> PcbnewXyzT
pcbnewModelScale :: PcbnewAttribute -> PcbnewXyzT
pcbnewModelRotate :: PcbnewAttribute -> PcbnewXyzT
PcbnewModelAt :: PcbnewAttribute -> PcbnewAttribute
PcbnewModelScale :: PcbnewAttribute -> PcbnewAttribute
PcbnewModelRotate :: PcbnewAttribute -> PcbnewAttribute
PcbnewXyz :: PcbnewXyzT -> PcbnewAttribute
PcbnewCenter :: (Double, Double) -> PcbnewAttribute
PcbnewClearance :: Double -> PcbnewAttribute
PcbnewMaskMargin :: Double -> PcbnewAttribute
PcbnewPasteMargin :: Double -> PcbnewAttribute
PcbnewPasteMarginRatio :: Double -> PcbnewAttribute
PcbnewOffset :: (Double, Double) -> PcbnewAttribute
PcbnewAutoplaceCost90 :: Int -> PcbnewAttribute
PcbnewAutoplaceCost180 :: Int -> PcbnewAttribute
PcbnewZoneConnect :: Int -> PcbnewAttribute
PcbnewThermalWidth :: Double -> PcbnewAttribute
PcbnewThermalGap :: Double -> PcbnewAttribute
data PcbnewDrillT
PcbnewDrillT :: Maybe (Double, Double) -> Bool -> Maybe (Double, Double) -> PcbnewDrillT
pcbnewDrillSize :: PcbnewDrillT -> Maybe (Double, Double)
pcbnewDrillOval :: PcbnewDrillT -> Bool
pcbnewDrillOffset :: PcbnewDrillT -> Maybe (Double, Double)
data PcbnewAtT
PcbnewAtT :: (Double, Double) -> Double -> PcbnewAtT
pcbnewAtPoint :: PcbnewAtT -> (Double, Double)
pcbnewAtOrientation :: PcbnewAtT -> Double
data PcbnewLayerT
FSilkS :: PcbnewLayerT
FCu :: PcbnewLayerT
FPaste :: PcbnewLayerT
FMask :: PcbnewLayerT
BSilkS :: PcbnewLayerT
BCu :: PcbnewLayerT
BPaste :: PcbnewLayerT
BMask :: PcbnewLayerT
DwgsUser :: PcbnewLayerT
CmtsUser :: PcbnewLayerT
FAdhes :: PcbnewLayerT
AllSilk :: PcbnewLayerT
FandBCu :: PcbnewLayerT
AllCu :: PcbnewLayerT
AllMask :: PcbnewLayerT
EdgeCuts :: PcbnewLayerT
FCrtYd :: PcbnewLayerT
BCrtYd :: PcbnewLayerT
Inner1Cu :: PcbnewLayerT
Inner2Cu :: PcbnewLayerT
Inner3Cu :: PcbnewLayerT
Inner4Cu :: PcbnewLayerT
Inner5Cu :: PcbnewLayerT
Inner6Cu :: PcbnewLayerT
Inner7Cu :: PcbnewLayerT
Inner8Cu :: PcbnewLayerT
Inner9Cu :: PcbnewLayerT
Inner10Cu :: PcbnewLayerT
Inner11Cu :: PcbnewLayerT
Inner12Cu :: PcbnewLayerT
Inner13Cu :: PcbnewLayerT
Inner14Cu :: PcbnewLayerT
Inner15Cu :: PcbnewLayerT
Inner16Cu :: PcbnewLayerT
Inner17Cu :: PcbnewLayerT
Inner18Cu :: PcbnewLayerT
Inner19Cu :: PcbnewLayerT
Inner20Cu :: PcbnewLayerT
Inner21Cu :: PcbnewLayerT
Inner22Cu :: PcbnewLayerT
Inner23Cu :: PcbnewLayerT
Inner24Cu :: PcbnewLayerT
Inner25Cu :: PcbnewLayerT
Inner26Cu :: PcbnewLayerT
Inner27Cu :: PcbnewLayerT
Inner28Cu :: PcbnewLayerT
Inner29Cu :: PcbnewLayerT
Inner30Cu :: PcbnewLayerT
Inner31Cu :: PcbnewLayerT
Inner32Cu :: PcbnewLayerT
data PcbnewPadShapeT
Circle :: PcbnewPadShapeT
Oval :: PcbnewPadShapeT
Rect :: PcbnewPadShapeT
Trapezoid :: PcbnewPadShapeT
data PcbnewPadTypeT
ThruHole :: PcbnewPadTypeT
SMD :: PcbnewPadTypeT
Connect :: PcbnewPadTypeT
NPThruHole :: PcbnewPadTypeT
data PcbnewFpTextTypeT
FpTextReference :: PcbnewFpTextTypeT
FpTextValue :: PcbnewFpTextTypeT
FpTextUser :: PcbnewFpTextTypeT
type PcbnewXyzT = (Double, Double, Double)
moduleItems :: Functor f => LensLike' f PcbnewModule [PcbnewItem]
moduleAttrs :: Functor f => LensLike' f PcbnewModule [PcbnewAttribute]
itemLayers :: Functor f => LensLike' f PcbnewItem [PcbnewLayerT]
padAttributes :: Functor f => LensLike' f PcbnewItem [PcbnewAttribute]
atX :: Functor f => LensLike' f PcbnewAtT Double
atY :: Functor f => LensLike' f PcbnewAtT Double
itemsOn :: [PcbnewLayerT] -> [PcbnewItem] -> [PcbnewItem]
strToLayer :: String -> Maybe PcbnewLayerT
layerToStr :: PcbnewLayerT -> String
strToPadType :: String -> Maybe PcbnewPadTypeT
fpPadTypeToStr :: PcbnewPadTypeT -> String
strToPadShape :: String -> Maybe PcbnewPadShapeT
fpPadShapeToStr :: PcbnewPadShapeT -> String
strToFpTextType :: String -> Maybe PcbnewFpTextTypeT
fpTextTypeToStr :: PcbnewFpTextTypeT -> String
defaultPcbnewModule :: PcbnewModule
defaultPcbnewFpText :: PcbnewItem
defaultPcbnewFpLine :: PcbnewItem
defaultPcbnewFpCircle :: PcbnewItem
defaultPcbnewFpArc :: PcbnewItem
defaultPcbnewFpPoly :: PcbnewItem
defaultPcbnewPad :: PcbnewItem
defaultPcbnewDrillT :: PcbnewDrillT
defaultPcbnewFont :: PcbnewAttribute
defaultPcbnewModel :: PcbnewAttribute
defaultPcbnewAtT :: PcbnewAtT
instance Show PcbnewDrillT
instance Eq PcbnewDrillT
instance Show PcbnewLayerT
instance Eq PcbnewLayerT
instance Enum PcbnewLayerT
instance Bounded PcbnewLayerT
instance Show PcbnewPadTypeT
instance Eq PcbnewPadTypeT
instance Enum PcbnewPadTypeT
instance Bounded PcbnewPadTypeT
instance Show PcbnewPadShapeT
instance Eq PcbnewPadShapeT
instance Enum PcbnewPadShapeT
instance Bounded PcbnewPadShapeT
instance Show PcbnewAtT
instance Eq PcbnewAtT
instance Show PcbnewFpTextTypeT
instance Eq PcbnewFpTextTypeT
instance Enum PcbnewFpTextTypeT
instance Bounded PcbnewFpTextTypeT
instance Show PcbnewAttribute
instance Eq PcbnewAttribute
instance Show PcbnewItem
instance Eq PcbnewItem
instance Show PcbnewModule
instance Eq PcbnewModule
instance Show PcbnewExpr
instance Eq PcbnewExpr
instance AEq PcbnewAtT
instance AEq PcbnewAttribute
instance SExpressable PcbnewAttribute
instance AEq PcbnewDrillT
instance AEq PcbnewItem
instance SExpressable PcbnewItem
instance AEq PcbnewModule
instance SExpressable PcbnewModule
instance SExpressable PcbnewExpr
instance AEq PcbnewExpr

module Data.Kicad.PcbnewExpr.Parse

-- | Parse a <a>PcbnewExpr</a> from a <a>String</a>. Returns an
--   <a>String</a> with an error or a <a>PcbnewExpr</a>.
parse :: String -> Either String PcbnewExpr

-- | Interpret a <a>SExpr</a> as a <a>PcbnewExpr</a>.
fromSExpr :: SExpr -> Either String PcbnewExpr

module Data.Kicad.PcbnewExpr.Write

-- | Pretty-print a <a>PcbnewExpr</a> as a readable s-expression
--   <a>Doc</a>.
pretty :: PcbnewExpr -> Doc

-- | Serialize a <a>PcbnewExpr</a> as a compact s-expression <a>String</a>.
write :: PcbnewExpr -> String

module Data.Kicad.PcbnewExpr
data PcbnewExpr
PcbnewExprModule :: PcbnewModule -> PcbnewExpr
PcbnewExprItem :: PcbnewItem -> PcbnewExpr
PcbnewExprAttribute :: PcbnewAttribute -> PcbnewExpr

-- | Parse a <a>PcbnewExpr</a> from a <a>String</a>. Returns an
--   <a>String</a> with an error or a <a>PcbnewExpr</a>.
parse :: String -> Either String PcbnewExpr

-- | Interpret a <a>SExpr</a> as a <a>PcbnewExpr</a>.
fromSExpr :: SExpr -> Either String PcbnewExpr

-- | Pretty-print a <a>PcbnewExpr</a> as a readable s-expression
--   <a>Doc</a>.
pretty :: PcbnewExpr -> Doc

-- | Serialize a <a>PcbnewExpr</a> as a compact s-expression <a>String</a>.
write :: PcbnewExpr -> String
