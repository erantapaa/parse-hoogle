-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Windows Game Engine for the Haskell Programmer - Ogre Bindings
--   
--   HGamer3D is a game engine for developing 3D games in the programming
--   language Haskell. The game engine uses available libraries for 3D
--   graphics, sound, input device handling, gui programming and other
--   areas and make those functions available for the Haskell programmer by
--   providing a Haskell API on top of that. HGamer3D is available on
--   Windows only.
@package HGamer3D-Ogre-Binding
@version 0.2.1

module HGamer3D.Bindings.Ogre.StructVec3
newtype Vector3
Vector3 :: Vec3 -> Vector3
type Vector3Ptr = Ptr (Vector3)
type Vec3Ptr = Ptr (Vec3)
withVec3 :: Vec3 -> (Vec3Ptr -> IO b) -> IO b
peekVec3 :: Ptr a -> IO Vec3
instance Storable Vector3

module HGamer3D.Bindings.Ogre.StructVec2
newtype Vector2
Vector2 :: Vec2 -> Vector2
type Vector2Ptr = Ptr (Vector2)
type Vec2Ptr = Ptr (Vec2)
withVec2 :: Vec2 -> (Vec2Ptr -> IO b) -> IO b
peekVec2 :: Vec2Ptr -> IO Vec2
instance Storable Vector2

module HGamer3D.Bindings.Ogre.StructSharedPtr
data SharedPtr
SharedPtr :: Ptr () -> Ptr () -> Ptr () -> SharedPtr
spPT :: SharedPtr -> Ptr ()
spPCount :: SharedPtr -> Ptr ()
spPFreeFunc :: SharedPtr -> Ptr ()
type SharedPtrPtr = Ptr (SharedPtr)
withSharedPtr :: SharedPtr -> (SharedPtrPtr -> IO b) -> IO b
peekSharedPtr :: SharedPtrPtr -> IO SharedPtr
instance Eq SharedPtr
instance Show SharedPtr
instance Storable SharedPtr

module HGamer3D.Bindings.Ogre.StructRadians
type RadiansPtr = Ptr (Radians)
withRadians :: Radians -> (RadiansPtr -> IO b) -> IO b
peekRadians :: RadiansPtr -> IO Radians
instance Storable Radians

module HGamer3D.Bindings.Ogre.StructQuaternion
newtype Quat
Quat :: Quaternion -> Quat
type QuatPtr = Ptr (Quat)
type QuaternionPtr = Ptr (Quaternion)
withQuaternion :: Quaternion -> (QuaternionPtr -> IO b) -> IO b
peekQuaternion :: Ptr a -> IO Quaternion
instance Storable Quat

module HGamer3D.Bindings.Ogre.StructDegrees
type DegreesPtr = Ptr (Degrees)
withDegrees :: Degrees -> (DegreesPtr -> IO b) -> IO b
peekDegrees :: DegreesPtr -> IO Degrees
instance Storable Degrees

module HGamer3D.Bindings.Ogre.StructColour
type ColourPtr = Ptr (Colour)
withColour :: Colour -> (ColourPtr -> IO b) -> IO b
peekColour :: ColourPtr -> IO Colour
instance Storable Colour

module HGamer3D.Bindings.Ogre.EnumVertexAnimationType
data EnumVertexAnimationType
VAT_NONE :: EnumVertexAnimationType
VAT_MORPH :: EnumVertexAnimationType
VAT_POSE :: EnumVertexAnimationType
instance Eq EnumVertexAnimationType
instance Enum EnumVertexAnimationType

module HGamer3D.Bindings.Ogre.EnumVertexAnimationTrackTargetMode
data EnumVertexAnimationTrackTargetMode
TM_SOFTWARE :: EnumVertexAnimationTrackTargetMode
TM_HARDWARE :: EnumVertexAnimationTrackTargetMode
instance Enum EnumVertexAnimationTrackTargetMode
instance Eq EnumVertexAnimationTrackTargetMode

module HGamer3D.Bindings.Ogre.EnumTexCoordCalcMethod
data EnumTexCoordCalcMethod
TEXCALC_NONE :: EnumTexCoordCalcMethod
TEXCALC_ENVIRONMENT_MAP :: EnumTexCoordCalcMethod
TEXCALC_ENVIRONMENT_MAP_PLANAR :: EnumTexCoordCalcMethod
TEXCALC_ENVIRONMENT_MAP_REFLECTION :: EnumTexCoordCalcMethod
TEXCALC_ENVIRONMENT_MAP_NORMAL :: EnumTexCoordCalcMethod
TEXCALC_PROJECTIVE_TEXTURE :: EnumTexCoordCalcMethod
instance Enum EnumTexCoordCalcMethod
instance Eq EnumTexCoordCalcMethod

module HGamer3D.Bindings.Ogre.EnumStencilOperation
data EnumStencilOperation
SOP_KEEP :: EnumStencilOperation
SOP_ZERO :: EnumStencilOperation
SOP_REPLACE :: EnumStencilOperation
SOP_INCREMENT :: EnumStencilOperation
SOP_DECREMENT :: EnumStencilOperation
SOP_INCREMENT_WRAP :: EnumStencilOperation
SOP_DECREMENT_WRAP :: EnumStencilOperation
SOP_INVERT :: EnumStencilOperation
instance Enum EnumStencilOperation
instance Eq EnumStencilOperation

module HGamer3D.Bindings.Ogre.EnumSkeletonAnimationBlendMode
data EnumSkeletonAnimationBlendMode
ANIMBLEND_AVERAGE :: EnumSkeletonAnimationBlendMode
ANIMBLEND_CUMULATIVE :: EnumSkeletonAnimationBlendMode
instance Eq EnumSkeletonAnimationBlendMode
instance Enum EnumSkeletonAnimationBlendMode

module HGamer3D.Bindings.Ogre.EnumSceneType
data EnumSceneType
ST_GENERIC :: EnumSceneType
ST_EXTERIOR_CLOSE :: EnumSceneType
ST_EXTERIOR_FAR :: EnumSceneType
ST_EXTERIOR_REAL_FAR :: EnumSceneType
ST_INTERIOR :: EnumSceneType
instance Eq EnumSceneType
instance Enum EnumSceneType

module HGamer3D.Bindings.Ogre.EnumSceneManagerSpecialCaseRenderQueueMode
data EnumSceneManagerSpecialCaseRenderQueueMode
SCRQM_INCLUDE :: EnumSceneManagerSpecialCaseRenderQueueMode
SCRQM_EXCLUDE :: EnumSceneManagerSpecialCaseRenderQueueMode
instance Enum EnumSceneManagerSpecialCaseRenderQueueMode
instance Eq EnumSceneManagerSpecialCaseRenderQueueMode

module HGamer3D.Bindings.Ogre.EnumSceneManagerPrefabType
data EnumSceneManagerPrefabType
PT_PLANE :: EnumSceneManagerPrefabType
PT_CUBE :: EnumSceneManagerPrefabType
PT_SPHERE :: EnumSceneManagerPrefabType
instance Enum EnumSceneManagerPrefabType
instance Eq EnumSceneManagerPrefabType

module HGamer3D.Bindings.Ogre.EnumSceneManagerIlluminationRenderStage
data EnumSceneManagerIlluminationRenderStage
IRS_NONE :: EnumSceneManagerIlluminationRenderStage
IRS_RENDER_TO_TEXTURE :: EnumSceneManagerIlluminationRenderStage
IRS_RENDER_RECEIVER_PASS :: EnumSceneManagerIlluminationRenderStage
instance Enum EnumSceneManagerIlluminationRenderStage
instance Eq EnumSceneManagerIlluminationRenderStage

module HGamer3D.Bindings.Ogre.EnumSceneManagerBoxPlane
data EnumSceneManagerBoxPlane
BP_FRONT :: EnumSceneManagerBoxPlane
BP_BACK :: EnumSceneManagerBoxPlane
BP_LEFT :: EnumSceneManagerBoxPlane
BP_RIGHT :: EnumSceneManagerBoxPlane
BP_UP :: EnumSceneManagerBoxPlane
BP_DOWN :: EnumSceneManagerBoxPlane
instance Eq EnumSceneManagerBoxPlane
instance Enum EnumSceneManagerBoxPlane

module HGamer3D.Bindings.Ogre.EnumRootFrameEventTimeType
data EnumRootFrameEventTimeType
FETT_ANY :: EnumRootFrameEventTimeType
FETT_STARTED :: EnumRootFrameEventTimeType
FETT_QUEUED :: EnumRootFrameEventTimeType
FETT_ENDED :: EnumRootFrameEventTimeType
FETT_COUNT :: EnumRootFrameEventTimeType
instance Eq EnumRootFrameEventTimeType
instance Enum EnumRootFrameEventTimeType

module HGamer3D.Bindings.Ogre.EnumRenderTargetStatFlags
data EnumRenderTargetStatFlags
SF_NONE :: EnumRenderTargetStatFlags
SF_FPS :: EnumRenderTargetStatFlags
SF_AVG_FPS :: EnumRenderTargetStatFlags
SF_BEST_FPS :: EnumRenderTargetStatFlags
SF_WORST_FPS :: EnumRenderTargetStatFlags
SF_TRIANGLE_COUNT :: EnumRenderTargetStatFlags
SF_ALL :: EnumRenderTargetStatFlags
instance Eq EnumRenderTargetStatFlags
instance Enum EnumRenderTargetStatFlags

module HGamer3D.Bindings.Ogre.EnumRenderTargetFrameBuffer
data EnumRenderTargetFrameBuffer
FB_FRONT :: EnumRenderTargetFrameBuffer
FB_BACK :: EnumRenderTargetFrameBuffer
FB_AUTO :: EnumRenderTargetFrameBuffer
instance Enum EnumRenderTargetFrameBuffer
instance Eq EnumRenderTargetFrameBuffer

module HGamer3D.Bindings.Ogre.EnumRenderOperationOperationType
data EnumRenderOperationOperationType
OT_POINT_LIST :: EnumRenderOperationOperationType
OT_LINE_LIST :: EnumRenderOperationOperationType
OT_LINE_STRIP :: EnumRenderOperationOperationType
OT_TRIANGLE_LIST :: EnumRenderOperationOperationType
OT_TRIANGLE_STRIP :: EnumRenderOperationOperationType
OT_TRIANGLE_FAN :: EnumRenderOperationOperationType
instance Eq EnumRenderOperationOperationType
instance Enum EnumRenderOperationOperationType

module HGamer3D.Bindings.Ogre.EnumProjectionType
data EnumProjectionType
PT_ORTHOGRAPHIC :: EnumProjectionType
PT_PERSPECTIVE :: EnumProjectionType
instance Enum EnumProjectionType
instance Eq EnumProjectionType

module HGamer3D.Bindings.Ogre.EnumOrientationMode
data EnumOrientationMode
OR_DEGREE_0 :: EnumOrientationMode
OR_DEGREE_90 :: EnumOrientationMode
OR_DEGREE_180 :: EnumOrientationMode
OR_DEGREE_270 :: EnumOrientationMode
OR_PORTRAIT :: EnumOrientationMode
OR_LANDSCAPERIGHT :: EnumOrientationMode
OR_LANDSCAPELEFT :: EnumOrientationMode
instance Eq EnumOrientationMode
instance Enum EnumOrientationMode

module HGamer3D.Bindings.Ogre.EnumNodeTransformSpace
data EnumNodeTransformSpace
TS_LOCAL :: EnumNodeTransformSpace
TS_PARENT :: EnumNodeTransformSpace
TS_WORLD :: EnumNodeTransformSpace
instance Enum EnumNodeTransformSpace
instance Eq EnumNodeTransformSpace

module HGamer3D.Bindings.Ogre.EnumMeshManagerMeshBuildType
data EnumMeshManagerMeshBuildType
MBT_PLANE :: EnumMeshManagerMeshBuildType
MBT_CURVED_ILLUSION_PLANE :: EnumMeshManagerMeshBuildType
MBT_CURVED_PLANE :: EnumMeshManagerMeshBuildType
instance Enum EnumMeshManagerMeshBuildType
instance Eq EnumMeshManagerMeshBuildType

module HGamer3D.Bindings.Ogre.EnumMathAngleUnit
data EnumMathAngleUnit
AU_DEGREE :: EnumMathAngleUnit
AU_RADIAN :: EnumMathAngleUnit
instance Enum EnumMathAngleUnit
instance Eq EnumMathAngleUnit

module HGamer3D.Bindings.Ogre.EnumLogMessageLevel
data EnumLogMessageLevel
LML_TRIVIAL :: EnumLogMessageLevel
LML_NORMAL :: EnumLogMessageLevel
LML_CRITICAL :: EnumLogMessageLevel
instance Eq EnumLogMessageLevel
instance Enum EnumLogMessageLevel

module HGamer3D.Bindings.Ogre.EnumLoggingLevel
data EnumLoggingLevel
LL_LOW :: EnumLoggingLevel
LL_NORMAL :: EnumLoggingLevel
LL_BOREME :: EnumLoggingLevel
instance Eq EnumLoggingLevel
instance Enum EnumLoggingLevel

module HGamer3D.Bindings.Ogre.EnumLightType
data EnumLightType
LT_POINT :: EnumLightType
LT_DIRECTIONAL :: EnumLightType
LT_SPOTLIGHT :: EnumLightType
instance Eq EnumLightType
instance Enum EnumLightType

module HGamer3D.Bindings.Ogre.EnumGpuProgramType
data EnumGpuProgramType
GPT_VERTEX_PROGRAM :: EnumGpuProgramType
GPT_FRAGMENT_PROGRAM :: EnumGpuProgramType
GPT_GEOMETRY_PROGRAM :: EnumGpuProgramType
instance Enum EnumGpuProgramType
instance Eq EnumGpuProgramType

module HGamer3D.Bindings.Ogre.EnumFrustumPlane
data EnumFrustumPlane
FRUSTUM_PLANE_NEAR :: EnumFrustumPlane
FRUSTUM_PLANE_FAR :: EnumFrustumPlane
FRUSTUM_PLANE_LEFT :: EnumFrustumPlane
FRUSTUM_PLANE_RIGHT :: EnumFrustumPlane
FRUSTUM_PLANE_TOP :: EnumFrustumPlane
FRUSTUM_PLANE_BOTTOM :: EnumFrustumPlane
instance Eq EnumFrustumPlane
instance Enum EnumFrustumPlane

module HGamer3D.Bindings.Ogre.EnumExceptionCode
data EnumExceptionCode
ERR_CANNOT_WRITE_TO_FILE :: EnumExceptionCode
ERR_INVALID_STATE :: EnumExceptionCode
ERR_INVALIDPARAMS :: EnumExceptionCode
ERR_RENDERINGAPI_ERROR :: EnumExceptionCode
ERR_DUPLICATE_ITEM :: EnumExceptionCode
ERR_ITEM_NOT_FOUND :: EnumExceptionCode
ERR_FILE_NOT_FOUND :: EnumExceptionCode
ERR_INTERNAL_ERROR :: EnumExceptionCode
ERR_RT_ASSERTION_FAILED :: EnumExceptionCode
ERR_NOT_IMPLEMENTED :: EnumExceptionCode
instance Enum EnumExceptionCode
instance Eq EnumExceptionCode

module HGamer3D.Bindings.Ogre.EnumEntityVertexDataBindChoice
data EnumEntityVertexDataBindChoice
BIND_ORIGINAL :: EnumEntityVertexDataBindChoice
BIND_SOFTWARE_SKELETAL :: EnumEntityVertexDataBindChoice
BIND_SOFTWARE_MORPH :: EnumEntityVertexDataBindChoice
BIND_HARDWARE_MORPH :: EnumEntityVertexDataBindChoice
instance Enum EnumEntityVertexDataBindChoice
instance Eq EnumEntityVertexDataBindChoice

module HGamer3D.Bindings.Ogre.EnumDataStreamAccessMode
data EnumDataStreamAccessMode
AM_READ :: EnumDataStreamAccessMode
AM_WRITE :: EnumDataStreamAccessMode
instance Eq EnumDataStreamAccessMode
instance Enum EnumDataStreamAccessMode

module HGamer3D.Bindings.Ogre.EnumBillboardType
data EnumBillboardType
BBT_POINT :: EnumBillboardType
BBT_ORIENTED_COMMON :: EnumBillboardType
BBT_ORIENTED_SELF :: EnumBillboardType
BBT_PERPENDICULAR_COMMON :: EnumBillboardType
BBT_PERPENDICULAR_SELF :: EnumBillboardType
instance Enum EnumBillboardType
instance Eq EnumBillboardType

module HGamer3D.Bindings.Ogre.EnumBillboardRotationType
data EnumBillboardRotationType
BBR_VERTEX :: EnumBillboardRotationType
BBR_TEXCOORD :: EnumBillboardRotationType
instance Enum EnumBillboardRotationType
instance Eq EnumBillboardRotationType

module HGamer3D.Bindings.Ogre.EnumBillboardOrigin
data EnumBillboardOrigin
BBO_TOP_LEFT :: EnumBillboardOrigin
BBO_TOP_CENTER :: EnumBillboardOrigin
BBO_TOP_RIGHT :: EnumBillboardOrigin
BBO_CENTER_LEFT :: EnumBillboardOrigin
BBO_CENTER :: EnumBillboardOrigin
BBO_CENTER_RIGHT :: EnumBillboardOrigin
BBO_BOTTOM_LEFT :: EnumBillboardOrigin
BBO_BOTTOM_CENTER :: EnumBillboardOrigin
BBO_BOTTOM_RIGHT :: EnumBillboardOrigin
instance Enum EnumBillboardOrigin
instance Eq EnumBillboardOrigin

module HGamer3D.Bindings.Ogre.EnumBillboardChainTexCoordDirection
data EnumBillboardChainTexCoordDirection
TCD_U :: EnumBillboardChainTexCoordDirection
TCD_V :: EnumBillboardChainTexCoordDirection
instance Enum EnumBillboardChainTexCoordDirection
instance Eq EnumBillboardChainTexCoordDirection

module HGamer3D.Bindings.Ogre.EnumAxisAlignedBoxExtent
data EnumAxisAlignedBoxExtent
EXTENT_NULL :: EnumAxisAlignedBoxExtent
EXTENT_FINITE :: EnumAxisAlignedBoxExtent
EXTENT_INFINITE :: EnumAxisAlignedBoxExtent
instance Enum EnumAxisAlignedBoxExtent
instance Eq EnumAxisAlignedBoxExtent

module HGamer3D.Bindings.Ogre.EnumAxisAlignedBoxCorner
data EnumAxisAlignedBoxCorner
CE_FAR_LEFT_BOTTOM :: EnumAxisAlignedBoxCorner
CE_FAR_LEFT_TOP :: EnumAxisAlignedBoxCorner
CE_FAR_RIGHT_TOP :: EnumAxisAlignedBoxCorner
CE_FAR_RIGHT_BOTTOM :: EnumAxisAlignedBoxCorner
CE_NEAR_RIGHT_BOTTOM :: EnumAxisAlignedBoxCorner
CE_NEAR_LEFT_BOTTOM :: EnumAxisAlignedBoxCorner
CE_NEAR_LEFT_TOP :: EnumAxisAlignedBoxCorner
CE_NEAR_RIGHT_TOP :: EnumAxisAlignedBoxCorner
instance Eq EnumAxisAlignedBoxCorner
instance Enum EnumAxisAlignedBoxCorner

module HGamer3D.Bindings.Ogre.EnumAnimationRotationInterpolationMode
data EnumAnimationRotationInterpolationMode
RIM_LINEAR :: EnumAnimationRotationInterpolationMode
RIM_SPHERICAL :: EnumAnimationRotationInterpolationMode
instance Enum EnumAnimationRotationInterpolationMode
instance Eq EnumAnimationRotationInterpolationMode

module HGamer3D.Bindings.Ogre.EnumAnimationInterpolationMode
data EnumAnimationInterpolationMode
IM_LINEAR :: EnumAnimationInterpolationMode
IM_SPLINE :: EnumAnimationInterpolationMode
instance Enum EnumAnimationInterpolationMode
instance Eq EnumAnimationInterpolationMode

module HGamer3D.Bindings.Ogre.StructHG3DClass
type HG3DClassPtr = Ptr (HG3DClass)
withHG3DClass :: HG3DClass -> (HG3DClassPtr -> IO b) -> IO b
peekHG3DClass :: HG3DClassPtr -> IO HG3DClass

module HGamer3D.Bindings.Ogre.Utils
withCStringLenIntConv :: Num n => String -> ((CString, n) -> IO a) -> IO a
peekCStringLenIntConv :: Integral n => (CString, n) -> IO String
withIntConv :: (Storable b, Integral a, Integral b) => a -> (Ptr b -> IO c) -> IO c
withFloatConv :: (Storable b, RealFloat a, RealFloat b) => a -> (Ptr b -> IO c) -> IO c
peekIntConv :: (Storable a, Integral a, Integral b) => Ptr a -> IO b
peekFloatConv :: (Storable a, RealFloat a, RealFloat b) => Ptr a -> IO b
withCUString :: String -> (Ptr b -> IO a) -> IO a
peekCUString :: Ptr a -> IO String
alloc64k :: (Ptr a -> IO b) -> IO b
cIntFromEnum :: Enum a => a -> CInt
cIntToEnum :: Enum a => CInt -> a
withBoolUtil :: (Integral a, Storable a) => Bool -> (Ptr a -> IO b) -> IO b
peekBoolUtil :: (Integral a, Storable a) => Ptr a -> IO Bool
withEnumUtil :: (Enum a, Integral b, Storable b) => a -> (Ptr b -> IO c) -> IO c
peekEnumUtil :: (Enum a, Integral b, Storable b) => Ptr b -> IO a

-- | Integral conversion
cIntConv :: (Integral a, Integral b) => a -> b

-- | Floating conversion
cFloatConv :: (RealFloat a, RealFloat b) => a -> b

-- | Convert a C enumeration to Haskell.
cToEnum :: (Integral i, Enum e) => i -> e

-- | Convert a Haskell enumeration to C.
cFromEnum :: (Enum e, Integral i) => e -> i

module HGamer3D.Bindings.Ogre.ClassPtr
type ClassAnimation = Ptr (())
type ClassAnimationState = Ptr (())
type ClassAnimationStateSet = Ptr (())
type ClassAnimationTrack = Ptr (())
type ClassArchive = Ptr (())
type ClassArchiveManager = Ptr (())
type ClassBillboard = Ptr (())
type ClassBillboardChain = Ptr (())
type ClassBillboardChainFactory = Ptr (())
type ClassBillboardSet = Ptr (())
type ClassBillboardSetFactory = Ptr (())
type ClassBone = Ptr (())
type ClassCamera = Ptr (())
type ClassConfigFile = Ptr (())
type ClassControllerManager = Ptr (())
type ClassEntity = Ptr (())
type ClassEntityFactory = Ptr (())
type ClassException = Ptr (())
type ClassFrustum = Ptr (())
type ClassLight = Ptr (())
type ClassLightFactory = Ptr (())
type ClassLog = Ptr (())
type ClassLogManager = Ptr (())
type ClassManualObject = Ptr (())
type ClassManualObjectFactory = Ptr (())
type ClassManualObjectSection = Ptr (())
type ClassMaterial = Ptr (())
type ClassMaterialManager = Ptr (())
type ClassMesh = Ptr (())
type ClassMeshManager = Ptr (())
type ClassMovableObject = Ptr (())
type ClassMovableObjectFactory = Ptr (())
type ClassMultiRenderTarget = Ptr (())
type ClassNode = Ptr (())
type ClassNodeAnimationTrack = Ptr (())
type ClassNumericAnimationTrack = Ptr (())
type ClassRenderable = Ptr (())
type ClassRenderSystem = Ptr (())
type ClassRenderTarget = Ptr (())
type ClassRenderTexture = Ptr (())
type ClassRenderWindow = Ptr (())
type ClassResource = Ptr (())
type ClassResourceGroupManager = Ptr (())
type ClassResourceManager = Ptr (())
type ClassRoot = Ptr (())
type ClassSceneManager = Ptr (())
type ClassSceneManagerFactory = Ptr (())
type ClassSceneNode = Ptr (())
type ClassSkeleton = Ptr (())
type ClassSkeletonManager = Ptr (())
type ClassTextureManager = Ptr (())
type ClassTimeIndex = Ptr (())
type ClassVertexAnimationTrack = Ptr (())
type ClassViewport = Ptr (())
type ClassWindowEventUtilities = Ptr (())
type ClassWindowUtilsHG3D = Ptr (())
type ClassHG3DMessagePump = Ptr (())

module HGamer3D.Bindings.Ogre.ClassAnimation
delete :: HG3DClass -> IO ()
getName :: HG3DClass -> IO (String)
getLength :: HG3DClass -> IO (Float)
setLength :: HG3DClass -> Float -> IO ()
createNodeTrack :: HG3DClass -> Int -> IO (HG3DClass)
createNumericTrack :: HG3DClass -> Int -> IO (HG3DClass)
createVertexTrack :: HG3DClass -> Int -> EnumVertexAnimationType -> IO (HG3DClass)
createNodeTrack2 :: HG3DClass -> Int -> HG3DClass -> IO (HG3DClass)
getNumNodeTracks :: HG3DClass -> IO (Int)
getNodeTrack :: HG3DClass -> Int -> IO (HG3DClass)
hasNodeTrack :: HG3DClass -> Int -> IO (Bool)
getNumNumericTracks :: HG3DClass -> IO (Int)
getNumericTrack :: HG3DClass -> Int -> IO (HG3DClass)
hasNumericTrack :: HG3DClass -> Int -> IO (Bool)
getNumVertexTracks :: HG3DClass -> IO (Int)
getVertexTrack :: HG3DClass -> Int -> IO (HG3DClass)
hasVertexTrack :: HG3DClass -> Int -> IO (Bool)
destroyNodeTrack :: HG3DClass -> Int -> IO ()
destroyNumericTrack :: HG3DClass -> Int -> IO ()
destroyVertexTrack :: HG3DClass -> Int -> IO ()
destroyAllTracks :: HG3DClass -> IO ()
destroyAllNodeTracks :: HG3DClass -> IO ()
destroyAllNumericTracks :: HG3DClass -> IO ()
destroyAllVertexTracks :: HG3DClass -> IO ()
apply :: HG3DClass -> Float -> Float -> Float -> IO ()
applyToNode :: HG3DClass -> HG3DClass -> Float -> Float -> Float -> IO ()
apply2 :: HG3DClass -> HG3DClass -> Float -> Float -> Float -> IO ()
apply4 :: HG3DClass -> HG3DClass -> Float -> Float -> Bool -> Bool -> IO ()
setInterpolationMode :: HG3DClass -> EnumAnimationInterpolationMode -> IO ()
getInterpolationMode :: HG3DClass -> IO (EnumAnimationInterpolationMode)
setRotationInterpolationMode :: HG3DClass -> EnumAnimationRotationInterpolationMode -> IO ()
getRotationInterpolationMode :: HG3DClass -> IO (EnumAnimationRotationInterpolationMode)
optimise :: HG3DClass -> Bool -> IO ()
clone :: HG3DClass -> String -> IO (HG3DClass)
setUseBaseKeyFrame :: HG3DClass -> Bool -> Float -> String -> IO ()
getUseBaseKeyFrame :: HG3DClass -> IO (Bool)
getBaseKeyFrameTime :: HG3DClass -> IO (Float)
getBaseKeyFrameAnimationName :: HG3DClass -> IO (String)
setDefaultInterpolationMode :: EnumAnimationInterpolationMode -> IO ()
getDefaultInterpolationMode :: IO (EnumAnimationInterpolationMode)
setDefaultRotationInterpolationMode :: EnumAnimationRotationInterpolationMode -> IO ()
getDefaultRotationInterpolationMode :: IO (EnumAnimationRotationInterpolationMode)
delete'_ :: (HG3DClassPtr) -> (IO ())
getName'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
getLength'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
setLength'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
createNodeTrack'_ :: (HG3DClassPtr) -> (CUShort -> ((HG3DClassPtr) -> (IO ())))
createNumericTrack'_ :: (HG3DClassPtr) -> (CUShort -> ((HG3DClassPtr) -> (IO ())))
createVertexTrack'_ :: (HG3DClassPtr) -> (CUShort -> (CInt -> ((HG3DClassPtr) -> (IO ()))))
createNodeTrack2'_ :: (HG3DClassPtr) -> (CUShort -> ((HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))))
getNumNodeTracks'_ :: (HG3DClassPtr) -> ((Ptr CUShort) -> (IO ()))
getNodeTrack'_ :: (HG3DClassPtr) -> (CUShort -> ((HG3DClassPtr) -> (IO ())))
hasNodeTrack'_ :: (HG3DClassPtr) -> (CUShort -> ((Ptr CInt) -> (IO ())))
getNumNumericTracks'_ :: (HG3DClassPtr) -> ((Ptr CUShort) -> (IO ()))
getNumericTrack'_ :: (HG3DClassPtr) -> (CUShort -> ((HG3DClassPtr) -> (IO ())))
hasNumericTrack'_ :: (HG3DClassPtr) -> (CUShort -> ((Ptr CInt) -> (IO ())))
getNumVertexTracks'_ :: (HG3DClassPtr) -> ((Ptr CUShort) -> (IO ()))
getVertexTrack'_ :: (HG3DClassPtr) -> (CUShort -> ((HG3DClassPtr) -> (IO ())))
hasVertexTrack'_ :: (HG3DClassPtr) -> (CUShort -> ((Ptr CInt) -> (IO ())))
destroyNodeTrack'_ :: (HG3DClassPtr) -> (CUShort -> (IO ()))
destroyNumericTrack'_ :: (HG3DClassPtr) -> (CUShort -> (IO ()))
destroyVertexTrack'_ :: (HG3DClassPtr) -> (CUShort -> (IO ()))
destroyAllTracks'_ :: (HG3DClassPtr) -> (IO ())
destroyAllNodeTracks'_ :: (HG3DClassPtr) -> (IO ())
destroyAllNumericTracks'_ :: (HG3DClassPtr) -> (IO ())
destroyAllVertexTracks'_ :: (HG3DClassPtr) -> (IO ())
apply'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (IO ()))))
applyToNode'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (IO ())))))
apply2'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (IO ())))))
apply4'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (CFloat -> (CFloat -> (CInt -> (CInt -> (IO ()))))))
setInterpolationMode'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getInterpolationMode'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setRotationInterpolationMode'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getRotationInterpolationMode'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
optimise'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
clone'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
setUseBaseKeyFrame'_ :: (HG3DClassPtr) -> (CInt -> (CFloat -> ((Ptr CChar) -> (IO ()))))
getUseBaseKeyFrame'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getBaseKeyFrameTime'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
getBaseKeyFrameAnimationName'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
setDefaultInterpolationMode'_ :: CInt -> (IO ())
getDefaultInterpolationMode'_ :: (Ptr CInt) -> (IO ())
setDefaultRotationInterpolationMode'_ :: CInt -> (IO ())
getDefaultRotationInterpolationMode'_ :: (Ptr CInt) -> (IO ())

module HGamer3D.Bindings.Ogre.ClassAnimationState
new :: String -> HG3DClass -> Float -> Float -> Float -> Bool -> IO (HG3DClass)
delete :: HG3DClass -> IO ()
getAnimationName :: HG3DClass -> IO (String)
getTimePosition :: HG3DClass -> IO (Float)
setTimePosition :: HG3DClass -> Float -> IO ()
getLength :: HG3DClass -> IO (Float)
setLength :: HG3DClass -> Float -> IO ()
getWeight :: HG3DClass -> IO (Float)
setWeight :: HG3DClass -> Float -> IO ()
addTime :: HG3DClass -> Float -> IO ()
hasEnded :: HG3DClass -> IO (Bool)
getEnabled :: HG3DClass -> IO (Bool)
setEnabled :: HG3DClass -> Bool -> IO ()
setLoop :: HG3DClass -> Bool -> IO ()
getLoop :: HG3DClass -> IO (Bool)
copyStateFrom :: HG3DClass -> HG3DClass -> IO ()
getParent :: HG3DClass -> IO (HG3DClass)
createBlendMask :: HG3DClass -> Int -> Float -> IO ()
destroyBlendMask :: HG3DClass -> IO ()
hasBlendMask :: HG3DClass -> IO (Bool)
setBlendMaskEntry :: HG3DClass -> Int -> Float -> IO ()
getBlendMaskEntry :: HG3DClass -> Int -> IO (Float)
new'_ :: (Ptr CChar) -> ((HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (CInt -> ((HG3DClassPtr) -> (IO ())))))))
delete'_ :: (HG3DClassPtr) -> (IO ())
getAnimationName'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
getTimePosition'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
setTimePosition'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
getLength'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
setLength'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
getWeight'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
setWeight'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
addTime'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
hasEnded'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getEnabled'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setEnabled'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
setLoop'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getLoop'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
copyStateFrom'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
getParent'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
createBlendMask'_ :: (HG3DClassPtr) -> (CInt -> (CFloat -> (IO ())))
destroyBlendMask'_ :: (HG3DClassPtr) -> (IO ())
hasBlendMask'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setBlendMaskEntry'_ :: (HG3DClassPtr) -> (CInt -> (CFloat -> (IO ())))
getBlendMaskEntry'_ :: (HG3DClassPtr) -> (CInt -> ((Ptr CFloat) -> (IO ())))

module HGamer3D.Bindings.Ogre.ClassAnimationStateSet
delete :: HG3DClass -> IO ()
createAnimationState :: HG3DClass -> String -> Float -> Float -> Float -> Bool -> IO (HG3DClass)
getAnimationState :: HG3DClass -> String -> IO (HG3DClass)
hasAnimationState :: HG3DClass -> String -> IO (Bool)
removeAnimationState :: HG3DClass -> String -> IO ()
removeAllAnimationStates :: HG3DClass -> IO ()
copyMatchingState :: HG3DClass -> HG3DClass -> IO ()
hasEnabledAnimationState :: HG3DClass -> IO (Bool)
delete'_ :: (HG3DClassPtr) -> (IO ())
createAnimationState'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (CFloat -> (CFloat -> (CFloat -> (CInt -> ((HG3DClassPtr) -> (IO ())))))))
getAnimationState'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
hasAnimationState'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CInt) -> (IO ())))
removeAnimationState'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
removeAllAnimationStates'_ :: (HG3DClassPtr) -> (IO ())
copyMatchingState'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
hasEnabledAnimationState'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))

module HGamer3D.Bindings.Ogre.ClassAnimationTrack
delete :: HG3DClass -> IO ()
getHandle :: HG3DClass -> IO (Int)
getNumKeyFrames :: HG3DClass -> IO (Int)
removeKeyFrame :: HG3DClass -> Int -> IO ()
removeAllKeyFrames :: HG3DClass -> IO ()
apply :: HG3DClass -> HG3DClass -> Float -> Float -> IO ()
hasNonZeroKeyFrames :: HG3DClass -> IO (Bool)
optimise :: HG3DClass -> IO ()
getParent :: HG3DClass -> IO (HG3DClass)
delete'_ :: (HG3DClassPtr) -> (IO ())
getHandle'_ :: (HG3DClassPtr) -> ((Ptr CUShort) -> (IO ()))
getNumKeyFrames'_ :: (HG3DClassPtr) -> ((Ptr CUShort) -> (IO ()))
removeKeyFrame'_ :: (HG3DClassPtr) -> (CUShort -> (IO ()))
removeAllKeyFrames'_ :: (HG3DClassPtr) -> (IO ())
apply'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (CFloat -> (CFloat -> (IO ()))))
hasNonZeroKeyFrames'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
optimise'_ :: (HG3DClassPtr) -> (IO ())
getParent'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))

module HGamer3D.Bindings.Ogre.ClassArchive
delete :: HG3DClass -> IO ()
getName :: HG3DClass -> IO (String)
isCaseSensitive :: HG3DClass -> IO (Bool)
load :: HG3DClass -> IO ()
unload :: HG3DClass -> IO ()
isReadOnly :: HG3DClass -> IO (Bool)
remove :: HG3DClass -> String -> IO ()
exists :: HG3DClass -> String -> IO (Bool)
getType :: HG3DClass -> IO (String)
delete'_ :: (HG3DClassPtr) -> (IO ())
getName'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
isCaseSensitive'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
load'_ :: (HG3DClassPtr) -> (IO ())
unload'_ :: (HG3DClassPtr) -> (IO ())
isReadOnly'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
remove'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
exists'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CInt) -> (IO ())))
getType'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))

module HGamer3D.Bindings.Ogre.ClassArchiveManager
delete :: HG3DClass -> IO ()
load :: HG3DClass -> String -> String -> IO (HG3DClass)
unload :: HG3DClass -> HG3DClass -> IO ()
unload2 :: HG3DClass -> String -> IO ()
getSingleton :: IO (HG3DClass)
getSingletonPtr :: IO (HG3DClass)
delete'_ :: (HG3DClassPtr) -> (IO ())
load'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ()))))
unload'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
unload2'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
getSingleton'_ :: (HG3DClassPtr) -> (IO ())
getSingletonPtr'_ :: (HG3DClassPtr) -> (IO ())

module HGamer3D.Bindings.Ogre.ClassBillboard
new :: IO (HG3DClass)
delete :: HG3DClass -> IO ()
getRotation :: HG3DClass -> IO (Radians)
setRotation :: HG3DClass -> Radians -> IO ()
setPosition :: HG3DClass -> Vec3 -> IO ()
setPosition2 :: HG3DClass -> Float -> Float -> Float -> IO ()
getPosition :: HG3DClass -> IO (Vec3)
setDimensions :: HG3DClass -> Float -> Float -> IO ()
resetDimensions :: HG3DClass -> IO ()
setColour :: HG3DClass -> Colour -> IO ()
getColour :: HG3DClass -> IO (Colour)
hasOwnDimensions :: HG3DClass -> IO (Bool)
getOwnWidth :: HG3DClass -> IO (Float)
getOwnHeight :: HG3DClass -> IO (Float)
isUseTexcoordRect :: HG3DClass -> IO (Bool)
setTexcoordIndex :: HG3DClass -> Int -> IO ()
getTexcoordIndex :: HG3DClass -> IO (Int)
setTexcoordRect2 :: HG3DClass -> Float -> Float -> Float -> Float -> IO ()
new'_ :: (HG3DClassPtr) -> (IO ())
delete'_ :: (HG3DClassPtr) -> (IO ())
getRotation'_ :: (HG3DClassPtr) -> ((RadiansPtr) -> (IO ()))
setRotation'_ :: (HG3DClassPtr) -> ((RadiansPtr) -> (IO ()))
setPosition'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
setPosition2'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (IO ()))))
getPosition'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
setDimensions'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (IO ())))
resetDimensions'_ :: (HG3DClassPtr) -> (IO ())
setColour'_ :: (HG3DClassPtr) -> ((ColourPtr) -> (IO ()))
getColour'_ :: (HG3DClassPtr) -> ((ColourPtr) -> (IO ()))
hasOwnDimensions'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getOwnWidth'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
getOwnHeight'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
isUseTexcoordRect'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setTexcoordIndex'_ :: (HG3DClassPtr) -> (CUShort -> (IO ()))
getTexcoordIndex'_ :: (HG3DClassPtr) -> ((Ptr CUShort) -> (IO ()))
setTexcoordRect2'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (CFloat -> (IO ())))))

module HGamer3D.Bindings.Ogre.ClassBillboardChain
delete :: HG3DClass -> IO ()
setMaxChainElements :: HG3DClass -> Int -> IO ()
getMaxChainElements :: HG3DClass -> IO (Int)
setNumberOfChains :: HG3DClass -> Int -> IO ()
getNumberOfChains :: HG3DClass -> IO (Int)
setUseTextureCoords :: HG3DClass -> Bool -> IO ()
getUseTextureCoords :: HG3DClass -> IO (Bool)
setTextureCoordDirection :: HG3DClass -> EnumBillboardChainTexCoordDirection -> IO ()
getTextureCoordDirection :: HG3DClass -> IO (EnumBillboardChainTexCoordDirection)
setOtherTextureCoordRange :: HG3DClass -> Float -> Float -> IO ()
setUseVertexColours :: HG3DClass -> Bool -> IO ()
getUseVertexColours :: HG3DClass -> IO (Bool)
setDynamic :: HG3DClass -> Bool -> IO ()
getDynamic :: HG3DClass -> IO (Bool)
removeChainElement :: HG3DClass -> Int -> IO ()
getNumChainElements :: HG3DClass -> Int -> IO (Int)
clearChain :: HG3DClass -> Int -> IO ()
clearAllChains :: HG3DClass -> IO ()
setFaceCamera :: HG3DClass -> Bool -> Vec3 -> IO ()
getMaterialName :: HG3DClass -> IO (String)
setMaterialName :: HG3DClass -> String -> String -> IO ()
getSquaredViewDepth :: HG3DClass -> HG3DClass -> IO (Float)
getBoundingRadius :: HG3DClass -> IO (Float)
getMaterial :: HG3DClass -> IO (SharedPtr)
getMovableType :: HG3DClass -> IO (String)
preRender :: HG3DClass -> HG3DClass -> HG3DClass -> IO (Bool)
delete'_ :: (HG3DClassPtr) -> (IO ())
setMaxChainElements'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getMaxChainElements'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setNumberOfChains'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getNumberOfChains'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setUseTextureCoords'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getUseTextureCoords'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setTextureCoordDirection'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getTextureCoordDirection'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setOtherTextureCoordRange'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (IO ())))
setUseVertexColours'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getUseVertexColours'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setDynamic'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getDynamic'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
removeChainElement'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getNumChainElements'_ :: (HG3DClassPtr) -> (CInt -> ((Ptr CInt) -> (IO ())))
clearChain'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
clearAllChains'_ :: (HG3DClassPtr) -> (IO ())
setFaceCamera'_ :: (HG3DClassPtr) -> (CInt -> ((Vec3Ptr) -> (IO ())))
getMaterialName'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
setMaterialName'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CChar) -> (IO ())))
getSquaredViewDepth'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> ((Ptr CFloat) -> (IO ())))
getBoundingRadius'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
getMaterial'_ :: (HG3DClassPtr) -> ((SharedPtrPtr) -> (IO ()))
getMovableType'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
preRender'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> ((HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))))

module HGamer3D.Bindings.Ogre.ClassBillboardChainFactory
new :: IO (HG3DClass)
delete :: HG3DClass -> IO ()
getType :: HG3DClass -> IO (String)
destroyInstance :: HG3DClass -> HG3DClass -> IO ()
new'_ :: (HG3DClassPtr) -> (IO ())
delete'_ :: (HG3DClassPtr) -> (IO ())
getType'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
destroyInstance'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))

module HGamer3D.Bindings.Ogre.ClassBillboardSet
new :: String -> Int -> Bool -> IO (HG3DClass)
delete :: HG3DClass -> IO ()
createBillboard :: HG3DClass -> Vec3 -> Colour -> IO (HG3DClass)
createBillboard2 :: HG3DClass -> Float -> Float -> Float -> Colour -> IO (HG3DClass)
getNumBillboards :: HG3DClass -> IO (Int)
setAutoextend :: HG3DClass -> Bool -> IO ()
getAutoextend :: HG3DClass -> IO (Bool)
setSortingEnabled :: HG3DClass -> Bool -> IO ()
getSortingEnabled :: HG3DClass -> IO (Bool)
setPoolSize :: HG3DClass -> Int -> IO ()
getPoolSize :: HG3DClass -> IO (Int)
clear :: HG3DClass -> IO ()
getBillboard :: HG3DClass -> Int -> IO (HG3DClass)
removeBillboard :: HG3DClass -> Int -> IO ()
removeBillboard2 :: HG3DClass -> HG3DClass -> IO ()
setBillboardOrigin :: HG3DClass -> EnumBillboardOrigin -> IO ()
getBillboardOrigin :: HG3DClass -> IO (EnumBillboardOrigin)
setBillboardRotationType :: HG3DClass -> EnumBillboardRotationType -> IO ()
getBillboardRotationType :: HG3DClass -> IO (EnumBillboardRotationType)
setDefaultDimensions :: HG3DClass -> Float -> Float -> IO ()
setDefaultWidth :: HG3DClass -> Float -> IO ()
getDefaultWidth :: HG3DClass -> IO (Float)
setDefaultHeight :: HG3DClass -> Float -> IO ()
getDefaultHeight :: HG3DClass -> IO (Float)
setMaterialName :: HG3DClass -> String -> String -> IO ()
getMaterialName :: HG3DClass -> IO (String)
beginBillboards :: HG3DClass -> Int -> IO ()
injectBillboard :: HG3DClass -> HG3DClass -> IO ()
endBillboards :: HG3DClass -> IO ()
getBoundingRadius :: HG3DClass -> IO (Float)
getMaterial :: HG3DClass -> IO (SharedPtr)
setMaterial :: HG3DClass -> SharedPtr -> IO ()
getCullIndividually :: HG3DClass -> IO (Bool)
setCullIndividually :: HG3DClass -> Bool -> IO ()
setBillboardType :: HG3DClass -> EnumBillboardType -> IO ()
getBillboardType :: HG3DClass -> IO (EnumBillboardType)
setCommonDirection :: HG3DClass -> Vec3 -> IO ()
getCommonDirection :: HG3DClass -> IO (Vec3)
setCommonUpVector :: HG3DClass -> Vec3 -> IO ()
getCommonUpVector :: HG3DClass -> IO (Vec3)
setUseAccurateFacing :: HG3DClass -> Bool -> IO ()
getUseAccurateFacing :: HG3DClass -> IO (Bool)
getMovableType :: HG3DClass -> IO (String)
getSquaredViewDepth :: HG3DClass -> HG3DClass -> IO (Float)
setBillboardsInWorldSpace :: HG3DClass -> Bool -> IO ()
setPointRenderingEnabled :: HG3DClass -> Bool -> IO ()
isPointRenderingEnabled :: HG3DClass -> IO (Bool)
getTypeFlags :: HG3DClass -> IO (Int)
setAutoUpdate :: HG3DClass -> Bool -> IO ()
getAutoUpdate :: HG3DClass -> IO (Bool)
notifyBillboardDataChanged :: HG3DClass -> IO ()
new'_ :: (Ptr CChar) -> (CUInt -> (CInt -> ((HG3DClassPtr) -> (IO ()))))
delete'_ :: (HG3DClassPtr) -> (IO ())
createBillboard'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> ((ColourPtr) -> ((HG3DClassPtr) -> (IO ()))))
createBillboard2'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> ((ColourPtr) -> ((HG3DClassPtr) -> (IO ()))))))
getNumBillboards'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setAutoextend'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getAutoextend'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setSortingEnabled'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getSortingEnabled'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setPoolSize'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getPoolSize'_ :: (HG3DClassPtr) -> ((Ptr CUInt) -> (IO ()))
clear'_ :: (HG3DClassPtr) -> (IO ())
getBillboard'_ :: (HG3DClassPtr) -> (CUInt -> ((HG3DClassPtr) -> (IO ())))
removeBillboard'_ :: (HG3DClassPtr) -> (CUInt -> (IO ()))
removeBillboard2'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
setBillboardOrigin'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getBillboardOrigin'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setBillboardRotationType'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getBillboardRotationType'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setDefaultDimensions'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (IO ())))
setDefaultWidth'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
getDefaultWidth'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
setDefaultHeight'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
getDefaultHeight'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
setMaterialName'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CChar) -> (IO ())))
getMaterialName'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
beginBillboards'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
injectBillboard'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
endBillboards'_ :: (HG3DClassPtr) -> (IO ())
getBoundingRadius'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
getMaterial'_ :: (HG3DClassPtr) -> ((SharedPtrPtr) -> (IO ()))
setMaterial'_ :: (HG3DClassPtr) -> ((SharedPtrPtr) -> (IO ()))
getCullIndividually'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setCullIndividually'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
setBillboardType'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getBillboardType'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setCommonDirection'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
getCommonDirection'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
setCommonUpVector'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
getCommonUpVector'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
setUseAccurateFacing'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getUseAccurateFacing'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getMovableType'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
getSquaredViewDepth'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> ((Ptr CFloat) -> (IO ())))
setBillboardsInWorldSpace'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
setPointRenderingEnabled'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
isPointRenderingEnabled'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getTypeFlags'_ :: (HG3DClassPtr) -> ((Ptr CUInt) -> (IO ()))
setAutoUpdate'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getAutoUpdate'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
notifyBillboardDataChanged'_ :: (HG3DClassPtr) -> (IO ())

module HGamer3D.Bindings.Ogre.ClassBillboardSetFactory
new :: IO (HG3DClass)
delete :: HG3DClass -> IO ()
getType :: HG3DClass -> IO (String)
destroyInstance :: HG3DClass -> HG3DClass -> IO ()
new'_ :: (HG3DClassPtr) -> (IO ())
delete'_ :: (HG3DClassPtr) -> (IO ())
getType'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
destroyInstance'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))

module HGamer3D.Bindings.Ogre.ClassBone
delete :: HG3DClass -> IO ()
createChild :: HG3DClass -> Int -> Vec3 -> Quaternion -> IO (HG3DClass)
getHandle :: HG3DClass -> IO (Int)
setBindingPose :: HG3DClass -> IO ()
reset :: HG3DClass -> IO ()
setManuallyControlled :: HG3DClass -> Bool -> IO ()
isManuallyControlled :: HG3DClass -> IO (Bool)
needUpdate :: HG3DClass -> Bool -> IO ()
delete'_ :: (HG3DClassPtr) -> (IO ())
createChild'_ :: (HG3DClassPtr) -> (CUShort -> ((Vec3Ptr) -> ((QuaternionPtr) -> ((HG3DClassPtr) -> (IO ())))))
getHandle'_ :: (HG3DClassPtr) -> ((Ptr CUShort) -> (IO ()))
setBindingPose'_ :: (HG3DClassPtr) -> (IO ())
reset'_ :: (HG3DClassPtr) -> (IO ())
setManuallyControlled'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
isManuallyControlled'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
needUpdate'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))

module HGamer3D.Bindings.Ogre.ClassCamera
new :: String -> HG3DClass -> IO (HG3DClass)
delete :: HG3DClass -> IO ()
getSceneManager :: HG3DClass -> IO (HG3DClass)
setPosition :: HG3DClass -> Float -> Float -> Float -> IO ()
setPosition2 :: HG3DClass -> Vec3 -> IO ()
getPosition :: HG3DClass -> IO (Vec3)
move :: HG3DClass -> Vec3 -> IO ()
moveRelative :: HG3DClass -> Vec3 -> IO ()
setDirection :: HG3DClass -> Float -> Float -> Float -> IO ()
setDirection2 :: HG3DClass -> Vec3 -> IO ()
getDirection :: HG3DClass -> IO (Vec3)
getUp :: HG3DClass -> IO (Vec3)
getRight :: HG3DClass -> IO (Vec3)
lookAt :: HG3DClass -> Vec3 -> IO ()
lookAt2 :: HG3DClass -> Float -> Float -> Float -> IO ()
roll :: HG3DClass -> Radians -> IO ()
yaw :: HG3DClass -> Radians -> IO ()
pitch :: HG3DClass -> Radians -> IO ()
rotate :: HG3DClass -> Vec3 -> Radians -> IO ()
rotate2 :: HG3DClass -> Quaternion -> IO ()
setFixedYawAxis :: HG3DClass -> Bool -> Vec3 -> IO ()
getOrientation :: HG3DClass -> IO (Quaternion)
setOrientation :: HG3DClass -> Quaternion -> IO ()
getDerivedOrientation :: HG3DClass -> IO (Quaternion)
getDerivedPosition :: HG3DClass -> IO (Vec3)
getDerivedDirection :: HG3DClass -> IO (Vec3)
getDerivedUp :: HG3DClass -> IO (Vec3)
getDerivedRight :: HG3DClass -> IO (Vec3)
getRealOrientation :: HG3DClass -> IO (Quaternion)
getRealPosition :: HG3DClass -> IO (Vec3)
getRealDirection :: HG3DClass -> IO (Vec3)
getRealUp :: HG3DClass -> IO (Vec3)
getRealRight :: HG3DClass -> IO (Vec3)
getMovableType :: HG3DClass -> IO (String)
setLodBias :: HG3DClass -> Float -> IO ()
getLodBias :: HG3DClass -> IO (Float)
setLodCamera :: HG3DClass -> HG3DClass -> IO ()
getLodCamera :: HG3DClass -> IO (HG3DClass)
setWindow :: HG3DClass -> Float -> Float -> Float -> Float -> IO ()
resetWindow :: HG3DClass -> IO ()
isWindowSet :: HG3DClass -> IO (Bool)
getBoundingRadius :: HG3DClass -> IO (Float)
getAutoTrackTarget :: HG3DClass -> IO (HG3DClass)
getAutoTrackOffset :: HG3DClass -> IO (Vec3)
getViewport :: HG3DClass -> IO (HG3DClass)
setAutoAspectRatio :: HG3DClass -> Bool -> IO ()
getAutoAspectRatio :: HG3DClass -> IO (Bool)
setCullingFrustum :: HG3DClass -> HG3DClass -> IO ()
getCullingFrustum :: HG3DClass -> IO (HG3DClass)
isVisible3 :: HG3DClass -> Vec3 -> IO (EnumFrustumPlane, Bool)
getWorldSpaceCorners :: HG3DClass -> IO (Vec3)
getNearClipDistance :: HG3DClass -> IO (Float)
getFarClipDistance :: HG3DClass -> IO (Float)
setUseRenderingDistance :: HG3DClass -> Bool -> IO ()
getUseRenderingDistance :: HG3DClass -> IO (Bool)
synchroniseBaseSettingsWith :: HG3DClass -> HG3DClass -> IO ()
getPositionForViewUpdate :: HG3DClass -> IO (Vec3)
getOrientationForViewUpdate :: HG3DClass -> IO (Quaternion)
setUseMinPixelSize :: HG3DClass -> Bool -> IO ()
getUseMinPixelSize :: HG3DClass -> IO (Bool)
getPixelDisplayRatio :: HG3DClass -> IO (Float)
new'_ :: (Ptr CChar) -> ((HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ())))
delete'_ :: (HG3DClassPtr) -> (IO ())
getSceneManager'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
setPosition'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (IO ()))))
setPosition2'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
getPosition'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
move'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
moveRelative'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
setDirection'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (IO ()))))
setDirection2'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
getDirection'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
getUp'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
getRight'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
lookAt'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
lookAt2'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (IO ()))))
roll'_ :: (HG3DClassPtr) -> ((RadiansPtr) -> (IO ()))
yaw'_ :: (HG3DClassPtr) -> ((RadiansPtr) -> (IO ()))
pitch'_ :: (HG3DClassPtr) -> ((RadiansPtr) -> (IO ()))
rotate'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> ((RadiansPtr) -> (IO ())))
rotate2'_ :: (HG3DClassPtr) -> ((QuaternionPtr) -> (IO ()))
setFixedYawAxis'_ :: (HG3DClassPtr) -> (CInt -> ((Vec3Ptr) -> (IO ())))
getOrientation'_ :: (HG3DClassPtr) -> ((QuaternionPtr) -> (IO ()))
setOrientation'_ :: (HG3DClassPtr) -> ((QuaternionPtr) -> (IO ()))
getDerivedOrientation'_ :: (HG3DClassPtr) -> ((QuaternionPtr) -> (IO ()))
getDerivedPosition'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
getDerivedDirection'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
getDerivedUp'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
getDerivedRight'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
getRealOrientation'_ :: (HG3DClassPtr) -> ((QuaternionPtr) -> (IO ()))
getRealPosition'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
getRealDirection'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
getRealUp'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
getRealRight'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
getMovableType'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
setLodBias'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
getLodBias'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
setLodCamera'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
getLodCamera'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
setWindow'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (CFloat -> (IO ())))))
resetWindow'_ :: (HG3DClassPtr) -> (IO ())
isWindowSet'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getBoundingRadius'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
getAutoTrackTarget'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
getAutoTrackOffset'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
getViewport'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
setAutoAspectRatio'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getAutoAspectRatio'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setCullingFrustum'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
getCullingFrustum'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
isVisible3'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> ((Ptr CInt) -> ((Ptr CInt) -> (IO ()))))
getWorldSpaceCorners'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
getNearClipDistance'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
getFarClipDistance'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
setUseRenderingDistance'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getUseRenderingDistance'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
synchroniseBaseSettingsWith'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
getPositionForViewUpdate'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
getOrientationForViewUpdate'_ :: (HG3DClassPtr) -> ((QuaternionPtr) -> (IO ()))
setUseMinPixelSize'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getUseMinPixelSize'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getPixelDisplayRatio'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))

module HGamer3D.Bindings.Ogre.ClassConfigFile
new :: IO (HG3DClass)
delete :: HG3DClass -> IO ()
load :: HG3DClass -> String -> String -> Bool -> IO ()
load2 :: HG3DClass -> String -> String -> String -> Bool -> IO ()
loadDirect :: HG3DClass -> String -> String -> Bool -> IO ()
loadFromResourceSystem :: HG3DClass -> String -> String -> String -> Bool -> IO ()
getSetting :: HG3DClass -> String -> String -> String -> IO (String)
clear :: HG3DClass -> IO ()
new'_ :: (HG3DClassPtr) -> (IO ())
delete'_ :: (HG3DClassPtr) -> (IO ())
load'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CChar) -> (CInt -> (IO ()))))
load2'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CChar) -> ((Ptr CChar) -> (CInt -> (IO ())))))
loadDirect'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CChar) -> (CInt -> (IO ()))))
loadFromResourceSystem'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CChar) -> ((Ptr CChar) -> (CInt -> (IO ())))))
getSetting'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CChar) -> ((Ptr CChar) -> ((Ptr CChar) -> (IO ())))))
clear'_ :: (HG3DClassPtr) -> (IO ())

module HGamer3D.Bindings.Ogre.ClassControllerManager
new :: IO (HG3DClass)
delete :: HG3DClass -> IO ()
clearControllers :: HG3DClass -> IO ()
updateAllControllers :: HG3DClass -> IO ()
getTimeFactor :: HG3DClass -> IO (Float)
setTimeFactor :: HG3DClass -> Float -> IO ()
getFrameDelay :: HG3DClass -> IO (Float)
setFrameDelay :: HG3DClass -> Float -> IO ()
getElapsedTime :: HG3DClass -> IO (Float)
setElapsedTime :: HG3DClass -> Float -> IO ()
getSingleton :: IO (HG3DClass)
getSingletonPtr :: IO (HG3DClass)
new'_ :: (HG3DClassPtr) -> (IO ())
delete'_ :: (HG3DClassPtr) -> (IO ())
clearControllers'_ :: (HG3DClassPtr) -> (IO ())
updateAllControllers'_ :: (HG3DClassPtr) -> (IO ())
getTimeFactor'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
setTimeFactor'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
getFrameDelay'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
setFrameDelay'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
getElapsedTime'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
setElapsedTime'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
getSingleton'_ :: (HG3DClassPtr) -> (IO ())
getSingletonPtr'_ :: (HG3DClassPtr) -> (IO ())

module HGamer3D.Bindings.Ogre.ClassEntity
delete :: HG3DClass -> IO ()
getMesh :: HG3DClass -> IO (SharedPtr)
getNumSubEntities :: HG3DClass -> IO (Int)
clone :: HG3DClass -> String -> IO (HG3DClass)
setMaterialName :: HG3DClass -> String -> String -> IO ()
setMaterial :: HG3DClass -> SharedPtr -> IO ()
getMovableType :: HG3DClass -> IO (String)
getAnimationState :: HG3DClass -> String -> IO (HG3DClass)
hasAnimationState :: HG3DClass -> String -> IO (Bool)
getAllAnimationStates :: HG3DClass -> IO (HG3DClass)
setDisplaySkeleton :: HG3DClass -> Bool -> IO ()
getDisplaySkeleton :: HG3DClass -> IO (Bool)
getManualLodLevel :: HG3DClass -> Int -> IO (HG3DClass)
getNumManualLodLevels :: HG3DClass -> IO (Int)
setPolygonModeOverrideable :: HG3DClass -> Bool -> IO ()
detachObjectFromBone :: HG3DClass -> String -> IO (HG3DClass)
detachObjectFromBone2 :: HG3DClass -> HG3DClass -> IO ()
detachAllObjectsFromBone :: HG3DClass -> IO ()
getBoundingRadius :: HG3DClass -> IO (Float)
hasEdgeList :: HG3DClass -> IO (Bool)
hasSkeleton :: HG3DClass -> IO (Bool)
isHardwareAnimationEnabled :: HG3DClass -> IO (Bool)
getSoftwareAnimationRequests :: HG3DClass -> IO (Int)
getSoftwareAnimationNormalsRequests :: HG3DClass -> IO (Int)
addSoftwareAnimationRequest :: HG3DClass -> Bool -> IO ()
removeSoftwareAnimationRequest :: HG3DClass -> Bool -> IO ()
shareSkeletonInstanceWith :: HG3DClass -> HG3DClass -> IO ()
hasVertexAnimation :: HG3DClass -> IO (Bool)
stopSharingSkeletonInstance :: HG3DClass -> IO ()
sharesSkeletonInstance :: HG3DClass -> IO (Bool)
refreshAvailableAnimationState :: HG3DClass -> IO ()
chooseVertexDataForBinding :: HG3DClass -> Bool -> IO (EnumEntityVertexDataBindChoice)
isInitialised :: HG3DClass -> IO (Bool)
backgroundLoadingComplete :: HG3DClass -> HG3DClass -> IO ()
setSkipAnimationStateUpdate :: HG3DClass -> Bool -> IO ()
getSkipAnimationStateUpdate :: HG3DClass -> IO (Bool)
setAlwaysUpdateMainSkeleton :: HG3DClass -> Bool -> IO ()
getAlwaysUpdateMainSkeleton :: HG3DClass -> IO (Bool)
delete'_ :: (HG3DClassPtr) -> (IO ())
getMesh'_ :: (HG3DClassPtr) -> ((SharedPtrPtr) -> (IO ()))
getNumSubEntities'_ :: (HG3DClassPtr) -> ((Ptr CUInt) -> (IO ()))
clone'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
setMaterialName'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CChar) -> (IO ())))
setMaterial'_ :: (HG3DClassPtr) -> ((SharedPtrPtr) -> (IO ()))
getMovableType'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
getAnimationState'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
hasAnimationState'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CInt) -> (IO ())))
getAllAnimationStates'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
setDisplaySkeleton'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getDisplaySkeleton'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getManualLodLevel'_ :: (HG3DClassPtr) -> (CInt -> ((HG3DClassPtr) -> (IO ())))
getNumManualLodLevels'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setPolygonModeOverrideable'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
detachObjectFromBone'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
detachObjectFromBone2'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
detachAllObjectsFromBone'_ :: (HG3DClassPtr) -> (IO ())
getBoundingRadius'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
hasEdgeList'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
hasSkeleton'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
isHardwareAnimationEnabled'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getSoftwareAnimationRequests'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getSoftwareAnimationNormalsRequests'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
addSoftwareAnimationRequest'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
removeSoftwareAnimationRequest'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
shareSkeletonInstanceWith'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
hasVertexAnimation'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
stopSharingSkeletonInstance'_ :: (HG3DClassPtr) -> (IO ())
sharesSkeletonInstance'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
refreshAvailableAnimationState'_ :: (HG3DClassPtr) -> (IO ())
chooseVertexDataForBinding'_ :: (HG3DClassPtr) -> (CInt -> ((Ptr CInt) -> (IO ())))
isInitialised'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
backgroundLoadingComplete'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
setSkipAnimationStateUpdate'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getSkipAnimationStateUpdate'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setAlwaysUpdateMainSkeleton'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getAlwaysUpdateMainSkeleton'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))

module HGamer3D.Bindings.Ogre.ClassEntityFactory
new :: IO (HG3DClass)
delete :: HG3DClass -> IO ()
getType :: HG3DClass -> IO (String)
destroyInstance :: HG3DClass -> HG3DClass -> IO ()
new'_ :: (HG3DClassPtr) -> (IO ())
delete'_ :: (HG3DClassPtr) -> (IO ())
getType'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
destroyInstance'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))

module HGamer3D.Bindings.Ogre.ClassException
new :: Int -> String -> String -> IO (HG3DClass)
delete :: HG3DClass -> IO ()
getFullDescription :: HG3DClass -> IO (String)
getNumber :: HG3DClass -> IO (Int)
getSource :: HG3DClass -> IO (String)
getFile :: HG3DClass -> IO (String)
getLine :: HG3DClass -> IO (Int)
getDescription :: HG3DClass -> IO (String)
what :: HG3DClass -> IO (String)
new'_ :: CInt -> ((Ptr CChar) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ()))))
delete'_ :: (HG3DClassPtr) -> (IO ())
getFullDescription'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
getNumber'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getSource'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
getFile'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
getLine'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getDescription'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
what'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))

module HGamer3D.Bindings.Ogre.ClassFrustum
new :: String -> IO (HG3DClass)
delete :: HG3DClass -> IO ()
setFOVy :: HG3DClass -> Radians -> IO ()
getFOVy :: HG3DClass -> IO (Radians)
setNearClipDistance :: HG3DClass -> Float -> IO ()
getNearClipDistance :: HG3DClass -> IO (Float)
setFarClipDistance :: HG3DClass -> Float -> IO ()
getFarClipDistance :: HG3DClass -> IO (Float)
setAspectRatio :: HG3DClass -> Float -> IO ()
getAspectRatio :: HG3DClass -> IO (Float)
setFrustumOffset :: HG3DClass -> Vec2 -> IO ()
setFrustumOffset2 :: HG3DClass -> Float -> Float -> IO ()
getFrustumOffset :: HG3DClass -> IO (Vec2)
setFocalLength :: HG3DClass -> Float -> IO ()
getFocalLength :: HG3DClass -> IO (Float)
setFrustumExtents :: HG3DClass -> Float -> Float -> Float -> Float -> IO ()
resetFrustumExtents :: HG3DClass -> IO ()
getFrustumExtents :: HG3DClass -> IO (Float, Float, Float, Float)
isCustomViewMatrixEnabled :: HG3DClass -> IO (Bool)
isCustomProjectionMatrixEnabled :: HG3DClass -> IO (Bool)
isVisible3 :: HG3DClass -> Vec3 -> IO (EnumFrustumPlane, Bool)
getTypeFlags :: HG3DClass -> IO (Int)
getBoundingRadius :: HG3DClass -> IO (Float)
getMovableType :: HG3DClass -> IO (String)
getMaterial :: HG3DClass -> IO (SharedPtr)
getSquaredViewDepth :: HG3DClass -> HG3DClass -> IO (Float)
getWorldSpaceCorners :: HG3DClass -> IO (Vec3)
setProjectionType :: HG3DClass -> EnumProjectionType -> IO ()
getProjectionType :: HG3DClass -> IO (EnumProjectionType)
setOrthoWindow :: HG3DClass -> Float -> Float -> IO ()
setOrthoWindowHeight :: HG3DClass -> Float -> IO ()
setOrthoWindowWidth :: HG3DClass -> Float -> IO ()
getOrthoWindowHeight :: HG3DClass -> IO (Float)
getOrthoWindowWidth :: HG3DClass -> IO (Float)
disableReflection :: HG3DClass -> IO ()
isReflected :: HG3DClass -> IO (Bool)
disableCustomNearClipPlane :: HG3DClass -> IO ()
isCustomNearClipPlaneEnabled :: HG3DClass -> IO (Bool)
getPositionForViewUpdate :: HG3DClass -> IO (Vec3)
getOrientationForViewUpdate :: HG3DClass -> IO (Quaternion)
setOrientationMode :: HG3DClass -> EnumOrientationMode -> IO ()
getOrientationMode :: HG3DClass -> IO (EnumOrientationMode)
new'_ :: (Ptr CChar) -> ((HG3DClassPtr) -> (IO ()))
delete'_ :: (HG3DClassPtr) -> (IO ())
setFOVy'_ :: (HG3DClassPtr) -> ((RadiansPtr) -> (IO ()))
getFOVy'_ :: (HG3DClassPtr) -> ((RadiansPtr) -> (IO ()))
setNearClipDistance'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
getNearClipDistance'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
setFarClipDistance'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
getFarClipDistance'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
setAspectRatio'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
getAspectRatio'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
setFrustumOffset'_ :: (HG3DClassPtr) -> ((Vec2Ptr) -> (IO ()))
setFrustumOffset2'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (IO ())))
getFrustumOffset'_ :: (HG3DClassPtr) -> ((Vec2Ptr) -> (IO ()))
setFocalLength'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
getFocalLength'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
setFrustumExtents'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (CFloat -> (IO ())))))
resetFrustumExtents'_ :: (HG3DClassPtr) -> (IO ())
getFrustumExtents'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> ((Ptr CFloat) -> ((Ptr CFloat) -> ((Ptr CFloat) -> (IO ())))))
isCustomViewMatrixEnabled'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
isCustomProjectionMatrixEnabled'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
isVisible3'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> ((Ptr CInt) -> ((Ptr CInt) -> (IO ()))))
getTypeFlags'_ :: (HG3DClassPtr) -> ((Ptr CUInt) -> (IO ()))
getBoundingRadius'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
getMovableType'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
getMaterial'_ :: (HG3DClassPtr) -> ((SharedPtrPtr) -> (IO ()))
getSquaredViewDepth'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> ((Ptr CFloat) -> (IO ())))
getWorldSpaceCorners'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
setProjectionType'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getProjectionType'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setOrthoWindow'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (IO ())))
setOrthoWindowHeight'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
setOrthoWindowWidth'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
getOrthoWindowHeight'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
getOrthoWindowWidth'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
disableReflection'_ :: (HG3DClassPtr) -> (IO ())
isReflected'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
disableCustomNearClipPlane'_ :: (HG3DClassPtr) -> (IO ())
isCustomNearClipPlaneEnabled'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getPositionForViewUpdate'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
getOrientationForViewUpdate'_ :: (HG3DClassPtr) -> ((QuaternionPtr) -> (IO ()))
setOrientationMode'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getOrientationMode'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))

module HGamer3D.Bindings.Ogre.ClassHG3DMessagePump
new :: IO (HG3DClass)
delete :: HG3DClass -> IO ()
messagePump :: HG3DClass -> IO ()
eventsPending :: HG3DClass -> IO (Bool)
getKeyUpEvent :: HG3DClass -> IO (Int)
getKeyDownEvent :: HG3DClass -> IO (Int)
getCharEvent :: HG3DClass -> IO (Int)
new'_ :: (HG3DClassPtr) -> (IO ())
delete'_ :: (HG3DClassPtr) -> (IO ())
messagePump'_ :: (HG3DClassPtr) -> (IO ())
eventsPending'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getKeyUpEvent'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getKeyDownEvent'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getCharEvent'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))

module HGamer3D.Bindings.Ogre.ClassLight
new :: String -> IO (HG3DClass)
delete :: HG3DClass -> IO ()
setType :: HG3DClass -> EnumLightType -> IO ()
getType :: HG3DClass -> IO (EnumLightType)
setDiffuseColour :: HG3DClass -> Float -> Float -> Float -> IO ()
setDiffuseColour2 :: HG3DClass -> Colour -> IO ()
getDiffuseColour :: HG3DClass -> IO (Colour)
setSpecularColour :: HG3DClass -> Float -> Float -> Float -> IO ()
setSpecularColour2 :: HG3DClass -> Colour -> IO ()
getSpecularColour :: HG3DClass -> IO (Colour)
setAttenuation :: HG3DClass -> Float -> Float -> Float -> Float -> IO ()
getAttenuationRange :: HG3DClass -> IO (Float)
getAttenuationConstant :: HG3DClass -> IO (Float)
getAttenuationLinear :: HG3DClass -> IO (Float)
getAttenuationQuadric :: HG3DClass -> IO (Float)
setPosition :: HG3DClass -> Float -> Float -> Float -> IO ()
setPosition2 :: HG3DClass -> Vec3 -> IO ()
getPosition :: HG3DClass -> IO (Vec3)
setDirection :: HG3DClass -> Float -> Float -> Float -> IO ()
setDirection2 :: HG3DClass -> Vec3 -> IO ()
getDirection :: HG3DClass -> IO (Vec3)
setSpotlightRange :: HG3DClass -> Radians -> Radians -> Float -> IO ()
getSpotlightInnerAngle :: HG3DClass -> IO (Radians)
getSpotlightOuterAngle :: HG3DClass -> IO (Radians)
getSpotlightFalloff :: HG3DClass -> IO (Float)
setSpotlightInnerAngle :: HG3DClass -> Radians -> IO ()
setSpotlightOuterAngle :: HG3DClass -> Radians -> IO ()
setSpotlightFalloff :: HG3DClass -> Float -> IO ()
setSpotlightNearClipDistance :: HG3DClass -> Float -> IO ()
getSpotlightNearClipDistance :: HG3DClass -> IO (Float)
setPowerScale :: HG3DClass -> Float -> IO ()
getPowerScale :: HG3DClass -> IO (Float)
getMovableType :: HG3DClass -> IO (String)
getDerivedPosition :: HG3DClass -> Bool -> IO (Vec3)
getDerivedDirection :: HG3DClass -> IO (Vec3)
setVisible :: HG3DClass -> Bool -> IO ()
getBoundingRadius :: HG3DClass -> IO (Float)
getTypeFlags :: HG3DClass -> IO (Int)
resetCustomShadowCameraSetup :: HG3DClass -> IO ()
setShadowFarDistance :: HG3DClass -> Float -> IO ()
resetShadowFarDistance :: HG3DClass -> IO ()
getShadowFarDistance :: HG3DClass -> IO (Float)
getShadowFarDistanceSquared :: HG3DClass -> IO (Float)
setShadowNearClipDistance :: HG3DClass -> Float -> IO ()
getShadowNearClipDistance :: HG3DClass -> IO (Float)
setShadowFarClipDistance :: HG3DClass -> Float -> IO ()
getShadowFarClipDistance :: HG3DClass -> IO (Float)
new'_ :: (Ptr CChar) -> ((HG3DClassPtr) -> (IO ()))
delete'_ :: (HG3DClassPtr) -> (IO ())
setType'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getType'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setDiffuseColour'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (IO ()))))
setDiffuseColour2'_ :: (HG3DClassPtr) -> ((ColourPtr) -> (IO ()))
getDiffuseColour'_ :: (HG3DClassPtr) -> ((ColourPtr) -> (IO ()))
setSpecularColour'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (IO ()))))
setSpecularColour2'_ :: (HG3DClassPtr) -> ((ColourPtr) -> (IO ()))
getSpecularColour'_ :: (HG3DClassPtr) -> ((ColourPtr) -> (IO ()))
setAttenuation'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (CFloat -> (IO ())))))
getAttenuationRange'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
getAttenuationConstant'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
getAttenuationLinear'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
getAttenuationQuadric'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
setPosition'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (IO ()))))
setPosition2'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
getPosition'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
setDirection'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (IO ()))))
setDirection2'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
getDirection'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
setSpotlightRange'_ :: (HG3DClassPtr) -> ((RadiansPtr) -> ((RadiansPtr) -> (CFloat -> (IO ()))))
getSpotlightInnerAngle'_ :: (HG3DClassPtr) -> ((RadiansPtr) -> (IO ()))
getSpotlightOuterAngle'_ :: (HG3DClassPtr) -> ((RadiansPtr) -> (IO ()))
getSpotlightFalloff'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
setSpotlightInnerAngle'_ :: (HG3DClassPtr) -> ((RadiansPtr) -> (IO ()))
setSpotlightOuterAngle'_ :: (HG3DClassPtr) -> ((RadiansPtr) -> (IO ()))
setSpotlightFalloff'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
setSpotlightNearClipDistance'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
getSpotlightNearClipDistance'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
setPowerScale'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
getPowerScale'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
getMovableType'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
getDerivedPosition'_ :: (HG3DClassPtr) -> (CInt -> ((Vec3Ptr) -> (IO ())))
getDerivedDirection'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
setVisible'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getBoundingRadius'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
getTypeFlags'_ :: (HG3DClassPtr) -> ((Ptr CUInt) -> (IO ()))
resetCustomShadowCameraSetup'_ :: (HG3DClassPtr) -> (IO ())
setShadowFarDistance'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
resetShadowFarDistance'_ :: (HG3DClassPtr) -> (IO ())
getShadowFarDistance'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
getShadowFarDistanceSquared'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
setShadowNearClipDistance'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
getShadowNearClipDistance'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
setShadowFarClipDistance'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
getShadowFarClipDistance'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))

module HGamer3D.Bindings.Ogre.ClassLightFactory
new :: IO (HG3DClass)
delete :: HG3DClass -> IO ()
getType :: HG3DClass -> IO (String)
destroyInstance :: HG3DClass -> HG3DClass -> IO ()
new'_ :: (HG3DClassPtr) -> (IO ())
delete'_ :: (HG3DClassPtr) -> (IO ())
getType'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
destroyInstance'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))

module HGamer3D.Bindings.Ogre.ClassLog
delete :: HG3DClass -> IO ()
getName :: HG3DClass -> IO (String)
isDebugOutputEnabled :: HG3DClass -> IO (Bool)
isFileOutputSuppressed :: HG3DClass -> IO (Bool)
isTimeStampEnabled :: HG3DClass -> IO (Bool)
logMessage :: HG3DClass -> String -> EnumLogMessageLevel -> Bool -> IO ()
setDebugOutputEnabled :: HG3DClass -> Bool -> IO ()
setLogDetail :: HG3DClass -> EnumLoggingLevel -> IO ()
setTimeStampEnabled :: HG3DClass -> Bool -> IO ()
getLogDetail :: HG3DClass -> IO (EnumLoggingLevel)
delete'_ :: (HG3DClassPtr) -> (IO ())
getName'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
isDebugOutputEnabled'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
isFileOutputSuppressed'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
isTimeStampEnabled'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
logMessage'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (CInt -> (CInt -> (IO ()))))
setDebugOutputEnabled'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
setLogDetail'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
setTimeStampEnabled'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getLogDetail'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))

module HGamer3D.Bindings.Ogre.ClassLogManager
delete :: HG3DClass -> IO ()
createLog :: HG3DClass -> String -> Bool -> Bool -> Bool -> IO (HG3DClass)
getLog :: HG3DClass -> String -> IO (HG3DClass)
getDefaultLog :: HG3DClass -> IO (HG3DClass)
destroyLog :: HG3DClass -> String -> IO ()
destroyLog2 :: HG3DClass -> HG3DClass -> IO ()
setDefaultLog :: HG3DClass -> HG3DClass -> IO (HG3DClass)
logMessage :: HG3DClass -> String -> EnumLogMessageLevel -> Bool -> IO ()
logMessage2 :: HG3DClass -> EnumLogMessageLevel -> String -> Bool -> IO ()
setLogDetail :: HG3DClass -> EnumLoggingLevel -> IO ()
getSingleton :: IO (HG3DClass)
getSingletonPtr :: IO (HG3DClass)
delete'_ :: (HG3DClassPtr) -> (IO ())
createLog'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (CInt -> (CInt -> (CInt -> ((HG3DClassPtr) -> (IO ()))))))
getLog'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
getDefaultLog'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
destroyLog'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
destroyLog2'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
setDefaultLog'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ())))
logMessage'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (CInt -> (CInt -> (IO ()))))
logMessage2'_ :: (HG3DClassPtr) -> (CInt -> ((Ptr CChar) -> (CInt -> (IO ()))))
setLogDetail'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getSingleton'_ :: (HG3DClassPtr) -> (IO ())
getSingletonPtr'_ :: (HG3DClassPtr) -> (IO ())

module HGamer3D.Bindings.Ogre.ClassManualObject
new :: String -> IO (HG3DClass)
delete :: HG3DClass -> IO ()
clear :: HG3DClass -> IO ()
estimateVertexCount :: HG3DClass -> Int -> IO ()
estimateIndexCount :: HG3DClass -> Int -> IO ()
begin :: HG3DClass -> String -> EnumRenderOperationOperationType -> String -> IO ()
setDynamic :: HG3DClass -> Bool -> IO ()
getDynamic :: HG3DClass -> IO (Bool)
beginUpdate :: HG3DClass -> Int -> IO ()
position :: HG3DClass -> Vec3 -> IO ()
position2 :: HG3DClass -> Float -> Float -> Float -> IO ()
normal :: HG3DClass -> Vec3 -> IO ()
normal2 :: HG3DClass -> Float -> Float -> Float -> IO ()
tangent :: HG3DClass -> Vec3 -> IO ()
tangent2 :: HG3DClass -> Float -> Float -> Float -> IO ()
textureCoord :: HG3DClass -> Float -> IO ()
textureCoord2 :: HG3DClass -> Float -> Float -> IO ()
textureCoord3 :: HG3DClass -> Float -> Float -> Float -> IO ()
textureCoord4 :: HG3DClass -> Float -> Float -> Float -> Float -> IO ()
textureCoord5 :: HG3DClass -> Vec2 -> IO ()
textureCoord6 :: HG3DClass -> Vec3 -> IO ()
colour :: HG3DClass -> Colour -> IO ()
colour2 :: HG3DClass -> Float -> Float -> Float -> Float -> IO ()
index :: HG3DClass -> Int -> IO ()
triangle :: HG3DClass -> Int -> Int -> Int -> IO ()
quad :: HG3DClass -> Int -> Int -> Int -> Int -> IO ()
getCurrentVertexCount :: HG3DClass -> IO (Int)
getCurrentIndexCount :: HG3DClass -> IO (Int)
end :: HG3DClass -> IO (HG3DClass)
setMaterialName :: HG3DClass -> Int -> String -> String -> IO ()
convertToMesh :: HG3DClass -> String -> String -> IO (SharedPtr)
setUseIdentityProjection :: HG3DClass -> Bool -> IO ()
getUseIdentityProjection :: HG3DClass -> IO (Bool)
setUseIdentityView :: HG3DClass -> Bool -> IO ()
getUseIdentityView :: HG3DClass -> IO (Bool)
getSection :: HG3DClass -> Int -> IO (HG3DClass)
getNumSections :: HG3DClass -> IO (Int)
setKeepDeclarationOrder :: HG3DClass -> Bool -> IO ()
getKeepDeclarationOrder :: HG3DClass -> IO (Bool)
getMovableType :: HG3DClass -> IO (String)
getBoundingRadius :: HG3DClass -> IO (Float)
hasEdgeList :: HG3DClass -> IO (Bool)
new'_ :: (Ptr CChar) -> ((HG3DClassPtr) -> (IO ()))
delete'_ :: (HG3DClassPtr) -> (IO ())
clear'_ :: (HG3DClassPtr) -> (IO ())
estimateVertexCount'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
estimateIndexCount'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
begin'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (CInt -> ((Ptr CChar) -> (IO ()))))
setDynamic'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getDynamic'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
beginUpdate'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
position'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
position2'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (IO ()))))
normal'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
normal2'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (IO ()))))
tangent'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
tangent2'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (IO ()))))
textureCoord'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
textureCoord2'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (IO ())))
textureCoord3'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (IO ()))))
textureCoord4'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (CFloat -> (IO ())))))
textureCoord5'_ :: (HG3DClassPtr) -> ((Vec2Ptr) -> (IO ()))
textureCoord6'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
colour'_ :: (HG3DClassPtr) -> ((ColourPtr) -> (IO ()))
colour2'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (CFloat -> (IO ())))))
index'_ :: (HG3DClassPtr) -> (CUInt -> (IO ()))
triangle'_ :: (HG3DClassPtr) -> (CUInt -> (CUInt -> (CUInt -> (IO ()))))
quad'_ :: (HG3DClassPtr) -> (CUInt -> (CUInt -> (CUInt -> (CUInt -> (IO ())))))
getCurrentVertexCount'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getCurrentIndexCount'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
end'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
setMaterialName'_ :: (HG3DClassPtr) -> (CInt -> ((Ptr CChar) -> ((Ptr CChar) -> (IO ()))))
convertToMesh'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CChar) -> ((SharedPtrPtr) -> (IO ()))))
setUseIdentityProjection'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getUseIdentityProjection'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setUseIdentityView'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getUseIdentityView'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getSection'_ :: (HG3DClassPtr) -> (CUInt -> ((HG3DClassPtr) -> (IO ())))
getNumSections'_ :: (HG3DClassPtr) -> ((Ptr CUInt) -> (IO ()))
setKeepDeclarationOrder'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getKeepDeclarationOrder'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getMovableType'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
getBoundingRadius'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
hasEdgeList'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))

module HGamer3D.Bindings.Ogre.ClassManualObjectFactory
new :: IO (HG3DClass)
delete :: HG3DClass -> IO ()
getType :: HG3DClass -> IO (String)
destroyInstance :: HG3DClass -> HG3DClass -> IO ()
new'_ :: (HG3DClassPtr) -> (IO ())
delete'_ :: (HG3DClassPtr) -> (IO ())
getType'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
destroyInstance'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))

module HGamer3D.Bindings.Ogre.ClassManualObjectSection
new :: HG3DClass -> String -> EnumRenderOperationOperationType -> String -> IO (HG3DClass)
delete :: HG3DClass -> IO ()
getMaterialName :: HG3DClass -> IO (String)
getMaterialGroup :: HG3DClass -> IO (String)
setMaterialName :: HG3DClass -> String -> String -> IO ()
set32BitIndices :: HG3DClass -> Bool -> IO ()
get32BitIndices :: HG3DClass -> IO (Bool)
getMaterial :: HG3DClass -> IO (SharedPtr)
getSquaredViewDepth :: HG3DClass -> HG3DClass -> IO (Float)
new'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (CInt -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))))
delete'_ :: (HG3DClassPtr) -> (IO ())
getMaterialName'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
getMaterialGroup'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
setMaterialName'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CChar) -> (IO ())))
set32BitIndices'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
get32BitIndices'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getMaterial'_ :: (HG3DClassPtr) -> ((SharedPtrPtr) -> (IO ()))
getSquaredViewDepth'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> ((Ptr CFloat) -> (IO ())))

module HGamer3D.Bindings.Ogre.ClassMaterial
delete :: HG3DClass -> IO ()
isTransparent :: HG3DClass -> IO (Bool)
setReceiveShadows :: HG3DClass -> Bool -> IO ()
getReceiveShadows :: HG3DClass -> IO (Bool)
setTransparencyCastsShadows :: HG3DClass -> Bool -> IO ()
getTransparencyCastsShadows :: HG3DClass -> IO (Bool)
getNumTechniques :: HG3DClass -> IO (Int)
removeTechnique :: HG3DClass -> Int -> IO ()
removeAllTechniques :: HG3DClass -> IO ()
getNumSupportedTechniques :: HG3DClass -> IO (Int)
getUnsupportedTechniquesExplanation :: HG3DClass -> IO (String)
getNumLodLevels :: HG3DClass -> Int -> IO (Int)
getNumLodLevels2 :: HG3DClass -> String -> IO (Int)
clone :: HG3DClass -> String -> Bool -> String -> IO (SharedPtr)
copyDetailsTo :: HG3DClass -> IO (SharedPtr)
compile :: HG3DClass -> Bool -> IO ()
setPointSize :: HG3DClass -> Float -> IO ()
setAmbient :: HG3DClass -> Float -> Float -> Float -> IO ()
setAmbient2 :: HG3DClass -> Colour -> IO ()
setDiffuse :: HG3DClass -> Float -> Float -> Float -> Float -> IO ()
setDiffuse2 :: HG3DClass -> Colour -> IO ()
setSpecular :: HG3DClass -> Float -> Float -> Float -> Float -> IO ()
setSpecular2 :: HG3DClass -> Colour -> IO ()
setShininess :: HG3DClass -> Float -> IO ()
setSelfIllumination :: HG3DClass -> Float -> Float -> Float -> IO ()
setSelfIllumination2 :: HG3DClass -> Colour -> IO ()
setDepthCheckEnabled :: HG3DClass -> Bool -> IO ()
setDepthWriteEnabled :: HG3DClass -> Bool -> IO ()
setColourWriteEnabled :: HG3DClass -> Bool -> IO ()
setLightingEnabled :: HG3DClass -> Bool -> IO ()
setDepthBias :: HG3DClass -> Float -> Float -> IO ()
setTextureAnisotropy :: HG3DClass -> Int -> IO ()
touch :: HG3DClass -> IO ()
getCompilationRequired :: HG3DClass -> IO (Bool)
delete'_ :: (HG3DClassPtr) -> (IO ())
isTransparent'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setReceiveShadows'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getReceiveShadows'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setTransparencyCastsShadows'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getTransparencyCastsShadows'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getNumTechniques'_ :: (HG3DClassPtr) -> ((Ptr CUShort) -> (IO ()))
removeTechnique'_ :: (HG3DClassPtr) -> (CUShort -> (IO ()))
removeAllTechniques'_ :: (HG3DClassPtr) -> (IO ())
getNumSupportedTechniques'_ :: (HG3DClassPtr) -> ((Ptr CUShort) -> (IO ()))
getUnsupportedTechniquesExplanation'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
getNumLodLevels'_ :: (HG3DClassPtr) -> (CUShort -> ((Ptr CUShort) -> (IO ())))
getNumLodLevels2'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CUShort) -> (IO ())))
clone'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (CInt -> ((Ptr CChar) -> ((SharedPtrPtr) -> (IO ())))))
copyDetailsTo'_ :: (HG3DClassPtr) -> ((SharedPtrPtr) -> (IO ()))
compile'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
setPointSize'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
setAmbient'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (IO ()))))
setAmbient2'_ :: (HG3DClassPtr) -> ((ColourPtr) -> (IO ()))
setDiffuse'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (CFloat -> (IO ())))))
setDiffuse2'_ :: (HG3DClassPtr) -> ((ColourPtr) -> (IO ()))
setSpecular'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (CFloat -> (IO ())))))
setSpecular2'_ :: (HG3DClassPtr) -> ((ColourPtr) -> (IO ()))
setShininess'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
setSelfIllumination'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (IO ()))))
setSelfIllumination2'_ :: (HG3DClassPtr) -> ((ColourPtr) -> (IO ()))
setDepthCheckEnabled'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
setDepthWriteEnabled'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
setColourWriteEnabled'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
setLightingEnabled'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
setDepthBias'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (IO ())))
setTextureAnisotropy'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
touch'_ :: (HG3DClassPtr) -> (IO ())
getCompilationRequired'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))

module HGamer3D.Bindings.Ogre.ClassMaterialManager
new :: IO (HG3DClass)
delete :: HG3DClass -> IO ()
initialise :: HG3DClass -> IO ()
setDefaultAnisotropy :: HG3DClass -> Int -> IO ()
getDefaultAnisotropy :: HG3DClass -> IO (Int)
getDefaultSettings :: HG3DClass -> IO (SharedPtr)
getActiveScheme :: HG3DClass -> IO (String)
setActiveScheme :: HG3DClass -> String -> IO ()
getSingleton :: IO (HG3DClass)
getSingletonPtr :: IO (HG3DClass)
new'_ :: (HG3DClassPtr) -> (IO ())
delete'_ :: (HG3DClassPtr) -> (IO ())
initialise'_ :: (HG3DClassPtr) -> (IO ())
setDefaultAnisotropy'_ :: (HG3DClassPtr) -> (CUInt -> (IO ()))
getDefaultAnisotropy'_ :: (HG3DClassPtr) -> ((Ptr CUInt) -> (IO ()))
getDefaultSettings'_ :: (HG3DClassPtr) -> ((SharedPtrPtr) -> (IO ()))
getActiveScheme'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
setActiveScheme'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
getSingleton'_ :: (HG3DClassPtr) -> (IO ())
getSingletonPtr'_ :: (HG3DClassPtr) -> (IO ())

module HGamer3D.Bindings.Ogre.ClassMesh
delete :: HG3DClass -> IO ()
unnameSubMesh :: HG3DClass -> String -> IO ()
getNumSubMeshes :: HG3DClass -> IO (Int)
destroySubMesh :: HG3DClass -> Int -> IO ()
destroySubMesh2 :: HG3DClass -> String -> IO ()
clone :: HG3DClass -> String -> String -> IO (SharedPtr)
getBoundingSphereRadius :: HG3DClass -> IO (Float)
setSkeletonName :: HG3DClass -> String -> IO ()
hasSkeleton :: HG3DClass -> IO (Bool)
hasVertexAnimation :: HG3DClass -> IO (Bool)
getSkeleton :: HG3DClass -> IO (SharedPtr)
getSkeletonName :: HG3DClass -> IO (String)
clearBoneAssignments :: HG3DClass -> IO ()
createManualLodLevel :: HG3DClass -> Float -> String -> String -> IO ()
isLodManual :: HG3DClass -> IO (Bool)
removeLodLevels :: HG3DClass -> IO ()
isVertexBufferShadowed :: HG3DClass -> IO (Bool)
isIndexBufferShadowed :: HG3DClass -> IO (Bool)
buildEdgeList :: HG3DClass -> IO ()
freeEdgeList :: HG3DClass -> IO ()
prepareForShadowVolume :: HG3DClass -> IO ()
isPreparedForShadowVolumes :: HG3DClass -> IO (Bool)
isEdgeListBuilt :: HG3DClass -> IO (Bool)
setAutoBuildEdgeLists :: HG3DClass -> Bool -> IO ()
getAutoBuildEdgeLists :: HG3DClass -> IO (Bool)
getSharedVertexDataAnimationType :: HG3DClass -> IO (EnumVertexAnimationType)
getSharedVertexDataAnimationIncludesNormals :: HG3DClass -> IO (Bool)
createAnimation :: HG3DClass -> String -> Float -> IO (HG3DClass)
getAnimation :: HG3DClass -> String -> IO (HG3DClass)
hasAnimation :: HG3DClass -> String -> IO (Bool)
removeAnimation :: HG3DClass -> String -> IO ()
getNumAnimations :: HG3DClass -> IO (Int)
getAnimation2 :: HG3DClass -> Int -> IO (HG3DClass)
removeAllAnimations :: HG3DClass -> IO ()
updateMaterialForAllSubMeshes :: HG3DClass -> IO ()
getPoseCount :: HG3DClass -> IO (Int)
removePose2 :: HG3DClass -> String -> IO ()
removeAllPoses :: HG3DClass -> IO ()
delete'_ :: (HG3DClassPtr) -> (IO ())
unnameSubMesh'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
getNumSubMeshes'_ :: (HG3DClassPtr) -> ((Ptr CUShort) -> (IO ()))
destroySubMesh'_ :: (HG3DClassPtr) -> (CUShort -> (IO ()))
destroySubMesh2'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
clone'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CChar) -> ((SharedPtrPtr) -> (IO ()))))
getBoundingSphereRadius'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
setSkeletonName'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
hasSkeleton'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
hasVertexAnimation'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getSkeleton'_ :: (HG3DClassPtr) -> ((SharedPtrPtr) -> (IO ()))
getSkeletonName'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
clearBoneAssignments'_ :: (HG3DClassPtr) -> (IO ())
createManualLodLevel'_ :: (HG3DClassPtr) -> (CFloat -> ((Ptr CChar) -> ((Ptr CChar) -> (IO ()))))
isLodManual'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
removeLodLevels'_ :: (HG3DClassPtr) -> (IO ())
isVertexBufferShadowed'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
isIndexBufferShadowed'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
buildEdgeList'_ :: (HG3DClassPtr) -> (IO ())
freeEdgeList'_ :: (HG3DClassPtr) -> (IO ())
prepareForShadowVolume'_ :: (HG3DClassPtr) -> (IO ())
isPreparedForShadowVolumes'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
isEdgeListBuilt'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setAutoBuildEdgeLists'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getAutoBuildEdgeLists'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getSharedVertexDataAnimationType'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getSharedVertexDataAnimationIncludesNormals'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
createAnimation'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (CFloat -> ((HG3DClassPtr) -> (IO ()))))
getAnimation'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
hasAnimation'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CInt) -> (IO ())))
removeAnimation'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
getNumAnimations'_ :: (HG3DClassPtr) -> ((Ptr CUShort) -> (IO ()))
getAnimation2'_ :: (HG3DClassPtr) -> (CUShort -> ((HG3DClassPtr) -> (IO ())))
removeAllAnimations'_ :: (HG3DClassPtr) -> (IO ())
updateMaterialForAllSubMeshes'_ :: (HG3DClassPtr) -> (IO ())
getPoseCount'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
removePose2'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
removeAllPoses'_ :: (HG3DClassPtr) -> (IO ())

module HGamer3D.Bindings.Ogre.ClassMeshManager
new :: IO (HG3DClass)
delete :: HG3DClass -> IO ()
setPrepareAllMeshesForShadowVolumes :: HG3DClass -> Bool -> IO ()
getPrepareAllMeshesForShadowVolumes :: HG3DClass -> IO (Bool)
getBoundsPaddingFactor :: HG3DClass -> IO (Float)
setBoundsPaddingFactor :: HG3DClass -> Float -> IO ()
loadResource :: HG3DClass -> HG3DClass -> IO ()
getSingleton :: IO (HG3DClass)
getSingletonPtr :: IO (HG3DClass)
new'_ :: (HG3DClassPtr) -> (IO ())
delete'_ :: (HG3DClassPtr) -> (IO ())
setPrepareAllMeshesForShadowVolumes'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getPrepareAllMeshesForShadowVolumes'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getBoundsPaddingFactor'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
setBoundsPaddingFactor'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
loadResource'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
getSingleton'_ :: (HG3DClassPtr) -> (IO ())
getSingletonPtr'_ :: (HG3DClassPtr) -> (IO ())

module HGamer3D.Bindings.Ogre.ClassMovableObject
delete :: HG3DClass -> IO ()
getName :: HG3DClass -> IO (String)
getMovableType :: HG3DClass -> IO (String)
getParentNode :: HG3DClass -> IO (HG3DClass)
getParentSceneNode :: HG3DClass -> IO (HG3DClass)
isParentTagPoint :: HG3DClass -> IO (Bool)
isAttached :: HG3DClass -> IO (Bool)
detachFromParent :: HG3DClass -> IO ()
isInScene :: HG3DClass -> IO (Bool)
getBoundingRadius :: HG3DClass -> IO (Float)
setVisible :: HG3DClass -> Bool -> IO ()
getVisible :: HG3DClass -> IO (Bool)
isVisible :: HG3DClass -> IO (Bool)
setRenderingDistance :: HG3DClass -> Float -> IO ()
getRenderingDistance :: HG3DClass -> IO (Float)
setRenderingMinPixelSize :: HG3DClass -> Float -> IO ()
getRenderingMinPixelSize :: HG3DClass -> IO (Float)
setQueryFlags :: HG3DClass -> Int -> IO ()
addQueryFlags :: HG3DClass -> Int -> IO ()
removeQueryFlags :: HG3DClass -> Int -> IO ()
getQueryFlags :: HG3DClass -> IO (Int)
setVisibilityFlags :: HG3DClass -> Int -> IO ()
addVisibilityFlags :: HG3DClass -> Int -> IO ()
removeVisibilityFlags :: HG3DClass -> Int -> IO ()
getVisibilityFlags :: HG3DClass -> IO (Int)
getLightMask :: HG3DClass -> IO (Int)
setLightMask :: HG3DClass -> Int -> IO ()
hasEdgeList :: HG3DClass -> IO (Bool)
setCastShadows :: HG3DClass -> Bool -> IO ()
getCastShadows :: HG3DClass -> IO (Bool)
getReceivesShadows :: HG3DClass -> IO (Bool)
getPointExtrusionDistance :: HG3DClass -> HG3DClass -> IO (Float)
getTypeFlags :: HG3DClass -> IO (Int)
setDebugDisplayEnabled :: HG3DClass -> Bool -> IO ()
isDebugDisplayEnabled :: HG3DClass -> IO (Bool)
setDefaultQueryFlags :: Int -> IO ()
getDefaultQueryFlags :: IO (Int)
setDefaultVisibilityFlags :: Int -> IO ()
getDefaultVisibilityFlags :: IO (Int)
delete'_ :: (HG3DClassPtr) -> (IO ())
getName'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
getMovableType'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
getParentNode'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
getParentSceneNode'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
isParentTagPoint'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
isAttached'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
detachFromParent'_ :: (HG3DClassPtr) -> (IO ())
isInScene'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getBoundingRadius'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
setVisible'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getVisible'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
isVisible'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setRenderingDistance'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
getRenderingDistance'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
setRenderingMinPixelSize'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
getRenderingMinPixelSize'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
setQueryFlags'_ :: (HG3DClassPtr) -> (CUInt -> (IO ()))
addQueryFlags'_ :: (HG3DClassPtr) -> (CUInt -> (IO ()))
removeQueryFlags'_ :: (HG3DClassPtr) -> (CUInt -> (IO ()))
getQueryFlags'_ :: (HG3DClassPtr) -> ((Ptr CUInt) -> (IO ()))
setVisibilityFlags'_ :: (HG3DClassPtr) -> (CUInt -> (IO ()))
addVisibilityFlags'_ :: (HG3DClassPtr) -> (CUInt -> (IO ()))
removeVisibilityFlags'_ :: (HG3DClassPtr) -> (CUInt -> (IO ()))
getVisibilityFlags'_ :: (HG3DClassPtr) -> ((Ptr CUInt) -> (IO ()))
getLightMask'_ :: (HG3DClassPtr) -> ((Ptr CUInt) -> (IO ()))
setLightMask'_ :: (HG3DClassPtr) -> (CUInt -> (IO ()))
hasEdgeList'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setCastShadows'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getCastShadows'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getReceivesShadows'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getPointExtrusionDistance'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> ((Ptr CFloat) -> (IO ())))
getTypeFlags'_ :: (HG3DClassPtr) -> ((Ptr CUInt) -> (IO ()))
setDebugDisplayEnabled'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
isDebugDisplayEnabled'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setDefaultQueryFlags'_ :: CUInt -> (IO ())
getDefaultQueryFlags'_ :: (Ptr CUInt) -> (IO ())
setDefaultVisibilityFlags'_ :: CUInt -> (IO ())
getDefaultVisibilityFlags'_ :: (Ptr CUInt) -> (IO ())

module HGamer3D.Bindings.Ogre.ClassMovableObjectFactory
delete :: HG3DClass -> IO ()
getType :: HG3DClass -> IO (String)
destroyInstance :: HG3DClass -> HG3DClass -> IO ()
requestTypeFlags :: HG3DClass -> IO (Bool)
getTypeFlags :: HG3DClass -> IO (Int)
delete'_ :: (HG3DClassPtr) -> (IO ())
getType'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
destroyInstance'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
requestTypeFlags'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getTypeFlags'_ :: (HG3DClassPtr) -> ((Ptr CUInt) -> (IO ()))

module HGamer3D.Bindings.Ogre.ClassMultiRenderTarget
bindSurface :: HG3DClass -> Int -> HG3DClass -> IO ()
unbindSurface :: HG3DClass -> Int -> IO ()
getBoundSurface :: HG3DClass -> Int -> IO (HG3DClass)
bindSurface'_ :: (HG3DClassPtr) -> (CInt -> ((HG3DClassPtr) -> (IO ())))
unbindSurface'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getBoundSurface'_ :: (HG3DClassPtr) -> (CInt -> ((HG3DClassPtr) -> (IO ())))

module HGamer3D.Bindings.Ogre.ClassNode
delete :: HG3DClass -> IO ()
getName :: HG3DClass -> IO (String)
getParent :: HG3DClass -> IO (HG3DClass)
getOrientation :: HG3DClass -> IO (Quaternion)
setOrientation :: HG3DClass -> Quaternion -> IO ()
setOrientation2 :: HG3DClass -> Float -> Float -> Float -> Float -> IO ()
resetOrientation :: HG3DClass -> IO ()
setPosition :: HG3DClass -> Vec3 -> IO ()
setPosition2 :: HG3DClass -> Float -> Float -> Float -> IO ()
getPosition :: HG3DClass -> IO (Vec3)
setScale :: HG3DClass -> Vec3 -> IO ()
setScale2 :: HG3DClass -> Float -> Float -> Float -> IO ()
getScale :: HG3DClass -> IO (Vec3)
setInheritOrientation :: HG3DClass -> Bool -> IO ()
getInheritOrientation :: HG3DClass -> IO (Bool)
setInheritScale :: HG3DClass -> Bool -> IO ()
getInheritScale :: HG3DClass -> IO (Bool)
scale :: HG3DClass -> Vec3 -> IO ()
scale2 :: HG3DClass -> Float -> Float -> Float -> IO ()
translate :: HG3DClass -> Vec3 -> EnumNodeTransformSpace -> IO ()
translate2 :: HG3DClass -> Float -> Float -> Float -> EnumNodeTransformSpace -> IO ()
roll :: HG3DClass -> Radians -> EnumNodeTransformSpace -> IO ()
pitch :: HG3DClass -> Radians -> EnumNodeTransformSpace -> IO ()
yaw :: HG3DClass -> Radians -> EnumNodeTransformSpace -> IO ()
rotate :: HG3DClass -> Vec3 -> Radians -> EnumNodeTransformSpace -> IO ()
rotate2 :: HG3DClass -> Quaternion -> EnumNodeTransformSpace -> IO ()
createChild :: HG3DClass -> Vec3 -> Quaternion -> IO (HG3DClass)
createChild2 :: HG3DClass -> String -> Vec3 -> Quaternion -> IO (HG3DClass)
addChild :: HG3DClass -> HG3DClass -> IO ()
numChildren :: HG3DClass -> IO (Int)
getChild :: HG3DClass -> Int -> IO (HG3DClass)
getChild2 :: HG3DClass -> String -> IO (HG3DClass)
removeChild :: HG3DClass -> Int -> IO (HG3DClass)
removeChild2 :: HG3DClass -> HG3DClass -> IO (HG3DClass)
removeChild3 :: HG3DClass -> String -> IO (HG3DClass)
removeAllChildren :: HG3DClass -> IO ()
setInitialState :: HG3DClass -> IO ()
resetToInitialState :: HG3DClass -> IO ()
getInitialPosition :: HG3DClass -> IO (Vec3)
convertWorldToLocalPosition :: HG3DClass -> Vec3 -> IO (Vec3)
convertLocalToWorldPosition :: HG3DClass -> Vec3 -> IO (Vec3)
convertWorldToLocalOrientation :: HG3DClass -> Quaternion -> IO (Quaternion)
convertLocalToWorldOrientation :: HG3DClass -> Quaternion -> IO (Quaternion)
getInitialOrientation :: HG3DClass -> IO (Quaternion)
getInitialScale :: HG3DClass -> IO (Vec3)
getSquaredViewDepth :: HG3DClass -> HG3DClass -> IO (Float)
needUpdate :: HG3DClass -> Bool -> IO ()
requestUpdate :: HG3DClass -> HG3DClass -> Bool -> IO ()
cancelUpdate :: HG3DClass -> HG3DClass -> IO ()
queueNeedUpdate :: HG3DClass -> IO ()
processQueuedUpdates :: IO ()
delete'_ :: (HG3DClassPtr) -> (IO ())
getName'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
getParent'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
getOrientation'_ :: (HG3DClassPtr) -> ((QuaternionPtr) -> (IO ()))
setOrientation'_ :: (HG3DClassPtr) -> ((QuaternionPtr) -> (IO ()))
setOrientation2'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (CFloat -> (IO ())))))
resetOrientation'_ :: (HG3DClassPtr) -> (IO ())
setPosition'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
setPosition2'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (IO ()))))
getPosition'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
setScale'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
setScale2'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (IO ()))))
getScale'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
setInheritOrientation'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getInheritOrientation'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setInheritScale'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getInheritScale'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
scale'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
scale2'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (IO ()))))
translate'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (CInt -> (IO ())))
translate2'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (CInt -> (IO ())))))
roll'_ :: (HG3DClassPtr) -> ((RadiansPtr) -> (CInt -> (IO ())))
pitch'_ :: (HG3DClassPtr) -> ((RadiansPtr) -> (CInt -> (IO ())))
yaw'_ :: (HG3DClassPtr) -> ((RadiansPtr) -> (CInt -> (IO ())))
rotate'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> ((RadiansPtr) -> (CInt -> (IO ()))))
rotate2'_ :: (HG3DClassPtr) -> ((QuaternionPtr) -> (CInt -> (IO ())))
createChild'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> ((QuaternionPtr) -> ((HG3DClassPtr) -> (IO ()))))
createChild2'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Vec3Ptr) -> ((QuaternionPtr) -> ((HG3DClassPtr) -> (IO ())))))
addChild'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
numChildren'_ :: (HG3DClassPtr) -> ((Ptr CUShort) -> (IO ()))
getChild'_ :: (HG3DClassPtr) -> (CUShort -> ((HG3DClassPtr) -> (IO ())))
getChild2'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
removeChild'_ :: (HG3DClassPtr) -> (CUShort -> ((HG3DClassPtr) -> (IO ())))
removeChild2'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ())))
removeChild3'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
removeAllChildren'_ :: (HG3DClassPtr) -> (IO ())
setInitialState'_ :: (HG3DClassPtr) -> (IO ())
resetToInitialState'_ :: (HG3DClassPtr) -> (IO ())
getInitialPosition'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
convertWorldToLocalPosition'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> ((Vec3Ptr) -> (IO ())))
convertLocalToWorldPosition'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> ((Vec3Ptr) -> (IO ())))
convertWorldToLocalOrientation'_ :: (HG3DClassPtr) -> ((QuaternionPtr) -> ((QuaternionPtr) -> (IO ())))
convertLocalToWorldOrientation'_ :: (HG3DClassPtr) -> ((QuaternionPtr) -> ((QuaternionPtr) -> (IO ())))
getInitialOrientation'_ :: (HG3DClassPtr) -> ((QuaternionPtr) -> (IO ()))
getInitialScale'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
getSquaredViewDepth'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> ((Ptr CFloat) -> (IO ())))
needUpdate'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
requestUpdate'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (CInt -> (IO ())))
cancelUpdate'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
queueNeedUpdate'_ :: (HG3DClassPtr) -> (IO ())
processQueuedUpdates'_ :: IO ()

module HGamer3D.Bindings.Ogre.ClassNodeAnimationTrack
new :: HG3DClass -> Int -> IO (HG3DClass)
delete :: HG3DClass -> IO ()
getAssociatedNode :: HG3DClass -> IO (HG3DClass)
setAssociatedNode :: HG3DClass -> HG3DClass -> IO ()
applyToNode :: HG3DClass -> HG3DClass -> HG3DClass -> Float -> Float -> IO ()
setUseShortestRotationPath :: HG3DClass -> Bool -> IO ()
getUseShortestRotationPath :: HG3DClass -> IO (Bool)
apply :: HG3DClass -> HG3DClass -> Float -> Float -> IO ()
hasNonZeroKeyFrames :: HG3DClass -> IO (Bool)
optimise :: HG3DClass -> IO ()
new'_ :: (HG3DClassPtr) -> (CUShort -> ((HG3DClassPtr) -> (IO ())))
delete'_ :: (HG3DClassPtr) -> (IO ())
getAssociatedNode'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
setAssociatedNode'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
applyToNode'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> ((HG3DClassPtr) -> (CFloat -> (CFloat -> (IO ())))))
setUseShortestRotationPath'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getUseShortestRotationPath'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
apply'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (CFloat -> (CFloat -> (IO ()))))
hasNonZeroKeyFrames'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
optimise'_ :: (HG3DClassPtr) -> (IO ())

module HGamer3D.Bindings.Ogre.ClassNumericAnimationTrack
new :: HG3DClass -> Int -> IO (HG3DClass)
apply :: HG3DClass -> HG3DClass -> Float -> Float -> IO ()
new'_ :: (HG3DClassPtr) -> (CUShort -> ((HG3DClassPtr) -> (IO ())))
apply'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (CFloat -> (CFloat -> (IO ()))))

module HGamer3D.Bindings.Ogre.ClassRenderable
delete :: HG3DClass -> IO ()
getMaterial :: HG3DClass -> IO (SharedPtr)
preRender :: HG3DClass -> HG3DClass -> HG3DClass -> IO (Bool)
postRender :: HG3DClass -> HG3DClass -> HG3DClass -> IO ()
getNumWorldTransforms :: HG3DClass -> IO (Int)
setUseIdentityProjection :: HG3DClass -> Bool -> IO ()
getUseIdentityProjection :: HG3DClass -> IO (Bool)
setUseIdentityView :: HG3DClass -> Bool -> IO ()
getUseIdentityView :: HG3DClass -> IO (Bool)
getSquaredViewDepth :: HG3DClass -> HG3DClass -> IO (Float)
getCastsShadows :: HG3DClass -> IO (Bool)
removeCustomParameter :: HG3DClass -> Int -> IO ()
hasCustomParameter :: HG3DClass -> Int -> IO (Bool)
setPolygonModeOverrideable :: HG3DClass -> Bool -> IO ()
getPolygonModeOverrideable :: HG3DClass -> IO (Bool)
delete'_ :: (HG3DClassPtr) -> (IO ())
getMaterial'_ :: (HG3DClassPtr) -> ((SharedPtrPtr) -> (IO ()))
preRender'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> ((HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))))
postRender'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ())))
getNumWorldTransforms'_ :: (HG3DClassPtr) -> ((Ptr CUShort) -> (IO ()))
setUseIdentityProjection'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getUseIdentityProjection'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setUseIdentityView'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getUseIdentityView'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getSquaredViewDepth'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> ((Ptr CFloat) -> (IO ())))
getCastsShadows'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
removeCustomParameter'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
hasCustomParameter'_ :: (HG3DClassPtr) -> (CInt -> ((Ptr CInt) -> (IO ())))
setPolygonModeOverrideable'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getPolygonModeOverrideable'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))

module HGamer3D.Bindings.Ogre.ClassRenderSystem
delete :: HG3DClass -> IO ()
getName :: HG3DClass -> IO (String)
setConfigOption :: HG3DClass -> String -> String -> IO ()
validateConfigOptions :: HG3DClass -> IO (String)
reinitialise :: HG3DClass -> IO ()
shutdown :: HG3DClass -> IO ()
setAmbientLight :: HG3DClass -> Float -> Float -> Float -> IO ()
setLightingEnabled :: HG3DClass -> Bool -> IO ()
setWBufferEnabled :: HG3DClass -> Bool -> IO ()
getWBufferEnabled :: HG3DClass -> IO (Bool)
createMultiRenderTarget :: HG3DClass -> String -> IO (HG3DClass)
destroyRenderWindow :: HG3DClass -> String -> IO ()
destroyRenderTexture :: HG3DClass -> String -> IO ()
destroyRenderTarget :: HG3DClass -> String -> IO ()
attachRenderTarget :: HG3DClass -> HG3DClass -> IO ()
getRenderTarget :: HG3DClass -> String -> IO (HG3DClass)
detachRenderTarget :: HG3DClass -> String -> IO (HG3DClass)
getErrorDescription :: HG3DClass -> Int -> IO (String)
setWaitForVerticalBlank :: HG3DClass -> Bool -> IO ()
getWaitForVerticalBlank :: HG3DClass -> IO (Bool)
getGlobalNumberOfInstances :: HG3DClass -> IO (Int)
setGlobalNumberOfInstances :: HG3DClass -> Int -> IO ()
setFixedPipelineEnabled :: HG3DClass -> Bool -> IO ()
getFixedPipelineEnabled :: HG3DClass -> IO (Bool)
setDepthBufferFor :: HG3DClass -> HG3DClass -> IO ()
areFixedFunctionLightsInViewSpace :: HG3DClass -> IO (Bool)
convertColourValue :: HG3DClass -> Colour -> IO (Int)
setStencilCheckEnabled :: HG3DClass -> Bool -> IO ()
setNormaliseNormals :: HG3DClass -> Bool -> IO ()
bindGpuProgramPassIterationParameters :: HG3DClass -> EnumGpuProgramType -> IO ()
unbindGpuProgram :: HG3DClass -> EnumGpuProgramType -> IO ()
isGpuProgramBound :: HG3DClass -> EnumGpuProgramType -> IO (Bool)
addClipPlane2 :: HG3DClass -> Float -> Float -> Float -> Float -> IO ()
resetClipPlanes :: HG3DClass -> IO ()
setInvertVertexWinding :: HG3DClass -> Bool -> IO ()
getInvertVertexWinding :: HG3DClass -> IO (Bool)
setScissorTest :: HG3DClass -> Bool -> Int -> Int -> Int -> Int -> IO ()
clearFrameBuffer :: HG3DClass -> Int -> Colour -> Float -> Int -> IO ()
getHorizontalTexelOffset :: HG3DClass -> IO (Float)
getVerticalTexelOffset :: HG3DClass -> IO (Float)
getMinimumDepthInputValue :: HG3DClass -> IO (Float)
getMaximumDepthInputValue :: HG3DClass -> IO (Float)
setCurrentPassIterationCount :: HG3DClass -> Int -> IO ()
setDeriveDepthBias :: HG3DClass -> Bool -> Float -> Float -> Float -> IO ()
preExtraThreadsStarted :: HG3DClass -> IO ()
postExtraThreadsStarted :: HG3DClass -> IO ()
registerThread :: HG3DClass -> IO ()
unregisterThread :: HG3DClass -> IO ()
getDisplayMonitorCount :: HG3DClass -> IO (Int)
beginProfileEvent :: HG3DClass -> String -> IO ()
endProfileEvent :: HG3DClass -> IO ()
markProfileEvent :: HG3DClass -> String -> IO ()
delete'_ :: (HG3DClassPtr) -> (IO ())
getName'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
setConfigOption'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CChar) -> (IO ())))
validateConfigOptions'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
reinitialise'_ :: (HG3DClassPtr) -> (IO ())
shutdown'_ :: (HG3DClassPtr) -> (IO ())
setAmbientLight'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (IO ()))))
setLightingEnabled'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
setWBufferEnabled'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getWBufferEnabled'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
createMultiRenderTarget'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
destroyRenderWindow'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
destroyRenderTexture'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
destroyRenderTarget'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
attachRenderTarget'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
getRenderTarget'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
detachRenderTarget'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
getErrorDescription'_ :: (HG3DClassPtr) -> (CInt -> ((Ptr CChar) -> (IO ())))
setWaitForVerticalBlank'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getWaitForVerticalBlank'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getGlobalNumberOfInstances'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setGlobalNumberOfInstances'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
setFixedPipelineEnabled'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getFixedPipelineEnabled'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setDepthBufferFor'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
areFixedFunctionLightsInViewSpace'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
convertColourValue'_ :: (HG3DClassPtr) -> ((ColourPtr) -> ((Ptr CUInt) -> (IO ())))
setStencilCheckEnabled'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
setNormaliseNormals'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
bindGpuProgramPassIterationParameters'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
unbindGpuProgram'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
isGpuProgramBound'_ :: (HG3DClassPtr) -> (CInt -> ((Ptr CInt) -> (IO ())))
addClipPlane2'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (CFloat -> (IO ())))))
resetClipPlanes'_ :: (HG3DClassPtr) -> (IO ())
setInvertVertexWinding'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getInvertVertexWinding'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setScissorTest'_ :: (HG3DClassPtr) -> (CInt -> (CInt -> (CInt -> (CInt -> (CInt -> (IO ()))))))
clearFrameBuffer'_ :: (HG3DClassPtr) -> (CUInt -> ((ColourPtr) -> (CFloat -> (CUShort -> (IO ())))))
getHorizontalTexelOffset'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
getVerticalTexelOffset'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
getMinimumDepthInputValue'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
getMaximumDepthInputValue'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
setCurrentPassIterationCount'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
setDeriveDepthBias'_ :: (HG3DClassPtr) -> (CInt -> (CFloat -> (CFloat -> (CFloat -> (IO ())))))
preExtraThreadsStarted'_ :: (HG3DClassPtr) -> (IO ())
postExtraThreadsStarted'_ :: (HG3DClassPtr) -> (IO ())
registerThread'_ :: (HG3DClassPtr) -> (IO ())
unregisterThread'_ :: (HG3DClassPtr) -> (IO ())
getDisplayMonitorCount'_ :: (HG3DClassPtr) -> ((Ptr CUInt) -> (IO ()))
beginProfileEvent'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
endProfileEvent'_ :: (HG3DClassPtr) -> (IO ())
markProfileEvent'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))

module HGamer3D.Bindings.Ogre.ClassRenderTarget
delete :: HG3DClass -> IO ()
getName :: HG3DClass -> IO (String)
getMetrics :: HG3DClass -> IO (Int, Int, Int)
getWidth :: HG3DClass -> IO (Int)
getHeight :: HG3DClass -> IO (Int)
getColourDepth :: HG3DClass -> IO (Int)
setDepthBufferPool :: HG3DClass -> Int -> IO ()
getDepthBufferPool :: HG3DClass -> IO (Int)
detachDepthBuffer :: HG3DClass -> IO ()
update :: HG3DClass -> Bool -> IO ()
swapBuffers :: HG3DClass -> Bool -> IO ()
addViewport :: HG3DClass -> HG3DClass -> Int -> Float -> Float -> Float -> Float -> IO (HG3DClass)
getNumViewports :: HG3DClass -> IO (Int)
getViewport :: HG3DClass -> Int -> IO (HG3DClass)
getViewportByZOrder :: HG3DClass -> Int -> IO (HG3DClass)
hasViewportWithZOrder :: HG3DClass -> Int -> IO (Bool)
removeViewport :: HG3DClass -> Int -> IO ()
removeAllViewports :: HG3DClass -> IO ()
getStatistics :: HG3DClass -> IO (Float, Float, Float, Float)
getLastFPS :: HG3DClass -> IO (Float)
getAverageFPS :: HG3DClass -> IO (Float)
getBestFPS :: HG3DClass -> IO (Float)
getWorstFPS :: HG3DClass -> IO (Float)
getBestFrameTime :: HG3DClass -> IO (Float)
getWorstFrameTime :: HG3DClass -> IO (Float)
resetStatistics :: HG3DClass -> IO ()
removeAllListeners :: HG3DClass -> IO ()
isActive :: HG3DClass -> IO (Bool)
setActive :: HG3DClass -> Bool -> IO ()
setAutoUpdated :: HG3DClass -> Bool -> IO ()
isAutoUpdated :: HG3DClass -> IO (Bool)
writeContentsToFile :: HG3DClass -> String -> IO ()
writeContentsToTimestampedFile :: HG3DClass -> String -> String -> IO (String)
requiresTextureFlipping :: HG3DClass -> IO (Bool)
getTriangleCount :: HG3DClass -> IO (Int)
getBatchCount :: HG3DClass -> IO (Int)
isPrimary :: HG3DClass -> IO (Bool)
isHardwareGammaEnabled :: HG3DClass -> IO (Bool)
getFSAA :: HG3DClass -> IO (Int)
getFSAAHint :: HG3DClass -> IO (String)
delete'_ :: (HG3DClassPtr) -> (IO ())
getName'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
getMetrics'_ :: (HG3DClassPtr) -> ((Ptr CUInt) -> ((Ptr CUInt) -> ((Ptr CUInt) -> (IO ()))))
getWidth'_ :: (HG3DClassPtr) -> ((Ptr CUInt) -> (IO ()))
getHeight'_ :: (HG3DClassPtr) -> ((Ptr CUInt) -> (IO ()))
getColourDepth'_ :: (HG3DClassPtr) -> ((Ptr CUInt) -> (IO ()))
setDepthBufferPool'_ :: (HG3DClassPtr) -> (CUShort -> (IO ()))
getDepthBufferPool'_ :: (HG3DClassPtr) -> ((Ptr CUShort) -> (IO ()))
detachDepthBuffer'_ :: (HG3DClassPtr) -> (IO ())
update'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
swapBuffers'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
addViewport'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (CInt -> (CFloat -> (CFloat -> (CFloat -> (CFloat -> ((HG3DClassPtr) -> (IO ()))))))))
getNumViewports'_ :: (HG3DClassPtr) -> ((Ptr CUShort) -> (IO ()))
getViewport'_ :: (HG3DClassPtr) -> (CUShort -> ((HG3DClassPtr) -> (IO ())))
getViewportByZOrder'_ :: (HG3DClassPtr) -> (CInt -> ((HG3DClassPtr) -> (IO ())))
hasViewportWithZOrder'_ :: (HG3DClassPtr) -> (CInt -> ((Ptr CInt) -> (IO ())))
removeViewport'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
removeAllViewports'_ :: (HG3DClassPtr) -> (IO ())
getStatistics'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> ((Ptr CFloat) -> ((Ptr CFloat) -> ((Ptr CFloat) -> (IO ())))))
getLastFPS'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
getAverageFPS'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
getBestFPS'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
getWorstFPS'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
getBestFrameTime'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
getWorstFrameTime'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
resetStatistics'_ :: (HG3DClassPtr) -> (IO ())
removeAllListeners'_ :: (HG3DClassPtr) -> (IO ())
isActive'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setActive'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
setAutoUpdated'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
isAutoUpdated'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
writeContentsToFile'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
writeContentsToTimestampedFile'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CChar) -> ((Ptr CChar) -> (IO ()))))
requiresTextureFlipping'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getTriangleCount'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getBatchCount'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
isPrimary'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
isHardwareGammaEnabled'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getFSAA'_ :: (HG3DClassPtr) -> ((Ptr CUInt) -> (IO ()))
getFSAAHint'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))

module HGamer3D.Bindings.Ogre.ClassRenderTexture
delete :: HG3DClass -> IO ()
delete'_ :: (HG3DClassPtr) -> (IO ())

module HGamer3D.Bindings.Ogre.ClassRenderWindow
setFullscreen :: HG3DClass -> Bool -> Int -> Int -> IO ()
destroy :: HG3DClass -> IO ()
resize :: HG3DClass -> Int -> Int -> IO ()
windowMovedOrResized :: HG3DClass -> IO ()
reposition :: HG3DClass -> Int -> Int -> IO ()
isVisible :: HG3DClass -> IO (Bool)
setVisible :: HG3DClass -> Bool -> IO ()
isHidden :: HG3DClass -> IO (Bool)
setHidden :: HG3DClass -> Bool -> IO ()
setVSyncEnabled :: HG3DClass -> Bool -> IO ()
isVSyncEnabled :: HG3DClass -> IO (Bool)
setVSyncInterval :: HG3DClass -> Int -> IO ()
getVSyncInterval :: HG3DClass -> IO (Int)
isActive :: HG3DClass -> IO (Bool)
isClosed :: HG3DClass -> IO (Bool)
isPrimary :: HG3DClass -> IO (Bool)
isFullScreen :: HG3DClass -> IO (Bool)
getMetrics :: HG3DClass -> IO (Int, Int, Int, Int, Int)
isDeactivatedOnFocusChange :: HG3DClass -> IO (Bool)
setDeactivateOnFocusChange :: HG3DClass -> Bool -> IO ()
setFullscreen'_ :: (HG3DClassPtr) -> (CInt -> (CUInt -> (CUInt -> (IO ()))))
destroy'_ :: (HG3DClassPtr) -> (IO ())
resize'_ :: (HG3DClassPtr) -> (CUInt -> (CUInt -> (IO ())))
windowMovedOrResized'_ :: (HG3DClassPtr) -> (IO ())
reposition'_ :: (HG3DClassPtr) -> (CInt -> (CInt -> (IO ())))
isVisible'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setVisible'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
isHidden'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setHidden'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
setVSyncEnabled'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
isVSyncEnabled'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setVSyncInterval'_ :: (HG3DClassPtr) -> (CUInt -> (IO ()))
getVSyncInterval'_ :: (HG3DClassPtr) -> ((Ptr CUInt) -> (IO ()))
isActive'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
isClosed'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
isPrimary'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
isFullScreen'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getMetrics'_ :: (HG3DClassPtr) -> ((Ptr CUInt) -> ((Ptr CUInt) -> ((Ptr CUInt) -> ((Ptr CInt) -> ((Ptr CInt) -> (IO ()))))))
isDeactivatedOnFocusChange'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setDeactivateOnFocusChange'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))

module HGamer3D.Bindings.Ogre.ClassResource
delete :: HG3DClass -> IO ()
prepare :: HG3DClass -> Bool -> IO ()
load :: HG3DClass -> Bool -> IO ()
reload :: HG3DClass -> IO ()
isReloadable :: HG3DClass -> IO (Bool)
isManuallyLoaded :: HG3DClass -> IO (Bool)
unload :: HG3DClass -> IO ()
getSize :: HG3DClass -> IO (Int)
touch :: HG3DClass -> IO ()
getName :: HG3DClass -> IO (String)
isPrepared :: HG3DClass -> IO (Bool)
isLoaded :: HG3DClass -> IO (Bool)
isLoading :: HG3DClass -> IO (Bool)
isBackgroundLoaded :: HG3DClass -> IO (Bool)
setBackgroundLoaded :: HG3DClass -> Bool -> IO ()
escalateLoading :: HG3DClass -> IO ()
getGroup :: HG3DClass -> IO (String)
changeGroupOwnership :: HG3DClass -> String -> IO ()
getCreator :: HG3DClass -> IO (HG3DClass)
getOrigin :: HG3DClass -> IO (String)
getStateCount :: HG3DClass -> IO (Int)
delete'_ :: (HG3DClassPtr) -> (IO ())
prepare'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
load'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
reload'_ :: (HG3DClassPtr) -> (IO ())
isReloadable'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
isManuallyLoaded'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
unload'_ :: (HG3DClassPtr) -> (IO ())
getSize'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
touch'_ :: (HG3DClassPtr) -> (IO ())
getName'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
isPrepared'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
isLoaded'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
isLoading'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
isBackgroundLoaded'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setBackgroundLoaded'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
escalateLoading'_ :: (HG3DClassPtr) -> (IO ())
getGroup'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
changeGroupOwnership'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
getCreator'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
getOrigin'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
getStateCount'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))

module HGamer3D.Bindings.Ogre.ClassResourceGroupManager
new :: IO (HG3DClass)
delete :: HG3DClass -> IO ()
createResourceGroup :: HG3DClass -> String -> Bool -> IO ()
initialiseResourceGroup :: HG3DClass -> String -> IO ()
initialiseAllResourceGroups :: HG3DClass -> IO ()
prepareResourceGroup :: HG3DClass -> String -> Bool -> Bool -> IO ()
loadResourceGroup :: HG3DClass -> String -> Bool -> Bool -> IO ()
unloadResourceGroup :: HG3DClass -> String -> Bool -> IO ()
unloadUnreferencedResourcesInGroup :: HG3DClass -> String -> Bool -> IO ()
clearResourceGroup :: HG3DClass -> String -> IO ()
destroyResourceGroup :: HG3DClass -> String -> IO ()
isResourceGroupInitialised :: HG3DClass -> String -> IO (Bool)
isResourceGroupLoaded :: HG3DClass -> String -> IO (Bool)
resourceGroupExists :: HG3DClass -> String -> IO (Bool)
addResourceLocation :: HG3DClass -> String -> String -> String -> Bool -> IO ()
removeResourceLocation :: HG3DClass -> String -> String -> IO ()
resourceLocationExists :: HG3DClass -> String -> String -> IO (Bool)
undeclareResource :: HG3DClass -> String -> String -> IO ()
resourceExists :: HG3DClass -> String -> String -> IO (Bool)
resourceExistsInAnyGroup :: HG3DClass -> String -> IO (Bool)
findGroupContainingResource :: HG3DClass -> String -> IO (String)
deleteResource :: HG3DClass -> String -> String -> String -> IO ()
deleteMatchingResources :: HG3DClass -> String -> String -> String -> IO ()
setWorldResourceGroupName :: HG3DClass -> String -> IO ()
getWorldResourceGroupName :: HG3DClass -> IO (String)
linkWorldGeometryToResourceGroup :: HG3DClass -> String -> String -> HG3DClass -> IO ()
unlinkWorldGeometryFromResourceGroup :: HG3DClass -> String -> IO ()
isResourceGroupInGlobalPool :: HG3DClass -> String -> IO (Bool)
shutdownAll :: HG3DClass -> IO ()
getSingleton :: IO (HG3DClass)
getSingletonPtr :: IO (HG3DClass)
new'_ :: (HG3DClassPtr) -> (IO ())
delete'_ :: (HG3DClassPtr) -> (IO ())
createResourceGroup'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (CInt -> (IO ())))
initialiseResourceGroup'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
initialiseAllResourceGroups'_ :: (HG3DClassPtr) -> (IO ())
prepareResourceGroup'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (CInt -> (CInt -> (IO ()))))
loadResourceGroup'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (CInt -> (CInt -> (IO ()))))
unloadResourceGroup'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (CInt -> (IO ())))
unloadUnreferencedResourcesInGroup'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (CInt -> (IO ())))
clearResourceGroup'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
destroyResourceGroup'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
isResourceGroupInitialised'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CInt) -> (IO ())))
isResourceGroupLoaded'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CInt) -> (IO ())))
resourceGroupExists'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CInt) -> (IO ())))
addResourceLocation'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CChar) -> ((Ptr CChar) -> (CInt -> (IO ())))))
removeResourceLocation'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CChar) -> (IO ())))
resourceLocationExists'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CChar) -> ((Ptr CInt) -> (IO ()))))
undeclareResource'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CChar) -> (IO ())))
resourceExists'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CChar) -> ((Ptr CInt) -> (IO ()))))
resourceExistsInAnyGroup'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CInt) -> (IO ())))
findGroupContainingResource'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CChar) -> (IO ())))
deleteResource'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CChar) -> ((Ptr CChar) -> (IO ()))))
deleteMatchingResources'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CChar) -> ((Ptr CChar) -> (IO ()))))
setWorldResourceGroupName'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
getWorldResourceGroupName'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
linkWorldGeometryToResourceGroup'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ()))))
unlinkWorldGeometryFromResourceGroup'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
isResourceGroupInGlobalPool'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CInt) -> (IO ())))
shutdownAll'_ :: (HG3DClassPtr) -> (IO ())
getSingleton'_ :: (HG3DClassPtr) -> (IO ())
getSingletonPtr'_ :: (HG3DClassPtr) -> (IO ())

module HGamer3D.Bindings.Ogre.ClassResourceManager
delete :: HG3DClass -> IO ()
setMemoryBudget :: HG3DClass -> Int -> IO ()
getMemoryBudget :: HG3DClass -> IO (Int)
getMemoryUsage :: HG3DClass -> IO (Int)
unload :: HG3DClass -> String -> IO ()
unloadAll :: HG3DClass -> Bool -> IO ()
reloadAll :: HG3DClass -> Bool -> IO ()
unloadUnreferencedResources :: HG3DClass -> Bool -> IO ()
reloadUnreferencedResources :: HG3DClass -> Bool -> IO ()
remove2 :: HG3DClass -> String -> IO ()
removeAll :: HG3DClass -> IO ()
removeUnreferencedResources :: HG3DClass -> Bool -> IO ()
resourceExists :: HG3DClass -> String -> IO (Bool)
getLoadingOrder :: HG3DClass -> IO (Float)
getResourceType :: HG3DClass -> IO (String)
setVerbose :: HG3DClass -> Bool -> IO ()
getVerbose :: HG3DClass -> IO (Bool)
destroyResourcePool2 :: HG3DClass -> String -> IO ()
destroyAllResourcePools :: HG3DClass -> IO ()
delete'_ :: (HG3DClassPtr) -> (IO ())
setMemoryBudget'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getMemoryBudget'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getMemoryUsage'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
unload'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
unloadAll'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
reloadAll'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
unloadUnreferencedResources'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
reloadUnreferencedResources'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
remove2'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
removeAll'_ :: (HG3DClassPtr) -> (IO ())
removeUnreferencedResources'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
resourceExists'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CInt) -> (IO ())))
getLoadingOrder'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
getResourceType'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
setVerbose'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getVerbose'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
destroyResourcePool2'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
destroyAllResourcePools'_ :: (HG3DClassPtr) -> (IO ())

module HGamer3D.Bindings.Ogre.ClassRoot
new :: String -> String -> String -> IO (HG3DClass)
delete :: HG3DClass -> IO ()
saveConfig :: HG3DClass -> IO ()
restoreConfig :: HG3DClass -> IO (Bool)
showConfigDialog :: HG3DClass -> IO (Bool)
addRenderSystem :: HG3DClass -> HG3DClass -> IO ()
getRenderSystemByName :: HG3DClass -> String -> IO (HG3DClass)
setRenderSystem :: HG3DClass -> HG3DClass -> IO ()
getRenderSystem :: HG3DClass -> IO (HG3DClass)
initialise :: HG3DClass -> Bool -> String -> String -> IO (HG3DClass)
isInitialised :: HG3DClass -> IO (Bool)
getRemoveRenderQueueStructuresOnClear :: HG3DClass -> IO (Bool)
setRemoveRenderQueueStructuresOnClear :: HG3DClass -> Bool -> IO ()
addSceneManagerFactory :: HG3DClass -> HG3DClass -> IO ()
removeSceneManagerFactory :: HG3DClass -> HG3DClass -> IO ()
createSceneManager :: HG3DClass -> String -> String -> IO (HG3DClass)
destroySceneManager :: HG3DClass -> HG3DClass -> IO ()
getSceneManager :: HG3DClass -> String -> IO (HG3DClass)
hasSceneManager :: HG3DClass -> String -> IO (Bool)
getTextureManager :: HG3DClass -> IO (HG3DClass)
getMeshManager :: HG3DClass -> IO (HG3DClass)
getErrorDescription :: HG3DClass -> Int -> IO (String)
queueEndRendering :: HG3DClass -> IO ()
startRendering :: HG3DClass -> IO ()
renderOneFrame :: HG3DClass -> IO (Bool)
renderOneFrame2 :: HG3DClass -> Float -> IO (Bool)
shutdown :: HG3DClass -> IO ()
addResourceLocation :: HG3DClass -> String -> String -> String -> Bool -> IO ()
removeResourceLocation :: HG3DClass -> String -> String -> IO ()
convertColourValue :: HG3DClass -> Colour -> IO (Int)
getAutoCreatedWindow :: HG3DClass -> IO (HG3DClass)
detachRenderTarget :: HG3DClass -> HG3DClass -> IO (HG3DClass)
detachRenderTarget2 :: HG3DClass -> String -> IO (HG3DClass)
destroyRenderTarget :: HG3DClass -> HG3DClass -> IO ()
destroyRenderTarget2 :: HG3DClass -> String -> IO ()
getRenderTarget :: HG3DClass -> String -> IO (HG3DClass)
loadPlugin :: HG3DClass -> String -> IO ()
unloadPlugin :: HG3DClass -> String -> IO ()
destroyRenderQueueInvocationSequence :: HG3DClass -> String -> IO ()
destroyAllRenderQueueInvocationSequences :: HG3DClass -> IO ()
clearEventTimes :: HG3DClass -> IO ()
setFrameSmoothingPeriod :: HG3DClass -> Float -> IO ()
getFrameSmoothingPeriod :: HG3DClass -> IO (Float)
addMovableObjectFactory :: HG3DClass -> HG3DClass -> Bool -> IO ()
removeMovableObjectFactory :: HG3DClass -> HG3DClass -> IO ()
hasMovableObjectFactory :: HG3DClass -> String -> IO (Bool)
getMovableObjectFactory :: HG3DClass -> String -> IO (HG3DClass)
getDisplayMonitorCount :: HG3DClass -> IO (Int)
setBlendIndicesGpuRedundant :: HG3DClass -> Bool -> IO ()
isBlendIndicesGpuRedundant :: HG3DClass -> IO (Bool)
setBlendWeightsGpuRedundant :: HG3DClass -> Bool -> IO ()
isBlendWeightsGpuRedundant :: HG3DClass -> IO (Bool)
setDefaultMinPixelSize :: HG3DClass -> Float -> IO ()
getDefaultMinPixelSize :: HG3DClass -> IO (Float)
getSingleton :: IO (HG3DClass)
getSingletonPtr :: IO (HG3DClass)
new'_ :: (Ptr CChar) -> ((Ptr CChar) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ()))))
delete'_ :: (HG3DClassPtr) -> (IO ())
saveConfig'_ :: (HG3DClassPtr) -> (IO ())
restoreConfig'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
showConfigDialog'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
addRenderSystem'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
getRenderSystemByName'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
setRenderSystem'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
getRenderSystem'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
initialise'_ :: (HG3DClassPtr) -> (CInt -> ((Ptr CChar) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))))
isInitialised'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getRemoveRenderQueueStructuresOnClear'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setRemoveRenderQueueStructuresOnClear'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
addSceneManagerFactory'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
removeSceneManagerFactory'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
createSceneManager'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ()))))
destroySceneManager'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
getSceneManager'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
hasSceneManager'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CInt) -> (IO ())))
getTextureManager'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
getMeshManager'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
getErrorDescription'_ :: (HG3DClassPtr) -> (CInt -> ((Ptr CChar) -> (IO ())))
queueEndRendering'_ :: (HG3DClassPtr) -> (IO ())
startRendering'_ :: (HG3DClassPtr) -> (IO ())
renderOneFrame'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
renderOneFrame2'_ :: (HG3DClassPtr) -> (CFloat -> ((Ptr CInt) -> (IO ())))
shutdown'_ :: (HG3DClassPtr) -> (IO ())
addResourceLocation'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CChar) -> ((Ptr CChar) -> (CInt -> (IO ())))))
removeResourceLocation'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CChar) -> (IO ())))
convertColourValue'_ :: (HG3DClassPtr) -> ((ColourPtr) -> ((Ptr CUInt) -> (IO ())))
getAutoCreatedWindow'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
detachRenderTarget'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ())))
detachRenderTarget2'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
destroyRenderTarget'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
destroyRenderTarget2'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
getRenderTarget'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
loadPlugin'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
unloadPlugin'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
destroyRenderQueueInvocationSequence'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
destroyAllRenderQueueInvocationSequences'_ :: (HG3DClassPtr) -> (IO ())
clearEventTimes'_ :: (HG3DClassPtr) -> (IO ())
setFrameSmoothingPeriod'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
getFrameSmoothingPeriod'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
addMovableObjectFactory'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (CInt -> (IO ())))
removeMovableObjectFactory'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
hasMovableObjectFactory'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CInt) -> (IO ())))
getMovableObjectFactory'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
getDisplayMonitorCount'_ :: (HG3DClassPtr) -> ((Ptr CUInt) -> (IO ()))
setBlendIndicesGpuRedundant'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
isBlendIndicesGpuRedundant'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setBlendWeightsGpuRedundant'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
isBlendWeightsGpuRedundant'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setDefaultMinPixelSize'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
getDefaultMinPixelSize'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
getSingleton'_ :: (HG3DClassPtr) -> (IO ())
getSingletonPtr'_ :: (HG3DClassPtr) -> (IO ())

module HGamer3D.Bindings.Ogre.ClassSceneManager
delete :: HG3DClass -> IO ()
getName :: HG3DClass -> IO (String)
getTypeName :: HG3DClass -> IO (String)
createCamera :: HG3DClass -> String -> IO (HG3DClass)
getCamera :: HG3DClass -> String -> IO (HG3DClass)
hasCamera :: HG3DClass -> String -> IO (Bool)
destroyCamera :: HG3DClass -> HG3DClass -> IO ()
destroyCamera2 :: HG3DClass -> String -> IO ()
destroyAllCameras :: HG3DClass -> IO ()
createLight :: HG3DClass -> String -> IO (HG3DClass)
createLight2 :: HG3DClass -> IO (HG3DClass)
getLight :: HG3DClass -> String -> IO (HG3DClass)
hasLight :: HG3DClass -> String -> IO (Bool)
destroyLight :: HG3DClass -> String -> IO ()
destroyLight2 :: HG3DClass -> HG3DClass -> IO ()
destroyAllLights :: HG3DClass -> IO ()
createSceneNode :: HG3DClass -> IO (HG3DClass)
createSceneNode2 :: HG3DClass -> String -> IO (HG3DClass)
destroySceneNode :: HG3DClass -> String -> IO ()
destroySceneNode2 :: HG3DClass -> HG3DClass -> IO ()
getRootSceneNode :: HG3DClass -> IO (HG3DClass)
getSceneNode :: HG3DClass -> String -> IO (HG3DClass)
hasSceneNode :: HG3DClass -> String -> IO (Bool)
createEntity :: HG3DClass -> String -> String -> String -> IO (HG3DClass)
createEntity2 :: HG3DClass -> String -> SharedPtr -> IO (HG3DClass)
createEntity3 :: HG3DClass -> String -> IO (HG3DClass)
createEntity4 :: HG3DClass -> SharedPtr -> IO (HG3DClass)
createEntity5 :: HG3DClass -> String -> EnumSceneManagerPrefabType -> IO (HG3DClass)
createEntity6 :: HG3DClass -> EnumSceneManagerPrefabType -> IO (HG3DClass)
getEntity :: HG3DClass -> String -> IO (HG3DClass)
hasEntity :: HG3DClass -> String -> IO (Bool)
destroyEntity :: HG3DClass -> HG3DClass -> IO ()
destroyEntity2 :: HG3DClass -> String -> IO ()
destroyAllEntities :: HG3DClass -> IO ()
createManualObject :: HG3DClass -> String -> IO (HG3DClass)
createManualObject2 :: HG3DClass -> IO (HG3DClass)
getManualObject :: HG3DClass -> String -> IO (HG3DClass)
hasManualObject :: HG3DClass -> String -> IO (Bool)
destroyManualObject :: HG3DClass -> HG3DClass -> IO ()
destroyManualObject2 :: HG3DClass -> String -> IO ()
destroyAllManualObjects :: HG3DClass -> IO ()
createBillboardChain :: HG3DClass -> String -> IO (HG3DClass)
createBillboardChain2 :: HG3DClass -> IO (HG3DClass)
getBillboardChain :: HG3DClass -> String -> IO (HG3DClass)
hasBillboardChain :: HG3DClass -> String -> IO (Bool)
destroyBillboardChain :: HG3DClass -> HG3DClass -> IO ()
destroyBillboardChain2 :: HG3DClass -> String -> IO ()
destroyAllBillboardChains :: HG3DClass -> IO ()
hasRibbonTrail :: HG3DClass -> String -> IO (Bool)
destroyRibbonTrail2 :: HG3DClass -> String -> IO ()
destroyAllRibbonTrails :: HG3DClass -> IO ()
hasParticleSystem :: HG3DClass -> String -> IO (Bool)
destroyParticleSystem2 :: HG3DClass -> String -> IO ()
destroyAllParticleSystems :: HG3DClass -> IO ()
clearScene :: HG3DClass -> IO ()
setAmbientLight :: HG3DClass -> Colour -> IO ()
getAmbientLight :: HG3DClass -> IO (Colour)
prepareWorldGeometry :: HG3DClass -> String -> IO ()
setWorldGeometry :: HG3DClass -> String -> IO ()
estimateWorldGeometry :: HG3DClass -> String -> IO (Int)
hasOption :: HG3DClass -> String -> IO (Bool)
setSkyPlaneEnabled :: HG3DClass -> Bool -> IO ()
isSkyPlaneEnabled :: HG3DClass -> IO (Bool)
getSkyPlaneNode :: HG3DClass -> IO (HG3DClass)
setSkyBox :: HG3DClass -> Bool -> String -> Float -> Bool -> Quaternion -> String -> IO ()
setSkyBoxEnabled :: HG3DClass -> Bool -> IO ()
isSkyBoxEnabled :: HG3DClass -> IO (Bool)
getSkyBoxNode :: HG3DClass -> IO (HG3DClass)
setSkyDome :: HG3DClass -> Bool -> String -> Float -> Float -> Float -> Bool -> Quaternion -> Int -> Int -> Int -> String -> IO ()
setSkyDomeEnabled :: HG3DClass -> Bool -> IO ()
isSkyDomeEnabled :: HG3DClass -> IO (Bool)
getSkyDomeNode :: HG3DClass -> IO (HG3DClass)
getFogColour :: HG3DClass -> IO (Colour)
getFogStart :: HG3DClass -> IO (Float)
getFogEnd :: HG3DClass -> IO (Float)
getFogDensity :: HG3DClass -> IO (Float)
createBillboardSet :: HG3DClass -> String -> Int -> IO (HG3DClass)
createBillboardSet2 :: HG3DClass -> Int -> IO (HG3DClass)
getBillboardSet :: HG3DClass -> String -> IO (HG3DClass)
hasBillboardSet :: HG3DClass -> String -> IO (Bool)
destroyBillboardSet :: HG3DClass -> HG3DClass -> IO ()
destroyBillboardSet2 :: HG3DClass -> String -> IO ()
destroyAllBillboardSets :: HG3DClass -> IO ()
setDisplaySceneNodes :: HG3DClass -> Bool -> IO ()
getDisplaySceneNodes :: HG3DClass -> IO (Bool)
createAnimation :: HG3DClass -> String -> Float -> IO (HG3DClass)
getAnimation :: HG3DClass -> String -> IO (HG3DClass)
hasAnimation :: HG3DClass -> String -> IO (Bool)
destroyAnimation :: HG3DClass -> String -> IO ()
destroyAllAnimations :: HG3DClass -> IO ()
createAnimationState :: HG3DClass -> String -> IO (HG3DClass)
getAnimationState :: HG3DClass -> String -> IO (HG3DClass)
hasAnimationState :: HG3DClass -> String -> IO (Bool)
destroyAnimationState :: HG3DClass -> String -> IO ()
destroyAllAnimationStates :: HG3DClass -> IO ()
clearSpecialCaseRenderQueues :: HG3DClass -> IO ()
setSpecialCaseRenderQueueMode :: HG3DClass -> EnumSceneManagerSpecialCaseRenderQueueMode -> IO ()
getSpecialCaseRenderQueueMode :: HG3DClass -> IO (EnumSceneManagerSpecialCaseRenderQueueMode)
showBoundingBoxes :: HG3DClass -> Bool -> IO ()
getShowBoundingBoxes :: HG3DClass -> IO (Bool)
setShowDebugShadows :: HG3DClass -> Bool -> IO ()
getShowDebugShadows :: HG3DClass -> IO (Bool)
setShadowColour :: HG3DClass -> Colour -> IO ()
getShadowColour :: HG3DClass -> IO (Colour)
setShadowDirectionalLightExtrusionDistance :: HG3DClass -> Float -> IO ()
getShadowDirectionalLightExtrusionDistance :: HG3DClass -> IO (Float)
setShadowFarDistance :: HG3DClass -> Float -> IO ()
getShadowFarDistance :: HG3DClass -> IO (Float)
getShadowFarDistanceSquared :: HG3DClass -> IO (Float)
setShadowIndexBufferSize :: HG3DClass -> Int -> IO ()
getShadowIndexBufferSize :: HG3DClass -> IO (Int)
setShadowTextureSize :: HG3DClass -> Int -> IO ()
setShadowTextureFSAA :: HG3DClass -> Int -> IO ()
setShadowTextureCount :: HG3DClass -> Int -> IO ()
getShadowTextureCount :: HG3DClass -> IO (Int)
setShadowTextureCountPerLightType :: HG3DClass -> EnumLightType -> Int -> IO ()
getShadowTextureCountPerLightType :: HG3DClass -> EnumLightType -> IO (Int)
getShadowTexture :: HG3DClass -> Int -> IO (SharedPtr)
setShadowDirLightTextureOffset :: HG3DClass -> Float -> IO ()
getShadowDirLightTextureOffset :: HG3DClass -> IO (Float)
setShadowTextureFadeStart :: HG3DClass -> Float -> IO ()
setShadowTextureFadeEnd :: HG3DClass -> Float -> IO ()
setShadowTextureSelfShadow :: HG3DClass -> Bool -> IO ()
getShadowTextureSelfShadow :: HG3DClass -> IO (Bool)
setShadowTextureCasterMaterial :: HG3DClass -> String -> IO ()
setShadowTextureReceiverMaterial :: HG3DClass -> String -> IO ()
setShadowCasterRenderBackFaces :: HG3DClass -> Bool -> IO ()
getShadowCasterRenderBackFaces :: HG3DClass -> IO (Bool)
setShadowUseInfiniteFarPlane :: HG3DClass -> Bool -> IO ()
isShadowTechniqueStencilBased :: HG3DClass -> IO (Bool)
isShadowTechniqueTextureBased :: HG3DClass -> IO (Bool)
isShadowTechniqueModulative :: HG3DClass -> IO (Bool)
isShadowTechniqueAdditive :: HG3DClass -> IO (Bool)
isShadowTechniqueIntegrated :: HG3DClass -> IO (Bool)
isShadowTechniqueInUse :: HG3DClass -> IO (Bool)
setShadowUseLightClipPlanes :: HG3DClass -> Bool -> IO ()
getShadowUseLightClipPlanes :: HG3DClass -> IO (Bool)
setLateMaterialResolving :: HG3DClass -> Bool -> IO ()
isLateMaterialResolving :: HG3DClass -> IO (Bool)
hasStaticGeometry :: HG3DClass -> String -> IO (Bool)
destroyStaticGeometry2 :: HG3DClass -> String -> IO ()
destroyAllStaticGeometry :: HG3DClass -> IO ()
destroyInstancedGeometry2 :: HG3DClass -> String -> IO ()
destroyAllInstancedGeometry :: HG3DClass -> IO ()
hasInstanceManager :: HG3DClass -> String -> IO (Bool)
destroyInstanceManager :: HG3DClass -> String -> IO ()
destroyAllInstanceManagers :: HG3DClass -> IO ()
destroyMovableObject :: HG3DClass -> String -> String -> IO ()
destroyMovableObject2 :: HG3DClass -> HG3DClass -> IO ()
destroyAllMovableObjectsByType :: HG3DClass -> String -> IO ()
destroyAllMovableObjects :: HG3DClass -> IO ()
getMovableObject :: HG3DClass -> String -> String -> IO (HG3DClass)
hasMovableObject :: HG3DClass -> String -> String -> IO (Bool)
injectMovableObject :: HG3DClass -> HG3DClass -> IO ()
extractMovableObject :: HG3DClass -> String -> String -> IO ()
extractMovableObject2 :: HG3DClass -> HG3DClass -> IO ()
extractAllMovableObjectsByType :: HG3DClass -> String -> IO ()
setVisibilityMask :: HG3DClass -> Int -> IO ()
getVisibilityMask :: HG3DClass -> IO (Int)
setFindVisibleObjects :: HG3DClass -> Bool -> IO ()
getFindVisibleObjects :: HG3DClass -> IO (Bool)
setNormaliseNormalsOnScale :: HG3DClass -> Bool -> IO ()
getNormaliseNormalsOnScale :: HG3DClass -> IO (Bool)
setFlipCullingOnNegativeScale :: HG3DClass -> Bool -> IO ()
getFlipCullingOnNegativeScale :: HG3DClass -> IO (Bool)
getDestinationRenderSystem :: HG3DClass -> IO (HG3DClass)
getCurrentViewport :: HG3DClass -> IO (HG3DClass)
setCameraRelativeRendering :: HG3DClass -> Bool -> IO ()
getCameraRelativeRendering :: HG3DClass -> IO (Bool)
delete'_ :: (HG3DClassPtr) -> (IO ())
getName'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
getTypeName'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
createCamera'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
getCamera'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
hasCamera'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CInt) -> (IO ())))
destroyCamera'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
destroyCamera2'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
destroyAllCameras'_ :: (HG3DClassPtr) -> (IO ())
createLight'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
createLight2'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
getLight'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
hasLight'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CInt) -> (IO ())))
destroyLight'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
destroyLight2'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
destroyAllLights'_ :: (HG3DClassPtr) -> (IO ())
createSceneNode'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
createSceneNode2'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
destroySceneNode'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
destroySceneNode2'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
getRootSceneNode'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
getSceneNode'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
hasSceneNode'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CInt) -> (IO ())))
createEntity'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CChar) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))))
createEntity2'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((SharedPtrPtr) -> ((HG3DClassPtr) -> (IO ()))))
createEntity3'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
createEntity4'_ :: (HG3DClassPtr) -> ((SharedPtrPtr) -> ((HG3DClassPtr) -> (IO ())))
createEntity5'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (CInt -> ((HG3DClassPtr) -> (IO ()))))
createEntity6'_ :: (HG3DClassPtr) -> (CInt -> ((HG3DClassPtr) -> (IO ())))
getEntity'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
hasEntity'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CInt) -> (IO ())))
destroyEntity'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
destroyEntity2'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
destroyAllEntities'_ :: (HG3DClassPtr) -> (IO ())
createManualObject'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
createManualObject2'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
getManualObject'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
hasManualObject'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CInt) -> (IO ())))
destroyManualObject'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
destroyManualObject2'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
destroyAllManualObjects'_ :: (HG3DClassPtr) -> (IO ())
createBillboardChain'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
createBillboardChain2'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
getBillboardChain'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
hasBillboardChain'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CInt) -> (IO ())))
destroyBillboardChain'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
destroyBillboardChain2'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
destroyAllBillboardChains'_ :: (HG3DClassPtr) -> (IO ())
hasRibbonTrail'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CInt) -> (IO ())))
destroyRibbonTrail2'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
destroyAllRibbonTrails'_ :: (HG3DClassPtr) -> (IO ())
hasParticleSystem'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CInt) -> (IO ())))
destroyParticleSystem2'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
destroyAllParticleSystems'_ :: (HG3DClassPtr) -> (IO ())
clearScene'_ :: (HG3DClassPtr) -> (IO ())
setAmbientLight'_ :: (HG3DClassPtr) -> ((ColourPtr) -> (IO ()))
getAmbientLight'_ :: (HG3DClassPtr) -> ((ColourPtr) -> (IO ()))
prepareWorldGeometry'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
setWorldGeometry'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
estimateWorldGeometry'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CInt) -> (IO ())))
hasOption'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CInt) -> (IO ())))
setSkyPlaneEnabled'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
isSkyPlaneEnabled'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getSkyPlaneNode'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
setSkyBox'_ :: (HG3DClassPtr) -> (CInt -> ((Ptr CChar) -> (CFloat -> (CInt -> ((QuaternionPtr) -> ((Ptr CChar) -> (IO ())))))))
setSkyBoxEnabled'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
isSkyBoxEnabled'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getSkyBoxNode'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
setSkyDome'_ :: (HG3DClassPtr) -> (CInt -> ((Ptr CChar) -> (CFloat -> (CFloat -> (CFloat -> (CInt -> ((QuaternionPtr) -> (CInt -> (CInt -> (CInt -> ((Ptr CChar) -> (IO ()))))))))))))
setSkyDomeEnabled'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
isSkyDomeEnabled'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getSkyDomeNode'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
getFogColour'_ :: (HG3DClassPtr) -> ((ColourPtr) -> (IO ()))
getFogStart'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
getFogEnd'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
getFogDensity'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
createBillboardSet'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (CUInt -> ((HG3DClassPtr) -> (IO ()))))
createBillboardSet2'_ :: (HG3DClassPtr) -> (CUInt -> ((HG3DClassPtr) -> (IO ())))
getBillboardSet'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
hasBillboardSet'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CInt) -> (IO ())))
destroyBillboardSet'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
destroyBillboardSet2'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
destroyAllBillboardSets'_ :: (HG3DClassPtr) -> (IO ())
setDisplaySceneNodes'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getDisplaySceneNodes'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
createAnimation'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (CFloat -> ((HG3DClassPtr) -> (IO ()))))
getAnimation'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
hasAnimation'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CInt) -> (IO ())))
destroyAnimation'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
destroyAllAnimations'_ :: (HG3DClassPtr) -> (IO ())
createAnimationState'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
getAnimationState'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
hasAnimationState'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CInt) -> (IO ())))
destroyAnimationState'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
destroyAllAnimationStates'_ :: (HG3DClassPtr) -> (IO ())
clearSpecialCaseRenderQueues'_ :: (HG3DClassPtr) -> (IO ())
setSpecialCaseRenderQueueMode'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getSpecialCaseRenderQueueMode'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
showBoundingBoxes'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getShowBoundingBoxes'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setShowDebugShadows'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getShowDebugShadows'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setShadowColour'_ :: (HG3DClassPtr) -> ((ColourPtr) -> (IO ()))
getShadowColour'_ :: (HG3DClassPtr) -> ((ColourPtr) -> (IO ()))
setShadowDirectionalLightExtrusionDistance'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
getShadowDirectionalLightExtrusionDistance'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
setShadowFarDistance'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
getShadowFarDistance'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
getShadowFarDistanceSquared'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
setShadowIndexBufferSize'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getShadowIndexBufferSize'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setShadowTextureSize'_ :: (HG3DClassPtr) -> (CUShort -> (IO ()))
setShadowTextureFSAA'_ :: (HG3DClassPtr) -> (CUShort -> (IO ()))
setShadowTextureCount'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getShadowTextureCount'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setShadowTextureCountPerLightType'_ :: (HG3DClassPtr) -> (CInt -> (CInt -> (IO ())))
getShadowTextureCountPerLightType'_ :: (HG3DClassPtr) -> (CInt -> ((Ptr CInt) -> (IO ())))
getShadowTexture'_ :: (HG3DClassPtr) -> (CInt -> ((SharedPtrPtr) -> (IO ())))
setShadowDirLightTextureOffset'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
getShadowDirLightTextureOffset'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
setShadowTextureFadeStart'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
setShadowTextureFadeEnd'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
setShadowTextureSelfShadow'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getShadowTextureSelfShadow'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setShadowTextureCasterMaterial'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
setShadowTextureReceiverMaterial'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
setShadowCasterRenderBackFaces'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getShadowCasterRenderBackFaces'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setShadowUseInfiniteFarPlane'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
isShadowTechniqueStencilBased'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
isShadowTechniqueTextureBased'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
isShadowTechniqueModulative'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
isShadowTechniqueAdditive'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
isShadowTechniqueIntegrated'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
isShadowTechniqueInUse'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setShadowUseLightClipPlanes'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getShadowUseLightClipPlanes'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setLateMaterialResolving'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
isLateMaterialResolving'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
hasStaticGeometry'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CInt) -> (IO ())))
destroyStaticGeometry2'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
destroyAllStaticGeometry'_ :: (HG3DClassPtr) -> (IO ())
destroyInstancedGeometry2'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
destroyAllInstancedGeometry'_ :: (HG3DClassPtr) -> (IO ())
hasInstanceManager'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CInt) -> (IO ())))
destroyInstanceManager'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
destroyAllInstanceManagers'_ :: (HG3DClassPtr) -> (IO ())
destroyMovableObject'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CChar) -> (IO ())))
destroyMovableObject2'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
destroyAllMovableObjectsByType'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
destroyAllMovableObjects'_ :: (HG3DClassPtr) -> (IO ())
getMovableObject'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ()))))
hasMovableObject'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CChar) -> ((Ptr CInt) -> (IO ()))))
injectMovableObject'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
extractMovableObject'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CChar) -> (IO ())))
extractMovableObject2'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
extractAllMovableObjectsByType'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
setVisibilityMask'_ :: (HG3DClassPtr) -> (CUInt -> (IO ()))
getVisibilityMask'_ :: (HG3DClassPtr) -> ((Ptr CUInt) -> (IO ()))
setFindVisibleObjects'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getFindVisibleObjects'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setNormaliseNormalsOnScale'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getNormaliseNormalsOnScale'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setFlipCullingOnNegativeScale'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getFlipCullingOnNegativeScale'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getDestinationRenderSystem'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
getCurrentViewport'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
setCameraRelativeRendering'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getCameraRelativeRendering'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))

module HGamer3D.Bindings.Ogre.ClassSceneManagerFactory
delete :: HG3DClass -> IO ()
createInstance :: HG3DClass -> String -> IO (HG3DClass)
destroyInstance :: HG3DClass -> HG3DClass -> IO ()
delete'_ :: (HG3DClassPtr) -> (IO ())
createInstance'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
destroyInstance'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))

module HGamer3D.Bindings.Ogre.ClassSceneNode
delete :: HG3DClass -> IO ()
attachObject :: HG3DClass -> HG3DClass -> IO ()
numAttachedObjects :: HG3DClass -> IO (Int)
getAttachedObject :: HG3DClass -> Int -> IO (HG3DClass)
getAttachedObject2 :: HG3DClass -> String -> IO (HG3DClass)
detachObject :: HG3DClass -> Int -> IO (HG3DClass)
detachObject2 :: HG3DClass -> HG3DClass -> IO ()
detachObject3 :: HG3DClass -> String -> IO (HG3DClass)
detachAllObjects :: HG3DClass -> IO ()
isInSceneGraph :: HG3DClass -> IO (Bool)
getCreator :: HG3DClass -> IO (HG3DClass)
removeAndDestroyChild :: HG3DClass -> String -> IO ()
removeAndDestroyChild2 :: HG3DClass -> Int -> IO ()
removeAndDestroyAllChildren :: HG3DClass -> IO ()
showBoundingBox :: HG3DClass -> Bool -> IO ()
hideBoundingBox :: HG3DClass -> Bool -> IO ()
getShowBoundingBox :: HG3DClass -> IO (Bool)
createChildSceneNode :: HG3DClass -> Vec3 -> Quaternion -> IO (HG3DClass)
createChildSceneNode2 :: HG3DClass -> String -> Vec3 -> Quaternion -> IO (HG3DClass)
setFixedYawAxis :: HG3DClass -> Bool -> Vec3 -> IO ()
getAutoTrackTarget :: HG3DClass -> IO (HG3DClass)
getAutoTrackOffset :: HG3DClass -> IO (Vec3)
getAutoTrackLocalDirection :: HG3DClass -> IO (Vec3)
getParentSceneNode :: HG3DClass -> IO (HG3DClass)
setVisible :: HG3DClass -> Bool -> Bool -> IO ()
flipVisibility :: HG3DClass -> Bool -> IO ()
setDebugDisplayEnabled :: HG3DClass -> Bool -> Bool -> IO ()
delete'_ :: (HG3DClassPtr) -> (IO ())
attachObject'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
numAttachedObjects'_ :: (HG3DClassPtr) -> ((Ptr CUShort) -> (IO ()))
getAttachedObject'_ :: (HG3DClassPtr) -> (CUShort -> ((HG3DClassPtr) -> (IO ())))
getAttachedObject2'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
detachObject'_ :: (HG3DClassPtr) -> (CUShort -> ((HG3DClassPtr) -> (IO ())))
detachObject2'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
detachObject3'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
detachAllObjects'_ :: (HG3DClassPtr) -> (IO ())
isInSceneGraph'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getCreator'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
removeAndDestroyChild'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
removeAndDestroyChild2'_ :: (HG3DClassPtr) -> (CUShort -> (IO ()))
removeAndDestroyAllChildren'_ :: (HG3DClassPtr) -> (IO ())
showBoundingBox'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
hideBoundingBox'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getShowBoundingBox'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
createChildSceneNode'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> ((QuaternionPtr) -> ((HG3DClassPtr) -> (IO ()))))
createChildSceneNode2'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Vec3Ptr) -> ((QuaternionPtr) -> ((HG3DClassPtr) -> (IO ())))))
setFixedYawAxis'_ :: (HG3DClassPtr) -> (CInt -> ((Vec3Ptr) -> (IO ())))
getAutoTrackTarget'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
getAutoTrackOffset'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
getAutoTrackLocalDirection'_ :: (HG3DClassPtr) -> ((Vec3Ptr) -> (IO ()))
getParentSceneNode'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
setVisible'_ :: (HG3DClassPtr) -> (CInt -> (CInt -> (IO ())))
flipVisibility'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
setDebugDisplayEnabled'_ :: (HG3DClassPtr) -> (CInt -> (CInt -> (IO ())))

module HGamer3D.Bindings.Ogre.ClassSkeleton
delete :: HG3DClass -> IO ()
createBone :: HG3DClass -> IO (HG3DClass)
createBone2 :: HG3DClass -> Int -> IO (HG3DClass)
createBone3 :: HG3DClass -> String -> IO (HG3DClass)
createBone4 :: HG3DClass -> String -> Int -> IO (HG3DClass)
getNumBones :: HG3DClass -> IO (Int)
getRootBone :: HG3DClass -> IO (HG3DClass)
getBone :: HG3DClass -> Int -> IO (HG3DClass)
getBone2 :: HG3DClass -> String -> IO (HG3DClass)
hasBone :: HG3DClass -> String -> IO (Bool)
setBindingPose :: HG3DClass -> IO ()
reset :: HG3DClass -> Bool -> IO ()
createAnimation :: HG3DClass -> String -> Float -> IO (HG3DClass)
getAnimation2 :: HG3DClass -> String -> IO (HG3DClass)
hasAnimation :: HG3DClass -> String -> IO (Bool)
removeAnimation :: HG3DClass -> String -> IO ()
setAnimationState :: HG3DClass -> HG3DClass -> IO ()
getNumAnimations :: HG3DClass -> IO (Int)
getAnimation3 :: HG3DClass -> Int -> IO (HG3DClass)
getBlendMode :: HG3DClass -> IO (EnumSkeletonAnimationBlendMode)
setBlendMode :: HG3DClass -> EnumSkeletonAnimationBlendMode -> IO ()
optimiseAllAnimations :: HG3DClass -> Bool -> IO ()
addLinkedSkeletonAnimationSource :: HG3DClass -> String -> Float -> IO ()
removeAllLinkedSkeletonAnimationSources :: HG3DClass -> IO ()
getManualBonesDirty :: HG3DClass -> IO (Bool)
hasManualBones :: HG3DClass -> IO (Bool)
delete'_ :: (HG3DClassPtr) -> (IO ())
createBone'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
createBone2'_ :: (HG3DClassPtr) -> (CUShort -> ((HG3DClassPtr) -> (IO ())))
createBone3'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
createBone4'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (CUShort -> ((HG3DClassPtr) -> (IO ()))))
getNumBones'_ :: (HG3DClassPtr) -> ((Ptr CUShort) -> (IO ()))
getRootBone'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
getBone'_ :: (HG3DClassPtr) -> (CUShort -> ((HG3DClassPtr) -> (IO ())))
getBone2'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
hasBone'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CInt) -> (IO ())))
setBindingPose'_ :: (HG3DClassPtr) -> (IO ())
reset'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
createAnimation'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (CFloat -> ((HG3DClassPtr) -> (IO ()))))
getAnimation2'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((HG3DClassPtr) -> (IO ())))
hasAnimation'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> ((Ptr CInt) -> (IO ())))
removeAnimation'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
setAnimationState'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
getNumAnimations'_ :: (HG3DClassPtr) -> ((Ptr CUShort) -> (IO ()))
getAnimation3'_ :: (HG3DClassPtr) -> (CUShort -> ((HG3DClassPtr) -> (IO ())))
getBlendMode'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setBlendMode'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
optimiseAllAnimations'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
addLinkedSkeletonAnimationSource'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (CFloat -> (IO ())))
removeAllLinkedSkeletonAnimationSources'_ :: (HG3DClassPtr) -> (IO ())
getManualBonesDirty'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
hasManualBones'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))

module HGamer3D.Bindings.Ogre.ClassSkeletonManager
new :: IO (HG3DClass)
delete :: HG3DClass -> IO ()
getSingleton :: IO (HG3DClass)
getSingletonPtr :: IO (HG3DClass)
new'_ :: (HG3DClassPtr) -> (IO ())
delete'_ :: (HG3DClassPtr) -> (IO ())
getSingleton'_ :: (HG3DClassPtr) -> (IO ())
getSingletonPtr'_ :: (HG3DClassPtr) -> (IO ())

module HGamer3D.Bindings.Ogre.ClassTextureManager
delete :: HG3DClass -> IO ()
setDefaultNumMipmaps :: HG3DClass -> Int -> IO ()
getDefaultNumMipmaps :: HG3DClass -> IO (Int)
getSingleton :: IO (HG3DClass)
getSingletonPtr :: IO (HG3DClass)
delete'_ :: (HG3DClassPtr) -> (IO ())
setDefaultNumMipmaps'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getDefaultNumMipmaps'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getSingleton'_ :: (HG3DClassPtr) -> (IO ())
getSingletonPtr'_ :: (HG3DClassPtr) -> (IO ())

module HGamer3D.Bindings.Ogre.ClassTimeIndex
new :: Float -> IO (HG3DClass)
hasKeyIndex :: HG3DClass -> IO (Bool)
getTimePos :: HG3DClass -> IO (Float)
getKeyIndex :: HG3DClass -> IO (Int)
new'_ :: CFloat -> ((HG3DClassPtr) -> (IO ()))
hasKeyIndex'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getTimePos'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
getKeyIndex'_ :: (HG3DClassPtr) -> ((Ptr CUInt) -> (IO ()))

module HGamer3D.Bindings.Ogre.ClassVertexAnimationTrack
new :: HG3DClass -> Int -> EnumVertexAnimationType -> IO (HG3DClass)
getAnimationType :: HG3DClass -> IO (EnumVertexAnimationType)
getVertexAnimationIncludesNormals :: HG3DClass -> IO (Bool)
apply :: HG3DClass -> HG3DClass -> Float -> Float -> IO ()
setTargetMode :: HG3DClass -> EnumVertexAnimationTrackTargetMode -> IO ()
getTargetMode :: HG3DClass -> IO (EnumVertexAnimationTrackTargetMode)
hasNonZeroKeyFrames :: HG3DClass -> IO (Bool)
optimise :: HG3DClass -> IO ()
new'_ :: (HG3DClassPtr) -> (CUShort -> (CInt -> ((HG3DClassPtr) -> (IO ()))))
getAnimationType'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getVertexAnimationIncludesNormals'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
apply'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (CFloat -> (CFloat -> (IO ()))))
setTargetMode'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getTargetMode'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
hasNonZeroKeyFrames'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
optimise'_ :: (HG3DClassPtr) -> (IO ())

module HGamer3D.Bindings.Ogre.ClassViewport
new :: HG3DClass -> HG3DClass -> Float -> Float -> Float -> Float -> Int -> IO (HG3DClass)
delete :: HG3DClass -> IO ()
update :: HG3DClass -> IO ()
clear :: HG3DClass -> Int -> Colour -> Float -> Int -> IO ()
getTarget :: HG3DClass -> IO (HG3DClass)
getCamera :: HG3DClass -> IO (HG3DClass)
setCamera :: HG3DClass -> HG3DClass -> IO ()
getZOrder :: HG3DClass -> IO (Int)
getLeft :: HG3DClass -> IO (Float)
getTop :: HG3DClass -> IO (Float)
getWidth :: HG3DClass -> IO (Float)
getHeight :: HG3DClass -> IO (Float)
getActualLeft :: HG3DClass -> IO (Int)
getActualTop :: HG3DClass -> IO (Int)
getActualWidth :: HG3DClass -> IO (Int)
getActualHeight :: HG3DClass -> IO (Int)
setDimensions :: HG3DClass -> Float -> Float -> Float -> Float -> IO ()
setOrientationMode :: HG3DClass -> EnumOrientationMode -> Bool -> IO ()
getOrientationMode :: HG3DClass -> IO (EnumOrientationMode)
setBackgroundColour :: HG3DClass -> Colour -> IO ()
getBackgroundColour :: HG3DClass -> IO (Colour)
setDepthClear :: HG3DClass -> Float -> IO ()
getDepthClear :: HG3DClass -> IO (Float)
setClearEveryFrame :: HG3DClass -> Bool -> Int -> IO ()
getClearEveryFrame :: HG3DClass -> IO (Bool)
getClearBuffers :: HG3DClass -> IO (Int)
setAutoUpdated :: HG3DClass -> Bool -> IO ()
isAutoUpdated :: HG3DClass -> IO (Bool)
setMaterialScheme :: HG3DClass -> String -> IO ()
getMaterialScheme :: HG3DClass -> IO (String)
getActualDimensions :: HG3DClass -> IO (Int, Int, Int, Int)
setOverlaysEnabled :: HG3DClass -> Bool -> IO ()
getOverlaysEnabled :: HG3DClass -> IO (Bool)
setSkiesEnabled :: HG3DClass -> Bool -> IO ()
getSkiesEnabled :: HG3DClass -> IO (Bool)
setShadowsEnabled :: HG3DClass -> Bool -> IO ()
getShadowsEnabled :: HG3DClass -> IO (Bool)
setVisibilityMask :: HG3DClass -> Int -> IO ()
getVisibilityMask :: HG3DClass -> IO (Int)
setRenderQueueInvocationSequenceName :: HG3DClass -> String -> IO ()
getRenderQueueInvocationSequenceName :: HG3DClass -> IO (String)
pointOrientedToScreen :: HG3DClass -> Vec2 -> Int -> IO (Vec2)
pointOrientedToScreen2 :: HG3DClass -> Float -> Float -> Int -> IO (Float, Float)
setDefaultOrientationMode :: EnumOrientationMode -> IO ()
getDefaultOrientationMode :: IO (EnumOrientationMode)
new'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (CFloat -> (CInt -> ((HG3DClassPtr) -> (IO ()))))))))
delete'_ :: (HG3DClassPtr) -> (IO ())
update'_ :: (HG3DClassPtr) -> (IO ())
clear'_ :: (HG3DClassPtr) -> (CUInt -> ((ColourPtr) -> (CFloat -> (CUShort -> (IO ())))))
getTarget'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
getCamera'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
setCamera'_ :: (HG3DClassPtr) -> ((HG3DClassPtr) -> (IO ()))
getZOrder'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getLeft'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
getTop'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
getWidth'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
getHeight'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
getActualLeft'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getActualTop'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getActualWidth'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getActualHeight'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setDimensions'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (CFloat -> (CFloat -> (IO ())))))
setOrientationMode'_ :: (HG3DClassPtr) -> (CInt -> (CInt -> (IO ())))
getOrientationMode'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setBackgroundColour'_ :: (HG3DClassPtr) -> ((ColourPtr) -> (IO ()))
getBackgroundColour'_ :: (HG3DClassPtr) -> ((ColourPtr) -> (IO ()))
setDepthClear'_ :: (HG3DClassPtr) -> (CFloat -> (IO ()))
getDepthClear'_ :: (HG3DClassPtr) -> ((Ptr CFloat) -> (IO ()))
setClearEveryFrame'_ :: (HG3DClassPtr) -> (CInt -> (CUInt -> (IO ())))
getClearEveryFrame'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
getClearBuffers'_ :: (HG3DClassPtr) -> ((Ptr CUInt) -> (IO ()))
setAutoUpdated'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
isAutoUpdated'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setMaterialScheme'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
getMaterialScheme'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
getActualDimensions'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> ((Ptr CInt) -> ((Ptr CInt) -> ((Ptr CInt) -> (IO ())))))
setOverlaysEnabled'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getOverlaysEnabled'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setSkiesEnabled'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getSkiesEnabled'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setShadowsEnabled'_ :: (HG3DClassPtr) -> (CInt -> (IO ()))
getShadowsEnabled'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> (IO ()))
setVisibilityMask'_ :: (HG3DClassPtr) -> (CUInt -> (IO ()))
getVisibilityMask'_ :: (HG3DClassPtr) -> ((Ptr CUInt) -> (IO ()))
setRenderQueueInvocationSequenceName'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
getRenderQueueInvocationSequenceName'_ :: (HG3DClassPtr) -> ((Ptr CChar) -> (IO ()))
pointOrientedToScreen'_ :: (HG3DClassPtr) -> ((Vec2Ptr) -> (CInt -> ((Vec2Ptr) -> (IO ()))))
pointOrientedToScreen2'_ :: (HG3DClassPtr) -> (CFloat -> (CFloat -> (CInt -> ((Ptr CFloat) -> ((Ptr CFloat) -> (IO ()))))))
setDefaultOrientationMode'_ :: CInt -> (IO ())
getDefaultOrientationMode'_ :: (Ptr CInt) -> (IO ())

module HGamer3D.Bindings.Ogre.ClassWindowEventUtilities
messagePump :: IO ()
messagePump'_ :: IO ()

module HGamer3D.Bindings.Ogre.ClassWindowUtilsHG3D
getWindowTopLeft :: HG3DClass -> IO (Int, Int, Int, Int)
showCursor :: Bool -> IO ()
getWindowTopLeft'_ :: (HG3DClassPtr) -> ((Ptr CInt) -> ((Ptr CInt) -> ((Ptr CInt) -> ((Ptr CInt) -> (IO ())))))
showCursor'_ :: CInt -> (IO ())
