-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Library for reading fasta sequence files
--   
--   Library for reading fasta sequence files
@package biofasta
@version 0.0.3


-- | This module incorporates functionality for reading and writing
--   sequence data in the Fasta format. Each sequence consists of a header
--   (with a <a>&gt;</a> prefix) and a set of lines containing the sequence
--   data..
module Bio.Sequence.Fasta
data Sequence
Seq :: SeqLabel -> SeqData -> (Maybe QualData) -> Sequence

-- | Lazily read sequences from a FASTA-formatted file
readFasta :: FilePath -> IO [Sequence]

-- | Write sequences to a FASTA-formatted file. Line length is 60.
writeFasta :: FilePath -> [Sequence] -> IO ()

-- | Lazily read sequence from handle
hReadFasta :: Handle -> IO [Sequence]

-- | Write sequences in FASTA format to a handle.
hWriteFasta :: Handle -> [Sequence] -> IO ()
countSeqs :: FilePath -> IO Int

-- | Convert a list of FASTA-formatted lines into a list of sequences.
--   Blank lines are ignored. Comment lines start with <a>#</a> are allowed
--   between sequences (and ignored). Lines starting with <a>&gt;</a>
--   initiate a new sequence.
mkSeqs :: [ByteString] -> [Sequence]
toStr :: SeqData -> String
seqid :: BioSeq s => s -> SeqLabel
seqheader :: BioSeq s => s -> SeqLabel
seqdata :: BioSeq s => s -> SeqData
seqlength :: BioSeq s => s -> Offset
instance Show Sequence
instance Eq Sequence
instance BioSeq Sequence
