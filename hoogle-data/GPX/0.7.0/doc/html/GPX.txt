-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Parse GPX files
--   
--   Parse GPS Exchange (GPX) files using HXT into data structures.
@package GPX
@version 0.7.0

module Data.Geo.GPX.Lens.CreatorL
class CreatorL a
creatorL :: CreatorL a => Lens a String

module Data.Geo.GPX.Lens.VersionL
class VersionL a
versionL :: VersionL a => Lens a String

module Data.Geo.GPX.Lens.KeywordsL
class KeywordsL a
keywordsL :: KeywordsL a => Lens a (Maybe String)

module Data.Geo.GPX.Lens.NumberL
class NumberL a
numberL :: NumberL a => Lens a (Maybe Int)

module Data.Geo.GPX.Lens.AgeofdgpsdataL
class AgeofdgpsdataL a
ageofdgpsdataL :: AgeofdgpsdataL a => Lens a (Maybe Double)

module Data.Geo.GPX.Lens.PdopL
class PdopL a
pdopL :: PdopL a => Lens a (Maybe Double)

module Data.Geo.GPX.Lens.VdopL
class VdopL a
vdopL :: VdopL a => Lens a (Maybe Double)

module Data.Geo.GPX.Lens.HdopL
class HdopL a
hdopL :: HdopL a => Lens a (Maybe Double)

module Data.Geo.GPX.Lens.SatL
class SatL a
satL :: SatL a => Lens a (Maybe Int)

module Data.Geo.GPX.Lens.SymL
class SymL a
symL :: SymL a => Lens a (Maybe String)

module Data.Geo.GPX.Lens.SrcL
class SrcL a
srcL :: SrcL a => Lens a (Maybe String)

module Data.Geo.GPX.Lens.DescL
class DescL a
descL :: DescL a => Lens a (Maybe String)

module Data.Geo.GPX.Lens.CmtL
class CmtL a
cmtL :: CmtL a => Lens a (Maybe String)

module Data.Geo.GPX.Lens.GeoidheightL
class GeoidheightL a
geoidheightL :: GeoidheightL a => Lens a (Maybe Double)

module Data.Geo.GPX.Lens.LicenseL
class LicenseL a
licenseL :: LicenseL a => Lens a (Maybe String)

module Data.Geo.GPX.Lens.YearL
class YearL a
yearL :: YearL a => Lens a (Maybe String)

module Data.Geo.GPX.Lens.AuthorL
class AuthorL a b | a -> b
authorL :: AuthorL a b => Lens a b

module Data.Geo.GPX.Lens.NameL
class NameL a
nameL :: NameL a => Lens a (Maybe String)

module Data.Geo.GPX.Lens.TypeL
class TypeL a
typeL :: TypeL a => Lens a (Maybe String)

module Data.Geo.GPX.Lens.TextL
class TextL a
textL :: TextL a => Lens a (Maybe String)

module Data.Geo.GPX.Lens.HrefL
class HrefL a
hrefL :: HrefL a => Lens a String

module Data.Geo.GPX.Lens.DomainL
class DomainL a
domainL :: DomainL a => Lens a String

module Data.Geo.GPX.Lens.IdL
class IdL a
idL :: IdL a => Lens a String

module Data.Geo.GPX.Lens.TimeL
class TimeL a
timeL :: TimeL a => Lens a (Maybe DateTime)

module Data.Geo.GPX.Lens.EleL
class EleL a
eleL :: EleL a => Lens a (Maybe Double)


-- | Complex Type: <tt>copyrightType</tt>
--   <a>http://www.topografix.com/GPX/1/1/#type_copyrightType</a>
module Data.Geo.GPX.Type.Copyright
data Copyright
copyright :: String -> Maybe String -> Maybe String -> Copyright
instance Eq Copyright
instance Ord Copyright
instance XmlPickler Copyright
instance LicenseL Copyright
instance YearL Copyright
instance AuthorL Copyright String

module Data.Geo.GPX.Lens.CopyrightL
class CopyrightL a
copyrightL :: CopyrightL a => Lens a (Maybe Copyright)


-- | Complex Type: <tt>linkType</tt>
--   <a>http://www.topografix.com/GPX/1/1/#type_linkType</a>
module Data.Geo.GPX.Type.Link
data Link
link :: String -> Maybe String -> Maybe String -> Link
instance Eq Link
instance Ord Link
instance XmlPickler Link
instance TypeL Link
instance TextL Link
instance HrefL Link

module Data.Geo.GPX.Lens.LinkL
class LinkL a
linkL :: LinkL a => Lens a (Maybe Link)

module Data.Geo.GPX.Lens.LinksL
class LinksL a
linksL :: LinksL a => Lens a [Link]


-- | Complex Type: <tt>emailType</tt>
--   <a>http://www.topografix.com/GPX/1/1/#type_emailType</a>
module Data.Geo.GPX.Type.Email
data Email
email :: String -> String -> Email
instance Eq Email
instance Ord Email
instance XmlPickler Email
instance DomainL Email
instance IdL Email

module Data.Geo.GPX.Lens.EmailL
class EmailL a
emailL :: EmailL a => Lens a (Maybe Email)


-- | Complex Type: <tt>personType</tt>
--   <a>http://www.topografix.com/GPX/1/1/#type_personType</a>
module Data.Geo.GPX.Type.Person
data Person
person :: Maybe String -> Maybe Email -> Maybe Link -> Person
instance Eq Person
instance Ord Person
instance XmlPickler Person
instance LinkL Person
instance EmailL Person
instance NameL Person


-- | Complex Type: <tt>extensionsType</tt>
--   <a>http://www.topografix.com/GPX/1/1/#type_extensionsType</a>
module Data.Geo.GPX.Type.Extensions
data Extensions
extensions :: XmlTrees -> Extensions
runExtensions :: Extensions -> XmlTrees
instance Eq Extensions
instance Show Extensions
instance Newtype Extensions XmlTrees
instance XmlPickler Extensions

module Data.Geo.GPX.Lens.ExtensionsL
class ExtensionsL a
extensionsL :: ExtensionsL a => Lens a (Maybe Extensions)


-- | Simple Type: <tt>latitudeType</tt>
--   <a>http://www.topografix.com/GPX/1/1/#type_latitudeType</a>
module Data.Geo.GPX.Type.Latitude
data Latitude
latitude :: Double -> Latitude
runLatitude :: Latitude -> Double
instance Eq Latitude
instance Ord Latitude
instance Enum Latitude
instance Num Latitude
instance Fractional Latitude
instance Floating Latitude
instance Real Latitude
instance RealFrac Latitude
instance RealFloat Latitude
instance Newtype Latitude Double
instance XmlPickler Latitude
instance Show Latitude

module Data.Geo.GPX.Lens.MinlatL
class MinlatL a
minlatL :: MinlatL a => Lens a Latitude

module Data.Geo.GPX.Lens.MaxlatL
class MaxlatL a
maxlatL :: MaxlatL a => Lens a Latitude

module Data.Geo.GPX.Lens.LatL
class LatL a
latL :: LatL a => Lens a Latitude


-- | Simple Type: <tt>latitudeType</tt>
--   <a>http://www.topografix.com/GPX/1/1/#type_latitudeType</a>
module Data.Geo.GPX.Type.Longitude
data Longitude
longitude :: Double -> Longitude
runLongitude :: Longitude -> Double
instance Eq Longitude
instance Ord Longitude
instance Enum Longitude
instance Num Longitude
instance Fractional Longitude
instance Floating Longitude
instance Real Longitude
instance RealFrac Longitude
instance RealFloat Longitude
instance Newtype Longitude Double
instance XmlPickler Longitude
instance Show Longitude

module Data.Geo.GPX.Lens.MinlonL
class MinlonL a
minlonL :: MinlonL a => Lens a Longitude

module Data.Geo.GPX.Lens.MaxlonL
class MaxlonL a
maxlonL :: MaxlonL a => Lens a Longitude


-- | Complex Type: <tt>boundsType</tt>
--   <a>http://www.topografix.com/GPX/1/1/#type_boundsType</a>
module Data.Geo.GPX.Type.Bounds
data Bounds
bounds :: (Latitude, Longitude) -> (Latitude, Longitude) -> Bounds
instance Eq Bounds
instance Ord Bounds
instance XmlPickler Bounds
instance MaxlonL Bounds
instance MaxlatL Bounds
instance MinlonL Bounds
instance MinlatL Bounds

module Data.Geo.GPX.Lens.BoundsL
class BoundsL a
boundsL :: BoundsL a => Lens a (Maybe Bounds)


-- | Complex Type: <tt>metadataType</tt>
--   <a>http://www.topografix.com/GPX/1/1/#type_metadataType</a>
module Data.Geo.GPX.Type.Metadata
data Metadata
metadata :: Maybe String -> Maybe String -> Maybe Person -> Maybe Copyright -> [Link] -> Maybe DateTime -> Maybe String -> Maybe Bounds -> Maybe Extensions -> Metadata
instance Eq Metadata
instance XmlPickler Metadata
instance ExtensionsL Metadata
instance BoundsL Metadata
instance KeywordsL Metadata
instance TimeL Metadata
instance LinksL Metadata
instance CopyrightL Metadata
instance AuthorL Metadata (Maybe Person)
instance DescL Metadata
instance NameL Metadata

module Data.Geo.GPX.Lens.MetadataL
class MetadataL a
metadataL :: MetadataL a => Lens a (Maybe Metadata)

module Data.Geo.GPX.Lens.LonL
class LonL a
lonL :: LonL a => Lens a Longitude


-- | Complex Type: <tt>ptType</tt>
--   <a>http://www.topografix.com/GPX/1/1/#type_ptType</a>
module Data.Geo.GPX.Type.Pt
data Pt
pt :: Latitude -> Longitude -> Maybe Double -> Maybe DateTime -> Pt
instance Eq Pt
instance Ord Pt
instance XmlPickler Pt
instance TimeL Pt
instance EleL Pt
instance LonL Pt
instance LatL Pt


-- | Complex Type: <tt>ptsegType</tt>
--   <a>http://www.topografix.com/GPX/1/1/#type_ptsegType</a>
module Data.Geo.GPX.Type.Ptseg
data Ptseg
ptseg :: [Pt] -> Ptseg
runPtseg :: Ptseg -> [Pt]
instance Eq Ptseg
instance Ord Ptseg
instance Newtype Ptseg [Pt]
instance XmlPickler Ptseg

module Data.Geo.GPX.Lens.PtsL
class PtsL a
ptsL :: PtsL a => Lens a [Pt]


-- | Simple Type: <tt>degreesType</tt>
--   <a>http://www.topografix.com/GPX/1/1/#type_degreesType</a>
module Data.Geo.GPX.Type.Degrees
data Degrees
degrees :: Double -> Degrees
runDegrees :: Degrees -> Double
instance Eq Degrees
instance Ord Degrees
instance Show Degrees
instance Newtype Degrees Double
instance XmlPickler Degrees

module Data.Geo.GPX.Lens.MagvarL
class MagvarL a
magvarL :: MagvarL a => Lens a (Maybe Degrees)


-- | Simple Type: <tt>fixType</tt>
--   <a>http://www.topografix.com/GPX/1/1/#type_fixType</a>
module Data.Geo.GPX.Type.Fix
data Fix

-- | The catamorphism for <tt>Fix</tt>.
foldFix :: a -> a -> a -> a -> a -> Fix -> a

-- | Construct a <tt>Fix</tt> with a value of <tt>none</tt>.
none :: Fix

-- | Construct a <tt>Fix</tt> with a value of <tt>2d</tt>.
twod :: Fix

-- | Construct a <tt>Fix</tt> with a value of <tt>3d</tt>.
threed :: Fix

-- | Construct a <tt>Fix</tt> with a value of <tt>dgps</tt>.
dgps :: Fix

-- | Construct a <tt>Fix</tt> with a value of <tt>pps</tt>.
pps :: Fix

-- | Construct a <tt>Fix</tt> using a string with a value of
--   <tt>[<a>none</a>, <a>2d</a>, <a>3d</a>, <a>dgps</a>, <a>pps</a>]</tt>.
fix :: String -> Maybe Fix
instance Eq Fix
instance Ord Fix
instance Show Fix
instance Enum Fix
instance XmlPickler Fix

module Data.Geo.GPX.Lens.FixL
class FixL a
fixL :: FixL a => Lens a (Maybe Fix)


-- | Simple Type: <tt>dgpsStationType</tt>
--   <a>http://www.topografix.com/GPX/1/1/#type_dgpsStationType</a>
module Data.Geo.GPX.Type.DgpsStation
data DgpsStation
dgpsStation :: Int -> Maybe DgpsStation
runDgpsStation :: DgpsStation -> Int
instance Eq DgpsStation
instance Ord DgpsStation
instance XmlPickler DgpsStation

module Data.Geo.GPX.Lens.DgpsidL
class DgpsidL a
dgpsidL :: DgpsidL a => Lens a (Maybe DgpsStation)


-- | Complex Type: <tt>wptType</tt>
--   <a>http://www.topografix.com/GPX/1/1/#type_wptType</a>
module Data.Geo.GPX.Type.Wpt
data Wpt
wpt :: Latitude -> Longitude -> Maybe Double -> Maybe DateTime -> Maybe Degrees -> Maybe Double -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> [Link] -> Maybe String -> Maybe String -> Maybe Fix -> Maybe Int -> Maybe Double -> Maybe Double -> Maybe Double -> Maybe Double -> Maybe DgpsStation -> Maybe Extensions -> Wpt

-- | A waypoint with only a latitude and longitude.
wpt' :: Latitude -> Longitude -> Wpt
instance Eq Wpt
instance XmlPickler Wpt
instance ExtensionsL Wpt
instance DgpsidL Wpt
instance AgeofdgpsdataL Wpt
instance PdopL Wpt
instance VdopL Wpt
instance HdopL Wpt
instance SatL Wpt
instance FixL Wpt
instance TypeL Wpt
instance SymL Wpt
instance LinksL Wpt
instance SrcL Wpt
instance DescL Wpt
instance CmtL Wpt
instance NameL Wpt
instance GeoidheightL Wpt
instance MagvarL Wpt
instance TimeL Wpt
instance EleL Wpt
instance LonL Wpt
instance LatL Wpt

module Data.Geo.GPX.Lens.TrkptsL
class TrkptsL a
trkptsL :: TrkptsL a => Lens a [Wpt]


-- | Complex Type: <tt>trksegType</tt>
--   <a>http://www.topografix.com/GPX/1/1/#type_trksegType</a>
module Data.Geo.GPX.Type.Trkseg
data Trkseg
trkseg :: [Wpt] -> Maybe Extensions -> Trkseg
instance Eq Trkseg
instance XmlPickler Trkseg
instance ExtensionsL Trkseg
instance TrkptsL Trkseg

module Data.Geo.GPX.Lens.TrksegsL
class TrksegsL a
trksegsL :: TrksegsL a => Lens a [Trkseg]


-- | Complex Type: <tt>trkType</tt>
--   <a>http://www.topografix.com/GPX/1/1/#type_trkType</a>
module Data.Geo.GPX.Type.Trk
data Trk
trk :: Maybe String -> Maybe String -> Maybe String -> Maybe String -> [Link] -> Maybe Int -> Maybe String -> Maybe Extensions -> [Trkseg] -> Trk
instance Eq Trk
instance XmlPickler Trk
instance TrksegsL Trk
instance ExtensionsL Trk
instance TypeL Trk
instance NumberL Trk
instance LinksL Trk
instance SrcL Trk
instance DescL Trk
instance CmtL Trk
instance NameL Trk

module Data.Geo.GPX.Lens.TrksL
class TrksL a
trksL :: TrksL a => Lens a [Trk]

module Data.Geo.GPX.Lens.RteptsL
class RteptsL a
rteptsL :: RteptsL a => Lens a [Wpt]


-- | Complex Type: <tt>rteType</tt>
--   <a>http://www.topografix.com/GPX/1/1/#type_rteType</a>
module Data.Geo.GPX.Type.Rte
data Rte
rte :: Maybe String -> Maybe String -> Maybe String -> Maybe String -> [Link] -> Maybe Int -> Maybe String -> Maybe Extensions -> [Wpt] -> Rte
instance Eq Rte
instance XmlPickler Rte
instance RteptsL Rte
instance ExtensionsL Rte
instance TypeL Rte
instance NumberL Rte
instance LinksL Rte
instance SrcL Rte
instance DescL Rte
instance CmtL Rte
instance NameL Rte

module Data.Geo.GPX.Lens.RtesL
class RtesL a
rtesL :: RtesL a => Lens a [Rte]

module Data.Geo.GPX.Lens.WptsL
class WptsL a
wptsL :: WptsL a => Lens a [Wpt]


-- | Complex Type: <tt>gpxType</tt>
--   <a>http://www.topografix.com/GPX/1/1/#type_gpxType</a>
module Data.Geo.GPX.Type.Gpx
data Gpx
class GpxP g
gpx :: GpxP g => String -> String -> Maybe Metadata -> [Wpt] -> [Rte] -> [Trk] -> Maybe Extensions -> g
instance Eq Gpx
instance XmlPickler Gpx
instance ExtensionsL Gpx
instance TrksL Gpx
instance RtesL Gpx
instance WptsL Gpx
instance MetadataL Gpx
instance CreatorL Gpx
instance VersionL Gpx
instance GpxP Gpx

module Data.Geo.GPX.Lens


-- | GPX 1.1 Schema <a>http://www.topografix.com/GPX/1/1/</a>
module Data.Geo.GPX.Type


-- | GPX 1.1 Schema <a>http://www.topografix.com/GPX/1/1/</a>
module Data.Geo.GPX

-- | Top-level GPX data type with the root XML element applied.
data GPX
instance Eq GPX
instance ExtensionsL GPX
instance TrksL GPX
instance RtesL GPX
instance WptsL GPX
instance MetadataL GPX
instance CreatorL GPX
instance VersionL GPX
instance Newtype GPX Gpx
instance GpxP GPX
instance XmlPickler GPX
