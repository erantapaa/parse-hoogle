-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Test your 'Aeson' 'Serialize' and 'Binary' instances for stability over time
--   
--   When I am programming haskell I write a lot of getter setter
--   serialization tests for aeson, binary, cereal These libraries are
--   often associated with state. This library standardizes those tests
@package serial-test-generators
@version 0.1.3


module Test.Serial
runAesonSerializationTest :: (ToJSON a, FromJSON a) => a -> FilePath -> IO (Either TestError a)
runBinarySerializationTest :: Binary a => a -> FilePath -> IO (Either TestError a)
runCerealSerializationTest :: Serialize a => a -> FilePath -> IO (Either TestError a)
data TestError
NoFileFound :: TestError
AesonError :: String -> TestError
BinaryError :: String -> TestError
CerealError :: String -> TestError
instance Generic TestError
instance Read TestError
instance Show TestError
instance Eq TestError
instance Ord TestError
instance Generic (MockAesonInference a)
instance Generic (MockBinaryInference a)
instance Generic (MockCerealInference a)
instance Datatype D1TestError
instance Constructor C1_0TestError
instance Constructor C1_1TestError
instance Constructor C1_2TestError
instance Constructor C1_3TestError
instance Datatype D1MockAesonInference
instance Constructor C1_0MockAesonInference
instance Datatype D1MockBinaryInference
instance Constructor C1_0MockBinaryInference
instance Datatype D1MockCerealInference
instance Constructor C1_0MockCerealInference
instance Serialize a => Serialize (MockCerealInference a)
instance Binary a => Binary (MockBinaryInference a)
instance ToJSON a => ToJSON (MockAesonInference a)
instance ToJSON TestError
