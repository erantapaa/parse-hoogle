-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Adding support for asynchronous updates ("AJAX") with heist
--   
--   This package provides six splices and some accompanying javascript to
--   allow declarative ajax programming that involves no javascript
--   programming.
@package heist-async
@version 0.5.0.0

module Heist.Splices.Async.TH

-- | loadJS: this template haskell function put's the contents of the
--   javascript files into fileContents, so that it can be included with
--   activateAsync
loadJS :: Q [Dec]

module Heist.Splices.Async

-- | Provides the following splices:
--   
--   <pre>
--   &lt;a-async href="some/url" data-loading-div="#some-div"&gt;
--   </pre>
--   
--   where data-loading-div is optional, it causes the specified div to
--   have it's contents replaced with &lt;div class=<a>loading</a>/&gt;
--   when the link is clicked.
--   
--   <pre>
--   &lt;form-async&gt;
--   </pre>
--   
--   Note that the following two are not interchangeable, and cannot
--   replace one another.
--   
--   <pre>
--   &lt;div-async name="some-unique-identifier"&gt; 
--   &lt;div-async-append name="some-unique-identifier"&gt; 
--   </pre>
--   
--   <pre>
--   &lt;redirect-async url="target/path"/&gt;
--   </pre>
--   
--   <pre>
--   &lt;activate-async/&gt; 
--   </pre>
heistAsyncSplices :: Monad m => [(Text, Splice m)]

-- | a link that loads it's results asynchronously and replaces parts of
--   the page based on the contents. A normal anchor tag in all ways.
aAsync :: Monad m => Splice m

-- | a form that submits asynchronously and replaces parts of the page with
--   the results. A normal form tag otherwise.
formAsync :: Monad m => Splice m

-- | a div that can be replaced or replace content on the page. It takes a
--   <a>name</a> attribute that is it's unique identifier. When sending
--   back content to replace, any div-asyncs present will replace existing
--   div-asyncs on the page (identified by the name attribute)
divAsync :: Monad m => Splice m

-- | a special div-async that instead of replacing the corresponding one on
--   the page, it appends it's contents inside the existing
--   div-async-append. Note: div-async's and div-async-appends are not
--   interchangeable. This is so that it is easy to see what is going to
--   happen from looking at the templates. If you need this sort of
--   behavior, wrap you div-async-append inside a div-async.
divAppendAsync :: Monad m => Splice m

-- | this tag allows you to cause a client-side redirect. This is necessary
--   because if you do a regular redirect, it will be followed by the
--   browser and the result (the new page) will be handed back as if it
--   were the page fragment response. It takes a <a>url</a> attribute that
--   specifies where to redirect to.
redirectAsync :: Monad m => Splice m

-- | this is a convenience tag that will include all the necessary
--   javascript. Feel free to copy the files yourself from tho js directory
--   - by having separate files, they can be cached, which will mean less
--   network transfer. Of course, the intention with this tag is you can
--   get this running as quickly as possible. It can occur any number of
--   times on the page, but will only actually include the javascript the
--   first time.
activateAsync :: Monad m => Splice m
