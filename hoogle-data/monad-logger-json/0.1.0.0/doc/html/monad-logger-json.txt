-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | JSON-friendly Logging APIs
--   
@package monad-logger-json
@version 0.1.0.0


-- | Template Haskell logging functions to compliment Control.Monad.Logger.
--   These functions handle encoding ToJSON types to the log.
--   
--   Example: ``` import Control.Monad.IO.Class ( MonadIO(liftIO) ) import
--   Control.Monad.Logger ( runStdoutLoggingT ) import
--   Control.Monad.Logger.JSON ( logInfoJ, logDebugJ ) import Data.Aeson.TH
--   ( defaultOptions, deriveJSON ) import Data.Time.Clock ( UTCTime,
--   getCurrentTime )
--   
--   data Message = Message { time :: UTCTime }
--   
--   $( deriveJSON defaultOptions ''Message )
--   
--   main :: IO () main = runStdoutLoggingT (do now &lt;- liftIO
--   getCurrentTime $logDebugJ (Message now) $logInfoJ "Hello world") ``` |
module Control.Monad.Logger.JSON
logDebugJ :: Q Exp
logInfoJ :: Q Exp
logWarnJ :: Q Exp
logErrorJ :: Q Exp
logOtherJ :: Text -> Q Exp
