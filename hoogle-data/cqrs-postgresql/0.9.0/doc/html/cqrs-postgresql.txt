-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | PostgreSQL backend for the cqrs package.
--   
--   PostgreSQL backend for the cqrs package.
@package cqrs-postgresql
@version 0.9.0


-- | Implementation of a PostgreSQL-based event store.
module Data.CQRS.EventStore.Backend.PostgreSQLUtils

-- | Execute a query with no result.
run :: Connection -> ByteString -> [SqlValue] -> IO ()

-- | Source for traversing all the results of a PostgreSQL query.
sourceQuery :: Connection -> ByteString -> [SqlValue] -> Source (ResourceT IO) [SqlValue]

-- | Execute an IO action with an active transaction.
withTransaction :: Connection -> IO a -> IO a

-- | Known field types.
data SqlValue
SqlByteArray :: (Maybe ByteString) -> SqlValue
SqlBlankPaddedString :: (Maybe ByteString) -> SqlValue
SqlBool :: (Maybe Bool) -> SqlValue
SqlInt16 :: (Maybe Int16) -> SqlValue
SqlInt32 :: (Maybe Int32) -> SqlValue
SqlInt64 :: (Maybe Int64) -> SqlValue
SqlFloating :: (Maybe Double) -> SqlValue
SqlVarChar :: (Maybe Text) -> SqlValue
SqlText :: (Maybe Text) -> SqlValue
SqlDate :: (Maybe Day) -> SqlValue
Unmatched :: (Oid, Maybe ByteString) -> SqlValue
instance Eq SqlValue
instance Show SqlValue


-- | Implementation of a PostgreSQL-based backend pool.
module Data.CQRS.EventStore.Backend.PostgreSQL

-- | Create a pool of PostgreSQL-based event store backends.
createBackendPool :: Int -> ByteString -> IO (Pool PostgreSQLEventStoreBackend)
instance EventStoreBackend PostgreSQLEventStoreBackend
