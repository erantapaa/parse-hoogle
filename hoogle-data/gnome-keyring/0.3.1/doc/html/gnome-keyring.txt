-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Bindings for libgnome-keyring
--   
@package gnome-keyring
@version 0.3.1


-- | The GNOME Keyring is a service for securely storing per-user secret
--   information, such as passwords and encryption keys. This library is a
--   binding to the <tt>libgnome-keyring</tt> C library.
--   
--   Documentation for the original library is available at
--   <a>http://library.gnome.org/devel/gnome-keyring/stable/</a>
module Gnome.Keyring

-- | Check whether the client can communicate with the GNOME Keyring
--   service.
available :: IO ((Bool))
data ItemID
data ItemType
ItemGenericSecret :: ItemType
ItemNetworkPassword :: ItemType
ItemNote :: ItemType
ItemChainedKeyringPassword :: ItemType
ItemEncryptionKeyPassword :: ItemType
ItemPublicKeyStorage :: ItemType
ItemApplicationSecret :: ItemType

-- | Create a new item in a keyring.
--   
--   The user may have been prompted to unlock necessary keyrings. If
--   <a>defaultKeyring</a> is specified as the keyring and no default
--   keyring exists, the user will be prompted to create a new keyring.
--   
--   If an existing item should be updated, the user may be prompted for
--   access to the existing item.
--   
--   Whether a new item is created or not, the ID of the item will be
--   returned.
createItem :: Keyring -> ItemType -> String -> [Attribute] -> String -> Bool -> Operation ItemID

-- | Delete an item in a keyring.
--   
--   The user may be prompted if the calling application doesn't have
--   necessary access to delete the item.
deleteItem :: Keyring -> ItemID -> Operation ()

-- | Get a list of all the IDs for items in the keyring. All items which
--   are not flagged as <a>ItemApplicationSecret</a> are included in the
--   list. This includes items that the calling application may not (yet)
--   have access to.
listItemIDs :: Keyring -> Operation [ItemID]
data Item

-- | Get information about an item and its secret.
--   
--   The user may be prompted if the calling application doesn't have
--   necessary access to read the item with its secret.
getItem :: Keyring -> Bool -> ItemID -> Operation Item

-- | Set information on an item, like its display name, secret, etc.
--   
--   Only the fields in the Item which are not <a>Nothing</a> or non-zero
--   will be set on the item.
setItem :: Keyring -> ItemID -> Item -> Operation ()

-- | Get or set the item's type.
itemType :: Item -> ItemType

-- | Get or set the item's secret.
itemSecret :: Item -> Maybe String

-- | Get or set the item's display name.
itemDisplayName :: Item -> Maybe String

-- | Get when the item was last modified.
itemModified :: Item -> UTCTime

-- | Get when the item was created.
itemCreated :: Item -> UTCTime

-- | Attributes allow various other pieces of information to be associated
--   with an item. These can also be used to search for relevant items. Use
--   <a>getItemAttributes</a> or <a>setItemAttributes</a> to manipulate
--   attributes in the keyring.
--   
--   Each attribute is either Unicode text, or an unsigned 32-bit integer.
data Attribute
TextAttribute :: String -> String -> Attribute
WordAttribute :: String -> Word32 -> Attribute
attributeName :: Attribute -> String

-- | Get all the attributes for an item.
getItemAttributes :: Keyring -> ItemID -> Operation [Attribute]

-- | Set all the attributes for an item. These will replace any existing
--   attributes.
setItemAttributes :: Keyring -> ItemID -> [Attribute] -> Operation ()

-- | Each item has an access control list, which specifies which
--   applications may read, write or delete an item. The read access
--   applies only to reading the secret. All applications can read other
--   parts of the item. ACLs are accessed and changed with
--   <a>getItemAccess</a> and <a>setItemAccess</a>.
data Access
Access :: Maybe String -> Maybe String -> [AccessType] -> Access
accessName :: Access -> Maybe String
accessPath :: Access -> Maybe String
accessType :: Access -> [AccessType]
data AccessType
AccessRead :: AccessType
AccessWrite :: AccessType
AccessRemove :: AccessType

-- | Get the access control list for an item.
getItemAccess :: Keyring -> ItemID -> Operation [Access]

-- | Set the full access control list on an item. This replaces any
--   previous ACL set on the item.
setItemAccess :: Keyring -> ItemID -> [Access] -> Operation ()

-- | Will grant the application access rights to the item, provided callee
--   has write access to said item.
--   
--   This is similar to performing <a>getItemAccess</a> and
--   <a>setItemAccess</a> with appropriate parameters.
grantItemAccess :: Keyring -> String -> String -> ItemID -> [AccessType] -> Operation ()
data FoundItem

-- | Get which keyring the item was found in.
foundItemKeyring :: FoundItem -> Keyring

-- | Get the found item's ID.
foundItemID :: FoundItem -> ItemID

-- | Get the found item's attributes.
foundItemAttributes :: FoundItem -> [Attribute]

-- | Get the found item's secret.
foundItemSecret :: FoundItem -> String

-- | Searches through all keyrings for items that match the attributes. The
--   matches are for exact equality.
--   
--   The user may be prompted to unlock necessary keyrings, and will be
--   prompted for access to the items if needed.
--   
--   Returns an empty list if no items were found.
findItems :: ItemType -> [Attribute] -> Operation [FoundItem]

-- | GNOME Keyring manages multiple keyrings. Each keyring can store one or
--   more items, containing secrets.
--   
--   Each keyring can be in a locked or unlocked state. A password must be
--   specified, either by the user or the calling application, to unlock
--   the keyring.
data Keyring
defaultKeyring :: Keyring
sessionKeyring :: Keyring
keyring :: String -> Keyring

-- | Get the name of the default keyring. If no keyring is the default,
--   returns <tt>Nothing</tt>.
getDefaultKeyring :: Operation (Maybe String)

-- | Change the default keyring.
setDefaultKeyring :: String -> Operation ()

-- | Get a list of keyring names. If no keyrings exist, an empty list will
--   be returned.
listKeyringNames :: Operation [String]

-- | Create a new keyring with the specified name. In most cases,
--   <tt>Nothing</tt> will be passed as the password, which will prompt the
--   user to enter a password of their choice.
createKeyring :: String -> Maybe String -> Operation ()

-- | Delete a keyring. Once a keyring is deleted, there is no mechanism for
--   recovery of its contents.
deleteKeyring :: String -> Operation ()

-- | Change the password for a keyring. In most cases, <tt>Nothing</tt>
--   would be specified for both the original and new passwords to allow
--   the user to type both.
changeKeyringPassword :: String -> Maybe String -> Maybe String -> Operation ()

-- | Lock a keyring, so that its contents may not be accessed without first
--   supplying a password.
--   
--   Most keyring operations involving items require that the keyring first
--   be unlocked. One exception is <a>findItems</a> and related
--   computations.
lockKeyring :: Keyring -> Operation ()

-- | Unlock a keyring, so that its contents may be accessed. In most cases,
--   <a>Nothing</a> will be specified as the password, which will prompt
--   the user to enter the correct password.
--   
--   Most keyring operations involving items require that the keyring first
--   be unlocked. One exception is <a>findItems</a> and related
--   computations.
unlockKeyring :: Keyring -> Maybe String -> Operation ()

-- | Lock all the keyrings, so that their contents may not be accessed
--   without first unlocking them with a password.
lockAll :: Operation ()
data KeyringInfo

-- | Get or set whether the keyring should be locked when idle.
keyringLockOnIdle :: KeyringInfo -> Bool

-- | Get or set the keyring lock timeout.
keyringLockTimeout :: KeyringInfo -> Word32

-- | Get when the keyring was last modified.
keyringModified :: KeyringInfo -> UTCTime

-- | Get when the keyring was created.
keyringCreated :: KeyringInfo -> UTCTime

-- | Get whether the keyring is locked.
keyringIsLocked :: KeyringInfo -> Bool

-- | Get information about the keyring.
getKeyringInfo :: Keyring -> Operation KeyringInfo

-- | Set flags and info for the keyring. The only fields in the
--   <a>KeyringInfo</a> which may be modified are <a>keyringLockOnIdle</a>
--   and <a>keyringLockTimeout</a>.
setKeyringInfo :: Keyring -> KeyringInfo -> Operation ()

-- | Networks passwords are a simple way of saving passwords associated
--   with a certain user, server, protocol, and other fields.
data NetworkPassword

-- | Get which keyring the password is stored in.
networkPasswordKeyring :: NetworkPassword -> Keyring

-- | Get the network password's secret value.
networkPasswordSecret :: NetworkPassword -> String

-- | Get the ID of the network password's keyring item.
networkPasswordItemID :: NetworkPassword -> ItemID

-- | Get the network location metadata associated with the network
--   password.
networkPasswordNetwork :: NetworkPassword -> Network

-- | A set of predicates to store with a <a>NetworkPassword</a>, used to
--   find the password later.
data Network

-- | A <a>Network</a> with no set fields.
network :: Network

-- | Get or set the network protocol.
networkProtocol :: Network -> Maybe String

-- | Get or set the network server name.
networkServer :: Network -> Maybe String

-- | Get or set the network object.
networkObject :: Network -> Maybe String

-- | Get or set the type of authentication.
networkAuthType :: Network -> Maybe String

-- | Get or set the network port. A port of 0 is considered blank.
networkPort :: Network -> Word32

-- | Get or set the network user name.
networkUser :: Network -> Maybe String

-- | Get or set the network domain name.
networkDomain :: Network -> Maybe String

-- | Find a previously stored <a>NetworkPassword</a>. Searches all
--   keyrings.
--   
--   The user may be prompted to unlock necessary keyrings, and will be
--   prompted for access to the items if needed.
--   
--   Network passwords are items with the <a>ItemType</a>
--   <a>ItemNetworkPassword</a>.
--   
--   Returns an empty list if no items were found.
findNetworkPassword :: Network -> Operation [NetworkPassword]

-- | Store a network password.
--   
--   If an item already exists for with this network info (ie: user,
--   server, etc.) then it will be updated.
--   
--   Whether a new item is created or not, the item's ID will be returned.
--   
--   Network passwords are items with the <a>ItemType</a>
--   <a>ItemNetworkPassword</a>.
setNetworkPassword :: Keyring -> Network -> String -> Operation ItemID

-- | A keyring operation can be run synchronously or asynchronously.
--   Asynchronous execution requires a running GLib event loop.
data Operation a
data KeyringError
keyringErrorMessage :: KeyringError -> String

-- | Runs an operation synchronously, and returns either the result or an
--   error.
--   
--   Running an operation synchronously does not require a GLib event loop
--   to be active.
sync :: Operation a -> IO (Either KeyringError a)

-- | Runs an operation synchronously. If it succeeded, returns the result.
--   Otherwise, throws a <a>KeyringError</a>.
--   
--   Running an operation synchronously does not require a GLib event loop
--   to be active.
sync_ :: Operation a -> IO a

-- | Runs an operation asynchronously, calling one of the given callbacks
--   on success or failure.
--   
--   The returned <a>CancellationKey</a> can be used to cancel a pending
--   operation.
--   
--   Running an operation asynchronously requires a running GLib event
--   loop.
async :: Operation a -> (KeyringError -> IO ()) -> (a -> IO ()) -> IO CancellationKey
data CancellationKey

-- | Cancel a running asynchronous operation. The error callback will be
--   called with a <a>KeyringError</a> stating that the operation was
--   canceled.
cancel :: (CancellationKey) -> IO ((()))
instance Typeable KeyringException
instance Show ItemID
instance Eq ItemID
instance Ord ItemID
instance Show ItemType
instance Eq ItemType
instance Show Item
instance Eq Item
instance Enum AttributeType
instance Show Attribute
instance Eq Attribute
instance Show AccessType
instance Eq AccessType
instance Ord AccessType
instance Show Access
instance Eq Access
instance Eq Keyring
instance Show Keyring
instance Eq FoundItem
instance Show Network
instance Eq Network
instance Eq NetworkPassword
instance Eq KeyringError
instance Show KeyringError
instance Show KeyringException
instance Eq KeyringException
instance Eq Result
instance Exception KeyringException
instance Show NetworkPassword
instance Show KeyringInfo
instance Show FoundItem
