-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Mean shift algorithm
--   
--   Mean shift is a general, non-parametric feature-space analysis tool.
--   It can be used for clustering, segmentation, filtering, object
--   tracking, and even optimization. This package aims to provide a basic,
--   easy to use version of the method.
@package MeanShift
@version 0.1

module Math.Meanshift

-- | Calculate the Mean shift for a point in a dataset. This is efficient
--   only when we cannot make an a priori estimate on which points
--   contribute to the mean shift at given location.
meanShift :: Double -> [Vector] -> (Vector -> Vector)

-- | Mean shift with a windowing function. Performing mean shift is more
--   efficient if we can index and calculate only those points that are in
--   the support of our kernel.
meanShiftWindow :: Int -> Window -> Double -> (Vector -> Vector)

-- | Find a path to the fixed point of a function.
fixedPoint :: Eq a => (a -> a) -> a -> [a]
fixedPointE :: Double -> (Vector -> Vector) -> Vector -> [Vector]
type Window = Support -> [Vector]
type Support = (Vector, Double)

-- | Kernel density estimate of given points. Uses a normal kernel.
kde :: Double -> [Vector] -> (Vector -> Double)
