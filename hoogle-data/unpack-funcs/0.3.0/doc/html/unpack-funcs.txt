-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Monad transformers that mirror worker-wrapper transformations.
--   
--   Provides a typeclass and Template Haskell-driven instance generators
--   that create <a>worker-wrapper</a> <tt>ReaderT</tt> monad transformers,
--   which unpacks the arguments of single-constructor data types.
@package unpack-funcs
@version 0.3.0

module Control.Monad.Unpack
class Unpackable arg where { data family UnpackedReaderT arg :: (* -> *) -> * -> *; }
runUnpackedReaderT :: Unpackable arg => UnpackedReaderT arg m a -> arg -> m a
unpackedReaderT :: Unpackable arg => (arg -> m a) -> UnpackedReaderT arg m a
ask :: (Monad m, Unpackable arg) => UnpackedReaderT arg m arg
local :: (Monad m, Unpackable arg) => (arg -> arg) -> UnpackedReaderT arg m a -> UnpackedReaderT arg m a
type :~> arg = UnpackedReaderT arg Identity
unpack :: Unpackable arg => (arg -> a) -> (arg :~> a)
($~) :: Unpackable arg => (arg :~> a) -> arg -> a

-- | Unpack wrappers around primitive types, like <a>Int</a>.
unpack1Instance :: Name -> Q [Dec]

-- | Unpack complicated but single-constructor types.
unpackInstance :: Name -> Q [Dec]

-- | Do no unpacking at all.
noUnpackInstance :: Name -> Q [Dec]
instance Unpackable ()
instance (Unpackable a0, Unpackable b0, Unpackable c0, Unpackable d0, Unpackable e0, Unpackable f0, Unpackable g0, Unpackable h0, Unpackable i0, Unpackable j0) => Unpackable (a0, b0, c0, d0, e0, f0, g0, h0, i0, j0)
instance (Unpackable a0, Unpackable b0, Unpackable c0, Unpackable d0, Unpackable e0, Unpackable f0, Unpackable g0, Unpackable h0, Unpackable i0) => Unpackable (a0, b0, c0, d0, e0, f0, g0, h0, i0)
instance (Unpackable a0, Unpackable b0, Unpackable c0, Unpackable d0, Unpackable e0, Unpackable f0, Unpackable g0, Unpackable h0) => Unpackable (a0, b0, c0, d0, e0, f0, g0, h0)
instance (Unpackable a0, Unpackable b0, Unpackable c0, Unpackable d0, Unpackable e0, Unpackable f0, Unpackable g0) => Unpackable (a0, b0, c0, d0, e0, f0, g0)
instance (Unpackable a0, Unpackable b0, Unpackable c0, Unpackable d0, Unpackable e0, Unpackable f0) => Unpackable (a0, b0, c0, d0, e0, f0)
instance (Unpackable a0, Unpackable b0, Unpackable c0, Unpackable d0, Unpackable e0) => Unpackable (a0, b0, c0, d0, e0)
instance (Unpackable a0, Unpackable b0, Unpackable c0, Unpackable d0) => Unpackable (a0, b0, c0, d0)
instance (Unpackable a0, Unpackable b0, Unpackable c0) => Unpackable (a0, b0, c0)
instance (Unpackable a0, Unpackable b0) => Unpackable (a0, b0)
instance Unpackable (Either a0 b0)
instance Unpackable (Maybe a0)
instance Unpackable Bool
instance Unpackable (MVector s0 a0)
instance Unpackable (MVector s0 a0)
instance Unpackable (MVector s0 a0)
instance Unpackable (Vector a0)
instance Unpackable (Vector a0)
instance Unpackable (Vector a0)
instance Unpackable ByteString
instance Unpackable (ForeignPtr a0)
instance Unpackable Addr
instance Unpackable (Ptr a0)
instance Unpackable (MutableByteArray s0)
instance Unpackable ByteArray
instance Unpackable (MutableArray s0 a0)
instance Unpackable (Array a0)
instance Unpackable Char
instance Unpackable Word64
instance Unpackable Word32
instance Unpackable Word16
instance Unpackable Word8
instance Unpackable Word
instance Unpackable Int64
instance Unpackable Int32
instance Unpackable Int16
instance Unpackable Int8
instance Unpackable Int
