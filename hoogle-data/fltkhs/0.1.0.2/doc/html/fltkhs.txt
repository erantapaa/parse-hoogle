-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | FLTK bindings
--   
--   Low level bindings for the FLTK GUI toolkit.
@package fltkhs
@version 0.1.0.2

module Graphics.UI.FLTK.LowLevel.Fl_Enumerations
data Event
NoEvent :: Event
Push :: Event
Release :: Event
Enter :: Event
Leave :: Event
Drag :: Event
Focus :: Event
Unfocus :: Event
Keydown :: Event
Keyup :: Event
Close :: Event
Move :: Event
Shortcut :: Event
Deactivate :: Event
Activate :: Event
Hide :: Event
Show :: Event
Paste :: Event
Selectionclear :: Event
Mousewheel :: Event
DndEnter :: Event
DndDrag :: Event
DndLeave :: Event
DndRelease :: Event
ScreenConfigurationChanged :: Event
Fullscreen :: Event
data When
WhenNever :: When
WhenChanged :: When
WhenNotChanged :: When
WhenRelease :: When
WhenReleaseAlways :: When
WhenEnterKey :: When
WhenEnterKeyAlways :: When
WhenEnterKeyChanged :: When
data FdWhen
CanRead :: FdWhen
CanWrite :: FdWhen
OnExcept :: FdWhen
data TreeSort
TreeSortNone :: TreeSort
TreeSortAscending :: TreeSort
TreeSortDescending :: TreeSort
data TreeConnector
TreeConnectorNone :: TreeConnector
TreeConnectorDotted :: TreeConnector
TreeConnectorSolid :: TreeConnector
data TreeSelect
TreeSelectNone :: TreeSelect
TreeSelectSingle :: TreeSelect
TreeSelectMulti :: TreeSelect
data SpecialKey
Kb_VolumeDown :: SpecialKey
Kb_VolumeMute :: SpecialKey
Kb_VolumeUp :: SpecialKey
Kb_MediaPlay :: SpecialKey
Kb_MediaStop :: SpecialKey
Kb_MediaPrev :: SpecialKey
Kb_MediaNext :: SpecialKey
Kb_HomePage :: SpecialKey
Kb_Mail :: SpecialKey
Kb_Search :: SpecialKey
Kb_Back :: SpecialKey
Kb_Forward :: SpecialKey
Kb_Stop :: SpecialKey
Kb_Refresh :: SpecialKey
Kb_Sleep :: SpecialKey
Kb_Favorites :: SpecialKey
Button :: SpecialKey
Kb_Backspace :: SpecialKey
Kb_Tab :: SpecialKey
Kb_IsoKey :: SpecialKey
Kb_Enter :: SpecialKey
Kb_Pause :: SpecialKey
Kb_Escape :: SpecialKey
Kb_Kana :: SpecialKey
Kb_Eisu :: SpecialKey
Kb_Yen :: SpecialKey
Kb_JisUnderscore :: SpecialKey
Kb_Home :: SpecialKey
Kb_Left :: SpecialKey
Kb_Up :: SpecialKey
Kb_Right :: SpecialKey
Kb_Down :: SpecialKey
Kb_PageUp :: SpecialKey
Kb_PageDown :: SpecialKey
Kb_End :: SpecialKey
Kb_Print :: SpecialKey
Kb_Insert :: SpecialKey
Kb_Menu :: SpecialKey
Kb_Help :: SpecialKey
Kb_Kp :: SpecialKey
Kb_KpEnter :: SpecialKey
Kb_F :: SpecialKey
Kb_Flast :: SpecialKey
Kb_ShiftL :: SpecialKey
Kb_ShiftR :: SpecialKey
Kb_ControlL :: SpecialKey
Kb_ControlR :: SpecialKey
Kb_CapsLock :: SpecialKey
Kb_MetaL :: SpecialKey
Kb_MetaR :: SpecialKey
Kb_AltL :: SpecialKey
Kb_AltR :: SpecialKey
Kb_Delete :: SpecialKey
allSpecialKeys :: [SpecialKey]
data MouseButton
Mouse_Left :: MouseButton
Mouse_Middle :: MouseButton
Mouse_Right :: MouseButton
data EventState
Kb_ShiftState :: EventState
Kb_CapsLockState :: EventState
Kb_CtrlState :: EventState
Kb_AltState :: EventState
Kb_NumLockState :: EventState
Kb_MetaState :: EventState
Kb_ScrollLockState :: EventState
Mouse_Button1State :: EventState
Mouse_Button2State :: EventState
Mouse_Button3State :: EventState
allEventStates :: [EventState]
kb_CommandState :: EventState
kb_ControlState :: EventState
kb_KpLast :: SpecialKey
data Damage
DamageChild :: Damage
DamageExpose :: Damage
DamageScroll :: Damage
DamageOverlay :: Damage
DamageUser1 :: Damage
DamageUser2 :: Damage
DamageAll :: Damage
data GlutDraw
GlutNormal :: GlutDraw
GlutOverlay :: GlutDraw
data GlutMouseCodes
GlutLeftButton :: GlutMouseCodes
GlutMiddleButton :: GlutMouseCodes
GlutRightButton :: GlutMouseCodes
data GlutUpDown
GlutDown :: GlutUpDown
GlutUp :: GlutUpDown
data GlutVisibility
GlutNotVisible :: GlutVisibility
GlutVisible :: GlutVisibility
data GlutMenuProperties
GlutMenuNotInUse :: GlutMenuProperties
GlutMenuInUse :: GlutMenuProperties
GlutMenuNumItems :: GlutMenuProperties
data GlutEnteredLeft
GlutLeft :: GlutEnteredLeft
GlutEntered :: GlutEnteredLeft
data GlutKeyboardCodes
GlutKeyF1 :: GlutKeyboardCodes
GlutKeyF2 :: GlutKeyboardCodes
GlutKeyF3 :: GlutKeyboardCodes
GlutKeyF4 :: GlutKeyboardCodes
GlutKeyF5 :: GlutKeyboardCodes
GlutKeyF6 :: GlutKeyboardCodes
GlutKeyF7 :: GlutKeyboardCodes
GlutKeyF8 :: GlutKeyboardCodes
GlutKeyF9 :: GlutKeyboardCodes
GlutKeyF10 :: GlutKeyboardCodes
GlutKeyF11 :: GlutKeyboardCodes
GlutKeyF12 :: GlutKeyboardCodes
GlutKeyHome :: GlutKeyboardCodes
GlutKeyLeft :: GlutKeyboardCodes
GlutKeyUp :: GlutKeyboardCodes
GlutKeyRight :: GlutKeyboardCodes
GlutKeyDown :: GlutKeyboardCodes
GlutKeyPageUp :: GlutKeyboardCodes
GlutKeyPageDown :: GlutKeyboardCodes
GlutKeyEnd :: GlutKeyboardCodes
GlutKeyInsert :: GlutKeyboardCodes
GlutActiveShift :: GlutKeyboardCodes
GlutActiveCtrl :: GlutKeyboardCodes
GlutActiveAlt :: GlutKeyboardCodes
data GlutConstants
GlutReturnZero :: GlutConstants
GlutDisplayModePossible :: GlutConstants
GlutVersion :: GlutConstants
GlutOverlayPossible :: GlutConstants
GlutTransparentIndex :: GlutConstants
GlutNormalDamaged :: GlutConstants
GlutOverlayDamaged :: GlutConstants
data GlutWindowProperties
GlutWindowX :: GlutWindowProperties
GlutWindowY :: GlutWindowProperties
GlutWindowWidth :: GlutWindowProperties
GlutWindowHeight :: GlutWindowProperties
GlutWindowParent :: GlutWindowProperties
GlutScreenWidth :: GlutWindowProperties
GlutScreenHeight :: GlutWindowProperties
GlutInitWindowX :: GlutWindowProperties
GlutInitWindowY :: GlutWindowProperties
GlutInitWindowWidth :: GlutWindowProperties
GlutInitWindowHeight :: GlutWindowProperties
GlutInitDisplayMode :: GlutWindowProperties
GlutWindowBufferSize :: GlutWindowProperties
GlutWindowDoublebuffer :: GlutWindowProperties
GlutWindowStereo :: GlutWindowProperties
GlutWindowColormapSize :: GlutWindowProperties
GlutWindowRedSize :: GlutWindowProperties
GlutWindowGreenSize :: GlutWindowProperties
GlutWindowBlueSize :: GlutWindowProperties
GlutWindowAlphaSize :: GlutWindowProperties
GlutWindowDepthSize :: GlutWindowProperties
GlutWindowStencilSize :: GlutWindowProperties
GlutWindowAccumRedSize :: GlutWindowProperties
GlutWindowAccumGreenSize :: GlutWindowProperties
GlutWindowAccumBlueSize :: GlutWindowProperties
GlutWindowAccumAlphaSize :: GlutWindowProperties
GlutWindowRgba :: GlutWindowProperties
GlutWindowNumSamples :: GlutWindowProperties
data GlutCursor
GlutCursorInherit :: GlutCursor
GlutCursorRightArrow :: GlutCursor
GlutCursorBottomLeftCorner :: GlutCursor
GlutCursorBottomRightCorner :: GlutCursor
GlutCursorBottomSide :: GlutCursor
GlutCursorCycle :: GlutCursor
GlutCursorInfo :: GlutCursor
GlutCursorLeftSide :: GlutCursor
GlutCursorDestroy :: GlutCursor
GlutCursorHelp :: GlutCursor
GlutCursorRightSide :: GlutCursor
GlutCursorSpray :: GlutCursor
GlutCursorCrosshair :: GlutCursor
GlutCursorLeftArrow :: GlutCursor
GlutCursorTopLeftCorner :: GlutCursor
GlutCursorTopRightCorner :: GlutCursor
GlutCursorTopSide :: GlutCursor
GlutCursorWait :: GlutCursor
GlutCursorText :: GlutCursor
GlutCursorUpDown :: GlutCursor
GlutCursorLeftRight :: GlutCursor
GlutCursorNone :: GlutCursor
glutCursorFullCrossHair :: GlutCursor
data Cursor
CursorDefault :: Cursor
CursorSW :: Cursor
CursorSE :: Cursor
CursorS :: Cursor
CursorMove :: Cursor
CursorHand :: Cursor
CursorArrow :: Cursor
CursorW :: Cursor
CursorHelp :: Cursor
CursorE :: Cursor
CursorCross :: Cursor
CursorNW :: Cursor
CursorNE :: Cursor
CursorN :: Cursor
CursorWait :: Cursor
CursorInsert :: Cursor
CursorNS :: Cursor
CursorWE :: Cursor
CursorNWSE :: Cursor
CursorNesw :: Cursor
CursorNone :: Cursor
data Mode
ModeRGB :: Mode
ModeIndex :: Mode
ModeDouble :: Mode
ModeAccum :: Mode
ModeAlpha :: Mode
ModeDepth :: Mode
ModeStencil :: Mode
ModeRGB8 :: Mode
ModeMultisample :: Mode
ModeStereo :: Mode
ModeFakeSingle :: Mode
single :: Mode
newtype Alignments
Alignments :: [AlignType] -> Alignments
data AlignType
AlignTypeCenter :: AlignType
AlignTypeTop :: AlignType
AlignTypeBottom :: AlignType
AlignTypeLeft :: AlignType
AlignTypeLeftTop :: AlignType
AlignTypeRight :: AlignType
AlignTypeRightTop :: AlignType
AlignTypeLeftBottom :: AlignType
AlignTypeRightBottom :: AlignType
AlignTypeInside :: AlignType
AlignTypeTextOverImage :: AlignType
AlignTypeClip :: AlignType
AlignTypeWrap :: AlignType
AlignTypeImageNextToText :: AlignType
AlignTypeTextNextToImage :: AlignType
AlignTypeImageBackdrop :: AlignType
alignCenter :: Alignments
alignTop :: Alignments
alignBottom :: Alignments
alignLeft :: Alignments
alignRight :: Alignments
alignInside :: Alignments
alignTextOverImage :: Alignments
alignClip :: Alignments
alignWrap :: Alignments
alignImageNextToText :: Alignments
alignTextNextToImage :: Alignments
alignImageBackdrop :: Alignments
alignLeftTop :: Alignments
alignRightTop :: Alignments
alignLeftBottom :: Alignments
alignRightBottom :: Alignments
alignPositionMask :: Alignments
alignImageMask :: Alignments
alignNoWrap :: Alignments
alignImageOverText :: Alignments
alignTopLeft :: Alignments
alignTopRight :: Alignments
alignBottomLeft :: Alignments
alignBottomRight :: Alignments
allAlignTypes :: [AlignType]
allWhen :: [When]
data Boxtype
NoBox :: Boxtype
FlatBox :: Boxtype
UpBox :: Boxtype
DownBox :: Boxtype
UpFrame :: Boxtype
DownFrame :: Boxtype
ThinUpBox :: Boxtype
ThinDownBox :: Boxtype
ThinUpFrame :: Boxtype
ThinDownFrame :: Boxtype
EngravedBox :: Boxtype
EmbossedBox :: Boxtype
EngravedFrame :: Boxtype
EmbossedFrame :: Boxtype
BorderBox :: Boxtype
ShadowBox :: Boxtype
BorderFrame :: Boxtype
ShadowFrame :: Boxtype
RoundedBox :: Boxtype
RshadowBox :: Boxtype
RoundedFrame :: Boxtype
RFlatBox :: Boxtype
RoundUpBox :: Boxtype
RoundDownBox :: Boxtype
DiamondUpBox :: Boxtype
DiamondDownBox :: Boxtype
OvalBox :: Boxtype
OshadowBox :: Boxtype
OvalFrame :: Boxtype
FloatBox :: Boxtype
PlasticUpBox :: Boxtype
PlasticDownBox :: Boxtype
PlasticUpFrame :: Boxtype
PlasticDownFrame :: Boxtype
PlasticThinUpBox :: Boxtype
PlasticThinDownBox :: Boxtype
PlasticRoundUpBox :: Boxtype
PlasticRoundDownBox :: Boxtype
GtkUpBox :: Boxtype
GtkDownBox :: Boxtype
GtkUpFrame :: Boxtype
GtkDownFrame :: Boxtype
GtkThinUpBox :: Boxtype
GtkThinDownBox :: Boxtype
GtkThinUpFrame :: Boxtype
GtkThinDownFrame :: Boxtype
GtkRoundUpBox :: Boxtype
GtkRoundDownBox :: Boxtype
FreeBoxtype :: Boxtype
frame :: Boxtype
frameBox :: Boxtype
circleBox :: Boxtype
diamondBox :: Boxtype
defineRoundUpBox :: Boxtype
defineShadowBox :: Boxtype
defineRoundedBox :: Boxtype
defineRflatBox :: Boxtype
defineRshadowBox :: Boxtype
defineDiamondBox :: Boxtype
defineOvalBox :: Boxtype
definePlasticUpBox :: Boxtype
defineGtkUpBox :: Boxtype
newtype Font
Font :: Int -> Font
data FontAttribute
Bold :: FontAttribute
Italic :: FontAttribute
BoldItalic :: FontAttribute
cFromFont :: Font -> CInt
cToFont :: CInt -> Font
cFromFontAttribute :: FontAttribute -> CInt
cToFontAttribute :: CInt -> Maybe FontAttribute
helvetica :: Font
helveticaBold :: Font
helveticaItalic :: Font
helveticaBoldItalic :: Font
courier :: Font
courierBold :: Font
courierItalic :: Font
courierBoldItalic :: Font
times :: Font
timesBold :: Font
timesItalic :: Font
timesBoldItalic :: Font
symbol :: Font
screen :: Font
screenBold :: Font
zapfDingbats :: Font
freeFont :: Font
newtype Color
Color :: Int -> Color
cFromColor :: Color -> CUInt
cToColor :: CUInt -> Color
inactive :: (Color) -> (Color)
contrast :: (Color) -> (Color) -> (Color)
color_average :: (Color) -> (Color) -> (Double) -> (Color)
lighter :: (Color) -> (Color)
darker :: (Color) -> (Color)
rgbColorWithRgb :: (Char) -> (Char) -> (Char) -> (Color)
rgbColorWithGrayscale :: (Char) -> (Color)
grayRamp :: (Int) -> (Color)
colorCube :: (Int) -> (Int) -> (Int) -> (Color)
foregroundColor :: Color
background2Color :: Color
inactiveColor :: Color
selectionColor :: Color
gray0Color :: Color
dark3Color :: Color
dark2Color :: Color
dark1Color :: Color
backgroundColor :: Color
light1Color :: Color
light2Color :: Color
light3Color :: Color
blackColor :: Color
redColor :: Color
greenColor :: Color
yellowColor :: Color
blueColor :: Color
magentaColor :: Color
cyanColor :: Color
darkRedColor :: Color
darkGreenColor :: Color
darkYellowColor :: Color
darkBlueColor :: Color
darkMagentaColor :: Color
darkCyanColor :: Color
whiteColor :: Color
freeColor :: Color
numFreeColor :: Color
grayRampColor :: Color
numGray :: Color
grayColor :: Color
colorCubeColor :: Color
numRed :: Color
numGreen :: Color
numBlue :: Color
data Labeltype
NormalLabel :: Labeltype
NoLabel :: Labeltype
ShadowLabel :: Labeltype
EngravedLabel :: Labeltype
EmbossedLabel :: Labeltype
FreeLabelType :: Labeltype
symbolLabel :: Labeltype
defineShadowLabel :: Labeltype
defineEngravedLabel :: Labeltype
defineEmbossedLabel :: Labeltype
instance Show Event
instance Eq Event
instance Show When
instance Eq When
instance Ord When
instance Show FdWhen
instance Eq FdWhen
instance Show TreeSort
instance Eq TreeSort
instance Show TreeConnector
instance Eq TreeConnector
instance Show TreeSelect
instance Eq TreeSelect
instance Show SpecialKey
instance Eq SpecialKey
instance Show MouseButton
instance Eq MouseButton
instance Show EventState
instance Eq EventState
instance Ord EventState
instance Show Damage
instance Show GlutDraw
instance Show GlutMouseCodes
instance Show GlutUpDown
instance Show GlutVisibility
instance Show GlutMenuProperties
instance Show GlutEnteredLeft
instance Show GlutKeyboardCodes
instance Show GlutConstants
instance Show GlutWindowProperties
instance Show GlutCursor
instance Show Cursor
instance Show Mode
instance Show AlignType
instance Eq AlignType
instance Ord AlignType
instance Show Boxtype
instance Enum FontAttribute
instance Show Color
instance Enum Labeltype
instance Enum Boxtype
instance Enum AlignType
instance Enum Mode
instance Enum Cursor
instance Enum GlutCursor
instance Enum GlutWindowProperties
instance Enum GlutConstants
instance Enum GlutKeyboardCodes
instance Enum GlutEnteredLeft
instance Enum GlutMenuProperties
instance Enum GlutVisibility
instance Enum GlutUpDown
instance Enum GlutMouseCodes
instance Enum GlutDraw
instance Enum Damage
instance Enum EventState
instance Enum MouseButton
instance Enum SpecialKey
instance Enum TreeSelect
instance Enum TreeConnector
instance Enum TreeSort
instance Enum FdWhen
instance Enum When
instance Enum Event

module Graphics.UI.FLTK.LowLevel.Fl_Types
data SliderType
VertSliderType :: SliderType
HorSliderType :: SliderType
VertFillSlideType :: SliderType
HorFillSliderType :: SliderType
VertNiceSliderType :: SliderType
HorNiceSliderType :: SliderType
data BrowserType
NormalBrowserType :: BrowserType
SelectBrowserType :: BrowserType
HoldBrowserType :: BrowserType
MultiBrowserType :: BrowserType
data SortType
SortAscending :: SortType
SortDescending :: SortType
data FileBrowserType
FileBrowserFiles :: FileBrowserType
FileBrowserDirectories :: FileBrowserType
data FileIconType
FileIconAny :: FileIconType
FileIconPlain :: FileIconType
FileIconFifo :: FileIconType
FileIconDevice :: FileIconType
FileIconLink :: FileIconType
FileIconDirectory :: FileIconType
data FileIconProps
FileIconEnd :: FileIconProps
FileIconColor :: FileIconProps
FileIconLine :: FileIconProps
FileIconClosedline :: FileIconProps
FileIconPolygon :: FileIconProps
FileIconOutlinepolygon :: FileIconProps
FileIconVertex :: FileIconProps
data FileChooserType
FileChooserSingle :: FileChooserType
FileChooserMulti :: FileChooserType
FileChooserCreate :: FileChooserType
FileChooserDirectory :: FileChooserType
data ButtonType
NormalButtonType :: ButtonType
ToggleButtonType :: ButtonType
HiddenButtonType :: ButtonType
RadioButtonType :: ButtonType
data TreeReasonType
TreeReasonNone :: TreeReasonType
TreeReasonSelected :: TreeReasonType
TreeReasonDeselected :: TreeReasonType
TreeReasonOpened :: TreeReasonType
TreeReasonClosed :: TreeReasonType
data MenuItemFlag
MenuItemInactive :: MenuItemFlag
MenuItemToggle :: MenuItemFlag
MenuItemValue :: MenuItemFlag
MenuItemRadio :: MenuItemFlag
MenuItemInvisible :: MenuItemFlag
SubmenuPointer :: MenuItemFlag
Submenu :: MenuItemFlag
MenuItemDivider :: MenuItemFlag
MenuItemHorizontal :: MenuItemFlag
newtype MenuItemFlags
MenuItemFlags :: [MenuItemFlag] -> MenuItemFlags
allMenuItemFlags :: [MenuItemFlag]
data CursorType
NormalCursor :: CursorType
CaretCursor :: CursorType
DimCursor :: CursorType
BlockCursor :: CursorType
HeavyCursor :: CursorType
SimpleCursor :: CursorType
data PositionType
CursorPos :: PositionType
CharacterPos :: PositionType
data DragType
DragNone :: DragType
DragStartDnd :: DragType
DragChar :: DragType
DragWord :: DragType
DragLine :: DragType
data WrapType
WrapNone :: WrapType
WrapAtColumn :: WrapType
WrapAtPixel :: WrapType
WrapAtBounds :: WrapType
data PageFormat
A0 :: PageFormat
A1 :: PageFormat
A2 :: PageFormat
A3 :: PageFormat
A4 :: PageFormat
A5 :: PageFormat
A6 :: PageFormat
A7 :: PageFormat
A8 :: PageFormat
A9 :: PageFormat
B0 :: PageFormat
B1 :: PageFormat
B2 :: PageFormat
B3 :: PageFormat
B4 :: PageFormat
B5 :: PageFormat
B6 :: PageFormat
B7 :: PageFormat
B8 :: PageFormat
B9 :: PageFormat
B10 :: PageFormat
C5E :: PageFormat
DLE :: PageFormat
Executive :: PageFormat
Folio :: PageFormat
Ledger :: PageFormat
Legal :: PageFormat
Letter :: PageFormat
Tabloid :: PageFormat
Envelope :: PageFormat
Media :: PageFormat
data PageLayout
Portrait :: PageLayout
Landscape :: PageLayout
Reversed :: PageLayout
Orientation :: PageLayout
data TableRowSelectMode
SelectNone :: TableRowSelectMode
SelectSingle :: TableRowSelectMode
SelectMulti :: TableRowSelectMode
data TableContext
ContextNone :: TableContext
ContextStartPage :: TableContext
ContextEndPage :: TableContext
ContextRowHeader :: TableContext
ContextColHeader :: TableContext
ContextCell :: TableContext
ContextTable :: TableContext
ContextRCResize :: TableContext
data LinePosition
LinePositionTop :: LinePosition
LinePositionBottom :: LinePosition
LinePositionMiddle :: LinePosition
data ScrollbarMode
Horizontal :: ScrollbarMode
Vertical :: ScrollbarMode
Both :: ScrollbarMode
AlwaysOn :: ScrollbarMode
HorizontalAlways :: ScrollbarMode
VerticalAlways :: ScrollbarMode
BothAlways :: ScrollbarMode
data StyleTableEntry
StyleTableEntry :: (Maybe Color) -> (Maybe Font) -> (Maybe FontSize) -> StyleTableEntry
data GLUTproc
GLUTproc :: ((FunPtr (IO ()))) -> GLUTproc
newtype GLUTIdleFunction
GLUTIdleFunction :: (FunPtr (IO ())) -> GLUTIdleFunction
newtype GLUTMenuStateFunction
GLUTMenuStateFunction :: (FunPtr (CInt -> IO ())) -> GLUTMenuStateFunction
newtype GLUTMenuStatusFunction
GLUTMenuStatusFunction :: (FunPtr (CInt -> CInt -> CInt -> IO ())) -> GLUTMenuStatusFunction
newtype GlutBitmapFontPtr
GlutBitmapFontPtr :: (Ptr (GlutBitmapFontPtr)) -> GlutBitmapFontPtr
newtype GlutStrokeVertexPtr
GlutStrokeVertexPtr :: (Ptr (GlutStrokeVertexPtr)) -> GlutStrokeVertexPtr
newtype GlutStrokeStripPtr
GlutStrokeStripPtr :: (Ptr (GlutStrokeStripPtr)) -> GlutStrokeStripPtr
newtype GlutStrokeFontPtr
GlutStrokeFontPtr :: (Ptr (GlutStrokeFontPtr)) -> GlutStrokeFontPtr
type FlShortcut = CUInt
type FlColor = CUInt
type FlFont = CInt
type FlAlign = CUInt
type RGB = (Word8, Word8, Word8)
type LineDelta = Maybe Int
type Delta = Maybe Int
type FlIntPtr = CLong
type FlUIntPtr = CULong
type ID = Ptr ()
data Ref a
Ref :: !(ForeignPtr (Ptr ())) -> Ref a
data FunRef
FunRef :: !(FunPtr ()) -> FunRef
data CBase parent
type Base = CBase ()
type GlobalCallback = IO ()
type CallbackWithUserDataPrim = Ptr () -> Ptr () -> IO ()
type CallbackPrim = Ptr () -> IO ()
type ColorAverageCallbackPrim = Ptr () -> CUInt -> CFloat -> IO ()
type ImageDrawCallbackPrim = Ptr () -> CInt -> CInt -> CInt -> CInt -> CInt -> CInt -> IO ()
type ImageCopyCallbackPrim = Ptr () -> CInt -> CInt -> IO (Ptr ())
type GlobalEventHandlerPrim = CInt -> IO CInt
type GlobalEventHandlerF = Event -> IO Int
type DrawCallback = String -> Position -> IO ()
type DrawCallbackPrim = CString -> CInt -> CInt -> CInt -> IO ()
type TextBufferCallback = FunPtr (Ptr () -> IO ())
type FileChooserCallback = FunPtr (Ptr () -> Ptr () -> IO ())
type SharedImageHandler = FunPtr (CString -> CUChar -> CInt -> Ptr ())
type BoxDrawF = Rectangle -> Color -> IO ()
type BoxDrawFPrim = CInt -> CInt -> CInt -> CInt -> FlColor -> IO ()
type TextModifyCb = Int -> Int -> Int -> Int -> String -> IO ()
type TextModifyCbPrim = CInt -> CInt -> CInt -> CInt -> Ptr CChar -> Ptr () -> IO ()
type TextPredeleteCb = BufferOffset -> Int -> IO ()
type TextPredeleteCbPrim = CInt -> CInt -> Ptr () -> IO ()
type UnfinishedStyleCb = BufferOffset -> IO ()
type UnfinishedStyleCbPrim = CInt -> Ptr () -> IO ()
newtype Width
Width :: Int -> Width
newtype Height
Height :: Int -> Height
newtype Depth
Depth :: Int -> Depth
newtype LineSize
LineSize :: Int -> LineSize
newtype X
X :: Int -> X
newtype Y
Y :: Int -> Y
newtype ByX
ByX :: Double -> ByX
newtype ByY
ByY :: Double -> ByY
newtype Angle
Angle :: CShort -> Angle
data Position
Position :: X -> Y -> Position
data CountDirection
CountUp :: CountDirection
CountDown :: CountDirection
data DPI
DPI :: Float -> Float -> DPI
newtype TextDisplayStyle
TextDisplayStyle :: CInt -> TextDisplayStyle
newtype BufferOffset
BufferOffset :: Int -> BufferOffset
data BufferRange
BufferRange :: BufferOffset -> BufferOffset -> BufferRange
statusToBufferRange :: (Ptr CInt -> Ptr CInt -> IO Int) -> IO (Maybe BufferRange)
data Rectangle
Rectangle :: Position -> Size -> Rectangle
data ByXY
ByXY :: ByX -> ByY -> ByXY
data Intersection
Contained :: Intersection
Partial :: Intersection
data Size
Size :: Width -> Height -> Size
data KeyType
SpecialKeyType :: SpecialKey -> KeyType
NormalKeyType :: Char -> KeyType
data ShortcutKeySequence
ShortcutKeySequence :: [EventState] -> KeyType -> ShortcutKeySequence
data Shortcut
KeySequence :: ShortcutKeySequence -> Shortcut
KeyFormat :: String -> Shortcut
data KeyBindingKeySequence
KeyBindingKeySequence :: (Maybe [EventState]) -> KeyType -> KeyBindingKeySequence
data ScreenLocation
Intersect :: Rectangle -> ScreenLocation
ScreenNumber :: Int -> ScreenLocation
ScreenPosition :: Position -> ScreenLocation
newtype FontSize
FontSize :: CInt -> FontSize
newtype PixmapHs
PixmapHs :: [ByteString] -> PixmapHs
data BitmapHs
BitmapHs :: ByteString -> Size -> BitmapHs
data Clipboard
InternalClipboard :: Clipboard
SharedClipboard :: Clipboard
data UnknownError
UnknownError :: UnknownError
data NotFound
NotFound :: NotFound
data OutOfRange
OutOfRange :: OutOfRange
successOrOutOfRange :: a -> Bool -> (a -> IO b) -> IO (Either OutOfRange b)
data NoChange
NoChange :: NoChange
successOrNoChange :: Int -> Either NoChange ()
data DataProcessingError
NoDataProcessedError :: DataProcessingError
PartialDataProcessedError :: DataProcessingError
UnknownDataError :: Int -> DataProcessingError
successOrDataProcessingError :: Int -> Either DataProcessingError ()
toRectangle :: (Int, Int, Int, Int) -> Rectangle
fromRectangle :: Rectangle -> (Int, Int, Int, Int)
toSize :: (Int, Int) -> Size
throwStackOnError :: IO a -> IO a
withForeignPtrs :: [ForeignPtr a] -> ([Ptr a] -> IO c) -> IO c
toRefPtr :: Ptr (Ptr a) -> IO (Ptr a)
withRef :: Ref a -> (Ptr b -> IO c) -> IO c
unsafeRefToPtr :: Ref a -> IO (Ptr ())
withRefs :: [Ref a] -> (Ptr (Ptr b) -> IO c) -> IO c
withMaybeRef :: Maybe (Ref a) -> (Ptr () -> IO c) -> IO c
swapRef :: Ref a -> (Ptr b -> IO (Ptr ())) -> IO ()
wrapInRef :: ForeignPtr (Ptr ()) -> Ref a
toFunRef :: FunPtr a -> FunRef
fromFunRef :: FunRef -> (FunPtr ())
instance Show SliderType
instance Eq SliderType
instance Show BrowserType
instance Eq BrowserType
instance Show SortType
instance Eq SortType
instance Show FileBrowserType
instance Eq FileBrowserType
instance Show FileIconType
instance Eq FileIconType
instance Show FileIconProps
instance Eq FileIconProps
instance Show FileChooserType
instance Eq FileChooserType
instance Show ButtonType
instance Eq ButtonType
instance Show TreeReasonType
instance Eq TreeReasonType
instance Show MenuItemFlag
instance Eq MenuItemFlag
instance Ord MenuItemFlag
instance Show CursorType
instance Eq CursorType
instance Show PositionType
instance Eq PositionType
instance Show DragType
instance Eq DragType
instance Show WrapType
instance Eq WrapType
instance Show PageFormat
instance Eq PageFormat
instance Show PageLayout
instance Eq PageLayout
instance Show TableRowSelectMode
instance Eq TableRowSelectMode
instance Show TableContext
instance Eq TableContext
instance Show LinePosition
instance Eq LinePosition
instance Show ScrollbarMode
instance Eq ScrollbarMode
instance Show (Ref a)
instance Eq Width
instance Show Width
instance Eq Height
instance Show Height
instance Eq X
instance Show X
instance Eq Y
instance Show Y
instance Eq Position
instance Show Position
instance Eq Size
instance Show Size
instance Eq Rectangle
instance Show Rectangle
instance Show KeyType
instance Eq KeyType
instance Show OutOfRange
instance Enum ScrollbarMode
instance Enum LinePosition
instance Enum TableContext
instance Enum TableRowSelectMode
instance Enum PageLayout
instance Enum PageFormat
instance Enum WrapType
instance Enum DragType
instance Enum PositionType
instance Enum CursorType
instance Enum MenuItemFlag
instance Enum TreeReasonType
instance Enum ButtonType
instance Enum FileChooserType
instance Enum FileIconProps
instance Enum FileIconType
instance Enum FileBrowserType
instance Enum SortType
instance Enum BrowserType
instance Enum SliderType

module Graphics.UI.FLTK.LowLevel.Dispatch

-- | <tt>FindOp</tt> searches a class hierarchy for a member function (an
--   Op-eration) and returns the first class in the hierarchy that support
--   it.
--   
--   Given a class hierarchy starting at <tt>a</tt> and member function
--   <tt>b</tt> find <tt>c</tt>, the closest ancestor to <tt>a</tt>
--   (possibly <tt>a</tt>) that has that function.
--   
--   If found <tt>r</tt> is <tt>Match c</tt>, if not found <tt>r</tt> is
--   <tt>NoFunction b</tt>.
class FindOp a b c | a b -> c

-- | Associate a "class" with it's member functions
class Functions a b | a -> b

-- | See <a>FindOp</a> for more details.
data Match a

-- | See <a>FindOp</a> for more details.
data NoFunction a

-- | Implementations of methods on various types of objects.
--   
--   <ul>
--   <li><tt>op</tt> - name of the function</li>
--   <li><tt>obj</tt> - the class that implements <tt>op</tt></li>
--   <li><tt>origObj</tt> - the class in the hierarchy where the search for
--   <tt>op</tt> started. Kept around in case the type in needed. The best
--   example is <tt>setCallback</tt> whose implementation is usually found
--   much lower in the hierarchy but where we also want to enforce that the
--   implementation take the type of the widget calling it.</li>
--   <li><tt>impl</tt> - a function that takes the a <a>Ref</a>
--   <tt>origobj</tt>, casted down to <a>Ref</a> <tt>obj</tt> and whatever
--   other parameters the instance specifies.</li>
--   </ul>
class Op op obj origObj impl
runOp :: Op op obj origObj impl => op -> origObj -> (Ref obj) -> impl

-- | Given some member function <tt>op</tt> and a <a>Ref</a> to some class
--   <tt>origObj</tt> return the implementation of <tt>op</tt>. See
--   <a>Op</a> for more details.
--   
--   Every FLTK function called on some <a>Ref</a> uses this function to
--   figure out what arguments it needs.
dispatch :: (FindOp origObj op (Match obj), Op op obj origObj impl) => op -> Ref origObj -> impl

-- | Cast any reference to any other reference. Unsafe, intended to be used
--   by <a>Op</a>.
castTo :: Ref a -> Ref r

-- | Cast any reference to one of its ancestors.
safeCast :: Parent a r => Ref a -> Ref r

-- | A class with a single instance that is found only if <tt>b</tt> is an
--   ancestor of <tt>a</tt>.
--   
--   Used by some <a>Op</a> implementations to enforce that certain
--   parameters have to be at least a <tt>b</tt>.
class Parent a b
instance [overlap ok] Functions Base ()
instance [overlap ok] FindInHierarchy a a b InHierarchy => Parent a b
instance [overlap ok] FindInHierarchy orig Base Base InHierarchy
instance [overlap ok] r ~ NotInHierarchy orig o => FindInHierarchy orig Base o r
instance [overlap ok] (TypeEqual as oos match, FindInHierarchy' orig as oos match r) => FindInHierarchy orig as oos r
instance [overlap ok] r ~ InHierarchy => FindInHierarchy' orig a b Same r
instance [overlap ok] (Downcast aas as, FindInHierarchy orig as o r) => FindInHierarchy' orig aas o Different r
instance [overlap ok] FindOp Base f (NoFunction f)
instance [overlap ok] (Functions (a as) fs, Contains fs f match, FindOp' (a as) f match r) => FindOp (a as) f r
instance [overlap ok] r ~ Match a => FindOp' a b Same r
instance [overlap ok] (Downcast aas as, FindOp as f r) => FindOp' aas f Different r
instance [overlap ok] as ~ Base => Downcast Base as
instance [overlap ok] Downcast (a as) as
instance [overlap ok] Contains () b Different
instance [overlap ok] (TypeEqual (a ()) b match, Contains' (a as) b match r) => Contains (a as) b r
instance [overlap ok] r ~ Same => Contains' a b Same r
instance [overlap ok] (Tail aas as, Contains as b r) => Contains' aas b Different r
instance [overlap ok] r ~ () => Tail () r
instance [overlap ok] Tail (a as) as
instance [overlap ok] Different ~ b => TypeEqual x y b
instance [overlap ok] TypeEqual a a Same

module Graphics.UI.FLTK.LowLevel.Hierarchy
type Region = CRegion Base
type GlContext = CGlContext Base
type Widget = CWidget Base
data Destroy a
destroy :: (FindOp a (Destroy ()) (Match r), Op (Destroy ()) r a impl) => Ref a -> impl
data Handle a
handle :: (FindOp a (Handle ()) (Match r), Op (Handle ()) r a impl) => Ref a -> impl
data GetParent a
getParent :: (FindOp a (GetParent ()) (Match r), Op (GetParent ()) r a impl) => Ref a -> impl
data SetParent a
setParent :: (FindOp a (SetParent ()) (Match r), Op (SetParent ()) r a impl) => Ref a -> impl
data GetType_ a
getType_ :: (FindOp a (GetType_ ()) (Match r), Op (GetType_ ()) r a impl) => Ref a -> impl
data SetType a
setType :: (FindOp a (SetType ()) (Match r), Op (SetType ()) r a impl) => Ref a -> impl
data DrawLabel a
drawLabel :: (FindOp a (DrawLabel ()) (Match r), Op (DrawLabel ()) r a impl) => Ref a -> impl
data GetX a
getX :: (FindOp a (GetX ()) (Match r), Op (GetX ()) r a impl) => Ref a -> impl
data GetY a
getY :: (FindOp a (GetY ()) (Match r), Op (GetY ()) r a impl) => Ref a -> impl
data GetW a
getW :: (FindOp a (GetW ()) (Match r), Op (GetW ()) r a impl) => Ref a -> impl
data GetH a
getH :: (FindOp a (GetH ()) (Match r), Op (GetH ()) r a impl) => Ref a -> impl
data GetRectangle a
getRectangle :: (FindOp a (GetRectangle ()) (Match r), Op (GetRectangle ()) r a impl) => Ref a -> impl
data SetAlign a
setAlign :: (FindOp a (SetAlign ()) (Match r), Op (SetAlign ()) r a impl) => Ref a -> impl
data GetAlign a
getAlign :: (FindOp a (GetAlign ()) (Match r), Op (GetAlign ()) r a impl) => Ref a -> impl
data GetBox a
getBox :: (FindOp a (GetBox ()) (Match r), Op (GetBox ()) r a impl) => Ref a -> impl
data SetBox a
setBox :: (FindOp a (SetBox ()) (Match r), Op (SetBox ()) r a impl) => Ref a -> impl
data GetColor a
getColor :: (FindOp a (GetColor ()) (Match r), Op (GetColor ()) r a impl) => Ref a -> impl
data SetColor a
setColor :: (FindOp a (SetColor ()) (Match r), Op (SetColor ()) r a impl) => Ref a -> impl
data SetColorWithBgSel a
setColorWithBgSel :: (FindOp a (SetColorWithBgSel ()) (Match r), Op (SetColorWithBgSel ()) r a impl) => Ref a -> impl
data GetSelectionColor a
getSelectionColor :: (FindOp a (GetSelectionColor ()) (Match r), Op (GetSelectionColor ()) r a impl) => Ref a -> impl
data SetSelectionColor a
setSelectionColor :: (FindOp a (SetSelectionColor ()) (Match r), Op (SetSelectionColor ()) r a impl) => Ref a -> impl
data GetLabel a
getLabel :: (FindOp a (GetLabel ()) (Match r), Op (GetLabel ()) r a impl) => Ref a -> impl
data CopyLabel a
copyLabel :: (FindOp a (CopyLabel ()) (Match r), Op (CopyLabel ()) r a impl) => Ref a -> impl
data SetLabel a
setLabel :: (FindOp a (SetLabel ()) (Match r), Op (SetLabel ()) r a impl) => Ref a -> impl
data GetLabeltype a
getLabeltype :: (FindOp a (GetLabeltype ()) (Match r), Op (GetLabeltype ()) r a impl) => Ref a -> impl
data SetLabeltype a
setLabeltype :: (FindOp a (SetLabeltype ()) (Match r), Op (SetLabeltype ()) r a impl) => Ref a -> impl
data GetLabelcolor a
getLabelcolor :: (FindOp a (GetLabelcolor ()) (Match r), Op (GetLabelcolor ()) r a impl) => Ref a -> impl
data SetLabelcolor a
setLabelcolor :: (FindOp a (SetLabelcolor ()) (Match r), Op (SetLabelcolor ()) r a impl) => Ref a -> impl
data GetLabelfont a
getLabelfont :: (FindOp a (GetLabelfont ()) (Match r), Op (GetLabelfont ()) r a impl) => Ref a -> impl
data SetLabelfont a
setLabelfont :: (FindOp a (SetLabelfont ()) (Match r), Op (SetLabelfont ()) r a impl) => Ref a -> impl
data GetLabelsize a
getLabelsize :: (FindOp a (GetLabelsize ()) (Match r), Op (GetLabelsize ()) r a impl) => Ref a -> impl
data SetLabelsize a
setLabelsize :: (FindOp a (SetLabelsize ()) (Match r), Op (SetLabelsize ()) r a impl) => Ref a -> impl
data GetImage a
getImage :: (FindOp a (GetImage ()) (Match r), Op (GetImage ()) r a impl) => Ref a -> impl
data SetImage a
setImage :: (FindOp a (SetImage ()) (Match r), Op (SetImage ()) r a impl) => Ref a -> impl
data GetDeimage a
getDeimage :: (FindOp a (GetDeimage ()) (Match r), Op (GetDeimage ()) r a impl) => Ref a -> impl
data SetDeimage a
setDeimage :: (FindOp a (SetDeimage ()) (Match r), Op (SetDeimage ()) r a impl) => Ref a -> impl
data GetTooltip a
getTooltip :: (FindOp a (GetTooltip ()) (Match r), Op (GetTooltip ()) r a impl) => Ref a -> impl
data CopyTooltip a
copyTooltip :: (FindOp a (CopyTooltip ()) (Match r), Op (CopyTooltip ()) r a impl) => Ref a -> impl
data SetTooltip a
setTooltip :: (FindOp a (SetTooltip ()) (Match r), Op (SetTooltip ()) r a impl) => Ref a -> impl
data GetWhen a
getWhen :: (FindOp a (GetWhen ()) (Match r), Op (GetWhen ()) r a impl) => Ref a -> impl
data SetWhen a
setWhen :: (FindOp a (SetWhen ()) (Match r), Op (SetWhen ()) r a impl) => Ref a -> impl
data GetVisible a
getVisible :: (FindOp a (GetVisible ()) (Match r), Op (GetVisible ()) r a impl) => Ref a -> impl
data GetVisibleR a
getVisibleR :: (FindOp a (GetVisibleR ()) (Match r), Op (GetVisibleR ()) r a impl) => Ref a -> impl
data ShowWidgetSuper a
showWidgetSuper :: (FindOp a (ShowWidgetSuper ()) (Match r), Op (ShowWidgetSuper ()) r a impl) => Ref a -> impl
data ShowWidget a
showWidget :: (FindOp a (ShowWidget ()) (Match r), Op (ShowWidget ()) r a impl) => Ref a -> impl
data HideSuper a
hideSuper :: (FindOp a (HideSuper ()) (Match r), Op (HideSuper ()) r a impl) => Ref a -> impl
data Hide a
hide :: (FindOp a (Hide ()) (Match r), Op (Hide ()) r a impl) => Ref a -> impl
data SetVisible a
setVisible :: (FindOp a (SetVisible ()) (Match r), Op (SetVisible ()) r a impl) => Ref a -> impl
data ClearVisible a
clearVisible :: (FindOp a (ClearVisible ()) (Match r), Op (ClearVisible ()) r a impl) => Ref a -> impl
data Active a
active :: (FindOp a (Active ()) (Match r), Op (Active ()) r a impl) => Ref a -> impl
data ActiveR a
activeR :: (FindOp a (ActiveR ()) (Match r), Op (ActiveR ()) r a impl) => Ref a -> impl
data Activate a
activate :: (FindOp a (Activate ()) (Match r), Op (Activate ()) r a impl) => Ref a -> impl
data Deactivate a
deactivate :: (FindOp a (Deactivate ()) (Match r), Op (Deactivate ()) r a impl) => Ref a -> impl
data GetOutput a
getOutput :: (FindOp a (GetOutput ()) (Match r), Op (GetOutput ()) r a impl) => Ref a -> impl
data SetOutput a
setOutput :: (FindOp a (SetOutput ()) (Match r), Op (SetOutput ()) r a impl) => Ref a -> impl
data ClearOutput a
clearOutput :: (FindOp a (ClearOutput ()) (Match r), Op (ClearOutput ()) r a impl) => Ref a -> impl
data Takesevents a
takesevents :: (FindOp a (Takesevents ()) (Match r), Op (Takesevents ()) r a impl) => Ref a -> impl
data SetChanged a
setChanged :: (FindOp a (SetChanged ()) (Match r), Op (SetChanged ()) r a impl) => Ref a -> impl
data ClearChanged a
clearChanged :: (FindOp a (ClearChanged ()) (Match r), Op (ClearChanged ()) r a impl) => Ref a -> impl
data Changed a
changed :: (FindOp a (Changed ()) (Match r), Op (Changed ()) r a impl) => Ref a -> impl
data SetActive a
setActive :: (FindOp a (SetActive ()) (Match r), Op (SetActive ()) r a impl) => Ref a -> impl
data ClearActive a
clearActive :: (FindOp a (ClearActive ()) (Match r), Op (ClearActive ()) r a impl) => Ref a -> impl
data TakeFocus a
takeFocus :: (FindOp a (TakeFocus ()) (Match r), Op (TakeFocus ()) r a impl) => Ref a -> impl
data SetVisibleFocus a
setVisibleFocus :: (FindOp a (SetVisibleFocus ()) (Match r), Op (SetVisibleFocus ()) r a impl) => Ref a -> impl
data ClearVisibleFocus a
clearVisibleFocus :: (FindOp a (ClearVisibleFocus ()) (Match r), Op (ClearVisibleFocus ()) r a impl) => Ref a -> impl
data ModifyVisibleFocus a
modifyVisibleFocus :: (FindOp a (ModifyVisibleFocus ()) (Match r), Op (ModifyVisibleFocus ()) r a impl) => Ref a -> impl
data GetVisibleFocus a
getVisibleFocus :: (FindOp a (GetVisibleFocus ()) (Match r), Op (GetVisibleFocus ()) r a impl) => Ref a -> impl
data Contains a
contains :: (FindOp a (Contains ()) (Match r), Op (Contains ()) r a impl) => Ref a -> impl
data Inside a
inside :: (FindOp a (Inside ()) (Match r), Op (Inside ()) r a impl) => Ref a -> impl
data Redraw a
redraw :: (FindOp a (Redraw ()) (Match r), Op (Redraw ()) r a impl) => Ref a -> impl
data RedrawLabel a
redrawLabel :: (FindOp a (RedrawLabel ()) (Match r), Op (RedrawLabel ()) r a impl) => Ref a -> impl
data GetDamage a
getDamage :: (FindOp a (GetDamage ()) (Match r), Op (GetDamage ()) r a impl) => Ref a -> impl
data ClearDamageWithBitmask a
clearDamageWithBitmask :: (FindOp a (ClearDamageWithBitmask ()) (Match r), Op (ClearDamageWithBitmask ()) r a impl) => Ref a -> impl
data ClearDamage a
clearDamage :: (FindOp a (ClearDamage ()) (Match r), Op (ClearDamage ()) r a impl) => Ref a -> impl
data GetDamageWithText a
getDamageWithText :: (FindOp a (GetDamageWithText ()) (Match r), Op (GetDamageWithText ()) r a impl) => Ref a -> impl
data GetDamageInsideWidget a
getDamageInsideWidget :: (FindOp a (GetDamageInsideWidget ()) (Match r), Op (GetDamageInsideWidget ()) r a impl) => Ref a -> impl
data MeasureLabel a
measureLabel :: (FindOp a (MeasureLabel ()) (Match r), Op (MeasureLabel ()) r a impl) => Ref a -> impl
data GetWindow a
getWindow :: (FindOp a (GetWindow ()) (Match r), Op (GetWindow ()) r a impl) => Ref a -> impl
data GetTopWindow a
getTopWindow :: (FindOp a (GetTopWindow ()) (Match r), Op (GetTopWindow ()) r a impl) => Ref a -> impl
data GetTopWindowOffset a
getTopWindowOffset :: (FindOp a (GetTopWindowOffset ()) (Match r), Op (GetTopWindowOffset ()) r a impl) => Ref a -> impl
data ResizeSuper a
resizeSuper :: (FindOp a (ResizeSuper ()) (Match r), Op (ResizeSuper ()) r a impl) => Ref a -> impl
data Resize a
resize :: (FindOp a (Resize ()) (Match r), Op (Resize ()) r a impl) => Ref a -> impl
data SetCallback a
setCallback :: (FindOp a (SetCallback ()) (Match r), Op (SetCallback ()) r a impl) => Ref a -> impl
data DrawBox a
drawBox :: (FindOp a (DrawBox ()) (Match r), Op (DrawBox ()) r a impl) => Ref a -> impl
data DrawBoxWithBoxtype a
drawBoxWithBoxtype :: (FindOp a (DrawBoxWithBoxtype ()) (Match r), Op (DrawBoxWithBoxtype ()) r a impl) => Ref a -> impl
data DrawBackdrop a
drawBackdrop :: (FindOp a (DrawBackdrop ()) (Match r), Op (DrawBackdrop ()) r a impl) => Ref a -> impl
data DrawFocus a
drawFocus :: (FindOp a (DrawFocus ()) (Match r), Op (DrawFocus ()) r a impl) => Ref a -> impl
type Group = CGroup Widget
data DrawChild a
drawChild :: (FindOp a (DrawChild ()) (Match r), Op (DrawChild ()) r a impl) => Ref a -> impl
data DrawChildren a
drawChildren :: (FindOp a (DrawChildren ()) (Match r), Op (DrawChildren ()) r a impl) => Ref a -> impl
data DrawOutsideLabel a
drawOutsideLabel :: (FindOp a (DrawOutsideLabel ()) (Match r), Op (DrawOutsideLabel ()) r a impl) => Ref a -> impl
data UpdateChild a
updateChild :: (FindOp a (UpdateChild ()) (Match r), Op (UpdateChild ()) r a impl) => Ref a -> impl
data Begin a
begin :: (FindOp a (Begin ()) (Match r), Op (Begin ()) r a impl) => Ref a -> impl
data End a
end :: (FindOp a (End ()) (Match r), Op (End ()) r a impl) => Ref a -> impl
data Find a
find :: (FindOp a (Find ()) (Match r), Op (Find ()) r a impl) => Ref a -> impl
data Add a
add :: (FindOp a (Add ()) (Match r), Op (Add ()) r a impl) => Ref a -> impl
data Insert a
insert :: (FindOp a (Insert ()) (Match r), Op (Insert ()) r a impl) => Ref a -> impl
data RemoveIndex a
removeIndex :: (FindOp a (RemoveIndex ()) (Match r), Op (RemoveIndex ()) r a impl) => Ref a -> impl
data RemoveWidget a
removeWidget :: (FindOp a (RemoveWidget ()) (Match r), Op (RemoveWidget ()) r a impl) => Ref a -> impl
data Clear a
clear :: (FindOp a (Clear ()) (Match r), Op (Clear ()) r a impl) => Ref a -> impl
data SetResizable a
setResizable :: (FindOp a (SetResizable ()) (Match r), Op (SetResizable ()) r a impl) => Ref a -> impl
data SetNotResizable a
setNotResizable :: (FindOp a (SetNotResizable ()) (Match r), Op (SetNotResizable ()) r a impl) => Ref a -> impl
data GetResizable a
getResizable :: (FindOp a (GetResizable ()) (Match r), Op (GetResizable ()) r a impl) => Ref a -> impl
data AddResizable a
addResizable :: (FindOp a (AddResizable ()) (Match r), Op (AddResizable ()) r a impl) => Ref a -> impl
data InitSizes a
initSizes :: (FindOp a (InitSizes ()) (Match r), Op (InitSizes ()) r a impl) => Ref a -> impl
data Children a
children :: (FindOp a (Children ()) (Match r), Op (Children ()) r a impl) => Ref a -> impl
data SetClipChildren a
setClipChildren :: (FindOp a (SetClipChildren ()) (Match r), Op (SetClipChildren ()) r a impl) => Ref a -> impl
data ClipChildren a
clipChildren :: (FindOp a (ClipChildren ()) (Match r), Op (ClipChildren ()) r a impl) => Ref a -> impl
data Focus a
focus :: (FindOp a (Focus ()) (Match r), Op (Focus ()) r a impl) => Ref a -> impl
data DdfdesignKludge a
ddfdesignKludge :: (FindOp a (DdfdesignKludge ()) (Match r), Op (DdfdesignKludge ()) r a impl) => Ref a -> impl
data InsertWithBefore a
insertWithBefore :: (FindOp a (InsertWithBefore ()) (Match r), Op (InsertWithBefore ()) r a impl) => Ref a -> impl
data GetArray a
getArray :: (FindOp a (GetArray ()) (Match r), Op (GetArray ()) r a impl) => Ref a -> impl
data GetChild a
getChild :: (FindOp a (GetChild ()) (Match r), Op (GetChild ()) r a impl) => Ref a -> impl
type Window = CWindow Group
data DrawSuper a
drawSuper :: (FindOp a (DrawSuper ()) (Match r), Op (DrawSuper ()) r a impl) => Ref a -> impl
data HandleSuper a
handleSuper :: (FindOp a (HandleSuper ()) (Match r), Op (HandleSuper ()) r a impl) => Ref a -> impl
data FlushSuper a
flushSuper :: (FindOp a (FlushSuper ()) (Match r), Op (FlushSuper ()) r a impl) => Ref a -> impl
data MakeFullscreen a
makeFullscreen :: (FindOp a (MakeFullscreen ()) (Match r), Op (MakeFullscreen ()) r a impl) => Ref a -> impl
data FullscreenOff a
fullscreenOff :: (FindOp a (FullscreenOff ()) (Match r), Op (FullscreenOff ()) r a impl) => Ref a -> impl
data SetBorder a
setBorder :: (FindOp a (SetBorder ()) (Match r), Op (SetBorder ()) r a impl) => Ref a -> impl
data ClearBorder a
clearBorder :: (FindOp a (ClearBorder ()) (Match r), Op (ClearBorder ()) r a impl) => Ref a -> impl
data GetBorder a
getBorder :: (FindOp a (GetBorder ()) (Match r), Op (GetBorder ()) r a impl) => Ref a -> impl
data SetOverride a
setOverride :: (FindOp a (SetOverride ()) (Match r), Op (SetOverride ()) r a impl) => Ref a -> impl
data GetOverride a
getOverride :: (FindOp a (GetOverride ()) (Match r), Op (GetOverride ()) r a impl) => Ref a -> impl
data SetModal a
setModal :: (FindOp a (SetModal ()) (Match r), Op (SetModal ()) r a impl) => Ref a -> impl
data GetModal a
getModal :: (FindOp a (GetModal ()) (Match r), Op (GetModal ()) r a impl) => Ref a -> impl
data SetNonModal a
setNonModal :: (FindOp a (SetNonModal ()) (Match r), Op (SetNonModal ()) r a impl) => Ref a -> impl
data NonModal a
nonModal :: (FindOp a (NonModal ()) (Match r), Op (NonModal ()) r a impl) => Ref a -> impl
data SetMenuWindow a
setMenuWindow :: (FindOp a (SetMenuWindow ()) (Match r), Op (SetMenuWindow ()) r a impl) => Ref a -> impl
data GetMenuWindow a
getMenuWindow :: (FindOp a (GetMenuWindow ()) (Match r), Op (GetMenuWindow ()) r a impl) => Ref a -> impl
data SetTooltipWindow a
setTooltipWindow :: (FindOp a (SetTooltipWindow ()) (Match r), Op (SetTooltipWindow ()) r a impl) => Ref a -> impl
data GetTooltipWindow a
getTooltipWindow :: (FindOp a (GetTooltipWindow ()) (Match r), Op (GetTooltipWindow ()) r a impl) => Ref a -> impl
data HotSpot a
hotSpot :: (FindOp a (HotSpot ()) (Match r), Op (HotSpot ()) r a impl) => Ref a -> impl
data FreePosition a
freePosition :: (FindOp a (FreePosition ()) (Match r), Op (FreePosition ()) r a impl) => Ref a -> impl
data SizeRange a
sizeRange :: (FindOp a (SizeRange ()) (Match r), Op (SizeRange ()) r a impl) => Ref a -> impl
data SizeRangeWithArgs a
sizeRangeWithArgs :: (FindOp a (SizeRangeWithArgs ()) (Match r), Op (SizeRangeWithArgs ()) r a impl) => Ref a -> impl
data GetIconlabel a
getIconlabel :: (FindOp a (GetIconlabel ()) (Match r), Op (GetIconlabel ()) r a impl) => Ref a -> impl
data SetIconlabel a
setIconlabel :: (FindOp a (SetIconlabel ()) (Match r), Op (SetIconlabel ()) r a impl) => Ref a -> impl
data SetLabelWithIconlabel a
setLabelWithIconlabel :: (FindOp a (SetLabelWithIconlabel ()) (Match r), Op (SetLabelWithIconlabel ()) r a impl) => Ref a -> impl
data GetXclass a
getXclass :: (FindOp a (GetXclass ()) (Match r), Op (GetXclass ()) r a impl) => Ref a -> impl
data SetXclass a
setXclass :: (FindOp a (SetXclass ()) (Match r), Op (SetXclass ()) r a impl) => Ref a -> impl
data GetIcon a
getIcon :: (FindOp a (GetIcon ()) (Match r), Op (GetIcon ()) r a impl) => Ref a -> impl
data SetIcon a
setIcon :: (FindOp a (SetIcon ()) (Match r), Op (SetIcon ()) r a impl) => Ref a -> impl
data Shown a
shown :: (FindOp a (Shown ()) (Match r), Op (Shown ()) r a impl) => Ref a -> impl
data Iconize a
iconize :: (FindOp a (Iconize ()) (Match r), Op (Iconize ()) r a impl) => Ref a -> impl
data GetXRoot a
getXRoot :: (FindOp a (GetXRoot ()) (Match r), Op (GetXRoot ()) r a impl) => Ref a -> impl
data GetYRoot a
getYRoot :: (FindOp a (GetYRoot ()) (Match r), Op (GetYRoot ()) r a impl) => Ref a -> impl
data MakeCurrent a
makeCurrent :: (FindOp a (MakeCurrent ()) (Match r), Op (MakeCurrent ()) r a impl) => Ref a -> impl
data SetCursor a
setCursor :: (FindOp a (SetCursor ()) (Match r), Op (SetCursor ()) r a impl) => Ref a -> impl
data SetCursorWithFgBg a
setCursorWithFgBg :: (FindOp a (SetCursorWithFgBg ()) (Match r), Op (SetCursorWithFgBg ()) r a impl) => Ref a -> impl
data SetDefaultCursor a
setDefaultCursor :: (FindOp a (SetDefaultCursor ()) (Match r), Op (SetDefaultCursor ()) r a impl) => Ref a -> impl
data SetDefaultCursorWithFgBg a
setDefaultCursorWithFgBg :: (FindOp a (SetDefaultCursorWithFgBg ()) (Match r), Op (SetDefaultCursorWithFgBg ()) r a impl) => Ref a -> impl
data GetDecoratedW a
getDecoratedW :: (FindOp a (GetDecoratedW ()) (Match r), Op (GetDecoratedW ()) r a impl) => Ref a -> impl
data GetDecoratedH a
getDecoratedH :: (FindOp a (GetDecoratedH ()) (Match r), Op (GetDecoratedH ()) r a impl) => Ref a -> impl
data WaitForExpose a
waitForExpose :: (FindOp a (WaitForExpose ()) (Match r), Op (WaitForExpose ()) r a impl) => Ref a -> impl
type SingleWindow = CSingleWindow Window
type DoubleWindow = CDoubleWindow Window
type OverlayWindow = COverlayWindow DoubleWindow
data CanDoOverlay a
canDoOverlay :: (FindOp a (CanDoOverlay ()) (Match r), Op (CanDoOverlay ()) r a impl) => Ref a -> impl
data RedrawOverlay a
redrawOverlay :: (FindOp a (RedrawOverlay ()) (Match r), Op (RedrawOverlay ()) r a impl) => Ref a -> impl
data Flush a
flush :: (FindOp a (Flush ()) (Match r), Op (Flush ()) r a impl) => Ref a -> impl
type Button = CButton Widget
data GetValue a
getValue :: (FindOp a (GetValue ()) (Match r), Op (GetValue ()) r a impl) => Ref a -> impl
data SetValue a
setValue :: (FindOp a (SetValue ()) (Match r), Op (SetValue ()) r a impl) => Ref a -> impl
data Set a
set :: (FindOp a (Set ()) (Match r), Op (Set ()) r a impl) => Ref a -> impl
data Setonly a
setonly :: (FindOp a (Setonly ()) (Match r), Op (Setonly ()) r a impl) => Ref a -> impl
data GetShortcut a
getShortcut :: (FindOp a (GetShortcut ()) (Match r), Op (GetShortcut ()) r a impl) => Ref a -> impl
data SetShortcut a
setShortcut :: (FindOp a (SetShortcut ()) (Match r), Op (SetShortcut ()) r a impl) => Ref a -> impl
data GetDownBox a
getDownBox :: (FindOp a (GetDownBox ()) (Match r), Op (GetDownBox ()) r a impl) => Ref a -> impl
data SetDownBox a
setDownBox :: (FindOp a (SetDownBox ()) (Match r), Op (SetDownBox ()) r a impl) => Ref a -> impl
data GetDownColor a
getDownColor :: (FindOp a (GetDownColor ()) (Match r), Op (GetDownColor ()) r a impl) => Ref a -> impl
data SetDownColor a
setDownColor :: (FindOp a (SetDownColor ()) (Match r), Op (SetDownColor ()) r a impl) => Ref a -> impl
type LightButton = CLightButton Button
type RadioLightButton = CRadioLightButton LightButton
type CheckButton = CCheckButton Button
type ReturnButton = CReturnButton Button
type RoundButton = CRoundButton Button
type RepeatButton = CRepeatButton Button
type ToggleButton = CToggleButton Button
type Valuator = CValuator Widget
data Bounds a
bounds :: (FindOp a (Bounds ()) (Match r), Op (Bounds ()) r a impl) => Ref a -> impl
data GetMinimum a
getMinimum :: (FindOp a (GetMinimum ()) (Match r), Op (GetMinimum ()) r a impl) => Ref a -> impl
data SetMinimum a
setMinimum :: (FindOp a (SetMinimum ()) (Match r), Op (SetMinimum ()) r a impl) => Ref a -> impl
data GetMaximum a
getMaximum :: (FindOp a (GetMaximum ()) (Match r), Op (GetMaximum ()) r a impl) => Ref a -> impl
data SetMaximum a
setMaximum :: (FindOp a (SetMaximum ()) (Match r), Op (SetMaximum ()) r a impl) => Ref a -> impl
data Range a
range :: (FindOp a (Range ()) (Match r), Op (Range ()) r a impl) => Ref a -> impl
data SetStep a
setStep :: (FindOp a (SetStep ()) (Match r), Op (SetStep ()) r a impl) => Ref a -> impl
data GetStep a
getStep :: (FindOp a (GetStep ()) (Match r), Op (GetStep ()) r a impl) => Ref a -> impl
data Precision a
precision :: (FindOp a (Precision ()) (Match r), Op (Precision ()) r a impl) => Ref a -> impl
data Format a
format :: (FindOp a (Format ()) (Match r), Op (Format ()) r a impl) => Ref a -> impl
data Round a
round :: (FindOp a (Round ()) (Match r), Op (Round ()) r a impl) => Ref a -> impl
data Clamp a
clamp :: (FindOp a (Clamp ()) (Match r), Op (Clamp ()) r a impl) => Ref a -> impl
data Increment a
increment :: (FindOp a (Increment ()) (Match r), Op (Increment ()) r a impl) => Ref a -> impl
type Slider = CSlider Valuator
data Scrollvalue a
scrollvalue :: (FindOp a (Scrollvalue ()) (Match r), Op (Scrollvalue ()) r a impl) => Ref a -> impl
data SetSliderSize a
setSliderSize :: (FindOp a (SetSliderSize ()) (Match r), Op (SetSliderSize ()) r a impl) => Ref a -> impl
data GetSliderSize a
getSliderSize :: (FindOp a (GetSliderSize ()) (Match r), Op (GetSliderSize ()) r a impl) => Ref a -> impl
data GetSlider a
getSlider :: (FindOp a (GetSlider ()) (Match r), Op (GetSlider ()) r a impl) => Ref a -> impl
data SetSlider a
setSlider :: (FindOp a (SetSlider ()) (Match r), Op (SetSlider ()) r a impl) => Ref a -> impl
type FillSlider = CFillSlider Slider
type HorSlider = CHorSlider Slider
type HorFillSlider = CHorFillSlider Slider
type NiceSlider = CNiceSlider Slider
type HorNiceSlider = CHorNiceSlider Slider
type MenuItem = CMenuItem Base
data NextWithStep a
nextWithStep :: (FindOp a (NextWithStep ()) (Match r), Op (NextWithStep ()) r a impl) => Ref a -> impl
data Next a
next :: (FindOp a (Next ()) (Match r), Op (Next ()) r a impl) => Ref a -> impl
data GetFirst a
getFirst :: (FindOp a (GetFirst ()) (Match r), Op (GetFirst ()) r a impl) => Ref a -> impl
data SetLabelWithLabeltype a
setLabelWithLabeltype :: (FindOp a (SetLabelWithLabeltype ()) (Match r), Op (SetLabelWithLabeltype ()) r a impl) => Ref a -> impl
data Submenu a
submenu :: (FindOp a (Submenu ()) (Match r), Op (Submenu ()) r a impl) => Ref a -> impl
data Checkbox a
checkbox :: (FindOp a (Checkbox ()) (Match r), Op (Checkbox ()) r a impl) => Ref a -> impl
data Radio a
radio :: (FindOp a (Radio ()) (Match r), Op (Radio ()) r a impl) => Ref a -> impl
data Visible a
visible :: (FindOp a (Visible ()) (Match r), Op (Visible ()) r a impl) => Ref a -> impl
data Activevisible a
activevisible :: (FindOp a (Activevisible ()) (Match r), Op (Activevisible ()) r a impl) => Ref a -> impl
data Measure a
measure :: (FindOp a (Measure ()) (Match r), Op (Measure ()) r a impl) => Ref a -> impl
data DrawWithT a
drawWithT :: (FindOp a (DrawWithT ()) (Match r), Op (DrawWithT ()) r a impl) => Ref a -> impl
data Draw a
draw :: (FindOp a (Draw ()) (Match r), Op (Draw ()) r a impl) => Ref a -> impl
data GetFlags a
getFlags :: (FindOp a (GetFlags ()) (Match r), Op (GetFlags ()) r a impl) => Ref a -> impl
data SetFlags a
setFlags :: (FindOp a (SetFlags ()) (Match r), Op (SetFlags ()) r a impl) => Ref a -> impl
data GetText a
getText :: (FindOp a (GetText ()) (Match r), Op (GetText ()) r a impl) => Ref a -> impl
data Pulldown a
pulldown :: (FindOp a (Pulldown ()) (Match r), Op (Pulldown ()) r a impl) => Ref a -> impl
data Popup a
popup :: (FindOp a (Popup ()) (Match r), Op (Popup ()) r a impl) => Ref a -> impl
data TestShortcut a
testShortcut :: (FindOp a (TestShortcut ()) (Match r), Op (TestShortcut ()) r a impl) => Ref a -> impl
data FindShortcut a
findShortcut :: (FindOp a (FindShortcut ()) (Match r), Op (FindShortcut ()) r a impl) => Ref a -> impl
data DoCallback a
doCallback :: (FindOp a (DoCallback ()) (Match r), Op (DoCallback ()) r a impl) => Ref a -> impl
data GetSize a
getSize :: (FindOp a (GetSize ()) (Match r), Op (GetSize ()) r a impl) => Ref a -> impl
type MenuPrim = CMenuPrim Widget
data ItemPathname a
itemPathname :: (FindOp a (ItemPathname ()) (Match r), Op (ItemPathname ()) r a impl) => Ref a -> impl
data ItemPathnameRecent a
itemPathnameRecent :: (FindOp a (ItemPathnameRecent ()) (Match r), Op (ItemPathnameRecent ()) r a impl) => Ref a -> impl
data Picked a
picked :: (FindOp a (Picked ()) (Match r), Op (Picked ()) r a impl) => Ref a -> impl
data FindIndex a
findIndex :: (FindOp a (FindIndex ()) (Match r), Op (FindIndex ()) r a impl) => Ref a -> impl
data Global a
global :: (FindOp a (Global ()) (Match r), Op (Global ()) r a impl) => Ref a -> impl
data GetMenu a
getMenu :: (FindOp a (GetMenu ()) (Match r), Op (GetMenu ()) r a impl) => Ref a -> impl
data SetMenu a
setMenu :: (FindOp a (SetMenu ()) (Match r), Op (SetMenu ()) r a impl) => Ref a -> impl
data AddName a
addName :: (FindOp a (AddName ()) (Match r), Op (AddName ()) r a impl) => Ref a -> impl
data Copy a
copy :: (FindOp a (Copy ()) (Match r), Op (Copy ()) r a impl) => Ref a -> impl
data SetSize a
setSize :: (FindOp a (SetSize ()) (Match r), Op (SetSize ()) r a impl) => Ref a -> impl
data ClearSubmenu a
clearSubmenu :: (FindOp a (ClearSubmenu ()) (Match r), Op (ClearSubmenu ()) r a impl) => Ref a -> impl
data Replace a
replace :: (FindOp a (Replace ()) (Match r), Op (Replace ()) r a impl) => Ref a -> impl
data Remove a
remove :: (FindOp a (Remove ()) (Match r), Op (Remove ()) r a impl) => Ref a -> impl
data SetMode a
setMode :: (FindOp a (SetMode ()) (Match r), Op (SetMode ()) r a impl) => Ref a -> impl
data GetMode a
getMode :: (FindOp a (GetMode ()) (Match r), Op (GetMode ()) r a impl) => Ref a -> impl
data Mvalue a
mvalue :: (FindOp a (Mvalue ()) (Match r), Op (Mvalue ()) r a impl) => Ref a -> impl
data GetTextWithIndex a
getTextWithIndex :: (FindOp a (GetTextWithIndex ()) (Match r), Op (GetTextWithIndex ()) r a impl) => Ref a -> impl
data GetTextfont a
getTextfont :: (FindOp a (GetTextfont ()) (Match r), Op (GetTextfont ()) r a impl) => Ref a -> impl
data SetTextfont a
setTextfont :: (FindOp a (SetTextfont ()) (Match r), Op (SetTextfont ()) r a impl) => Ref a -> impl
data GetTextsize a
getTextsize :: (FindOp a (GetTextsize ()) (Match r), Op (GetTextsize ()) r a impl) => Ref a -> impl
data SetTextsize a
setTextsize :: (FindOp a (SetTextsize ()) (Match r), Op (SetTextsize ()) r a impl) => Ref a -> impl
data GetTextcolor a
getTextcolor :: (FindOp a (GetTextcolor ()) (Match r), Op (GetTextcolor ()) r a impl) => Ref a -> impl
data SetTextcolor a
setTextcolor :: (FindOp a (SetTextcolor ()) (Match r), Op (SetTextcolor ()) r a impl) => Ref a -> impl
data DownBox a
downBox :: (FindOp a (DownBox ()) (Match r), Op (DownBox ()) r a impl) => Ref a -> impl
type SysMenuBar = CSysMenuBar MenuPrim
type Choice = CChoice MenuPrim
type MenuButton = CMenuButton MenuPrim
type Image = CImage Base
data GetD a
getD :: (FindOp a (GetD ()) (Match r), Op (GetD ()) r a impl) => Ref a -> impl
data GetLd a
getLd :: (FindOp a (GetLd ()) (Match r), Op (GetLd ()) r a impl) => Ref a -> impl
data GetCount a
getCount :: (FindOp a (GetCount ()) (Match r), Op (GetCount ()) r a impl) => Ref a -> impl
data ColorAverage a
colorAverage :: (FindOp a (ColorAverage ()) (Match r), Op (ColorAverage ()) r a impl) => Ref a -> impl
data Inactive a
inactive :: (FindOp a (Inactive ()) (Match r), Op (Inactive ()) r a impl) => Ref a -> impl
data Desaturate a
desaturate :: (FindOp a (Desaturate ()) (Match r), Op (Desaturate ()) r a impl) => Ref a -> impl
data DrawResize a
drawResize :: (FindOp a (DrawResize ()) (Match r), Op (DrawResize ()) r a impl) => Ref a -> impl
data Uncache a
uncache :: (FindOp a (Uncache ()) (Match r), Op (Uncache ()) r a impl) => Ref a -> impl
type Bitmap = CBitmap Image
type Pixmap = CPixmap Image
type CopySurface = CCopySurface Base
data ClassName a
className :: (FindOp a (ClassName ()) (Match r), Op (ClassName ()) r a impl) => Ref a -> impl
data SetCurrent a
setCurrent :: (FindOp a (SetCurrent ()) (Match r), Op (SetCurrent ()) r a impl) => Ref a -> impl
type ImageSurface = CImageSurface Base
type Adjuster = CAdjuster Valuator
data SetSoft a
setSoft :: (FindOp a (SetSoft ()) (Match r), Op (SetSoft ()) r a impl) => Ref a -> impl
data GetSoft a
getSoft :: (FindOp a (GetSoft ()) (Match r), Op (GetSoft ()) r a impl) => Ref a -> impl
type Dial = CDial Valuator
data GetAngle1 a
getAngle1 :: (FindOp a (GetAngle1 ()) (Match r), Op (GetAngle1 ()) r a impl) => Ref a -> impl
data SetAngle1 a
setAngle1 :: (FindOp a (SetAngle1 ()) (Match r), Op (SetAngle1 ()) r a impl) => Ref a -> impl
data GetAngle2 a
getAngle2 :: (FindOp a (GetAngle2 ()) (Match r), Op (GetAngle2 ()) r a impl) => Ref a -> impl
data SetAngle2 a
setAngle2 :: (FindOp a (SetAngle2 ()) (Match r), Op (SetAngle2 ()) r a impl) => Ref a -> impl
data SetAngles a
setAngles :: (FindOp a (SetAngles ()) (Match r), Op (SetAngles ()) r a impl) => Ref a -> impl
type FillDial = CFillDial Dial
type LineDial = CLineDial Dial
type Roller = CRoller Valuator
type Counter = CCounter Valuator
data SetLstep a
setLstep :: (FindOp a (SetLstep ()) (Match r), Op (SetLstep ()) r a impl) => Ref a -> impl
type SimpleCounter = CSimpleCounter Counter
type Scrollbar = CScrollbar Slider
data SetLinesize a
setLinesize :: (FindOp a (SetLinesize ()) (Match r), Op (SetLinesize ()) r a impl) => Ref a -> impl
data GetLinesize a
getLinesize :: (FindOp a (GetLinesize ()) (Match r), Op (GetLinesize ()) r a impl) => Ref a -> impl
type ValueSlider = CValueSlider Slider
type HorValueSlider = CHorValueSlider ValueSlider
type Input = CInput Widget
data StaticValue a
staticValue :: (FindOp a (StaticValue ()) (Match r), Op (StaticValue ()) r a impl) => Ref a -> impl
data Index a
index :: (FindOp a (Index ()) (Match r), Op (Index ()) r a impl) => Ref a -> impl
data GetMaximumSize a
getMaximumSize :: (FindOp a (GetMaximumSize ()) (Match r), Op (GetMaximumSize ()) r a impl) => Ref a -> impl
data SetMaximumSize a
setMaximumSize :: (FindOp a (SetMaximumSize ()) (Match r), Op (SetMaximumSize ()) r a impl) => Ref a -> impl
data GetPosition a
getPosition :: (FindOp a (GetPosition ()) (Match r), Op (GetPosition ()) r a impl) => Ref a -> impl
data GetMark a
getMark :: (FindOp a (GetMark ()) (Match r), Op (GetMark ()) r a impl) => Ref a -> impl
data SetPosition a
setPosition :: (FindOp a (SetPosition ()) (Match r), Op (SetPosition ()) r a impl) => Ref a -> impl
data SetMark a
setMark :: (FindOp a (SetMark ()) (Match r), Op (SetMark ()) r a impl) => Ref a -> impl
data Cut a
cut :: (FindOp a (Cut ()) (Match r), Op (Cut ()) r a impl) => Ref a -> impl
data CutFromCursor a
cutFromCursor :: (FindOp a (CutFromCursor ()) (Match r), Op (CutFromCursor ()) r a impl) => Ref a -> impl
data CutRange a
cutRange :: (FindOp a (CutRange ()) (Match r), Op (CutRange ()) r a impl) => Ref a -> impl
data InsertWithLength a
insertWithLength :: (FindOp a (InsertWithLength ()) (Match r), Op (InsertWithLength ()) r a impl) => Ref a -> impl
data Undo a
undo :: (FindOp a (Undo ()) (Match r), Op (Undo ()) r a impl) => Ref a -> impl
data CopyCuts a
copyCuts :: (FindOp a (CopyCuts ()) (Match r), Op (CopyCuts ()) r a impl) => Ref a -> impl
data GetCursorColor a
getCursorColor :: (FindOp a (GetCursorColor ()) (Match r), Op (GetCursorColor ()) r a impl) => Ref a -> impl
data SetCursorColor a
setCursorColor :: (FindOp a (SetCursorColor ()) (Match r), Op (SetCursorColor ()) r a impl) => Ref a -> impl
data GetInputType a
getInputType :: (FindOp a (GetInputType ()) (Match r), Op (GetInputType ()) r a impl) => Ref a -> impl
data SetInputType a
setInputType :: (FindOp a (SetInputType ()) (Match r), Op (SetInputType ()) r a impl) => Ref a -> impl
data GetReadonly a
getReadonly :: (FindOp a (GetReadonly ()) (Match r), Op (GetReadonly ()) r a impl) => Ref a -> impl
data SetReadonly a
setReadonly :: (FindOp a (SetReadonly ()) (Match r), Op (SetReadonly ()) r a impl) => Ref a -> impl
data GetWrap a
getWrap :: (FindOp a (GetWrap ()) (Match r), Op (GetWrap ()) r a impl) => Ref a -> impl
data SetWrap a
setWrap :: (FindOp a (SetWrap ()) (Match r), Op (SetWrap ()) r a impl) => Ref a -> impl
data GetTabNav a
getTabNav :: (FindOp a (GetTabNav ()) (Match r), Op (GetTabNav ()) r a impl) => Ref a -> impl
data SetTabNav a
setTabNav :: (FindOp a (SetTabNav ()) (Match r), Op (SetTabNav ()) r a impl) => Ref a -> impl
type ValueInput = CValueInput Valuator
type ValueOutput = CValueOutput Valuator
type Timer = CTimer Widget
data GetDirection a
getDirection :: (FindOp a (GetDirection ()) (Match r), Op (GetDirection ()) r a impl) => Ref a -> impl
data SetDirection a
setDirection :: (FindOp a (SetDirection ()) (Match r), Op (SetDirection ()) r a impl) => Ref a -> impl
data GetSuspended a
getSuspended :: (FindOp a (GetSuspended ()) (Match r), Op (GetSuspended ()) r a impl) => Ref a -> impl
data SetSuspended a
setSuspended :: (FindOp a (SetSuspended ()) (Match r), Op (SetSuspended ()) r a impl) => Ref a -> impl
type HiddenTimer = CHiddenTimer Widget
type ValueTimer = CValueTimer Widget
type Progress = CProgress Widget
type Positioner = CPositioner Widget
data SetXvalue a
setXvalue :: (FindOp a (SetXvalue ()) (Match r), Op (SetXvalue ()) r a impl) => Ref a -> impl
data GetXvalue a
getXvalue :: (FindOp a (GetXvalue ()) (Match r), Op (GetXvalue ()) r a impl) => Ref a -> impl
data SetYvalue a
setYvalue :: (FindOp a (SetYvalue ()) (Match r), Op (SetYvalue ()) r a impl) => Ref a -> impl
data GetYvalue a
getYvalue :: (FindOp a (GetYvalue ()) (Match r), Op (GetYvalue ()) r a impl) => Ref a -> impl
data SetXminimum a
setXminimum :: (FindOp a (SetXminimum ()) (Match r), Op (SetXminimum ()) r a impl) => Ref a -> impl
data GetXminimum a
getXminimum :: (FindOp a (GetXminimum ()) (Match r), Op (GetXminimum ()) r a impl) => Ref a -> impl
data SetYminimum a
setYminimum :: (FindOp a (SetYminimum ()) (Match r), Op (SetYminimum ()) r a impl) => Ref a -> impl
data GetYminimum a
getYminimum :: (FindOp a (GetYminimum ()) (Match r), Op (GetYminimum ()) r a impl) => Ref a -> impl
data SetXmaximum a
setXmaximum :: (FindOp a (SetXmaximum ()) (Match r), Op (SetXmaximum ()) r a impl) => Ref a -> impl
data GetXmaximum a
getXmaximum :: (FindOp a (GetXmaximum ()) (Match r), Op (GetXmaximum ()) r a impl) => Ref a -> impl
data SetYmaximum a
setYmaximum :: (FindOp a (SetYmaximum ()) (Match r), Op (SetYmaximum ()) r a impl) => Ref a -> impl
data GetYmaximum a
getYmaximum :: (FindOp a (GetYmaximum ()) (Match r), Op (GetYmaximum ()) r a impl) => Ref a -> impl
data SetXbounds a
setXbounds :: (FindOp a (SetXbounds ()) (Match r), Op (SetXbounds ()) r a impl) => Ref a -> impl
data SetYbounds a
setYbounds :: (FindOp a (SetYbounds ()) (Match r), Op (SetYbounds ()) r a impl) => Ref a -> impl
data SetXstep a
setXstep :: (FindOp a (SetXstep ()) (Match r), Op (SetXstep ()) r a impl) => Ref a -> impl
data SetYstep a
setYstep :: (FindOp a (SetYstep ()) (Match r), Op (SetYstep ()) r a impl) => Ref a -> impl
type Wizard = CWizard Widget
data Prev a
prev :: (FindOp a (Prev ()) (Match r), Op (Prev ()) r a impl) => Ref a -> impl
type Table = CTable Group
data SetTableBox a
setTableBox :: (FindOp a (SetTableBox ()) (Match r), Op (SetTableBox ()) r a impl) => Ref a -> impl
data GetTableBox a
getTableBox :: (FindOp a (GetTableBox ()) (Match r), Op (GetTableBox ()) r a impl) => Ref a -> impl
data SetRows a
setRows :: (FindOp a (SetRows ()) (Match r), Op (SetRows ()) r a impl) => Ref a -> impl
data GetRows a
getRows :: (FindOp a (GetRows ()) (Match r), Op (GetRows ()) r a impl) => Ref a -> impl
data SetCols a
setCols :: (FindOp a (SetCols ()) (Match r), Op (SetCols ()) r a impl) => Ref a -> impl
data GetCols a
getCols :: (FindOp a (GetCols ()) (Match r), Op (GetCols ()) r a impl) => Ref a -> impl
data GetVisibleCells a
getVisibleCells :: (FindOp a (GetVisibleCells ()) (Match r), Op (GetVisibleCells ()) r a impl) => Ref a -> impl
data IsInteractiveResize a
isInteractiveResize :: (FindOp a (IsInteractiveResize ()) (Match r), Op (IsInteractiveResize ()) r a impl) => Ref a -> impl
data GetRowResize a
getRowResize :: (FindOp a (GetRowResize ()) (Match r), Op (GetRowResize ()) r a impl) => Ref a -> impl
data SetRowResize a
setRowResize :: (FindOp a (SetRowResize ()) (Match r), Op (SetRowResize ()) r a impl) => Ref a -> impl
data GetColResize a
getColResize :: (FindOp a (GetColResize ()) (Match r), Op (GetColResize ()) r a impl) => Ref a -> impl
data SetColResize a
setColResize :: (FindOp a (SetColResize ()) (Match r), Op (SetColResize ()) r a impl) => Ref a -> impl
data GetColResizeMin a
getColResizeMin :: (FindOp a (GetColResizeMin ()) (Match r), Op (GetColResizeMin ()) r a impl) => Ref a -> impl
data SetColResizeMin a
setColResizeMin :: (FindOp a (SetColResizeMin ()) (Match r), Op (SetColResizeMin ()) r a impl) => Ref a -> impl
data GetRowResizeMin a
getRowResizeMin :: (FindOp a (GetRowResizeMin ()) (Match r), Op (GetRowResizeMin ()) r a impl) => Ref a -> impl
data SetRowResizeMin a
setRowResizeMin :: (FindOp a (SetRowResizeMin ()) (Match r), Op (SetRowResizeMin ()) r a impl) => Ref a -> impl
data GetRowHeader a
getRowHeader :: (FindOp a (GetRowHeader ()) (Match r), Op (GetRowHeader ()) r a impl) => Ref a -> impl
data SetRowHeader a
setRowHeader :: (FindOp a (SetRowHeader ()) (Match r), Op (SetRowHeader ()) r a impl) => Ref a -> impl
data GetColHeader a
getColHeader :: (FindOp a (GetColHeader ()) (Match r), Op (GetColHeader ()) r a impl) => Ref a -> impl
data SetColHeader a
setColHeader :: (FindOp a (SetColHeader ()) (Match r), Op (SetColHeader ()) r a impl) => Ref a -> impl
data SetColHeaderHeight a
setColHeaderHeight :: (FindOp a (SetColHeaderHeight ()) (Match r), Op (SetColHeaderHeight ()) r a impl) => Ref a -> impl
data GetColHeaderHeight a
getColHeaderHeight :: (FindOp a (GetColHeaderHeight ()) (Match r), Op (GetColHeaderHeight ()) r a impl) => Ref a -> impl
data SetRowHeaderWidth a
setRowHeaderWidth :: (FindOp a (SetRowHeaderWidth ()) (Match r), Op (SetRowHeaderWidth ()) r a impl) => Ref a -> impl
data GetRowHeaderWidth a
getRowHeaderWidth :: (FindOp a (GetRowHeaderWidth ()) (Match r), Op (GetRowHeaderWidth ()) r a impl) => Ref a -> impl
data SetRowHeaderColor a
setRowHeaderColor :: (FindOp a (SetRowHeaderColor ()) (Match r), Op (SetRowHeaderColor ()) r a impl) => Ref a -> impl
data GetRowHeaderColor a
getRowHeaderColor :: (FindOp a (GetRowHeaderColor ()) (Match r), Op (GetRowHeaderColor ()) r a impl) => Ref a -> impl
data SetColHeaderColor a
setColHeaderColor :: (FindOp a (SetColHeaderColor ()) (Match r), Op (SetColHeaderColor ()) r a impl) => Ref a -> impl
data GetColHeaderColor a
getColHeaderColor :: (FindOp a (GetColHeaderColor ()) (Match r), Op (GetColHeaderColor ()) r a impl) => Ref a -> impl
data SetRowHeight a
setRowHeight :: (FindOp a (SetRowHeight ()) (Match r), Op (SetRowHeight ()) r a impl) => Ref a -> impl
data GetRowHeight a
getRowHeight :: (FindOp a (GetRowHeight ()) (Match r), Op (GetRowHeight ()) r a impl) => Ref a -> impl
data SetColWidth a
setColWidth :: (FindOp a (SetColWidth ()) (Match r), Op (SetColWidth ()) r a impl) => Ref a -> impl
data GetColWidth a
getColWidth :: (FindOp a (GetColWidth ()) (Match r), Op (GetColWidth ()) r a impl) => Ref a -> impl
data SetRowHeightAll a
setRowHeightAll :: (FindOp a (SetRowHeightAll ()) (Match r), Op (SetRowHeightAll ()) r a impl) => Ref a -> impl
data SetColWidthAll a
setColWidthAll :: (FindOp a (SetColWidthAll ()) (Match r), Op (SetColWidthAll ()) r a impl) => Ref a -> impl
data SetRowPosition a
setRowPosition :: (FindOp a (SetRowPosition ()) (Match r), Op (SetRowPosition ()) r a impl) => Ref a -> impl
data SetColPosition a
setColPosition :: (FindOp a (SetColPosition ()) (Match r), Op (SetColPosition ()) r a impl) => Ref a -> impl
data GetRowPosition a
getRowPosition :: (FindOp a (GetRowPosition ()) (Match r), Op (GetRowPosition ()) r a impl) => Ref a -> impl
data GetColPosition a
getColPosition :: (FindOp a (GetColPosition ()) (Match r), Op (GetColPosition ()) r a impl) => Ref a -> impl
data SetTopRow a
setTopRow :: (FindOp a (SetTopRow ()) (Match r), Op (SetTopRow ()) r a impl) => Ref a -> impl
data GetTopRow a
getTopRow :: (FindOp a (GetTopRow ()) (Match r), Op (GetTopRow ()) r a impl) => Ref a -> impl
data IsSelected a
isSelected :: (FindOp a (IsSelected ()) (Match r), Op (IsSelected ()) r a impl) => Ref a -> impl
data GetSelection a
getSelection :: (FindOp a (GetSelection ()) (Match r), Op (GetSelection ()) r a impl) => Ref a -> impl
data SetSelection a
setSelection :: (FindOp a (SetSelection ()) (Match r), Op (SetSelection ()) r a impl) => Ref a -> impl
data MoveCursor a
moveCursor :: (FindOp a (MoveCursor ()) (Match r), Op (MoveCursor ()) r a impl) => Ref a -> impl
data CallbackRow a
callbackRow :: (FindOp a (CallbackRow ()) (Match r), Op (CallbackRow ()) r a impl) => Ref a -> impl
data CallbackCol a
callbackCol :: (FindOp a (CallbackCol ()) (Match r), Op (CallbackCol ()) r a impl) => Ref a -> impl
data CallbackContext a
callbackContext :: (FindOp a (CallbackContext ()) (Match r), Op (CallbackContext ()) r a impl) => Ref a -> impl
data FindCell a
findCell :: (FindOp a (FindCell ()) (Match r), Op (FindCell ()) r a impl) => Ref a -> impl
data ClearSuper a
clearSuper :: (FindOp a (ClearSuper ()) (Match r), Op (ClearSuper ()) r a impl) => Ref a -> impl
data SetRowsSuper a
setRowsSuper :: (FindOp a (SetRowsSuper ()) (Match r), Op (SetRowsSuper ()) r a impl) => Ref a -> impl
data SetColsSuper a
setColsSuper :: (FindOp a (SetColsSuper ()) (Match r), Op (SetColsSuper ()) r a impl) => Ref a -> impl
type TableRow = CTableRow Table
data GetType a
getType :: (FindOp a (GetType ()) (Match r), Op (GetType ()) r a impl) => Ref a -> impl
data GetRowSelected a
getRowSelected :: (FindOp a (GetRowSelected ()) (Match r), Op (GetRowSelected ()) r a impl) => Ref a -> impl
data SelectAllRows a
selectAllRows :: (FindOp a (SelectAllRows ()) (Match r), Op (SelectAllRows ()) r a impl) => Ref a -> impl
type GlWindow = CGlWindow Window
data GetValid a
getValid :: (FindOp a (GetValid ()) (Match r), Op (GetValid ()) r a impl) => Ref a -> impl
data SetValid a
setValid :: (FindOp a (SetValid ()) (Match r), Op (SetValid ()) r a impl) => Ref a -> impl
data Invalidate a
invalidate :: (FindOp a (Invalidate ()) (Match r), Op (Invalidate ()) r a impl) => Ref a -> impl
data GetContextValid a
getContextValid :: (FindOp a (GetContextValid ()) (Match r), Op (GetContextValid ()) r a impl) => Ref a -> impl
data SetContextValid a
setContextValid :: (FindOp a (SetContextValid ()) (Match r), Op (SetContextValid ()) r a impl) => Ref a -> impl
data CanDoWithM a
canDoWithM :: (FindOp a (CanDoWithM ()) (Match r), Op (CanDoWithM ()) r a impl) => Ref a -> impl
data CanDo a
canDo :: (FindOp a (CanDo ()) (Match r), Op (CanDo ()) r a impl) => Ref a -> impl
data GetContext a
getContext :: (FindOp a (GetContext ()) (Match r), Op (GetContext ()) r a impl) => Ref a -> impl
data SetContext a
setContext :: (FindOp a (SetContext ()) (Match r), Op (SetContext ()) r a impl) => Ref a -> impl
data SetContextWithDestroyFlag a
setContextWithDestroyFlag :: (FindOp a (SetContextWithDestroyFlag ()) (Match r), Op (SetContextWithDestroyFlag ()) r a impl) => Ref a -> impl
data SwapBuffers a
swapBuffers :: (FindOp a (SwapBuffers ()) (Match r), Op (SwapBuffers ()) r a impl) => Ref a -> impl
data Ortho a
ortho :: (FindOp a (Ortho ()) (Match r), Op (Ortho ()) r a impl) => Ref a -> impl
data HideOverlay a
hideOverlay :: (FindOp a (HideOverlay ()) (Match r), Op (HideOverlay ()) r a impl) => Ref a -> impl
data MakeOverlayCurrent a
makeOverlayCurrent :: (FindOp a (MakeOverlayCurrent ()) (Match r), Op (MakeOverlayCurrent ()) r a impl) => Ref a -> impl
type Box = CBox Widget
type Browser = CBrowser Group
data Move a
move :: (FindOp a (Move ()) (Match r), Op (Move ()) r a impl) => Ref a -> impl
data Load a
load :: (FindOp a (Load ()) (Match r), Op (Load ()) r a impl) => Ref a -> impl
data Swap a
swap :: (FindOp a (Swap ()) (Match r), Op (Swap ()) r a impl) => Ref a -> impl
data GetTopline a
getTopline :: (FindOp a (GetTopline ()) (Match r), Op (GetTopline ()) r a impl) => Ref a -> impl
data Lineposition a
lineposition :: (FindOp a (Lineposition ()) (Match r), Op (Lineposition ()) r a impl) => Ref a -> impl
data SetTopline a
setTopline :: (FindOp a (SetTopline ()) (Match r), Op (SetTopline ()) r a impl) => Ref a -> impl
data SetBottomline a
setBottomline :: (FindOp a (SetBottomline ()) (Match r), Op (SetBottomline ()) r a impl) => Ref a -> impl
data SetMiddleline a
setMiddleline :: (FindOp a (SetMiddleline ()) (Match r), Op (SetMiddleline ()) r a impl) => Ref a -> impl
data Select a
select :: (FindOp a (Select ()) (Match r), Op (Select ()) r a impl) => Ref a -> impl
data Selected a
selected :: (FindOp a (Selected ()) (Match r), Op (Selected ()) r a impl) => Ref a -> impl
data ShowWidgetLine a
showWidgetLine :: (FindOp a (ShowWidgetLine ()) (Match r), Op (ShowWidgetLine ()) r a impl) => Ref a -> impl
data HideLine a
hideLine :: (FindOp a (HideLine ()) (Match r), Op (HideLine ()) r a impl) => Ref a -> impl
data SetText a
setText :: (FindOp a (SetText ()) (Match r), Op (SetText ()) r a impl) => Ref a -> impl
data GetFormatChar a
getFormatChar :: (FindOp a (GetFormatChar ()) (Match r), Op (GetFormatChar ()) r a impl) => Ref a -> impl
data SetFormatChar a
setFormatChar :: (FindOp a (SetFormatChar ()) (Match r), Op (SetFormatChar ()) r a impl) => Ref a -> impl
data GetColumnChar a
getColumnChar :: (FindOp a (GetColumnChar ()) (Match r), Op (GetColumnChar ()) r a impl) => Ref a -> impl
data SetColumnChar a
setColumnChar :: (FindOp a (SetColumnChar ()) (Match r), Op (SetColumnChar ()) r a impl) => Ref a -> impl
data GetColumnWidths a
getColumnWidths :: (FindOp a (GetColumnWidths ()) (Match r), Op (GetColumnWidths ()) r a impl) => Ref a -> impl
data SetColumnWidths a
setColumnWidths :: (FindOp a (SetColumnWidths ()) (Match r), Op (SetColumnWidths ()) r a impl) => Ref a -> impl
data Displayed a
displayed :: (FindOp a (Displayed ()) (Match r), Op (Displayed ()) r a impl) => Ref a -> impl
data MakeVisible a
makeVisible :: (FindOp a (MakeVisible ()) (Match r), Op (MakeVisible ()) r a impl) => Ref a -> impl
data RemoveIcon a
removeIcon :: (FindOp a (RemoveIcon ()) (Match r), Op (RemoveIcon ()) r a impl) => Ref a -> impl
data SelectOnly a
selectOnly :: (FindOp a (SelectOnly ()) (Match r), Op (SelectOnly ()) r a impl) => Ref a -> impl
data SelectOnlyAndCallback a
selectOnlyAndCallback :: (FindOp a (SelectOnlyAndCallback ()) (Match r), Op (SelectOnlyAndCallback ()) r a impl) => Ref a -> impl
data Deselect a
deselect :: (FindOp a (Deselect ()) (Match r), Op (Deselect ()) r a impl) => Ref a -> impl
data DeselectAndCallback a
deselectAndCallback :: (FindOp a (DeselectAndCallback ()) (Match r), Op (DeselectAndCallback ()) r a impl) => Ref a -> impl
data GetHposition a
getHposition :: (FindOp a (GetHposition ()) (Match r), Op (GetHposition ()) r a impl) => Ref a -> impl
data SetHposition a
setHposition :: (FindOp a (SetHposition ()) (Match r), Op (SetHposition ()) r a impl) => Ref a -> impl
data GetHasScrollbar a
getHasScrollbar :: (FindOp a (GetHasScrollbar ()) (Match r), Op (GetHasScrollbar ()) r a impl) => Ref a -> impl
data SetHasScrollbar a
setHasScrollbar :: (FindOp a (SetHasScrollbar ()) (Match r), Op (SetHasScrollbar ()) r a impl) => Ref a -> impl
data GetScrollbarSize a
getScrollbarSize :: (FindOp a (GetScrollbarSize ()) (Match r), Op (GetScrollbarSize ()) r a impl) => Ref a -> impl
data SetScrollbarSize a
setScrollbarSize :: (FindOp a (SetScrollbarSize ()) (Match r), Op (SetScrollbarSize ()) r a impl) => Ref a -> impl
data GetScrollbarWidth a
getScrollbarWidth :: (FindOp a (GetScrollbarWidth ()) (Match r), Op (GetScrollbarWidth ()) r a impl) => Ref a -> impl
data SetScrollbarWidth a
setScrollbarWidth :: (FindOp a (SetScrollbarWidth ()) (Match r), Op (SetScrollbarWidth ()) r a impl) => Ref a -> impl
data Sort a
sort :: (FindOp a (Sort ()) (Match r), Op (Sort ()) r a impl) => Ref a -> impl
data SortWithSortType a
sortWithSortType :: (FindOp a (SortWithSortType ()) (Match r), Op (SortWithSortType ()) r a impl) => Ref a -> impl
type SelectBrowser = CSelectBrowser Browser
type IntInput = CIntInput Input
type Clock = CClock Widget
data GetValueSinceEpoch a
getValueSinceEpoch :: (FindOp a (GetValueSinceEpoch ()) (Match r), Op (GetValueSinceEpoch ()) r a impl) => Ref a -> impl
type TreePrefs = CTreePrefs Base
data GetItemLabelfont a
getItemLabelfont :: (FindOp a (GetItemLabelfont ()) (Match r), Op (GetItemLabelfont ()) r a impl) => Ref a -> impl
data GetItemLabelsize a
getItemLabelsize :: (FindOp a (GetItemLabelsize ()) (Match r), Op (GetItemLabelsize ()) r a impl) => Ref a -> impl
data SetItemLabelsize a
setItemLabelsize :: (FindOp a (SetItemLabelsize ()) (Match r), Op (SetItemLabelsize ()) r a impl) => Ref a -> impl
data SetItemLabelfgcolor a
setItemLabelfgcolor :: (FindOp a (SetItemLabelfgcolor ()) (Match r), Op (SetItemLabelfgcolor ()) r a impl) => Ref a -> impl
data GetItemLabelbgcolor a
getItemLabelbgcolor :: (FindOp a (GetItemLabelbgcolor ()) (Match r), Op (GetItemLabelbgcolor ()) r a impl) => Ref a -> impl
data SetItemLabelbgcolor a
setItemLabelbgcolor :: (FindOp a (SetItemLabelbgcolor ()) (Match r), Op (SetItemLabelbgcolor ()) r a impl) => Ref a -> impl
data GetLabelfgcolor a
getLabelfgcolor :: (FindOp a (GetLabelfgcolor ()) (Match r), Op (GetLabelfgcolor ()) r a impl) => Ref a -> impl
data SetLabelfgcolor a
setLabelfgcolor :: (FindOp a (SetLabelfgcolor ()) (Match r), Op (SetLabelfgcolor ()) r a impl) => Ref a -> impl
data GetLabelbgcolor a
getLabelbgcolor :: (FindOp a (GetLabelbgcolor ()) (Match r), Op (GetLabelbgcolor ()) r a impl) => Ref a -> impl
data SetLabelbgcolor a
setLabelbgcolor :: (FindOp a (SetLabelbgcolor ()) (Match r), Op (SetLabelbgcolor ()) r a impl) => Ref a -> impl
data GetMarginleft a
getMarginleft :: (FindOp a (GetMarginleft ()) (Match r), Op (GetMarginleft ()) r a impl) => Ref a -> impl
data SetMarginleft a
setMarginleft :: (FindOp a (SetMarginleft ()) (Match r), Op (SetMarginleft ()) r a impl) => Ref a -> impl
data GetMargintop a
getMargintop :: (FindOp a (GetMargintop ()) (Match r), Op (GetMargintop ()) r a impl) => Ref a -> impl
data SetMargintop a
setMargintop :: (FindOp a (SetMargintop ()) (Match r), Op (SetMargintop ()) r a impl) => Ref a -> impl
data GetOpenchildMarginbottom a
getOpenchildMarginbottom :: (FindOp a (GetOpenchildMarginbottom ()) (Match r), Op (GetOpenchildMarginbottom ()) r a impl) => Ref a -> impl
data SetOpenchildMarginbottom a
setOpenchildMarginbottom :: (FindOp a (SetOpenchildMarginbottom ()) (Match r), Op (SetOpenchildMarginbottom ()) r a impl) => Ref a -> impl
data GetUsericonmarginleft a
getUsericonmarginleft :: (FindOp a (GetUsericonmarginleft ()) (Match r), Op (GetUsericonmarginleft ()) r a impl) => Ref a -> impl
data SetUsericonmarginleft a
setUsericonmarginleft :: (FindOp a (SetUsericonmarginleft ()) (Match r), Op (SetUsericonmarginleft ()) r a impl) => Ref a -> impl
data GetLabelmarginleft a
getLabelmarginleft :: (FindOp a (GetLabelmarginleft ()) (Match r), Op (GetLabelmarginleft ()) r a impl) => Ref a -> impl
data SetLabelmarginleft a
setLabelmarginleft :: (FindOp a (SetLabelmarginleft ()) (Match r), Op (SetLabelmarginleft ()) r a impl) => Ref a -> impl
data GetLinespacing a
getLinespacing :: (FindOp a (GetLinespacing ()) (Match r), Op (GetLinespacing ()) r a impl) => Ref a -> impl
data SetLinespacing a
setLinespacing :: (FindOp a (SetLinespacing ()) (Match r), Op (SetLinespacing ()) r a impl) => Ref a -> impl
data GetConnectorcolor a
getConnectorcolor :: (FindOp a (GetConnectorcolor ()) (Match r), Op (GetConnectorcolor ()) r a impl) => Ref a -> impl
data SetConnectorcolor a
setConnectorcolor :: (FindOp a (SetConnectorcolor ()) (Match r), Op (SetConnectorcolor ()) r a impl) => Ref a -> impl
data GetConnectorstyle a
getConnectorstyle :: (FindOp a (GetConnectorstyle ()) (Match r), Op (GetConnectorstyle ()) r a impl) => Ref a -> impl
data SetConnectorstyle a
setConnectorstyle :: (FindOp a (SetConnectorstyle ()) (Match r), Op (SetConnectorstyle ()) r a impl) => Ref a -> impl
data GetConnectorwidth a
getConnectorwidth :: (FindOp a (GetConnectorwidth ()) (Match r), Op (GetConnectorwidth ()) r a impl) => Ref a -> impl
data SetConnectorwidth a
setConnectorwidth :: (FindOp a (SetConnectorwidth ()) (Match r), Op (SetConnectorwidth ()) r a impl) => Ref a -> impl
data GetOpenicon a
getOpenicon :: (FindOp a (GetOpenicon ()) (Match r), Op (GetOpenicon ()) r a impl) => Ref a -> impl
data SetOpenicon a
setOpenicon :: (FindOp a (SetOpenicon ()) (Match r), Op (SetOpenicon ()) r a impl) => Ref a -> impl
data GetCloseicon a
getCloseicon :: (FindOp a (GetCloseicon ()) (Match r), Op (GetCloseicon ()) r a impl) => Ref a -> impl
data SetCloseicon a
setCloseicon :: (FindOp a (SetCloseicon ()) (Match r), Op (SetCloseicon ()) r a impl) => Ref a -> impl
data GetUsericon a
getUsericon :: (FindOp a (GetUsericon ()) (Match r), Op (GetUsericon ()) r a impl) => Ref a -> impl
data SetUsericon a
setUsericon :: (FindOp a (SetUsericon ()) (Match r), Op (SetUsericon ()) r a impl) => Ref a -> impl
data GetShowcollapse a
getShowcollapse :: (FindOp a (GetShowcollapse ()) (Match r), Op (GetShowcollapse ()) r a impl) => Ref a -> impl
data SetShowcollapse a
setShowcollapse :: (FindOp a (SetShowcollapse ()) (Match r), Op (SetShowcollapse ()) r a impl) => Ref a -> impl
data GetSortorder a
getSortorder :: (FindOp a (GetSortorder ()) (Match r), Op (GetSortorder ()) r a impl) => Ref a -> impl
data SetSortorder a
setSortorder :: (FindOp a (SetSortorder ()) (Match r), Op (SetSortorder ()) r a impl) => Ref a -> impl
data GetSelectbox a
getSelectbox :: (FindOp a (GetSelectbox ()) (Match r), Op (GetSelectbox ()) r a impl) => Ref a -> impl
data SetSelectbox a
setSelectbox :: (FindOp a (SetSelectbox ()) (Match r), Op (SetSelectbox ()) r a impl) => Ref a -> impl
data GetShowroot a
getShowroot :: (FindOp a (GetShowroot ()) (Match r), Op (GetShowroot ()) r a impl) => Ref a -> impl
data SetShowroot a
setShowroot :: (FindOp a (SetShowroot ()) (Match r), Op (SetShowroot ()) r a impl) => Ref a -> impl
data GetSelectmode a
getSelectmode :: (FindOp a (GetSelectmode ()) (Match r), Op (GetSelectmode ()) r a impl) => Ref a -> impl
data SetSelectmode a
setSelectmode :: (FindOp a (SetSelectmode ()) (Match r), Op (SetSelectmode ()) r a impl) => Ref a -> impl
type TreeItem = CTreeItem Base
data ShowSelf a
showSelf :: (FindOp a (ShowSelf ()) (Match r), Op (ShowSelf ()) r a impl) => Ref a -> impl
data SetWidget a
setWidget :: (FindOp a (SetWidget ()) (Match r), Op (SetWidget ()) r a impl) => Ref a -> impl
data GetWidget a
getWidget :: (FindOp a (GetWidget ()) (Match r), Op (GetWidget ()) r a impl) => Ref a -> impl
data Child a
child :: (FindOp a (Child ()) (Match r), Op (Child ()) r a impl) => Ref a -> impl
data HasChildren a
hasChildren :: (FindOp a (HasChildren ()) (Match r), Op (HasChildren ()) r a impl) => Ref a -> impl
data FindChild a
findChild :: (FindOp a (FindChild ()) (Match r), Op (FindChild ()) r a impl) => Ref a -> impl
data RemoveChild a
removeChild :: (FindOp a (RemoveChild ()) (Match r), Op (RemoveChild ()) r a impl) => Ref a -> impl
data ClearChildren a
clearChildren :: (FindOp a (ClearChildren ()) (Match r), Op (ClearChildren ()) r a impl) => Ref a -> impl
data SwapChildren a
swapChildren :: (FindOp a (SwapChildren ()) (Match r), Op (SwapChildren ()) r a impl) => Ref a -> impl
data SwapChildrenByTreeItem a
swapChildrenByTreeItem :: (FindOp a (SwapChildrenByTreeItem ()) (Match r), Op (SwapChildrenByTreeItem ()) r a impl) => Ref a -> impl
data FindInChildren a
findInChildren :: (FindOp a (FindInChildren ()) (Match r), Op (FindInChildren ()) r a impl) => Ref a -> impl
data FindItem a
findItem :: (FindOp a (FindItem ()) (Match r), Op (FindItem ()) r a impl) => Ref a -> impl
data AddAt a
addAt :: (FindOp a (AddAt ()) (Match r), Op (AddAt ()) r a impl) => Ref a -> impl
data InsertAbove a
insertAbove :: (FindOp a (InsertAbove ()) (Match r), Op (InsertAbove ()) r a impl) => Ref a -> impl
data Deparent a
deparent :: (FindOp a (Deparent ()) (Match r), Op (Deparent ()) r a impl) => Ref a -> impl
data Reparent a
reparent :: (FindOp a (Reparent ()) (Match r), Op (Reparent ()) r a impl) => Ref a -> impl
data MoveTo a
moveTo :: (FindOp a (MoveTo ()) (Match r), Op (MoveTo ()) r a impl) => Ref a -> impl
data GetDepth a
getDepth :: (FindOp a (GetDepth ()) (Match r), Op (GetDepth ()) r a impl) => Ref a -> impl
data NextSibling a
nextSibling :: (FindOp a (NextSibling ()) (Match r), Op (NextSibling ()) r a impl) => Ref a -> impl
data PrevSibling a
prevSibling :: (FindOp a (PrevSibling ()) (Match r), Op (PrevSibling ()) r a impl) => Ref a -> impl
data UpdatePrevNext a
updatePrevNext :: (FindOp a (UpdatePrevNext ()) (Match r), Op (UpdatePrevNext ()) r a impl) => Ref a -> impl
data NextDisplayed a
nextDisplayed :: (FindOp a (NextDisplayed ()) (Match r), Op (NextDisplayed ()) r a impl) => Ref a -> impl
data PrevDisplayed a
prevDisplayed :: (FindOp a (PrevDisplayed ()) (Match r), Op (PrevDisplayed ()) r a impl) => Ref a -> impl
data Open a
open :: (FindOp a (Open ()) (Match r), Op (Open ()) r a impl) => Ref a -> impl
data Close a
close :: (FindOp a (Close ()) (Match r), Op (Close ()) r a impl) => Ref a -> impl
data IsOpen a
isOpen :: (FindOp a (IsOpen ()) (Match r), Op (IsOpen ()) r a impl) => Ref a -> impl
data IsClose a
isClose :: (FindOp a (IsClose ()) (Match r), Op (IsClose ()) r a impl) => Ref a -> impl
data OpenToggle a
openToggle :: (FindOp a (OpenToggle ()) (Match r), Op (OpenToggle ()) r a impl) => Ref a -> impl
data SelectWithVal a
selectWithVal :: (FindOp a (SelectWithVal ()) (Match r), Op (SelectWithVal ()) r a impl) => Ref a -> impl
data SelectToggle a
selectToggle :: (FindOp a (SelectToggle ()) (Match r), Op (SelectToggle ()) r a impl) => Ref a -> impl
data SelectAll a
selectAll :: (FindOp a (SelectAll ()) (Match r), Op (SelectAll ()) r a impl) => Ref a -> impl
data DeselectAll a
deselectAll :: (FindOp a (DeselectAll ()) (Match r), Op (DeselectAll ()) r a impl) => Ref a -> impl
data ActivateWithVal a
activateWithVal :: (FindOp a (ActivateWithVal ()) (Match r), Op (ActivateWithVal ()) r a impl) => Ref a -> impl
data IsActive a
isActive :: (FindOp a (IsActive ()) (Match r), Op (IsActive ()) r a impl) => Ref a -> impl
data IsVisible a
isVisible :: (FindOp a (IsVisible ()) (Match r), Op (IsVisible ()) r a impl) => Ref a -> impl
data VisibleR a
visibleR :: (FindOp a (VisibleR ()) (Match r), Op (VisibleR ()) r a impl) => Ref a -> impl
data FindClicked a
findClicked :: (FindOp a (FindClicked ()) (Match r), Op (FindClicked ()) r a impl) => Ref a -> impl
data EventOnCollapseIcon a
eventOnCollapseIcon :: (FindOp a (EventOnCollapseIcon ()) (Match r), Op (EventOnCollapseIcon ()) r a impl) => Ref a -> impl
data EventOnLabel a
eventOnLabel :: (FindOp a (EventOnLabel ()) (Match r), Op (EventOnLabel ()) r a impl) => Ref a -> impl
data IsRoot a
isRoot :: (FindOp a (IsRoot ()) (Match r), Op (IsRoot ()) r a impl) => Ref a -> impl
data LabelX a
labelX :: (FindOp a (LabelX ()) (Match r), Op (LabelX ()) r a impl) => Ref a -> impl
data LabelY a
labelY :: (FindOp a (LabelY ()) (Match r), Op (LabelY ()) r a impl) => Ref a -> impl
data LabelW a
labelW :: (FindOp a (LabelW ()) (Match r), Op (LabelW ()) r a impl) => Ref a -> impl
data LabelH a
labelH :: (FindOp a (LabelH ()) (Match r), Op (LabelH ()) r a impl) => Ref a -> impl
type Tree = CTree Group
data RootLabel a
rootLabel :: (FindOp a (RootLabel ()) (Match r), Op (RootLabel ()) r a impl) => Ref a -> impl
data Root a
root :: (FindOp a (Root ()) (Match r), Op (Root ()) r a impl) => Ref a -> impl
data ItemClicked a
itemClicked :: (FindOp a (ItemClicked ()) (Match r), Op (ItemClicked ()) r a impl) => Ref a -> impl
data FirstVisible a
firstVisible :: (FindOp a (FirstVisible ()) (Match r), Op (FirstVisible ()) r a impl) => Ref a -> impl
data NextWithItem a
nextWithItem :: (FindOp a (NextWithItem ()) (Match r), Op (NextWithItem ()) r a impl) => Ref a -> impl
data PrevWithItem a
prevWithItem :: (FindOp a (PrevWithItem ()) (Match r), Op (PrevWithItem ()) r a impl) => Ref a -> impl
data GetLast a
getLast :: (FindOp a (GetLast ()) (Match r), Op (GetLast ()) r a impl) => Ref a -> impl
data LastVisible a
lastVisible :: (FindOp a (LastVisible ()) (Match r), Op (LastVisible ()) r a impl) => Ref a -> impl
data FirstSelectedItem a
firstSelectedItem :: (FindOp a (FirstSelectedItem ()) (Match r), Op (FirstSelectedItem ()) r a impl) => Ref a -> impl
data NextSelectedItem a
nextSelectedItem :: (FindOp a (NextSelectedItem ()) (Match r), Op (NextSelectedItem ()) r a impl) => Ref a -> impl
data NextSelectedItemWithItem a
nextSelectedItemWithItem :: (FindOp a (NextSelectedItemWithItem ()) (Match r), Op (NextSelectedItemWithItem ()) r a impl) => Ref a -> impl
data OpenAndCallback a
openAndCallback :: (FindOp a (OpenAndCallback ()) (Match r), Op (OpenAndCallback ()) r a impl) => Ref a -> impl
data OpenToggleAndCallback a
openToggleAndCallback :: (FindOp a (OpenToggleAndCallback ()) (Match r), Op (OpenToggleAndCallback ()) r a impl) => Ref a -> impl
data TreeMenuItemLocator a
treeMenuItemLocator :: (FindOp a (TreeMenuItemLocator ()) (Match r), Op (TreeMenuItemLocator ()) r a impl) => Ref a -> impl
data CloseAndCallback a
closeAndCallback :: (FindOp a (CloseAndCallback ()) (Match r), Op (CloseAndCallback ()) r a impl) => Ref a -> impl
data SelectAndCallback a
selectAndCallback :: (FindOp a (SelectAndCallback ()) (Match r), Op (SelectAndCallback ()) r a impl) => Ref a -> impl
data SelectToggleAndCallback a
selectToggleAndCallback :: (FindOp a (SelectToggleAndCallback ()) (Match r), Op (SelectToggleAndCallback ()) r a impl) => Ref a -> impl
data SelectAllAndCallback a
selectAllAndCallback :: (FindOp a (SelectAllAndCallback ()) (Match r), Op (SelectAllAndCallback ()) r a impl) => Ref a -> impl
data SetItemFocus a
setItemFocus :: (FindOp a (SetItemFocus ()) (Match r), Op (SetItemFocus ()) r a impl) => Ref a -> impl
data GetItemFocus a
getItemFocus :: (FindOp a (GetItemFocus ()) (Match r), Op (GetItemFocus ()) r a impl) => Ref a -> impl
data IsSelectedWithItem a
isSelectedWithItem :: (FindOp a (IsSelectedWithItem ()) (Match r), Op (IsSelectedWithItem ()) r a impl) => Ref a -> impl
data SetItemLabelfont a
setItemLabelfont :: (FindOp a (SetItemLabelfont ()) (Match r), Op (SetItemLabelfont ()) r a impl) => Ref a -> impl
data GetItemLabelfgcolor a
getItemLabelfgcolor :: (FindOp a (GetItemLabelfgcolor ()) (Match r), Op (GetItemLabelfgcolor ()) r a impl) => Ref a -> impl
data Selectmode a
selectmode :: (FindOp a (Selectmode ()) (Match r), Op (Selectmode ()) r a impl) => Ref a -> impl
data ShowItemWithYoff a
showItemWithYoff :: (FindOp a (ShowItemWithYoff ()) (Match r), Op (ShowItemWithYoff ()) r a impl) => Ref a -> impl
data ShowItemTop a
showItemTop :: (FindOp a (ShowItemTop ()) (Match r), Op (ShowItemTop ()) r a impl) => Ref a -> impl
data ShowItemMiddle a
showItemMiddle :: (FindOp a (ShowItemMiddle ()) (Match r), Op (ShowItemMiddle ()) r a impl) => Ref a -> impl
data ShowItemBottom a
showItemBottom :: (FindOp a (ShowItemBottom ()) (Match r), Op (ShowItemBottom ()) r a impl) => Ref a -> impl
data Display a
display :: (FindOp a (Display ()) (Match r), Op (Display ()) r a impl) => Ref a -> impl
data GetVposition a
getVposition :: (FindOp a (GetVposition ()) (Match r), Op (GetVposition ()) r a impl) => Ref a -> impl
data SetVposition a
setVposition :: (FindOp a (SetVposition ()) (Match r), Op (SetVposition ()) r a impl) => Ref a -> impl
data IsScrollbar a
isScrollbar :: (FindOp a (IsScrollbar ()) (Match r), Op (IsScrollbar ()) r a impl) => Ref a -> impl
data IsVscrollVisible a
isVscrollVisible :: (FindOp a (IsVscrollVisible ()) (Match r), Op (IsVscrollVisible ()) r a impl) => Ref a -> impl
data SetCallbackItem a
setCallbackItem :: (FindOp a (SetCallbackItem ()) (Match r), Op (SetCallbackItem ()) r a impl) => Ref a -> impl
data GetCallbackItem a
getCallbackItem :: (FindOp a (GetCallbackItem ()) (Match r), Op (GetCallbackItem ()) r a impl) => Ref a -> impl
data SetCallbackReason a
setCallbackReason :: (FindOp a (SetCallbackReason ()) (Match r), Op (SetCallbackReason ()) r a impl) => Ref a -> impl
data GetCallbackReason a
getCallbackReason :: (FindOp a (GetCallbackReason ()) (Match r), Op (GetCallbackReason ()) r a impl) => Ref a -> impl
type TextSelection = CTextSelection Base
data Update a
update :: (FindOp a (Update ()) (Match r), Op (Update ()) r a impl) => Ref a -> impl
data Start a
start :: (FindOp a (Start ()) (Match r), Op (Start ()) r a impl) => Ref a -> impl
data SetSelected a
setSelected :: (FindOp a (SetSelected ()) (Match r), Op (SetSelected ()) r a impl) => Ref a -> impl
data Includes a
includes :: (FindOp a (Includes ()) (Match r), Op (Includes ()) r a impl) => Ref a -> impl
type TextBuffer = CTextBuffer Base
data InputFileWasTranscoded a
inputFileWasTranscoded :: (FindOp a (InputFileWasTranscoded ()) (Match r), Op (InputFileWasTranscoded ()) r a impl) => Ref a -> impl
data FileEncodingWarningMessage a
fileEncodingWarningMessage :: (FindOp a (FileEncodingWarningMessage ()) (Match r), Op (FileEncodingWarningMessage ()) r a impl) => Ref a -> impl
data GetLength a
getLength :: (FindOp a (GetLength ()) (Match r), Op (GetLength ()) r a impl) => Ref a -> impl
data TextRange a
textRange :: (FindOp a (TextRange ()) (Match r), Op (TextRange ()) r a impl) => Ref a -> impl
data CharAt a
charAt :: (FindOp a (CharAt ()) (Match r), Op (CharAt ()) r a impl) => Ref a -> impl
data ByteAt a
byteAt :: (FindOp a (ByteAt ()) (Match r), Op (ByteAt ()) r a impl) => Ref a -> impl
data AppendToBuffer a
appendToBuffer :: (FindOp a (AppendToBuffer ()) (Match r), Op (AppendToBuffer ()) r a impl) => Ref a -> impl
data CanUndo a
canUndo :: (FindOp a (CanUndo ()) (Match r), Op (CanUndo ()) r a impl) => Ref a -> impl
data Insertfile a
insertfile :: (FindOp a (Insertfile ()) (Match r), Op (Insertfile ()) r a impl) => Ref a -> impl
data InsertfileWithBuflen a
insertfileWithBuflen :: (FindOp a (InsertfileWithBuflen ()) (Match r), Op (InsertfileWithBuflen ()) r a impl) => Ref a -> impl
data Appendfile a
appendfile :: (FindOp a (Appendfile ()) (Match r), Op (Appendfile ()) r a impl) => Ref a -> impl
data AppendfileWithBuflen a
appendfileWithBuflen :: (FindOp a (AppendfileWithBuflen ()) (Match r), Op (AppendfileWithBuflen ()) r a impl) => Ref a -> impl
data Loadfile a
loadfile :: (FindOp a (Loadfile ()) (Match r), Op (Loadfile ()) r a impl) => Ref a -> impl
data LoadfileWithBuflen a
loadfileWithBuflen :: (FindOp a (LoadfileWithBuflen ()) (Match r), Op (LoadfileWithBuflen ()) r a impl) => Ref a -> impl
data Outputfile a
outputfile :: (FindOp a (Outputfile ()) (Match r), Op (Outputfile ()) r a impl) => Ref a -> impl
data OutputfileWithBuflen a
outputfileWithBuflen :: (FindOp a (OutputfileWithBuflen ()) (Match r), Op (OutputfileWithBuflen ()) r a impl) => Ref a -> impl
data Savefile a
savefile :: (FindOp a (Savefile ()) (Match r), Op (Savefile ()) r a impl) => Ref a -> impl
data SavefileWithBuflen a
savefileWithBuflen :: (FindOp a (SavefileWithBuflen ()) (Match r), Op (SavefileWithBuflen ()) r a impl) => Ref a -> impl
data GetTabDistance a
getTabDistance :: (FindOp a (GetTabDistance ()) (Match r), Op (GetTabDistance ()) r a impl) => Ref a -> impl
data SetTabDistance a
setTabDistance :: (FindOp a (SetTabDistance ()) (Match r), Op (SetTabDistance ()) r a impl) => Ref a -> impl
data Unselect a
unselect :: (FindOp a (Unselect ()) (Match r), Op (Unselect ()) r a impl) => Ref a -> impl
data SelectionPosition a
selectionPosition :: (FindOp a (SelectionPosition ()) (Match r), Op (SelectionPosition ()) r a impl) => Ref a -> impl
data SelectionText a
selectionText :: (FindOp a (SelectionText ()) (Match r), Op (SelectionText ()) r a impl) => Ref a -> impl
data RemoveSelection a
removeSelection :: (FindOp a (RemoveSelection ()) (Match r), Op (RemoveSelection ()) r a impl) => Ref a -> impl
data ReplaceSelection a
replaceSelection :: (FindOp a (ReplaceSelection ()) (Match r), Op (ReplaceSelection ()) r a impl) => Ref a -> impl
data SecondarySelect a
secondarySelect :: (FindOp a (SecondarySelect ()) (Match r), Op (SecondarySelect ()) r a impl) => Ref a -> impl
data SecondarySelected a
secondarySelected :: (FindOp a (SecondarySelected ()) (Match r), Op (SecondarySelected ()) r a impl) => Ref a -> impl
data SecondaryUnselect a
secondaryUnselect :: (FindOp a (SecondaryUnselect ()) (Match r), Op (SecondaryUnselect ()) r a impl) => Ref a -> impl
data SecondarySelectionPosition a
secondarySelectionPosition :: (FindOp a (SecondarySelectionPosition ()) (Match r), Op (SecondarySelectionPosition ()) r a impl) => Ref a -> impl
data SecondarySelectionText a
secondarySelectionText :: (FindOp a (SecondarySelectionText ()) (Match r), Op (SecondarySelectionText ()) r a impl) => Ref a -> impl
data RemoveSecondarySelection a
removeSecondarySelection :: (FindOp a (RemoveSecondarySelection ()) (Match r), Op (RemoveSecondarySelection ()) r a impl) => Ref a -> impl
data ReplaceSecondarySelection a
replaceSecondarySelection :: (FindOp a (ReplaceSecondarySelection ()) (Match r), Op (ReplaceSecondarySelection ()) r a impl) => Ref a -> impl
data GetHighlight a
getHighlight :: (FindOp a (GetHighlight ()) (Match r), Op (GetHighlight ()) r a impl) => Ref a -> impl
data SetHighlight a
setHighlight :: (FindOp a (SetHighlight ()) (Match r), Op (SetHighlight ()) r a impl) => Ref a -> impl
data Unhighlight a
unhighlight :: (FindOp a (Unhighlight ()) (Match r), Op (Unhighlight ()) r a impl) => Ref a -> impl
data HighlightPosition a
highlightPosition :: (FindOp a (HighlightPosition ()) (Match r), Op (HighlightPosition ()) r a impl) => Ref a -> impl
data HighlightText a
highlightText :: (FindOp a (HighlightText ()) (Match r), Op (HighlightText ()) r a impl) => Ref a -> impl
data AddModifyCallback a
addModifyCallback :: (FindOp a (AddModifyCallback ()) (Match r), Op (AddModifyCallback ()) r a impl) => Ref a -> impl
data RemoveModifyCallback a
removeModifyCallback :: (FindOp a (RemoveModifyCallback ()) (Match r), Op (RemoveModifyCallback ()) r a impl) => Ref a -> impl
data CallModifyCallbacks a
callModifyCallbacks :: (FindOp a (CallModifyCallbacks ()) (Match r), Op (CallModifyCallbacks ()) r a impl) => Ref a -> impl
data AddPredeleteCallback a
addPredeleteCallback :: (FindOp a (AddPredeleteCallback ()) (Match r), Op (AddPredeleteCallback ()) r a impl) => Ref a -> impl
data RemovePredeleteCallback a
removePredeleteCallback :: (FindOp a (RemovePredeleteCallback ()) (Match r), Op (RemovePredeleteCallback ()) r a impl) => Ref a -> impl
data CallPredeleteCallbacks a
callPredeleteCallbacks :: (FindOp a (CallPredeleteCallbacks ()) (Match r), Op (CallPredeleteCallbacks ()) r a impl) => Ref a -> impl
data LineText a
lineText :: (FindOp a (LineText ()) (Match r), Op (LineText ()) r a impl) => Ref a -> impl
data LineStart a
lineStart :: (FindOp a (LineStart ()) (Match r), Op (LineStart ()) r a impl) => Ref a -> impl
data LineEnd a
lineEnd :: (FindOp a (LineEnd ()) (Match r), Op (LineEnd ()) r a impl) => Ref a -> impl
data WordStart a
wordStart :: (FindOp a (WordStart ()) (Match r), Op (WordStart ()) r a impl) => Ref a -> impl
data WordEnd a
wordEnd :: (FindOp a (WordEnd ()) (Match r), Op (WordEnd ()) r a impl) => Ref a -> impl
data CountDisplayedCharacters a
countDisplayedCharacters :: (FindOp a (CountDisplayedCharacters ()) (Match r), Op (CountDisplayedCharacters ()) r a impl) => Ref a -> impl
data SkipDisplayedCharacters a
skipDisplayedCharacters :: (FindOp a (SkipDisplayedCharacters ()) (Match r), Op (SkipDisplayedCharacters ()) r a impl) => Ref a -> impl
data CountLines a
countLines :: (FindOp a (CountLines ()) (Match r), Op (CountLines ()) r a impl) => Ref a -> impl
data SkipLines a
skipLines :: (FindOp a (SkipLines ()) (Match r), Op (SkipLines ()) r a impl) => Ref a -> impl
data RewindLines a
rewindLines :: (FindOp a (RewindLines ()) (Match r), Op (RewindLines ()) r a impl) => Ref a -> impl
data FindcharForward a
findcharForward :: (FindOp a (FindcharForward ()) (Match r), Op (FindcharForward ()) r a impl) => Ref a -> impl
data FindcharBackward a
findcharBackward :: (FindOp a (FindcharBackward ()) (Match r), Op (FindcharBackward ()) r a impl) => Ref a -> impl
data SearchForwardWithMatchcase a
searchForwardWithMatchcase :: (FindOp a (SearchForwardWithMatchcase ()) (Match r), Op (SearchForwardWithMatchcase ()) r a impl) => Ref a -> impl
data SearchBackwardWithMatchcase a
searchBackwardWithMatchcase :: (FindOp a (SearchBackwardWithMatchcase ()) (Match r), Op (SearchBackwardWithMatchcase ()) r a impl) => Ref a -> impl
data PrimarySelection a
primarySelection :: (FindOp a (PrimarySelection ()) (Match r), Op (PrimarySelection ()) r a impl) => Ref a -> impl
data SecondarySelection a
secondarySelection :: (FindOp a (SecondarySelection ()) (Match r), Op (SecondarySelection ()) r a impl) => Ref a -> impl
data HighlightSelection a
highlightSelection :: (FindOp a (HighlightSelection ()) (Match r), Op (HighlightSelection ()) r a impl) => Ref a -> impl
data PrevChar a
prevChar :: (FindOp a (PrevChar ()) (Match r), Op (PrevChar ()) r a impl) => Ref a -> impl
data PrevCharClipped a
prevCharClipped :: (FindOp a (PrevCharClipped ()) (Match r), Op (PrevCharClipped ()) r a impl) => Ref a -> impl
data NextChar a
nextChar :: (FindOp a (NextChar ()) (Match r), Op (NextChar ()) r a impl) => Ref a -> impl
data NextCharClipped a
nextCharClipped :: (FindOp a (NextCharClipped ()) (Match r), Op (NextCharClipped ()) r a impl) => Ref a -> impl
data Utf8Align a
utf8Align :: (FindOp a (Utf8Align ()) (Match r), Op (Utf8Align ()) r a impl) => Ref a -> impl
type TextDisplay = CTextDisplay Group
data SetBuffer a
setBuffer :: (FindOp a (SetBuffer ()) (Match r), Op (SetBuffer ()) r a impl) => Ref a -> impl
data GetBuffer a
getBuffer :: (FindOp a (GetBuffer ()) (Match r), Op (GetBuffer ()) r a impl) => Ref a -> impl
data RedisplayRange a
redisplayRange :: (FindOp a (RedisplayRange ()) (Match r), Op (RedisplayRange ()) r a impl) => Ref a -> impl
data Scroll a
scroll :: (FindOp a (Scroll ()) (Match r), Op (Scroll ()) r a impl) => Ref a -> impl
data Overstrike a
overstrike :: (FindOp a (Overstrike ()) (Match r), Op (Overstrike ()) r a impl) => Ref a -> impl
data SetInsertPosition a
setInsertPosition :: (FindOp a (SetInsertPosition ()) (Match r), Op (SetInsertPosition ()) r a impl) => Ref a -> impl
data GetInsertPosition a
getInsertPosition :: (FindOp a (GetInsertPosition ()) (Match r), Op (GetInsertPosition ()) r a impl) => Ref a -> impl
data PositionToXy a
positionToXy :: (FindOp a (PositionToXy ()) (Match r), Op (PositionToXy ()) r a impl) => Ref a -> impl
data InSelection a
inSelection :: (FindOp a (InSelection ()) (Match r), Op (InSelection ()) r a impl) => Ref a -> impl
data ShowInsertPosition a
showInsertPosition :: (FindOp a (ShowInsertPosition ()) (Match r), Op (ShowInsertPosition ()) r a impl) => Ref a -> impl
data MoveRight a
moveRight :: (FindOp a (MoveRight ()) (Match r), Op (MoveRight ()) r a impl) => Ref a -> impl
data MoveLeft a
moveLeft :: (FindOp a (MoveLeft ()) (Match r), Op (MoveLeft ()) r a impl) => Ref a -> impl
data MoveUp a
moveUp :: (FindOp a (MoveUp ()) (Match r), Op (MoveUp ()) r a impl) => Ref a -> impl
data MoveDown a
moveDown :: (FindOp a (MoveDown ()) (Match r), Op (MoveDown ()) r a impl) => Ref a -> impl
data NextWord a
nextWord :: (FindOp a (NextWord ()) (Match r), Op (NextWord ()) r a impl) => Ref a -> impl
data PreviousWord a
previousWord :: (FindOp a (PreviousWord ()) (Match r), Op (PreviousWord ()) r a impl) => Ref a -> impl
data ShowCursor a
showCursor :: (FindOp a (ShowCursor ()) (Match r), Op (ShowCursor ()) r a impl) => Ref a -> impl
data SetCursorStyle a
setCursorStyle :: (FindOp a (SetCursorStyle ()) (Match r), Op (SetCursorStyle ()) r a impl) => Ref a -> impl
data GetScrollbarAlign a
getScrollbarAlign :: (FindOp a (GetScrollbarAlign ()) (Match r), Op (GetScrollbarAlign ()) r a impl) => Ref a -> impl
data SetScrollbarAlign a
setScrollbarAlign :: (FindOp a (SetScrollbarAlign ()) (Match r), Op (SetScrollbarAlign ()) r a impl) => Ref a -> impl
data HighlightData a
highlightData :: (FindOp a (HighlightData ()) (Match r), Op (HighlightData ()) r a impl) => Ref a -> impl
data PositionStyle a
positionStyle :: (FindOp a (PositionStyle ()) (Match r), Op (PositionStyle ()) r a impl) => Ref a -> impl
data XToCol a
xToCol :: (FindOp a (XToCol ()) (Match r), Op (XToCol ()) r a impl) => Ref a -> impl
data ColToX a
colToX :: (FindOp a (ColToX ()) (Match r), Op (ColToX ()) r a impl) => Ref a -> impl
data SetLinenumberWidth a
setLinenumberWidth :: (FindOp a (SetLinenumberWidth ()) (Match r), Op (SetLinenumberWidth ()) r a impl) => Ref a -> impl
data GetLinenumberWidth a
getLinenumberWidth :: (FindOp a (GetLinenumberWidth ()) (Match r), Op (GetLinenumberWidth ()) r a impl) => Ref a -> impl
data SetLinenumberFont a
setLinenumberFont :: (FindOp a (SetLinenumberFont ()) (Match r), Op (SetLinenumberFont ()) r a impl) => Ref a -> impl
data GetLinenumberFont a
getLinenumberFont :: (FindOp a (GetLinenumberFont ()) (Match r), Op (GetLinenumberFont ()) r a impl) => Ref a -> impl
data SetLinenumberSize a
setLinenumberSize :: (FindOp a (SetLinenumberSize ()) (Match r), Op (SetLinenumberSize ()) r a impl) => Ref a -> impl
data GetLinenumberSize a
getLinenumberSize :: (FindOp a (GetLinenumberSize ()) (Match r), Op (GetLinenumberSize ()) r a impl) => Ref a -> impl
data SetLinenumberFgcolor a
setLinenumberFgcolor :: (FindOp a (SetLinenumberFgcolor ()) (Match r), Op (SetLinenumberFgcolor ()) r a impl) => Ref a -> impl
data GetLinenumberFgcolor a
getLinenumberFgcolor :: (FindOp a (GetLinenumberFgcolor ()) (Match r), Op (GetLinenumberFgcolor ()) r a impl) => Ref a -> impl
data SetLinenumberBgcolor a
setLinenumberBgcolor :: (FindOp a (SetLinenumberBgcolor ()) (Match r), Op (SetLinenumberBgcolor ()) r a impl) => Ref a -> impl
data GetLinenumberBgcolor a
getLinenumberBgcolor :: (FindOp a (GetLinenumberBgcolor ()) (Match r), Op (GetLinenumberBgcolor ()) r a impl) => Ref a -> impl
data SetLinenumberAlign a
setLinenumberAlign :: (FindOp a (SetLinenumberAlign ()) (Match r), Op (SetLinenumberAlign ()) r a impl) => Ref a -> impl
data GetLinenumberAlign a
getLinenumberAlign :: (FindOp a (GetLinenumberAlign ()) (Match r), Op (GetLinenumberAlign ()) r a impl) => Ref a -> impl
data SetLinenumberFormat a
setLinenumberFormat :: (FindOp a (SetLinenumberFormat ()) (Match r), Op (SetLinenumberFormat ()) r a impl) => Ref a -> impl
data GetLinenumberFormat a
getLinenumberFormat :: (FindOp a (GetLinenumberFormat ()) (Match r), Op (GetLinenumberFormat ()) r a impl) => Ref a -> impl
type TextEditor = CTextEditor TextDisplay
data SetInsertMode a
setInsertMode :: (FindOp a (SetInsertMode ()) (Match r), Op (SetInsertMode ()) r a impl) => Ref a -> impl
data GetInsertMode a
getInsertMode :: (FindOp a (GetInsertMode ()) (Match r), Op (GetInsertMode ()) r a impl) => Ref a -> impl
data GetDefaultKeyBindings a
getDefaultKeyBindings :: (FindOp a (GetDefaultKeyBindings ()) (Match r), Op (GetDefaultKeyBindings ()) r a impl) => Ref a -> impl
data ReplaceKeyBindings a
replaceKeyBindings :: (FindOp a (ReplaceKeyBindings ()) (Match r), Op (ReplaceKeyBindings ()) r a impl) => Ref a -> impl
type NativeFileChooser = CNativeFileChooser Base
data SetOptions a
setOptions :: (FindOp a (SetOptions ()) (Match r), Op (SetOptions ()) r a impl) => Ref a -> impl
data GetOptions a
getOptions :: (FindOp a (GetOptions ()) (Match r), Op (GetOptions ()) r a impl) => Ref a -> impl
data GetFilename a
getFilename :: (FindOp a (GetFilename ()) (Match r), Op (GetFilename ()) r a impl) => Ref a -> impl
data GetFilenameAt a
getFilenameAt :: (FindOp a (GetFilenameAt ()) (Match r), Op (GetFilenameAt ()) r a impl) => Ref a -> impl
data SetDirectory a
setDirectory :: (FindOp a (SetDirectory ()) (Match r), Op (SetDirectory ()) r a impl) => Ref a -> impl
data GetDirectory a
getDirectory :: (FindOp a (GetDirectory ()) (Match r), Op (GetDirectory ()) r a impl) => Ref a -> impl
data SetTitle a
setTitle :: (FindOp a (SetTitle ()) (Match r), Op (SetTitle ()) r a impl) => Ref a -> impl
data GetTitle a
getTitle :: (FindOp a (GetTitle ()) (Match r), Op (GetTitle ()) r a impl) => Ref a -> impl
data GetFilter a
getFilter :: (FindOp a (GetFilter ()) (Match r), Op (GetFilter ()) r a impl) => Ref a -> impl
data SetFilter a
setFilter :: (FindOp a (SetFilter ()) (Match r), Op (SetFilter ()) r a impl) => Ref a -> impl
data Filters a
filters :: (FindOp a (Filters ()) (Match r), Op (Filters ()) r a impl) => Ref a -> impl
data SetFilterValue a
setFilterValue :: (FindOp a (SetFilterValue ()) (Match r), Op (SetFilterValue ()) r a impl) => Ref a -> impl
data GetFilterValue a
getFilterValue :: (FindOp a (GetFilterValue ()) (Match r), Op (GetFilterValue ()) r a impl) => Ref a -> impl
data SetPresetFile a
setPresetFile :: (FindOp a (SetPresetFile ()) (Match r), Op (SetPresetFile ()) r a impl) => Ref a -> impl
data GetPresetFile a
getPresetFile :: (FindOp a (GetPresetFile ()) (Match r), Op (GetPresetFile ()) r a impl) => Ref a -> impl
data GetErrmsg a
getErrmsg :: (FindOp a (GetErrmsg ()) (Match r), Op (GetErrmsg ()) r a impl) => Ref a -> impl
instance Functions NativeFileChooser NativeFileChooserFuncs
instance Functions TextEditor TextEditorFuncs
instance Functions TextDisplay TextDisplayFuncs
instance Functions TextBuffer TextBufferFuncs
instance Functions TextSelection TextSelectionFuncs
instance Functions Tree TreeFuncs
instance Functions TreeItem TreeItemFuncs
instance Functions TreePrefs TreePrefsFuncs
instance Functions Clock ClockFuncs
instance Functions IntInput ()
instance Functions SelectBrowser ()
instance Functions Browser BrowserFuncs
instance Functions Box ()
instance Functions GlWindow GlWindowFuncs
instance Functions TableRow TableRowFuncs
instance Functions Table TableFuncs
instance Functions Wizard WizardFuncs
instance Functions Positioner PositionerFuncs
instance Functions Progress ProgressFuncs
instance Functions ValueTimer ()
instance Functions HiddenTimer ()
instance Functions Timer TimerFuncs
instance Functions ValueOutput ValueOutputFuncs
instance Functions ValueInput ValueInputFuncs
instance Functions Input InputFuncs
instance Functions HorValueSlider ()
instance Functions ValueSlider ValueSliderFuncs
instance Functions Scrollbar ScrollbarFuncs
instance Functions SimpleCounter ()
instance Functions Counter CounterFuncs
instance Functions Roller RollerFuncs
instance Functions LineDial ()
instance Functions FillDial ()
instance Functions Dial DialFuncs
instance Functions Adjuster AdjusterFuncs
instance Functions ImageSurface ImageSurfaceFuncs
instance Functions CopySurface CopySurfaceFuncs
instance Functions Pixmap PixmapFuncs
instance Functions Bitmap BitmapFuncs
instance Functions Image ImageFuncs
instance Functions MenuButton MenuButtonFuncs
instance Functions Choice ChoiceFuncs
instance Functions SysMenuBar SysMenuBarFuncs
instance Functions MenuPrim MenuPrimFuncs
instance Functions MenuItem MenuItemFuncs
instance Functions HorNiceSlider ()
instance Functions NiceSlider ()
instance Functions HorFillSlider ()
instance Functions HorSlider ()
instance Functions FillSlider ()
instance Functions Slider SliderFuncs
instance Functions Valuator ValuatorFuncs
instance Functions ToggleButton ToggleButtonFuncs
instance Functions RepeatButton RepeatButtonFuncs
instance Functions RoundButton RoundButtonFuncs
instance Functions ReturnButton ReturnButtonFuncs
instance Functions CheckButton CheckButtonFuncs
instance Functions RadioLightButton ()
instance Functions LightButton LightButtonFuncs
instance Functions Button ButtonFuncs
instance Functions OverlayWindow OverlayWindowFuncs
instance Functions DoubleWindow DoubleWindowFuncs
instance Functions SingleWindow SingleWindowFuncs
instance Functions Window WindowFuncs
instance Functions Group GroupFuncs
instance Functions Widget WidgetFuncs
instance Functions GlContext ()
instance Functions Region ()

module Graphics.UI.FLTK.LowLevel.Utils
mkWidgetCallbackPtr :: CallbackWithUserDataPrim -> IO (FunPtr CallbackWithUserDataPrim)
mkCallbackPtr :: CallbackPrim -> IO (FunPtr CallbackPrim)
mkColorAverageCallbackPtr :: ColorAverageCallbackPrim -> IO (FunPtr ColorAverageCallbackPrim)
mkGlobalEventHandlerPtr :: GlobalEventHandlerPrim -> IO (FunPtr GlobalEventHandlerPrim)
mkDrawCallbackPrimPtr :: DrawCallbackPrim -> IO (FunPtr DrawCallbackPrim)
mkImageDrawCallbackPrimPtr :: ImageDrawCallbackPrim -> IO (FunPtr ImageDrawCallbackPrim)
mkImageCopyCallbackPrimPtr :: ImageCopyCallbackPrim -> IO (FunPtr ImageCopyCallbackPrim)
mkUnfinishedStyleCbPrim :: UnfinishedStyleCbPrim -> IO (FunPtr UnfinishedStyleCbPrim)
mkFinalizer :: (Ptr a -> IO ()) -> IO (FinalizerPtr a)
mkFinalizerEnv :: (Ptr env -> Ptr a -> IO ()) -> IO (FinalizerEnvPtr env a)
wrapBoxDrawFPrim :: BoxDrawFPrim -> IO (FunPtr BoxDrawFPrim)
unwrapGlobalCallbackPtr :: FunPtr GlobalCallback -> GlobalCallback
unwrapBoxDrawFPrim :: FunPtr BoxDrawFPrim -> BoxDrawFPrim
mkTextModifyCb :: TextModifyCbPrim -> IO (FunPtr TextModifyCbPrim)
mkTextPredeleteCb :: TextPredeleteCbPrim -> IO (FunPtr TextPredeleteCbPrim)
toCallbackPrim :: (Ref a -> IO ()) -> IO (FunPtr (Ptr () -> IO ()))
toCallbackPrimWithUserData :: (Ref a -> IO ()) -> IO (FunPtr (Ptr () -> Ptr () -> IO ()))
cFromEnum :: (Enum a, Integral b) => a -> b
cToEnum :: (Integral b, Enum a) => b -> a
cToBool :: (Eq a, Num a) => a -> Bool
cFromBool :: (Eq a, Num a) => Bool -> a
toFunPtr :: (a -> FunPtr a) -> a -> FunPtr a
extract :: Enum a => [a] -> CInt -> [a]
combine :: (Enum a, Ord a) => [a] -> Int
masks :: CInt -> CInt -> Bool
keySequenceToCInt :: [EventState] -> KeyType -> CInt
wrapNonNull :: Ptr a -> String -> IO (ForeignPtr (Ptr a))
toGlobalEventHandlerPrim :: GlobalEventHandlerF -> IO (FunPtr GlobalEventHandlerPrim)
toGlobalCallbackPrim :: GlobalCallback -> IO (FunPtr CallbackPrim)
toDrawCallback :: DrawCallback -> IO (FunPtr DrawCallbackPrim)
toBoxDrawF :: BoxDrawFPrim -> BoxDrawF
toBoxDrawFPrim :: BoxDrawF -> BoxDrawFPrim
toTextModifyCbPrim :: TextModifyCb -> IO (FunPtr TextModifyCbPrim)
toTextPredeleteCbPrim :: TextPredeleteCb -> IO (FunPtr TextPredeleteCbPrim)
toUnfinishedStyleCbPrim :: UnfinishedStyleCb -> IO (FunPtr UnfinishedStyleCbPrim)
orNullFunPtr :: (a -> IO (FunPtr b)) -> Maybe a -> IO (FunPtr b)
arrayToRefs :: (Ptr (Ptr ())) -> Int -> IO [(Ref a)]
refOrError :: String -> Ptr () -> IO (Ref b)
toShortcut :: [KeyType] -> FlShortcut
cToKeyType :: CInt -> KeyType
cFromKeyType :: KeyType -> CInt
toRef :: Ptr () -> IO (Ref a)
unsafeToRef :: Ptr () -> (Ref a)
unsafeToCString :: String -> CString
toMaybeRef :: Ptr () -> IO (Maybe (Ref a))
supressWarningAboutRes :: a -> ()
foldl1WithDefault :: a -> (a -> a -> a) -> [a] -> a
integralToMaybe :: (Integral a, Integral b) => a -> Maybe b
countDirectionToCChar :: CountDirection -> CChar
ccharToCountDirection :: CChar -> CountDirection
oneKb :: Int
alignmentsToInt :: Alignments -> Int
intToAlignments :: Int -> Alignments
menuItemFlagsToInt :: MenuItemFlags -> Int
intToMenuItemFlags :: Int -> MenuItemFlags
withByteStrings :: [ByteString] -> (Ptr (Ptr CChar) -> IO a) -> IO a
withPixmap :: PixmapHs -> ((Ptr (Ptr CChar)) -> IO a) -> IO a
withBitmap :: BitmapHs -> ((Ptr CChar) -> Int -> Int -> IO a) -> IO a
withStrings :: [String] -> (Ptr (Ptr CChar) -> IO a) -> IO a

module Graphics.UI.FLTK.LowLevel.Adjuster
adjusterNew :: Rectangle -> Maybe String -> IO (Ref Adjuster)
instance impl ~ (Int -> IO ()) => Op (SetSoft ()) Adjuster orig impl
instance impl ~ IO Int => Op (GetSoft ()) Adjuster orig impl
instance impl ~ IO () => Op (Destroy ()) Adjuster orig impl

module Graphics.UI.FLTK.LowLevel.Bitmap
bitmapNew :: BitmapHs -> IO (Ref Bitmap)
instance impl ~ IO () => Op (Uncache ()) Bitmap orig impl
instance impl ~ (Position -> IO ()) => Op (Draw ()) Bitmap orig impl
instance impl ~ (Position -> Size -> Maybe X -> Maybe Y -> IO ()) => Op (DrawResize ()) Bitmap orig impl
instance impl ~ IO () => Op (Desaturate ()) Bitmap orig impl
instance impl ~ IO () => Op (Inactive ()) Bitmap orig impl
instance impl ~ (Color -> Float -> IO ()) => Op (ColorAverage ()) Bitmap orig impl
instance impl ~ (Maybe Size -> IO (Ref Bitmap)) => Op (Copy ()) Bitmap orig impl
instance impl ~ IO Int => Op (GetCount ()) Bitmap orig impl
instance impl ~ IO Int => Op (GetLd ()) Bitmap orig impl
instance impl ~ IO Int => Op (GetD ()) Bitmap orig impl
instance impl ~ IO Int => Op (GetH ()) Bitmap orig impl
instance impl ~ IO Int => Op (GetW ()) Bitmap orig impl
instance impl ~ IO () => Op (Destroy ()) Bitmap orig impl

module Graphics.UI.FLTK.LowLevel.CheckButton
checkButtonNew :: Rectangle -> Maybe String -> IO (Ref CheckButton)
instance impl ~ IO () => Op (Destroy ()) CheckButton orig impl

module Graphics.UI.FLTK.LowLevel.Clock
data ClockType
SquareClock :: ClockType
AnalogClock :: ClockType
DigitalClock :: ClockType
RoundClock :: ClockType
clockNew :: Rectangle -> Maybe String -> IO (Ref Clock)
clockNewWithType :: ClockType -> Rectangle -> String -> IO (Ref Clock)
newtype Hour
Hour :: Int -> Hour
newtype Minute
Minute :: Int -> Minute
newtype Second
Second :: Int -> Second
data ClockByTime
ClockByTime :: Hour -> Minute -> Second -> ClockByTime
data ClockSinceEpoch
ClockSinceEpoch :: Second -> ClockSinceEpoch
data ClockSetTimeType
ClockSetByTime :: ClockByTime -> ClockSetTimeType
ClockSetSinceEpoch :: ClockSinceEpoch -> ClockSetTimeType
instance impl ~ (Event -> IO Int) => Op (Handle ()) Clock orig impl
instance impl ~ IO ClockByTime => Op (GetValue ()) Clock orig impl
instance impl ~ IO ClockSinceEpoch => Op (GetValueSinceEpoch ()) Clock orig impl
instance impl ~ (ClockSetTimeType -> IO ()) => Op (SetValue ()) Clock orig impl
instance Enum ClockType

module Graphics.UI.FLTK.LowLevel.CopySurface
copySurfaceNew :: Size -> IO (Ref CopySurface)
instance (Parent a Widget, impl ~ (Ref a -> Position -> IO ())) => Op (Draw ()) CopySurface orig impl
instance impl ~ IO () => Op (SetCurrent ()) CopySurface orig impl
instance impl ~ IO String => Op (ClassName ()) Image orig impl
instance impl ~ IO () => Op (Destroy ()) CopySurface orig impl

module Graphics.UI.FLTK.LowLevel.Counter
counterNew :: Rectangle -> Maybe String -> IO (Ref Counter)
instance impl ~ IO Color => Op (GetTextcolor ()) Counter orig impl
instance impl ~ (Color -> IO ()) => Op (SetTextcolor ()) Counter orig impl
instance impl ~ IO FontSize => Op (GetTextsize ()) Counter orig impl
instance impl ~ (FontSize -> IO ()) => Op (SetTextsize ()) Counter orig impl
instance impl ~ IO Font => Op (GetTextfont ()) Counter orig impl
instance impl ~ (Font -> IO ()) => Op (SetTextfont ()) Counter orig impl
instance impl ~ (Double -> IO ()) => Op (SetLstep ()) Counter orig impl
instance impl ~ (Event -> IO Int) => Op (Handle ()) Counter orig impl
instance impl ~ IO () => Op (Destroy ()) Counter orig impl

module Graphics.UI.FLTK.LowLevel.Dial
dialNew :: Rectangle -> Maybe String -> IO (Ref Dial)
instance impl ~ (Angle -> Angle -> IO ()) => Op (SetAngles ()) Dial orig impl
instance impl ~ (Event -> IO Int) => Op (Handle ()) Dial orig impl
instance impl ~ IO Angle => Op (GetAngle2 ()) Dial orig impl
instance impl ~ IO Angle => Op (GetAngle1 ()) Dial orig impl
instance impl ~ (Angle -> IO ()) => Op (SetAngle2 ()) Dial orig impl
instance impl ~ (Angle -> IO ()) => Op (SetAngle1 ()) Dial orig impl
instance impl ~ IO () => Op (Destroy ()) Dial orig impl

module Graphics.UI.FLTK.LowLevel.Draw
flcSetColor :: Color -> IO ()
flcSetColorWithC :: Int -> IO ()
flcSetColorWithRgb :: RGB -> IO ()
flcColor :: IO (Color)
flcPushClip :: Rectangle -> IO ()
flcPushNoClip :: IO ()
flcPopClip :: IO ()
flcNotClipped :: Rectangle -> IO (Int)
flcClipBox :: Rectangle -> IO (Int, Rectangle)
flcRestoreClip :: IO ()
flcSetClipRegion :: Ref Region -> IO ()
flcClipRegion :: IO (Ref Region)
flcPoint :: Position -> IO ()
flcLineStyle :: LineStyle -> Maybe Int -> Maybe String -> IO ()
flcRect :: Rectangle -> IO ()
flcRectWithColor :: Rectangle -> Color -> IO ()
flcRectf :: Rectangle -> IO ()
flcRectfWithColor :: Rectangle -> Color -> IO ()
flcRectfWithRgb :: Rectangle -> RGB -> IO ()
flcLine :: Position -> Position -> IO ()
flcLineWithX2Y2 :: Position -> Int -> Int -> Int -> Int -> IO ()
flcLoop :: Position -> Int -> Int -> Int -> Int -> IO ()
flcLoopWithX3Y3 :: Position -> Int -> Int -> Int -> Int -> Int -> Int -> IO ()
flcPolygon :: Position -> Int -> Int -> Int -> Int -> IO ()
flcPolygonWithX3Y3 :: Position -> Int -> Int -> Int -> Int -> Int -> Int -> IO ()
flcXyline :: Position -> Int -> IO ()
flcXylineWithX2 :: Position -> Int -> Int -> IO ()
flcXylineWithY2X3 :: Position -> Int -> Int -> Int -> IO ()
flcYxlineWithY1 :: Position -> Int -> IO ()
flcYxlineWithY2X2 :: Position -> Int -> Int -> IO ()
flcYxlineWithY2X3 :: Position -> Int -> Int -> Int -> IO ()
flcArcByWidthHeight :: Rectangle -> Double -> Double -> IO ()
flcPie :: Rectangle -> Double -> Double -> IO ()
flcPushMatrix :: IO ()
flcPopMatrix :: IO ()
flcScaleWithY :: ByXY -> IO ()
flcScale :: ByX -> IO ()
flcTranslate :: ByXY -> IO ()
flcRotate :: Double -> IO ()
flcMultMatrix :: Double -> Double -> Double -> Double -> ByXY -> IO ()
flcBeginPoints :: IO ()
flcBeginLine :: IO ()
flcBeginLoop :: IO ()
flcBeginPolygon :: IO ()
flcVertex :: ByXY -> IO ()
flcCurve :: Double -> Double -> Double -> Double -> Double -> Double -> Double -> Double -> IO ()
flcArcByRadius :: ByXY -> Double -> Double -> Double -> IO ()
flcCircle :: ByXY -> Double -> IO ()
flcEndPoints :: IO ()
flcEndLine :: IO ()
flcEndLoop :: IO ()
flcEndPolygon :: IO ()
flcBeginComplexPolygon :: IO ()
flcGap :: IO ()
flcEndComplexPolygon :: IO ()
flcTransformX :: ByXY -> IO (Double)
flcTransformY :: ByXY -> IO (Double)
flcTransformDx :: ByXY -> IO (Double)
flcTransformDy :: ByXY -> IO (Double)
flcTransformedVertex :: Double -> Double -> IO ()
flcSetFont :: Font -> FontSize -> IO ()
flcFont :: IO (Font)
flcSize :: IO (FontSize)
flcHeight :: IO (Int)
flcSetHeight :: Int -> Int -> IO (Int)
flcDescent :: IO (Int)
flcWidth :: String -> IO (Double)
flcWidthWithN :: String -> Int -> IO (Double)
flcWidthWithC :: Int -> IO (Double)
flcTextExtents :: String -> IO (Rectangle)
flcTextExtentsWithN :: String -> Int -> IO (Rectangle)
flcLatin1ToLocal :: String -> IO (String)
flcLatin1ToLocalWithN :: String -> Int -> IO (String)
flcLocalToLatin1 :: String -> IO (String)
flcLocalToLatin1WithN :: String -> Int -> IO (String)
flcMacRomanToLocal :: String -> IO (String)
flcMacRomanToLocalWithN :: String -> Int -> IO (String)
flcLocalToMacRoman :: String -> IO (String)
flcLocalToMacRomanWithN :: String -> Int -> IO (String)
flcDraw :: String -> Position -> IO ()
flcDrawWithAngle :: Int -> String -> Position -> IO ()
flcDrawWithN :: String -> Int -> Position -> IO ()
flcDrawWithNAngle :: Int -> String -> Int -> Position -> IO ()
flcRtlDraw :: String -> Int -> Position -> IO ()
flcMeasure :: String -> Maybe Bool -> IO (Size)
flcDrawInBoxWithImageReference :: Parent a Image => String -> Rectangle -> Alignments -> Maybe DrawCallback -> Ref a -> Maybe Bool -> IO ()
flcDrawInBox :: String -> Rectangle -> Alignments -> Maybe DrawCallback -> Maybe Bool -> IO ()
flcFrame :: String -> Rectangle -> IO ()
flcFrame2 :: String -> Rectangle -> IO ()
flcDrawBox :: Boxtype -> Rectangle -> Color -> IO ()
flcDrawImageBuf :: ByteString -> Rectangle -> Delta -> LineDelta -> IO ()
flcDrawImageMonoBuf :: ByteString -> Rectangle -> Delta -> LineDelta -> IO ()
flcCanDoAlphaBlending :: IO (Bool)
flcReadImage :: Rectangle -> Bool -> IO (ByteString)
flcDrawPixmapWithColor :: PixmapHs -> Position -> Color -> IO (Int)
flcDrawPixmap :: PixmapHs -> Position -> IO (Int)
flcDrawPixmapWithCdataColor :: PixmapHs -> Position -> Color -> IO (Int)
flcDrawPixmapWithCdata :: PixmapHs -> Position -> IO (Int)
flcMeasurePixmap :: PixmapHs -> IO (Int, Size)
flcMeasurePixmapWithCdata :: PixmapHs -> IO (Int, Size)
flcShortcutLabel :: Int -> IO (String)
flcOldShortcut :: String -> IO (Int)
flcOverlayRect :: Rectangle -> IO ()
flcOverlayClear :: IO ()
flcCursorWithFgBg :: Cursor -> Color -> Color -> IO ()
flcCursorWithFg :: Cursor -> Color -> IO ()
flcCursorWithBg :: Cursor -> Color -> IO ()
flcCursor :: Cursor -> IO ()
flcSetStatus :: Rectangle -> IO ()
flcSetSpotWithWin :: Parent a Window => Int -> Int -> Rectangle -> Ref a -> IO ()
flcSetSpot :: Int -> Int -> Rectangle -> IO ()
flcResetSpot :: IO ()
flcDrawSymbol :: String -> Rectangle -> Color -> IO (Int)
instance Show LineStyle
instance Enum LineStyle

module Graphics.UI.FLTK.LowLevel.FillDial
fillDialNew :: Rectangle -> String -> IO (Ref FillDial)

module Graphics.UI.FLTK.LowLevel.FillSlider
fillSliderNew :: Rectangle -> Maybe String -> IO (Ref FillSlider)

module Graphics.UI.FLTK.LowLevel.Group
groupNew :: Rectangle -> Maybe String -> IO (Ref Group)
instance impl ~ (Int -> IO (Ref Widget)) => Op (GetChild ()) Group orig impl
instance impl ~ IO [Ref Widget] => Op (GetArray ()) Group orig impl
instance (Parent a Widget, impl ~ (Ref a -> Ref b -> IO ())) => Op (InsertWithBefore ()) Group orig impl
instance impl ~ IO (Ref Widget) => Op (DdfdesignKludge ()) Group orig impl
instance (Parent a Widget, impl ~ (Ref a -> IO ())) => Op (Focus ()) Group orig impl
instance impl ~ IO Int => Op (ClipChildren ()) Group orig impl
instance impl ~ (Int -> IO ()) => Op (SetClipChildren ()) Group orig impl
instance impl ~ IO Int => Op (Children ()) Group orig impl
instance impl ~ IO () => Op (InitSizes ()) Group orig impl
instance (Parent a Widget, impl ~ (Ref a -> IO ())) => Op (AddResizable ()) Group orig impl
instance impl ~ IO (Maybe (Ref Widget)) => Op (GetResizable ()) Group orig impl
instance impl ~ IO () => Op (SetNotResizable ()) Group orig impl
instance (Parent a Widget, impl ~ (Ref a -> IO ())) => Op (SetResizable ()) Group orig impl
instance impl ~ IO () => Op (Clear ()) Group orig impl
instance (Parent a Widget, impl ~ (Ref a -> IO ())) => Op (RemoveWidget ()) Group orig impl
instance impl ~ (Int -> IO ()) => Op (RemoveIndex ()) Group orig impl
instance (Parent a Widget, impl ~ (Ref a -> Int -> IO ())) => Op (Insert ()) Group orig impl
instance (Parent a Widget, impl ~ (Ref a -> IO ())) => Op (Add ()) Group orig impl
instance (Parent a Widget, impl ~ (Ref a -> IO Int)) => Op (Find ()) Group orig impl
instance impl ~ IO () => Op (End ()) Group orig impl
instance impl ~ IO () => Op (Begin ()) Group orig impl
instance (Parent a Widget, impl ~ (Ref a -> IO ())) => Op (UpdateChild ()) Group orig impl
instance (Parent a Widget, impl ~ (Ref a -> IO ())) => Op (DrawOutsideLabel ()) Group orig impl
instance impl ~ IO () => Op (DrawChildren ()) Group orig impl
instance (Parent a Widget, impl ~ (Ref a -> IO ())) => Op (DrawChild ()) Group orig impl
instance impl ~ IO () => Op (Destroy ()) Group orig impl

module Graphics.UI.FLTK.LowLevel.HorFillSlider
horFillSliderNew :: Rectangle -> Maybe String -> IO (Ref HorFillSlider)

module Graphics.UI.FLTK.LowLevel.HorNiceSlider
horNiceSliderNew :: Rectangle -> Maybe String -> IO (Ref HorNiceSlider)

module Graphics.UI.FLTK.LowLevel.HorSlider
horSliderNew :: Rectangle -> Maybe String -> IO (Ref HorSlider)

module Graphics.UI.FLTK.LowLevel.HorValueSlider
horValueSliderNew :: Rectangle -> Maybe String -> IO (Ref HorValueSlider)

module Graphics.UI.FLTK.LowLevel.Image
data ImageFuncs a b
ImageFuncs :: Maybe (ImageDrawCallback) -> Maybe (ColorAverageCallback) -> Maybe (ImageCopyCallback) -> Maybe (Ref Image -> IO ()) -> Maybe (Ref Image -> IO ()) -> ImageFuncs a b
imageDrawOverride :: ImageFuncs a b -> Maybe (ImageDrawCallback)
imageColorAverageOverride :: ImageFuncs a b -> Maybe (ColorAverageCallback)
imageCopyOverride :: ImageFuncs a b -> Maybe (ImageCopyCallback)
imageDesaturateOverride :: ImageFuncs a b -> Maybe (Ref Image -> IO ())
imageUncacheOverride :: ImageFuncs a b -> Maybe (Ref Image -> IO ())
defaultImageFuncs :: ImageFuncs a b
imageNew :: Size -> Depth -> Maybe (ImageFuncs a b) -> IO (Ref Image)
type ColorAverageCallback = Ref Image -> Color -> Float -> IO ()
type ImageDrawCallback = Ref Image -> Position -> Size -> Maybe X -> Maybe Y -> IO ()
type ImageCopyCallback = Ref Image -> Size -> IO (Ref Image)
toImageDrawCallbackPrim :: ImageDrawCallback -> IO (FunPtr ImageDrawCallbackPrim)
toColorAverageCallbackPrim :: ColorAverageCallback -> IO (FunPtr ColorAverageCallbackPrim)
toImageCopyCallbackPrim :: ImageCopyCallback -> IO (FunPtr ImageCopyCallbackPrim)
instance impl ~ IO () => Op (Uncache ()) Image orig impl
instance impl ~ (Position -> IO ()) => Op (Draw ()) Image orig impl
instance impl ~ (Position -> Size -> Maybe X -> Maybe Y -> IO ()) => Op (DrawResize ()) Image orig impl
instance impl ~ IO () => Op (Desaturate ()) Image orig impl
instance impl ~ IO () => Op (Inactive ()) Image orig impl
instance impl ~ (Color -> Float -> IO ()) => Op (ColorAverage ()) Image orig impl
instance impl ~ (Maybe Size -> IO (Ref Image)) => Op (Copy ()) Image orig impl
instance impl ~ IO Int => Op (GetCount ()) Image orig impl
instance impl ~ IO Int => Op (GetLd ()) Image orig impl
instance impl ~ IO Int => Op (GetD ()) Image orig impl
instance impl ~ IO Int => Op (GetH ()) Image orig impl
instance impl ~ IO Int => Op (GetW ()) Image orig impl
instance impl ~ IO () => Op (Destroy ()) Image orig impl

module Graphics.UI.FLTK.LowLevel.ImageSurface
imageSurfaceNew :: Size -> IO (Ref ImageSurface)
instance (Parent a Widget, impl ~ (Ref a -> Position -> IO ())) => Op (Draw ()) ImageSurface orig impl
instance impl ~ IO () => Op (SetCurrent ()) ImageSurface orig impl
instance impl ~ IO String => Op (ClassName ()) ImageSurface orig impl
instance impl ~ IO () => Op (Destroy ()) ImageSurface orig impl

module Graphics.UI.FLTK.LowLevel.Input
data FlInputType
inputNew :: Maybe FlInputType -> Rectangle -> Maybe String -> IO (Ref Input)
instance impl ~ IO Int => Op (SetTabNav ()) Input orig impl
instance impl ~ (Int -> IO ()) => Op (GetTabNav ()) Input orig impl
instance impl ~ (Int -> IO ()) => Op (SetWrap ()) Input orig impl
instance impl ~ IO Int => Op (GetWrap ()) Input orig impl
instance impl ~ (Int -> IO ()) => Op (SetReadonly ()) Input orig impl
instance impl ~ IO Int => Op (GetReadonly ()) Input orig impl
instance impl ~ (Int -> IO ()) => Op (SetInputType ()) Input orig impl
instance impl ~ IO Int => Op (GetInputType ()) Input orig impl
instance impl ~ (Color -> IO ()) => Op (SetCursorColor ()) Input orig impl
instance impl ~ IO Color => Op (GetCursorColor ()) Input orig impl
instance impl ~ (Color -> IO ()) => Op (SetTextcolor ()) Input orig impl
instance impl ~ IO Color => Op (GetTextcolor ()) Input orig impl
instance impl ~ (FontSize -> IO ()) => Op (SetTextsize ()) Input orig impl
instance impl ~ IO FontSize => Op (GetTextsize ()) Input orig impl
instance impl ~ (Font -> IO ()) => Op (SetTextfont ()) Input orig impl
instance impl ~ IO Font => Op (GetTextfont ()) Input orig impl
instance impl ~ (Int -> IO ()) => Op (SetShortcut ()) Input orig impl
instance impl ~ IO Int => Op (GetShortcut ()) Input orig impl
instance impl ~ IO (Either NoChange ()) => Op (CopyCuts ()) Input orig impl
instance impl ~ IO (Either NoChange ()) => Op (Undo ()) Input orig impl
instance impl ~ (Clipboard -> IO (Either NoChange ())) => Op (Copy ()) Input orig impl
instance impl ~ (String -> Int -> IO (Either NoChange ())) => Op (InsertWithLength ()) Input orig impl
instance impl ~ (String -> IO (Either NoChange ())) => Op (Insert ()) Input orig impl
instance impl ~ (Int -> Int -> IO (Either NoChange ())) => Op (CutRange ()) Input orig impl
instance impl ~ (Int -> IO (Either NoChange ())) => Op (CutFromCursor ()) Input orig impl
instance impl ~ IO (Either NoChange ()) => Op (Cut ()) Input orig impl
instance impl ~ (Int -> Int -> String -> IO (Either NoChange ())) => Op (Replace ()) Input orig impl
instance impl ~ (Int -> IO (Either NoChange ())) => Op (SetMark ()) Input orig impl
instance impl ~ (Int -> Maybe Int -> IO (Either NoChange ())) => Op (SetPosition ()) Input orig impl
instance impl ~ IO Int => Op (GetMark ()) Input orig impl
instance impl ~ IO Int => Op (GetPosition ()) Input orig impl
instance impl ~ (Int -> IO ()) => Op (SetMaximumSize ()) Input orig impl
instance impl ~ IO Int => Op (GetSize ()) Input orig impl
instance impl ~ IO Int => Op (GetMaximumSize ()) Input orig impl
instance impl ~ (Size -> IO ()) => Op (SetSize ()) Input orig impl
instance impl ~ (Int -> IO Char) => Op (Index ()) Input orig impl
instance impl ~ IO String => Op (GetValue ()) Input orig impl
instance impl ~ (String -> Maybe Int -> IO (Either NoChange ())) => Op (StaticValue ()) Input orig impl
instance impl ~ (String -> Maybe Int -> IO Int) => Op (SetValue ()) Input orig impl
instance impl ~ (Event -> IO Int) => Op (Handle ()) Input orig impl
instance impl ~ IO () => Op (Destroy ()) Input orig impl
instance Enum FlInputType

module Graphics.UI.FLTK.LowLevel.IntInput
intInputNew :: Rectangle -> Maybe String -> IO (Ref IntInput)

module Graphics.UI.FLTK.LowLevel.LightButton
lightButtonNew :: Rectangle -> Maybe String -> IO (Ref LightButton)
instance impl ~ IO () => Op (Destroy ()) LightButton orig impl

module Graphics.UI.FLTK.LowLevel.LineDial
lineDialNew :: Rectangle -> Maybe String -> IO (Ref LineDial)

module Graphics.UI.FLTK.LowLevel.MenuButton
menuButtonNew :: Rectangle -> Maybe String -> IO (Ref MenuButton)
instance impl ~ IO (Ref MenuItem) => Op (Popup ()) MenuButton orig impl
instance impl ~ (Event -> IO Int) => Op (Handle ()) MenuButton orig impl
instance impl ~ IO () => Op (Destroy ()) MenuButton orig impl

module Graphics.UI.FLTK.LowLevel.MenuItem
menuItemNew :: IO (Ref MenuItem)
newtype MenuItemIndex
MenuItemIndex :: Int -> MenuItemIndex
newtype MenuItemName
MenuItemName :: String -> MenuItemName
data MenuItemPointer
MenuItemPointer :: (Ref a) -> MenuItemPointer
data MenuItemReference
MenuItemByIndex :: MenuItemIndex -> MenuItemReference
MenuItemByPointer :: MenuItemPointer -> MenuItemReference
data MenuItemLocator
MenuItemPointerLocator :: MenuItemPointer -> MenuItemLocator
MenuItemNameLocator :: MenuItemName -> MenuItemLocator
instance impl ~ IO Int => Op (GetSize ()) MenuItem orig impl
instance (Parent a MenuItem, impl ~ (Int -> String -> Maybe ShortcutKeySequence -> (Ref a -> IO ()) -> MenuItemFlags -> IO MenuItemIndex)) => Op (Insert ()) MenuItem orig impl
instance (Parent a MenuItem, impl ~ (String -> Maybe Shortcut -> (Ref a -> IO ()) -> MenuItemFlags -> IO MenuItemIndex)) => Op (Add ()) MenuItem orig impl
instance impl ~ (Ref Widget -> IO ()) => Op (DoCallback ()) MenuItem orig impl
instance (Parent a MenuItem, impl ~ (Maybe Int -> Bool -> IO (Ref a))) => Op (FindShortcut ()) MenuItem orig impl
instance (Parent a MenuItem, impl ~ IO (Ref a)) => Op (TestShortcut ()) MenuItem orig impl
instance (Parent a MenuItem, Parent b MenuPrim, Parent c MenuItem, impl ~ (Position -> Maybe String -> Maybe (Ref a) -> Maybe (Ref b) -> IO (Ref c))) => Op (Popup ()) MenuItem orig impl
instance (Parent a MenuPrim, Parent b MenuItem, Parent c MenuItem, impl ~ (Rectangle -> Maybe (Ref a) -> Maybe (Ref b) -> Maybe (Ref c) -> Maybe Bool -> IO (Ref MenuItem))) => Op (Pulldown ()) MenuItem orig impl
instance impl ~ IO String => Op (GetText ()) MenuItem orig impl
instance impl ~ (MenuItemFlags -> IO ()) => Op (SetFlags ()) MenuItem orig impl
instance impl ~ IO MenuItemFlags => Op (GetFlags ()) MenuItem orig impl
instance (Parent a MenuPrim, impl ~ (Rectangle -> Ref a -> IO ())) => Op (Draw ()) MenuItem orig impl
instance (Parent a MenuPrim, impl ~ (Rectangle -> Ref a -> Int -> IO ())) => Op (DrawWithT ()) MenuItem orig impl
instance (Parent a MenuPrim, impl ~ (Ref a -> IO Size)) => Op (Measure ()) MenuItem orig impl
instance impl ~ IO Bool => Op (Activevisible ()) MenuItem orig impl
instance impl ~ IO () => Op (Deactivate ()) MenuItem orig impl
instance impl ~ IO () => Op (Activate ()) MenuItem orig impl
instance impl ~ IO Bool => Op (Active ()) MenuItem orig impl
instance impl ~ IO () => Op (Hide ()) MenuItem orig impl
instance impl ~ IO () => Op (ShowWidget ()) MenuItem orig impl
instance impl ~ IO Bool => Op (Visible ()) MenuItem orig impl
instance impl ~ IO () => Op (Setonly ()) MenuItem orig impl
instance impl ~ IO () => Op (Clear ()) MenuItem orig impl
instance impl ~ IO () => Op (Set ()) MenuItem orig impl
instance impl ~ IO Int => Op (GetValue ()) MenuItem orig impl
instance impl ~ IO Bool => Op (Radio ()) MenuItem orig impl
instance impl ~ IO Bool => Op (Checkbox ()) MenuItem orig impl
instance impl ~ IO Bool => Op (Submenu ()) MenuItem orig impl
instance impl ~ (Int -> IO ()) => Op (SetShortcut ()) MenuItem orig impl
instance impl ~ IO Int => Op (GetShortcut ()) MenuItem orig impl
instance impl ~ ((Ref orig -> IO ()) -> IO ()) => Op (SetCallback ()) MenuItem orig impl
instance impl ~ (FontSize -> IO ()) => Op (SetLabelsize ()) MenuItem orig impl
instance impl ~ IO FontSize => Op (GetLabelsize ()) MenuItem orig impl
instance impl ~ (Font -> IO ()) => Op (SetLabelfont ()) MenuItem orig impl
instance impl ~ IO Font => Op (GetLabelfont ()) MenuItem orig impl
instance impl ~ (Color -> IO ()) => Op (SetLabelcolor ()) MenuItem orig impl
instance impl ~ IO Color => Op (GetLabelcolor ()) MenuItem orig impl
instance impl ~ (Labeltype -> IO ()) => Op (SetLabeltype ()) MenuItem orig impl
instance impl ~ IO Labeltype => Op (GetLabeltype ()) MenuItem orig impl
instance impl ~ (Labeltype -> String -> IO ()) => Op (SetLabelWithLabeltype ()) MenuItem orig impl
instance impl ~ (String -> IO ()) => Op (SetLabel ()) MenuItem orig impl
instance impl ~ IO String => Op (GetLabel ()) MenuItem orig impl
instance impl ~ IO (Maybe (Ref MenuItem)) => Op (GetFirst ()) MenuItem orig impl
instance impl ~ IO (Maybe (Ref MenuItem)) => Op (Next ()) MenuItem orig impl
instance (Parent a MenuItem, impl ~ (Int -> IO (Ref a))) => Op (NextWithStep ()) MenuItem orig impl
instance impl ~ IO () => Op (Destroy ()) MenuItem orig impl

module Graphics.UI.FLTK.LowLevel.Choice
choiceNew :: Rectangle -> Maybe String -> IO (Ref Choice)
instance impl ~ (Event -> IO Int) => Op (Handle ()) Choice orig impl
instance impl ~ (MenuItemReference -> IO Int) => Op (SetValue ()) Choice orig impl
instance impl ~ IO Int => Op (GetValue ()) Choice orig impl
instance impl ~ IO () => Op (Destroy ()) Choice orig impl

module Graphics.UI.FLTK.LowLevel.NiceSlider
niceSliderNew :: Rectangle -> Maybe String -> IO (Ref NiceSlider)

module Graphics.UI.FLTK.LowLevel.OverlayWindow
overlayWindowNew :: Parent a OverlayWindow => Size -> Maybe String -> Maybe Position -> (Ref a -> IO ()) -> IO (Ref OverlayWindow)
instance impl ~ IO () => Op (RedrawOverlay ()) OverlayWindow orig impl
instance impl ~ IO Int => Op (CanDoOverlay ()) OverlayWindow orig impl
instance impl ~ IO () => Op (Hide ()) OverlayWindow orig impl
instance impl ~ (Rectangle -> IO ()) => Op (Resize ()) OverlayWindow orig impl
instance impl ~ IO () => Op (Flush ()) OverlayWindow orig impl
instance impl ~ IO () => Op (ShowWidget ()) OverlayWindow orig impl
instance impl ~ IO () => Op (Destroy ()) OverlayWindow orig impl

module Graphics.UI.FLTK.LowLevel.Pixmap
pixmapNew :: PixmapHs -> IO (Ref Pixmap)
instance impl ~ IO () => Op (Uncache ()) Pixmap orig impl
instance impl ~ (Position -> IO ()) => Op (Draw ()) Pixmap orig impl
instance impl ~ (Position -> Size -> Maybe X -> Maybe Y -> IO ()) => Op (DrawResize ()) Pixmap orig impl
instance impl ~ IO () => Op (Desaturate ()) Pixmap orig impl
instance impl ~ IO () => Op (Inactive ()) Pixmap orig impl
instance impl ~ (Color -> Float -> IO ()) => Op (ColorAverage ()) Pixmap orig impl
instance impl ~ (Maybe Size -> IO (Maybe (Ref Pixmap))) => Op (Copy ()) Pixmap orig impl
instance impl ~ IO Int => Op (GetCount ()) Pixmap orig impl
instance impl ~ IO Int => Op (GetLd ()) Pixmap orig impl
instance impl ~ IO Int => Op (GetD ()) Pixmap orig impl
instance impl ~ IO Int => Op (GetH ()) Pixmap orig impl
instance impl ~ IO Int => Op (GetW ()) Pixmap orig impl
instance impl ~ IO () => Op (Destroy ()) Pixmap orig impl

module Graphics.UI.FLTK.LowLevel.Positioner
positionerNew :: Rectangle -> Maybe String -> IO (Ref Positioner)
instance impl ~ (Double -> IO ()) => Op (SetYstep ()) Positioner orig impl
instance impl ~ (Double -> IO ()) => Op (SetXstep ()) Positioner orig impl
instance impl ~ (Double -> Double -> IO ()) => Op (SetYbounds ()) Positioner orig impl
instance impl ~ (Double -> Double -> IO ()) => Op (SetXbounds ()) Positioner orig impl
instance impl ~ IO Double => Op (GetYmaximum ()) Positioner orig impl
instance impl ~ (Double -> IO ()) => Op (SetYmaximum ()) Positioner orig impl
instance impl ~ IO Double => Op (GetXmaximum ()) Positioner orig impl
instance impl ~ (Double -> IO ()) => Op (SetXmaximum ()) Positioner orig impl
instance impl ~ IO Double => Op (GetYminimum ()) Positioner orig impl
instance impl ~ (Double -> IO ()) => Op (SetYminimum ()) Positioner orig impl
instance impl ~ IO Double => Op (GetXminimum ()) Positioner orig impl
instance impl ~ (Double -> IO ()) => Op (SetXminimum ()) Positioner orig impl
instance impl ~ IO Double => Op (GetYvalue ()) Positioner orig impl
instance impl ~ (Double -> IO ()) => Op (SetYvalue ()) Positioner orig impl
instance impl ~ IO Double => Op (GetXvalue ()) Positioner orig impl
instance impl ~ (Double -> IO ()) => Op (SetXvalue ()) Positioner orig impl
instance impl ~ (Event -> IO Int) => Op (Handle ()) Positioner orig impl
instance impl ~ IO () => Op (Destroy ()) Positioner orig impl

module Graphics.UI.FLTK.LowLevel.Progress
progressNew :: Rectangle -> Maybe String -> IO (Ref Progress)
instance impl ~ IO Float => Op (GetValue ()) Progress orig impl
instance impl ~ (Float -> IO ()) => Op (SetValue ()) Progress orig impl
instance impl ~ IO Float => Op (GetMinimum ()) Progress orig impl
instance impl ~ (Float -> IO ()) => Op (SetMinimum ()) Progress orig impl
instance impl ~ IO Float => Op (GetMaximum ()) Progress orig impl
instance impl ~ (Float -> IO ()) => Op (SetMaximum ()) Progress orig impl
instance impl ~ IO () => Op (Destroy ()) Progress orig impl

module Graphics.UI.FLTK.LowLevel.RadioLightButton
radioLightButtonNew :: Rectangle -> Maybe String -> IO (Ref RadioLightButton)

module Graphics.UI.FLTK.LowLevel.RepeatButton
repeatButtonNew :: Rectangle -> Maybe String -> IO (Ref RepeatButton)
instance impl ~ IO () => Op (Deactivate ()) RepeatButton orig impl
instance impl ~ (Event -> IO Int) => Op (Handle ()) RepeatButton orig impl
instance impl ~ IO () => Op (Destroy ()) RepeatButton orig impl

module Graphics.UI.FLTK.LowLevel.ReturnButton
returnButtonNew :: Rectangle -> Maybe String -> IO (Ref ReturnButton)
instance impl ~ (Event -> IO Int) => Op (Handle ()) ReturnButton orig impl
instance impl ~ IO () => Op (Destroy ()) ReturnButton orig impl

module Graphics.UI.FLTK.LowLevel.Roller
rollerNew :: Rectangle -> Maybe String -> IO (Ref Roller)
instance impl ~ (Event -> IO Int) => Op (Handle ()) Roller orig impl
instance impl ~ IO () => Op (Destroy ()) Roller orig impl

module Graphics.UI.FLTK.LowLevel.RoundButton
roundButtonNew :: Rectangle -> Maybe String -> IO (Ref RoundButton)
instance impl ~ IO () => Op (Destroy ()) RoundButton orig impl

module Graphics.UI.FLTK.LowLevel.Scrollbar
scrollbarNew :: Rectangle -> Maybe String -> IO (Ref Scrollbar)
instance impl ~ (Event -> IO Int) => Op (Handle ()) Scrollbar orig impl
instance impl ~ IO LineSize => Op (GetLinesize ()) Scrollbar orig impl
instance impl ~ (LineSize -> IO ()) => Op (SetLinesize ()) Scrollbar orig impl
instance impl ~ (Int -> Int -> Int -> Int -> IO Int) => Op (SetValue ()) Scrollbar orig impl
instance impl ~ IO () => Op (Destroy ()) Scrollbar orig impl

module Graphics.UI.FLTK.LowLevel.SelectBrowser
selectBrowserNew :: Rectangle -> Maybe String -> IO (Ref SelectBrowser)

module Graphics.UI.FLTK.LowLevel.SimpleCounter
simpleCounterNew :: Rectangle -> Maybe String -> IO (Ref SimpleCounter)

module Graphics.UI.FLTK.LowLevel.Slider
sliderNew :: Rectangle -> Maybe String -> IO (Ref Slider)
instance impl ~ (Boxtype -> IO ()) => Op (SetSlider ()) Slider orig impl
instance impl ~ IO Boxtype => Op (GetSlider ()) Slider orig impl
instance impl ~ (Double -> IO ()) => Op (GetSliderSize ()) Slider orig impl
instance impl ~ IO Float => Op (SetSliderSize ()) Slider orig impl
instance impl ~ (Int -> Int -> Int -> Int -> IO Int) => Op (Scrollvalue ()) Slider orig impl
instance impl ~ (Double -> Double -> IO ()) => Op (Bounds ()) Slider orig impl
instance impl ~ (Event -> IO Int) => Op (Handle ()) Slider orig impl
instance impl ~ IO () => Op (Destroy ()) Slider orig impl

module Graphics.UI.FLTK.LowLevel.SysMenuBar
sysMenuBarNew :: Rectangle -> Maybe String -> IO (Ref SysMenuBar)
instance impl ~ ([Ref MenuItem] -> IO ()) => Op (SetMenu ()) SysMenuBar orig impl
instance impl ~ IO (Ref MenuItem) => Op (GetMenu ()) SysMenuBar orig impl
instance impl ~ IO () => Op (Global ()) SysMenuBar orig impl
instance impl ~ (Int -> IO Int) => Op (GetMode ()) SysMenuBar orig impl
instance impl ~ (Int -> Int -> IO ()) => Op (SetMode ()) SysMenuBar orig impl
instance impl ~ (Int -> ShortcutKeySequence -> IO ()) => Op (SetShortcut ()) SysMenuBar orig impl
instance impl ~ (Int -> IO Int) => Op (ClearSubmenu ()) SysMenuBar orig impl
instance impl ~ IO () => Op (Clear ()) SysMenuBar orig impl
instance impl ~ (Int -> String -> IO ()) => Op (Replace ()) SysMenuBar orig impl
instance impl ~ (Int -> IO ()) => Op (Remove ()) SysMenuBar orig impl
instance impl ~ (Event -> IO Int) => Op (Handle ()) SysMenuBar orig impl
instance impl ~ IO () => Op (Destroy ()) SysMenuBar orig impl

module Graphics.UI.FLTK.LowLevel.Timer
timerNew :: Rectangle -> String -> IO (Ref Timer)
valueTimerNew :: Rectangle -> String -> IO (Ref ValueTimer)
hiddenTimerNew :: Rectangle -> String -> IO (Ref HiddenTimer)
instance impl ~ (Bool -> IO ()) => Op (SetSuspended ()) Timer orig impl
instance impl ~ IO Bool => Op (GetSuspended ()) Timer orig impl
instance impl ~ (Double -> IO ()) => Op (SetValue ()) Timer orig impl
instance impl ~ IO Double => Op (GetValue ()) Timer orig impl
instance impl ~ (CountDirection -> IO ()) => Op (SetDirection ()) Timer orig impl
instance impl ~ IO CountDirection => Op (GetDirection ()) Timer orig impl
instance impl ~ (Event -> IO Int) => Op (Handle ()) Timer orig impl
instance impl ~ IO () => Op (Destroy ()) Timer orig impl

module Graphics.UI.FLTK.LowLevel.ToggleButton
toggleButtonNew :: Rectangle -> Maybe String -> IO (Ref ToggleButton)
instance impl ~ IO () => Op (Destroy ()) ToggleButton orig impl

module Graphics.UI.FLTK.LowLevel.TreeItem
newtype TreeItemIndex
TreeItemIndex :: Int -> TreeItemIndex
data TreeItemPointer
TreeItemPointer :: (Ref a) -> TreeItemPointer
newtype TreeItemName
TreeItemName :: String -> TreeItemName
data TreeItemReference
TreeItemByIndex :: TreeItemIndex -> TreeItemReference
TreeItemByPointer :: TreeItemPointer -> TreeItemReference
data TreeItemLocator
TreeItemPointerLocator :: TreeItemPointer -> TreeItemLocator
TreeItemNameLocator :: TreeItemName -> TreeItemLocator
data MoveError
NoParent :: MoveError
NoIndexFound :: MoveError
IndexRangeError :: MoveError
CouldNotDeparent :: MoveError
CouldNotReparent :: MoveError
data MoveType
MoveAbove :: MoveType
MoveBelow :: MoveType
MoveInto :: SiblingPosition -> MoveType
data SiblingPosition
SiblingPosition :: (Maybe Int) -> SiblingPosition
data TreeItemNotFound
TreeItemNotFound :: TreeItemNotFound
treeItemNew :: Ref TreePrefs -> IO (Ref TreeItem)
instance impl ~ IO Int => Op (LabelH ()) TreeItem orig impl
instance impl ~ IO Int => Op (LabelW ()) TreeItem orig impl
instance impl ~ IO Int => Op (LabelY ()) TreeItem orig impl
instance impl ~ IO Int => Op (LabelX ()) TreeItem orig impl
instance impl ~ IO Bool => Op (IsRoot ()) TreeItem orig impl
instance (Parent a TreePrefs, impl ~ (Ref a -> IO Int)) => Op (EventOnLabel ()) TreeItem orig impl
instance (Parent a TreePrefs, impl ~ (Ref a -> IO Int)) => Op (EventOnCollapseIcon ()) TreeItem orig impl
instance (Parent a TreePrefs, impl ~ (Ref a -> IO (Maybe (Ref TreeItem)))) => Op (FindClicked ()) TreeItem orig impl
instance impl ~ IO (Ref Image) => Op (GetUsericon ()) TreeItem orig impl
instance (Parent a Image, impl ~ (Ref a -> IO ())) => Op (SetUsericon ()) TreeItem orig impl
instance impl ~ IO Bool => Op (VisibleR ()) TreeItem orig impl
instance impl ~ IO Bool => Op (IsVisible ()) TreeItem orig impl
instance impl ~ IO Bool => Op (Visible ()) TreeItem orig impl
instance impl ~ IO Bool => Op (IsActive ()) TreeItem orig impl
instance impl ~ (Int -> IO ()) => Op (ActivateWithVal ()) TreeItem orig impl
instance impl ~ IO () => Op (Activate ()) TreeItem orig impl
instance impl ~ IO Bool => Op (IsSelected ()) TreeItem orig impl
instance impl ~ IO Int => Op (DeselectAll ()) TreeItem orig impl
instance impl ~ IO () => Op (Deselect ()) TreeItem orig impl
instance impl ~ IO Int => Op (SelectAll ()) TreeItem orig impl
instance impl ~ IO () => Op (SelectToggle ()) TreeItem orig impl
instance impl ~ (Int -> IO ()) => Op (SelectWithVal ()) TreeItem orig impl
instance impl ~ IO () => Op (Select ()) TreeItem orig impl
instance impl ~ IO () => Op (OpenToggle ()) TreeItem orig impl
instance impl ~ IO Bool => Op (IsClose ()) TreeItem orig impl
instance impl ~ IO Bool => Op (IsOpen ()) TreeItem orig impl
instance impl ~ IO () => Op (Close ()) TreeItem orig impl
instance impl ~ IO () => Op (Open ()) TreeItem orig impl
instance (Parent a TreeItem, impl ~ (Ref a -> IO ())) => Op (SetParent ()) TreeItem orig impl
instance impl ~ IO (Maybe (Ref TreeItem)) => Op (GetParent ()) TreeItem orig impl
instance (Parent a TreePrefs, impl ~ (Ref a -> IO (Maybe (Ref TreeItem)))) => Op (PrevDisplayed ()) TreeItem orig impl
instance (Parent a TreePrefs, impl ~ (Ref a -> IO (Maybe (Ref TreeItem)))) => Op (NextDisplayed ()) TreeItem orig impl
instance impl ~ (Int -> IO ()) => Op (UpdatePrevNext ()) TreeItem orig impl
instance impl ~ IO (Maybe (Ref TreeItem)) => Op (PrevSibling ()) TreeItem orig impl
instance impl ~ IO (Maybe (Ref TreeItem)) => Op (NextSibling ()) TreeItem orig impl
instance impl ~ IO (Maybe (Ref TreeItem)) => Op (Next ()) TreeItem orig impl
instance impl ~ IO (Maybe (Ref TreeItem)) => Op (Prev ()) TreeItem orig impl
instance impl ~ IO Int => Op (GetDepth ()) TreeItem orig impl
instance (Parent a TreeItem, impl ~ (Ref a -> MoveType -> IO (Either MoveError ()))) => Op (MoveTo ()) TreeItem orig impl
instance impl ~ (Int -> Int -> IO (Either OutOfRange ())) => Op (Move ()) TreeItem orig impl
instance (Parent a TreeItem, impl ~ (Ref a -> Int -> IO (Either UnknownError ()))) => Op (Reparent ()) TreeItem orig impl
instance impl ~ (Int -> IO (Either UnknownError (Ref orig))) => Op (Deparent ()) TreeItem orig impl
instance (Parent a TreePrefs, impl ~ (Ref a -> String -> IO (Maybe (Ref TreeItem)))) => Op (InsertAbove ()) TreeItem orig impl
instance (Parent a TreePrefs, impl ~ (Ref a -> String -> Maybe Int -> IO (Maybe (Ref TreeItem)))) => Op (Insert ()) TreeItem orig impl
instance (Parent a TreeItem, Parent b TreePrefs, impl ~ (Ref b -> [String] -> Maybe (Ref a) -> IO (Maybe (Ref a)))) => Op (AddAt ()) TreeItem orig impl
instance (Parent a TreeItem, Parent b TreePrefs, impl ~ (Ref b -> TreeItemLocator -> IO (Maybe (Ref a)))) => Op (Add ()) TreeItem orig impl
instance impl ~ ([String] -> IO (Maybe (Ref TreeItem))) => Op (FindItem ()) TreeItem orig impl
instance impl ~ ([String] -> IO (Maybe (Ref TreeItem))) => Op (FindInChildren ()) TreeItem orig impl
instance (Parent a TreeItem, impl ~ (Ref a -> Ref a -> IO (Either TreeItemNotFound ()))) => Op (SwapChildrenByTreeItem ()) TreeItem orig impl
instance impl ~ (Int -> Int -> IO ()) => Op (SwapChildren ()) TreeItem orig impl
instance impl ~ IO () => Op (ClearChildren ()) TreeItem orig impl
instance impl ~ (TreeItemLocator -> IO (Either UnknownError ())) => Op (RemoveChild ()) TreeItem orig impl
instance impl ~ (TreeItemLocator -> IO (Maybe TreeItemIndex)) => Op (FindChild ()) TreeItem orig impl
instance impl ~ IO Bool => Op (HasChildren ()) TreeItem orig impl
instance impl ~ (Int -> IO (Maybe (Ref Widget))) => Op (Child ()) TreeItem orig impl
instance impl ~ IO Int => Op (Children ()) TreeItem orig impl
instance impl ~ IO (Ref Widget) => Op (GetWidget ()) TreeItem orig impl
instance (Parent a Widget, impl ~ (Ref a -> IO ())) => Op (SetWidget ()) TreeItem orig impl
instance impl ~ IO Color => Op (GetLabelbgcolor ()) TreeItem orig impl
instance impl ~ (Color -> IO ()) => Op (SetLabelbgcolor ()) TreeItem orig impl
instance impl ~ (Color -> IO ()) => Op (SetLabelfgcolor ()) TreeItem orig impl
instance impl ~ IO Color => Op (GetLabelfgcolor ()) TreeItem orig impl
instance impl ~ IO Color => Op (GetLabelcolor ()) TreeItem orig impl
instance impl ~ (Color -> IO ()) => Op (SetLabelcolor ()) TreeItem orig impl
instance impl ~ IO FontSize => Op (GetLabelsize ()) TreeItem orig impl
instance impl ~ (FontSize -> IO ()) => Op (SetLabelsize ()) TreeItem orig impl
instance impl ~ IO Font => Op (GetLabelfont ()) TreeItem orig impl
instance impl ~ (Font -> IO ()) => Op (SetLabelfont ()) TreeItem orig impl
instance impl ~ IO String => Op (GetLabel ()) TreeItem orig impl
instance impl ~ (String -> IO ()) => Op (SetLabel ()) TreeItem orig impl
instance impl ~ (Maybe String -> IO ()) => Op (ShowSelf ()) TreeItem orig impl
instance impl ~ IO Int => Op (GetH ()) TreeItem orig impl
instance impl ~ IO Int => Op (GetW ()) TreeItem orig impl
instance impl ~ IO Int => Op (GetY ()) TreeItem orig impl
instance impl ~ IO Int => Op (GetX ()) TreeItem orig impl
instance impl ~ IO () => Op (Destroy ()) TreeItem orig impl
instance Enum MoveError

module Graphics.UI.FLTK.LowLevel.Tree
treeNew :: Rectangle -> Maybe String -> IO (Ref Tree)
instance impl ~ IO TreeReasonType => Op (GetCallbackReason ()) Tree orig impl
instance impl ~ (TreeReasonType -> IO ()) => Op (SetCallbackReason ()) Tree orig impl
instance impl ~ IO (Maybe (Ref TreeItem)) => Op (GetCallbackItem ()) Tree orig impl
instance (Parent a TreeItem, impl ~ (Ref a -> IO ())) => Op (SetCallbackItem ()) Tree orig impl
instance impl ~ IO Bool => Op (IsVscrollVisible ()) Tree orig impl
instance impl ~ (Int -> IO ()) => Op (SetScrollbarSize ()) Tree orig impl
instance impl ~ IO Int => Op (GetScrollbarSize ()) Tree orig impl
instance (Parent a Widget, impl ~ (Ref a -> IO Bool)) => Op (IsScrollbar ()) Tree orig impl
instance impl ~ (Int -> IO ()) => Op (SetVposition ()) Tree orig impl
instance impl ~ IO Int => Op (GetVposition ()) Tree orig impl
instance impl ~ (Ref TreeItem -> IO ()) => Op (Display ()) Tree orig impl
instance impl ~ (Ref TreeItem -> IO ()) => Op (ShowItemBottom ()) Tree orig impl
instance impl ~ (Ref TreeItem -> IO ()) => Op (ShowItemMiddle ()) Tree orig impl
instance impl ~ (Ref TreeItem -> IO ()) => Op (ShowItemTop ()) Tree orig impl
instance impl ~ (Ref TreeItem -> Maybe Int -> IO ()) => Op (ShowItemWithYoff ()) Tree orig impl
instance impl ~ (Ref TreeItem -> IO Bool) => Op (Displayed ()) Tree orig impl
instance impl ~ (TreeSelect -> IO ()) => Op (SetSelectmode ()) Tree orig impl
instance impl ~ IO TreeSelect => Op (Selectmode ()) Tree orig impl
instance impl ~ (Boxtype -> IO ()) => Op (SetSelectbox ()) Tree orig impl
instance impl ~ IO Boxtype => Op (GetSelectbox ()) Tree orig impl
instance impl ~ (TreeSort -> IO ()) => Op (SetSortorder ()) Tree orig impl
instance impl ~ IO TreeSort => Op (GetSortorder ()) Tree orig impl
instance impl ~ (TreeConnector -> IO ()) => Op (SetConnectorstyle ()) Tree orig impl
instance impl ~ IO TreeConnector => Op (GetConnectorstyle ()) Tree orig impl
instance impl ~ (Bool -> IO ()) => Op (SetShowroot ()) Tree orig impl
instance impl ~ IO Bool => Op (GetShowroot ()) Tree orig impl
instance impl ~ (Int -> IO ()) => Op (SetShowcollapse ()) Tree orig impl
instance impl ~ IO Int => Op (GetShowcollapse ()) Tree orig impl
instance (Parent a Image, impl ~ (Ref a -> IO ())) => Op (SetCloseicon ()) Tree orig impl
instance impl ~ IO (Maybe (Ref Image)) => Op (GetCloseicon ()) Tree orig impl
instance (Parent a Image, impl ~ (Ref a -> IO ())) => Op (SetOpenicon ()) Tree orig impl
instance impl ~ IO (Maybe (Ref Image)) => Op (GetOpenicon ()) Tree orig impl
instance (Parent a Image, impl ~ (Ref a -> IO ())) => Op (SetUsericon ()) Tree orig impl
instance impl ~ IO (Maybe (Ref Image)) => Op (GetUsericon ()) Tree orig impl
instance impl ~ (Int -> IO ()) => Op (SetConnectorwidth ()) Tree orig impl
instance impl ~ IO Int => Op (GetConnectorwidth ()) Tree orig impl
instance impl ~ (Int -> IO ()) => Op (SetLabelmarginleft ()) Tree orig impl
instance impl ~ IO Int => Op (GetLabelmarginleft ()) Tree orig impl
instance impl ~ (Int -> IO ()) => Op (SetUsericonmarginleft ()) Tree orig impl
instance impl ~ IO Int => Op (GetUsericonmarginleft ()) Tree orig impl
instance impl ~ (Int -> IO ()) => Op (SetOpenchildMarginbottom ()) Tree orig impl
instance impl ~ IO Int => Op (GetOpenchildMarginbottom ()) Tree orig impl
instance impl ~ (Int -> IO ()) => Op (SetLinespacing ()) Tree orig impl
instance impl ~ IO Int => Op (GetLinespacing ()) Tree orig impl
instance impl ~ (Int -> IO ()) => Op (SetMargintop ()) Tree orig impl
instance impl ~ IO Int => Op (GetMargintop ()) Tree orig impl
instance impl ~ (Int -> IO ()) => Op (SetMarginleft ()) Tree orig impl
instance impl ~ IO Int => Op (GetMarginleft ()) Tree orig impl
instance impl ~ (Color -> IO ()) => Op (SetConnectorcolor ()) Tree orig impl
instance impl ~ IO Color => Op (GetConnectorcolor ()) Tree orig impl
instance impl ~ (Color -> IO ()) => Op (SetItemLabelbgcolor ()) Tree orig impl
instance impl ~ IO Color => Op (GetItemLabelbgcolor ()) Tree orig impl
instance impl ~ (Color -> IO ()) => Op (SetItemLabelfgcolor ()) Tree orig impl
instance impl ~ IO Color => Op (GetItemLabelfgcolor ()) Tree orig impl
instance impl ~ (FontSize -> IO ()) => Op (SetItemLabelsize ()) Tree orig impl
instance impl ~ IO FontSize => Op (GetItemLabelsize ()) Tree orig impl
instance impl ~ (Font -> IO ()) => Op (SetItemLabelfont ()) Tree orig impl
instance impl ~ IO Font => Op (GetItemLabelfont ()) Tree orig impl
instance impl ~ (TreeItemLocator -> IO Bool) => Op (IsSelectedWithItem ()) Tree orig impl
instance impl ~ IO (Maybe (Ref TreeItem)) => Op (GetItemFocus ()) Tree orig impl
instance impl ~ (Ref TreeItem -> IO ()) => Op (SetItemFocus ()) Tree orig impl
instance impl ~ (Ref TreeItem -> Bool -> IO ()) => Op (SelectAllAndCallback ()) Tree orig impl
instance impl ~ (Ref TreeItem -> IO ()) => Op (SelectAll ()) Tree orig impl
instance impl ~ (Ref TreeItem -> Bool -> IO ()) => Op (SelectOnlyAndCallback ()) Tree orig impl
instance impl ~ (Ref TreeItem -> IO ()) => Op (SelectOnly ()) Tree orig impl
instance impl ~ (TreeItemLocator -> Bool -> IO ()) => Op (DeselectAndCallback ()) Tree orig impl
instance impl ~ (TreeItemLocator -> IO Int) => Op (Deselect ()) Tree orig impl
instance impl ~ (Ref TreeItem -> Bool -> IO ()) => Op (SelectToggleAndCallback ()) Tree orig impl
instance impl ~ (Ref TreeItem -> IO ()) => Op (SelectToggle ()) Tree orig impl
instance impl ~ (TreeItemLocator -> Bool -> IO ()) => Op (SelectAndCallback ()) Tree orig impl
instance impl ~ (TreeItemLocator -> IO Int) => Op (Select ()) Tree orig impl
instance impl ~ (TreeItemLocator -> IO Bool) => Op (IsClose ()) Tree orig impl
instance impl ~ (TreeItemLocator -> IO Bool) => Op (IsOpen ()) Tree orig impl
instance impl ~ (TreeItemLocator -> Bool -> IO ()) => Op (CloseAndCallback ()) Tree orig impl
instance impl ~ (TreeItemLocator -> IO ()) => Op (Close ()) Tree orig impl
instance impl ~ (Ref TreeItem -> Bool -> IO ()) => Op (OpenToggleAndCallback ()) Tree orig impl
instance impl ~ (Ref TreeItem -> IO ()) => Op (OpenToggle ()) Tree orig impl
instance impl ~ (TreeItemLocator -> Bool -> IO ()) => Op (OpenAndCallback ()) Tree orig impl
instance impl ~ (TreeItemLocator -> IO ()) => Op (Open ()) Tree orig impl
instance impl ~ (Ref TreeItem -> IO (Maybe (Ref TreeItem))) => Op (NextSelectedItemWithItem ()) Tree orig impl
instance impl ~ IO (Maybe (Ref TreeItem)) => Op (NextSelectedItem ()) Tree orig impl
instance impl ~ IO (Maybe (Ref TreeItem)) => Op (FirstSelectedItem ()) Tree orig impl
instance impl ~ IO (Maybe (Ref TreeItem)) => Op (LastVisible ()) Tree orig impl
instance impl ~ IO (Maybe (Ref TreeItem)) => Op (GetLast ()) Tree orig impl
instance impl ~ (Ref TreeItem -> IO (Maybe (Ref TreeItem))) => Op (PrevWithItem ()) Tree orig impl
instance impl ~ IO (Maybe (Ref TreeItem)) => Op (Prev ()) Tree orig impl
instance impl ~ (Ref TreeItem -> IO (Maybe (Ref TreeItem))) => Op (NextWithItem ()) Tree orig impl
instance impl ~ IO (Maybe (Ref TreeItem)) => Op (Next ()) Tree orig impl
instance impl ~ IO (Maybe (Ref TreeItem)) => Op (FirstVisible ()) Tree orig impl
instance impl ~ IO (Maybe (Ref TreeItem)) => Op (GetFirst ()) Tree orig impl
instance impl ~ IO (Maybe (Ref TreeItem)) => Op (ItemClicked ()) Tree orig impl
instance (Parent a TreeItem, impl ~ (Ref a -> IO (Maybe String))) => Op (ItemPathname ()) Tree orig impl
instance impl ~ (String -> IO (Maybe (Ref TreeItem))) => Op (FindItem ()) Tree orig impl
instance (Parent a TreeItem, impl ~ (Ref a -> IO ())) => Op (ClearChildren ()) Tree orig impl
instance impl ~ IO () => Op (Clear ()) Tree orig impl
instance impl ~ (Ref TreeItem -> IO (Either TreeItemNotFound ())) => Op (Remove ()) Tree orig impl
instance (Parent a TreeItem, impl ~ (Ref a -> String -> Int -> IO (Maybe (Ref a)))) => Op (Insert ()) Tree orig impl
instance (Parent a TreeItem, impl ~ (Ref a -> String -> IO (Maybe (Ref a)))) => Op (InsertAbove ()) Tree orig impl
instance (Parent a TreeItem, impl ~ (String -> Ref a -> IO (Maybe (Ref TreeItem)))) => Op (AddAt ()) Tree orig impl
instance impl ~ (String -> IO (Maybe (Ref TreeItem))) => Op (Add ()) Tree orig impl
instance impl ~ IO (Maybe (Ref TreeItem)) => Op (Root ()) Tree orig impl
instance impl ~ (String -> IO ()) => Op (RootLabel ()) Tree orig impl
instance impl ~ IO () => Op (ShowSelf ()) Tree orig impl
instance impl ~ IO () => Op (Draw ()) Tree orig impl
instance impl ~ (Event -> IO Int) => Op (Handle ()) Tree orig impl
instance impl ~ IO () => Op (Destroy ()) Tree orig impl

module Graphics.UI.FLTK.LowLevel.TreePrefs
treePrefsNew :: IO (Ref TreePrefs)
instance impl ~ (TreeSelect -> IO ()) => Op (SetSelectmode ()) TreePrefs orig impl
instance impl ~ IO TreeSelect => Op (GetSelectmode ()) TreePrefs orig impl
instance impl ~ (Bool -> IO ()) => Op (SetShowroot ()) TreePrefs orig impl
instance impl ~ IO Bool => Op (GetShowroot ()) TreePrefs orig impl
instance impl ~ (Boxtype -> IO ()) => Op (SetSelectbox ()) TreePrefs orig impl
instance impl ~ IO Boxtype => Op (GetSelectbox ()) TreePrefs orig impl
instance impl ~ (TreeSort -> IO ()) => Op (SetSortorder ()) TreePrefs orig impl
instance impl ~ IO TreeSort => Op (GetSortorder ()) TreePrefs orig impl
instance impl ~ (Bool -> IO ()) => Op (SetShowcollapse ()) TreePrefs orig impl
instance impl ~ IO Bool => Op (GetShowcollapse ()) TreePrefs orig impl
instance (Parent a Image, impl ~ (Ref a -> IO ())) => Op (SetUsericon ()) TreePrefs orig impl
instance impl ~ IO (Maybe (Ref Image)) => Op (GetUsericon ()) TreePrefs orig impl
instance (Parent a Image, impl ~ (Ref a -> IO ())) => Op (SetCloseicon ()) TreePrefs orig impl
instance impl ~ IO (Maybe (Ref Image)) => Op (GetCloseicon ()) TreePrefs orig impl
instance (Parent a Image, impl ~ (Ref a -> IO ())) => Op (SetOpenicon ()) TreePrefs orig impl
instance impl ~ IO (Maybe (Ref Image)) => Op (GetOpenicon ()) TreePrefs orig impl
instance impl ~ (Int -> IO ()) => Op (SetConnectorwidth ()) TreePrefs orig impl
instance impl ~ IO Int => Op (GetConnectorwidth ()) TreePrefs orig impl
instance impl ~ (TreeConnector -> IO ()) => Op (SetConnectorstyle ()) TreePrefs orig impl
instance impl ~ IO TreeConnector => Op (GetConnectorstyle ()) TreePrefs orig impl
instance impl ~ (Color -> IO ()) => Op (SetConnectorcolor ()) TreePrefs orig impl
instance impl ~ IO Color => Op (GetConnectorcolor ()) TreePrefs orig impl
instance impl ~ (Int -> IO ()) => Op (SetLinespacing ()) TreePrefs orig impl
instance impl ~ IO Int => Op (GetLinespacing ()) TreePrefs orig impl
instance impl ~ (Int -> IO ()) => Op (SetLabelmarginleft ()) TreePrefs orig impl
instance impl ~ IO Int => Op (GetLabelmarginleft ()) TreePrefs orig impl
instance impl ~ (Int -> IO ()) => Op (SetUsericonmarginleft ()) TreePrefs orig impl
instance impl ~ IO Int => Op (GetUsericonmarginleft ()) TreePrefs orig impl
instance impl ~ (Int -> IO ()) => Op (SetOpenchildMarginbottom ()) TreePrefs orig impl
instance impl ~ IO Int => Op (GetOpenchildMarginbottom ()) TreePrefs orig impl
instance impl ~ (Int -> IO ()) => Op (SetMargintop ()) TreePrefs orig impl
instance impl ~ IO Int => Op (GetMargintop ()) TreePrefs orig impl
instance impl ~ (Int -> IO ()) => Op (SetMarginleft ()) TreePrefs orig impl
instance impl ~ IO Int => Op (GetMarginleft ()) TreePrefs orig impl
instance impl ~ (Color -> IO ()) => Op (SetLabelbgcolor ()) TreePrefs orig impl
instance impl ~ IO Color => Op (GetLabelbgcolor ()) TreePrefs orig impl
instance impl ~ (Color -> IO ()) => Op (SetLabelfgcolor ()) TreePrefs orig impl
instance impl ~ IO Color => Op (GetLabelfgcolor ()) TreePrefs orig impl
instance impl ~ (FontSize -> IO ()) => Op (SetLabelsize ()) TreePrefs orig impl
instance impl ~ IO FontSize => Op (GetLabelsize ()) TreePrefs orig impl
instance impl ~ (Font -> IO ()) => Op (SetLabelfont ()) TreePrefs orig impl
instance impl ~ IO Font => Op (GetLabelfont ()) TreePrefs orig impl
instance impl ~ (Color -> IO ()) => Op (SetItemLabelbgcolor ()) TreePrefs orig impl
instance impl ~ IO Color => Op (GetItemLabelbgcolor ()) TreePrefs orig impl
instance impl ~ (Color -> IO ()) => Op (SetItemLabelfgcolor ()) TreePrefs orig impl
instance impl ~ (FontSize -> IO ()) => Op (SetItemLabelsize ()) TreePrefs orig impl
instance impl ~ IO FontSize => Op (GetItemLabelsize ()) TreePrefs orig impl
instance impl ~ IO Font => Op (GetItemLabelfont ()) TreePrefs orig impl

module Graphics.UI.FLTK.LowLevel.ValueInput
valueInputNew :: Rectangle -> Maybe String -> IO (Ref ValueInput)
instance impl ~ (Color -> IO ()) => Op (SetTextcolor ()) ValueInput orig impl
instance impl ~ IO Color => Op (GetTextcolor ()) ValueInput orig impl
instance impl ~ (FontSize -> IO ()) => Op (SetTextsize ()) ValueInput orig impl
instance impl ~ IO FontSize => Op (GetTextsize ()) ValueInput orig impl
instance impl ~ (Int -> IO ()) => Op (SetTextfont ()) ValueInput orig impl
instance impl ~ IO Font => Op (GetTextfont ()) ValueInput orig impl
instance impl ~ (Int -> IO ()) => Op (SetShortcut ()) ValueInput orig impl
instance impl ~ IO Int => Op (GetShortcut ()) ValueInput orig impl
instance impl ~ (Bool -> IO ()) => Op (SetSoft ()) ValueInput orig impl
instance impl ~ (Rectangle -> IO ()) => Op (Resize ()) ValueInput orig impl
instance impl ~ IO Bool => Op (GetSoft ()) ValueInput orig impl
instance impl ~ (Event -> IO Int) => Op (Handle ()) ValueInput orig impl
instance impl ~ IO () => Op (Destroy ()) ValueInput orig impl

module Graphics.UI.FLTK.LowLevel.ValueOutput
valueOutputNew :: Rectangle -> Maybe String -> IO (Ref ValueOutput)
instance impl ~ (Color -> IO ()) => Op (SetTextcolor ()) ValueOutput orig impl
instance impl ~ IO Color => Op (GetTextcolor ()) ValueOutput orig impl
instance impl ~ (FontSize -> IO ()) => Op (SetTextsize ()) ValueOutput orig impl
instance impl ~ IO FontSize => Op (GetTextsize ()) ValueOutput orig impl
instance impl ~ (Int -> IO ()) => Op (SetTextfont ()) ValueOutput orig impl
instance impl ~ IO Font => Op (GetTextfont ()) ValueOutput orig impl
instance impl ~ (Bool -> IO ()) => Op (SetSoft ()) ValueOutput orig impl
instance impl ~ (Rectangle -> IO ()) => Op (Resize ()) ValueOutput orig impl
instance impl ~ IO Bool => Op (GetSoft ()) ValueOutput orig impl
instance impl ~ (Event -> IO Int) => Op (Handle ()) ValueOutput orig impl
instance impl ~ IO () => Op (Destroy ()) ValueOutput orig impl

module Graphics.UI.FLTK.LowLevel.ValueSlider
valueSliderNew :: Rectangle -> Maybe String -> IO (Ref ValueSlider)
instance impl ~ (Color -> IO ()) => Op (SetTextcolor ()) ValueSlider orig impl
instance impl ~ IO Color => Op (GetTextcolor ()) ValueSlider orig impl
instance impl ~ (FontSize -> IO ()) => Op (SetTextsize ()) ValueSlider orig impl
instance impl ~ IO FontSize => Op (GetTextsize ()) ValueSlider orig impl
instance impl ~ (Font -> IO ()) => Op (SetTextfont ()) ValueSlider orig impl
instance impl ~ IO Font => Op (GetTextfont ()) ValueSlider orig impl
instance impl ~ (Event -> IO Int) => Op (Handle ()) ValueSlider orig impl
instance impl ~ IO () => Op (Destroy ()) ValueSlider orig impl

module Graphics.UI.FLTK.LowLevel.Widget
widgetCustom :: Rectangle -> Maybe String -> CustomWidgetFuncs Widget -> IO (Ref Widget)

-- | Lots of <a>Widget</a> subclasses have the same constructor parameters.
--   This function consolidates them.
--   
--   Only of interest to <a>Widget</a> contributors.
widgetMaker :: Parent a Widget => Rectangle -> Maybe String -> Maybe (CustomWidgetFuncs a) -> (Int -> Int -> Int -> Int -> IO (Ptr ())) -> (Int -> Int -> Int -> Int -> String -> IO (Ptr ())) -> (Int -> Int -> Int -> Int -> Ptr () -> IO (Ptr ())) -> (Int -> Int -> Int -> Int -> String -> Ptr () -> IO (Ptr ())) -> IO (Ref a)

-- | Overrideable <a>Widget</a> functions
data CustomWidgetFuncs a
CustomWidgetFuncs :: Maybe (Ref a -> IO ()) -> Maybe (Ref a -> Event -> IO Int) -> Maybe (Ref a -> Rectangle -> IO ()) -> Maybe (Ref a -> IO ()) -> Maybe (Ref a -> IO ()) -> CustomWidgetFuncs a

-- | See <a>Fl_Widget::draw</a>
drawCustom :: CustomWidgetFuncs a -> Maybe (Ref a -> IO ())

-- | See <a>Fl_Widget::handle</a>
handleCustom :: CustomWidgetFuncs a -> Maybe (Ref a -> Event -> IO Int)

-- | See <a>Fl_Widget::resize</a>
resizeCustom :: CustomWidgetFuncs a -> Maybe (Ref a -> Rectangle -> IO ())

-- | See <a>Fl_Widget::show</a>
showCustom :: CustomWidgetFuncs a -> Maybe (Ref a -> IO ())

-- | See <a>Fl_Widget::hide</a>
hideCustom :: CustomWidgetFuncs a -> Maybe (Ref a -> IO ())

-- | An empty set of functions to pass to <a>widgetCustom</a>.
defaultCustomWidgetFuncs :: Parent a Widget => CustomWidgetFuncs a

-- | Fill up a struct with pointers to functions on the Haskell side that
--   will get called instead of the default ones.
--   
--   Fill up the <a>Widget</a> part the function pointer struct.
--   
--   Only of interest to <a>Widget</a> contributors
fillCustomWidgetFunctionStruct :: Parent a Widget => Ptr () -> CustomWidgetFuncs a -> IO ()

-- | Given a record of functions, return a pointer to a struct with
--   function pointers back to those functions.
--   
--   Only of interest to <a>Widget</a> contributors.
customWidgetFunctionStruct :: Parent a Widget => CustomWidgetFuncs a -> IO (Ptr ())
instance impl ~ (Maybe (Boxtype, Rectangle) -> IO ()) => Op (DrawFocus ()) Widget orig impl
instance impl ~ IO () => Op (DrawBackdrop ()) Widget orig impl
instance impl ~ (Boxtype -> Color -> Maybe Rectangle -> IO ()) => Op (DrawBoxWithBoxtype ()) Widget orig impl
instance impl ~ IO () => Op (DrawBox ()) Widget orig impl
instance impl ~ ((Ref orig -> IO ()) -> IO ()) => Op (SetCallback ()) Widget orig impl
instance impl ~ (Rectangle -> IO ()) => Op (Resize ()) Widget orig impl
instance impl ~ (Rectangle -> IO ()) => Op (ResizeSuper ()) Widget orig impl
instance impl ~ IO Position => Op (GetTopWindowOffset ()) Widget orig impl
instance impl ~ IO (Ref Window) => Op (GetTopWindow ()) Widget orig impl
instance impl ~ IO (Ref Window) => Op (GetWindow ()) Widget orig impl
instance impl ~ IO Size => Op (MeasureLabel ()) Widget orig impl
instance impl ~ (Word8 -> Rectangle -> IO ()) => Op (GetDamageInsideWidget ()) Widget orig impl
instance impl ~ (Word8 -> IO ()) => Op (GetDamageWithText ()) Widget orig impl
instance impl ~ IO () => Op (ClearDamage ()) Widget orig impl
instance impl ~ (Word8 -> IO ()) => Op (ClearDamageWithBitmask ()) Widget orig impl
instance impl ~ IO Word8 => Op (GetDamage ()) Widget orig impl
instance impl ~ IO () => Op (RedrawLabel ()) Widget orig impl
instance impl ~ IO () => Op (Redraw ()) Widget orig impl
instance (Parent a Widget, impl ~ (Ref a -> IO Int)) => Op (Inside ()) Widget orig impl
instance (Parent a Widget, impl ~ (Ref a -> IO Int)) => Op (Contains ()) Widget orig impl
instance impl ~ IO Int => Op (GetVisibleFocus ()) Widget orig impl
instance impl ~ (Int -> IO ()) => Op (ModifyVisibleFocus ()) Widget orig impl
instance impl ~ IO () => Op (ClearVisibleFocus ()) Widget orig impl
instance impl ~ IO () => Op (SetVisibleFocus ()) Widget orig impl
instance impl ~ IO (Either NoChange ()) => Op (TakeFocus ()) Widget orig impl
instance impl ~ IO Bool => Op (Changed ()) Widget orig impl
instance impl ~ IO () => Op (ClearChanged ()) Widget orig impl
instance impl ~ IO () => Op (SetChanged ()) Widget orig impl
instance impl ~ IO () => Op (ClearActive ()) Widget orig impl
instance impl ~ IO () => Op (SetActive ()) Widget orig impl
instance impl ~ IO Bool => Op (Takesevents ()) Widget orig impl
instance impl ~ IO () => Op (ClearOutput ()) Widget orig impl
instance impl ~ IO () => Op (SetOutput ()) Widget orig impl
instance impl ~ IO Int => Op (GetOutput ()) Widget orig impl
instance impl ~ IO () => Op (Deactivate ()) Widget orig impl
instance impl ~ IO () => Op (Activate ()) Widget orig impl
instance impl ~ IO Bool => Op (ActiveR ()) Widget orig impl
instance impl ~ IO Bool => Op (Active ()) Widget orig impl
instance impl ~ IO () => Op (ClearVisible ()) Widget orig impl
instance impl ~ IO () => Op (SetVisible ()) Widget orig impl
instance impl ~ IO () => Op (Hide ()) Widget orig impl
instance impl ~ IO () => Op (HideSuper ()) Widget orig impl
instance impl ~ IO () => Op (ShowWidget ()) Widget orig impl
instance impl ~ IO () => Op (ShowWidgetSuper ()) Widget orig impl
instance impl ~ IO Bool => Op (GetVisibleR ()) Widget orig impl
instance impl ~ IO Bool => Op (GetVisible ()) Widget orig impl
instance impl ~ ([When] -> IO ()) => Op (SetWhen ()) Widget orig impl
instance impl ~ IO [When] => Op (GetWhen ()) Widget orig impl
instance impl ~ (String -> IO ()) => Op (SetTooltip ()) Widget orig impl
instance impl ~ (String -> IO ()) => Op (CopyTooltip ()) Widget orig impl
instance impl ~ IO String => Op (GetTooltip ()) Widget orig impl
instance (Parent a Image, impl ~ (Ref a -> IO ())) => Op (SetDeimage ()) Widget orig impl
instance impl ~ IO (Ref Image) => Op (GetDeimage ()) Widget orig impl
instance (Parent a Image, impl ~ (Ref a -> IO ())) => Op (SetImage ()) Widget orig impl
instance impl ~ IO (Ref Image) => Op (GetImage ()) Widget orig impl
instance impl ~ (FontSize -> IO ()) => Op (SetLabelsize ()) Widget orig impl
instance impl ~ IO FontSize => Op (GetLabelsize ()) Widget orig impl
instance impl ~ (Font -> IO ()) => Op (SetLabelfont ()) Widget orig impl
instance impl ~ IO Font => Op (GetLabelfont ()) Widget orig impl
instance impl ~ (Color -> IO ()) => Op (SetLabelcolor ()) Widget orig impl
instance impl ~ IO Color => Op (GetLabelcolor ()) Widget orig impl
instance impl ~ (Labeltype -> IO ()) => Op (SetLabeltype ()) Widget orig impl
instance impl ~ IO Labeltype => Op (GetLabeltype ()) Widget orig impl
instance impl ~ (String -> IO ()) => Op (SetLabel ()) Widget orig impl
instance impl ~ (String -> IO ()) => Op (CopyLabel ()) Widget orig impl
instance impl ~ IO String => Op (GetLabel ()) Widget orig impl
instance impl ~ (Color -> IO ()) => Op (SetSelectionColor ()) Widget orig impl
instance impl ~ IO Color => Op (GetSelectionColor ()) Widget orig impl
instance impl ~ (Color -> Color -> IO ()) => Op (SetColorWithBgSel ()) Widget orig impl
instance impl ~ (Color -> IO ()) => Op (SetColor ()) Widget orig impl
instance impl ~ IO Color => Op (GetColor ()) Widget orig impl
instance impl ~ (Boxtype -> IO ()) => Op (SetBox ()) Widget orig impl
instance impl ~ IO Boxtype => Op (GetBox ()) Widget orig impl
instance impl ~ IO Alignments => Op (GetAlign ()) Widget orig impl
instance impl ~ (Alignments -> IO ()) => Op (SetAlign ()) Widget orig impl
instance (FindOp orig (GetX ()) (Match obj), FindOp orig (GetY ()) (Match obj), FindOp orig (GetW ()) (Match obj), FindOp orig (GetH ()) (Match obj), Op (GetX ()) obj orig (IO Int), Op (GetY ()) obj orig (IO Int), Op (GetW ()) obj orig (IO Int), Op (GetH ()) obj orig (IO Int), impl ~ IO Rectangle) => Op (GetRectangle ()) Widget orig impl
instance impl ~ IO Int => Op (GetH ()) Widget orig impl
instance impl ~ IO Int => Op (GetW ()) Widget orig impl
instance impl ~ IO Int => Op (GetY ()) Widget orig impl
instance impl ~ IO Int => Op (GetX ()) Widget orig impl
instance impl ~ (Maybe (Rectangle, Alignments) -> IO ()) => Op (DrawLabel ()) Widget orig impl
instance impl ~ (Word8 -> IO ()) => Op (SetType ()) Widget orig impl
instance impl ~ IO Word8 => Op (GetType_ ()) Widget orig impl
instance (Parent a Group, impl ~ (Ref a -> IO ())) => Op (SetParent ()) Widget orig impl
instance impl ~ IO (Maybe (Ref Group)) => Op (GetParent ()) Widget orig impl
instance impl ~ (Event -> IO Int) => Op (Handle ()) Widget orig impl
instance impl ~ IO () => Op (Destroy ()) Widget orig impl

module Graphics.UI.FLTK.LowLevel.Box
boxNew :: Rectangle -> Maybe String -> Maybe (CustomWidgetFuncs Box) -> IO (Ref Box)
boxNewWithBoxtype :: Boxtype -> Rectangle -> String -> Maybe (CustomWidgetFuncs Box) -> IO (Ref Box)
instance impl ~ (Event -> IO Int) => Op (Handle ()) Box orig impl

module Graphics.UI.FLTK.LowLevel.Browser
browserNew :: Rectangle -> Maybe String -> Maybe (CustomWidgetFuncs Browser) -> IO (Ref Browser)
instance impl ~ IO () => Op (Sort ()) Browser orig impl
instance impl ~ (SortType -> IO ()) => Op (SortWithSortType ()) Browser orig impl
instance impl ~ (Int -> IO ()) => Op (SetScrollbarWidth ()) Browser orig impl
instance impl ~ IO Int => Op (GetScrollbarWidth ()) Browser orig impl
instance impl ~ (Int -> IO ()) => Op (SetScrollbarSize ()) Browser orig impl
instance impl ~ IO Int => Op (GetScrollbarSize ()) Browser orig impl
instance impl ~ (Color -> IO ()) => Op (SetTextcolor ()) Browser orig impl
instance impl ~ IO Color => Op (GetTextcolor ()) Browser orig impl
instance impl ~ (FontSize -> IO ()) => Op (SetTextsize ()) Browser orig impl
instance impl ~ IO FontSize => Op (GetTextsize ()) Browser orig impl
instance impl ~ (Font -> IO ()) => Op (SetTextfont ()) Browser orig impl
instance impl ~ IO Font => Op (GetTextfont ()) Browser orig impl
instance impl ~ (ScrollbarMode -> IO ()) => Op (SetHasScrollbar ()) Browser orig impl
instance impl ~ IO ScrollbarMode => Op (GetHasScrollbar ()) Browser orig impl
instance impl ~ (Int -> IO ()) => Op (SetHposition ()) Browser orig impl
instance impl ~ IO Int => Op (GetHposition ()) Browser orig impl
instance impl ~ (Int -> IO ()) => Op (SetPosition ()) Browser orig impl
instance impl ~ IO Int => Op (GetPosition ()) Browser orig impl
instance impl ~ (Int -> IO Int) => Op (DeselectAndCallback ()) Browser orig impl
instance impl ~ IO Int => Op (Deselect ()) Browser orig impl
instance impl ~ (Int -> IO ()) => Op (RemoveIcon ()) Browser orig impl
instance impl ~ (Int -> IO (Ref Image)) => Op (GetIcon ()) Browser orig impl
instance impl ~ (Int -> Ref Image -> IO ()) => Op (SetIcon ()) Browser orig impl
instance impl ~ (Int -> IO ()) => Op (MakeVisible ()) Browser orig impl
instance impl ~ (Int -> IO Bool) => Op (Displayed ()) Browser orig impl
instance impl ~ ([Int] -> IO ()) => Op (SetColumnWidths ()) Browser orig impl
instance impl ~ IO [Int] => Op (GetColumnWidths ()) Browser orig impl
instance impl ~ (Char -> IO ()) => Op (SetColumnChar ()) Browser orig impl
instance impl ~ IO Char => Op (GetColumnChar ()) Browser orig impl
instance impl ~ (Char -> IO ()) => Op (SetFormatChar ()) Browser orig impl
instance impl ~ IO Char => Op (GetFormatChar ()) Browser orig impl
instance impl ~ (Int -> String -> IO ()) => Op (SetText ()) Browser orig impl
instance impl ~ (Int -> IO String) => Op (GetText ()) Browser orig impl
instance impl ~ (Int -> IO ()) => Op (SetValue ()) Browser orig impl
instance impl ~ IO Int => Op (GetValue ()) Browser orig impl
instance impl ~ (Int -> IO Int) => Op (Visible ()) Browser orig impl
instance impl ~ IO () => Op (Hide ()) Browser orig impl
instance impl ~ (Int -> IO ()) => Op (HideLine ()) Browser orig impl
instance impl ~ IO () => Op (ShowWidget ()) Browser orig impl
instance impl ~ (Int -> IO ()) => Op (ShowWidgetLine ()) Browser orig impl
instance impl ~ (Int -> IO Bool) => Op (Selected ()) Browser orig impl
instance impl ~ (Int -> Bool -> IO Int) => Op (Select ()) Browser orig impl
instance impl ~ (Int -> IO ()) => Op (SetMiddleline ()) Browser orig impl
instance impl ~ (Int -> IO ()) => Op (SetBottomline ()) Browser orig impl
instance impl ~ (Int -> IO ()) => Op (SetTopline ()) Browser orig impl
instance impl ~ (Int -> LinePosition -> IO ()) => Op (Lineposition ()) Browser orig impl
instance impl ~ IO Int => Op (GetTopline ()) Browser orig impl
instance impl ~ (Int -> Int -> IO ()) => Op (SetSize ()) Browser orig impl
instance impl ~ IO Int => Op (GetSize ()) Browser orig impl
instance impl ~ IO () => Op (Clear ()) Browser orig impl
instance impl ~ (Int -> Int -> IO ()) => Op (Swap ()) Browser orig impl
instance impl ~ (String -> IO Int) => Op (Load ()) Browser orig impl
instance impl ~ (Int -> Int -> IO ()) => Op (Move ()) Browser orig impl
instance impl ~ (Int -> String -> IO ()) => Op (Insert ()) Browser orig impl
instance impl ~ (String -> IO ()) => Op (Add ()) Browser orig impl
instance impl ~ (Int -> IO ()) => Op (Remove ()) Browser orig impl
instance impl ~ IO () => Op (Destroy ()) Browser orig impl
instance impl ~ (Event -> IO Int) => Op (Handle ()) Browser orig impl

module Graphics.UI.FLTK.LowLevel.Button
buttonCustom :: Rectangle -> Maybe String -> Maybe (CustomWidgetFuncs Button) -> IO (Ref Button)
buttonNew :: Rectangle -> Maybe String -> IO (Ref Button)
instance impl ~ (Maybe (Boxtype, Rectangle) -> IO ()) => Op (DrawFocus ()) Button orig impl
instance impl ~ IO () => Op (DrawBackdrop ()) Button orig impl
instance impl ~ (Boxtype -> Color -> Maybe Rectangle -> IO ()) => Op (DrawBoxWithBoxtype ()) Button orig impl
instance impl ~ IO () => Op (DrawBox ()) Button orig impl
instance impl ~ (Color -> IO ()) => Op (SetDownColor ()) Button orig impl
instance impl ~ IO Color => Op (GetDownColor ()) Button orig impl
instance impl ~ (Boxtype -> IO ()) => Op (SetDownBox ()) Button orig impl
instance impl ~ IO Boxtype => Op (GetDownBox ()) Button orig impl
instance impl ~ (Int -> IO ()) => Op (SetShortcut ()) Button orig impl
instance impl ~ IO FlShortcut => Op (GetShortcut ()) Button orig impl
instance impl ~ IO () => Op (Setonly ()) Button orig impl
instance impl ~ IO Bool => Op (Clear ()) Button orig impl
instance impl ~ IO Bool => Op (Set ()) Button orig impl
instance impl ~ (Bool -> IO Bool) => Op (SetValue ()) Button orig impl
instance impl ~ IO Bool => Op (GetValue ()) Button orig impl
instance impl ~ IO () => Op (ShowWidget ()) Button orig impl
instance impl ~ IO () => Op (ShowWidgetSuper ()) Button orig impl
instance impl ~ IO () => Op (Hide ()) Button orig impl
instance impl ~ IO () => Op (HideSuper ()) Button orig impl
instance impl ~ (Rectangle -> IO ()) => Op (Resize ()) Button orig impl
instance impl ~ (Rectangle -> IO ()) => Op (ResizeSuper ()) Button orig impl
instance impl ~ (Event -> IO Int) => Op (Handle ()) Button orig impl
instance impl ~ (Int -> IO Int) => Op (HandleSuper ()) Button orig impl
instance impl ~ IO () => Op (DrawSuper ()) Button orig impl
instance impl ~ IO () => Op (Destroy ()) Button orig impl

module Graphics.UI.FLTK.LowLevel.MenuPrim
menu_New :: Rectangle -> Maybe String -> Maybe (CustomWidgetFuncs MenuPrim) -> IO (Ref MenuPrim)
instance impl ~ (Int -> IO ()) => Op (SetDownColor ()) MenuPrim orig impl
instance impl ~ IO Color => Op (GetDownColor ()) MenuPrim orig impl
instance impl ~ (Boxtype -> IO ()) => Op (SetDownBox ()) MenuPrim orig impl
instance impl ~ IO Boxtype => Op (GetDownBox ()) MenuPrim orig impl
instance impl ~ (Color -> IO ()) => Op (SetTextcolor ()) MenuPrim orig impl
instance impl ~ IO Color => Op (GetTextcolor ()) MenuPrim orig impl
instance impl ~ (FontSize -> IO ()) => Op (SetTextsize ()) MenuPrim orig impl
instance impl ~ IO FontSize => Op (GetTextsize ()) MenuPrim orig impl
instance impl ~ (Font -> IO ()) => Op (SetTextfont ()) MenuPrim orig impl
instance impl ~ IO Font => Op (GetTextfont ()) MenuPrim orig impl
instance impl ~ (Int -> IO String) => Op (GetTextWithIndex ()) MenuPrim orig impl
instance impl ~ IO String => Op (GetText ()) MenuPrim orig impl
instance impl ~ (MenuItemReference -> IO Int) => Op (SetValue ()) MenuPrim orig impl
instance impl ~ IO Int => Op (GetValue ()) MenuPrim orig impl
instance impl ~ IO (Ref MenuItem) => Op (Mvalue ()) MenuPrim orig impl
instance impl ~ (Int -> IO Int) => Op (GetMode ()) MenuPrim orig impl
instance impl ~ (Int -> Int -> IO ()) => Op (SetMode ()) MenuPrim orig impl
instance impl ~ (Int -> ShortcutKeySequence -> IO ()) => Op (SetShortcut ()) MenuPrim orig impl
instance impl ~ (Int -> IO ()) => Op (Remove ()) MenuPrim orig impl
instance impl ~ (Int -> String -> IO ()) => Op (Replace ()) MenuPrim orig impl
instance impl ~ (Int -> IO (Either OutOfRange ())) => Op (ClearSubmenu ()) MenuPrim orig impl
instance impl ~ IO () => Op (Clear ()) MenuPrim orig impl
instance impl ~ (Int -> Int -> IO ()) => Op (SetSize ()) MenuPrim orig impl
instance impl ~ IO Int => Op (GetSize ()) MenuPrim orig impl
instance (Parent a MenuPrim, impl ~ (String -> Maybe Shortcut -> (Ref a -> IO ()) -> MenuItemFlags -> IO MenuItemIndex)) => Op (Add ()) MenuPrim orig impl
instance impl ~ (String -> IO ()) => Op (AddName ()) MenuPrim orig impl
instance (Parent a MenuPrim, impl ~ (Int -> String -> Maybe Shortcut -> (Ref a -> IO ()) -> MenuItemFlags -> IO MenuItemIndex)) => Op (Insert ()) MenuPrim orig impl
instance (Parent a MenuItem, impl ~ (Ref a -> IO ())) => Op (Copy ()) MenuPrim orig impl
instance (Parent a MenuItem, impl ~ ([Ref a] -> IO ())) => Op (SetMenu ()) MenuPrim orig impl
instance impl ~ IO (Ref MenuItem) => Op (GetMenu ()) MenuPrim orig impl
instance impl ~ IO () => Op (Global ()) MenuPrim orig impl
instance (Parent a MenuItem, impl ~ IO (Ref a)) => Op (TestShortcut ()) MenuPrim orig impl
instance impl ~ (MenuItemLocator -> IO (Maybe Int)) => Op (FindIndex ()) MenuPrim orig impl
instance (Parent a MenuItem, Parent b MenuItem, impl ~ (Ref a -> IO (Ref b))) => Op (Picked ()) MenuPrim orig impl
instance impl ~ IO (Maybe String) => Op (ItemPathnameRecent ()) MenuPrim orig impl
instance (Parent a MenuItem, impl ~ (Ref a -> IO (Maybe String))) => Op (ItemPathname ()) MenuPrim orig impl
instance impl ~ IO () => Op (ShowWidget ()) MenuPrim orig impl
instance impl ~ IO () => Op (ShowWidgetSuper ()) MenuPrim orig impl
instance impl ~ IO () => Op (Hide ()) MenuPrim orig impl
instance impl ~ IO () => Op (HideSuper ()) MenuPrim orig impl
instance impl ~ (Rectangle -> IO ()) => Op (Resize ()) MenuPrim orig impl
instance impl ~ (Rectangle -> IO ()) => Op (ResizeSuper ()) MenuPrim orig impl
instance impl ~ (Event -> IO Int) => Op (Handle ()) MenuPrim orig impl
instance impl ~ (Int -> IO Int) => Op (HandleSuper ()) MenuPrim orig impl
instance impl ~ IO () => Op (Destroy ()) MenuPrim orig impl

module Graphics.UI.FLTK.LowLevel.Table
data TableCoordinate
TableCoordinate :: Row -> Column -> TableCoordinate
data Row
Row :: Int -> Row
data Column
Column :: Int -> Column
data CustomTableFuncs a
CustomTableFuncs :: Maybe (Ref a -> TableContext -> TableCoordinate -> Rectangle -> IO ()) -> Maybe (Ref a -> IO ()) -> Maybe (Ref a -> Int -> IO ()) -> Maybe (Ref a -> Int -> IO ()) -> CustomTableFuncs a
drawCellCustom :: CustomTableFuncs a -> Maybe (Ref a -> TableContext -> TableCoordinate -> Rectangle -> IO ())
clearCustom :: CustomTableFuncs a -> Maybe (Ref a -> IO ())
setRowsCustom :: CustomTableFuncs a -> Maybe (Ref a -> Int -> IO ())
setColsCustom :: CustomTableFuncs a -> Maybe (Ref a -> Int -> IO ())
mkSetInt :: (Ptr () -> CInt -> IO ()) -> IO (FunPtr (Ptr () -> CInt -> IO ()))
mkDrawCell :: (Ptr () -> CInt -> CInt -> CInt -> CInt -> CInt -> CInt -> CInt -> IO ()) -> IO (FunPtr (Ptr () -> CInt -> CInt -> CInt -> CInt -> CInt -> CInt -> CInt -> IO ()))
toSetIntPrim :: (Ref a -> Int -> IO ()) -> IO (FunPtr (Ptr () -> CInt -> IO ()))
toDrawCellPrim :: (Ref a -> TableContext -> TableCoordinate -> Rectangle -> IO ()) -> IO (FunPtr (Ptr () -> CInt -> CInt -> CInt -> CInt -> CInt -> CInt -> CInt -> IO ()))
fillCustomTableFunctionStruct :: Parent a Table => Ptr () -> CustomTableFuncs a -> IO ()
defaultCustomTableFuncs :: Parent a Table => CustomTableFuncs a
tableCustom :: Rectangle -> Maybe String -> CustomWidgetFuncs Table -> CustomTableFuncs Table -> IO (Ref Table)
tableCustomFunctionStruct :: (Parent a Widget, Parent b Table) => CustomWidgetFuncs a -> CustomTableFuncs b -> IO (Ptr ())
instance impl ~ IO () => Op (Hide ()) Table orig impl
instance impl ~ IO () => Op (HideSuper ()) Table orig impl
instance impl ~ IO () => Op (ShowWidget ()) Table orig impl
instance impl ~ IO () => Op (ShowWidgetSuper ()) Table orig impl
instance impl ~ (Int -> IO ()) => Op (SetColsSuper ()) Table orig impl
instance impl ~ (Int -> IO ()) => Op (SetRowsSuper ()) Table orig impl
instance impl ~ IO () => Op (Clear ()) Table orig impl
instance impl ~ IO () => Op (ClearSuper ()) Table orig impl
instance impl ~ (Rectangle -> IO ()) => Op (Resize ()) Table orig impl
instance impl ~ (Rectangle -> IO ()) => Op (ResizeSuper ()) Table orig impl
instance impl ~ (Event -> IO Int) => Op (Handle ()) Table orig impl
instance impl ~ IO () => Op (Draw ()) Table orig impl
instance impl ~ IO () => Op (DrawSuper ()) Table orig impl
instance impl ~ (TableContext -> TableCoordinate -> IO (Maybe Rectangle)) => Op (FindCell ()) Table orig impl
instance impl ~ (TableContext -> TableCoordinate -> IO ()) => Op (DoCallback ()) Table orig impl
instance impl ~ IO TableContext => Op (CallbackContext ()) Table orig impl
instance impl ~ IO Column => Op (CallbackCol ()) Table orig impl
instance impl ~ IO Row => Op (CallbackRow ()) Table orig impl
instance (Parent a Widget, impl ~ (Ref a -> IO Int)) => Op (Find ()) Table orig impl
instance impl ~ IO Int => Op (Children ()) Table orig impl
instance impl ~ (Int -> IO (Ref Widget)) => Op (GetChild ()) Table orig impl
instance impl ~ IO [Ref Widget] => Op (GetArray ()) Table orig impl
instance impl ~ IO () => Op (End ()) Table orig impl
instance impl ~ IO () => Op (Begin ()) Table orig impl
instance (Parent a Widget, Parent b Widget, impl ~ (Ref a -> Ref b -> IO ())) => Op (InsertWithBefore ()) Table orig impl
instance (Parent a Widget, impl ~ (Ref a -> Int -> IO ())) => Op (Insert ()) Table orig impl
instance (Parent a Widget, impl ~ (Ref a -> IO ())) => Op (Add ()) Table orig impl
instance impl ~ IO () => Op (InitSizes ()) Table orig impl
instance impl ~ (TableCoordinate -> IO Int) => Op (MoveCursor ()) Table orig impl
instance impl ~ (Int -> Int -> Int -> Int -> IO ()) => Op (SetSelection ()) Table orig impl
instance impl ~ IO (TableCoordinate, TableCoordinate) => Op (GetSelection ()) Table orig impl
instance impl ~ (TableCoordinate -> IO Bool) => Op (IsSelected ()) Table orig impl
instance impl ~ IO Row => Op (GetTopRow ()) Table orig impl
instance impl ~ (Row -> IO ()) => Op (SetTopRow ()) Table orig impl
instance impl ~ IO Column => Op (GetColPosition ()) Table orig impl
instance impl ~ IO Row => Op (GetRowPosition ()) Table orig impl
instance impl ~ (Column -> IO ()) => Op (SetColPosition ()) Table orig impl
instance impl ~ (Row -> IO ()) => Op (SetRowPosition ()) Table orig impl
instance impl ~ (Int -> IO ()) => Op (SetColWidthAll ()) Table orig impl
instance impl ~ (Int -> IO ()) => Op (SetRowHeightAll ()) Table orig impl
instance impl ~ (Column -> IO Int) => Op (GetColWidth ()) Table orig impl
instance impl ~ (Column -> Int -> IO ()) => Op (SetColWidth ()) Table orig impl
instance impl ~ (Row -> IO Int) => Op (GetRowHeight ()) Table orig impl
instance impl ~ (Row -> Int -> IO ()) => Op (SetRowHeight ()) Table orig impl
instance impl ~ IO Color => Op (GetColHeaderColor ()) Table orig impl
instance impl ~ (Color -> IO ()) => Op (SetColHeaderColor ()) Table orig impl
instance impl ~ IO Color => Op (GetRowHeaderColor ()) Table orig impl
instance impl ~ (Color -> IO ()) => Op (SetRowHeaderColor ()) Table orig impl
instance impl ~ IO Int => Op (GetRowHeaderWidth ()) Table orig impl
instance impl ~ (Int -> IO ()) => Op (SetRowHeaderWidth ()) Table orig impl
instance impl ~ IO Int => Op (GetColHeaderHeight ()) Table orig impl
instance impl ~ (Int -> IO ()) => Op (SetColHeaderHeight ()) Table orig impl
instance impl ~ (Bool -> IO ()) => Op (SetColHeader ()) Table orig impl
instance impl ~ IO Bool => Op (GetColHeader ()) Table orig impl
instance impl ~ (Bool -> IO ()) => Op (SetRowHeader ()) Table orig impl
instance impl ~ IO Bool => Op (GetRowHeader ()) Table orig impl
instance impl ~ (Int -> IO ()) => Op (SetRowResizeMin ()) Table orig impl
instance impl ~ IO Int => Op (GetRowResizeMin ()) Table orig impl
instance impl ~ (Int -> IO ()) => Op (SetColResizeMin ()) Table orig impl
instance impl ~ IO Int => Op (GetColResizeMin ()) Table orig impl
instance impl ~ (Bool -> IO ()) => Op (SetColResize ()) Table orig impl
instance impl ~ IO Bool => Op (GetColResize ()) Table orig impl
instance impl ~ (Bool -> IO ()) => Op (SetRowResize ()) Table orig impl
instance impl ~ IO Bool => Op (GetRowResize ()) Table orig impl
instance impl ~ IO Bool => Op (IsInteractiveResize ()) Table orig impl
instance impl ~ IO (TableCoordinate, TableCoordinate) => Op (GetVisibleCells ()) Table orig impl
instance impl ~ IO Int => Op (GetCols ()) Table orig impl
instance impl ~ (Int -> IO ()) => Op (SetCols ()) Table orig impl
instance impl ~ IO Int => Op (GetRows ()) Table orig impl
instance impl ~ (Int -> IO ()) => Op (SetRows ()) Table orig impl
instance impl ~ IO Boxtype => Op (GetTableBox ()) Table orig impl
instance impl ~ (Boxtype -> IO ()) => Op (SetTableBox ()) Table orig impl
instance impl ~ IO () => Op (Destroy ()) Table orig impl

module Graphics.UI.FLTK.LowLevel.TableRow
tableRowNew :: Rectangle -> Maybe String -> CustomWidgetFuncs TableRow -> CustomTableFuncs TableRow -> IO (Ref TableRow)
data TableRowSelectFlag
instance impl ~ (TableRowSelectFlag -> IO ()) => Op (SelectAllRows ()) TableRow orig impl
instance impl ~ (Int -> IO (Either OutOfRange Bool)) => Op (GetRowSelected ()) TableRow orig impl
instance impl ~ (Rectangle -> IO ()) => Op (Resize ()) TableRow orig impl
instance impl ~ (Rectangle -> IO ()) => Op (ResizeSuper ()) TableRow orig impl
instance impl ~ (Event -> IO Int) => Op (Handle ()) TableRow orig impl
instance impl ~ (Int -> IO ()) => Op (SetColsSuper ()) TableRow orig impl
instance impl ~ (Int -> IO ()) => Op (SetRowsSuper ()) TableRow orig impl
instance impl ~ IO () => Op (Clear ()) TableRow orig impl
instance impl ~ IO () => Op (ClearSuper ()) TableRow orig impl
instance impl ~ (Int -> IO ()) => Op (SetCols ()) TableRow orig impl
instance impl ~ (Int -> IO ()) => Op (SetRows ()) TableRow orig impl
instance impl ~ IO TableRowSelectMode => Op (GetType ()) TableRow orig impl
instance impl ~ (TableRowSelectMode -> IO ()) => Op (SetType ()) TableRow orig impl
instance impl ~ IO Int => Op (GetRows ()) TableRow orig impl
instance impl ~ IO () => Op (Destroy ()) TableRow orig impl

module Graphics.UI.FLTK.LowLevel.Valuator
valuatorNew :: Rectangle -> Maybe String -> Maybe (CustomWidgetFuncs Valuator) -> IO (Ref Valuator)
instance impl ~ (Double -> Int -> IO Double) => Op (Increment ()) Valuator orig impl
instance impl ~ (Double -> IO Double) => Op (Clamp ()) Valuator orig impl
instance impl ~ (Double -> IO Double) => Op (Round ()) Valuator orig impl
instance impl ~ (String -> IO Int) => Op (Format ()) Valuator orig impl
instance impl ~ (Double -> IO Int) => Op (SetValue ()) Valuator orig impl
instance impl ~ IO Double => Op (GetValue ()) Valuator orig impl
instance impl ~ (Int -> IO ()) => Op (Precision ()) Valuator orig impl
instance impl ~ IO Rational => Op (GetStep ()) Valuator orig impl
instance impl ~ (Rational -> IO ()) => Op (SetStep ()) Valuator orig impl
instance impl ~ (Double -> Double -> IO ()) => Op (Range ()) Valuator orig impl
instance impl ~ (Double -> IO ()) => Op (SetMaximum ()) Valuator orig impl
instance impl ~ IO Double => Op (GetMaximum ()) Valuator orig impl
instance impl ~ (Double -> IO ()) => Op (SetMinimum ()) Valuator orig impl
instance impl ~ IO Double => Op (GetMinimum ()) Valuator orig impl
instance impl ~ (Double -> Double -> IO ()) => Op (Bounds ()) Valuator orig impl
instance impl ~ (Rectangle -> IO ()) => Op (Resize ()) Valuator orig impl
instance impl ~ (Rectangle -> IO ()) => Op (ResizeSuper ()) Valuator orig impl
instance impl ~ (Event -> IO Int) => Op (Handle ()) Valuator orig impl
instance impl ~ IO () => Op (Destroy ()) Valuator orig impl

module Graphics.UI.FLTK.LowLevel.Window
data CustomWindowFuncs a
CustomWindowFuncs :: Maybe (Ref a -> IO ()) -> CustomWindowFuncs a
flushCustom :: CustomWindowFuncs a -> Maybe (Ref a -> IO ())
data OptionalSizeRangeArgs
OptionalSizeRangeArgs :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Bool -> OptionalSizeRangeArgs
maxw :: OptionalSizeRangeArgs -> Maybe Int
maxh :: OptionalSizeRangeArgs -> Maybe Int
dw :: OptionalSizeRangeArgs -> Maybe Int
dh :: OptionalSizeRangeArgs -> Maybe Int
aspect :: OptionalSizeRangeArgs -> Maybe Bool
data PositionSpec
ByPosition :: Position -> PositionSpec
ByWidget :: (Ref a) -> PositionSpec
defaultCustomWindowFuncs :: Parent a Window => CustomWindowFuncs a

-- | Fill up a struct with pointers to functions on the Haskell side that
--   will get called instead of the default ones.
--   
--   Fill up the <a>Widget</a> part the function pointer struct.
--   
--   Only of interest to <a>Widget</a> contributors
fillCustomWidgetFunctionStruct :: Parent a Widget => Ptr () -> CustomWidgetFuncs a -> IO ()
defaultOptionalSizeRangeArgs :: OptionalSizeRangeArgs
windowCustom :: Size -> Maybe Position -> Maybe String -> CustomWidgetFuncs Window -> CustomWindowFuncs Window -> IO (Ref Window)
windowNew :: Size -> Maybe Position -> Maybe String -> IO (Ref Window)
windowMaker :: (Parent a Window, Parent b Widget) => Size -> Maybe Position -> Maybe String -> CustomWidgetFuncs b -> CustomWindowFuncs a -> (Int -> Int -> Ptr () -> IO (Ptr ())) -> (Int -> Int -> String -> Ptr () -> IO (Ptr ())) -> (Int -> Int -> Int -> Int -> Ptr () -> IO (Ptr ())) -> (Int -> Int -> Int -> Int -> String -> Ptr () -> IO (Ptr ())) -> IO (Ref a)
currentWindow :: Parent a Window => IO (Ref a)
instance impl ~ IO () => Op (WaitForExpose ()) Window orig impl
instance impl ~ (Maybe (Boxtype, Rectangle) -> IO ()) => Op (DrawFocus ()) Window orig impl
instance impl ~ IO () => Op (DrawBackdrop ()) Window orig impl
instance impl ~ (Boxtype -> Color -> Maybe Rectangle -> IO ()) => Op (DrawBoxWithBoxtype ()) Window orig impl
instance impl ~ IO () => Op (DrawBox ()) Window orig impl
instance impl ~ IO Int => Op (GetDecoratedH ()) Window orig impl
instance impl ~ IO Int => Op (GetDecoratedW ()) Window orig impl
instance impl ~ (CursorType -> (Maybe Color, Maybe Color) -> IO ()) => Op (SetDefaultCursorWithFgBg ()) Window orig impl
instance impl ~ (CursorType -> IO ()) => Op (SetDefaultCursor ()) Window orig impl
instance impl ~ (Cursor -> (Maybe Color, Maybe Color) -> IO ()) => Op (SetCursorWithFgBg ()) Window orig impl
instance impl ~ (Cursor -> IO ()) => Op (SetCursor ()) Window orig impl
instance impl ~ IO () => Op (MakeCurrent ()) Window orig impl
instance impl ~ IO Int => Op (GetYRoot ()) Window orig impl
instance impl ~ IO Int => Op (GetXRoot ()) Window orig impl
instance impl ~ IO () => Op (Iconize ()) Window orig impl
instance impl ~ IO Bool => Op (Shown ()) Window orig impl
instance (Parent a Image, impl ~ (Ref a -> IO ())) => Op (SetIcon ()) Window orig impl
instance impl ~ IO (Maybe (Ref Image)) => Op (GetIcon ()) Window orig impl
instance impl ~ (String -> IO ()) => Op (SetXclass ()) Window orig impl
instance impl ~ IO String => Op (GetXclass ()) Window orig impl
instance impl ~ (String -> IO ()) => Op (CopyLabel ()) Window orig impl
instance impl ~ (String -> String -> IO ()) => Op (SetLabelWithIconlabel ()) Window orig impl
instance impl ~ (String -> IO ()) => Op (SetIconlabel ()) Window orig impl
instance impl ~ (String -> IO ()) => Op (SetLabel ()) Window orig impl
instance impl ~ IO String => Op (GetIconlabel ()) Window orig impl
instance impl ~ IO String => Op (GetLabel ()) Window orig impl
instance impl ~ (Int -> Int -> OptionalSizeRangeArgs -> IO ()) => Op (SizeRangeWithArgs ()) Window orig impl
instance impl ~ (Int -> Int -> IO ()) => Op (SizeRange ()) Window orig impl
instance impl ~ IO () => Op (FreePosition ()) Window orig impl
instance impl ~ (PositionSpec -> Maybe Bool -> IO ()) => Op (HotSpot ()) Window orig impl
instance impl ~ IO Bool => Op (GetTooltipWindow ()) Window orig impl
instance impl ~ IO () => Op (SetTooltipWindow ()) Window orig impl
instance impl ~ IO Bool => Op (GetMenuWindow ()) Window orig impl
instance impl ~ IO () => Op (SetMenuWindow ()) Window orig impl
instance impl ~ IO Bool => Op (NonModal ()) Window orig impl
instance impl ~ IO () => Op (SetNonModal ()) Window orig impl
instance impl ~ IO Bool => Op (GetModal ()) Window orig impl
instance impl ~ IO () => Op (SetModal ()) Window orig impl
instance impl ~ IO Bool => Op (GetOverride ()) Window orig impl
instance impl ~ IO () => Op (SetOverride ()) Window orig impl
instance impl ~ IO Bool => Op (GetBorder ()) Window orig impl
instance impl ~ IO () => Op (ClearBorder ()) Window orig impl
instance impl ~ (Bool -> IO ()) => Op (SetBorder ()) Window orig impl
instance impl ~ (Maybe Rectangle -> IO ()) => Op (FullscreenOff ()) Window orig impl
instance impl ~ IO () => Op (MakeFullscreen ()) Window orig impl
instance impl ~ IO Bool => Op (Changed ()) Window orig impl
instance impl ~ IO () => Op (Hide ()) Window orig impl
instance impl ~ ((Ref orig -> IO ()) -> IO ()) => Op (SetCallback ()) Window orig impl
instance impl ~ (Rectangle -> IO ()) => Op (Resize ()) Window orig impl
instance impl ~ (Event -> IO Int) => Op (Handle ()) Window orig impl
instance impl ~ IO () => Op (ShowWidget ()) Window orig impl
instance impl ~ IO () => Op (FlushSuper ()) Window orig impl
instance impl ~ IO () => Op (HideSuper ()) Window orig impl
instance impl ~ IO () => Op (ShowWidgetSuper ()) Window orig impl
instance impl ~ (Rectangle -> IO ()) => Op (ResizeSuper ()) Window orig impl
instance impl ~ (Int -> IO Int) => Op (HandleSuper ()) Window orig impl
instance impl ~ IO () => Op (DrawSuper ()) Window orig impl
instance impl ~ IO () => Op (Destroy ()) Window orig impl

module Graphics.UI.FLTK.LowLevel.DoubleWindow
doubleWindowNew :: Size -> Maybe Position -> Maybe String -> IO (Ref DoubleWindow)
doubleWindowCustom :: Size -> Maybe Position -> Maybe String -> CustomWidgetFuncs DoubleWindow -> CustomWindowFuncs DoubleWindow -> IO (Ref DoubleWindow)
instance impl ~ (Rectangle -> IO ()) => Op (Resize ()) DoubleWindow orig impl
instance impl ~ (Event -> IO Int) => Op (Handle ()) DoubleWindow orig impl
instance impl ~ IO () => Op (ShowWidget ()) DoubleWindow orig impl
instance impl ~ IO () => Op (FlushSuper ()) DoubleWindow orig impl
instance impl ~ IO () => Op (Hide ()) DoubleWindow orig impl
instance impl ~ IO () => Op (HideSuper ()) DoubleWindow orig impl
instance impl ~ IO () => Op (ShowWidgetSuper ()) DoubleWindow orig impl
instance impl ~ (Rectangle -> IO ()) => Op (ResizeSuper ()) DoubleWindow orig impl
instance impl ~ (Int -> IO Int) => Op (HandleSuper ()) DoubleWindow orig impl
instance impl ~ IO () => Op (DrawSuper ()) DoubleWindow orig impl
instance impl ~ IO () => Op (Destroy ()) DoubleWindow orig impl

module Graphics.UI.FLTK.LowLevel.GlWindow
glWindowNew :: Size -> Maybe Position -> Maybe String -> IO (Ref GlWindow)
glWindowCustom :: Size -> Maybe Position -> Maybe String -> CustomWidgetFuncs GlWindow -> CustomWindowFuncs GlWindow -> IO (Ref GlWindow)
instance impl ~ IO () => Op (MakeOverlayCurrent ()) GlWindow orig impl
instance impl ~ IO () => Op (HideOverlay ()) GlWindow orig impl
instance impl ~ IO () => Op (RedrawOverlay ()) GlWindow orig impl
instance impl ~ IO Int => Op (CanDoOverlay ()) GlWindow orig impl
instance impl ~ IO () => Op (Ortho ()) GlWindow orig impl
instance impl ~ IO () => Op (SwapBuffers ()) GlWindow orig impl
instance impl ~ (Ref GlContext -> Bool -> IO ()) => Op (SetContextWithDestroyFlag ()) GlWindow orig impl
instance impl ~ (Ref GlContext -> IO ()) => Op (SetContext ()) GlWindow orig impl
instance impl ~ IO (Ref GlContext) => Op (GetContext ()) GlWindow orig impl
instance impl ~ (Mode -> IO Int) => Op (SetMode ()) GlWindow orig impl
instance impl ~ IO Mode => Op (GetMode ()) GlWindow orig impl
instance impl ~ IO Int => Op (CanDo ()) GlWindow orig impl
instance impl ~ (Int -> IO Int) => Op (CanDoWithM ()) GlWindow orig impl
instance impl ~ (Bool -> IO ()) => Op (SetContextValid ()) GlWindow orig impl
instance impl ~ IO Bool => Op (GetContextValid ()) GlWindow orig impl
instance impl ~ IO () => Op (Invalidate ()) GlWindow orig impl
instance impl ~ (Bool -> IO ()) => Op (SetValid ()) GlWindow orig impl
instance impl ~ IO Bool => Op (GetValid ()) GlWindow orig impl
instance impl ~ IO () => Op (Destroy ()) GlWindow orig impl
instance impl ~ (Event -> IO Int) => Op (HandleSuper ()) GlWindow orig impl
instance impl ~ (Event -> IO Int) => Op (Handle ()) GlWindow orig impl
instance impl ~ (Rectangle -> IO ()) => Op (Resize ()) GlWindow orig impl
instance impl ~ IO () => Op (ShowWidget ()) GlWindow orig impl
instance impl ~ IO () => Op (Hide ()) GlWindow orig impl
instance impl ~ (Rectangle -> IO ()) => Op (ResizeSuper ()) GlWindow orig impl
instance impl ~ IO () => Op (ShowWidgetSuper ()) GlWindow orig impl
instance impl ~ IO () => Op (Flush ()) GlWindow orig impl
instance impl ~ IO () => Op (FlushSuper ()) GlWindow orig impl
instance impl ~ IO () => Op (HideSuper ()) GlWindow orig impl
instance impl ~ IO () => Op (DrawSuper ()) GlWindow orig impl

module Graphics.UI.FLTK.LowLevel.SingleWindow
singleWindowNew :: Size -> Maybe Position -> Maybe String -> IO (Ref SingleWindow)
singleWindowCustom :: Size -> Maybe Position -> Maybe String -> CustomWidgetFuncs SingleWindow -> CustomWindowFuncs SingleWindow -> IO (Ref SingleWindow)
instance impl ~ (Rectangle -> IO ()) => Op (Resize ()) SingleWindow orig impl
instance impl ~ (Event -> IO Int) => Op (Handle ()) SingleWindow orig impl
instance impl ~ IO () => Op (ShowWidget ()) SingleWindow orig impl
instance impl ~ IO () => Op (FlushSuper ()) SingleWindow orig impl
instance impl ~ IO () => Op (Hide ()) SingleWindow orig impl
instance impl ~ IO () => Op (HideSuper ()) SingleWindow orig impl
instance impl ~ IO () => Op (ShowWidgetSuper ()) SingleWindow orig impl
instance impl ~ (Rectangle -> IO ()) => Op (ResizeSuper ()) SingleWindow orig impl
instance impl ~ (Int -> IO Int) => Op (HandleSuper ()) SingleWindow orig impl
instance impl ~ IO () => Op (DrawSuper ()) SingleWindow orig impl
instance impl ~ IO () => Op (Destroy ()) SingleWindow orig impl

module Graphics.UI.FLTK.LowLevel.Wizard
wizardNew :: Rectangle -> Maybe String -> IO (Ref Wizard)
instance impl ~ IO (Ref Widget) => Op (GetValue ()) Wizard orig impl
instance (Parent a Widget, impl ~ (Ref a -> IO ())) => Op (SetValue ()) Wizard orig impl
instance impl ~ IO () => Op (Prev ()) Wizard orig impl
instance impl ~ IO () => Op (Next ()) Wizard orig impl
instance impl ~ IO () => Op (Destroy ()) Wizard orig impl

module Graphics.UI.FLTK.LowLevel.TextSelection
instance impl ~ IO (Maybe BufferRange) => Op (GetPosition ()) TextSelection orig impl
instance impl ~ (BufferOffset -> IO Bool) => Op (Includes ()) TextSelection orig impl
instance impl ~ (Bool -> IO ()) => Op (SetSelected ()) TextSelection orig impl
instance impl ~ IO Bool => Op (Selected ()) TextSelection orig impl
instance impl ~ IO BufferOffset => Op (End ()) TextSelection orig impl
instance impl ~ IO BufferOffset => Op (Start ()) TextSelection orig impl
instance impl ~ (BufferOffset -> Int -> Int -> IO ()) => Op (Update ()) TextSelection orig impl
instance impl ~ (BufferRange -> IO ()) => Op (Set ()) TextSelection orig impl

module Graphics.UI.FLTK.LowLevel.TextBuffer
textBufferNew :: Maybe Int -> Maybe Int -> IO (Ref TextBuffer)
instance impl ~ (BufferOffset -> IO (Either OutOfRange BufferOffset)) => Op (Utf8Align ()) TextBuffer orig impl
instance impl ~ (BufferOffset -> IO BufferOffset) => Op (NextCharClipped ()) TextBuffer orig impl
instance impl ~ (BufferOffset -> IO BufferOffset) => Op (NextChar ()) TextBuffer orig impl
instance impl ~ (BufferOffset -> IO (Either OutOfRange BufferOffset)) => Op (PrevCharClipped ()) TextBuffer orig impl
instance impl ~ (BufferOffset -> IO (Either OutOfRange BufferOffset)) => Op (PrevChar ()) TextBuffer orig impl
instance impl ~ IO (Ref TextSelection) => Op (HighlightSelection ()) TextBuffer orig impl
instance impl ~ IO (Ref TextSelection) => Op (SecondarySelection ()) TextBuffer orig impl
instance impl ~ IO (Ref TextSelection) => Op (PrimarySelection ()) TextBuffer orig impl
instance impl ~ (BufferOffset -> String -> Bool -> IO (Either NotFound BufferOffset)) => Op (SearchBackwardWithMatchcase ()) TextBuffer orig impl
instance impl ~ (BufferOffset -> String -> Bool -> IO (Either NotFound BufferOffset)) => Op (SearchForwardWithMatchcase ()) TextBuffer orig impl
instance impl ~ (BufferOffset -> Char -> IO (Either NotFound BufferOffset)) => Op (FindcharBackward ()) TextBuffer orig impl
instance impl ~ (BufferOffset -> Char -> IO (Either NotFound BufferOffset)) => Op (FindcharForward ()) TextBuffer orig impl
instance impl ~ (BufferOffset -> Int -> IO Int) => Op (RewindLines ()) TextBuffer orig impl
instance impl ~ (BufferOffset -> Int -> IO BufferOffset) => Op (SkipLines ()) TextBuffer orig impl
instance impl ~ (BufferRange -> IO Int) => Op (CountLines ()) TextBuffer orig impl
instance impl ~ (BufferOffset -> Int -> IO BufferOffset) => Op (SkipDisplayedCharacters ()) TextBuffer orig impl
instance impl ~ (BufferRange -> IO Int) => Op (CountDisplayedCharacters ()) TextBuffer orig impl
instance impl ~ (BufferOffset -> IO (Either OutOfRange BufferOffset)) => Op (WordEnd ()) TextBuffer orig impl
instance impl ~ (BufferOffset -> IO (Either OutOfRange BufferOffset)) => Op (WordStart ()) TextBuffer orig impl
instance impl ~ (Int -> IO (Either OutOfRange BufferOffset)) => Op (LineEnd ()) TextBuffer orig impl
instance impl ~ (Int -> IO (Either OutOfRange BufferOffset)) => Op (LineStart ()) TextBuffer orig impl
instance impl ~ (Int -> IO (Either OutOfRange String)) => Op (LineText ()) TextBuffer orig impl
instance impl ~ IO () => Op (CallPredeleteCallbacks ()) TextBuffer orig impl
instance impl ~ (FunPtr () -> IO ()) => Op (RemovePredeleteCallback ()) TextBuffer orig impl
instance impl ~ (TextPredeleteCb -> IO (FunPtr ())) => Op (AddPredeleteCallback ()) TextBuffer orig impl
instance impl ~ IO () => Op (CallModifyCallbacks ()) TextBuffer orig impl
instance impl ~ (FunPtr () -> IO ()) => Op (RemoveModifyCallback ()) TextBuffer orig impl
instance impl ~ (TextModifyCb -> IO (FunPtr ())) => Op (AddModifyCallback ()) TextBuffer orig impl
instance impl ~ IO String => Op (HighlightText ()) TextBuffer orig impl
instance impl ~ IO (Maybe BufferRange) => Op (HighlightPosition ()) TextBuffer orig impl
instance impl ~ IO () => Op (Unhighlight ()) TextBuffer orig impl
instance impl ~ IO Bool => Op (GetHighlight ()) TextBuffer orig impl
instance impl ~ (BufferRange -> IO ()) => Op (SetHighlight ()) TextBuffer orig impl
instance impl ~ (String -> IO ()) => Op (ReplaceSecondarySelection ()) TextBuffer orig impl
instance impl ~ IO () => Op (RemoveSecondarySelection ()) TextBuffer orig impl
instance impl ~ IO String => Op (SecondarySelectionText ()) TextBuffer orig impl
instance impl ~ IO BufferRange => Op (SecondarySelectionPosition ()) TextBuffer orig impl
instance impl ~ IO () => Op (SecondaryUnselect ()) TextBuffer orig impl
instance impl ~ IO Bool => Op (SecondarySelected ()) TextBuffer orig impl
instance impl ~ (BufferRange -> IO ()) => Op (SecondarySelect ()) TextBuffer orig impl
instance impl ~ (String -> IO ()) => Op (ReplaceSelection ()) TextBuffer orig impl
instance impl ~ IO () => Op (RemoveSelection ()) TextBuffer orig impl
instance impl ~ IO String => Op (SelectionText ()) TextBuffer orig impl
instance impl ~ IO BufferRange => Op (SelectionPosition ()) TextBuffer orig impl
instance impl ~ IO () => Op (Unselect ()) TextBuffer orig impl
instance impl ~ IO Bool => Op (Selected ()) TextBuffer orig impl
instance impl ~ (BufferRange -> IO ()) => Op (Select ()) TextBuffer orig impl
instance impl ~ (Int -> IO ()) => Op (SetTabDistance ()) TextBuffer orig impl
instance impl ~ IO Int => Op (GetTabDistance ()) TextBuffer orig impl
instance impl ~ (String -> Int -> IO (Either DataProcessingError ())) => Op (SavefileWithBuflen ()) TextBuffer orig impl
instance impl ~ (String -> IO (Either DataProcessingError ())) => Op (Savefile ()) TextBuffer orig impl
instance impl ~ (String -> BufferRange -> Int -> IO (Either DataProcessingError ())) => Op (OutputfileWithBuflen ()) TextBuffer orig impl
instance impl ~ (String -> BufferRange -> IO (Either DataProcessingError ())) => Op (Outputfile ()) TextBuffer orig impl
instance impl ~ (String -> Int -> IO (Either DataProcessingError ())) => Op (LoadfileWithBuflen ()) TextBuffer orig impl
instance impl ~ (String -> IO (Either DataProcessingError ())) => Op (Loadfile ()) TextBuffer orig impl
instance impl ~ (String -> Int -> IO (Either DataProcessingError ())) => Op (AppendfileWithBuflen ()) TextBuffer orig impl
instance impl ~ (String -> IO (Either DataProcessingError ())) => Op (Appendfile ()) TextBuffer orig impl
instance impl ~ (String -> BufferOffset -> Int -> IO (Either DataProcessingError ())) => Op (InsertfileWithBuflen ()) TextBuffer orig impl
instance impl ~ (String -> BufferOffset -> IO (Either DataProcessingError ())) => Op (Insertfile ()) TextBuffer orig impl
instance impl ~ (Bool -> IO ()) => Op (CanUndo ()) TextBuffer orig impl
instance impl ~ IO (Either NoChange BufferOffset) => Op (Undo ()) TextBuffer orig impl
instance (Parent a TextBuffer, impl ~ (Ref a -> BufferRange -> BufferOffset -> IO ())) => Op (Copy ()) TextBuffer orig impl
instance impl ~ (BufferRange -> String -> IO ()) => Op (Replace ()) TextBuffer orig impl
instance impl ~ (BufferRange -> IO ()) => Op (Remove ()) TextBuffer orig impl
instance impl ~ (String -> IO ()) => Op (AppendToBuffer ()) TextBuffer orig impl
instance impl ~ (BufferOffset -> String -> IO ()) => Op (Insert ()) TextBuffer orig impl
instance impl ~ (BufferOffset -> IO Char) => Op (ByteAt ()) TextBuffer orig impl
instance impl ~ (BufferOffset -> IO Char) => Op (CharAt ()) TextBuffer orig impl
instance impl ~ (BufferRange -> IO String) => Op (TextRange ()) TextBuffer orig impl
instance impl ~ (String -> IO ()) => Op (SetText ()) TextBuffer orig impl
instance impl ~ IO String => Op (GetText ()) TextBuffer orig impl
instance impl ~ IO Int => Op (GetLength ()) TextBuffer orig impl
instance impl ~ IO String => Op (FileEncodingWarningMessage ()) TextBuffer orig impl
instance impl ~ IO Bool => Op (InputFileWasTranscoded ()) TextBuffer orig impl
instance impl ~ IO () => Op (Destroy ()) TextBuffer orig impl

module Graphics.UI.FLTK.LowLevel.TextDisplay
mkStyleTableEntriesPtr :: Parent a TextDisplay => Ref a -> [StyleTableEntry] -> IO (ForeignPtr [StyleTableEntry])
indexStyleTableEntries :: [StyleTableEntry] -> [(Char, StyleTableEntry)]
textDisplayNew :: Rectangle -> Maybe String -> IO (Ref TextDisplay)
instance impl ~ IO String => Op (GetLinenumberFormat ()) TextDisplay orig impl
instance impl ~ (String -> IO ()) => Op (SetLinenumberFormat ()) TextDisplay orig impl
instance impl ~ IO AlignType => Op (GetLinenumberAlign ()) TextDisplay orig impl
instance impl ~ (AlignType -> IO ()) => Op (SetLinenumberAlign ()) TextDisplay orig impl
instance impl ~ IO Color => Op (GetLinenumberBgcolor ()) TextDisplay orig impl
instance impl ~ (Color -> IO ()) => Op (SetLinenumberBgcolor ()) TextDisplay orig impl
instance impl ~ IO Color => Op (GetLinenumberFgcolor ()) TextDisplay orig impl
instance impl ~ (Color -> IO ()) => Op (SetLinenumberFgcolor ()) TextDisplay orig impl
instance impl ~ IO FontSize => Op (GetLinenumberSize ()) TextDisplay orig impl
instance impl ~ (FontSize -> IO ()) => Op (SetLinenumberSize ()) TextDisplay orig impl
instance impl ~ IO Font => Op (GetLinenumberFont ()) TextDisplay orig impl
instance impl ~ (Font -> IO ()) => Op (SetLinenumberFont ()) TextDisplay orig impl
instance impl ~ IO Width => Op (GetLinenumberWidth ()) TextDisplay orig impl
instance impl ~ (Width -> IO ()) => Op (SetLinenumberWidth ()) TextDisplay orig impl
instance impl ~ (Double -> IO Double) => Op (ColToX ()) TextDisplay orig impl
instance impl ~ (Double -> IO Double) => Op (XToCol ()) TextDisplay orig impl
instance impl ~ (Color -> IO ()) => Op (SetTextcolor ()) TextDisplay orig impl
instance impl ~ IO Color => Op (GetTextcolor ()) TextDisplay orig impl
instance impl ~ (FontSize -> IO ()) => Op (SetTextsize ()) TextDisplay orig impl
instance impl ~ IO FontSize => Op (GetTextsize ()) TextDisplay orig impl
instance impl ~ IO Font => Op (GetTextfont ()) TextDisplay orig impl
instance impl ~ (Int -> IO ()) => Op (SetShortcut ()) TextDisplay orig impl
instance impl ~ IO Int => Op (GetShortcut ()) TextDisplay orig impl
instance impl ~ (BufferOffset -> Int -> Int -> IO TextDisplayStyle) => Op (PositionStyle ()) TextDisplay orig impl
instance (Parent a TextBuffer, impl ~ (Ref a -> [(Char, StyleTableEntry)] -> Maybe (Char, UnfinishedStyleCb) -> IO ())) => Op (HighlightData ()) TextDisplay orig impl
instance impl ~ (BufferOffset -> IO BufferOffset) => Op (WordEnd ()) TextDisplay orig impl
instance impl ~ (BufferOffset -> IO BufferOffset) => Op (WordStart ()) TextDisplay orig impl
instance impl ~ (AlignType -> IO ()) => Op (SetScrollbarAlign ()) TextDisplay orig impl
instance impl ~ IO AlignType => Op (GetScrollbarAlign ()) TextDisplay orig impl
instance impl ~ (Width -> IO ()) => Op (SetScrollbarWidth ()) TextDisplay orig impl
instance impl ~ IO Width => Op (GetScrollbarWidth ()) TextDisplay orig impl
instance impl ~ (Color -> IO ()) => Op (SetCursorColor ()) TextDisplay orig impl
instance impl ~ IO Color => Op (GetCursorColor ()) TextDisplay orig impl
instance impl ~ (CursorType -> IO ()) => Op (SetCursorStyle ()) TextDisplay orig impl
instance impl ~ (Bool -> IO ()) => Op (ShowCursor ()) TextDisplay orig impl
instance impl ~ IO () => Op (PreviousWord ()) TextDisplay orig impl
instance impl ~ IO () => Op (NextWord ()) TextDisplay orig impl
instance impl ~ (BufferOffset -> Int -> IO BufferOffset) => Op (RewindLines ()) TextDisplay orig impl
instance impl ~ (BufferOffset -> Int -> Bool -> IO BufferOffset) => Op (SkipLines ()) TextDisplay orig impl
instance impl ~ (BufferOffset -> Bool -> IO BufferOffset) => Op (LineEnd ()) TextDisplay orig impl
instance impl ~ (BufferOffset -> IO BufferOffset) => Op (LineStart ()) TextDisplay orig impl
instance impl ~ (BufferRange -> Bool -> IO Int) => Op (CountLines ()) TextDisplay orig impl
instance impl ~ IO (Either OutOfRange ()) => Op (MoveDown ()) TextDisplay orig impl
instance impl ~ IO (Either OutOfRange ()) => Op (MoveUp ()) TextDisplay orig impl
instance impl ~ IO (Either OutOfRange ()) => Op (MoveLeft ()) TextDisplay orig impl
instance impl ~ IO (Either OutOfRange ()) => Op (MoveRight ()) TextDisplay orig impl
instance impl ~ IO () => Op (ShowInsertPosition ()) TextDisplay orig impl
instance impl ~ (Position -> IO Bool) => Op (InSelection ()) TextDisplay orig impl
instance impl ~ (BufferOffset -> IO (Either OutOfRange Position)) => Op (PositionToXy ()) TextDisplay orig impl
instance impl ~ IO BufferOffset => Op (GetInsertPosition ()) TextDisplay orig impl
instance impl ~ (BufferOffset -> IO ()) => Op (SetInsertPosition ()) TextDisplay orig impl
instance impl ~ (String -> IO ()) => Op (Overstrike ()) TextDisplay orig impl
instance impl ~ (Int -> BufferOffset -> IO ()) => Op (Scroll ()) TextDisplay orig impl
instance impl ~ (BufferRange -> IO ()) => Op (RedisplayRange ()) TextDisplay orig impl
instance impl ~ IO (Ref TextBuffer) => Op (GetBuffer ()) TextDisplay orig impl
instance (Parent a TextBuffer, impl ~ (Ref a -> IO ())) => Op (SetBuffer ()) TextDisplay orig impl
instance impl ~ (Event -> IO Int) => Op (Handle ()) TextDisplay orig impl
instance impl ~ (Rectangle -> IO ()) => Op (Resize ()) TextDisplay orig impl
instance impl ~ IO () => Op (Destroy ()) TextDisplay orig impl

module Graphics.UI.FLTK.LowLevel.TextEditor
textEditorNew :: Rectangle -> Maybe String -> IO (Ref TextEditor)
data KeyBinding
KeyBinding :: KeyBindingKeySequence -> FunRef -> KeyBinding
data KeyFunc
KeyFunc :: (Ref a -> Char -> IO ()) -> KeyFunc
type KeyFuncPrim = CInt -> Ptr () -> IO ()
keyFuncToFunRef :: KeyFunc -> IO FunRef
toKeyFuncPrim :: KeyFunc -> IO (FunPtr KeyFuncPrim)
keyBindingsToArray :: [KeyBinding] -> IO (Ptr ())
arrayToKeyBindings :: Ptr () -> IO [KeyBinding]
instance impl ~ ([KeyBinding] -> IO ()) => Op (ReplaceKeyBindings ()) TextEditor orig impl
instance impl ~ IO [KeyBinding] => Op (GetDefaultKeyBindings ()) TextEditor orig impl
instance impl ~ IO Bool => Op (GetInsertMode ()) TextEditor orig impl
instance impl ~ (Bool -> IO ()) => Op (SetInsertMode ()) TextEditor orig impl
instance impl ~ IO () => Op (Destroy ()) TextEditor orig impl
instance impl ~ (Event -> IO Int) => Op (Handle ()) TextEditor orig impl

module Graphics.UI.FLTK.LowLevel.NativeFileChooser
data NativeFileChooserType
BrowseFile :: NativeFileChooserType
BrowseDirectory :: NativeFileChooserType
BrowseMultiFile :: NativeFileChooserType
BrowseMultiDirectory :: NativeFileChooserType
BrowseSaveFile :: NativeFileChooserType
BrowseSaveDirectory :: NativeFileChooserType
data NativeFileChooserOption
NoOptions :: NativeFileChooserOption
SaveasConfirm :: NativeFileChooserOption
NewFolder :: NativeFileChooserOption
Preview :: NativeFileChooserOption
UseFilterExt :: NativeFileChooserOption
data NativeFileChooserUserAction
NativeFileChooserPicked :: NativeFileChooserUserAction
NativeFileChooserCancelled :: NativeFileChooserUserAction
NativeFileChooserError :: NativeFileChooserUserAction
allNativeFileChooserOptions :: [NativeFileChooserOption]
nativeFileChooserNew :: Maybe NativeFileChooserType -> IO (Ref NativeFileChooser)
instance Show NativeFileChooserType
instance Eq NativeFileChooserType
instance Ord NativeFileChooserType
instance Show NativeFileChooserOption
instance Eq NativeFileChooserOption
instance Ord NativeFileChooserOption
instance impl ~ IO NativeFileChooserUserAction => Op (ShowWidget ()) NativeFileChooser orig impl
instance impl ~ IO (Maybe String) => Op (GetErrmsg ()) NativeFileChooser orig impl
instance impl ~ IO (Maybe String) => Op (GetPresetFile ()) NativeFileChooser orig impl
instance impl ~ (String -> IO ()) => Op (SetPresetFile ()) NativeFileChooser orig impl
instance impl ~ IO Int => Op (GetFilterValue ()) NativeFileChooser orig impl
instance impl ~ (Int -> IO ()) => Op (SetFilterValue ()) NativeFileChooser orig impl
instance impl ~ IO Int => Op (Filters ()) NativeFileChooser orig impl
instance impl ~ (String -> IO ()) => Op (SetFilter ()) NativeFileChooser orig impl
instance impl ~ IO (Maybe String) => Op (GetFilter ()) NativeFileChooser orig impl
instance impl ~ IO (Maybe String) => Op (GetTitle ()) NativeFileChooser orig impl
instance impl ~ (String -> IO ()) => Op (SetTitle ()) NativeFileChooser orig impl
instance impl ~ IO (Maybe String) => Op (GetDirectory ()) NativeFileChooser orig impl
instance impl ~ (String -> IO ()) => Op (SetDirectory ()) NativeFileChooser orig impl
instance impl ~ (Int -> IO (Maybe String)) => Op (GetFilenameAt ()) NativeFileChooser orig impl
instance impl ~ IO (Maybe String) => Op (GetFilename ()) NativeFileChooser orig impl
instance impl ~ IO Int => Op (GetCount ()) NativeFileChooser orig impl
instance impl ~ IO [NativeFileChooserOption] => Op (GetOptions ()) NativeFileChooser orig impl
instance impl ~ ([NativeFileChooserOption] -> IO ()) => Op (SetOptions ()) NativeFileChooser orig impl
instance impl ~ IO NativeFileChooserType => Op (GetType ()) NativeFileChooser orig impl
instance impl ~ (NativeFileChooserType -> IO ()) => Op (SetType ()) NativeFileChooser orig impl
instance impl ~ IO () => Op (Destroy ()) NativeFileChooser orig impl
instance Enum NativeFileChooserOption
instance Enum NativeFileChooserType

module Graphics.UI.FLTK.LowLevel.FL
data Option
OptionArrowFocus :: Option
OptionVisibleFocus :: Option
OptionDndText :: Option
OptionShowTooltips :: Option
OptionLast :: Option
run :: IO Int
check :: IO Int
ready :: IO Int
option :: Option -> IO Bool
setOption :: Option -> Bool -> IO ()
addAwakeHandler :: GlobalCallback -> IO Int
getAwakeHandler_ :: IO GlobalCallback
display :: String -> IO ()
ownColormap :: IO ()
getSystemColors :: IO ()
foreground :: RGB -> IO ()
background :: RGB -> IO ()
background2 :: RGB -> IO ()
setScheme :: String -> IO Int
isScheme :: String -> IO Bool
setFirstWindow :: Parent a Window => Ref a -> IO ()
nextWindow :: Parent a Window => Ref a -> IO (Ref Window)
setGrab :: Parent a Window => Ref a -> IO ()
getMouse :: IO Position
eventStates :: [EventState]
extract :: Enum a => [a] -> CInt -> [a]
extractEventStates :: CInt -> [EventState]
handle :: Parent a Window => Event -> Ref a -> IO Int
handle_ :: Parent a Window => Event -> Ref a -> IO Int
belowmouse :: IO ((Ref Widget))
setBelowmouse :: Parent a Widget => Ref a -> IO ()
setPushed :: Parent a Widget => Ref a -> IO ()
setFocus :: Parent a Widget => Ref a -> IO ()
setHandler :: GlobalEventHandlerF -> IO ()
paste :: Parent a Widget => Ref a -> Maybe Int -> IO ()
toRectangle :: (Int, Int, Int, Int) -> Rectangle
fromRectangle :: Rectangle -> (Int, Int, Int, Int)
screenBounds :: Maybe ScreenLocation -> IO Rectangle
screenDPI :: Maybe Int -> IO DPI
screenWorkArea :: Maybe ScreenLocation -> IO Rectangle
setColorRgb :: Color -> Int -> Int -> Int -> IO ()
toAttribute :: Ptr CInt -> IO (Maybe FontAttribute)
release :: IO ()
setVisibleFocus :: Int -> IO ()
visibleFocus :: IO Int
setDndTextOps :: Bool -> IO ()
dndTextOps :: IO Option
deleteWidget :: Parent a Widget => Ref a -> IO ()
doWidgetDeletion :: IO ()
watchWidgetPointer :: Parent a Widget => Ref a -> IO ()
releaseWidgetPointer :: Parent a Widget => Ref a -> IO ()
clearWidgetPointer :: Parent a Widget => Ref a -> IO ()
version :: IO ((Double))
help :: IO ((String))
visual :: (Mode) -> IO ((Bool))
glVisual :: (Mode) -> IO ((Bool))
glVisualWithAlist :: (Mode) -> (Ptr CInt) -> IO ((Bool))
scheme :: String
wait :: IO ((Int))
setWait :: (Double) -> IO ((Double))
readqueue :: IO ((Ref Widget))
addTimeout :: (Double) -> (GlobalCallback) -> IO ((()))
repeatTimeout :: (Double) -> (GlobalCallback) -> IO ((()))
hasTimeout :: (GlobalCallback) -> IO ((Int))
removeTimeout :: (GlobalCallback) -> IO ((()))
addCheck :: (GlobalCallback) -> IO ((()))
hasCheck :: (GlobalCallback) -> IO ((Int))
removeCheck :: (GlobalCallback) -> IO ((()))
addIdle :: (GlobalCallback) -> IO ((()))
hasIdle :: (GlobalCallback) -> IO ((Int))
removeIdle :: (GlobalCallback) -> IO ((()))
damage :: IO ((Int))
redraw :: IO ((()))
flush :: IO ((()))
firstWindow :: IO ((Ref Window))
modal :: IO ((Ref Window))
grab :: IO ((Ref Window))
getKey :: (KeyType) -> IO ((Bool))
compose :: IO (Bool, Int)
composeReset :: IO ((()))
testShortcut :: (FlShortcut) -> IO ((Bool))
enableIm :: IO ((()))
disableIm :: IO ((()))
pushed :: IO ((Ref Widget))
focus :: IO ((Ref Widget))
copy :: (String) -> (Int) -> IO ((()))
copyWithDestination :: (String) -> (Int) -> (Int) -> IO ((()))
pasteWithSource :: (Ptr ()) -> (Int) -> IO ((()))
dnd :: IO ((Int))
x :: IO ((Int))
y :: IO ((Int))
w :: IO ((Int))
h :: IO ((Int))
screenCount :: IO ((Int))
setColor :: (Color) -> (Int) -> IO ((()))
getColor :: (Color) -> IO ((Int))
getColorRgb :: (Color) -> IO ((), Word8, Word8, Word8)
removeFromColormap :: Maybe Int -> Color -> IO ()
data BoxtypeSpec
getBoxtype :: Boxtype -> IO BoxDrawF
setBoxtype :: Boxtype -> BoxtypeSpec -> IO ()
boxDx :: (Boxtype) -> IO ((Int))
boxDy :: (Boxtype) -> IO ((Int))
boxDw :: (Boxtype) -> IO ((Int))
boxDh :: (Boxtype) -> IO ((Int))
drawBoxActive :: IO ((Bool))
getFontName :: Font -> IO (String, Maybe FontAttribute)
getFont :: (Font) -> IO ((String))
getFontSizes :: (Font) -> IO (Int, Int)
setFontByString :: (Font) -> (String) -> IO ((()))
setFontByFont :: (Font) -> (Font) -> IO ((()))
setFonts :: IO ((Font))
setFontsWithString :: (String) -> IO ((Font))
event :: IO ((Event))
eventShift :: IO ((Bool))
eventCtrl :: IO ((Bool))
eventCommand :: IO ((Bool))
eventAlt :: IO ((Bool))
eventButtons :: IO ((Bool))
eventButton1 :: IO ((Bool))
eventButton2 :: IO ((Bool))
eventButton3 :: IO ((Bool))
eventX :: IO ((Int))
eventY :: IO ((Int))
eventXRoot :: IO ((Int))
eventYRoot :: IO ((Int))
eventDx :: IO ((Int))
eventDy :: IO ((Int))
eventClicks :: IO ((Int))
setEventClicks :: (Int) -> IO ((()))
eventIsClick :: IO ((Bool))
setEventIsClick :: (Int) -> IO ((()))
eventButton :: IO ((MouseButton))
eventState :: IO (([EventState]))
containsEventState :: (EventState) -> IO ((Bool))
eventKey :: IO ((KeyType))
eventOriginalKey :: IO ((KeyType))
eventKeyPressed :: (KeyType) -> IO ((Bool))
eventInsideRegion :: Rectangle -> IO Event
eventInsideWidget :: Parent a Widget => Ref a -> IO Event
eventDispatch :: Parent a Widget => IO (Event -> Ref a -> IO (Int))
setEventDispatch :: Parent a Widget => (Event -> Ref a -> IO Int) -> IO ()
eventText :: IO ((String))
eventLength :: IO ((Int))
instance Show Option
instance Enum Option

module Graphics.UI.FLTK.LowLevel.Gl
glStart :: IO ()
glFinish :: IO ()
glHeight :: IO ()
glDescent :: IO ()
glColor :: (Color) -> IO ()
glRect :: Rectangle -> IO ()
glRectf :: Rectangle -> IO ()
glFont :: Font -> Int -> IO ()
glWidth :: String -> IO (Double)
glWidthChars :: String -> Int -> IO (Double)
glWidthChar :: Char -> IO (Double)
glDraw :: String -> IO ()
glDrawChars :: String -> Int -> IO ()
glDrawAt :: String -> Float -> Float -> IO ()
glDrawCharsAt :: String -> Int -> Float -> Float -> IO ()
glDrawInBox :: String -> Rectangle -> AlignType -> IO ()
glMeasure :: String -> Position -> IO ()
glDrawImage :: BitmapHs -> Position -> Maybe Depth -> Maybe LineSize -> IO ()

module Graphics.UI.FLTK.LowLevel.FLTKHS
