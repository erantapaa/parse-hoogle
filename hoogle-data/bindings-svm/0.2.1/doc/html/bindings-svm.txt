-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Low level bindings to libsvm.
--   
--   Low level bindings to libsvm
--   <a>http://www.csie.ntu.edu.tw/~cjlin/libsvm/</a>.
--   
--   Changes in version 0.2.1
--   
--   <ul>
--   <li>Exposed <a>svm_model</a> internals</li>
--   </ul>
--   
--   Changes in version 0.2.0
--   
--   <ul>
--   <li>Updated to libsvm 3.1</li>
--   <li>Include libsvm with the package</li>
--   <li>Drop dependency on <tt>pkg-config</tt></li>
--   </ul>
--   
--   Changes in version 0.1.0
--   
--   <ul>
--   <li>Initial version</li>
--   </ul>
@package bindings-svm
@version 0.2.1


module Bindings.SVM
p'libsvm_version :: Ptr (CInt)
data C'svm_node
C'svm_node :: CInt -> CDouble -> C'svm_node
c'svm_node'index :: C'svm_node -> CInt
c'svm_node'value :: C'svm_node -> CDouble
p'svm_node'index :: Ptr (C'svm_node) -> Ptr (CInt)
p'svm_node'value :: Ptr (C'svm_node) -> Ptr (CDouble)
data C'svm_problem
C'svm_problem :: CInt -> Ptr CDouble -> Ptr (Ptr C'svm_node) -> C'svm_problem
c'svm_problem'l :: C'svm_problem -> CInt
c'svm_problem'y :: C'svm_problem -> Ptr CDouble
c'svm_problem'x :: C'svm_problem -> Ptr (Ptr C'svm_node)
c'C_SVC :: Num a => a
c'NU_SVC :: Num a => a
c'ONE_CLASS :: Num a => a
p'svm_problem'l :: Ptr (C'svm_problem) -> Ptr (CInt)
c'EPSILON_SVR :: Num a => a
c'NU_SVR :: Num a => a
p'svm_problem'y :: Ptr (C'svm_problem) -> Ptr (Ptr CDouble)
p'svm_problem'x :: Ptr (C'svm_problem) -> Ptr (Ptr (Ptr C'svm_node))
c'LINEAR :: Num a => a
c'POLY :: Num a => a
c'RBF :: Num a => a
c'SIGMOID :: Num a => a
c'PRECOMPUTED :: Num a => a
data C'svm_parameter
C'svm_parameter :: CInt -> CInt -> CInt -> CDouble -> CDouble -> CDouble -> CDouble -> CDouble -> CInt -> Ptr CInt -> Ptr CDouble -> CDouble -> CDouble -> CInt -> CInt -> C'svm_parameter
c'svm_parameter'svm_type :: C'svm_parameter -> CInt
c'svm_parameter'kernel_type :: C'svm_parameter -> CInt
c'svm_parameter'degree :: C'svm_parameter -> CInt
c'svm_parameter'gamma :: C'svm_parameter -> CDouble
c'svm_parameter'coef0 :: C'svm_parameter -> CDouble
c'svm_parameter'cache_size :: C'svm_parameter -> CDouble
c'svm_parameter'eps :: C'svm_parameter -> CDouble
c'svm_parameter'C :: C'svm_parameter -> CDouble
c'svm_parameter'nr_weight :: C'svm_parameter -> CInt
c'svm_parameter'weight_label :: C'svm_parameter -> Ptr CInt
c'svm_parameter'weight :: C'svm_parameter -> Ptr CDouble
c'svm_parameter'nu :: C'svm_parameter -> CDouble
c'svm_parameter'p :: C'svm_parameter -> CDouble
c'svm_parameter'shrinking :: C'svm_parameter -> CInt
c'svm_parameter'probability :: C'svm_parameter -> CInt
p'svm_parameter'svm_type :: Ptr (C'svm_parameter) -> Ptr (CInt)
p'svm_parameter'kernel_type :: Ptr (C'svm_parameter) -> Ptr (CInt)
p'svm_parameter'degree :: Ptr (C'svm_parameter) -> Ptr (CInt)
p'svm_parameter'gamma :: Ptr (C'svm_parameter) -> Ptr (CDouble)
p'svm_parameter'coef0 :: Ptr (C'svm_parameter) -> Ptr (CDouble)
p'svm_parameter'cache_size :: Ptr (C'svm_parameter) -> Ptr (CDouble)
p'svm_parameter'eps :: Ptr (C'svm_parameter) -> Ptr (CDouble)
data C'svm_model
C'svm_model :: C'svm_parameter -> CInt -> CInt -> Ptr (Ptr C'svm_node) -> Ptr (Ptr CDouble) -> Ptr CDouble -> Ptr CDouble -> Ptr CDouble -> Ptr CInt -> Ptr CInt -> CInt -> C'svm_model
c'svm_model'param :: C'svm_model -> C'svm_parameter
c'svm_model'nr_class :: C'svm_model -> CInt
c'svm_model'l :: C'svm_model -> CInt
c'svm_model'SV :: C'svm_model -> Ptr (Ptr C'svm_node)
c'svm_model'sv_coef :: C'svm_model -> Ptr (Ptr CDouble)
c'svm_model'rho :: C'svm_model -> Ptr CDouble
c'svm_model'probA :: C'svm_model -> Ptr CDouble
c'svm_model'probB :: C'svm_model -> Ptr CDouble
c'svm_model'label :: C'svm_model -> Ptr CInt
c'svm_model'nSV :: C'svm_model -> Ptr CInt
c'svm_model'free_sv :: C'svm_model -> CInt
p'svm_parameter'C :: Ptr (C'svm_parameter) -> Ptr (CDouble)
c'svm_train :: Ptr C'svm_problem -> Ptr C'svm_parameter -> IO (Ptr C'svm_model)
p'svm_parameter'nr_weight :: Ptr (C'svm_parameter) -> Ptr (CInt)
p'svm_train :: FunPtr (Ptr C'svm_problem -> Ptr C'svm_parameter -> IO (Ptr C'svm_model))
p'svm_parameter'weight_label :: Ptr (C'svm_parameter) -> Ptr (Ptr CInt)
c'svm_cross_validation :: Ptr C'svm_problem -> Ptr C'svm_parameter -> CInt -> Ptr CDouble -> IO ()
p'svm_parameter'weight :: Ptr (C'svm_parameter) -> Ptr (Ptr CDouble)
p'svm_cross_validation :: FunPtr (Ptr C'svm_problem -> Ptr C'svm_parameter -> CInt -> Ptr CDouble -> IO ())
c'svm_save_model :: CString -> Ptr C'svm_model -> IO ()
p'svm_parameter'nu :: Ptr (C'svm_parameter) -> Ptr (CDouble)
p'svm_save_model :: FunPtr (CString -> Ptr C'svm_model -> IO ())
p'svm_parameter'p :: Ptr (C'svm_parameter) -> Ptr (CDouble)
c'svm_load_model :: CString -> IO (Ptr C'svm_model)
p'svm_model'param :: Ptr (C'svm_model) -> Ptr (C'svm_parameter)
p'svm_parameter'shrinking :: Ptr (C'svm_parameter) -> Ptr (CInt)
p'svm_load_model :: FunPtr (CString -> IO (Ptr C'svm_model))
c'svm_get_svm_type :: Ptr C'svm_model -> IO CInt
p'svm_model'nr_class :: Ptr (C'svm_model) -> Ptr (CInt)
p'svm_parameter'probability :: Ptr (C'svm_parameter) -> Ptr (CInt)
c'svm_get_nr_class :: Ptr C'svm_model -> IO CInt
p'svm_get_svm_type :: FunPtr (Ptr C'svm_model -> IO CInt)
c'svm_get_labels :: Ptr C'svm_model -> Ptr CInt -> IO ()
p'svm_model'l :: Ptr (C'svm_model) -> Ptr (CInt)
c'svm_get_svr_probability :: Ptr C'svm_model -> IO CDouble
p'svm_get_nr_class :: FunPtr (Ptr C'svm_model -> IO CInt)
p'svm_get_labels :: FunPtr (Ptr C'svm_model -> Ptr CInt -> IO ())
p'svm_model'SV :: Ptr (C'svm_model) -> Ptr (Ptr (Ptr C'svm_node))
p'svm_get_svr_probability :: FunPtr (Ptr C'svm_model -> IO CDouble)
c'svm_predict_values :: Ptr C'svm_model -> Ptr C'svm_node -> Ptr CDouble -> IO ()
p'svm_model'sv_coef :: Ptr (C'svm_model) -> Ptr (Ptr (Ptr CDouble))
c'svm_predict :: Ptr C'svm_model -> Ptr C'svm_node -> IO CDouble
c'svm_predict_probability :: Ptr C'svm_model -> Ptr C'svm_node -> Ptr CDouble -> IO CDouble
p'svm_predict_values :: FunPtr (Ptr C'svm_model -> Ptr C'svm_node -> Ptr CDouble -> IO ())
p'svm_model'rho :: Ptr (C'svm_model) -> Ptr (Ptr CDouble)
p'svm_predict :: FunPtr (Ptr C'svm_model -> Ptr C'svm_node -> IO CDouble)
p'svm_predict_probability :: FunPtr (Ptr C'svm_model -> Ptr C'svm_node -> Ptr CDouble -> IO CDouble)
p'svm_model'probA :: Ptr (C'svm_model) -> Ptr (Ptr CDouble)
c'svm_free_model_content :: Ptr C'svm_model -> IO ()
c'svm_free_and_destroy_model :: Ptr (Ptr C'svm_model) -> IO ()
p'svm_model'probB :: Ptr (C'svm_model) -> Ptr (Ptr CDouble)
c'svm_destroy_param :: Ptr C'svm_parameter -> IO ()
p'svm_free_model_content :: FunPtr (Ptr C'svm_model -> IO ())
p'svm_free_and_destroy_model :: FunPtr (Ptr (Ptr C'svm_model) -> IO ())
p'svm_model'label :: Ptr (C'svm_model) -> Ptr (Ptr CInt)
p'svm_destroy_param :: FunPtr (Ptr C'svm_parameter -> IO ())
c'svm_check_parameter :: Ptr C'svm_problem -> Ptr C'svm_parameter -> IO CString
p'svm_model'nSV :: Ptr (C'svm_model) -> Ptr (Ptr CInt)
c'svm_check_probability_model :: Ptr C'svm_model -> IO CInt
p'svm_check_parameter :: FunPtr (Ptr C'svm_problem -> Ptr C'svm_parameter -> IO CString)
p'svm_model'free_sv :: Ptr (C'svm_model) -> Ptr (CInt)
p'svm_check_probability_model :: FunPtr (Ptr C'svm_model -> IO CInt)
c'svm_set_print_string_function :: FunPtr (CString -> IO ()) -> IO ()
p'svm_set_print_string_function :: FunPtr (FunPtr (CString -> IO ()) -> IO ())
instance Eq C'svm_node
instance Show C'svm_node
instance Eq C'svm_problem
instance Show C'svm_problem
instance Eq C'svm_parameter
instance Show C'svm_parameter
instance Eq C'svm_model
instance Show C'svm_model
instance Storable C'svm_model
instance Storable C'svm_parameter
instance Storable C'svm_problem
instance Storable C'svm_node
