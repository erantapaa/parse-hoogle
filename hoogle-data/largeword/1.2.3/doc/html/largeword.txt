-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Provides Word128, Word192 and Word256 and a way of producing other large words if required.
--   
--   Provides Word128, Word192 and Word256 and a way of producing other
--   large words if required.
@package largeword
@version 1.2.3


-- | Provides Word128, Word192 and Word256 and a way of producing other
--   large words if required.
module Data.LargeWord
data LargeKey a b
LargeKey :: a -> b -> LargeKey a b
type Word96 = LargeKey Word32 Word64
type Word128 = LargeKey Word64 Word64
type Word160 = LargeKey Word32 Word128
type Word192 = LargeKey Word64 Word128
type Word224 = LargeKey Word32 Word192
type Word256 = LargeKey Word64 Word192
loHalf :: LargeKey a b -> a
hiHalf :: LargeKey a b -> b
instance (Eq a, Eq b) => Eq (LargeKey a b)
instance (Ord a, Ord b) => Ord (LargeKey a b)
instance (Binary a, Binary b) => Binary (LargeKey a b)
instance (Eq a, Bounded a, Num a, Enum b, Enum a, Bounded b, Num b) => Enum (LargeKey a b)
instance (Ord a, Bits a, FiniteBits a, Num a, Bounded a, Bounded b, Enum a, Enum b, LargeWord a, Ord b, Bits b, FiniteBits b, Num b, LargeWord b) => Real (LargeKey a b)
instance (Bounded a, Bounded b, Enum b, Enum a, Ord a, Bits a, FiniteBits a, Num a, LargeWord a, Ord b, Bits b, FiniteBits b, Num b, LargeWord b) => Integral (LargeKey a b)
instance (Ord a, Bits a, FiniteBits a, Bounded a, Integral a, LargeWord a, Bits b, FiniteBits b, Bounded b, Integral b, LargeWord b) => Bounded (LargeKey a b)
instance (LargeWord a, Bits a, FiniteBits a, Ord a, Num a, LargeWord b, Bits b, FiniteBits b, Ord b, Num b) => FiniteBits (LargeKey a b)
instance (Ord a, Ord b, Bits a, FiniteBits a, Num a, LargeWord a, Bits b, FiniteBits b, Num b, LargeWord b) => Bits (LargeKey a b)
instance (Ord b, Ord a, Bits a, FiniteBits a, Num a, LargeWord a, Bits b, FiniteBits b, Num b, LargeWord b) => Num (LargeKey a b)
instance (Ord a, Bits a, FiniteBits a, Num a, LargeWord a, Bits b, FiniteBits b, Num b, LargeWord b) => Show (LargeKey a b)
instance (Ord a, Bits a, FiniteBits a, Num a, LargeWord a, Bits b, FiniteBits b, Num b, LargeWord b) => LargeWord (LargeKey a b)
instance LargeWord Word64
instance LargeWord Word32
instance LargeWord Word16
instance LargeWord Word8
instance FiniteBits Word64
instance FiniteBits Word32
instance FiniteBits Word16
instance FiniteBits Word8
