-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Universal converter between values of different types
--   
@package conversion
@version 1.1.0.1

module Conversion

-- | A type-class, which provides a non-partial conversion function from a
--   value of type <tt>a</tt> to a value of type <tt>b</tt>.
class Conversion a b
convert :: Conversion a b => a -> b
instance Conversion Double Rational
instance Conversion Float Double
instance Conversion Float Rational
instance Alternative f => Conversion Integer (f Word64)
instance Alternative f => Conversion Integer (f Word32)
instance Alternative f => Conversion Integer (f Word16)
instance Alternative f => Conversion Integer (f Word8)
instance Alternative f => Conversion Integer (f Word)
instance Alternative f => Conversion Integer (f Int64)
instance Alternative f => Conversion Integer (f Int32)
instance Alternative f => Conversion Integer (f Int16)
instance Alternative f => Conversion Integer (f Int8)
instance Alternative f => Conversion Integer (f Int)
instance Alternative f => Conversion Word64 (f Word32)
instance Alternative f => Conversion Word64 (f Word16)
instance Alternative f => Conversion Word64 (f Word8)
instance Alternative f => Conversion Word64 (f Word)
instance Alternative f => Conversion Word64 (f Int64)
instance Alternative f => Conversion Word64 (f Int32)
instance Alternative f => Conversion Word64 (f Int16)
instance Alternative f => Conversion Word64 (f Int8)
instance Alternative f => Conversion Word64 (f Int)
instance Conversion Word64 Integer
instance Conversion Word32 Word64
instance Alternative f => Conversion Word32 (f Word16)
instance Alternative f => Conversion Word32 (f Word8)
instance Conversion Word32 Word
instance Conversion Word32 Int64
instance Alternative f => Conversion Word32 (f Int32)
instance Alternative f => Conversion Word32 (f Int16)
instance Alternative f => Conversion Word32 (f Int8)
instance Alternative f => Conversion Word32 (f Int)
instance Conversion Word32 Integer
instance Conversion Word16 Word64
instance Conversion Word16 Word32
instance Alternative f => Conversion Word16 (f Word8)
instance Alternative f => Conversion Word16 (f Word)
instance Conversion Word16 Int64
instance Conversion Word16 Int32
instance Alternative f => Conversion Word16 (f Int16)
instance Alternative f => Conversion Word16 (f Int8)
instance Conversion Word16 Int
instance Conversion Word16 Integer
instance Conversion Word8 Word64
instance Conversion Word8 Word32
instance Conversion Word8 Word16
instance Conversion Word8 Word
instance Conversion Word8 Int64
instance Conversion Word8 Int32
instance Conversion Word8 Int16
instance Alternative f => Conversion Word8 (f Int8)
instance Conversion Word8 Int
instance Conversion Word8 Integer
instance Conversion Word Word64
instance Alternative f => Conversion Word (f Word32)
instance Alternative f => Conversion Word (f Word16)
instance Alternative f => Conversion Word (f Word8)
instance Alternative f => Conversion Word (f Int64)
instance Alternative f => Conversion Word (f Int32)
instance Alternative f => Conversion Word (f Int16)
instance Alternative f => Conversion Word (f Int8)
instance Alternative f => Conversion Word (f Int)
instance Conversion Word Integer
instance Alternative f => Conversion Int64 (f Word64)
instance Alternative f => Conversion Int64 (f Word32)
instance Alternative f => Conversion Int64 (f Word16)
instance Alternative f => Conversion Int64 (f Word8)
instance Alternative f => Conversion Int64 (f Word)
instance Alternative f => Conversion Int64 (f Int32)
instance Alternative f => Conversion Int64 (f Int16)
instance Alternative f => Conversion Int64 (f Int8)
instance Alternative f => Conversion Int64 (f Int)
instance Conversion Int64 Integer
instance Alternative f => Conversion Int32 (f Word64)
instance Alternative f => Conversion Int32 (f Word32)
instance Alternative f => Conversion Int32 (f Word16)
instance Alternative f => Conversion Int32 (f Word8)
instance Alternative f => Conversion Int32 (f Word)
instance Conversion Int32 Int64
instance Alternative f => Conversion Int32 (f Int16)
instance Alternative f => Conversion Int32 (f Int8)
instance Conversion Int32 Int
instance Conversion Int32 Integer
instance Alternative f => Conversion Int16 (f Word64)
instance Alternative f => Conversion Int16 (f Word32)
instance Alternative f => Conversion Int16 (f Word16)
instance Alternative f => Conversion Int16 (f Word8)
instance Alternative f => Conversion Int16 (f Word)
instance Conversion Int16 Int64
instance Conversion Int16 Int32
instance Alternative f => Conversion Int16 (f Int8)
instance Conversion Int16 Int
instance Conversion Int16 Integer
instance Alternative f => Conversion Int8 (f Word64)
instance Alternative f => Conversion Int8 (f Word32)
instance Alternative f => Conversion Int8 (f Word16)
instance Alternative f => Conversion Int8 (f Word8)
instance Alternative f => Conversion Int8 (f Word)
instance Conversion Int8 Int64
instance Conversion Int8 Int32
instance Conversion Int8 Int16
instance Conversion Int8 Int
instance Conversion Int8 Integer
instance Alternative f => Conversion Int (f Word64)
instance Alternative f => Conversion Int (f Word32)
instance Alternative f => Conversion Int (f Word16)
instance Alternative f => Conversion Int (f Word8)
instance Alternative f => Conversion Int (f Word)
instance Conversion Int Int64
instance Alternative f => Conversion Int (f Int32)
instance Alternative f => Conversion Int (f Int16)
instance Alternative f => Conversion Int (f Int8)
instance Conversion Int Integer
instance Conversion [Maybe a] [a]
instance Conversion [a] Bool
instance Alternative f => Conversion [a] (f a)
instance Conversion (Maybe a) (a -> a)
instance Conversion (Maybe a) Bool
instance Alternative f => Conversion (Maybe a) (f a)
instance Conversion (Either a b) Bool
instance Alternative f => Conversion (Either a b) (f b)
instance Conversion (STM a) (IO a)
