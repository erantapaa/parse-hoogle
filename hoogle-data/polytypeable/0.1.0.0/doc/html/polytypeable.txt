-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Typeable for polymorphic types.
--   
--   Typeable for polymorphic types.
@package polytypeable
@version 0.1.0.0

module Data.PolyTypeable
class PolyTypeable a
polyTypeOf :: PolyTypeable a => a -> TypeRep
instance [incoherent] TypeEq'' () x y HFalse
instance [incoherent] TypeEq'' q x y b => TypeEq' q x y b
instance [incoherent] b ~ HTrue => TypeEq' () x x b
instance [incoherent] TypeEq' () x y b => TypeEq x y b
instance [incoherent] Nat a => Nat (S a)
instance [incoherent] Nat Z
instance [incoherent] HLen l n => HLen (HCons a l) (S n)
instance [incoherent] HLen HNil Z
instance [incoherent] HIndex x l n => HIndex' HFalse x (HCons a l) n
instance [incoherent] HLen l n => HIndex' HTrue x l n
instance [incoherent] (Nat n, TypeEq x a f, HIndex' f x (HCons a l) n) => HIndex x (HCons a l) n
instance [incoherent] HIndex x HNil Z
instance [incoherent] Nat n => MyTypeable'' (S n) g0 g0 (TVar a)
instance [incoherent] HLen g0 n1 => MyTypeable'' Z g0 (HCons a g0) (TVar a)
instance [incoherent] (HIndex a g0 n, MyTypeable'' n g0 gout (TVar a)) => MyTypeable' g0 gout (TVar a)
instance [incoherent] (Typeable c, MyTypeable' g0 g1 a1, MyTypeable' g1 g2 a2, MyTypeable' g2 g3 a3, MyTypeable' g3 g4 a4, MyTypeable' g4 g5 a5) => MyTypeable' g0 g5 (TCon5 c a1 a2 a3 a4 a5)
instance [incoherent] (Typeable c, MyTypeable' g0 g1 a1, MyTypeable' g1 g2 a2, MyTypeable' g2 g3 a3, MyTypeable' g3 g4 a4) => MyTypeable' g0 g4 (TCon4 c a1 a2 a3 a4)
instance [incoherent] (Typeable c, MyTypeable' g0 g1 a1, MyTypeable' g1 g2 a2, MyTypeable' g2 g3 a3) => MyTypeable' g0 g3 (TCon3 c a1 a2 a3)
instance [incoherent] (Typeable c, MyTypeable' g0 g a1, MyTypeable' g g2 a2) => MyTypeable' g0 g2 (TCon2 c a1 a2)
instance [incoherent] (Typeable c, MyTypeable' g0 g1 a1) => MyTypeable' g0 g1 (TCon1 c a1)
instance [incoherent] Typeable a => MyTypeable' g0 g0 (TCon0 a)
instance [incoherent] (Analyze a result, MyTypeable' HNil gout result) => PolyTypeable a
instance [incoherent] r ~ TVar a => Analyze (W a) r
instance [incoherent] (r ~ TCon5 (c () () () () ()) ra1 ra2 ra3 ra4 ra5, Analyze (W a1) ra1, Analyze (W a2) ra2, Analyze (W a3) ra3, Analyze (W a4) ra4, Analyze (W a5) ra5) => Analyze (c a1 a2 a3 a4 a5) r
instance [incoherent] (r ~ TCon5 (c () () () () ()) ra1 ra2 ra3 ra4 ra5, Analyze (W a1) ra1, Analyze (W a2) ra2, Analyze (W a3) ra3, Analyze (W a4) ra4, Analyze (W a5) ra5) => Analyze (W (c a1 a2 a3 a4 a5)) r
instance [incoherent] (r ~ TCon4 (c () () () ()) ra1 ra2 ra3 ra4, Analyze (W a1) ra1, Analyze (W a2) ra2, Analyze (W a3) ra3, Analyze (W a4) ra4) => Analyze (c a1 a2 a3 a4) r
instance [incoherent] (r ~ TCon4 (c () () () ()) ra1 ra2 ra3 ra4, Analyze (W a1) ra1, Analyze (W a2) ra2, Analyze (W a3) ra3, Analyze (W a4) ra4) => Analyze (W (c a1 a2 a3 a4)) r
instance [incoherent] (r ~ TCon3 (c () () ()) ra1 ra2 ra3, Analyze (W a1) ra1, Analyze (W a2) ra2, Analyze (W a3) ra3) => Analyze (c a1 a2 a3) r
instance [incoherent] (r ~ TCon3 (c () () ()) ra1 ra2 ra3, Analyze (W a1) ra1, Analyze (W a2) ra2, Analyze (W a3) ra3) => Analyze (W (c a1 a2 a3)) r
instance [incoherent] (r ~ TCon2 (c () ()) ra1 ra2, Analyze (W a1) ra1, Analyze (W a2) ra2) => Analyze (c a1 a2) r
instance [incoherent] (r ~ TCon2 (c () ()) ra1 ra2, Analyze (W a1) ra1, Analyze (W a2) ra2) => Analyze (W (c a1 a2)) r
instance [incoherent] (r ~ TCon1 (c ()) ra1, Analyze (W a1) ra1) => Analyze (c a1) r
instance [incoherent] (r ~ TCon1 (c ()) ra1, Analyze (W a1) ra1) => Analyze (W (c a1)) r
instance [incoherent] r ~ TCon0 Word64 => Analyze (W Word64) r
instance [incoherent] r ~ TCon0 Word64 => Analyze Word64 r
instance [incoherent] r ~ TCon0 Word32 => Analyze (W Word32) r
instance [incoherent] r ~ TCon0 Word32 => Analyze Word32 r
instance [incoherent] r ~ TCon0 Word16 => Analyze (W Word16) r
instance [incoherent] r ~ TCon0 Word16 => Analyze Word16 r
instance [incoherent] r ~ TCon0 Word8 => Analyze (W Word8) r
instance [incoherent] r ~ TCon0 Word8 => Analyze Word8 r
instance [incoherent] r ~ TCon0 Int64 => Analyze (W Int64) r
instance [incoherent] r ~ TCon0 Int64 => Analyze Int64 r
instance [incoherent] r ~ TCon0 Int32 => Analyze (W Int32) r
instance [incoherent] r ~ TCon0 Int32 => Analyze Int32 r
instance [incoherent] r ~ TCon0 Int16 => Analyze (W Int16) r
instance [incoherent] r ~ TCon0 Int16 => Analyze Int16 r
instance [incoherent] r ~ TCon0 Int8 => Analyze (W Int8) r
instance [incoherent] r ~ TCon0 Int8 => Analyze Int8 r
instance [incoherent] r ~ TCon0 Double => Analyze (W Double) r
instance [incoherent] r ~ TCon0 Double => Analyze Double r
instance [incoherent] r ~ TCon0 Float => Analyze (W Float) r
instance [incoherent] r ~ TCon0 Float => Analyze Float r
instance [incoherent] r ~ TCon0 Integer => Analyze (W Integer) r
instance [incoherent] r ~ TCon0 Integer => Analyze Integer r
instance [incoherent] r ~ TCon0 Int => Analyze (W Int) r
instance [incoherent] r ~ TCon0 Int => Analyze Int r
instance [incoherent] r ~ TCon0 Ordering => Analyze (W Ordering) r
instance [incoherent] r ~ TCon0 Ordering => Analyze Ordering r
instance [incoherent] r ~ TCon0 Char => Analyze (W Char) r
instance [incoherent] r ~ TCon0 Char => Analyze Char r
instance [incoherent] r ~ TCon0 Bool => Analyze (W Bool) r
instance [incoherent] r ~ TCon0 Bool => Analyze Bool r
instance [incoherent] r ~ TCon0 () => Analyze (W ()) r
instance [incoherent] r ~ TCon0 () => Analyze () r
