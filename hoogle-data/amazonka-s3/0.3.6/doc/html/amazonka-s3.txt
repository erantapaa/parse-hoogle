-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Amazon Simple Storage Service SDK.
--   
@package amazonka-s3
@version 0.3.6

module Network.AWS.S3.Types

-- | Version <tt>2006-03-01</tt> of the Amazon Simple Storage Service
--   service.
data S3
data RESTError :: *
ns :: Text
data GetBucketNotificationConfigurationRequest

-- | <a>GetBucketNotificationConfigurationRequest</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gbncBucket</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getBucketNotificationConfigurationRequest :: Text -> GetBucketNotificationConfigurationRequest

-- | Name of the buket to get the notification configuration for.
gbncBucket :: Lens' GetBucketNotificationConfigurationRequest Text
data ReplicationConfiguration

-- | <a>ReplicationConfiguration</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rcRole</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rcRules</a> <tt>::</tt> [<a>ReplicationRule</a>]</li>
--   </ul>
replicationConfiguration :: Text -> ReplicationConfiguration

-- | Amazon Resource Name (ARN) of an IAM role for Amazon S3 to assume when
--   replicating the objects.
rcRole :: Lens' ReplicationConfiguration Text

-- | Container for information about a particular replication rule.
--   Replication configuration must have at least one rule and can contain
--   up to 1,000 rules.
rcRules :: Lens' ReplicationConfiguration [ReplicationRule]
data Destination

-- | <a>Destination</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dBucket</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
destination :: Text -> Destination

-- | Amazon resource name (ARN) of the bucket where you want Amazon S3 to
--   store replicas of the object identified by the rule.
dBucket :: Lens' Destination Text
data Event

-- | s3:ObjectCreated:CompleteMultipartUpload
S3ObjectCreatedCompleteMultipartUpload :: Event

-- | s3:ObjectCreated:Copy
S3ObjectCreatedCopy :: Event

-- | s3:ObjectCreated:Post
S3ObjectCreatedPost :: Event

-- | s3:ObjectCreated:Put
S3ObjectCreatedPut :: Event

-- | s3:ReducedRedundancyLostObject
S3ReducedRedundancyLostObject :: Event
data RequestCharged

-- | requester
Requester :: RequestCharged
data NoncurrentVersionExpiration

-- | <a>NoncurrentVersionExpiration</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>nveNoncurrentDays</a> <tt>::</tt> <a>Int</a></li>
--   </ul>
noncurrentVersionExpiration :: Int -> NoncurrentVersionExpiration

-- | Specifies the number of days an object is noncurrent before Amazon S3
--   can perform the associated action. For information about the
--   noncurrent days calculations, see <a>How Amazon S3 Calculates When an
--   Object Became Noncurrent</a> in the Amazon Simple Storage Service
--   Developer Guide.
nveNoncurrentDays :: Lens' NoncurrentVersionExpiration Int
data Transition

-- | <a>Transition</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>tDate</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>tDays</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>tStorageClass</a> <tt>::</tt> <a>Maybe</a>
--   <a>TransitionStorageClass</a></li>
--   </ul>
transition :: Transition

-- | Indicates at what date the object is to be moved or deleted. Should be
--   in GMT ISO 8601 Format.
tDate :: Lens' Transition (Maybe UTCTime)

-- | Indicates the lifetime, in days, of the objects that are subject to
--   the rule. The value must be a non-zero positive integer.
tDays :: Lens' Transition (Maybe Int)

-- | The class of storage used to store the object.
tStorageClass :: Lens' Transition (Maybe TransitionStorageClass)
data DeleteMarkerEntry

-- | <a>DeleteMarkerEntry</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dmeIsLatest</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dmeKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dmeLastModified</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>dmeOwner</a> <tt>::</tt> <a>Maybe</a> <a>Owner</a></li>
--   <li><a>dmeVersionId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
deleteMarkerEntry :: DeleteMarkerEntry

-- | Specifies whether the object is (true) or is not (false) the latest
--   version of an object.
dmeIsLatest :: Lens' DeleteMarkerEntry (Maybe Bool)

-- | The object key.
dmeKey :: Lens' DeleteMarkerEntry (Maybe Text)

-- | Date and time the object was last modified.
dmeLastModified :: Lens' DeleteMarkerEntry (Maybe UTCTime)
dmeOwner :: Lens' DeleteMarkerEntry (Maybe Owner)

-- | Version ID of an object.
dmeVersionId :: Lens' DeleteMarkerEntry (Maybe Text)
data ExpirationStatus

-- | Disabled
Disabled :: ExpirationStatus

-- | Enabled
Enabled :: ExpirationStatus
data Part

-- | <a>Part</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pETag</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pLastModified</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>pPartNumber</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>pSize</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   </ul>
part :: Part

-- | Entity tag returned when the part was uploaded.
pETag :: Lens' Part (Maybe Text)

-- | Date and time at which the part was uploaded.
pLastModified :: Lens' Part (Maybe UTCTime)

-- | Part number identifying the part.
pPartNumber :: Lens' Part (Maybe Int)

-- | Size of the uploaded part data.
pSize :: Lens' Part (Maybe Int)
data VersioningConfiguration

-- | <a>VersioningConfiguration</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vcMFADelete</a> <tt>::</tt> <a>Maybe</a> <a>MFADelete</a></li>
--   <li><a>vcStatus</a> <tt>::</tt> <a>Maybe</a>
--   <a>BucketVersioningStatus</a></li>
--   </ul>
versioningConfiguration :: VersioningConfiguration

-- | Specifies whether MFA delete is enabled in the bucket versioning
--   configuration. This element is only returned if the bucket has been
--   configured with MFA delete. If the bucket has never been so
--   configured, this element is not returned.
vcMFADelete :: Lens' VersioningConfiguration (Maybe MFADelete)

-- | The versioning state of the bucket.
vcStatus :: Lens' VersioningConfiguration (Maybe BucketVersioningStatus)
data Tag

-- | <a>Tag</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>tagKey</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>tagValue</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
tag :: Text -> Text -> Tag

-- | Name of the tag.
tagKey :: Lens' Tag Text

-- | Value of the tag.
tagValue :: Lens' Tag Text
data ObjectStorageClass

-- | GLACIER
Glacier :: ObjectStorageClass

-- | REDUCED_REDUNDANCY
ReducedRedundancy :: ObjectStorageClass

-- | STANDARD
Standard :: ObjectStorageClass
data MetadataDirective

-- | COPY
Copy :: MetadataDirective

-- | REPLACE
Replace :: MetadataDirective
data ReplicationRule

-- | <a>ReplicationRule</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rrDestination</a> <tt>::</tt> <a>Destination</a></li>
--   <li><a>rrID</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rrPrefix</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rrStatus</a> <tt>::</tt> <a>ReplicationRuleStatus</a></li>
--   </ul>
replicationRule :: Text -> ReplicationRuleStatus -> Destination -> ReplicationRule
rrDestination :: Lens' ReplicationRule Destination

-- | Unique identifier for the rule. The value cannot be longer than 255
--   characters.
rrID :: Lens' ReplicationRule (Maybe Text)

-- | Object keyname prefix identifying one or more objects to which the
--   rule applies. Maximum prefix length can be up to 1,024 characters.
--   Overlapping prefixes are not supported.
rrPrefix :: Lens' ReplicationRule Text

-- | The rule is ignored if status is not Enabled.
rrStatus :: Lens' ReplicationRule ReplicationRuleStatus
data RedirectAllRequestsTo

-- | <a>RedirectAllRequestsTo</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rartHostName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rartProtocol</a> <tt>::</tt> <a>Maybe</a> <a>Protocol</a></li>
--   </ul>
redirectAllRequestsTo :: Text -> RedirectAllRequestsTo

-- | Name of the host where requests will be redirected.
rartHostName :: Lens' RedirectAllRequestsTo Text

-- | Protocol to use (http, https) when redirecting requests. The default
--   is the protocol that is used in the original request.
rartProtocol :: Lens' RedirectAllRequestsTo (Maybe Protocol)
data RoutingRule

-- | <a>RoutingRule</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rrCondition</a> <tt>::</tt> <a>Maybe</a> <a>Condition</a></li>
--   <li><a>rrRedirect</a> <tt>::</tt> <a>Redirect</a></li>
--   </ul>
routingRule :: Redirect -> RoutingRule

-- | A container for describing a condition that must be met for the
--   specified redirect to apply. For example, 1. If request is for pages
--   in the /docs folder, redirect to the /documents folder. 2. If request
--   results in HTTP error 4xx, redirect request to another host where you
--   might process the error.
rrCondition :: Lens' RoutingRule (Maybe Condition)

-- | Container for redirect information. You can redirect requests to
--   another host, to another page, or with another protocol. In the event
--   of an error, you can can specify a different error code to return.
rrRedirect :: Lens' RoutingRule Redirect
data NotificationConfiguration

-- | <a>NotificationConfiguration</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ncLambdaFunctionConfigurations</a> <tt>::</tt>
--   [<a>LambdaFunctionConfiguration</a>]</li>
--   <li><a>ncQueueConfigurations</a> <tt>::</tt>
--   [<a>QueueConfiguration</a>]</li>
--   <li><a>ncTopicConfigurations</a> <tt>::</tt>
--   [<a>TopicConfiguration</a>]</li>
--   </ul>
notificationConfiguration :: NotificationConfiguration
ncLambdaFunctionConfigurations :: Lens' NotificationConfiguration [LambdaFunctionConfiguration]
ncQueueConfigurations :: Lens' NotificationConfiguration [QueueConfiguration]
ncTopicConfigurations :: Lens' NotificationConfiguration [TopicConfiguration]
data S3ServiceError

-- | <a>S3ServiceError</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sseCode</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>sseKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>sseMessage</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>sseVersionId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
s3ServiceError :: S3ServiceError
sseCode :: Lens' S3ServiceError (Maybe Text)
sseKey :: Lens' S3ServiceError (Maybe Text)
sseMessage :: Lens' S3ServiceError (Maybe Text)
sseVersionId :: Lens' S3ServiceError (Maybe Text)
data ObjectCannedACL

-- | authenticated-read
AuthenticatedRead :: ObjectCannedACL

-- | bucket-owner-full-control
BucketOwnerFullControl :: ObjectCannedACL

-- | bucket-owner-read
BucketOwnerRead :: ObjectCannedACL

-- | private
Private :: ObjectCannedACL

-- | public-read
PublicRead :: ObjectCannedACL

-- | public-read-write
PublicReadWrite :: ObjectCannedACL
data BucketVersioningStatus

-- | Enabled
BVSEnabled :: BucketVersioningStatus

-- | Suspended
BVSSuspended :: BucketVersioningStatus
data DeletedObject

-- | <a>DeletedObject</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>do1DeleteMarker</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>do1DeleteMarkerVersionId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>do1Key</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>do1VersionId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
deletedObject :: DeletedObject
do1DeleteMarker :: Lens' DeletedObject (Maybe Bool)
do1DeleteMarkerVersionId :: Lens' DeletedObject (Maybe Text)
do1Key :: Lens' DeletedObject (Maybe Text)
do1VersionId :: Lens' DeletedObject (Maybe Text)
data ObjectVersionStorageClass

-- | STANDARD
OVSCStandard :: ObjectVersionStorageClass
data CopyPartResult

-- | <a>CopyPartResult</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cprETag</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cprLastModified</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   </ul>
copyPartResult :: CopyPartResult

-- | Entity tag of the object.
cprETag :: Lens' CopyPartResult (Maybe Text)

-- | Date and time at which the object was uploaded.
cprLastModified :: Lens' CopyPartResult (Maybe UTCTime)
data EncodingType

-- | url
Url :: EncodingType
data RequestPaymentConfiguration

-- | <a>RequestPaymentConfiguration</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rpcPayer</a> <tt>::</tt> <a>Payer</a></li>
--   </ul>
requestPaymentConfiguration :: Payer -> RequestPaymentConfiguration

-- | Specifies who pays for the download and request fees.
rpcPayer :: Lens' RequestPaymentConfiguration Payer
data CORSRule

-- | <a>CORSRule</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>corsrAllowedHeaders</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>corsrAllowedMethods</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>corsrAllowedOrigins</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>corsrExposeHeaders</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>corsrMaxAgeSeconds</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   </ul>
corsrule :: CORSRule

-- | Specifies which headers are allowed in a pre-flight OPTIONS request.
corsrAllowedHeaders :: Lens' CORSRule [Text]

-- | Identifies HTTP methods that the domain/origin specified in the rule
--   is allowed to execute.
corsrAllowedMethods :: Lens' CORSRule [Text]

-- | One or more origins you want customers to be able to access the bucket
--   from.
corsrAllowedOrigins :: Lens' CORSRule [Text]

-- | One or more headers in the response that you want customers to be able
--   to access from their applications (for example, from a JavaScript
--   XMLHttpRequest object).
corsrExposeHeaders :: Lens' CORSRule [Text]

-- | The time in seconds that your browser is to cache the preflight
--   response for the specified resource.
corsrMaxAgeSeconds :: Lens' CORSRule (Maybe Int)
data WebsiteConfiguration

-- | <a>WebsiteConfiguration</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>wcErrorDocument</a> <tt>::</tt> <a>Maybe</a>
--   <a>ErrorDocument</a></li>
--   <li><a>wcIndexDocument</a> <tt>::</tt> <a>Maybe</a>
--   <a>IndexDocument</a></li>
--   <li><a>wcRedirectAllRequestsTo</a> <tt>::</tt> <a>Maybe</a>
--   <a>RedirectAllRequestsTo</a></li>
--   <li><a>wcRoutingRules</a> <tt>::</tt> [<a>RoutingRule</a>]</li>
--   </ul>
websiteConfiguration :: WebsiteConfiguration
wcErrorDocument :: Lens' WebsiteConfiguration (Maybe ErrorDocument)
wcIndexDocument :: Lens' WebsiteConfiguration (Maybe IndexDocument)
wcRedirectAllRequestsTo :: Lens' WebsiteConfiguration (Maybe RedirectAllRequestsTo)
wcRoutingRules :: Lens' WebsiteConfiguration [RoutingRule]
data NoncurrentVersionTransition

-- | <a>NoncurrentVersionTransition</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>nvtNoncurrentDays</a> <tt>::</tt> <a>Int</a></li>
--   <li><a>nvtStorageClass</a> <tt>::</tt>
--   <a>TransitionStorageClass</a></li>
--   </ul>
noncurrentVersionTransition :: Int -> TransitionStorageClass -> NoncurrentVersionTransition

-- | Specifies the number of days an object is noncurrent before Amazon S3
--   can perform the associated action. For information about the
--   noncurrent days calculations, see <a>How Amazon S3 Calculates When an
--   Object Became Noncurrent</a> in the Amazon Simple Storage Service
--   Developer Guide.
nvtNoncurrentDays :: Lens' NoncurrentVersionTransition Int

-- | The class of storage used to store the object.
nvtStorageClass :: Lens' NoncurrentVersionTransition TransitionStorageClass
data Initiator

-- | <a>Initiator</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>iDisplayName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iID</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
initiator :: Initiator

-- | Name of the Principal.
iDisplayName :: Lens' Initiator (Maybe Text)

-- | If the principal is an AWS account, it provides the Canonical User ID.
--   If the principal is an IAM User, it provides a user ARN value.
iID :: Lens' Initiator (Maybe Text)
data ObjectIdentifier

-- | <a>ObjectIdentifier</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>oiKey</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>oiVersionId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
objectIdentifier :: Text -> ObjectIdentifier

-- | Key name of the object to delete.
oiKey :: Lens' ObjectIdentifier Text

-- | VersionId for the specific version of the object to delete.
oiVersionId :: Lens' ObjectIdentifier (Maybe Text)
data Bucket

-- | <a>Bucket</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>bCreationDate</a> <tt>::</tt> <a>UTCTime</a></li>
--   <li><a>bName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
bucket :: Text -> UTCTime -> Bucket

-- | Date the bucket was created.
bCreationDate :: Lens' Bucket UTCTime

-- | The name of the bucket.
bName :: Lens' Bucket Text
data Protocol

-- | http
Http :: Protocol

-- | https
Https :: Protocol
data Grant

-- | <a>Grant</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gGrantee</a> <tt>::</tt> <a>Maybe</a> <a>Grantee</a></li>
--   <li><a>gPermission</a> <tt>::</tt> <a>Maybe</a> <a>Permission</a></li>
--   </ul>
grant :: Grant
gGrantee :: Lens' Grant (Maybe Grantee)

-- | Specifies the permission given to the grantee.
gPermission :: Lens' Grant (Maybe Permission)
data Rule

-- | <a>Rule</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rExpiration</a> <tt>::</tt> <a>Maybe</a>
--   <a>LifecycleExpiration</a></li>
--   <li><a>rID</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rNoncurrentVersionExpiration</a> <tt>::</tt> <a>Maybe</a>
--   <a>NoncurrentVersionExpiration</a></li>
--   <li><a>rNoncurrentVersionTransition</a> <tt>::</tt> <a>Maybe</a>
--   <a>NoncurrentVersionTransition</a></li>
--   <li><a>rPrefix</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rStatus</a> <tt>::</tt> <a>ExpirationStatus</a></li>
--   <li><a>rTransition</a> <tt>::</tt> <a>Maybe</a> <a>Transition</a></li>
--   </ul>
rule :: Text -> ExpirationStatus -> Rule
rExpiration :: Lens' Rule (Maybe LifecycleExpiration)

-- | Unique identifier for the rule. The value cannot be longer than 255
--   characters.
rID :: Lens' Rule (Maybe Text)
rNoncurrentVersionExpiration :: Lens' Rule (Maybe NoncurrentVersionExpiration)
rNoncurrentVersionTransition :: Lens' Rule (Maybe NoncurrentVersionTransition)

-- | Prefix identifying one or more objects to which the rule applies.
rPrefix :: Lens' Rule Text

-- | If <a>Enabled</a>, the rule is currently being applied. If
--   <a>Disabled</a>, the rule is not currently being applied.
rStatus :: Lens' Rule ExpirationStatus
rTransition :: Lens' Rule (Maybe Transition)
data RequestPayer

-- | requester
RPRequester :: RequestPayer
data TopicConfiguration

-- | <a>TopicConfiguration</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>tcEvents</a> <tt>::</tt> [<a>Event</a>]</li>
--   <li><a>tcId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>tcTopicArn</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
topicConfiguration :: Text -> TopicConfiguration
tcEvents :: Lens' TopicConfiguration [Event]
tcId :: Lens' TopicConfiguration (Maybe Text)

-- | Amazon SNS topic ARN to which Amazon S3 will publish a message when it
--   detects events of specified type.
tcTopicArn :: Lens' TopicConfiguration Text
data QueueConfiguration

-- | <a>QueueConfiguration</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>qcEvents</a> <tt>::</tt> [<a>Event</a>]</li>
--   <li><a>qcId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>qcQueueArn</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
queueConfiguration :: Text -> QueueConfiguration
qcEvents :: Lens' QueueConfiguration [Event]
qcId :: Lens' QueueConfiguration (Maybe Text)

-- | Amazon SQS queue ARN to which Amazon S3 will publish a message when it
--   detects events of specified type.
qcQueueArn :: Lens' QueueConfiguration Text
data Owner

-- | <a>Owner</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>oDisplayName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>oID</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
owner :: Owner
oDisplayName :: Lens' Owner (Maybe Text)
oID :: Lens' Owner (Maybe Text)
data BucketLoggingStatus

-- | <a>BucketLoggingStatus</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>blsLoggingEnabled</a> <tt>::</tt> <a>Maybe</a>
--   <a>LoggingEnabled</a></li>
--   </ul>
bucketLoggingStatus :: BucketLoggingStatus
blsLoggingEnabled :: Lens' BucketLoggingStatus (Maybe LoggingEnabled)
data NotificationConfigurationDeprecated

-- | <a>NotificationConfigurationDeprecated</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ncdCloudFunctionConfiguration</a> <tt>::</tt> <a>Maybe</a>
--   <a>CloudFunctionConfiguration</a></li>
--   <li><a>ncdQueueConfiguration</a> <tt>::</tt> <a>Maybe</a>
--   <a>QueueConfigurationDeprecated</a></li>
--   <li><a>ncdTopicConfiguration</a> <tt>::</tt> <a>Maybe</a>
--   <a>TopicConfigurationDeprecated</a></li>
--   </ul>
notificationConfigurationDeprecated :: NotificationConfigurationDeprecated
ncdCloudFunctionConfiguration :: Lens' NotificationConfigurationDeprecated (Maybe CloudFunctionConfiguration)
ncdQueueConfiguration :: Lens' NotificationConfigurationDeprecated (Maybe QueueConfigurationDeprecated)
ncdTopicConfiguration :: Lens' NotificationConfigurationDeprecated (Maybe TopicConfigurationDeprecated)
data ErrorDocument

-- | <a>ErrorDocument</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>edKey</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
errorDocument :: Text -> ErrorDocument

-- | The object key name to use when a 4XX class error occurs.
edKey :: Lens' ErrorDocument Text
data StorageClass

-- | REDUCED_REDUNDANCY
SCReducedRedundancy :: StorageClass

-- | STANDARD
SCStandard :: StorageClass
data ObjectVersion

-- | <a>ObjectVersion</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ovETag</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ovIsLatest</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>ovKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ovLastModified</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>ovOwner</a> <tt>::</tt> <a>Maybe</a> <a>Owner</a></li>
--   <li><a>ovSize</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>ovStorageClass</a> <tt>::</tt> <a>Maybe</a>
--   <a>ObjectVersionStorageClass</a></li>
--   <li><a>ovVersionId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
objectVersion :: ObjectVersion
ovETag :: Lens' ObjectVersion (Maybe Text)

-- | Specifies whether the object is (true) or is not (false) the latest
--   version of an object.
ovIsLatest :: Lens' ObjectVersion (Maybe Bool)

-- | The object key.
ovKey :: Lens' ObjectVersion (Maybe Text)

-- | Date and time the object was last modified.
ovLastModified :: Lens' ObjectVersion (Maybe UTCTime)
ovOwner :: Lens' ObjectVersion (Maybe Owner)

-- | Size in bytes of the object.
ovSize :: Lens' ObjectVersion (Maybe Int)

-- | The class of storage used to store the object.
ovStorageClass :: Lens' ObjectVersion (Maybe ObjectVersionStorageClass)

-- | Version ID of an object.
ovVersionId :: Lens' ObjectVersion (Maybe Text)
data TargetGrant

-- | <a>TargetGrant</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>tgGrantee</a> <tt>::</tt> <a>Maybe</a> <a>Grantee</a></li>
--   <li><a>tgPermission</a> <tt>::</tt> <a>Maybe</a>
--   <a>BucketLogsPermission</a></li>
--   </ul>
targetGrant :: TargetGrant
tgGrantee :: Lens' TargetGrant (Maybe Grantee)

-- | Logging permissions assigned to the Grantee for the bucket.
tgPermission :: Lens' TargetGrant (Maybe BucketLogsPermission)
data MFADeleteStatus

-- | Disabled
MFADSDisabled :: MFADeleteStatus

-- | Enabled
MFADSEnabled :: MFADeleteStatus
data Payer

-- | BucketOwner
PBucketOwner :: Payer

-- | Requester
PRequester :: Payer
data Redirect

-- | <a>Redirect</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rHostName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rHttpRedirectCode</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rProtocol</a> <tt>::</tt> <a>Maybe</a> <a>Protocol</a></li>
--   <li><a>rReplaceKeyPrefixWith</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>rReplaceKeyWith</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
redirect :: Redirect

-- | The host name to use in the redirect request.
rHostName :: Lens' Redirect (Maybe Text)

-- | The HTTP redirect code to use on the response. Not required if one of
--   the siblings is present.
rHttpRedirectCode :: Lens' Redirect (Maybe Text)

-- | Protocol to use (http, https) when redirecting requests. The default
--   is the protocol that is used in the original request.
rProtocol :: Lens' Redirect (Maybe Protocol)

-- | The object key prefix to use in the redirect request. For example, to
--   redirect requests for all pages with prefix docs<i> (objects in the
--   docs</i> folder) to documents/, you can set a condition block with
--   KeyPrefixEquals set to docs<i> and in the Redirect set
--   ReplaceKeyPrefixWith to </i>documents. Not required if one of the
--   siblings is present. Can be present only if ReplaceKeyWith is not
--   provided.
rReplaceKeyPrefixWith :: Lens' Redirect (Maybe Text)

-- | The specific object key to use in the redirect request. For example,
--   redirect request to error.html. Not required if one of the sibling is
--   present. Can be present only if ReplaceKeyPrefixWith is not provided.
rReplaceKeyWith :: Lens' Redirect (Maybe Text)
data BucketLogsPermission

-- | FULL_CONTROL
FullControl :: BucketLogsPermission

-- | READ
Read :: BucketLogsPermission

-- | WRITE
Write :: BucketLogsPermission
data CompletedPart

-- | <a>CompletedPart</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cpETag</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cpPartNumber</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   </ul>
completedPart :: CompletedPart

-- | Entity tag returned when the part was uploaded.
cpETag :: Lens' CompletedPart (Maybe Text)

-- | Part number that identifies the part.
cpPartNumber :: Lens' CompletedPart (Maybe Int)
data CreateBucketConfiguration

-- | <a>CreateBucketConfiguration</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cbcLocationConstraint</a> <tt>::</tt> <a>Maybe</a>
--   <a>Region</a></li>
--   </ul>
createBucketConfiguration :: CreateBucketConfiguration

-- | Specifies the region where the bucket will be created. If you don't
--   specify a region, the bucket will be created in US Standard.
cbcLocationConstraint :: Lens' CreateBucketConfiguration (Maybe Region)
data Tagging

-- | <a>Tagging</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>tTagSet</a> <tt>::</tt> [<a>Tag</a>]</li>
--   </ul>
tagging :: Tagging
tTagSet :: Lens' Tagging [Tag]
data LifecycleExpiration

-- | <a>LifecycleExpiration</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>leDate</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>leDays</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   </ul>
lifecycleExpiration :: LifecycleExpiration

-- | Indicates at what date the object is to be moved or deleted. Should be
--   in GMT ISO 8601 Format.
leDate :: Lens' LifecycleExpiration (Maybe UTCTime)

-- | Indicates the lifetime, in days, of the objects that are subject to
--   the rule. The value must be a non-zero positive integer.
leDays :: Lens' LifecycleExpiration (Maybe Int)
data CORSConfiguration

-- | <a>CORSConfiguration</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>corscCORSRules</a> <tt>::</tt> [<a>CORSRule</a>]</li>
--   </ul>
corsconfiguration :: CORSConfiguration
corscCORSRules :: Lens' CORSConfiguration [CORSRule]
data Object

-- | <a>Object</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>oETag</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>oKey</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>oLastModified</a> <tt>::</tt> <a>UTCTime</a></li>
--   <li><a>oOwner</a> <tt>::</tt> <a>Owner</a></li>
--   <li><a>oSize</a> <tt>::</tt> <a>Int</a></li>
--   <li><a>oStorageClass</a> <tt>::</tt> <a>ObjectStorageClass</a></li>
--   </ul>
object' :: Text -> UTCTime -> Text -> Int -> ObjectStorageClass -> Owner -> Object
oETag :: Lens' Object Text
oKey :: Lens' Object Text
oLastModified :: Lens' Object UTCTime
oOwner :: Lens' Object Owner
oSize :: Lens' Object Int

-- | The class of storage used to store the object.
oStorageClass :: Lens' Object ObjectStorageClass
data CommonPrefix

-- | <a>CommonPrefix</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cpPrefix</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
commonPrefix :: CommonPrefix
cpPrefix :: Lens' CommonPrefix (Maybe Text)
data MultipartUpload

-- | <a>MultipartUpload</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>muInitiated</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>muInitiator</a> <tt>::</tt> <a>Maybe</a> <a>Initiator</a></li>
--   <li><a>muKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>muOwner</a> <tt>::</tt> <a>Maybe</a> <a>Owner</a></li>
--   <li><a>muStorageClass</a> <tt>::</tt> <a>Maybe</a>
--   <a>StorageClass</a></li>
--   <li><a>muUploadId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
multipartUpload :: MultipartUpload

-- | Date and time at which the multipart upload was initiated.
muInitiated :: Lens' MultipartUpload (Maybe UTCTime)

-- | Identifies who initiated the multipart upload.
muInitiator :: Lens' MultipartUpload (Maybe Initiator)

-- | Key of the object for which the multipart upload was initiated.
muKey :: Lens' MultipartUpload (Maybe Text)
muOwner :: Lens' MultipartUpload (Maybe Owner)

-- | The class of storage used to store the object.
muStorageClass :: Lens' MultipartUpload (Maybe StorageClass)

-- | Upload ID that identifies the multipart upload.
muUploadId :: Lens' MultipartUpload (Maybe Text)
data LambdaFunctionConfiguration

-- | <a>LambdaFunctionConfiguration</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lfcEvents</a> <tt>::</tt> [<a>Event</a>]</li>
--   <li><a>lfcId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lfcLambdaFunctionArn</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
lambdaFunctionConfiguration :: Text -> LambdaFunctionConfiguration
lfcEvents :: Lens' LambdaFunctionConfiguration [Event]
lfcId :: Lens' LambdaFunctionConfiguration (Maybe Text)

-- | Lambda cloud function ARN that Amazon S3 can invoke when it detects
--   events of the specified type.
lfcLambdaFunctionArn :: Lens' LambdaFunctionConfiguration Text
data QueueConfigurationDeprecated

-- | <a>QueueConfigurationDeprecated</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>qcdEvent</a> <tt>::</tt> <a>Maybe</a> <a>Event</a></li>
--   <li><a>qcdEvents</a> <tt>::</tt> [<a>Event</a>]</li>
--   <li><a>qcdId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>qcdQueue</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
queueConfigurationDeprecated :: QueueConfigurationDeprecated
qcdEvent :: Lens' QueueConfigurationDeprecated (Maybe Event)
qcdEvents :: Lens' QueueConfigurationDeprecated [Event]
qcdId :: Lens' QueueConfigurationDeprecated (Maybe Text)
qcdQueue :: Lens' QueueConfigurationDeprecated (Maybe Text)
data TopicConfigurationDeprecated

-- | <a>TopicConfigurationDeprecated</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>tcdEvent</a> <tt>::</tt> <a>Maybe</a> <a>Event</a></li>
--   <li><a>tcdEvents</a> <tt>::</tt> [<a>Event</a>]</li>
--   <li><a>tcdId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>tcdTopic</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
topicConfigurationDeprecated :: TopicConfigurationDeprecated

-- | Bucket event for which to send notifications.
tcdEvent :: Lens' TopicConfigurationDeprecated (Maybe Event)
tcdEvents :: Lens' TopicConfigurationDeprecated [Event]
tcdId :: Lens' TopicConfigurationDeprecated (Maybe Text)

-- | Amazon SNS topic to which Amazon S3 will publish a message to report
--   the specified events for the bucket.
tcdTopic :: Lens' TopicConfigurationDeprecated (Maybe Text)
data Type

-- | AmazonCustomerByEmail
AmazonCustomerByEmail :: Type

-- | CanonicalUser
CanonicalUser :: Type

-- | Group
Group :: Type
data ReplicationStatus

-- | COMPLETE
Complete :: ReplicationStatus

-- | FAILED
Failed :: ReplicationStatus

-- | PENDING
Pending :: ReplicationStatus

-- | REPLICA
Replica :: ReplicationStatus
data TransitionStorageClass

-- | GLACIER
TSCGlacier :: TransitionStorageClass
data CompletedMultipartUpload

-- | <a>CompletedMultipartUpload</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cmuParts</a> <tt>::</tt> [<a>CompletedPart</a>]</li>
--   </ul>
completedMultipartUpload :: CompletedMultipartUpload
cmuParts :: Lens' CompletedMultipartUpload [CompletedPart]
data Condition

-- | <a>Condition</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cHttpErrorCodeReturnedEquals</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cKeyPrefixEquals</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
condition :: Condition

-- | The HTTP error code when the redirect is applied. In the event of an
--   error, if the error code equals this value, then the specified
--   redirect is applied. Required when parent element Condition is
--   specified and sibling KeyPrefixEquals is not specified. If both are
--   specified, then both must be true for the redirect to be applied.
cHttpErrorCodeReturnedEquals :: Lens' Condition (Maybe Text)

-- | The object key name prefix when the redirect is applied. For example,
--   to redirect requests for ExamplePage.html, the key prefix will be
--   ExamplePage.html. To redirect request for all pages with the prefix
--   docs/, the key prefix will be <i>docs, which identifies all objects in
--   the docs</i> folder. Required when the parent element Condition is
--   specified and sibling HttpErrorCodeReturnedEquals is not specified. If
--   both conditions are specified, both must be true for the redirect to
--   be applied.
cKeyPrefixEquals :: Lens' Condition (Maybe Text)
data Permission

-- | FULL_CONTROL
PFullControl :: Permission

-- | READ
PRead :: Permission

-- | READ_ACP
PReadAcp :: Permission

-- | WRITE
PWrite :: Permission

-- | WRITE_ACP
PWriteAcp :: Permission
data AccessControlPolicy

-- | <a>AccessControlPolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>acpGrants</a> <tt>::</tt> [<a>Grant</a>]</li>
--   <li><a>acpOwner</a> <tt>::</tt> <a>Maybe</a> <a>Owner</a></li>
--   </ul>
accessControlPolicy :: AccessControlPolicy

-- | A list of grants.
acpGrants :: Lens' AccessControlPolicy [Grant]
acpOwner :: Lens' AccessControlPolicy (Maybe Owner)
data BucketCannedACL

-- | authenticated-read
CannedAuthenticatedRead :: BucketCannedACL

-- | private
CannedPrivate :: BucketCannedACL

-- | public-read
CannedPublicRead :: BucketCannedACL

-- | public-read-write
CannedPublicReadWrite :: BucketCannedACL
data MFADelete

-- | Disabled
MFADDisabled :: MFADelete

-- | Enabled
MFADEnabled :: MFADelete
data CloudFunctionConfiguration

-- | <a>CloudFunctionConfiguration</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cfcCloudFunction</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cfcEvent</a> <tt>::</tt> <a>Maybe</a> <a>Event</a></li>
--   <li><a>cfcEvents</a> <tt>::</tt> [<a>Event</a>]</li>
--   <li><a>cfcId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cfcInvocationRole</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
cloudFunctionConfiguration :: CloudFunctionConfiguration
cfcCloudFunction :: Lens' CloudFunctionConfiguration (Maybe Text)
cfcEvent :: Lens' CloudFunctionConfiguration (Maybe Event)
cfcEvents :: Lens' CloudFunctionConfiguration [Event]
cfcId :: Lens' CloudFunctionConfiguration (Maybe Text)
cfcInvocationRole :: Lens' CloudFunctionConfiguration (Maybe Text)
data Grantee

-- | <a>Grantee</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gDisplayName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gEmailAddress</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gID</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gType</a> <tt>::</tt> <a>Type</a></li>
--   <li><a>gURI</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
grantee :: Type -> Grantee

-- | Screen name of the grantee.
gDisplayName :: Lens' Grantee (Maybe Text)

-- | Email address of the grantee.
gEmailAddress :: Lens' Grantee (Maybe Text)

-- | The canonical user ID of the grantee.
gID :: Lens' Grantee (Maybe Text)

-- | Type of grantee
gType :: Lens' Grantee Type

-- | URI of the grantee group.
gURI :: Lens' Grantee (Maybe Text)
data LifecycleConfiguration

-- | <a>LifecycleConfiguration</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lcRules</a> <tt>::</tt> [<a>Rule</a>]</li>
--   </ul>
lifecycleConfiguration :: LifecycleConfiguration
lcRules :: Lens' LifecycleConfiguration [Rule]
data LoggingEnabled

-- | <a>LoggingEnabled</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>leTargetBucket</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>leTargetGrants</a> <tt>::</tt> [<a>TargetGrant</a>]</li>
--   <li><a>leTargetPrefix</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
loggingEnabled :: LoggingEnabled

-- | Specifies the bucket where you want Amazon S3 to store server access
--   logs. You can have your logs delivered to any bucket that you own,
--   including the same bucket that is being logged. You can also configure
--   multiple buckets to deliver their logs to the same target bucket. In
--   this case you should choose a different TargetPrefix for each source
--   bucket so that the delivered log files can be distinguished by key.
leTargetBucket :: Lens' LoggingEnabled (Maybe Text)
leTargetGrants :: Lens' LoggingEnabled [TargetGrant]

-- | This element lets you specify a prefix for the keys that the log files
--   will be stored under.
leTargetPrefix :: Lens' LoggingEnabled (Maybe Text)
data ReplicationRuleStatus

-- | Disabled
RRSDisabled :: ReplicationRuleStatus

-- | Enabled
RRSEnabled :: ReplicationRuleStatus
data ServerSideEncryption

-- | AES256
AES256 :: ServerSideEncryption
data IndexDocument

-- | <a>IndexDocument</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>idSuffix</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
indexDocument :: Text -> IndexDocument

-- | A suffix that is appended to a request that is for a directory on the
--   website endpoint (e.g. if the suffix is index.html and you make a
--   request to samplebucket<i>images</i> the data that is returned will be
--   for the object with the key name images/index.html) The suffix must
--   not be empty and must not include a slash character.
idSuffix :: Lens' IndexDocument Text
data CopyObjectResult

-- | <a>CopyObjectResult</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>corETag</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>corLastModified</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   </ul>
copyObjectResult :: CopyObjectResult
corETag :: Lens' CopyObjectResult (Maybe Text)
corLastModified :: Lens' CopyObjectResult (Maybe UTCTime)
data Delete

-- | <a>Delete</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dObjects</a> <tt>::</tt> [<a>ObjectIdentifier</a>]</li>
--   <li><a>dQuiet</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   </ul>
delete' :: Delete
dObjects :: Lens' Delete [ObjectIdentifier]

-- | Element to enable quiet mode for the request. When you add this
--   element, you must set its value to true.
dQuiet :: Lens' Delete (Maybe Bool)
data RestoreRequest

-- | <a>RestoreRequest</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rDays</a> <tt>::</tt> <a>Int</a></li>
--   </ul>
restoreRequest :: Int -> RestoreRequest

-- | Lifetime of the active copy in days
rDays :: Lens' RestoreRequest Int
newtype BucketName
BucketName :: Text -> BucketName
newtype ObjectKey
ObjectKey :: Text -> ObjectKey
newtype ObjectVersionId
ObjectVersionId :: Text -> ObjectVersionId
newtype ETag
ETag :: Text -> ETag

-- | The sum of available AWS regions.
data Region :: *
instance Eq GetBucketNotificationConfigurationRequest
instance Ord GetBucketNotificationConfigurationRequest
instance Read GetBucketNotificationConfigurationRequest
instance Show GetBucketNotificationConfigurationRequest
instance Monoid GetBucketNotificationConfigurationRequest
instance IsString GetBucketNotificationConfigurationRequest
instance Eq Destination
instance Ord Destination
instance Read Destination
instance Show Destination
instance Monoid Destination
instance IsString Destination
instance Eq Event
instance Ord Event
instance Read Event
instance Show Event
instance Generic Event
instance Enum Event
instance Eq RequestCharged
instance Ord RequestCharged
instance Read RequestCharged
instance Show RequestCharged
instance Generic RequestCharged
instance Enum RequestCharged
instance Eq NoncurrentVersionExpiration
instance Ord NoncurrentVersionExpiration
instance Read NoncurrentVersionExpiration
instance Show NoncurrentVersionExpiration
instance Enum NoncurrentVersionExpiration
instance Num NoncurrentVersionExpiration
instance Integral NoncurrentVersionExpiration
instance Real NoncurrentVersionExpiration
instance Eq ExpirationStatus
instance Ord ExpirationStatus
instance Read ExpirationStatus
instance Show ExpirationStatus
instance Generic ExpirationStatus
instance Enum ExpirationStatus
instance Eq Part
instance Ord Part
instance Read Part
instance Show Part
instance Eq Tag
instance Ord Tag
instance Read Tag
instance Show Tag
instance Eq ObjectStorageClass
instance Ord ObjectStorageClass
instance Read ObjectStorageClass
instance Show ObjectStorageClass
instance Generic ObjectStorageClass
instance Enum ObjectStorageClass
instance Eq MetadataDirective
instance Ord MetadataDirective
instance Read MetadataDirective
instance Show MetadataDirective
instance Generic MetadataDirective
instance Enum MetadataDirective
instance Eq S3ServiceError
instance Ord S3ServiceError
instance Read S3ServiceError
instance Show S3ServiceError
instance Eq ObjectCannedACL
instance Ord ObjectCannedACL
instance Read ObjectCannedACL
instance Show ObjectCannedACL
instance Generic ObjectCannedACL
instance Enum ObjectCannedACL
instance Eq BucketVersioningStatus
instance Ord BucketVersioningStatus
instance Read BucketVersioningStatus
instance Show BucketVersioningStatus
instance Generic BucketVersioningStatus
instance Enum BucketVersioningStatus
instance Eq DeletedObject
instance Ord DeletedObject
instance Read DeletedObject
instance Show DeletedObject
instance Eq ObjectVersionStorageClass
instance Ord ObjectVersionStorageClass
instance Read ObjectVersionStorageClass
instance Show ObjectVersionStorageClass
instance Generic ObjectVersionStorageClass
instance Enum ObjectVersionStorageClass
instance Eq CopyPartResult
instance Ord CopyPartResult
instance Read CopyPartResult
instance Show CopyPartResult
instance Eq EncodingType
instance Ord EncodingType
instance Read EncodingType
instance Show EncodingType
instance Generic EncodingType
instance Enum EncodingType
instance Eq CORSRule
instance Ord CORSRule
instance Read CORSRule
instance Show CORSRule
instance Eq Initiator
instance Ord Initiator
instance Read Initiator
instance Show Initiator
instance Eq ObjectIdentifier
instance Ord ObjectIdentifier
instance Read ObjectIdentifier
instance Show ObjectIdentifier
instance Eq Bucket
instance Ord Bucket
instance Read Bucket
instance Show Bucket
instance Eq Protocol
instance Ord Protocol
instance Read Protocol
instance Show Protocol
instance Generic Protocol
instance Enum Protocol
instance Eq RedirectAllRequestsTo
instance Read RedirectAllRequestsTo
instance Show RedirectAllRequestsTo
instance Eq RequestPayer
instance Ord RequestPayer
instance Read RequestPayer
instance Show RequestPayer
instance Generic RequestPayer
instance Enum RequestPayer
instance Eq TopicConfiguration
instance Read TopicConfiguration
instance Show TopicConfiguration
instance Eq QueueConfiguration
instance Read QueueConfiguration
instance Show QueueConfiguration
instance Eq Owner
instance Ord Owner
instance Read Owner
instance Show Owner
instance Eq DeleteMarkerEntry
instance Read DeleteMarkerEntry
instance Show DeleteMarkerEntry
instance Eq ErrorDocument
instance Ord ErrorDocument
instance Read ErrorDocument
instance Show ErrorDocument
instance Monoid ErrorDocument
instance IsString ErrorDocument
instance Eq StorageClass
instance Ord StorageClass
instance Read StorageClass
instance Show StorageClass
instance Generic StorageClass
instance Enum StorageClass
instance Eq ObjectVersion
instance Read ObjectVersion
instance Show ObjectVersion
instance Eq MFADeleteStatus
instance Ord MFADeleteStatus
instance Read MFADeleteStatus
instance Show MFADeleteStatus
instance Generic MFADeleteStatus
instance Enum MFADeleteStatus
instance Eq Payer
instance Ord Payer
instance Read Payer
instance Show Payer
instance Generic Payer
instance Enum Payer
instance Eq RequestPaymentConfiguration
instance Read RequestPaymentConfiguration
instance Show RequestPaymentConfiguration
instance Eq Redirect
instance Read Redirect
instance Show Redirect
instance Eq BucketLogsPermission
instance Ord BucketLogsPermission
instance Read BucketLogsPermission
instance Show BucketLogsPermission
instance Generic BucketLogsPermission
instance Enum BucketLogsPermission
instance Eq CompletedPart
instance Ord CompletedPart
instance Read CompletedPart
instance Show CompletedPart
instance Eq CreateBucketConfiguration
instance Read CreateBucketConfiguration
instance Show CreateBucketConfiguration
instance Eq Tagging
instance Read Tagging
instance Show Tagging
instance Monoid Tagging
instance Semigroup Tagging
instance Eq LifecycleExpiration
instance Ord LifecycleExpiration
instance Read LifecycleExpiration
instance Show LifecycleExpiration
instance Eq CORSConfiguration
instance Read CORSConfiguration
instance Show CORSConfiguration
instance Monoid CORSConfiguration
instance Semigroup CORSConfiguration
instance Eq Object
instance Read Object
instance Show Object
instance Eq CommonPrefix
instance Ord CommonPrefix
instance Read CommonPrefix
instance Show CommonPrefix
instance Monoid CommonPrefix
instance Eq MultipartUpload
instance Read MultipartUpload
instance Show MultipartUpload
instance Eq LambdaFunctionConfiguration
instance Read LambdaFunctionConfiguration
instance Show LambdaFunctionConfiguration
instance Eq NotificationConfiguration
instance Read NotificationConfiguration
instance Show NotificationConfiguration
instance Eq QueueConfigurationDeprecated
instance Read QueueConfigurationDeprecated
instance Show QueueConfigurationDeprecated
instance Eq TopicConfigurationDeprecated
instance Read TopicConfigurationDeprecated
instance Show TopicConfigurationDeprecated
instance Eq Type
instance Ord Type
instance Read Type
instance Show Type
instance Generic Type
instance Enum Type
instance Eq ReplicationStatus
instance Ord ReplicationStatus
instance Read ReplicationStatus
instance Show ReplicationStatus
instance Generic ReplicationStatus
instance Enum ReplicationStatus
instance Eq TransitionStorageClass
instance Ord TransitionStorageClass
instance Read TransitionStorageClass
instance Show TransitionStorageClass
instance Generic TransitionStorageClass
instance Enum TransitionStorageClass
instance Eq NoncurrentVersionTransition
instance Read NoncurrentVersionTransition
instance Show NoncurrentVersionTransition
instance Eq Transition
instance Read Transition
instance Show Transition
instance Eq Rule
instance Read Rule
instance Show Rule
instance Eq CompletedMultipartUpload
instance Read CompletedMultipartUpload
instance Show CompletedMultipartUpload
instance Monoid CompletedMultipartUpload
instance Semigroup CompletedMultipartUpload
instance Eq Condition
instance Ord Condition
instance Read Condition
instance Show Condition
instance Eq RoutingRule
instance Read RoutingRule
instance Show RoutingRule
instance Eq Permission
instance Ord Permission
instance Read Permission
instance Show Permission
instance Generic Permission
instance Enum Permission
instance Eq BucketCannedACL
instance Ord BucketCannedACL
instance Read BucketCannedACL
instance Show BucketCannedACL
instance Generic BucketCannedACL
instance Enum BucketCannedACL
instance Eq MFADelete
instance Ord MFADelete
instance Read MFADelete
instance Show MFADelete
instance Generic MFADelete
instance Enum MFADelete
instance Eq VersioningConfiguration
instance Read VersioningConfiguration
instance Show VersioningConfiguration
instance Eq CloudFunctionConfiguration
instance Read CloudFunctionConfiguration
instance Show CloudFunctionConfiguration
instance Eq NotificationConfigurationDeprecated
instance Read NotificationConfigurationDeprecated
instance Show NotificationConfigurationDeprecated
instance Eq Grantee
instance Read Grantee
instance Show Grantee
instance Eq TargetGrant
instance Read TargetGrant
instance Show TargetGrant
instance Eq Grant
instance Read Grant
instance Show Grant
instance Eq AccessControlPolicy
instance Read AccessControlPolicy
instance Show AccessControlPolicy
instance Eq LifecycleConfiguration
instance Read LifecycleConfiguration
instance Show LifecycleConfiguration
instance Monoid LifecycleConfiguration
instance Semigroup LifecycleConfiguration
instance Eq LoggingEnabled
instance Read LoggingEnabled
instance Show LoggingEnabled
instance Eq BucketLoggingStatus
instance Read BucketLoggingStatus
instance Show BucketLoggingStatus
instance Eq ReplicationRuleStatus
instance Ord ReplicationRuleStatus
instance Read ReplicationRuleStatus
instance Show ReplicationRuleStatus
instance Generic ReplicationRuleStatus
instance Enum ReplicationRuleStatus
instance Eq ReplicationRule
instance Read ReplicationRule
instance Show ReplicationRule
instance Eq ReplicationConfiguration
instance Read ReplicationConfiguration
instance Show ReplicationConfiguration
instance Eq ServerSideEncryption
instance Ord ServerSideEncryption
instance Read ServerSideEncryption
instance Show ServerSideEncryption
instance Generic ServerSideEncryption
instance Enum ServerSideEncryption
instance Eq IndexDocument
instance Ord IndexDocument
instance Read IndexDocument
instance Show IndexDocument
instance Monoid IndexDocument
instance IsString IndexDocument
instance Eq WebsiteConfiguration
instance Read WebsiteConfiguration
instance Show WebsiteConfiguration
instance Eq CopyObjectResult
instance Ord CopyObjectResult
instance Read CopyObjectResult
instance Show CopyObjectResult
instance Eq Delete
instance Read Delete
instance Show Delete
instance Eq RestoreRequest
instance Ord RestoreRequest
instance Read RestoreRequest
instance Show RestoreRequest
instance Enum RestoreRequest
instance Num RestoreRequest
instance Integral RestoreRequest
instance Real RestoreRequest
instance Datatype D1Event
instance Constructor C1_0Event
instance Constructor C1_1Event
instance Constructor C1_2Event
instance Constructor C1_3Event
instance Constructor C1_4Event
instance Datatype D1RequestCharged
instance Constructor C1_0RequestCharged
instance Datatype D1ExpirationStatus
instance Constructor C1_0ExpirationStatus
instance Constructor C1_1ExpirationStatus
instance Datatype D1ObjectStorageClass
instance Constructor C1_0ObjectStorageClass
instance Constructor C1_1ObjectStorageClass
instance Constructor C1_2ObjectStorageClass
instance Datatype D1MetadataDirective
instance Constructor C1_0MetadataDirective
instance Constructor C1_1MetadataDirective
instance Datatype D1ObjectCannedACL
instance Constructor C1_0ObjectCannedACL
instance Constructor C1_1ObjectCannedACL
instance Constructor C1_2ObjectCannedACL
instance Constructor C1_3ObjectCannedACL
instance Constructor C1_4ObjectCannedACL
instance Constructor C1_5ObjectCannedACL
instance Datatype D1BucketVersioningStatus
instance Constructor C1_0BucketVersioningStatus
instance Constructor C1_1BucketVersioningStatus
instance Datatype D1ObjectVersionStorageClass
instance Constructor C1_0ObjectVersionStorageClass
instance Datatype D1EncodingType
instance Constructor C1_0EncodingType
instance Datatype D1Protocol
instance Constructor C1_0Protocol
instance Constructor C1_1Protocol
instance Datatype D1RequestPayer
instance Constructor C1_0RequestPayer
instance Datatype D1StorageClass
instance Constructor C1_0StorageClass
instance Constructor C1_1StorageClass
instance Datatype D1MFADeleteStatus
instance Constructor C1_0MFADeleteStatus
instance Constructor C1_1MFADeleteStatus
instance Datatype D1Payer
instance Constructor C1_0Payer
instance Constructor C1_1Payer
instance Datatype D1BucketLogsPermission
instance Constructor C1_0BucketLogsPermission
instance Constructor C1_1BucketLogsPermission
instance Constructor C1_2BucketLogsPermission
instance Datatype D1Type
instance Constructor C1_0Type
instance Constructor C1_1Type
instance Constructor C1_2Type
instance Datatype D1ReplicationStatus
instance Constructor C1_0ReplicationStatus
instance Constructor C1_1ReplicationStatus
instance Constructor C1_2ReplicationStatus
instance Constructor C1_3ReplicationStatus
instance Datatype D1TransitionStorageClass
instance Constructor C1_0TransitionStorageClass
instance Datatype D1Permission
instance Constructor C1_0Permission
instance Constructor C1_1Permission
instance Constructor C1_2Permission
instance Constructor C1_3Permission
instance Constructor C1_4Permission
instance Datatype D1BucketCannedACL
instance Constructor C1_0BucketCannedACL
instance Constructor C1_1BucketCannedACL
instance Constructor C1_2BucketCannedACL
instance Constructor C1_3BucketCannedACL
instance Datatype D1MFADelete
instance Constructor C1_0MFADelete
instance Constructor C1_1MFADelete
instance Datatype D1ReplicationRuleStatus
instance Constructor C1_0ReplicationRuleStatus
instance Constructor C1_1ReplicationRuleStatus
instance Datatype D1ServerSideEncryption
instance Constructor C1_0ServerSideEncryption
instance ToXML RestoreRequest
instance FromXML RestoreRequest
instance ToXML Delete
instance FromXML Delete
instance ToXML CopyObjectResult
instance FromXML CopyObjectResult
instance ToXML IndexDocument
instance FromXML IndexDocument
instance ToXML ServerSideEncryption
instance FromXML ServerSideEncryption
instance ToQuery ServerSideEncryption
instance ToHeader ServerSideEncryption
instance ToByteString ServerSideEncryption
instance ToText ServerSideEncryption
instance FromText ServerSideEncryption
instance Hashable ServerSideEncryption
instance ToXML ReplicationRuleStatus
instance FromXML ReplicationRuleStatus
instance ToQuery ReplicationRuleStatus
instance ToHeader ReplicationRuleStatus
instance ToByteString ReplicationRuleStatus
instance ToText ReplicationRuleStatus
instance FromText ReplicationRuleStatus
instance Hashable ReplicationRuleStatus
instance ToXML LoggingEnabled
instance FromXML LoggingEnabled
instance ToXML LifecycleConfiguration
instance FromXML LifecycleConfiguration
instance ToXML Grantee
instance FromXML Grantee
instance ToXML CloudFunctionConfiguration
instance FromXML CloudFunctionConfiguration
instance ToXML MFADelete
instance FromXML MFADelete
instance ToQuery MFADelete
instance ToHeader MFADelete
instance ToByteString MFADelete
instance ToText MFADelete
instance FromText MFADelete
instance Hashable MFADelete
instance ToXML BucketCannedACL
instance FromXML BucketCannedACL
instance ToQuery BucketCannedACL
instance ToHeader BucketCannedACL
instance ToByteString BucketCannedACL
instance ToText BucketCannedACL
instance FromText BucketCannedACL
instance Hashable BucketCannedACL
instance ToXML AccessControlPolicy
instance ToXMLRoot AccessControlPolicy
instance FromXML AccessControlPolicy
instance ToXML Permission
instance FromXML Permission
instance ToQuery Permission
instance ToHeader Permission
instance ToByteString Permission
instance ToText Permission
instance FromText Permission
instance Hashable Permission
instance ToXML Condition
instance FromXML Condition
instance ToXML CompletedMultipartUpload
instance FromXML CompletedMultipartUpload
instance ToXML TransitionStorageClass
instance FromXML TransitionStorageClass
instance ToQuery TransitionStorageClass
instance ToHeader TransitionStorageClass
instance ToByteString TransitionStorageClass
instance ToText TransitionStorageClass
instance FromText TransitionStorageClass
instance Hashable TransitionStorageClass
instance ToXML ReplicationStatus
instance FromXML ReplicationStatus
instance ToQuery ReplicationStatus
instance ToHeader ReplicationStatus
instance ToByteString ReplicationStatus
instance ToText ReplicationStatus
instance FromText ReplicationStatus
instance Hashable ReplicationStatus
instance ToXML Type
instance FromXML Type
instance ToQuery Type
instance ToHeader Type
instance ToByteString Type
instance ToText Type
instance FromText Type
instance Hashable Type
instance ToXML TopicConfigurationDeprecated
instance FromXML TopicConfigurationDeprecated
instance ToXML QueueConfigurationDeprecated
instance FromXML QueueConfigurationDeprecated
instance ToXML LambdaFunctionConfiguration
instance FromXML LambdaFunctionConfiguration
instance ToXML MultipartUpload
instance FromXML MultipartUpload
instance ToXML CommonPrefix
instance ToXMLRoot CommonPrefix
instance FromXML CommonPrefix
instance ToXML Object
instance FromXML Object
instance ToXML CORSConfiguration
instance FromXML CORSConfiguration
instance ToXML LifecycleExpiration
instance FromXML LifecycleExpiration
instance ToXML Tagging
instance FromXML Tagging
instance IsList Tagging
instance ToXML CreateBucketConfiguration
instance FromXML CreateBucketConfiguration
instance ToXML CompletedPart
instance FromXML CompletedPart
instance ToXML BucketLogsPermission
instance FromXML BucketLogsPermission
instance ToQuery BucketLogsPermission
instance ToHeader BucketLogsPermission
instance ToByteString BucketLogsPermission
instance ToText BucketLogsPermission
instance FromText BucketLogsPermission
instance Hashable BucketLogsPermission
instance ToXML Redirect
instance FromXML Redirect
instance ToXML Payer
instance FromXML Payer
instance ToQuery Payer
instance ToHeader Payer
instance ToByteString Payer
instance ToText Payer
instance FromText Payer
instance Hashable Payer
instance ToXML MFADeleteStatus
instance FromXML MFADeleteStatus
instance ToQuery MFADeleteStatus
instance ToHeader MFADeleteStatus
instance ToByteString MFADeleteStatus
instance ToText MFADeleteStatus
instance FromText MFADeleteStatus
instance Hashable MFADeleteStatus
instance ToXML TargetGrant
instance FromXML TargetGrant
instance ToXML ObjectVersion
instance FromXML ObjectVersion
instance ToXML StorageClass
instance FromXML StorageClass
instance ToQuery StorageClass
instance ToHeader StorageClass
instance ToByteString StorageClass
instance ToText StorageClass
instance FromText StorageClass
instance Hashable StorageClass
instance ToXML ErrorDocument
instance FromXML ErrorDocument
instance ToXML NotificationConfigurationDeprecated
instance ToXMLRoot NotificationConfigurationDeprecated
instance FromXML NotificationConfigurationDeprecated
instance ToXML BucketLoggingStatus
instance FromXML BucketLoggingStatus
instance ToXML Owner
instance ToXMLRoot Owner
instance FromXML Owner
instance ToXML QueueConfiguration
instance FromXML QueueConfiguration
instance ToXML TopicConfiguration
instance FromXML TopicConfiguration
instance ToXML RequestPayer
instance FromXML RequestPayer
instance ToQuery RequestPayer
instance ToHeader RequestPayer
instance ToByteString RequestPayer
instance ToText RequestPayer
instance FromText RequestPayer
instance Hashable RequestPayer
instance ToXML Rule
instance FromXML Rule
instance ToXML Grant
instance ToXMLRoot Grant
instance FromXML Grant
instance ToXML Protocol
instance FromXML Protocol
instance ToQuery Protocol
instance ToHeader Protocol
instance ToByteString Protocol
instance ToText Protocol
instance FromText Protocol
instance Hashable Protocol
instance ToXML Bucket
instance FromXML Bucket
instance ToXML ObjectIdentifier
instance FromXML ObjectIdentifier
instance ToXML Initiator
instance FromXML Initiator
instance ToXML NoncurrentVersionTransition
instance FromXML NoncurrentVersionTransition
instance ToXML WebsiteConfiguration
instance FromXML WebsiteConfiguration
instance ToXML CORSRule
instance FromXML CORSRule
instance ToXML RequestPaymentConfiguration
instance FromXML RequestPaymentConfiguration
instance ToXML EncodingType
instance FromXML EncodingType
instance ToQuery EncodingType
instance ToHeader EncodingType
instance ToByteString EncodingType
instance ToText EncodingType
instance FromText EncodingType
instance Hashable EncodingType
instance ToXML CopyPartResult
instance FromXML CopyPartResult
instance ToXML ObjectVersionStorageClass
instance FromXML ObjectVersionStorageClass
instance ToQuery ObjectVersionStorageClass
instance ToHeader ObjectVersionStorageClass
instance ToByteString ObjectVersionStorageClass
instance ToText ObjectVersionStorageClass
instance FromText ObjectVersionStorageClass
instance Hashable ObjectVersionStorageClass
instance ToXML DeletedObject
instance FromXML DeletedObject
instance ToXML BucketVersioningStatus
instance FromXML BucketVersioningStatus
instance ToQuery BucketVersioningStatus
instance ToHeader BucketVersioningStatus
instance ToByteString BucketVersioningStatus
instance ToText BucketVersioningStatus
instance FromText BucketVersioningStatus
instance Hashable BucketVersioningStatus
instance ToXML ObjectCannedACL
instance FromXML ObjectCannedACL
instance ToQuery ObjectCannedACL
instance ToHeader ObjectCannedACL
instance ToByteString ObjectCannedACL
instance ToText ObjectCannedACL
instance FromText ObjectCannedACL
instance Hashable ObjectCannedACL
instance ToXML S3ServiceError
instance FromXML S3ServiceError
instance ToXML NotificationConfiguration
instance ToXMLRoot NotificationConfiguration
instance FromXML NotificationConfiguration
instance ToXML RoutingRule
instance FromXML RoutingRule
instance ToXML RedirectAllRequestsTo
instance FromXML RedirectAllRequestsTo
instance ToXML ReplicationRule
instance FromXML ReplicationRule
instance ToXML MetadataDirective
instance FromXML MetadataDirective
instance ToQuery MetadataDirective
instance ToHeader MetadataDirective
instance ToByteString MetadataDirective
instance ToText MetadataDirective
instance FromText MetadataDirective
instance Hashable MetadataDirective
instance ToXML ObjectStorageClass
instance FromXML ObjectStorageClass
instance ToQuery ObjectStorageClass
instance ToHeader ObjectStorageClass
instance ToByteString ObjectStorageClass
instance ToText ObjectStorageClass
instance FromText ObjectStorageClass
instance Hashable ObjectStorageClass
instance ToXML Tag
instance FromXML Tag
instance ToXML VersioningConfiguration
instance FromXML VersioningConfiguration
instance ToXML Part
instance FromXML Part
instance ToXML ExpirationStatus
instance FromXML ExpirationStatus
instance ToQuery ExpirationStatus
instance ToHeader ExpirationStatus
instance ToByteString ExpirationStatus
instance ToText ExpirationStatus
instance FromText ExpirationStatus
instance Hashable ExpirationStatus
instance ToXML DeleteMarkerEntry
instance FromXML DeleteMarkerEntry
instance ToXML Transition
instance FromXML Transition
instance ToXML NoncurrentVersionExpiration
instance FromXML NoncurrentVersionExpiration
instance ToXML RequestCharged
instance FromXML RequestCharged
instance ToQuery RequestCharged
instance ToHeader RequestCharged
instance ToByteString RequestCharged
instance ToText RequestCharged
instance FromText RequestCharged
instance Hashable RequestCharged
instance ToXML Event
instance FromXML Event
instance ToQuery Event
instance ToHeader Event
instance ToByteString Event
instance ToText Event
instance FromText Event
instance Hashable Event
instance ToXML Destination
instance FromXML Destination
instance ToXML ReplicationConfiguration
instance ToXMLRoot ReplicationConfiguration
instance FromXML ReplicationConfiguration
instance ToXML GetBucketNotificationConfigurationRequest
instance ToXMLRoot GetBucketNotificationConfigurationRequest
instance FromXML GetBucketNotificationConfigurationRequest
instance AWSService S3


-- | Uploads a part in a multipart upload.
--   
--   Note: After you initiate multipart upload and upload one or more
--   parts, you must either complete or abort multipart upload in order to
--   stop getting charged for storage of the uploaded parts. Only after you
--   either complete or abort multipart upload, Amazon S3 frees up the
--   parts storage and stops charging you for the parts storage.
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/UploadPart.html</a>
module Network.AWS.S3.UploadPart
data UploadPart

-- | <a>UploadPart</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>upBody</a> <tt>::</tt> <a>RqBody</a></li>
--   <li><a>upBucket</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>upContentLength</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>upContentMD5</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>upKey</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>upPartNumber</a> <tt>::</tt> <a>Int</a></li>
--   <li><a>upRequestPayer</a> <tt>::</tt> <a>Maybe</a>
--   <a>RequestPayer</a></li>
--   <li><a>upSSECustomerAlgorithm</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>upSSECustomerKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>upSSECustomerKeyMD5</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>upUploadId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
uploadPart :: RqBody -> Text -> Text -> Int -> Text -> UploadPart
upBody :: Lens' UploadPart RqBody
upBucket :: Lens' UploadPart Text

-- | Size of the body in bytes. This parameter is useful when the size of
--   the body cannot be determined automatically.
upContentLength :: Lens' UploadPart (Maybe Int)
upContentMD5 :: Lens' UploadPart (Maybe Text)
upKey :: Lens' UploadPart Text

-- | Part number of part being uploaded.
upPartNumber :: Lens' UploadPart Int
upRequestPayer :: Lens' UploadPart (Maybe RequestPayer)

-- | Specifies the algorithm to use to when encrypting the object (e.g.,
--   AES256, aws:kms).
upSSECustomerAlgorithm :: Lens' UploadPart (Maybe Text)

-- | Specifies the customer-provided encryption key for Amazon S3 to use in
--   encrypting data. This value is used to store the object and then it is
--   discarded; Amazon does not store the encryption key. The key must be
--   appropriate for use with the algorithm specified in the
--   x-amz-server-side​-encryption​-customer-algorithm header. This must be
--   the same encryption key specified in the initiate multipart upload
--   request.
upSSECustomerKey :: Lens' UploadPart (Maybe Text)

-- | Specifies the 128-bit MD5 digest of the encryption key according to
--   RFC 1321. Amazon S3 uses this header for a message integrity check to
--   ensure the encryption key was transmitted without error.
upSSECustomerKeyMD5 :: Lens' UploadPart (Maybe Text)

-- | Upload ID identifying the multipart upload whose part is being
--   uploaded.
upUploadId :: Lens' UploadPart Text
data UploadPartResponse

-- | <a>UploadPartResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uprETag</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>uprRequestCharged</a> <tt>::</tt> <a>Maybe</a>
--   <a>RequestCharged</a></li>
--   <li><a>uprSSECustomerAlgorithm</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>uprSSECustomerKeyMD5</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>uprSSEKMSKeyId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>uprServerSideEncryption</a> <tt>::</tt> <a>Maybe</a>
--   <a>ServerSideEncryption</a></li>
--   </ul>
uploadPartResponse :: UploadPartResponse

-- | Entity tag for the uploaded object.
uprETag :: Lens' UploadPartResponse (Maybe Text)
uprRequestCharged :: Lens' UploadPartResponse (Maybe RequestCharged)

-- | If server-side encryption with a customer-provided encryption key was
--   requested, the response will include this header confirming the
--   encryption algorithm used.
uprSSECustomerAlgorithm :: Lens' UploadPartResponse (Maybe Text)

-- | If server-side encryption with a customer-provided encryption key was
--   requested, the response will include this header to provide round trip
--   message integrity verification of the customer-provided encryption
--   key.
uprSSECustomerKeyMD5 :: Lens' UploadPartResponse (Maybe Text)

-- | If present, specifies the ID of the AWS Key Management Service (KMS)
--   master encryption key that was used for the object.
uprSSEKMSKeyId :: Lens' UploadPartResponse (Maybe Text)

-- | The Server-side encryption algorithm used when storing this object in
--   S3 (e.g., AES256, aws:kms).
uprServerSideEncryption :: Lens' UploadPartResponse (Maybe ServerSideEncryption)
instance Show UploadPart
instance Eq UploadPartResponse
instance Read UploadPartResponse
instance Show UploadPartResponse
instance AWSRequest UploadPart
instance ToBody UploadPart
instance ToHeaders UploadPart
instance ToQuery UploadPart
instance ToPath UploadPart


-- | Uploads a part by copying data from an existing object as data source.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/UploadPartCopy.html</a>
module Network.AWS.S3.UploadPartCopy
data UploadPartCopy

-- | <a>UploadPartCopy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>upcBucket</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>upcCopySource</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>upcCopySourceIfMatch</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>upcCopySourceIfModifiedSince</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>upcCopySourceIfNoneMatch</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>upcCopySourceIfUnmodifiedSince</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>upcCopySourceRange</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>upcCopySourceSSECustomerAlgorithm</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>upcCopySourceSSECustomerKey</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>upcCopySourceSSECustomerKeyMD5</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>upcKey</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>upcPartNumber</a> <tt>::</tt> <a>Int</a></li>
--   <li><a>upcRequestPayer</a> <tt>::</tt> <a>Maybe</a>
--   <a>RequestPayer</a></li>
--   <li><a>upcSSECustomerAlgorithm</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>upcSSECustomerKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>upcSSECustomerKeyMD5</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>upcUploadId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
uploadPartCopy :: Text -> Text -> Text -> Int -> Text -> UploadPartCopy
upcBucket :: Lens' UploadPartCopy Text

-- | The name of the source bucket and key name of the source object,
--   separated by a slash (/). Must be URL-encoded.
upcCopySource :: Lens' UploadPartCopy Text

-- | Copies the object if its entity tag (ETag) matches the specified tag.
upcCopySourceIfMatch :: Lens' UploadPartCopy (Maybe Text)

-- | Copies the object if it has been modified since the specified time.
upcCopySourceIfModifiedSince :: Lens' UploadPartCopy (Maybe UTCTime)

-- | Copies the object if its entity tag (ETag) is different than the
--   specified ETag.
upcCopySourceIfNoneMatch :: Lens' UploadPartCopy (Maybe Text)

-- | Copies the object if it hasn't been modified since the specified time.
upcCopySourceIfUnmodifiedSince :: Lens' UploadPartCopy (Maybe UTCTime)

-- | The range of bytes to copy from the source object. The range value
--   must use the form bytes=first-last, where the first and last are the
--   zero-based byte offsets to copy. For example, bytes=0-9 indicates that
--   you want to copy the first ten bytes of the source. You can copy a
--   range only if the source object is greater than 5 GB.
upcCopySourceRange :: Lens' UploadPartCopy (Maybe Text)

-- | Specifies the algorithm to use when decrypting the source object
--   (e.g., AES256).
upcCopySourceSSECustomerAlgorithm :: Lens' UploadPartCopy (Maybe Text)

-- | Specifies the customer-provided encryption key for Amazon S3 to use to
--   decrypt the source object. The encryption key provided in this header
--   must be one that was used when the source object was created.
upcCopySourceSSECustomerKey :: Lens' UploadPartCopy (Maybe Text)

-- | Specifies the 128-bit MD5 digest of the encryption key according to
--   RFC 1321. Amazon S3 uses this header for a message integrity check to
--   ensure the encryption key was transmitted without error.
upcCopySourceSSECustomerKeyMD5 :: Lens' UploadPartCopy (Maybe Text)
upcKey :: Lens' UploadPartCopy Text

-- | Part number of part being copied.
upcPartNumber :: Lens' UploadPartCopy Int
upcRequestPayer :: Lens' UploadPartCopy (Maybe RequestPayer)

-- | Specifies the algorithm to use to when encrypting the object (e.g.,
--   AES256, aws:kms).
upcSSECustomerAlgorithm :: Lens' UploadPartCopy (Maybe Text)

-- | Specifies the customer-provided encryption key for Amazon S3 to use in
--   encrypting data. This value is used to store the object and then it is
--   discarded; Amazon does not store the encryption key. The key must be
--   appropriate for use with the algorithm specified in the
--   x-amz-server-side​-encryption​-customer-algorithm header. This must be
--   the same encryption key specified in the initiate multipart upload
--   request.
upcSSECustomerKey :: Lens' UploadPartCopy (Maybe Text)

-- | Specifies the 128-bit MD5 digest of the encryption key according to
--   RFC 1321. Amazon S3 uses this header for a message integrity check to
--   ensure the encryption key was transmitted without error.
upcSSECustomerKeyMD5 :: Lens' UploadPartCopy (Maybe Text)

-- | Upload ID identifying the multipart upload whose part is being copied.
upcUploadId :: Lens' UploadPartCopy Text
data UploadPartCopyResponse

-- | <a>UploadPartCopyResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>upcrCopyPartResult</a> <tt>::</tt> <a>Maybe</a>
--   <a>CopyPartResult</a></li>
--   <li><a>upcrCopySourceVersionId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>upcrRequestCharged</a> <tt>::</tt> <a>Maybe</a>
--   <a>RequestCharged</a></li>
--   <li><a>upcrSSECustomerAlgorithm</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>upcrSSECustomerKeyMD5</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>upcrSSEKMSKeyId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>upcrServerSideEncryption</a> <tt>::</tt> <a>Maybe</a>
--   <a>ServerSideEncryption</a></li>
--   </ul>
uploadPartCopyResponse :: UploadPartCopyResponse
upcrCopyPartResult :: Lens' UploadPartCopyResponse (Maybe CopyPartResult)

-- | The version of the source object that was copied, if you have enabled
--   versioning on the source bucket.
upcrCopySourceVersionId :: Lens' UploadPartCopyResponse (Maybe Text)
upcrRequestCharged :: Lens' UploadPartCopyResponse (Maybe RequestCharged)

-- | If server-side encryption with a customer-provided encryption key was
--   requested, the response will include this header confirming the
--   encryption algorithm used.
upcrSSECustomerAlgorithm :: Lens' UploadPartCopyResponse (Maybe Text)

-- | If server-side encryption with a customer-provided encryption key was
--   requested, the response will include this header to provide round trip
--   message integrity verification of the customer-provided encryption
--   key.
upcrSSECustomerKeyMD5 :: Lens' UploadPartCopyResponse (Maybe Text)

-- | If present, specifies the ID of the AWS Key Management Service (KMS)
--   master encryption key that was used for the object.
upcrSSEKMSKeyId :: Lens' UploadPartCopyResponse (Maybe Text)

-- | The Server-side encryption algorithm used when storing this object in
--   S3 (e.g., AES256, aws:kms).
upcrServerSideEncryption :: Lens' UploadPartCopyResponse (Maybe ServerSideEncryption)
instance Eq UploadPartCopy
instance Read UploadPartCopy
instance Show UploadPartCopy
instance Eq UploadPartCopyResponse
instance Read UploadPartCopyResponse
instance Show UploadPartCopyResponse
instance AWSRequest UploadPartCopy
instance ToXML UploadPartCopy
instance ToXMLRoot UploadPartCopy
instance ToHeaders UploadPartCopy
instance ToQuery UploadPartCopy
instance ToPath UploadPartCopy


-- | Restores an archived copy of an object back into Amazon S3
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/RestoreObject.html</a>
module Network.AWS.S3.RestoreObject
data RestoreObject

-- | <a>RestoreObject</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>roBucket</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>roKey</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>roRequestPayer</a> <tt>::</tt> <a>Maybe</a>
--   <a>RequestPayer</a></li>
--   <li><a>roRestoreRequest</a> <tt>::</tt> <a>Maybe</a>
--   <a>RestoreRequest</a></li>
--   <li><a>roVersionId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
restoreObject :: Text -> Text -> RestoreObject
roBucket :: Lens' RestoreObject Text
roKey :: Lens' RestoreObject Text
roRequestPayer :: Lens' RestoreObject (Maybe RequestPayer)
roRestoreRequest :: Lens' RestoreObject (Maybe RestoreRequest)
roVersionId :: Lens' RestoreObject (Maybe Text)
data RestoreObjectResponse

-- | <a>RestoreObjectResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rorRequestCharged</a> <tt>::</tt> <a>Maybe</a>
--   <a>RequestCharged</a></li>
--   </ul>
restoreObjectResponse :: RestoreObjectResponse
rorRequestCharged :: Lens' RestoreObjectResponse (Maybe RequestCharged)
instance Eq RestoreObject
instance Read RestoreObject
instance Show RestoreObject
instance Eq RestoreObjectResponse
instance Read RestoreObjectResponse
instance Show RestoreObjectResponse
instance AWSRequest RestoreObject
instance ToXML RestoreObject
instance ToXMLRoot RestoreObject
instance ToHeaders RestoreObject
instance ToQuery RestoreObject
instance ToPath RestoreObject


-- | uses the acl subresource to set the access control list (ACL)
--   permissions for an object that already exists in a bucket
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/PutObjectAcl.html</a>
module Network.AWS.S3.PutObjectAcl
data PutObjectAcl

-- | <a>PutObjectAcl</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>poaACL</a> <tt>::</tt> <a>Maybe</a> <a>ObjectCannedACL</a></li>
--   <li><a>poaAccessControlPolicy</a> <tt>::</tt> <a>Maybe</a>
--   <a>AccessControlPolicy</a></li>
--   <li><a>poaBucket</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>poaContentMD5</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>poaGrantFullControl</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>poaGrantRead</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>poaGrantReadACP</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>poaGrantWrite</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>poaGrantWriteACP</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>poaKey</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>poaRequestPayer</a> <tt>::</tt> <a>Maybe</a>
--   <a>RequestPayer</a></li>
--   </ul>
putObjectAcl :: Text -> Text -> PutObjectAcl

-- | The canned ACL to apply to the object.
poaACL :: Lens' PutObjectAcl (Maybe ObjectCannedACL)
poaAccessControlPolicy :: Lens' PutObjectAcl (Maybe AccessControlPolicy)
poaBucket :: Lens' PutObjectAcl Text
poaContentMD5 :: Lens' PutObjectAcl (Maybe Text)

-- | Allows grantee the read, write, read ACP, and write ACP permissions on
--   the bucket.
poaGrantFullControl :: Lens' PutObjectAcl (Maybe Text)

-- | Allows grantee to list the objects in the bucket.
poaGrantRead :: Lens' PutObjectAcl (Maybe Text)

-- | Allows grantee to read the bucket ACL.
poaGrantReadACP :: Lens' PutObjectAcl (Maybe Text)

-- | Allows grantee to create, overwrite, and delete any object in the
--   bucket.
poaGrantWrite :: Lens' PutObjectAcl (Maybe Text)

-- | Allows grantee to write the ACL for the applicable bucket.
poaGrantWriteACP :: Lens' PutObjectAcl (Maybe Text)
poaKey :: Lens' PutObjectAcl Text
poaRequestPayer :: Lens' PutObjectAcl (Maybe RequestPayer)
data PutObjectAclResponse

-- | <a>PutObjectAclResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>poarRequestCharged</a> <tt>::</tt> <a>Maybe</a>
--   <a>RequestCharged</a></li>
--   </ul>
putObjectAclResponse :: PutObjectAclResponse
poarRequestCharged :: Lens' PutObjectAclResponse (Maybe RequestCharged)
instance Eq PutObjectAcl
instance Read PutObjectAcl
instance Show PutObjectAcl
instance Eq PutObjectAclResponse
instance Read PutObjectAclResponse
instance Show PutObjectAclResponse
instance AWSRequest PutObjectAcl
instance ToXML PutObjectAcl
instance ToXMLRoot PutObjectAcl
instance ToHeaders PutObjectAcl
instance ToQuery PutObjectAcl
instance ToPath PutObjectAcl


-- | Adds an object to a bucket.
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/PutObject.html</a>
module Network.AWS.S3.PutObject
data PutObject

-- | <a>PutObject</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>poACL</a> <tt>::</tt> <a>Maybe</a> <a>ObjectCannedACL</a></li>
--   <li><a>poBody</a> <tt>::</tt> <a>RqBody</a></li>
--   <li><a>poBucket</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>poCacheControl</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>poContentDisposition</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>poContentEncoding</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>poContentLanguage</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>poContentLength</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>poContentMD5</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>poContentType</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>poExpires</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>poGrantFullControl</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>poGrantRead</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>poGrantReadACP</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>poGrantWriteACP</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>poKey</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>poMetadata</a> <tt>::</tt> <a>HashMap</a> (<a>CI</a>
--   <a>Text</a>) <a>Text</a></li>
--   <li><a>poRequestPayer</a> <tt>::</tt> <a>Maybe</a>
--   <a>RequestPayer</a></li>
--   <li><a>poSSECustomerAlgorithm</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>poSSECustomerKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>poSSECustomerKeyMD5</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>poSSEKMSKeyId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>poServerSideEncryption</a> <tt>::</tt> <a>Maybe</a>
--   <a>ServerSideEncryption</a></li>
--   <li><a>poStorageClass</a> <tt>::</tt> <a>Maybe</a>
--   <a>StorageClass</a></li>
--   <li><a>poWebsiteRedirectLocation</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
putObject :: RqBody -> Text -> Text -> PutObject

-- | The canned ACL to apply to the object.
poACL :: Lens' PutObject (Maybe ObjectCannedACL)

-- | Object data.
poBody :: Lens' PutObject RqBody
poBucket :: Lens' PutObject Text

-- | Specifies caching behavior along the request/reply chain.
poCacheControl :: Lens' PutObject (Maybe Text)

-- | Specifies presentational information for the object.
poContentDisposition :: Lens' PutObject (Maybe Text)

-- | Specifies what content encodings have been applied to the object and
--   thus what decoding mechanisms must be applied to obtain the media-type
--   referenced by the Content-Type header field.
poContentEncoding :: Lens' PutObject (Maybe Text)

-- | The language the content is in.
poContentLanguage :: Lens' PutObject (Maybe Text)

-- | Size of the body in bytes. This parameter is useful when the size of
--   the body cannot be determined automatically.
poContentLength :: Lens' PutObject (Maybe Int)
poContentMD5 :: Lens' PutObject (Maybe Text)

-- | A standard MIME type describing the format of the object data.
poContentType :: Lens' PutObject (Maybe Text)

-- | The date and time at which the object is no longer cacheable.
poExpires :: Lens' PutObject (Maybe UTCTime)

-- | Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the
--   object.
poGrantFullControl :: Lens' PutObject (Maybe Text)

-- | Allows grantee to read the object data and its metadata.
poGrantRead :: Lens' PutObject (Maybe Text)

-- | Allows grantee to read the object ACL.
poGrantReadACP :: Lens' PutObject (Maybe Text)

-- | Allows grantee to write the ACL for the applicable object.
poGrantWriteACP :: Lens' PutObject (Maybe Text)
poKey :: Lens' PutObject Text

-- | A map of metadata to store with the object in S3.
poMetadata :: Lens' PutObject (HashMap (CI Text) Text)
poRequestPayer :: Lens' PutObject (Maybe RequestPayer)

-- | Specifies the algorithm to use to when encrypting the object (e.g.,
--   AES256, aws:kms).
poSSECustomerAlgorithm :: Lens' PutObject (Maybe Text)

-- | Specifies the customer-provided encryption key for Amazon S3 to use in
--   encrypting data. This value is used to store the object and then it is
--   discarded; Amazon does not store the encryption key. The key must be
--   appropriate for use with the algorithm specified in the
--   x-amz-server-side​-encryption​-customer-algorithm header.
poSSECustomerKey :: Lens' PutObject (Maybe Text)

-- | Specifies the 128-bit MD5 digest of the encryption key according to
--   RFC 1321. Amazon S3 uses this header for a message integrity check to
--   ensure the encryption key was transmitted without error.
poSSECustomerKeyMD5 :: Lens' PutObject (Maybe Text)

-- | Specifies the AWS KMS key ID to use for object encryption. All GET and
--   PUT requests for an object protected by AWS KMS will fail if not made
--   via SSL or using SigV4. Documentation on configuring any of the
--   officially supported AWS SDKs and CLI can be found at
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingAWSSDK.html#specify-signature-version</a>
poSSEKMSKeyId :: Lens' PutObject (Maybe Text)

-- | The Server-side encryption algorithm used when storing this object in
--   S3 (e.g., AES256, aws:kms).
poServerSideEncryption :: Lens' PutObject (Maybe ServerSideEncryption)

-- | The type of storage to use for the object. Defaults to
--   <tt>STANDARD</tt>.
poStorageClass :: Lens' PutObject (Maybe StorageClass)

-- | If the bucket is configured as a website, redirects requests for this
--   object to another object in the same bucket or to an external URL.
--   Amazon S3 stores the value of this header in the object metadata.
poWebsiteRedirectLocation :: Lens' PutObject (Maybe Text)
data PutObjectResponse

-- | <a>PutObjectResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>porETag</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>porExpiration</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>porRequestCharged</a> <tt>::</tt> <a>Maybe</a>
--   <a>RequestCharged</a></li>
--   <li><a>porSSECustomerAlgorithm</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>porSSECustomerKeyMD5</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>porSSEKMSKeyId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>porServerSideEncryption</a> <tt>::</tt> <a>Maybe</a>
--   <a>ServerSideEncryption</a></li>
--   <li><a>porVersionId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
putObjectResponse :: PutObjectResponse

-- | Entity tag for the uploaded object.
porETag :: Lens' PutObjectResponse (Maybe Text)

-- | If the object expiration is configured, this will contain the
--   expiration date (expiry-date) and rule ID (rule-id). The value of
--   rule-id is URL encoded.
porExpiration :: Lens' PutObjectResponse (Maybe Text)
porRequestCharged :: Lens' PutObjectResponse (Maybe RequestCharged)

-- | If server-side encryption with a customer-provided encryption key was
--   requested, the response will include this header confirming the
--   encryption algorithm used.
porSSECustomerAlgorithm :: Lens' PutObjectResponse (Maybe Text)

-- | If server-side encryption with a customer-provided encryption key was
--   requested, the response will include this header to provide round trip
--   message integrity verification of the customer-provided encryption
--   key.
porSSECustomerKeyMD5 :: Lens' PutObjectResponse (Maybe Text)

-- | If present, specifies the ID of the AWS Key Management Service (KMS)
--   master encryption key that was used for the object.
porSSEKMSKeyId :: Lens' PutObjectResponse (Maybe Text)

-- | The Server-side encryption algorithm used when storing this object in
--   S3 (e.g., AES256, aws:kms).
porServerSideEncryption :: Lens' PutObjectResponse (Maybe ServerSideEncryption)

-- | Version of the object.
porVersionId :: Lens' PutObjectResponse (Maybe Text)
instance Show PutObject
instance Eq PutObjectResponse
instance Read PutObjectResponse
instance Show PutObjectResponse
instance AWSRequest PutObject
instance ToBody PutObject
instance ToHeaders PutObject
instance ToQuery PutObject
instance ToPath PutObject


-- | Set the website configuration for a bucket.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/PutBucketWebsite.html</a>
module Network.AWS.S3.PutBucketWebsite
data PutBucketWebsite

-- | <a>PutBucketWebsite</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pbwBucket</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>pbwContentMD5</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pbwWebsiteConfiguration</a> <tt>::</tt>
--   <a>WebsiteConfiguration</a></li>
--   </ul>
putBucketWebsite :: Text -> WebsiteConfiguration -> PutBucketWebsite
pbwBucket :: Lens' PutBucketWebsite Text
pbwContentMD5 :: Lens' PutBucketWebsite (Maybe Text)
pbwWebsiteConfiguration :: Lens' PutBucketWebsite WebsiteConfiguration
data PutBucketWebsiteResponse

-- | <a>PutBucketWebsiteResponse</a> constructor.
putBucketWebsiteResponse :: PutBucketWebsiteResponse
instance Eq PutBucketWebsite
instance Read PutBucketWebsite
instance Show PutBucketWebsite
instance Eq PutBucketWebsiteResponse
instance Ord PutBucketWebsiteResponse
instance Read PutBucketWebsiteResponse
instance Show PutBucketWebsiteResponse
instance Generic PutBucketWebsiteResponse
instance Datatype D1PutBucketWebsiteResponse
instance Constructor C1_0PutBucketWebsiteResponse
instance AWSRequest PutBucketWebsite
instance ToXML PutBucketWebsite
instance ToXMLRoot PutBucketWebsite
instance ToHeaders PutBucketWebsite
instance ToQuery PutBucketWebsite
instance ToPath PutBucketWebsite


-- | Sets the versioning state of an existing bucket. To set the versioning
--   state, you must be the bucket owner.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/PutBucketVersioning.html</a>
module Network.AWS.S3.PutBucketVersioning
data PutBucketVersioning

-- | <a>PutBucketVersioning</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pbvBucket</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>pbvContentMD5</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pbvMFA</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pbvVersioningConfiguration</a> <tt>::</tt>
--   <a>VersioningConfiguration</a></li>
--   </ul>
putBucketVersioning :: Text -> VersioningConfiguration -> PutBucketVersioning
pbvBucket :: Lens' PutBucketVersioning Text
pbvContentMD5 :: Lens' PutBucketVersioning (Maybe Text)

-- | The concatenation of the authentication device's serial number, a
--   space, and the value that is displayed on your authentication device.
pbvMFA :: Lens' PutBucketVersioning (Maybe Text)
pbvVersioningConfiguration :: Lens' PutBucketVersioning VersioningConfiguration
data PutBucketVersioningResponse

-- | <a>PutBucketVersioningResponse</a> constructor.
putBucketVersioningResponse :: PutBucketVersioningResponse
instance Eq PutBucketVersioning
instance Read PutBucketVersioning
instance Show PutBucketVersioning
instance Eq PutBucketVersioningResponse
instance Ord PutBucketVersioningResponse
instance Read PutBucketVersioningResponse
instance Show PutBucketVersioningResponse
instance Generic PutBucketVersioningResponse
instance Datatype D1PutBucketVersioningResponse
instance Constructor C1_0PutBucketVersioningResponse
instance AWSRequest PutBucketVersioning
instance ToXML PutBucketVersioning
instance ToXMLRoot PutBucketVersioning
instance ToHeaders PutBucketVersioning
instance ToQuery PutBucketVersioning
instance ToPath PutBucketVersioning


-- | Sets the tags for a bucket.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/PutBucketTagging.html</a>
module Network.AWS.S3.PutBucketTagging
data PutBucketTagging

-- | <a>PutBucketTagging</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pbtBucket</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>pbtContentMD5</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pbtTagging</a> <tt>::</tt> <a>Tagging</a></li>
--   </ul>
putBucketTagging :: Text -> Tagging -> PutBucketTagging
pbtBucket :: Lens' PutBucketTagging Text
pbtContentMD5 :: Lens' PutBucketTagging (Maybe Text)
pbtTagging :: Lens' PutBucketTagging Tagging
data PutBucketTaggingResponse

-- | <a>PutBucketTaggingResponse</a> constructor.
putBucketTaggingResponse :: PutBucketTaggingResponse
instance Eq PutBucketTagging
instance Read PutBucketTagging
instance Show PutBucketTagging
instance Eq PutBucketTaggingResponse
instance Ord PutBucketTaggingResponse
instance Read PutBucketTaggingResponse
instance Show PutBucketTaggingResponse
instance Generic PutBucketTaggingResponse
instance Datatype D1PutBucketTaggingResponse
instance Constructor C1_0PutBucketTaggingResponse
instance AWSRequest PutBucketTagging
instance ToXML PutBucketTagging
instance ToXMLRoot PutBucketTagging
instance ToHeaders PutBucketTagging
instance ToQuery PutBucketTagging
instance ToPath PutBucketTagging


-- | Sets the request payment configuration for a bucket. By default, the
--   bucket owner pays for downloads from the bucket. This configuration
--   parameter enables the bucket owner (only) to specify that the person
--   requesting the download will be charged for the download.
--   Documentation on requester pays buckets can be found at
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html</a>
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/PutBucketRequestPayment.html</a>
module Network.AWS.S3.PutBucketRequestPayment
data PutBucketRequestPayment

-- | <a>PutBucketRequestPayment</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pbrpBucket</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>pbrpContentMD5</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pbrpRequestPaymentConfiguration</a> <tt>::</tt>
--   <a>RequestPaymentConfiguration</a></li>
--   </ul>
putBucketRequestPayment :: Text -> RequestPaymentConfiguration -> PutBucketRequestPayment
pbrpBucket :: Lens' PutBucketRequestPayment Text
pbrpContentMD5 :: Lens' PutBucketRequestPayment (Maybe Text)
pbrpRequestPaymentConfiguration :: Lens' PutBucketRequestPayment RequestPaymentConfiguration
data PutBucketRequestPaymentResponse

-- | <a>PutBucketRequestPaymentResponse</a> constructor.
putBucketRequestPaymentResponse :: PutBucketRequestPaymentResponse
instance Eq PutBucketRequestPayment
instance Read PutBucketRequestPayment
instance Show PutBucketRequestPayment
instance Eq PutBucketRequestPaymentResponse
instance Ord PutBucketRequestPaymentResponse
instance Read PutBucketRequestPaymentResponse
instance Show PutBucketRequestPaymentResponse
instance Generic PutBucketRequestPaymentResponse
instance Datatype D1PutBucketRequestPaymentResponse
instance Constructor C1_0PutBucketRequestPaymentResponse
instance AWSRequest PutBucketRequestPayment
instance ToXML PutBucketRequestPayment
instance ToXMLRoot PutBucketRequestPayment
instance ToHeaders PutBucketRequestPayment
instance ToQuery PutBucketRequestPayment
instance ToPath PutBucketRequestPayment


-- | Creates a new replication configuration (or replaces an existing one,
--   if present).
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/PutBucketReplication.html</a>
module Network.AWS.S3.PutBucketReplication
data PutBucketReplication

-- | <a>PutBucketReplication</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pbrBucket</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>pbrContentMD5</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pbrReplicationConfiguration</a> <tt>::</tt>
--   <a>ReplicationConfiguration</a></li>
--   </ul>
putBucketReplication :: Text -> ReplicationConfiguration -> PutBucketReplication
pbrBucket :: Lens' PutBucketReplication Text
pbrContentMD5 :: Lens' PutBucketReplication (Maybe Text)
pbrReplicationConfiguration :: Lens' PutBucketReplication ReplicationConfiguration
data PutBucketReplicationResponse

-- | <a>PutBucketReplicationResponse</a> constructor.
putBucketReplicationResponse :: PutBucketReplicationResponse
instance Eq PutBucketReplication
instance Read PutBucketReplication
instance Show PutBucketReplication
instance Eq PutBucketReplicationResponse
instance Ord PutBucketReplicationResponse
instance Read PutBucketReplicationResponse
instance Show PutBucketReplicationResponse
instance Generic PutBucketReplicationResponse
instance Datatype D1PutBucketReplicationResponse
instance Constructor C1_0PutBucketReplicationResponse
instance AWSRequest PutBucketReplication
instance ToXML PutBucketReplication
instance ToXMLRoot PutBucketReplication
instance ToHeaders PutBucketReplication
instance ToQuery PutBucketReplication
instance ToPath PutBucketReplication


-- | Replaces a policy on a bucket. If the bucket already has a policy, the
--   one in this request completely replaces it.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/PutBucketPolicy.html</a>
module Network.AWS.S3.PutBucketPolicy
data PutBucketPolicy

-- | <a>PutBucketPolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pbpBucket</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>pbpContentMD5</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pbpPolicy</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
putBucketPolicy :: Text -> Text -> PutBucketPolicy
pbpBucket :: Lens' PutBucketPolicy Text
pbpContentMD5 :: Lens' PutBucketPolicy (Maybe Text)

-- | The bucket policy as a JSON document.
pbpPolicy :: Lens' PutBucketPolicy Text
data PutBucketPolicyResponse

-- | <a>PutBucketPolicyResponse</a> constructor.
putBucketPolicyResponse :: PutBucketPolicyResponse
instance Eq PutBucketPolicy
instance Ord PutBucketPolicy
instance Read PutBucketPolicy
instance Show PutBucketPolicy
instance Eq PutBucketPolicyResponse
instance Ord PutBucketPolicyResponse
instance Read PutBucketPolicyResponse
instance Show PutBucketPolicyResponse
instance Generic PutBucketPolicyResponse
instance Datatype D1PutBucketPolicyResponse
instance Constructor C1_0PutBucketPolicyResponse
instance AWSRequest PutBucketPolicy
instance ToXML PutBucketPolicy
instance ToXMLRoot PutBucketPolicy
instance ToHeaders PutBucketPolicy
instance ToQuery PutBucketPolicy
instance ToPath PutBucketPolicy


-- | Enables notifications of specified events for a bucket.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/PutBucketNotificationConfiguration.html</a>
module Network.AWS.S3.PutBucketNotificationConfiguration
data PutBucketNotificationConfiguration

-- | <a>PutBucketNotificationConfiguration</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pbncBucket</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>pbncNotificationConfiguration</a> <tt>::</tt>
--   <a>NotificationConfiguration</a></li>
--   </ul>
putBucketNotificationConfiguration :: Text -> NotificationConfiguration -> PutBucketNotificationConfiguration
pbncBucket :: Lens' PutBucketNotificationConfiguration Text
pbncNotificationConfiguration :: Lens' PutBucketNotificationConfiguration NotificationConfiguration
data PutBucketNotificationConfigurationResponse

-- | <a>PutBucketNotificationConfigurationResponse</a> constructor.
putBucketNotificationConfigurationResponse :: PutBucketNotificationConfigurationResponse
instance Eq PutBucketNotificationConfiguration
instance Read PutBucketNotificationConfiguration
instance Show PutBucketNotificationConfiguration
instance Eq PutBucketNotificationConfigurationResponse
instance Ord PutBucketNotificationConfigurationResponse
instance Read PutBucketNotificationConfigurationResponse
instance Show PutBucketNotificationConfigurationResponse
instance Generic PutBucketNotificationConfigurationResponse
instance Datatype D1PutBucketNotificationConfigurationResponse
instance Constructor C1_0PutBucketNotificationConfigurationResponse
instance AWSRequest PutBucketNotificationConfiguration
instance ToXML PutBucketNotificationConfiguration
instance ToXMLRoot PutBucketNotificationConfiguration
instance ToHeaders PutBucketNotificationConfiguration
instance ToQuery PutBucketNotificationConfiguration
instance ToPath PutBucketNotificationConfiguration


-- | Deprecated, see the PutBucketNotificationConfiguraiton operation.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/PutBucketNotification.html</a>
module Network.AWS.S3.PutBucketNotification
data PutBucketNotification

-- | <a>PutBucketNotification</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pbnBucket</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>pbnContentMD5</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pbnNotificationConfiguration</a> <tt>::</tt>
--   <a>NotificationConfigurationDeprecated</a></li>
--   </ul>
putBucketNotification :: Text -> NotificationConfigurationDeprecated -> PutBucketNotification
pbnBucket :: Lens' PutBucketNotification Text
pbnContentMD5 :: Lens' PutBucketNotification (Maybe Text)
pbnNotificationConfiguration :: Lens' PutBucketNotification NotificationConfigurationDeprecated
data PutBucketNotificationResponse

-- | <a>PutBucketNotificationResponse</a> constructor.
putBucketNotificationResponse :: PutBucketNotificationResponse
instance Eq PutBucketNotification
instance Read PutBucketNotification
instance Show PutBucketNotification
instance Eq PutBucketNotificationResponse
instance Ord PutBucketNotificationResponse
instance Read PutBucketNotificationResponse
instance Show PutBucketNotificationResponse
instance Generic PutBucketNotificationResponse
instance Datatype D1PutBucketNotificationResponse
instance Constructor C1_0PutBucketNotificationResponse
instance AWSRequest PutBucketNotification
instance ToXML PutBucketNotification
instance ToXMLRoot PutBucketNotification
instance ToHeaders PutBucketNotification
instance ToQuery PutBucketNotification
instance ToPath PutBucketNotification


-- | Set the logging parameters for a bucket and to specify permissions for
--   who can view and modify the logging parameters. To set the logging
--   status of a bucket, you must be the bucket owner.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/PutBucketLogging.html</a>
module Network.AWS.S3.PutBucketLogging
data PutBucketLogging

-- | <a>PutBucketLogging</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pblBucket</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>pblBucketLoggingStatus</a> <tt>::</tt>
--   <a>BucketLoggingStatus</a></li>
--   <li><a>pblContentMD5</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
putBucketLogging :: Text -> BucketLoggingStatus -> PutBucketLogging
pblBucket :: Lens' PutBucketLogging Text
pblBucketLoggingStatus :: Lens' PutBucketLogging BucketLoggingStatus
pblContentMD5 :: Lens' PutBucketLogging (Maybe Text)
data PutBucketLoggingResponse

-- | <a>PutBucketLoggingResponse</a> constructor.
putBucketLoggingResponse :: PutBucketLoggingResponse
instance Eq PutBucketLogging
instance Read PutBucketLogging
instance Show PutBucketLogging
instance Eq PutBucketLoggingResponse
instance Ord PutBucketLoggingResponse
instance Read PutBucketLoggingResponse
instance Show PutBucketLoggingResponse
instance Generic PutBucketLoggingResponse
instance Datatype D1PutBucketLoggingResponse
instance Constructor C1_0PutBucketLoggingResponse
instance AWSRequest PutBucketLogging
instance ToXML PutBucketLogging
instance ToXMLRoot PutBucketLogging
instance ToHeaders PutBucketLogging
instance ToQuery PutBucketLogging
instance ToPath PutBucketLogging


-- | Sets lifecycle configuration for your bucket. If a lifecycle
--   configuration exists, it replaces it.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/PutBucketLifecycle.html</a>
module Network.AWS.S3.PutBucketLifecycle
data PutBucketLifecycle

-- | <a>PutBucketLifecycle</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pbl1Bucket</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>pbl1ContentMD5</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pbl1LifecycleConfiguration</a> <tt>::</tt> <a>Maybe</a>
--   <a>LifecycleConfiguration</a></li>
--   </ul>
putBucketLifecycle :: Text -> PutBucketLifecycle
pbl1Bucket :: Lens' PutBucketLifecycle Text
pbl1ContentMD5 :: Lens' PutBucketLifecycle (Maybe Text)
pbl1LifecycleConfiguration :: Lens' PutBucketLifecycle (Maybe LifecycleConfiguration)
data PutBucketLifecycleResponse

-- | <a>PutBucketLifecycleResponse</a> constructor.
putBucketLifecycleResponse :: PutBucketLifecycleResponse
instance Eq PutBucketLifecycle
instance Read PutBucketLifecycle
instance Show PutBucketLifecycle
instance Eq PutBucketLifecycleResponse
instance Ord PutBucketLifecycleResponse
instance Read PutBucketLifecycleResponse
instance Show PutBucketLifecycleResponse
instance Generic PutBucketLifecycleResponse
instance Datatype D1PutBucketLifecycleResponse
instance Constructor C1_0PutBucketLifecycleResponse
instance AWSRequest PutBucketLifecycle
instance ToXML PutBucketLifecycle
instance ToXMLRoot PutBucketLifecycle
instance ToHeaders PutBucketLifecycle
instance ToQuery PutBucketLifecycle
instance ToPath PutBucketLifecycle


-- | Sets the cors configuration for a bucket.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/PutBucketCors.html</a>
module Network.AWS.S3.PutBucketCors
data PutBucketCors

-- | <a>PutBucketCors</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pbcBucket</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>pbcCORSConfiguration</a> <tt>::</tt> <a>Maybe</a>
--   <a>CORSConfiguration</a></li>
--   <li><a>pbcContentMD5</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
putBucketCors :: Text -> PutBucketCors
pbcBucket :: Lens' PutBucketCors Text
pbcCORSConfiguration :: Lens' PutBucketCors (Maybe CORSConfiguration)
pbcContentMD5 :: Lens' PutBucketCors (Maybe Text)
data PutBucketCorsResponse

-- | <a>PutBucketCorsResponse</a> constructor.
putBucketCorsResponse :: PutBucketCorsResponse
instance Eq PutBucketCors
instance Read PutBucketCors
instance Show PutBucketCors
instance Eq PutBucketCorsResponse
instance Ord PutBucketCorsResponse
instance Read PutBucketCorsResponse
instance Show PutBucketCorsResponse
instance Generic PutBucketCorsResponse
instance Datatype D1PutBucketCorsResponse
instance Constructor C1_0PutBucketCorsResponse
instance AWSRequest PutBucketCors
instance ToXML PutBucketCors
instance ToXMLRoot PutBucketCors
instance ToHeaders PutBucketCors
instance ToQuery PutBucketCors
instance ToPath PutBucketCors


-- | Sets the permissions on a bucket using access control lists (ACL).
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/PutBucketAcl.html</a>
module Network.AWS.S3.PutBucketAcl
data PutBucketAcl

-- | <a>PutBucketAcl</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pbaACL</a> <tt>::</tt> <a>Maybe</a> <a>BucketCannedACL</a></li>
--   <li><a>pbaAccessControlPolicy</a> <tt>::</tt> <a>Maybe</a>
--   <a>AccessControlPolicy</a></li>
--   <li><a>pbaBucket</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>pbaContentMD5</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pbaGrantFullControl</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>pbaGrantRead</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pbaGrantReadACP</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pbaGrantWrite</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pbaGrantWriteACP</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
putBucketAcl :: Text -> PutBucketAcl

-- | The canned ACL to apply to the bucket.
pbaACL :: Lens' PutBucketAcl (Maybe BucketCannedACL)
pbaAccessControlPolicy :: Lens' PutBucketAcl (Maybe AccessControlPolicy)
pbaBucket :: Lens' PutBucketAcl Text
pbaContentMD5 :: Lens' PutBucketAcl (Maybe Text)

-- | Allows grantee the read, write, read ACP, and write ACP permissions on
--   the bucket.
pbaGrantFullControl :: Lens' PutBucketAcl (Maybe Text)

-- | Allows grantee to list the objects in the bucket.
pbaGrantRead :: Lens' PutBucketAcl (Maybe Text)

-- | Allows grantee to read the bucket ACL.
pbaGrantReadACP :: Lens' PutBucketAcl (Maybe Text)

-- | Allows grantee to create, overwrite, and delete any object in the
--   bucket.
pbaGrantWrite :: Lens' PutBucketAcl (Maybe Text)

-- | Allows grantee to write the ACL for the applicable bucket.
pbaGrantWriteACP :: Lens' PutBucketAcl (Maybe Text)
data PutBucketAclResponse

-- | <a>PutBucketAclResponse</a> constructor.
putBucketAclResponse :: PutBucketAclResponse
instance Eq PutBucketAcl
instance Read PutBucketAcl
instance Show PutBucketAcl
instance Eq PutBucketAclResponse
instance Ord PutBucketAclResponse
instance Read PutBucketAclResponse
instance Show PutBucketAclResponse
instance Generic PutBucketAclResponse
instance Datatype D1PutBucketAclResponse
instance Constructor C1_0PutBucketAclResponse
instance AWSRequest PutBucketAcl
instance ToXML PutBucketAcl
instance ToXMLRoot PutBucketAcl
instance ToHeaders PutBucketAcl
instance ToQuery PutBucketAcl
instance ToPath PutBucketAcl


-- | Lists the parts that have been uploaded for a specific multipart
--   upload.
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/ListParts.html</a>
module Network.AWS.S3.ListParts
data ListParts

-- | <a>ListParts</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lpBucket</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>lpKey</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>lpMaxParts</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>lpPartNumberMarker</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>lpRequestPayer</a> <tt>::</tt> <a>Maybe</a>
--   <a>RequestPayer</a></li>
--   <li><a>lpUploadId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
listParts :: Text -> Text -> Text -> ListParts
lpBucket :: Lens' ListParts Text
lpKey :: Lens' ListParts Text

-- | Sets the maximum number of parts to return.
lpMaxParts :: Lens' ListParts (Maybe Int)

-- | Specifies the part after which listing should begin. Only parts with
--   higher part numbers will be listed.
lpPartNumberMarker :: Lens' ListParts (Maybe Int)
lpRequestPayer :: Lens' ListParts (Maybe RequestPayer)

-- | Upload ID identifying the multipart upload whose parts are being
--   listed.
lpUploadId :: Lens' ListParts Text
data ListPartsResponse

-- | <a>ListPartsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lprBucket</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lprInitiator</a> <tt>::</tt> <a>Maybe</a> <a>Initiator</a></li>
--   <li><a>lprIsTruncated</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>lprKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lprMaxParts</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>lprNextPartNumberMarker</a> <tt>::</tt> <a>Maybe</a>
--   <a>Int</a></li>
--   <li><a>lprOwner</a> <tt>::</tt> <a>Maybe</a> <a>Owner</a></li>
--   <li><a>lprPartNumberMarker</a> <tt>::</tt> <a>Maybe</a>
--   <a>Int</a></li>
--   <li><a>lprParts</a> <tt>::</tt> [<a>Part</a>]</li>
--   <li><a>lprRequestCharged</a> <tt>::</tt> <a>Maybe</a>
--   <a>RequestCharged</a></li>
--   <li><a>lprStorageClass</a> <tt>::</tt> <a>Maybe</a>
--   <a>StorageClass</a></li>
--   <li><a>lprUploadId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listPartsResponse :: ListPartsResponse

-- | Name of the bucket to which the multipart upload was initiated.
lprBucket :: Lens' ListPartsResponse (Maybe Text)

-- | Identifies who initiated the multipart upload.
lprInitiator :: Lens' ListPartsResponse (Maybe Initiator)

-- | Indicates whether the returned list of parts is truncated.
lprIsTruncated :: Lens' ListPartsResponse (Maybe Bool)

-- | Object key for which the multipart upload was initiated.
lprKey :: Lens' ListPartsResponse (Maybe Text)

-- | Maximum number of parts that were allowed in the response.
lprMaxParts :: Lens' ListPartsResponse (Maybe Int)

-- | When a list is truncated, this element specifies the last part in the
--   list, as well as the value to use for the part-number-marker request
--   parameter in a subsequent request.
lprNextPartNumberMarker :: Lens' ListPartsResponse (Maybe Int)
lprOwner :: Lens' ListPartsResponse (Maybe Owner)

-- | Part number after which listing begins.
lprPartNumberMarker :: Lens' ListPartsResponse (Maybe Int)
lprParts :: Lens' ListPartsResponse [Part]
lprRequestCharged :: Lens' ListPartsResponse (Maybe RequestCharged)

-- | The class of storage used to store the object.
lprStorageClass :: Lens' ListPartsResponse (Maybe StorageClass)

-- | Upload ID identifying the multipart upload whose parts are being
--   listed.
lprUploadId :: Lens' ListPartsResponse (Maybe Text)
instance Eq ListParts
instance Read ListParts
instance Show ListParts
instance Eq ListPartsResponse
instance Read ListPartsResponse
instance Show ListPartsResponse
instance AWSPager ListParts
instance AWSRequest ListParts
instance ToXML ListParts
instance ToXMLRoot ListParts
instance ToHeaders ListParts
instance ToQuery ListParts
instance ToPath ListParts


-- | Returns some or all (up to 1000) of the objects in a bucket. You can
--   use the request parameters as selection criteria to return a subset of
--   the objects in a bucket.
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/ListObjects.html</a>
module Network.AWS.S3.ListObjects
data ListObjects

-- | <a>ListObjects</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>loBucket</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>loDelimiter</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>loEncodingType</a> <tt>::</tt> <a>Maybe</a>
--   <a>EncodingType</a></li>
--   <li><a>loMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>loMaxKeys</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>loPrefix</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listObjects :: Text -> ListObjects
loBucket :: Lens' ListObjects Text

-- | A delimiter is a character you use to group keys.
loDelimiter :: Lens' ListObjects (Maybe Text)
loEncodingType :: Lens' ListObjects (Maybe EncodingType)

-- | Specifies the key to start with when listing objects in a bucket.
loMarker :: Lens' ListObjects (Maybe Text)

-- | Sets the maximum number of keys returned in the response. The response
--   might contain fewer keys but will never contain more.
loMaxKeys :: Lens' ListObjects (Maybe Int)

-- | Limits the response to keys that begin with the specified prefix.
loPrefix :: Lens' ListObjects (Maybe Text)
data ListObjectsResponse

-- | <a>ListObjectsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lorCommonPrefixes</a> <tt>::</tt> [<a>CommonPrefix</a>]</li>
--   <li><a>lorContents</a> <tt>::</tt> [<a>Object</a>]</li>
--   <li><a>lorDelimiter</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lorEncodingType</a> <tt>::</tt> <a>Maybe</a>
--   <a>EncodingType</a></li>
--   <li><a>lorIsTruncated</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>lorMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lorMaxKeys</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>lorName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lorNextMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lorPrefix</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listObjectsResponse :: ListObjectsResponse
lorCommonPrefixes :: Lens' ListObjectsResponse [CommonPrefix]
lorContents :: Lens' ListObjectsResponse [Object]
lorDelimiter :: Lens' ListObjectsResponse (Maybe Text)

-- | Encoding type used by Amazon S3 to encode object keys in the response.
lorEncodingType :: Lens' ListObjectsResponse (Maybe EncodingType)

-- | A flag that indicates whether or not Amazon S3 returned all of the
--   results that satisfied the search criteria.
lorIsTruncated :: Lens' ListObjectsResponse (Maybe Bool)
lorMarker :: Lens' ListObjectsResponse (Maybe Text)
lorMaxKeys :: Lens' ListObjectsResponse (Maybe Int)
lorName :: Lens' ListObjectsResponse (Maybe Text)

-- | When response is truncated (the IsTruncated element value in the
--   response is true), you can use the key name in this field as marker in
--   the subsequent request to get next set of objects. Amazon S3 lists
--   objects in alphabetical order Note: This element is returned only if
--   you have delimiter request parameter specified. If response does not
--   include the NextMaker and it is truncated, you can use the value of
--   the last Key in the response as the marker in the subsequent request
--   to get the next set of object keys.
lorNextMarker :: Lens' ListObjectsResponse (Maybe Text)
lorPrefix :: Lens' ListObjectsResponse (Maybe Text)
instance Eq ListObjects
instance Read ListObjects
instance Show ListObjects
instance Eq ListObjectsResponse
instance Read ListObjectsResponse
instance Show ListObjectsResponse
instance AWSPager ListObjects
instance FromXML ListObjectsResponse
instance AWSRequest ListObjects
instance ToXML ListObjects
instance ToXMLRoot ListObjects
instance ToHeaders ListObjects
instance ToQuery ListObjects
instance ToPath ListObjects


-- | Returns metadata about all of the versions of objects in a bucket.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/ListObjectVersions.html</a>
module Network.AWS.S3.ListObjectVersions
data ListObjectVersions

-- | <a>ListObjectVersions</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lovBucket</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>lovDelimiter</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lovEncodingType</a> <tt>::</tt> <a>Maybe</a>
--   <a>EncodingType</a></li>
--   <li><a>lovKeyMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lovMaxKeys</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>lovPrefix</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lovVersionIdMarker</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
listObjectVersions :: Text -> ListObjectVersions
lovBucket :: Lens' ListObjectVersions Text

-- | A delimiter is a character you use to group keys.
lovDelimiter :: Lens' ListObjectVersions (Maybe Text)
lovEncodingType :: Lens' ListObjectVersions (Maybe EncodingType)

-- | Specifies the key to start with when listing objects in a bucket.
lovKeyMarker :: Lens' ListObjectVersions (Maybe Text)

-- | Sets the maximum number of keys returned in the response. The response
--   might contain fewer keys but will never contain more.
lovMaxKeys :: Lens' ListObjectVersions (Maybe Int)

-- | Limits the response to keys that begin with the specified prefix.
lovPrefix :: Lens' ListObjectVersions (Maybe Text)

-- | Specifies the object version you want to start listing from.
lovVersionIdMarker :: Lens' ListObjectVersions (Maybe Text)
data ListObjectVersionsResponse

-- | <a>ListObjectVersionsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lovrCommonPrefixes</a> <tt>::</tt> [<a>CommonPrefix</a>]</li>
--   <li><a>lovrDeleteMarkers</a> <tt>::</tt>
--   [<a>DeleteMarkerEntry</a>]</li>
--   <li><a>lovrDelimiter</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lovrEncodingType</a> <tt>::</tt> <a>Maybe</a>
--   <a>EncodingType</a></li>
--   <li><a>lovrIsTruncated</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>lovrKeyMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lovrMaxKeys</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>lovrName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lovrNextKeyMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lovrNextVersionIdMarker</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>lovrPrefix</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lovrVersionIdMarker</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>lovrVersions</a> <tt>::</tt> [<a>ObjectVersion</a>]</li>
--   </ul>
listObjectVersionsResponse :: ListObjectVersionsResponse
lovrCommonPrefixes :: Lens' ListObjectVersionsResponse [CommonPrefix]
lovrDeleteMarkers :: Lens' ListObjectVersionsResponse [DeleteMarkerEntry]
lovrDelimiter :: Lens' ListObjectVersionsResponse (Maybe Text)

-- | Encoding type used by Amazon S3 to encode object keys in the response.
lovrEncodingType :: Lens' ListObjectVersionsResponse (Maybe EncodingType)

-- | A flag that indicates whether or not Amazon S3 returned all of the
--   results that satisfied the search criteria. If your results were
--   truncated, you can make a follow-up paginated request using the
--   NextKeyMarker and NextVersionIdMarker response parameters as a
--   starting place in another request to return the rest of the results.
lovrIsTruncated :: Lens' ListObjectVersionsResponse (Maybe Bool)

-- | Marks the last Key returned in a truncated response.
lovrKeyMarker :: Lens' ListObjectVersionsResponse (Maybe Text)
lovrMaxKeys :: Lens' ListObjectVersionsResponse (Maybe Int)
lovrName :: Lens' ListObjectVersionsResponse (Maybe Text)

-- | Use this value for the key marker request parameter in a subsequent
--   request.
lovrNextKeyMarker :: Lens' ListObjectVersionsResponse (Maybe Text)

-- | Use this value for the next version id marker parameter in a
--   subsequent request.
lovrNextVersionIdMarker :: Lens' ListObjectVersionsResponse (Maybe Text)
lovrPrefix :: Lens' ListObjectVersionsResponse (Maybe Text)
lovrVersionIdMarker :: Lens' ListObjectVersionsResponse (Maybe Text)
lovrVersions :: Lens' ListObjectVersionsResponse [ObjectVersion]
instance Eq ListObjectVersions
instance Read ListObjectVersions
instance Show ListObjectVersions
instance Eq ListObjectVersionsResponse
instance Read ListObjectVersionsResponse
instance Show ListObjectVersionsResponse
instance AWSPager ListObjectVersions
instance FromXML ListObjectVersionsResponse
instance AWSRequest ListObjectVersions
instance ToXML ListObjectVersions
instance ToXMLRoot ListObjectVersions
instance ToHeaders ListObjectVersions
instance ToQuery ListObjectVersions
instance ToPath ListObjectVersions


-- | This operation lists in-progress multipart uploads.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/ListMultipartUploads.html</a>
module Network.AWS.S3.ListMultipartUploads
data ListMultipartUploads

-- | <a>ListMultipartUploads</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lmuBucket</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>lmuDelimiter</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lmuEncodingType</a> <tt>::</tt> <a>Maybe</a>
--   <a>EncodingType</a></li>
--   <li><a>lmuKeyMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lmuMaxUploads</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>lmuPrefix</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lmuUploadIdMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listMultipartUploads :: Text -> ListMultipartUploads
lmuBucket :: Lens' ListMultipartUploads Text

-- | Character you use to group keys.
lmuDelimiter :: Lens' ListMultipartUploads (Maybe Text)
lmuEncodingType :: Lens' ListMultipartUploads (Maybe EncodingType)

-- | Together with upload-id-marker, this parameter specifies the multipart
--   upload after which listing should begin.
lmuKeyMarker :: Lens' ListMultipartUploads (Maybe Text)

-- | Sets the maximum number of multipart uploads, from 1 to 1,000, to
--   return in the response body. 1,000 is the maximum number of uploads
--   that can be returned in a response.
lmuMaxUploads :: Lens' ListMultipartUploads (Maybe Int)

-- | Lists in-progress uploads only for those keys that begin with the
--   specified prefix.
lmuPrefix :: Lens' ListMultipartUploads (Maybe Text)

-- | Together with key-marker, specifies the multipart upload after which
--   listing should begin. If key-marker is not specified, the
--   upload-id-marker parameter is ignored.
lmuUploadIdMarker :: Lens' ListMultipartUploads (Maybe Text)
data ListMultipartUploadsResponse

-- | <a>ListMultipartUploadsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lmurBucket</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lmurCommonPrefixes</a> <tt>::</tt> [<a>CommonPrefix</a>]</li>
--   <li><a>lmurDelimiter</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lmurEncodingType</a> <tt>::</tt> <a>Maybe</a>
--   <a>EncodingType</a></li>
--   <li><a>lmurIsTruncated</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>lmurKeyMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lmurMaxUploads</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>lmurNextKeyMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lmurNextUploadIdMarker</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>lmurPrefix</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lmurUploadIdMarker</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>lmurUploads</a> <tt>::</tt> [<a>MultipartUpload</a>]</li>
--   </ul>
listMultipartUploadsResponse :: ListMultipartUploadsResponse

-- | Name of the bucket to which the multipart upload was initiated.
lmurBucket :: Lens' ListMultipartUploadsResponse (Maybe Text)
lmurCommonPrefixes :: Lens' ListMultipartUploadsResponse [CommonPrefix]
lmurDelimiter :: Lens' ListMultipartUploadsResponse (Maybe Text)

-- | Encoding type used by Amazon S3 to encode object keys in the response.
lmurEncodingType :: Lens' ListMultipartUploadsResponse (Maybe EncodingType)

-- | Indicates whether the returned list of multipart uploads is truncated.
--   A value of true indicates that the list was truncated. The list can be
--   truncated if the number of multipart uploads exceeds the limit allowed
--   or specified by max uploads.
lmurIsTruncated :: Lens' ListMultipartUploadsResponse (Maybe Bool)

-- | The key at or after which the listing began.
lmurKeyMarker :: Lens' ListMultipartUploadsResponse (Maybe Text)

-- | Maximum number of multipart uploads that could have been included in
--   the response.
lmurMaxUploads :: Lens' ListMultipartUploadsResponse (Maybe Int)

-- | When a list is truncated, this element specifies the value that should
--   be used for the key-marker request parameter in a subsequent request.
lmurNextKeyMarker :: Lens' ListMultipartUploadsResponse (Maybe Text)

-- | When a list is truncated, this element specifies the value that should
--   be used for the upload-id-marker request parameter in a subsequent
--   request.
lmurNextUploadIdMarker :: Lens' ListMultipartUploadsResponse (Maybe Text)

-- | When a prefix is provided in the request, this field contains the
--   specified prefix. The result contains only keys starting with the
--   specified prefix.
lmurPrefix :: Lens' ListMultipartUploadsResponse (Maybe Text)

-- | Upload ID after which listing began.
lmurUploadIdMarker :: Lens' ListMultipartUploadsResponse (Maybe Text)
lmurUploads :: Lens' ListMultipartUploadsResponse [MultipartUpload]
instance Eq ListMultipartUploads
instance Read ListMultipartUploads
instance Show ListMultipartUploads
instance Eq ListMultipartUploadsResponse
instance Read ListMultipartUploadsResponse
instance Show ListMultipartUploadsResponse
instance AWSPager ListMultipartUploads
instance FromXML ListMultipartUploadsResponse
instance AWSRequest ListMultipartUploads
instance ToXML ListMultipartUploads
instance ToXMLRoot ListMultipartUploads
instance ToHeaders ListMultipartUploads
instance ToQuery ListMultipartUploads
instance ToPath ListMultipartUploads


-- | Returns a list of all buckets owned by the authenticated sender of the
--   request.
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/ListBuckets.html</a>
module Network.AWS.S3.ListBuckets
data ListBuckets

-- | <a>ListBuckets</a> constructor.
listBuckets :: ListBuckets
data ListBucketsResponse

-- | <a>ListBucketsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lbrBuckets</a> <tt>::</tt> [<a>Bucket</a>]</li>
--   <li><a>lbrOwner</a> <tt>::</tt> <a>Maybe</a> <a>Owner</a></li>
--   </ul>
listBucketsResponse :: ListBucketsResponse
lbrBuckets :: Lens' ListBucketsResponse [Bucket]
lbrOwner :: Lens' ListBucketsResponse (Maybe Owner)
instance Eq ListBuckets
instance Ord ListBuckets
instance Read ListBuckets
instance Show ListBuckets
instance Generic ListBuckets
instance Eq ListBucketsResponse
instance Read ListBucketsResponse
instance Show ListBucketsResponse
instance Datatype D1ListBuckets
instance Constructor C1_0ListBuckets
instance FromXML ListBucketsResponse
instance AWSRequest ListBuckets
instance ToXML ListBuckets
instance ToXMLRoot ListBuckets
instance ToHeaders ListBuckets
instance ToQuery ListBuckets
instance ToPath ListBuckets


-- | The HEAD operation retrieves metadata from an object without returning
--   the object itself. This operation is useful if you're only interested
--   in an object's metadata. To use HEAD, you must have READ access to the
--   object.
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/HeadObject.html</a>
module Network.AWS.S3.HeadObject
data HeadObject

-- | <a>HeadObject</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>hoBucket</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>hoIfMatch</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>hoIfModifiedSince</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>hoIfNoneMatch</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>hoIfUnmodifiedSince</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>hoKey</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>hoRange</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>hoRequestPayer</a> <tt>::</tt> <a>Maybe</a>
--   <a>RequestPayer</a></li>
--   <li><a>hoSSECustomerAlgorithm</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>hoSSECustomerKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>hoSSECustomerKeyMD5</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>hoVersionId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
headObject :: Text -> Text -> HeadObject
hoBucket :: Lens' HeadObject Text

-- | Return the object only if its entity tag (ETag) is the same as the one
--   specified, otherwise return a 412 (precondition failed).
hoIfMatch :: Lens' HeadObject (Maybe Text)

-- | Return the object only if it has been modified since the specified
--   time, otherwise return a 304 (not modified).
hoIfModifiedSince :: Lens' HeadObject (Maybe UTCTime)

-- | Return the object only if its entity tag (ETag) is different from the
--   one specified, otherwise return a 304 (not modified).
hoIfNoneMatch :: Lens' HeadObject (Maybe Text)

-- | Return the object only if it has not been modified since the specified
--   time, otherwise return a 412 (precondition failed).
hoIfUnmodifiedSince :: Lens' HeadObject (Maybe UTCTime)
hoKey :: Lens' HeadObject Text

-- | Downloads the specified range bytes of an object. For more information
--   about the HTTP Range header, go to
--   <a>http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35</a>.
hoRange :: Lens' HeadObject (Maybe Text)
hoRequestPayer :: Lens' HeadObject (Maybe RequestPayer)

-- | Specifies the algorithm to use to when encrypting the object (e.g.,
--   AES256, aws:kms).
hoSSECustomerAlgorithm :: Lens' HeadObject (Maybe Text)

-- | Specifies the customer-provided encryption key for Amazon S3 to use in
--   encrypting data. This value is used to store the object and then it is
--   discarded; Amazon does not store the encryption key. The key must be
--   appropriate for use with the algorithm specified in the
--   x-amz-server-side​-encryption​-customer-algorithm header.
hoSSECustomerKey :: Lens' HeadObject (Maybe Text)

-- | Specifies the 128-bit MD5 digest of the encryption key according to
--   RFC 1321. Amazon S3 uses this header for a message integrity check to
--   ensure the encryption key was transmitted without error.
hoSSECustomerKeyMD5 :: Lens' HeadObject (Maybe Text)

-- | VersionId used to reference a specific version of the object.
hoVersionId :: Lens' HeadObject (Maybe Text)
data HeadObjectResponse

-- | <a>HeadObjectResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>horAcceptRanges</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>horCacheControl</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>horContentDisposition</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>horContentEncoding</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>horContentLanguage</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>horContentLength</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>horContentType</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>horDeleteMarker</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>horETag</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>horExpiration</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>horExpires</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>horLastModified</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>horMetadata</a> <tt>::</tt> <a>HashMap</a> (<a>CI</a>
--   <a>Text</a>) <a>Text</a></li>
--   <li><a>horMissingMeta</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>horReplicationStatus</a> <tt>::</tt> <a>Maybe</a>
--   <a>ReplicationStatus</a></li>
--   <li><a>horRequestCharged</a> <tt>::</tt> <a>Maybe</a>
--   <a>RequestCharged</a></li>
--   <li><a>horRestore</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>horSSECustomerAlgorithm</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>horSSECustomerKeyMD5</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>horSSEKMSKeyId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>horServerSideEncryption</a> <tt>::</tt> <a>Maybe</a>
--   <a>ServerSideEncryption</a></li>
--   <li><a>horVersionId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>horWebsiteRedirectLocation</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
headObjectResponse :: HeadObjectResponse
horAcceptRanges :: Lens' HeadObjectResponse (Maybe Text)

-- | Specifies caching behavior along the request/reply chain.
horCacheControl :: Lens' HeadObjectResponse (Maybe Text)

-- | Specifies presentational information for the object.
horContentDisposition :: Lens' HeadObjectResponse (Maybe Text)

-- | Specifies what content encodings have been applied to the object and
--   thus what decoding mechanisms must be applied to obtain the media-type
--   referenced by the Content-Type header field.
horContentEncoding :: Lens' HeadObjectResponse (Maybe Text)

-- | The language the content is in.
horContentLanguage :: Lens' HeadObjectResponse (Maybe Text)

-- | Size of the body in bytes.
horContentLength :: Lens' HeadObjectResponse (Maybe Int)

-- | A standard MIME type describing the format of the object data.
horContentType :: Lens' HeadObjectResponse (Maybe Text)

-- | Specifies whether the object retrieved was (true) or was not (false) a
--   Delete Marker. If false, this response header does not appear in the
--   response.
horDeleteMarker :: Lens' HeadObjectResponse (Maybe Bool)

-- | An ETag is an opaque identifier assigned by a web server to a specific
--   version of a resource found at a URL
horETag :: Lens' HeadObjectResponse (Maybe Text)

-- | If the object expiration is configured (see PUT Bucket lifecycle), the
--   response includes this header. It includes the expiry-date and rule-id
--   key value pairs providing object expiration information. The value of
--   the rule-id is URL encoded.
horExpiration :: Lens' HeadObjectResponse (Maybe Text)

-- | The date and time at which the object is no longer cacheable.
horExpires :: Lens' HeadObjectResponse (Maybe UTCTime)

-- | Last modified date of the object
horLastModified :: Lens' HeadObjectResponse (Maybe UTCTime)

-- | A map of metadata to store with the object in S3.
horMetadata :: Lens' HeadObjectResponse (HashMap (CI Text) Text)

-- | This is set to the number of metadata entries not returned in
--   x-amz-meta headers. This can happen if you create metadata using an
--   API like SOAP that supports more flexible metadata than the REST API.
--   For example, using SOAP, you can create metadata whose values are not
--   legal HTTP headers.
horMissingMeta :: Lens' HeadObjectResponse (Maybe Int)
horReplicationStatus :: Lens' HeadObjectResponse (Maybe ReplicationStatus)
horRequestCharged :: Lens' HeadObjectResponse (Maybe RequestCharged)

-- | Provides information about object restoration operation and expiration
--   time of the restored object copy.
horRestore :: Lens' HeadObjectResponse (Maybe Text)

-- | If server-side encryption with a customer-provided encryption key was
--   requested, the response will include this header confirming the
--   encryption algorithm used.
horSSECustomerAlgorithm :: Lens' HeadObjectResponse (Maybe Text)

-- | If server-side encryption with a customer-provided encryption key was
--   requested, the response will include this header to provide round trip
--   message integrity verification of the customer-provided encryption
--   key.
horSSECustomerKeyMD5 :: Lens' HeadObjectResponse (Maybe Text)

-- | If present, specifies the ID of the AWS Key Management Service (KMS)
--   master encryption key that was used for the object.
horSSEKMSKeyId :: Lens' HeadObjectResponse (Maybe Text)

-- | The Server-side encryption algorithm used when storing this object in
--   S3 (e.g., AES256, aws:kms).
horServerSideEncryption :: Lens' HeadObjectResponse (Maybe ServerSideEncryption)

-- | Version of the object.
horVersionId :: Lens' HeadObjectResponse (Maybe Text)

-- | If the bucket is configured as a website, redirects requests for this
--   object to another object in the same bucket or to an external URL.
--   Amazon S3 stores the value of this header in the object metadata.
horWebsiteRedirectLocation :: Lens' HeadObjectResponse (Maybe Text)
instance Eq HeadObject
instance Read HeadObject
instance Show HeadObject
instance Eq HeadObjectResponse
instance Read HeadObjectResponse
instance Show HeadObjectResponse
instance AWSRequest HeadObject
instance ToXML HeadObject
instance ToXMLRoot HeadObject
instance ToHeaders HeadObject
instance ToQuery HeadObject
instance ToPath HeadObject


-- | This operation is useful to determine if a bucket exists and you have
--   permission to access it.
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/HeadBucket.html</a>
module Network.AWS.S3.HeadBucket
data HeadBucket

-- | <a>HeadBucket</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>hbBucket</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
headBucket :: Text -> HeadBucket
hbBucket :: Lens' HeadBucket Text
data HeadBucketResponse

-- | <a>HeadBucketResponse</a> constructor.
headBucketResponse :: HeadBucketResponse
instance Eq HeadBucket
instance Ord HeadBucket
instance Read HeadBucket
instance Show HeadBucket
instance Monoid HeadBucket
instance IsString HeadBucket
instance Eq HeadBucketResponse
instance Ord HeadBucketResponse
instance Read HeadBucketResponse
instance Show HeadBucketResponse
instance Generic HeadBucketResponse
instance Datatype D1HeadBucketResponse
instance Constructor C1_0HeadBucketResponse
instance AWSRequest HeadBucket
instance ToXML HeadBucket
instance ToXMLRoot HeadBucket
instance ToHeaders HeadBucket
instance ToQuery HeadBucket
instance ToPath HeadBucket

module Network.AWS.S3.Waiters
bucketExists :: Wait HeadBucket
bucketNotExists :: Wait HeadBucket
objectExists :: Wait HeadObject
objectNotExists :: Wait HeadObject


-- | Return torrent files from a bucket.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/GetObjectTorrent.html</a>
module Network.AWS.S3.GetObjectTorrent
data GetObjectTorrent

-- | <a>GetObjectTorrent</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gotBucket</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>gotKey</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>gotRequestPayer</a> <tt>::</tt> <a>Maybe</a>
--   <a>RequestPayer</a></li>
--   </ul>
getObjectTorrent :: Text -> Text -> GetObjectTorrent
gotBucket :: Lens' GetObjectTorrent Text
gotKey :: Lens' GetObjectTorrent Text
gotRequestPayer :: Lens' GetObjectTorrent (Maybe RequestPayer)
data GetObjectTorrentResponse

-- | <a>GetObjectTorrentResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gotrBody</a> <tt>::</tt> <a>RsBody</a></li>
--   <li><a>gotrRequestCharged</a> <tt>::</tt> <a>Maybe</a>
--   <a>RequestCharged</a></li>
--   </ul>
getObjectTorrentResponse :: RsBody -> GetObjectTorrentResponse
gotrBody :: Lens' GetObjectTorrentResponse RsBody
gotrRequestCharged :: Lens' GetObjectTorrentResponse (Maybe RequestCharged)
instance Eq GetObjectTorrent
instance Read GetObjectTorrent
instance Show GetObjectTorrent
instance Show GetObjectTorrentResponse
instance AWSRequest GetObjectTorrent
instance ToXML GetObjectTorrent
instance ToXMLRoot GetObjectTorrent
instance ToHeaders GetObjectTorrent
instance ToQuery GetObjectTorrent
instance ToPath GetObjectTorrent


-- | Returns the access control list (ACL) of an object.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/GetObjectAcl.html</a>
module Network.AWS.S3.GetObjectAcl
data GetObjectAcl

-- | <a>GetObjectAcl</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>goaBucket</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>goaKey</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>goaRequestPayer</a> <tt>::</tt> <a>Maybe</a>
--   <a>RequestPayer</a></li>
--   <li><a>goaVersionId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
getObjectAcl :: Text -> Text -> GetObjectAcl
goaBucket :: Lens' GetObjectAcl Text
goaKey :: Lens' GetObjectAcl Text
goaRequestPayer :: Lens' GetObjectAcl (Maybe RequestPayer)

-- | VersionId used to reference a specific version of the object.
goaVersionId :: Lens' GetObjectAcl (Maybe Text)
data GetObjectAclResponse

-- | <a>GetObjectAclResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>goarGrants</a> <tt>::</tt> [<a>Grant</a>]</li>
--   <li><a>goarOwner</a> <tt>::</tt> <a>Maybe</a> <a>Owner</a></li>
--   <li><a>goarRequestCharged</a> <tt>::</tt> <a>Maybe</a>
--   <a>RequestCharged</a></li>
--   </ul>
getObjectAclResponse :: GetObjectAclResponse

-- | A list of grants.
goarGrants :: Lens' GetObjectAclResponse [Grant]
goarOwner :: Lens' GetObjectAclResponse (Maybe Owner)
goarRequestCharged :: Lens' GetObjectAclResponse (Maybe RequestCharged)
instance Eq GetObjectAcl
instance Read GetObjectAcl
instance Show GetObjectAcl
instance Eq GetObjectAclResponse
instance Read GetObjectAclResponse
instance Show GetObjectAclResponse
instance AWSRequest GetObjectAcl
instance ToXML GetObjectAcl
instance ToXMLRoot GetObjectAcl
instance ToHeaders GetObjectAcl
instance ToQuery GetObjectAcl
instance ToPath GetObjectAcl


-- | Retrieves objects from Amazon S3.
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/GetObject.html</a>
module Network.AWS.S3.GetObject
data GetObject

-- | <a>GetObject</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>goBucket</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>goIfMatch</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>goIfModifiedSince</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>goIfNoneMatch</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>goIfUnmodifiedSince</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>goKey</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>goRange</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>goRequestPayer</a> <tt>::</tt> <a>Maybe</a>
--   <a>RequestPayer</a></li>
--   <li><a>goResponseCacheControl</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>goResponseContentDisposition</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>goResponseContentEncoding</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>goResponseContentLanguage</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>goResponseContentType</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>goResponseExpires</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>goSSECustomerAlgorithm</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>goSSECustomerKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>goSSECustomerKeyMD5</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>goVersionId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
getObject :: Text -> Text -> GetObject
goBucket :: Lens' GetObject Text

-- | Return the object only if its entity tag (ETag) is the same as the one
--   specified, otherwise return a 412 (precondition failed).
goIfMatch :: Lens' GetObject (Maybe Text)

-- | Return the object only if it has been modified since the specified
--   time, otherwise return a 304 (not modified).
goIfModifiedSince :: Lens' GetObject (Maybe UTCTime)

-- | Return the object only if its entity tag (ETag) is different from the
--   one specified, otherwise return a 304 (not modified).
goIfNoneMatch :: Lens' GetObject (Maybe Text)

-- | Return the object only if it has not been modified since the specified
--   time, otherwise return a 412 (precondition failed).
goIfUnmodifiedSince :: Lens' GetObject (Maybe UTCTime)
goKey :: Lens' GetObject Text

-- | Downloads the specified range bytes of an object. For more information
--   about the HTTP Range header, go to
--   <a>http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35</a>.
goRange :: Lens' GetObject (Maybe Text)
goRequestPayer :: Lens' GetObject (Maybe RequestPayer)

-- | Sets the Cache-Control header of the response.
goResponseCacheControl :: Lens' GetObject (Maybe Text)

-- | Sets the Content-Disposition header of the response
goResponseContentDisposition :: Lens' GetObject (Maybe Text)

-- | Sets the Content-Encoding header of the response.
goResponseContentEncoding :: Lens' GetObject (Maybe Text)

-- | Sets the Content-Language header of the response.
goResponseContentLanguage :: Lens' GetObject (Maybe Text)

-- | Sets the Content-Type header of the response.
goResponseContentType :: Lens' GetObject (Maybe Text)

-- | Sets the Expires header of the response.
goResponseExpires :: Lens' GetObject (Maybe UTCTime)

-- | Specifies the algorithm to use to when encrypting the object (e.g.,
--   AES256, aws:kms).
goSSECustomerAlgorithm :: Lens' GetObject (Maybe Text)

-- | Specifies the customer-provided encryption key for Amazon S3 to use in
--   encrypting data. This value is used to store the object and then it is
--   discarded; Amazon does not store the encryption key. The key must be
--   appropriate for use with the algorithm specified in the
--   x-amz-server-side​-encryption​-customer-algorithm header.
goSSECustomerKey :: Lens' GetObject (Maybe Text)

-- | Specifies the 128-bit MD5 digest of the encryption key according to
--   RFC 1321. Amazon S3 uses this header for a message integrity check to
--   ensure the encryption key was transmitted without error.
goSSECustomerKeyMD5 :: Lens' GetObject (Maybe Text)

-- | VersionId used to reference a specific version of the object.
goVersionId :: Lens' GetObject (Maybe Text)
data GetObjectResponse

-- | <a>GetObjectResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gorAcceptRanges</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gorBody</a> <tt>::</tt> <a>RsBody</a></li>
--   <li><a>gorCacheControl</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gorContentDisposition</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>gorContentEncoding</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>gorContentLanguage</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>gorContentLength</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>gorContentType</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gorDeleteMarker</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>gorETag</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gorExpiration</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gorExpires</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>gorLastModified</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>gorMetadata</a> <tt>::</tt> <a>HashMap</a> (<a>CI</a>
--   <a>Text</a>) <a>Text</a></li>
--   <li><a>gorMissingMeta</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>gorReplicationStatus</a> <tt>::</tt> <a>Maybe</a>
--   <a>ReplicationStatus</a></li>
--   <li><a>gorRequestCharged</a> <tt>::</tt> <a>Maybe</a>
--   <a>RequestCharged</a></li>
--   <li><a>gorRestore</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gorSSECustomerAlgorithm</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>gorSSECustomerKeyMD5</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>gorSSEKMSKeyId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gorServerSideEncryption</a> <tt>::</tt> <a>Maybe</a>
--   <a>ServerSideEncryption</a></li>
--   <li><a>gorVersionId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gorWebsiteRedirectLocation</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
getObjectResponse :: RsBody -> GetObjectResponse
gorAcceptRanges :: Lens' GetObjectResponse (Maybe Text)

-- | Object data.
gorBody :: Lens' GetObjectResponse RsBody

-- | Specifies caching behavior along the request/reply chain.
gorCacheControl :: Lens' GetObjectResponse (Maybe Text)

-- | Specifies presentational information for the object.
gorContentDisposition :: Lens' GetObjectResponse (Maybe Text)

-- | Specifies what content encodings have been applied to the object and
--   thus what decoding mechanisms must be applied to obtain the media-type
--   referenced by the Content-Type header field.
gorContentEncoding :: Lens' GetObjectResponse (Maybe Text)

-- | The language the content is in.
gorContentLanguage :: Lens' GetObjectResponse (Maybe Text)

-- | Size of the body in bytes.
gorContentLength :: Lens' GetObjectResponse (Maybe Int)

-- | A standard MIME type describing the format of the object data.
gorContentType :: Lens' GetObjectResponse (Maybe Text)

-- | Specifies whether the object retrieved was (true) or was not (false) a
--   Delete Marker. If false, this response header does not appear in the
--   response.
gorDeleteMarker :: Lens' GetObjectResponse (Maybe Bool)

-- | An ETag is an opaque identifier assigned by a web server to a specific
--   version of a resource found at a URL
gorETag :: Lens' GetObjectResponse (Maybe Text)

-- | If the object expiration is configured (see PUT Bucket lifecycle), the
--   response includes this header. It includes the expiry-date and rule-id
--   key value pairs providing object expiration information. The value of
--   the rule-id is URL encoded.
gorExpiration :: Lens' GetObjectResponse (Maybe Text)

-- | The date and time at which the object is no longer cacheable.
gorExpires :: Lens' GetObjectResponse (Maybe UTCTime)

-- | Last modified date of the object
gorLastModified :: Lens' GetObjectResponse (Maybe UTCTime)

-- | A map of metadata to store with the object in S3.
gorMetadata :: Lens' GetObjectResponse (HashMap (CI Text) Text)

-- | This is set to the number of metadata entries not returned in
--   x-amz-meta headers. This can happen if you create metadata using an
--   API like SOAP that supports more flexible metadata than the REST API.
--   For example, using SOAP, you can create metadata whose values are not
--   legal HTTP headers.
gorMissingMeta :: Lens' GetObjectResponse (Maybe Int)
gorReplicationStatus :: Lens' GetObjectResponse (Maybe ReplicationStatus)
gorRequestCharged :: Lens' GetObjectResponse (Maybe RequestCharged)

-- | Provides information about object restoration operation and expiration
--   time of the restored object copy.
gorRestore :: Lens' GetObjectResponse (Maybe Text)

-- | If server-side encryption with a customer-provided encryption key was
--   requested, the response will include this header confirming the
--   encryption algorithm used.
gorSSECustomerAlgorithm :: Lens' GetObjectResponse (Maybe Text)

-- | If server-side encryption with a customer-provided encryption key was
--   requested, the response will include this header to provide round trip
--   message integrity verification of the customer-provided encryption
--   key.
gorSSECustomerKeyMD5 :: Lens' GetObjectResponse (Maybe Text)

-- | If present, specifies the ID of the AWS Key Management Service (KMS)
--   master encryption key that was used for the object.
gorSSEKMSKeyId :: Lens' GetObjectResponse (Maybe Text)

-- | The Server-side encryption algorithm used when storing this object in
--   S3 (e.g., AES256, aws:kms).
gorServerSideEncryption :: Lens' GetObjectResponse (Maybe ServerSideEncryption)

-- | Version of the object.
gorVersionId :: Lens' GetObjectResponse (Maybe Text)

-- | If the bucket is configured as a website, redirects requests for this
--   object to another object in the same bucket or to an external URL.
--   Amazon S3 stores the value of this header in the object metadata.
gorWebsiteRedirectLocation :: Lens' GetObjectResponse (Maybe Text)
instance Eq GetObject
instance Read GetObject
instance Show GetObject
instance Show GetObjectResponse
instance AWSRequest GetObject
instance ToXML GetObject
instance ToXMLRoot GetObject
instance ToHeaders GetObject
instance ToQuery GetObject
instance ToPath GetObject


-- | Returns the website configuration for a bucket.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/GetBucketWebsite.html</a>
module Network.AWS.S3.GetBucketWebsite
data GetBucketWebsite

-- | <a>GetBucketWebsite</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gbwBucket</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getBucketWebsite :: Text -> GetBucketWebsite
gbwBucket :: Lens' GetBucketWebsite Text
data GetBucketWebsiteResponse

-- | <a>GetBucketWebsiteResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gbwrErrorDocument</a> <tt>::</tt> <a>Maybe</a>
--   <a>ErrorDocument</a></li>
--   <li><a>gbwrIndexDocument</a> <tt>::</tt> <a>Maybe</a>
--   <a>IndexDocument</a></li>
--   <li><a>gbwrRedirectAllRequestsTo</a> <tt>::</tt> <a>Maybe</a>
--   <a>RedirectAllRequestsTo</a></li>
--   <li><a>gbwrRoutingRules</a> <tt>::</tt> [<a>RoutingRule</a>]</li>
--   </ul>
getBucketWebsiteResponse :: GetBucketWebsiteResponse
gbwrErrorDocument :: Lens' GetBucketWebsiteResponse (Maybe ErrorDocument)
gbwrIndexDocument :: Lens' GetBucketWebsiteResponse (Maybe IndexDocument)
gbwrRedirectAllRequestsTo :: Lens' GetBucketWebsiteResponse (Maybe RedirectAllRequestsTo)
gbwrRoutingRules :: Lens' GetBucketWebsiteResponse [RoutingRule]
instance Eq GetBucketWebsite
instance Ord GetBucketWebsite
instance Read GetBucketWebsite
instance Show GetBucketWebsite
instance Monoid GetBucketWebsite
instance IsString GetBucketWebsite
instance Eq GetBucketWebsiteResponse
instance Read GetBucketWebsiteResponse
instance Show GetBucketWebsiteResponse
instance FromXML GetBucketWebsiteResponse
instance AWSRequest GetBucketWebsite
instance ToXML GetBucketWebsite
instance ToXMLRoot GetBucketWebsite
instance ToHeaders GetBucketWebsite
instance ToQuery GetBucketWebsite
instance ToPath GetBucketWebsite


-- | Returns the versioning state of a bucket.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/GetBucketVersioning.html</a>
module Network.AWS.S3.GetBucketVersioning
data GetBucketVersioning

-- | <a>GetBucketVersioning</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gbvBucket</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getBucketVersioning :: Text -> GetBucketVersioning
gbvBucket :: Lens' GetBucketVersioning Text
data GetBucketVersioningResponse

-- | <a>GetBucketVersioningResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gbvrMFADelete</a> <tt>::</tt> <a>Maybe</a>
--   <a>MFADeleteStatus</a></li>
--   <li><a>gbvrStatus</a> <tt>::</tt> <a>Maybe</a>
--   <a>BucketVersioningStatus</a></li>
--   </ul>
getBucketVersioningResponse :: GetBucketVersioningResponse

-- | Specifies whether MFA delete is enabled in the bucket versioning
--   configuration. This element is only returned if the bucket has been
--   configured with MFA delete. If the bucket has never been so
--   configured, this element is not returned.
gbvrMFADelete :: Lens' GetBucketVersioningResponse (Maybe MFADeleteStatus)

-- | The versioning state of the bucket.
gbvrStatus :: Lens' GetBucketVersioningResponse (Maybe BucketVersioningStatus)
instance Eq GetBucketVersioning
instance Ord GetBucketVersioning
instance Read GetBucketVersioning
instance Show GetBucketVersioning
instance Monoid GetBucketVersioning
instance IsString GetBucketVersioning
instance Eq GetBucketVersioningResponse
instance Read GetBucketVersioningResponse
instance Show GetBucketVersioningResponse
instance FromXML GetBucketVersioningResponse
instance AWSRequest GetBucketVersioning
instance ToXML GetBucketVersioning
instance ToXMLRoot GetBucketVersioning
instance ToHeaders GetBucketVersioning
instance ToQuery GetBucketVersioning
instance ToPath GetBucketVersioning


-- | Returns the tag set associated with the bucket.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/GetBucketTagging.html</a>
module Network.AWS.S3.GetBucketTagging
data GetBucketTagging

-- | <a>GetBucketTagging</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gbtBucket</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getBucketTagging :: Text -> GetBucketTagging
gbtBucket :: Lens' GetBucketTagging Text
data GetBucketTaggingResponse

-- | <a>GetBucketTaggingResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gbtrTagSet</a> <tt>::</tt> [<a>Tag</a>]</li>
--   </ul>
getBucketTaggingResponse :: GetBucketTaggingResponse
gbtrTagSet :: Lens' GetBucketTaggingResponse [Tag]
instance Eq GetBucketTagging
instance Ord GetBucketTagging
instance Read GetBucketTagging
instance Show GetBucketTagging
instance Monoid GetBucketTagging
instance IsString GetBucketTagging
instance Eq GetBucketTaggingResponse
instance Read GetBucketTaggingResponse
instance Show GetBucketTaggingResponse
instance Monoid GetBucketTaggingResponse
instance Semigroup GetBucketTaggingResponse
instance FromXML GetBucketTaggingResponse
instance AWSRequest GetBucketTagging
instance ToXML GetBucketTagging
instance ToXMLRoot GetBucketTagging
instance ToHeaders GetBucketTagging
instance ToQuery GetBucketTagging
instance ToPath GetBucketTagging
instance IsList GetBucketTaggingResponse


-- | Returns the request payment configuration of a bucket.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/GetBucketRequestPayment.html</a>
module Network.AWS.S3.GetBucketRequestPayment
data GetBucketRequestPayment

-- | <a>GetBucketRequestPayment</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gbrpBucket</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getBucketRequestPayment :: Text -> GetBucketRequestPayment
gbrpBucket :: Lens' GetBucketRequestPayment Text
data GetBucketRequestPaymentResponse

-- | <a>GetBucketRequestPaymentResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gbrprPayer</a> <tt>::</tt> <a>Maybe</a> <a>Payer</a></li>
--   </ul>
getBucketRequestPaymentResponse :: GetBucketRequestPaymentResponse

-- | Specifies who pays for the download and request fees.
gbrprPayer :: Lens' GetBucketRequestPaymentResponse (Maybe Payer)
instance Eq GetBucketRequestPayment
instance Ord GetBucketRequestPayment
instance Read GetBucketRequestPayment
instance Show GetBucketRequestPayment
instance Monoid GetBucketRequestPayment
instance IsString GetBucketRequestPayment
instance Eq GetBucketRequestPaymentResponse
instance Read GetBucketRequestPaymentResponse
instance Show GetBucketRequestPaymentResponse
instance FromXML GetBucketRequestPaymentResponse
instance AWSRequest GetBucketRequestPayment
instance ToXML GetBucketRequestPayment
instance ToXMLRoot GetBucketRequestPayment
instance ToHeaders GetBucketRequestPayment
instance ToQuery GetBucketRequestPayment
instance ToPath GetBucketRequestPayment


-- | 
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/GetBucketReplication.html</a>
module Network.AWS.S3.GetBucketReplication
data GetBucketReplication

-- | <a>GetBucketReplication</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gbrBucket</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getBucketReplication :: Text -> GetBucketReplication
gbrBucket :: Lens' GetBucketReplication Text
data GetBucketReplicationResponse

-- | <a>GetBucketReplicationResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gbrrReplicationConfiguration</a> <tt>::</tt> <a>Maybe</a>
--   <a>ReplicationConfiguration</a></li>
--   </ul>
getBucketReplicationResponse :: GetBucketReplicationResponse
gbrrReplicationConfiguration :: Lens' GetBucketReplicationResponse (Maybe ReplicationConfiguration)
instance Eq GetBucketReplication
instance Ord GetBucketReplication
instance Read GetBucketReplication
instance Show GetBucketReplication
instance Monoid GetBucketReplication
instance IsString GetBucketReplication
instance Eq GetBucketReplicationResponse
instance Read GetBucketReplicationResponse
instance Show GetBucketReplicationResponse
instance FromXML GetBucketReplicationResponse
instance AWSRequest GetBucketReplication
instance ToXML GetBucketReplication
instance ToXMLRoot GetBucketReplication
instance ToHeaders GetBucketReplication
instance ToQuery GetBucketReplication
instance ToPath GetBucketReplication


-- | Returns the policy of a specified bucket.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/GetBucketPolicy.html</a>
module Network.AWS.S3.GetBucketPolicy
data GetBucketPolicy

-- | <a>GetBucketPolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gbpBucket</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getBucketPolicy :: Text -> GetBucketPolicy
gbpBucket :: Lens' GetBucketPolicy Text
data GetBucketPolicyResponse

-- | <a>GetBucketPolicyResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gbprPolicy</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
getBucketPolicyResponse :: GetBucketPolicyResponse

-- | The bucket policy as a JSON document.
gbprPolicy :: Lens' GetBucketPolicyResponse (Maybe Text)
instance Eq GetBucketPolicy
instance Ord GetBucketPolicy
instance Read GetBucketPolicy
instance Show GetBucketPolicy
instance Monoid GetBucketPolicy
instance IsString GetBucketPolicy
instance Eq GetBucketPolicyResponse
instance Ord GetBucketPolicyResponse
instance Read GetBucketPolicyResponse
instance Show GetBucketPolicyResponse
instance Monoid GetBucketPolicyResponse
instance FromXML GetBucketPolicyResponse
instance AWSRequest GetBucketPolicy
instance ToXML GetBucketPolicy
instance ToXMLRoot GetBucketPolicy
instance ToHeaders GetBucketPolicy
instance ToQuery GetBucketPolicy
instance ToPath GetBucketPolicy


-- | Returns the notification configuration of a bucket.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/GetBucketNotificationConfiguration.html</a>
module Network.AWS.S3.GetBucketNotificationConfiguration
data GetBucketNotificationConfiguration

-- | <a>GetBucketNotificationConfiguration</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gbnc1Bucket</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getBucketNotificationConfiguration :: Text -> GetBucketNotificationConfiguration

-- | Name of the buket to get the notification configuration for.
gbnc1Bucket :: Lens' GetBucketNotificationConfiguration Text
data GetBucketNotificationConfigurationResponse

-- | <a>GetBucketNotificationConfigurationResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gbncrLambdaFunctionConfigurations</a> <tt>::</tt>
--   [<a>LambdaFunctionConfiguration</a>]</li>
--   <li><a>gbncrQueueConfigurations</a> <tt>::</tt>
--   [<a>QueueConfiguration</a>]</li>
--   <li><a>gbncrTopicConfigurations</a> <tt>::</tt>
--   [<a>TopicConfiguration</a>]</li>
--   </ul>
getBucketNotificationConfigurationResponse :: GetBucketNotificationConfigurationResponse
gbncrLambdaFunctionConfigurations :: Lens' GetBucketNotificationConfigurationResponse [LambdaFunctionConfiguration]
gbncrQueueConfigurations :: Lens' GetBucketNotificationConfigurationResponse [QueueConfiguration]
gbncrTopicConfigurations :: Lens' GetBucketNotificationConfigurationResponse [TopicConfiguration]
instance Eq GetBucketNotificationConfiguration
instance Ord GetBucketNotificationConfiguration
instance Read GetBucketNotificationConfiguration
instance Show GetBucketNotificationConfiguration
instance Monoid GetBucketNotificationConfiguration
instance IsString GetBucketNotificationConfiguration
instance Eq GetBucketNotificationConfigurationResponse
instance Read GetBucketNotificationConfigurationResponse
instance Show GetBucketNotificationConfigurationResponse
instance FromXML GetBucketNotificationConfigurationResponse
instance AWSRequest GetBucketNotificationConfiguration
instance ToXML GetBucketNotificationConfiguration
instance ToXMLRoot GetBucketNotificationConfiguration
instance ToHeaders GetBucketNotificationConfiguration
instance ToQuery GetBucketNotificationConfiguration
instance ToPath GetBucketNotificationConfiguration


-- | Deprecated, see the GetBucketNotificationConfiguration operation.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/GetBucketNotification.html</a>
module Network.AWS.S3.GetBucketNotification
data GetBucketNotification

-- | <a>GetBucketNotification</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gbnBucket</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getBucketNotification :: Text -> GetBucketNotification

-- | Name of the buket to get the notification configuration for.
gbnBucket :: Lens' GetBucketNotification Text
data GetBucketNotificationResponse

-- | <a>GetBucketNotificationResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gbnrCloudFunctionConfiguration</a> <tt>::</tt> <a>Maybe</a>
--   <a>CloudFunctionConfiguration</a></li>
--   <li><a>gbnrQueueConfiguration</a> <tt>::</tt> <a>Maybe</a>
--   <a>QueueConfigurationDeprecated</a></li>
--   <li><a>gbnrTopicConfiguration</a> <tt>::</tt> <a>Maybe</a>
--   <a>TopicConfigurationDeprecated</a></li>
--   </ul>
getBucketNotificationResponse :: GetBucketNotificationResponse
gbnrCloudFunctionConfiguration :: Lens' GetBucketNotificationResponse (Maybe CloudFunctionConfiguration)
gbnrQueueConfiguration :: Lens' GetBucketNotificationResponse (Maybe QueueConfigurationDeprecated)
gbnrTopicConfiguration :: Lens' GetBucketNotificationResponse (Maybe TopicConfigurationDeprecated)
instance Eq GetBucketNotification
instance Ord GetBucketNotification
instance Read GetBucketNotification
instance Show GetBucketNotification
instance Monoid GetBucketNotification
instance IsString GetBucketNotification
instance Eq GetBucketNotificationResponse
instance Read GetBucketNotificationResponse
instance Show GetBucketNotificationResponse
instance FromXML GetBucketNotificationResponse
instance AWSRequest GetBucketNotification
instance ToXML GetBucketNotification
instance ToXMLRoot GetBucketNotification
instance ToHeaders GetBucketNotification
instance ToQuery GetBucketNotification
instance ToPath GetBucketNotification


-- | Returns the logging status of a bucket and the permissions users have
--   to view and modify that status. To use GET, you must be the bucket
--   owner.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/GetBucketLogging.html</a>
module Network.AWS.S3.GetBucketLogging
data GetBucketLogging

-- | <a>GetBucketLogging</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gbl2Bucket</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getBucketLogging :: Text -> GetBucketLogging
gbl2Bucket :: Lens' GetBucketLogging Text
data GetBucketLoggingResponse

-- | <a>GetBucketLoggingResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gblrLoggingEnabled</a> <tt>::</tt> <a>Maybe</a>
--   <a>LoggingEnabled</a></li>
--   </ul>
getBucketLoggingResponse :: GetBucketLoggingResponse
gblrLoggingEnabled :: Lens' GetBucketLoggingResponse (Maybe LoggingEnabled)
instance Eq GetBucketLogging
instance Ord GetBucketLogging
instance Read GetBucketLogging
instance Show GetBucketLogging
instance Monoid GetBucketLogging
instance IsString GetBucketLogging
instance Eq GetBucketLoggingResponse
instance Read GetBucketLoggingResponse
instance Show GetBucketLoggingResponse
instance FromXML GetBucketLoggingResponse
instance AWSRequest GetBucketLogging
instance ToXML GetBucketLogging
instance ToXMLRoot GetBucketLogging
instance ToHeaders GetBucketLogging
instance ToQuery GetBucketLogging
instance ToPath GetBucketLogging


-- | Returns the region the bucket resides in.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/GetBucketLocation.html</a>
module Network.AWS.S3.GetBucketLocation
data GetBucketLocation

-- | <a>GetBucketLocation</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gblBucket</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getBucketLocation :: Text -> GetBucketLocation
gblBucket :: Lens' GetBucketLocation Text
data GetBucketLocationResponse

-- | <a>GetBucketLocationResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gblrLocationConstraint</a> <tt>::</tt> <a>Maybe</a>
--   <a>Region</a></li>
--   </ul>
getBucketLocationResponse :: GetBucketLocationResponse
gblrLocationConstraint :: Lens' GetBucketLocationResponse (Maybe Region)
instance Eq GetBucketLocation
instance Ord GetBucketLocation
instance Read GetBucketLocation
instance Show GetBucketLocation
instance Monoid GetBucketLocation
instance IsString GetBucketLocation
instance Eq GetBucketLocationResponse
instance Read GetBucketLocationResponse
instance Show GetBucketLocationResponse
instance FromXML GetBucketLocationResponse
instance AWSRequest GetBucketLocation
instance ToXML GetBucketLocation
instance ToXMLRoot GetBucketLocation
instance ToHeaders GetBucketLocation
instance ToQuery GetBucketLocation
instance ToPath GetBucketLocation


-- | Returns the lifecycle configuration information set on the bucket.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/GetBucketLifecycle.html</a>
module Network.AWS.S3.GetBucketLifecycle
data GetBucketLifecycle

-- | <a>GetBucketLifecycle</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gbl1Bucket</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getBucketLifecycle :: Text -> GetBucketLifecycle
gbl1Bucket :: Lens' GetBucketLifecycle Text
data GetBucketLifecycleResponse

-- | <a>GetBucketLifecycleResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gblrRules</a> <tt>::</tt> [<a>Rule</a>]</li>
--   </ul>
getBucketLifecycleResponse :: GetBucketLifecycleResponse
gblrRules :: Lens' GetBucketLifecycleResponse [Rule]
instance Eq GetBucketLifecycle
instance Ord GetBucketLifecycle
instance Read GetBucketLifecycle
instance Show GetBucketLifecycle
instance Monoid GetBucketLifecycle
instance IsString GetBucketLifecycle
instance Eq GetBucketLifecycleResponse
instance Read GetBucketLifecycleResponse
instance Show GetBucketLifecycleResponse
instance Monoid GetBucketLifecycleResponse
instance Semigroup GetBucketLifecycleResponse
instance FromXML GetBucketLifecycleResponse
instance AWSRequest GetBucketLifecycle
instance ToXML GetBucketLifecycle
instance ToXMLRoot GetBucketLifecycle
instance ToHeaders GetBucketLifecycle
instance ToQuery GetBucketLifecycle
instance ToPath GetBucketLifecycle


-- | Returns the cors configuration for the bucket.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/GetBucketCors.html</a>
module Network.AWS.S3.GetBucketCors
data GetBucketCors

-- | <a>GetBucketCors</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gbcBucket</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getBucketCors :: Text -> GetBucketCors
gbcBucket :: Lens' GetBucketCors Text
data GetBucketCorsResponse

-- | <a>GetBucketCorsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gbcrCORSRules</a> <tt>::</tt> [<a>CORSRule</a>]</li>
--   </ul>
getBucketCorsResponse :: GetBucketCorsResponse
gbcrCORSRules :: Lens' GetBucketCorsResponse [CORSRule]
instance Eq GetBucketCors
instance Ord GetBucketCors
instance Read GetBucketCors
instance Show GetBucketCors
instance Monoid GetBucketCors
instance IsString GetBucketCors
instance Eq GetBucketCorsResponse
instance Read GetBucketCorsResponse
instance Show GetBucketCorsResponse
instance Monoid GetBucketCorsResponse
instance Semigroup GetBucketCorsResponse
instance FromXML GetBucketCorsResponse
instance AWSRequest GetBucketCors
instance ToXML GetBucketCors
instance ToXMLRoot GetBucketCors
instance ToHeaders GetBucketCors
instance ToQuery GetBucketCors
instance ToPath GetBucketCors


-- | Gets the access control policy for the bucket.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/GetBucketAcl.html</a>
module Network.AWS.S3.GetBucketAcl
data GetBucketAcl

-- | <a>GetBucketAcl</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gbaBucket</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getBucketAcl :: Text -> GetBucketAcl
gbaBucket :: Lens' GetBucketAcl Text
data GetBucketAclResponse

-- | <a>GetBucketAclResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gbarGrants</a> <tt>::</tt> [<a>Grant</a>]</li>
--   <li><a>gbarOwner</a> <tt>::</tt> <a>Maybe</a> <a>Owner</a></li>
--   </ul>
getBucketAclResponse :: GetBucketAclResponse

-- | A list of grants.
gbarGrants :: Lens' GetBucketAclResponse [Grant]
gbarOwner :: Lens' GetBucketAclResponse (Maybe Owner)
instance Eq GetBucketAcl
instance Ord GetBucketAcl
instance Read GetBucketAcl
instance Show GetBucketAcl
instance Monoid GetBucketAcl
instance IsString GetBucketAcl
instance Eq GetBucketAclResponse
instance Read GetBucketAclResponse
instance Show GetBucketAclResponse
instance FromXML GetBucketAclResponse
instance AWSRequest GetBucketAcl
instance ToXML GetBucketAcl
instance ToXMLRoot GetBucketAcl
instance ToHeaders GetBucketAcl
instance ToQuery GetBucketAcl
instance ToPath GetBucketAcl


-- | This operation enables you to delete multiple objects from a bucket
--   using a single HTTP request. You may specify up to 1000 keys.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/DeleteObjects.html</a>
module Network.AWS.S3.DeleteObjects
data DeleteObjects

-- | <a>DeleteObjects</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>do1Bucket</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>do1Delete</a> <tt>::</tt> <a>Delete</a></li>
--   <li><a>do1MFA</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>do1RequestPayer</a> <tt>::</tt> <a>Maybe</a>
--   <a>RequestPayer</a></li>
--   </ul>
deleteObjects :: Text -> Delete -> DeleteObjects
do1Bucket :: Lens' DeleteObjects Text
do1Delete :: Lens' DeleteObjects Delete

-- | The concatenation of the authentication device's serial number, a
--   space, and the value that is displayed on your authentication device.
do1MFA :: Lens' DeleteObjects (Maybe Text)
do1RequestPayer :: Lens' DeleteObjects (Maybe RequestPayer)
data DeleteObjectsResponse

-- | <a>DeleteObjectsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dor1Deleted</a> <tt>::</tt> [<a>DeletedObject</a>]</li>
--   <li><a>dor1Errors</a> <tt>::</tt> [<a>S3ServiceError</a>]</li>
--   <li><a>dor1RequestCharged</a> <tt>::</tt> <a>Maybe</a>
--   <a>RequestCharged</a></li>
--   </ul>
deleteObjectsResponse :: DeleteObjectsResponse
dor1Deleted :: Lens' DeleteObjectsResponse [DeletedObject]
dor1Errors :: Lens' DeleteObjectsResponse [S3ServiceError]
dor1RequestCharged :: Lens' DeleteObjectsResponse (Maybe RequestCharged)
instance Eq DeleteObjects
instance Read DeleteObjects
instance Show DeleteObjects
instance Eq DeleteObjectsResponse
instance Read DeleteObjectsResponse
instance Show DeleteObjectsResponse
instance AWSRequest DeleteObjects
instance ToXML DeleteObjects
instance ToXMLRoot DeleteObjects
instance ToHeaders DeleteObjects
instance ToQuery DeleteObjects
instance ToPath DeleteObjects


-- | Removes the null version (if there is one) of an object and inserts a
--   delete marker, which becomes the latest version of the object. If
--   there isn't a null version, Amazon S3 does not remove any objects.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/DeleteObject.html</a>
module Network.AWS.S3.DeleteObject
data DeleteObject

-- | <a>DeleteObject</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>doBucket</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>doKey</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>doMFA</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>doRequestPayer</a> <tt>::</tt> <a>Maybe</a>
--   <a>RequestPayer</a></li>
--   <li><a>doVersionId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
deleteObject :: Text -> Text -> DeleteObject
doBucket :: Lens' DeleteObject Text
doKey :: Lens' DeleteObject Text

-- | The concatenation of the authentication device's serial number, a
--   space, and the value that is displayed on your authentication device.
doMFA :: Lens' DeleteObject (Maybe Text)
doRequestPayer :: Lens' DeleteObject (Maybe RequestPayer)

-- | VersionId used to reference a specific version of the object.
doVersionId :: Lens' DeleteObject (Maybe Text)
data DeleteObjectResponse

-- | <a>DeleteObjectResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dorDeleteMarker</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dorRequestCharged</a> <tt>::</tt> <a>Maybe</a>
--   <a>RequestCharged</a></li>
--   <li><a>dorVersionId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
deleteObjectResponse :: DeleteObjectResponse

-- | Specifies whether the versioned object that was permanently deleted
--   was (true) or was not (false) a delete marker.
dorDeleteMarker :: Lens' DeleteObjectResponse (Maybe Bool)
dorRequestCharged :: Lens' DeleteObjectResponse (Maybe RequestCharged)

-- | Returns the version ID of the delete marker created as a result of the
--   DELETE operation.
dorVersionId :: Lens' DeleteObjectResponse (Maybe Text)
instance Eq DeleteObject
instance Read DeleteObject
instance Show DeleteObject
instance Eq DeleteObjectResponse
instance Read DeleteObjectResponse
instance Show DeleteObjectResponse
instance AWSRequest DeleteObject
instance ToXML DeleteObject
instance ToXMLRoot DeleteObject
instance ToHeaders DeleteObject
instance ToQuery DeleteObject
instance ToPath DeleteObject


-- | This operation removes the website configuration from the bucket.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/DeleteBucketWebsite.html</a>
module Network.AWS.S3.DeleteBucketWebsite
data DeleteBucketWebsite

-- | <a>DeleteBucketWebsite</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dbwBucket</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteBucketWebsite :: Text -> DeleteBucketWebsite
dbwBucket :: Lens' DeleteBucketWebsite Text
data DeleteBucketWebsiteResponse

-- | <a>DeleteBucketWebsiteResponse</a> constructor.
deleteBucketWebsiteResponse :: DeleteBucketWebsiteResponse
instance Eq DeleteBucketWebsite
instance Ord DeleteBucketWebsite
instance Read DeleteBucketWebsite
instance Show DeleteBucketWebsite
instance Monoid DeleteBucketWebsite
instance IsString DeleteBucketWebsite
instance Eq DeleteBucketWebsiteResponse
instance Ord DeleteBucketWebsiteResponse
instance Read DeleteBucketWebsiteResponse
instance Show DeleteBucketWebsiteResponse
instance Generic DeleteBucketWebsiteResponse
instance Datatype D1DeleteBucketWebsiteResponse
instance Constructor C1_0DeleteBucketWebsiteResponse
instance AWSRequest DeleteBucketWebsite
instance ToXML DeleteBucketWebsite
instance ToXMLRoot DeleteBucketWebsite
instance ToHeaders DeleteBucketWebsite
instance ToQuery DeleteBucketWebsite
instance ToPath DeleteBucketWebsite


-- | Deletes the tags from the bucket.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/DeleteBucketTagging.html</a>
module Network.AWS.S3.DeleteBucketTagging
data DeleteBucketTagging

-- | <a>DeleteBucketTagging</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dbtBucket</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteBucketTagging :: Text -> DeleteBucketTagging
dbtBucket :: Lens' DeleteBucketTagging Text
data DeleteBucketTaggingResponse

-- | <a>DeleteBucketTaggingResponse</a> constructor.
deleteBucketTaggingResponse :: DeleteBucketTaggingResponse
instance Eq DeleteBucketTagging
instance Ord DeleteBucketTagging
instance Read DeleteBucketTagging
instance Show DeleteBucketTagging
instance Monoid DeleteBucketTagging
instance IsString DeleteBucketTagging
instance Eq DeleteBucketTaggingResponse
instance Ord DeleteBucketTaggingResponse
instance Read DeleteBucketTaggingResponse
instance Show DeleteBucketTaggingResponse
instance Generic DeleteBucketTaggingResponse
instance Datatype D1DeleteBucketTaggingResponse
instance Constructor C1_0DeleteBucketTaggingResponse
instance AWSRequest DeleteBucketTagging
instance ToXML DeleteBucketTagging
instance ToXMLRoot DeleteBucketTagging
instance ToHeaders DeleteBucketTagging
instance ToQuery DeleteBucketTagging
instance ToPath DeleteBucketTagging


-- | 
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/DeleteBucketReplication.html</a>
module Network.AWS.S3.DeleteBucketReplication
data DeleteBucketReplication

-- | <a>DeleteBucketReplication</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dbrBucket</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteBucketReplication :: Text -> DeleteBucketReplication
dbrBucket :: Lens' DeleteBucketReplication Text
data DeleteBucketReplicationResponse

-- | <a>DeleteBucketReplicationResponse</a> constructor.
deleteBucketReplicationResponse :: DeleteBucketReplicationResponse
instance Eq DeleteBucketReplication
instance Ord DeleteBucketReplication
instance Read DeleteBucketReplication
instance Show DeleteBucketReplication
instance Monoid DeleteBucketReplication
instance IsString DeleteBucketReplication
instance Eq DeleteBucketReplicationResponse
instance Ord DeleteBucketReplicationResponse
instance Read DeleteBucketReplicationResponse
instance Show DeleteBucketReplicationResponse
instance Generic DeleteBucketReplicationResponse
instance Datatype D1DeleteBucketReplicationResponse
instance Constructor C1_0DeleteBucketReplicationResponse
instance AWSRequest DeleteBucketReplication
instance ToXML DeleteBucketReplication
instance ToXMLRoot DeleteBucketReplication
instance ToHeaders DeleteBucketReplication
instance ToQuery DeleteBucketReplication
instance ToPath DeleteBucketReplication


-- | Deletes the policy from the bucket.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/DeleteBucketPolicy.html</a>
module Network.AWS.S3.DeleteBucketPolicy
data DeleteBucketPolicy

-- | <a>DeleteBucketPolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dbpBucket</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteBucketPolicy :: Text -> DeleteBucketPolicy
dbpBucket :: Lens' DeleteBucketPolicy Text
data DeleteBucketPolicyResponse

-- | <a>DeleteBucketPolicyResponse</a> constructor.
deleteBucketPolicyResponse :: DeleteBucketPolicyResponse
instance Eq DeleteBucketPolicy
instance Ord DeleteBucketPolicy
instance Read DeleteBucketPolicy
instance Show DeleteBucketPolicy
instance Monoid DeleteBucketPolicy
instance IsString DeleteBucketPolicy
instance Eq DeleteBucketPolicyResponse
instance Ord DeleteBucketPolicyResponse
instance Read DeleteBucketPolicyResponse
instance Show DeleteBucketPolicyResponse
instance Generic DeleteBucketPolicyResponse
instance Datatype D1DeleteBucketPolicyResponse
instance Constructor C1_0DeleteBucketPolicyResponse
instance AWSRequest DeleteBucketPolicy
instance ToXML DeleteBucketPolicy
instance ToXMLRoot DeleteBucketPolicy
instance ToHeaders DeleteBucketPolicy
instance ToQuery DeleteBucketPolicy
instance ToPath DeleteBucketPolicy


-- | Deletes the lifecycle configuration from the bucket.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/DeleteBucketLifecycle.html</a>
module Network.AWS.S3.DeleteBucketLifecycle
data DeleteBucketLifecycle

-- | <a>DeleteBucketLifecycle</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dblBucket</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteBucketLifecycle :: Text -> DeleteBucketLifecycle
dblBucket :: Lens' DeleteBucketLifecycle Text
data DeleteBucketLifecycleResponse

-- | <a>DeleteBucketLifecycleResponse</a> constructor.
deleteBucketLifecycleResponse :: DeleteBucketLifecycleResponse
instance Eq DeleteBucketLifecycle
instance Ord DeleteBucketLifecycle
instance Read DeleteBucketLifecycle
instance Show DeleteBucketLifecycle
instance Monoid DeleteBucketLifecycle
instance IsString DeleteBucketLifecycle
instance Eq DeleteBucketLifecycleResponse
instance Ord DeleteBucketLifecycleResponse
instance Read DeleteBucketLifecycleResponse
instance Show DeleteBucketLifecycleResponse
instance Generic DeleteBucketLifecycleResponse
instance Datatype D1DeleteBucketLifecycleResponse
instance Constructor C1_0DeleteBucketLifecycleResponse
instance AWSRequest DeleteBucketLifecycle
instance ToXML DeleteBucketLifecycle
instance ToXMLRoot DeleteBucketLifecycle
instance ToHeaders DeleteBucketLifecycle
instance ToQuery DeleteBucketLifecycle
instance ToPath DeleteBucketLifecycle


-- | Deletes the cors configuration information set for the bucket.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/DeleteBucketCors.html</a>
module Network.AWS.S3.DeleteBucketCors
data DeleteBucketCors

-- | <a>DeleteBucketCors</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dbcBucket</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteBucketCors :: Text -> DeleteBucketCors
dbcBucket :: Lens' DeleteBucketCors Text
data DeleteBucketCorsResponse

-- | <a>DeleteBucketCorsResponse</a> constructor.
deleteBucketCorsResponse :: DeleteBucketCorsResponse
instance Eq DeleteBucketCors
instance Ord DeleteBucketCors
instance Read DeleteBucketCors
instance Show DeleteBucketCors
instance Monoid DeleteBucketCors
instance IsString DeleteBucketCors
instance Eq DeleteBucketCorsResponse
instance Ord DeleteBucketCorsResponse
instance Read DeleteBucketCorsResponse
instance Show DeleteBucketCorsResponse
instance Generic DeleteBucketCorsResponse
instance Datatype D1DeleteBucketCorsResponse
instance Constructor C1_0DeleteBucketCorsResponse
instance AWSRequest DeleteBucketCors
instance ToXML DeleteBucketCors
instance ToXMLRoot DeleteBucketCors
instance ToHeaders DeleteBucketCors
instance ToQuery DeleteBucketCors
instance ToPath DeleteBucketCors


-- | Deletes the bucket. All objects (including all object versions and
--   Delete Markers) in the bucket must be deleted before the bucket itself
--   can be deleted.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/DeleteBucket.html</a>
module Network.AWS.S3.DeleteBucket
data DeleteBucket

-- | <a>DeleteBucket</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dbBucket</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteBucket :: Text -> DeleteBucket
dbBucket :: Lens' DeleteBucket Text
data DeleteBucketResponse

-- | <a>DeleteBucketResponse</a> constructor.
deleteBucketResponse :: DeleteBucketResponse
instance Eq DeleteBucket
instance Ord DeleteBucket
instance Read DeleteBucket
instance Show DeleteBucket
instance Monoid DeleteBucket
instance IsString DeleteBucket
instance Eq DeleteBucketResponse
instance Ord DeleteBucketResponse
instance Read DeleteBucketResponse
instance Show DeleteBucketResponse
instance Generic DeleteBucketResponse
instance Datatype D1DeleteBucketResponse
instance Constructor C1_0DeleteBucketResponse
instance AWSRequest DeleteBucket
instance ToXML DeleteBucket
instance ToXMLRoot DeleteBucket
instance ToHeaders DeleteBucket
instance ToQuery DeleteBucket
instance ToPath DeleteBucket


-- | Initiates a multipart upload and returns an upload ID.
--   
--   Note: After you initiate multipart upload and upload one or more
--   parts, you must either complete or abort multipart upload in order to
--   stop getting charged for storage of the uploaded parts. Only after you
--   either complete or abort multipart upload, Amazon S3 frees up the
--   parts storage and stops charging you for the parts storage.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/CreateMultipartUpload.html</a>
module Network.AWS.S3.CreateMultipartUpload
data CreateMultipartUpload

-- | <a>CreateMultipartUpload</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cmuACL</a> <tt>::</tt> <a>Maybe</a> <a>ObjectCannedACL</a></li>
--   <li><a>cmuBucket</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cmuCacheControl</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cmuContentDisposition</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cmuContentEncoding</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cmuContentLanguage</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cmuContentType</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cmuExpires</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>cmuGrantFullControl</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cmuGrantRead</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cmuGrantReadACP</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cmuGrantWriteACP</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cmuKey</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cmuMetadata</a> <tt>::</tt> <a>HashMap</a> (<a>CI</a>
--   <a>Text</a>) <a>Text</a></li>
--   <li><a>cmuRequestPayer</a> <tt>::</tt> <a>Maybe</a>
--   <a>RequestPayer</a></li>
--   <li><a>cmuSSECustomerAlgorithm</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cmuSSECustomerKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cmuSSECustomerKeyMD5</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cmuSSEKMSKeyId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cmuServerSideEncryption</a> <tt>::</tt> <a>Maybe</a>
--   <a>ServerSideEncryption</a></li>
--   <li><a>cmuStorageClass</a> <tt>::</tt> <a>Maybe</a>
--   <a>StorageClass</a></li>
--   <li><a>cmuWebsiteRedirectLocation</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
createMultipartUpload :: Text -> Text -> CreateMultipartUpload

-- | The canned ACL to apply to the object.
cmuACL :: Lens' CreateMultipartUpload (Maybe ObjectCannedACL)
cmuBucket :: Lens' CreateMultipartUpload Text

-- | Specifies caching behavior along the request/reply chain.
cmuCacheControl :: Lens' CreateMultipartUpload (Maybe Text)

-- | Specifies presentational information for the object.
cmuContentDisposition :: Lens' CreateMultipartUpload (Maybe Text)

-- | Specifies what content encodings have been applied to the object and
--   thus what decoding mechanisms must be applied to obtain the media-type
--   referenced by the Content-Type header field.
cmuContentEncoding :: Lens' CreateMultipartUpload (Maybe Text)

-- | The language the content is in.
cmuContentLanguage :: Lens' CreateMultipartUpload (Maybe Text)

-- | A standard MIME type describing the format of the object data.
cmuContentType :: Lens' CreateMultipartUpload (Maybe Text)

-- | The date and time at which the object is no longer cacheable.
cmuExpires :: Lens' CreateMultipartUpload (Maybe UTCTime)

-- | Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the
--   object.
cmuGrantFullControl :: Lens' CreateMultipartUpload (Maybe Text)

-- | Allows grantee to read the object data and its metadata.
cmuGrantRead :: Lens' CreateMultipartUpload (Maybe Text)

-- | Allows grantee to read the object ACL.
cmuGrantReadACP :: Lens' CreateMultipartUpload (Maybe Text)

-- | Allows grantee to write the ACL for the applicable object.
cmuGrantWriteACP :: Lens' CreateMultipartUpload (Maybe Text)
cmuKey :: Lens' CreateMultipartUpload Text

-- | A map of metadata to store with the object in S3.
cmuMetadata :: Lens' CreateMultipartUpload (HashMap (CI Text) Text)
cmuRequestPayer :: Lens' CreateMultipartUpload (Maybe RequestPayer)

-- | Specifies the algorithm to use to when encrypting the object (e.g.,
--   AES256, aws:kms).
cmuSSECustomerAlgorithm :: Lens' CreateMultipartUpload (Maybe Text)

-- | Specifies the customer-provided encryption key for Amazon S3 to use in
--   encrypting data. This value is used to store the object and then it is
--   discarded; Amazon does not store the encryption key. The key must be
--   appropriate for use with the algorithm specified in the
--   x-amz-server-side​-encryption​-customer-algorithm header.
cmuSSECustomerKey :: Lens' CreateMultipartUpload (Maybe Text)

-- | Specifies the 128-bit MD5 digest of the encryption key according to
--   RFC 1321. Amazon S3 uses this header for a message integrity check to
--   ensure the encryption key was transmitted without error.
cmuSSECustomerKeyMD5 :: Lens' CreateMultipartUpload (Maybe Text)

-- | Specifies the AWS KMS key ID to use for object encryption. All GET and
--   PUT requests for an object protected by AWS KMS will fail if not made
--   via SSL or using SigV4. Documentation on configuring any of the
--   officially supported AWS SDKs and CLI can be found at
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingAWSSDK.html#specify-signature-version</a>
cmuSSEKMSKeyId :: Lens' CreateMultipartUpload (Maybe Text)

-- | The Server-side encryption algorithm used when storing this object in
--   S3 (e.g., AES256, aws:kms).
cmuServerSideEncryption :: Lens' CreateMultipartUpload (Maybe ServerSideEncryption)

-- | The type of storage to use for the object. Defaults to
--   <tt>STANDARD</tt>.
cmuStorageClass :: Lens' CreateMultipartUpload (Maybe StorageClass)

-- | If the bucket is configured as a website, redirects requests for this
--   object to another object in the same bucket or to an external URL.
--   Amazon S3 stores the value of this header in the object metadata.
cmuWebsiteRedirectLocation :: Lens' CreateMultipartUpload (Maybe Text)
data CreateMultipartUploadResponse

-- | <a>CreateMultipartUploadResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cmurBucket</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cmurKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cmurRequestCharged</a> <tt>::</tt> <a>Maybe</a>
--   <a>RequestCharged</a></li>
--   <li><a>cmurSSECustomerAlgorithm</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cmurSSECustomerKeyMD5</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cmurSSEKMSKeyId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cmurServerSideEncryption</a> <tt>::</tt> <a>Maybe</a>
--   <a>ServerSideEncryption</a></li>
--   <li><a>cmurUploadId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
createMultipartUploadResponse :: CreateMultipartUploadResponse

-- | Name of the bucket to which the multipart upload was initiated.
cmurBucket :: Lens' CreateMultipartUploadResponse (Maybe Text)

-- | Object key for which the multipart upload was initiated.
cmurKey :: Lens' CreateMultipartUploadResponse (Maybe Text)
cmurRequestCharged :: Lens' CreateMultipartUploadResponse (Maybe RequestCharged)

-- | If server-side encryption with a customer-provided encryption key was
--   requested, the response will include this header confirming the
--   encryption algorithm used.
cmurSSECustomerAlgorithm :: Lens' CreateMultipartUploadResponse (Maybe Text)

-- | If server-side encryption with a customer-provided encryption key was
--   requested, the response will include this header to provide round trip
--   message integrity verification of the customer-provided encryption
--   key.
cmurSSECustomerKeyMD5 :: Lens' CreateMultipartUploadResponse (Maybe Text)

-- | If present, specifies the ID of the AWS Key Management Service (KMS)
--   master encryption key that was used for the object.
cmurSSEKMSKeyId :: Lens' CreateMultipartUploadResponse (Maybe Text)

-- | The Server-side encryption algorithm used when storing this object in
--   S3 (e.g., AES256, aws:kms).
cmurServerSideEncryption :: Lens' CreateMultipartUploadResponse (Maybe ServerSideEncryption)

-- | ID for the initiated multipart upload.
cmurUploadId :: Lens' CreateMultipartUploadResponse (Maybe Text)
instance Eq CreateMultipartUpload
instance Read CreateMultipartUpload
instance Show CreateMultipartUpload
instance Eq CreateMultipartUploadResponse
instance Read CreateMultipartUploadResponse
instance Show CreateMultipartUploadResponse
instance AWSRequest CreateMultipartUpload
instance ToXML CreateMultipartUpload
instance ToXMLRoot CreateMultipartUpload
instance ToHeaders CreateMultipartUpload
instance ToQuery CreateMultipartUpload
instance ToPath CreateMultipartUpload


-- | Creates a new bucket.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/CreateBucket.html</a>
module Network.AWS.S3.CreateBucket
data CreateBucket

-- | <a>CreateBucket</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cbACL</a> <tt>::</tt> <a>Maybe</a> <a>BucketCannedACL</a></li>
--   <li><a>cbBucket</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cbCreateBucketConfiguration</a> <tt>::</tt> <a>Maybe</a>
--   <a>CreateBucketConfiguration</a></li>
--   <li><a>cbGrantFullControl</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cbGrantRead</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cbGrantReadACP</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cbGrantWrite</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cbGrantWriteACP</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
createBucket :: Text -> CreateBucket

-- | The canned ACL to apply to the bucket.
cbACL :: Lens' CreateBucket (Maybe BucketCannedACL)
cbBucket :: Lens' CreateBucket Text
cbCreateBucketConfiguration :: Lens' CreateBucket (Maybe CreateBucketConfiguration)

-- | Allows grantee the read, write, read ACP, and write ACP permissions on
--   the bucket.
cbGrantFullControl :: Lens' CreateBucket (Maybe Text)

-- | Allows grantee to list the objects in the bucket.
cbGrantRead :: Lens' CreateBucket (Maybe Text)

-- | Allows grantee to read the bucket ACL.
cbGrantReadACP :: Lens' CreateBucket (Maybe Text)

-- | Allows grantee to create, overwrite, and delete any object in the
--   bucket.
cbGrantWrite :: Lens' CreateBucket (Maybe Text)

-- | Allows grantee to write the ACL for the applicable bucket.
cbGrantWriteACP :: Lens' CreateBucket (Maybe Text)
data CreateBucketResponse

-- | <a>CreateBucketResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cbrLocation</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
createBucketResponse :: CreateBucketResponse
cbrLocation :: Lens' CreateBucketResponse (Maybe Text)
instance Eq CreateBucket
instance Read CreateBucket
instance Show CreateBucket
instance Eq CreateBucketResponse
instance Ord CreateBucketResponse
instance Read CreateBucketResponse
instance Show CreateBucketResponse
instance Monoid CreateBucketResponse
instance AWSRequest CreateBucket
instance ToXML CreateBucket
instance ToXMLRoot CreateBucket
instance ToHeaders CreateBucket
instance ToQuery CreateBucket
instance ToPath CreateBucket


-- | Creates a copy of an object that is already stored in Amazon S3.
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/CopyObject.html</a>
module Network.AWS.S3.CopyObject
data CopyObject

-- | <a>CopyObject</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>coACL</a> <tt>::</tt> <a>Maybe</a> <a>ObjectCannedACL</a></li>
--   <li><a>coBucket</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>coCacheControl</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>coContentDisposition</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>coContentEncoding</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>coContentLanguage</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>coContentType</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>coCopySource</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>coCopySourceIfMatch</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>coCopySourceIfModifiedSince</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>coCopySourceIfNoneMatch</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>coCopySourceIfUnmodifiedSince</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>coCopySourceSSECustomerAlgorithm</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>coCopySourceSSECustomerKey</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>coCopySourceSSECustomerKeyMD5</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>coExpires</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>coGrantFullControl</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>coGrantRead</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>coGrantReadACP</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>coGrantWriteACP</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>coKey</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>coMetadata</a> <tt>::</tt> <a>HashMap</a> (<a>CI</a>
--   <a>Text</a>) <a>Text</a></li>
--   <li><a>coMetadataDirective</a> <tt>::</tt> <a>Maybe</a>
--   <a>MetadataDirective</a></li>
--   <li><a>coRequestPayer</a> <tt>::</tt> <a>Maybe</a>
--   <a>RequestPayer</a></li>
--   <li><a>coSSECustomerAlgorithm</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>coSSECustomerKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>coSSECustomerKeyMD5</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>coSSEKMSKeyId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>coServerSideEncryption</a> <tt>::</tt> <a>Maybe</a>
--   <a>ServerSideEncryption</a></li>
--   <li><a>coStorageClass</a> <tt>::</tt> <a>Maybe</a>
--   <a>StorageClass</a></li>
--   <li><a>coWebsiteRedirectLocation</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
copyObject :: Text -> Text -> Text -> CopyObject

-- | The canned ACL to apply to the object.
coACL :: Lens' CopyObject (Maybe ObjectCannedACL)
coBucket :: Lens' CopyObject Text

-- | Specifies caching behavior along the request/reply chain.
coCacheControl :: Lens' CopyObject (Maybe Text)

-- | Specifies presentational information for the object.
coContentDisposition :: Lens' CopyObject (Maybe Text)

-- | Specifies what content encodings have been applied to the object and
--   thus what decoding mechanisms must be applied to obtain the media-type
--   referenced by the Content-Type header field.
coContentEncoding :: Lens' CopyObject (Maybe Text)

-- | The language the content is in.
coContentLanguage :: Lens' CopyObject (Maybe Text)

-- | A standard MIME type describing the format of the object data.
coContentType :: Lens' CopyObject (Maybe Text)

-- | The name of the source bucket and key name of the source object,
--   separated by a slash (/). Must be URL-encoded.
coCopySource :: Lens' CopyObject Text

-- | Copies the object if its entity tag (ETag) matches the specified tag.
coCopySourceIfMatch :: Lens' CopyObject (Maybe Text)

-- | Copies the object if it has been modified since the specified time.
coCopySourceIfModifiedSince :: Lens' CopyObject (Maybe UTCTime)

-- | Copies the object if its entity tag (ETag) is different than the
--   specified ETag.
coCopySourceIfNoneMatch :: Lens' CopyObject (Maybe Text)

-- | Copies the object if it hasn't been modified since the specified time.
coCopySourceIfUnmodifiedSince :: Lens' CopyObject (Maybe UTCTime)

-- | Specifies the algorithm to use when decrypting the source object
--   (e.g., AES256).
coCopySourceSSECustomerAlgorithm :: Lens' CopyObject (Maybe Text)

-- | Specifies the customer-provided encryption key for Amazon S3 to use to
--   decrypt the source object. The encryption key provided in this header
--   must be one that was used when the source object was created.
coCopySourceSSECustomerKey :: Lens' CopyObject (Maybe Text)

-- | Specifies the 128-bit MD5 digest of the encryption key according to
--   RFC 1321. Amazon S3 uses this header for a message integrity check to
--   ensure the encryption key was transmitted without error.
coCopySourceSSECustomerKeyMD5 :: Lens' CopyObject (Maybe Text)

-- | The date and time at which the object is no longer cacheable.
coExpires :: Lens' CopyObject (Maybe UTCTime)

-- | Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the
--   object.
coGrantFullControl :: Lens' CopyObject (Maybe Text)

-- | Allows grantee to read the object data and its metadata.
coGrantRead :: Lens' CopyObject (Maybe Text)

-- | Allows grantee to read the object ACL.
coGrantReadACP :: Lens' CopyObject (Maybe Text)

-- | Allows grantee to write the ACL for the applicable object.
coGrantWriteACP :: Lens' CopyObject (Maybe Text)
coKey :: Lens' CopyObject Text

-- | A map of metadata to store with the object in S3.
coMetadata :: Lens' CopyObject (HashMap (CI Text) Text)

-- | Specifies whether the metadata is copied from the source object or
--   replaced with metadata provided in the request.
coMetadataDirective :: Lens' CopyObject (Maybe MetadataDirective)
coRequestPayer :: Lens' CopyObject (Maybe RequestPayer)

-- | Specifies the algorithm to use to when encrypting the object (e.g.,
--   AES256, aws:kms).
coSSECustomerAlgorithm :: Lens' CopyObject (Maybe Text)

-- | Specifies the customer-provided encryption key for Amazon S3 to use in
--   encrypting data. This value is used to store the object and then it is
--   discarded; Amazon does not store the encryption key. The key must be
--   appropriate for use with the algorithm specified in the
--   x-amz-server-side​-encryption​-customer-algorithm header.
coSSECustomerKey :: Lens' CopyObject (Maybe Text)

-- | Specifies the 128-bit MD5 digest of the encryption key according to
--   RFC 1321. Amazon S3 uses this header for a message integrity check to
--   ensure the encryption key was transmitted without error.
coSSECustomerKeyMD5 :: Lens' CopyObject (Maybe Text)

-- | Specifies the AWS KMS key ID to use for object encryption. All GET and
--   PUT requests for an object protected by AWS KMS will fail if not made
--   via SSL or using SigV4. Documentation on configuring any of the
--   officially supported AWS SDKs and CLI can be found at
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingAWSSDK.html#specify-signature-version</a>
coSSEKMSKeyId :: Lens' CopyObject (Maybe Text)

-- | The Server-side encryption algorithm used when storing this object in
--   S3 (e.g., AES256, aws:kms).
coServerSideEncryption :: Lens' CopyObject (Maybe ServerSideEncryption)

-- | The type of storage to use for the object. Defaults to
--   <tt>STANDARD</tt>.
coStorageClass :: Lens' CopyObject (Maybe StorageClass)

-- | If the bucket is configured as a website, redirects requests for this
--   object to another object in the same bucket or to an external URL.
--   Amazon S3 stores the value of this header in the object metadata.
coWebsiteRedirectLocation :: Lens' CopyObject (Maybe Text)
data CopyObjectResponse

-- | <a>CopyObjectResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>corCopyObjectResult</a> <tt>::</tt> <a>Maybe</a>
--   <a>CopyObjectResult</a></li>
--   <li><a>corCopySourceVersionId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>corExpiration</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>corRequestCharged</a> <tt>::</tt> <a>Maybe</a>
--   <a>RequestCharged</a></li>
--   <li><a>corSSECustomerAlgorithm</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>corSSECustomerKeyMD5</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>corSSEKMSKeyId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>corServerSideEncryption</a> <tt>::</tt> <a>Maybe</a>
--   <a>ServerSideEncryption</a></li>
--   </ul>
copyObjectResponse :: CopyObjectResponse
corCopyObjectResult :: Lens' CopyObjectResponse (Maybe CopyObjectResult)
corCopySourceVersionId :: Lens' CopyObjectResponse (Maybe Text)

-- | If the object expiration is configured, the response includes this
--   header.
corExpiration :: Lens' CopyObjectResponse (Maybe Text)
corRequestCharged :: Lens' CopyObjectResponse (Maybe RequestCharged)

-- | If server-side encryption with a customer-provided encryption key was
--   requested, the response will include this header confirming the
--   encryption algorithm used.
corSSECustomerAlgorithm :: Lens' CopyObjectResponse (Maybe Text)

-- | If server-side encryption with a customer-provided encryption key was
--   requested, the response will include this header to provide round trip
--   message integrity verification of the customer-provided encryption
--   key.
corSSECustomerKeyMD5 :: Lens' CopyObjectResponse (Maybe Text)

-- | If present, specifies the ID of the AWS Key Management Service (KMS)
--   master encryption key that was used for the object.
corSSEKMSKeyId :: Lens' CopyObjectResponse (Maybe Text)

-- | The Server-side encryption algorithm used when storing this object in
--   S3 (e.g., AES256, aws:kms).
corServerSideEncryption :: Lens' CopyObjectResponse (Maybe ServerSideEncryption)
instance Eq CopyObject
instance Read CopyObject
instance Show CopyObject
instance Eq CopyObjectResponse
instance Read CopyObjectResponse
instance Show CopyObjectResponse
instance AWSRequest CopyObject
instance ToXML CopyObject
instance ToXMLRoot CopyObject
instance ToHeaders CopyObject
instance ToQuery CopyObject
instance ToPath CopyObject


-- | Completes a multipart upload by assembling previously uploaded parts.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/CompleteMultipartUpload.html</a>
module Network.AWS.S3.CompleteMultipartUpload
data CompleteMultipartUpload

-- | <a>CompleteMultipartUpload</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cmu1Bucket</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cmu1Key</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cmu1MultipartUpload</a> <tt>::</tt> <a>Maybe</a>
--   <a>CompletedMultipartUpload</a></li>
--   <li><a>cmu1RequestPayer</a> <tt>::</tt> <a>Maybe</a>
--   <a>RequestPayer</a></li>
--   <li><a>cmu1UploadId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
completeMultipartUpload :: Text -> Text -> Text -> CompleteMultipartUpload
cmu1Bucket :: Lens' CompleteMultipartUpload Text
cmu1Key :: Lens' CompleteMultipartUpload Text
cmu1MultipartUpload :: Lens' CompleteMultipartUpload (Maybe CompletedMultipartUpload)
cmu1RequestPayer :: Lens' CompleteMultipartUpload (Maybe RequestPayer)
cmu1UploadId :: Lens' CompleteMultipartUpload Text
data CompleteMultipartUploadResponse

-- | <a>CompleteMultipartUploadResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cmur1Bucket</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cmur1ETag</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cmur1Expiration</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cmur1Key</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cmur1Location</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cmur1RequestCharged</a> <tt>::</tt> <a>Maybe</a>
--   <a>RequestCharged</a></li>
--   <li><a>cmur1SSEKMSKeyId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cmur1ServerSideEncryption</a> <tt>::</tt> <a>Maybe</a>
--   <a>ServerSideEncryption</a></li>
--   <li><a>cmur1VersionId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
completeMultipartUploadResponse :: CompleteMultipartUploadResponse
cmur1Bucket :: Lens' CompleteMultipartUploadResponse (Maybe Text)

-- | Entity tag of the object.
cmur1ETag :: Lens' CompleteMultipartUploadResponse (Maybe Text)

-- | If the object expiration is configured, this will contain the
--   expiration date (expiry-date) and rule ID (rule-id). The value of
--   rule-id is URL encoded.
cmur1Expiration :: Lens' CompleteMultipartUploadResponse (Maybe Text)
cmur1Key :: Lens' CompleteMultipartUploadResponse (Maybe Text)
cmur1Location :: Lens' CompleteMultipartUploadResponse (Maybe Text)
cmur1RequestCharged :: Lens' CompleteMultipartUploadResponse (Maybe RequestCharged)

-- | If present, specifies the ID of the AWS Key Management Service (KMS)
--   master encryption key that was used for the object.
cmur1SSEKMSKeyId :: Lens' CompleteMultipartUploadResponse (Maybe Text)

-- | The Server-side encryption algorithm used when storing this object in
--   S3 (e.g., AES256, aws:kms).
cmur1ServerSideEncryption :: Lens' CompleteMultipartUploadResponse (Maybe ServerSideEncryption)

-- | Version of the object.
cmur1VersionId :: Lens' CompleteMultipartUploadResponse (Maybe Text)
instance Eq CompleteMultipartUpload
instance Read CompleteMultipartUpload
instance Show CompleteMultipartUpload
instance Eq CompleteMultipartUploadResponse
instance Read CompleteMultipartUploadResponse
instance Show CompleteMultipartUploadResponse
instance AWSRequest CompleteMultipartUpload
instance ToXML CompleteMultipartUpload
instance ToXMLRoot CompleteMultipartUpload
instance ToHeaders CompleteMultipartUpload
instance ToQuery CompleteMultipartUpload
instance ToPath CompleteMultipartUpload


-- | Aborts a multipart upload.
--   
--   To verify that all parts have been removed, so you don't get charged
--   for the part storage, you should call the List Parts operation and
--   ensure the parts list is empty.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonS3/latest/API/AbortMultipartUpload.html</a>
module Network.AWS.S3.AbortMultipartUpload
data AbortMultipartUpload

-- | <a>AbortMultipartUpload</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>amuBucket</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>amuKey</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>amuRequestPayer</a> <tt>::</tt> <a>Maybe</a>
--   <a>RequestPayer</a></li>
--   <li><a>amuUploadId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
abortMultipartUpload :: Text -> Text -> Text -> AbortMultipartUpload
amuBucket :: Lens' AbortMultipartUpload Text
amuKey :: Lens' AbortMultipartUpload Text
amuRequestPayer :: Lens' AbortMultipartUpload (Maybe RequestPayer)
amuUploadId :: Lens' AbortMultipartUpload Text
data AbortMultipartUploadResponse

-- | <a>AbortMultipartUploadResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>amurRequestCharged</a> <tt>::</tt> <a>Maybe</a>
--   <a>RequestCharged</a></li>
--   </ul>
abortMultipartUploadResponse :: AbortMultipartUploadResponse
amurRequestCharged :: Lens' AbortMultipartUploadResponse (Maybe RequestCharged)
instance Eq AbortMultipartUpload
instance Read AbortMultipartUpload
instance Show AbortMultipartUpload
instance Eq AbortMultipartUploadResponse
instance Read AbortMultipartUploadResponse
instance Show AbortMultipartUploadResponse
instance AWSRequest AbortMultipartUpload
instance ToXML AbortMultipartUpload
instance ToXMLRoot AbortMultipartUpload
instance ToHeaders AbortMultipartUpload
instance ToQuery AbortMultipartUpload
instance ToPath AbortMultipartUpload


-- | Amazon Simple Storage Service is storage for the Internet. Amazon S3
--   has a simple web services interface that you can use to store and
--   retrieve any amount of data, at any time, from anywhere on the web. It
--   gives any developer access to the same highly scalable, reliable,
--   fast, inexpensive data storage infrastructure that Amazon uses to run
--   its own global network of web sites. The service aims to maximize
--   benefits of scale and to pass those benefits on to developers.
module Network.AWS.S3
