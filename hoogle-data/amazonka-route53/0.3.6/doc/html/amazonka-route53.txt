-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Amazon Route 53 SDK.
--   
@package amazonka-route53
@version 0.3.6

module Network.AWS.Route53.Types

-- | Version <tt>2013-04-01</tt> of the Amazon Route 53 service.
data Route53
data RESTError :: *
ns :: Text
data AliasTarget

-- | <a>AliasTarget</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>atDNSName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>atEvaluateTargetHealth</a> <tt>::</tt> <a>Bool</a></li>
--   <li><a>atHostedZoneId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
aliasTarget :: Text -> Text -> Bool -> AliasTarget

-- | <i>Alias resource record sets only:</i> The external DNS name
--   associated with the AWS Resource.
--   
--   For more information and an example, see <a>Creating Alias Resource
--   Record Sets</a> in the <i>Amazon Route 53 Developer Guide</i>
--   
--   .
atDNSName :: Lens' AliasTarget Text

-- | <i>Alias resource record sets only:</i> A boolean value that indicates
--   whether this Resource Record Set should respect the health status of
--   any health checks associated with the ALIAS target record which it is
--   linked to.
--   
--   For more information and an example, see <a>Creating Alias Resource
--   Record Sets</a> in the <i>Amazon Route 53 Developer Guide</i>
--   
--   .
atEvaluateTargetHealth :: Lens' AliasTarget Bool

-- | <i>Alias resource record sets only:</i> The value of the hosted zone
--   ID for the AWS resource.
--   
--   For more information and an example, see <a>Creating Alias Resource
--   Record Sets</a> in the <i>Amazon Route 53 Developer Guide</i>
--   
--   .
atHostedZoneId :: Lens' AliasTarget Text
data ResourceRecord

-- | <a>ResourceRecord</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rrValue</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
resourceRecord :: Text -> ResourceRecord

-- | The value of the <tt>Value</tt> element for the current resource
--   record set.
rrValue :: Lens' ResourceRecord Text
data Tag

-- | <a>Tag</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>tagKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>tagValue</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
tag :: Tag

-- | The key for a <a>Tag</a>.
tagKey :: Lens' Tag (Maybe Text)

-- | The value for a <a>Tag</a>.
tagValue :: Lens' Tag (Maybe Text)
data GeoLocationDetails

-- | <a>GeoLocationDetails</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gldContinentCode</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gldContinentName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gldCountryCode</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gldCountryName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gldSubdivisionCode</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>gldSubdivisionName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
geoLocationDetails :: GeoLocationDetails

-- | The code for a continent geo location. Note: only continent locations
--   have a continent code.
gldContinentCode :: Lens' GeoLocationDetails (Maybe Text)

-- | The name of the continent. This element is only present if
--   <tt>ContinentCode</tt> is also present.
gldContinentName :: Lens' GeoLocationDetails (Maybe Text)

-- | The code for a country geo location. The default location uses
--   <a>*</a> for the country code and will match all locations that are
--   not matched by a geo location.
--   
--   The default geo location uses a <a>*</a> for the country code. All
--   other country codes follow the ISO 3166 two-character code.
gldCountryCode :: Lens' GeoLocationDetails (Maybe Text)

-- | The name of the country. This element is only present if
--   <tt>CountryCode</tt> is also present.
gldCountryName :: Lens' GeoLocationDetails (Maybe Text)

-- | The code for a country's subdivision (e.g., a province of Canada). A
--   subdivision code is only valid with the appropriate country code.
gldSubdivisionCode :: Lens' GeoLocationDetails (Maybe Text)

-- | The name of the subdivision. This element is only present if
--   <tt>SubdivisionCode</tt> is also present.
gldSubdivisionName :: Lens' GeoLocationDetails (Maybe Text)
data HealthCheck

-- | <a>HealthCheck</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>hcCallerReference</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>hcHealthCheckConfig</a> <tt>::</tt>
--   <a>HealthCheckConfig</a></li>
--   <li><a>hcHealthCheckVersion</a> <tt>::</tt> <a>Natural</a></li>
--   <li><a>hcId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
healthCheck :: Text -> Text -> HealthCheckConfig -> Natural -> HealthCheck

-- | A unique string that identifies the request to create the health
--   check.
hcCallerReference :: Lens' HealthCheck Text

-- | A complex type that contains the health check configuration.
hcHealthCheckConfig :: Lens' HealthCheck HealthCheckConfig

-- | The version of the health check. You can optionally pass this value in
--   a call to <tt>UpdateHealthCheck</tt> to prevent overwriting another
--   change to the health check.
hcHealthCheckVersion :: Lens' HealthCheck Natural

-- | The ID of the specified health check.
hcId :: Lens' HealthCheck Text
data VPCRegion

-- | ap-northeast-1
ApNortheast1 :: VPCRegion

-- | ap-southeast-1
ApSoutheast1 :: VPCRegion

-- | ap-southeast-2
ApSoutheast2 :: VPCRegion

-- | cn-north-1
CnNorth1 :: VPCRegion

-- | eu-central-1
EuCentral1 :: VPCRegion

-- | eu-west-1
EuWest1 :: VPCRegion

-- | sa-east-1
SaEast1 :: VPCRegion

-- | us-east-1
UsEast1 :: VPCRegion

-- | us-west-1
UsWest1 :: VPCRegion

-- | us-west-2
UsWest2 :: VPCRegion
data RecordType

-- | A
A :: RecordType

-- | AAAA
AAAA :: RecordType

-- | CNAME
CNAME :: RecordType

-- | MX
MX :: RecordType

-- | NS
NS :: RecordType

-- | PTR
PTR :: RecordType

-- | SOA
SOA :: RecordType

-- | SPF
SPF :: RecordType

-- | SRV
SRV :: RecordType

-- | TXT
TXT :: RecordType
data ChangeAction

-- | CREATE
Create :: ChangeAction

-- | DELETE
Delete' :: ChangeAction

-- | UPSERT
Upsert :: ChangeAction
data TagResourceType

-- | healthcheck
Healthcheck :: TagResourceType

-- | hostedzone
Hostedzone :: TagResourceType
data HealthCheckConfig

-- | <a>HealthCheckConfig</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>hccFailureThreshold</a> <tt>::</tt> <a>Maybe</a>
--   <a>Natural</a></li>
--   <li><a>hccFullyQualifiedDomainName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>hccIPAddress</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>hccPort</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>hccRequestInterval</a> <tt>::</tt> <a>Maybe</a>
--   <a>Natural</a></li>
--   <li><a>hccResourcePath</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>hccSearchString</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>hccType</a> <tt>::</tt> <a>HealthCheckType</a></li>
--   </ul>
healthCheckConfig :: HealthCheckType -> HealthCheckConfig

-- | The number of consecutive health checks that an endpoint must pass or
--   fail for Route 53 to change the current status of the endpoint from
--   unhealthy to healthy or vice versa.
--   
--   Valid values are integers between 1 and 10. For more information, see
--   "How Amazon Route 53 Determines Whether an Endpoint Is Healthy" in the
--   Amazon Route 53 Developer Guide.
hccFailureThreshold :: Lens' HealthCheckConfig (Maybe Natural)

-- | Fully qualified domain name of the instance to be health checked.
hccFullyQualifiedDomainName :: Lens' HealthCheckConfig (Maybe Text)

-- | IP Address of the instance being checked.
hccIPAddress :: Lens' HealthCheckConfig (Maybe Text)

-- | Port on which connection will be opened to the instance to health
--   check. For HTTP and HTTP_STR_MATCH this defaults to 80 if the port is
--   not specified. For HTTPS and HTTPS_STR_MATCH this defaults to 443 if
--   the port is not specified.
hccPort :: Lens' HealthCheckConfig (Maybe Natural)

-- | The number of seconds between the time that Route 53 gets a response
--   from your endpoint and the time that it sends the next health-check
--   request.
--   
--   Each Route 53 health checker makes requests at this interval. Valid
--   values are 10 and 30. The default value is 30.
hccRequestInterval :: Lens' HealthCheckConfig (Maybe Natural)

-- | Path to ping on the instance to check the health. Required for HTTP,
--   HTTPS, HTTP_STR_MATCH, and HTTPS_STR_MATCH health checks, HTTP request
--   is issued to the instance on the given port and path.
hccResourcePath :: Lens' HealthCheckConfig (Maybe Text)

-- | A string to search for in the body of a health check response.
--   Required for HTTP_STR_MATCH and HTTPS_STR_MATCH health checks.
hccSearchString :: Lens' HealthCheckConfig (Maybe Text)

-- | The type of health check to be performed. Currently supported types
--   are TCP, HTTP, HTTPS, HTTP_STR_MATCH, and HTTPS_STR_MATCH.
hccType :: Lens' HealthCheckConfig HealthCheckType
data Change

-- | <a>Change</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cAction</a> <tt>::</tt> <a>ChangeAction</a></li>
--   <li><a>cResourceRecordSet</a> <tt>::</tt>
--   <a>ResourceRecordSet</a></li>
--   </ul>
change :: ChangeAction -> ResourceRecordSet -> Change

-- | The action to perform.
--   
--   Valid values: <tt>CREATE</tt> | <a>DELETE</a> | <tt>UPSERT</tt>
cAction :: Lens' Change ChangeAction

-- | Information about the resource record set to create or delete.
cResourceRecordSet :: Lens' Change ResourceRecordSet
data Failover

-- | PRIMARY
Primary :: Failover

-- | SECONDARY
Secondary :: Failover
data HostedZone

-- | <a>HostedZone</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>hzCallerReference</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>hzConfig</a> <tt>::</tt> <a>Maybe</a>
--   <a>HostedZoneConfig</a></li>
--   <li><a>hzId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>hzName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>hzResourceRecordSetCount</a> <tt>::</tt> <a>Maybe</a>
--   <a>Integer</a></li>
--   </ul>
hostedZone :: Text -> Text -> Text -> HostedZone

-- | A unique string that identifies the request to create the hosted zone.
hzCallerReference :: Lens' HostedZone Text

-- | A complex type that contains the <tt>Comment</tt> element.
hzConfig :: Lens' HostedZone (Maybe HostedZoneConfig)

-- | The ID of the specified hosted zone.
hzId :: Lens' HostedZone Text

-- | The name of the domain. This must be a fully-specified domain, for
--   example, www.example.com. The trailing dot is optional; Route 53
--   assumes that the domain name is fully qualified. This means that Route
--   53 treats www.example.com (without a trailing dot) and
--   www.example.com. (with a trailing dot) as identical.
--   
--   This is the name you have registered with your DNS registrar. You
--   should ask your registrar to change the authoritative name servers for
--   your domain to the set of <tt>NameServers</tt> elements returned in
--   <a>DelegationSet</a>.
hzName :: Lens' HostedZone Text

-- | Total number of resource record sets in the hosted zone.
hzResourceRecordSetCount :: Lens' HostedZone (Maybe Integer)
data ResourceTagSet

-- | <a>ResourceTagSet</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rtsResourceId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rtsResourceType</a> <tt>::</tt> <a>Maybe</a>
--   <a>TagResourceType</a></li>
--   <li><a>rtsTags</a> <tt>::</tt> <a>NonEmpty</a> <a>Tag</a></li>
--   </ul>
resourceTagSet :: NonEmpty Tag -> ResourceTagSet

-- | The ID for the specified resource.
rtsResourceId :: Lens' ResourceTagSet (Maybe Text)

-- | The type of the resource.
--   
--   <ul>
--   <li>The resource type for health checks is <tt>healthcheck</tt>.</li>
--   <li>The resource type for hosted zones is <tt>hostedzone</tt>.</li>
--   </ul>
rtsResourceType :: Lens' ResourceTagSet (Maybe TagResourceType)

-- | The tags associated with the specified resource.
rtsTags :: Lens' ResourceTagSet (NonEmpty Tag)
data ChangeStatus

-- | INSYNC
Insync :: ChangeStatus

-- | PENDING
Pending :: ChangeStatus
data ChangeBatch

-- | <a>ChangeBatch</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cbChanges</a> <tt>::</tt> <a>NonEmpty</a> <a>Change</a></li>
--   <li><a>cbComment</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
changeBatch :: NonEmpty Change -> ChangeBatch

-- | A complex type that contains one <a>Change</a> element for each
--   resource record set that you want to create or delete.
cbChanges :: Lens' ChangeBatch (NonEmpty Change)

-- | <i>Optional:</i> Any comments you want to include about a change batch
--   request.
cbComment :: Lens' ChangeBatch (Maybe Text)
data StatusReport

-- | <a>StatusReport</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>srCheckedTime</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>srStatus</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
statusReport :: StatusReport

-- | The date and time the health check status was observed, in the format
--   'YYYY-MM-DDThh:mm:ssZ', as specified in the ISO 8601 standard (for
--   example, 2009-11-19T19:37:58Z). The <tt>Z</tt> after the time
--   indicates that the time is listed in Coordinated Universal Time (UTC),
--   which is synonymous with Greenwich Mean Time in this context.
srCheckedTime :: Lens' StatusReport (Maybe UTCTime)

-- | The observed health check status.
srStatus :: Lens' StatusReport (Maybe Text)
data HealthCheckType

-- | HTTP
Http :: HealthCheckType

-- | HTTP_STR_MATCH
HttpStrMatch :: HealthCheckType

-- | HTTPS
Https :: HealthCheckType

-- | HTTPS_STR_MATCH
HttpsStrMatch :: HealthCheckType

-- | TCP
Tcp :: HealthCheckType
data VPC

-- | <a>VPC</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vpcVPCId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>vpcVPCRegion</a> <tt>::</tt> <a>Maybe</a> <a>VPCRegion</a></li>
--   </ul>
vpc :: VPC
vpcVPCId :: Lens' VPC (Maybe Text)
vpcVPCRegion :: Lens' VPC (Maybe VPCRegion)
data HostedZoneConfig

-- | <a>HostedZoneConfig</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>hzcComment</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>hzcPrivateZone</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   </ul>
hostedZoneConfig :: HostedZoneConfig

-- | An optional comment about your hosted zone. If you don't want to
--   specify a comment, you can omit the <a>HostedZoneConfig</a> and
--   <tt>Comment</tt> elements from the XML document.
hzcComment :: Lens' HostedZoneConfig (Maybe Text)

-- | A value that indicates whether this is a private hosted zone. The
--   value is returned in the response; do not specify it in the request.
hzcPrivateZone :: Lens' HostedZoneConfig (Maybe Bool)
data ResourceRecordSet

-- | <a>ResourceRecordSet</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rrsAliasTarget</a> <tt>::</tt> <a>Maybe</a>
--   <a>AliasTarget</a></li>
--   <li><a>rrsFailover</a> <tt>::</tt> <a>Maybe</a> <a>Failover</a></li>
--   <li><a>rrsGeoLocation</a> <tt>::</tt> <a>Maybe</a>
--   <a>GeoLocation</a></li>
--   <li><a>rrsHealthCheckId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rrsName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rrsRegion</a> <tt>::</tt> <a>Maybe</a> <a>Region</a></li>
--   <li><a>rrsResourceRecords</a> <tt>::</tt> <a>NonEmpty</a>
--   <a>ResourceRecord</a></li>
--   <li><a>rrsSetIdentifier</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rrsTTL</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>rrsType</a> <tt>::</tt> <a>RecordType</a></li>
--   <li><a>rrsWeight</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   </ul>
resourceRecordSet :: Text -> RecordType -> NonEmpty ResourceRecord -> ResourceRecordSet

-- | <i>Alias resource record sets only:</i> Information about the AWS
--   resource to which you are redirecting traffic.
rrsAliasTarget :: Lens' ResourceRecordSet (Maybe AliasTarget)

-- | <i>Failover resource record sets only:</i> Among resource record sets
--   that have the same combination of DNS name and type, a value that
--   indicates whether the current resource record set is a primary or
--   secondary resource record set. A failover set may contain at most one
--   resource record set marked as primary and one resource record set
--   marked as secondary. A resource record set marked as primary will be
--   returned if any of the following are true: (1) an associated health
--   check is passing, (2) if the resource record set is an alias with the
--   evaluate target health and at least one target resource record set is
--   healthy, (3) both the primary and secondary resource record set are
--   failing health checks or (4) there is no secondary resource record
--   set. A secondary resource record set will be returned if: (1) the
--   primary is failing a health check and either the secondary is passing
--   a health check or has no associated health check, or (2) there is no
--   primary resource record set.
--   
--   Valid values: <tt>PRIMARY</tt> | <tt>SECONDARY</tt>
rrsFailover :: Lens' ResourceRecordSet (Maybe Failover)

-- | <i>Geo location resource record sets only:</i> Among resource record
--   sets that have the same combination of DNS name and type, a value that
--   specifies the geo location for the current resource record set.
rrsGeoLocation :: Lens' ResourceRecordSet (Maybe GeoLocation)

-- | <i>Health Check resource record sets only, not required for alias
--   resourcerecord sets:</i> An identifier that is used to identify health
--   check associated with the resource record set.
rrsHealthCheckId :: Lens' ResourceRecordSet (Maybe Text)

-- | The domain name of the current resource record set.
rrsName :: Lens' ResourceRecordSet Text

-- | <i>Latency-based resource record sets only:</i> Among resource record
--   sets that have the same combination of DNS name and type, a value that
--   specifies the AWS region for the current resource record set.
rrsRegion :: Lens' ResourceRecordSet (Maybe Region)

-- | A complex type that contains the resource records for the current
--   resource record set.
rrsResourceRecords :: Lens' ResourceRecordSet (NonEmpty ResourceRecord)

-- | <i>Weighted, Latency, Geo, and Failover resource record sets only:</i>
--   An identifier that differentiates among multiple resource record sets
--   that have the same combination of DNS name and type.
rrsSetIdentifier :: Lens' ResourceRecordSet (Maybe Text)

-- | The cache time to live for the current resource record set.
rrsTTL :: Lens' ResourceRecordSet (Maybe Natural)

-- | The type of the current resource record set.
rrsType :: Lens' ResourceRecordSet RecordType

-- | <i>Weighted resource record sets only:</i> Among resource record sets
--   that have the same combination of DNS name and type, a value that
--   determines what portion of traffic for the current resource record set
--   is routed to the associated location.
rrsWeight :: Lens' ResourceRecordSet (Maybe Natural)
data DelegationSet

-- | <a>DelegationSet</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsCallerReference</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dsId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dsNameServers</a> <tt>::</tt> <a>NonEmpty</a> <a>Text</a></li>
--   </ul>
delegationSet :: NonEmpty Text -> DelegationSet
dsCallerReference :: Lens' DelegationSet (Maybe Text)
dsId :: Lens' DelegationSet (Maybe Text)

-- | A complex type that contains the authoritative name servers for the
--   hosted zone. Use the method provided by your domain registrar to add
--   an NS record to your domain for each <tt>NameServer</tt> that is
--   assigned to your hosted zone.
dsNameServers :: Lens' DelegationSet (NonEmpty Text)
data ChangeInfo

-- | <a>ChangeInfo</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ciComment</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ciId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ciStatus</a> <tt>::</tt> <a>ChangeStatus</a></li>
--   <li><a>ciSubmittedAt</a> <tt>::</tt> <a>UTCTime</a></li>
--   </ul>
changeInfo :: Text -> ChangeStatus -> UTCTime -> ChangeInfo

-- | A complex type that describes change information about changes made to
--   your hosted zone.
--   
--   This element contains an ID that you use when performing a
--   <tt>GetChange</tt> action to get detailed information about the
--   change.
ciComment :: Lens' ChangeInfo (Maybe Text)

-- | The ID of the request. Use this ID to track when the change has
--   completed across all Amazon Route 53 DNS servers.
ciId :: Lens' ChangeInfo Text

-- | The current state of the request. <tt>PENDING</tt> indicates that this
--   request has not yet been applied to all Amazon Route 53 DNS servers.
--   
--   Valid Values: <tt>PENDING</tt> | <tt>INSYNC</tt>
ciStatus :: Lens' ChangeInfo ChangeStatus

-- | The date and time the change was submitted, in the format
--   'YYYY-MM-DDThh:mm:ssZ' , as specified in the ISO 8601 standard (for
--   example, 2009-11-19T19:37:58Z). The <tt>Z</tt> after the time
--   indicates that the time is listed in Coordinated Universal Time (UTC),
--   which is synonymous with Greenwich Mean Time in this context.
ciSubmittedAt :: Lens' ChangeInfo UTCTime
data GeoLocation

-- | <a>GeoLocation</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>glContinentCode</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>glCountryCode</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>glSubdivisionCode</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
geoLocation :: GeoLocation

-- | The code for a continent geo location. Note: only continent locations
--   have a continent code.
--   
--   Valid values: <tt>AF</tt> | <tt>AN</tt> | <tt>AS</tt> | <tt>EU</tt> |
--   <tt>OC</tt> | <tt>NA</tt> | <tt>SA</tt>
--   
--   Constraint: Specifying <tt>ContinentCode</tt> with either
--   <tt>CountryCode</tt> or <tt>SubdivisionCode</tt> returns an
--   <tt>InvalidInput</tt> error.
glContinentCode :: Lens' GeoLocation (Maybe Text)

-- | The code for a country geo location. The default location uses
--   <a>*</a> for the country code and will match all locations that are
--   not matched by a geo location.
--   
--   The default geo location uses a <a>*</a> for the country code. All
--   other country codes follow the ISO 3166 two-character code.
glCountryCode :: Lens' GeoLocation (Maybe Text)

-- | The code for a country's subdivision (e.g., a province of Canada). A
--   subdivision code is only valid with the appropriate country code.
--   
--   Constraint: Specifying <tt>SubdivisionCode</tt> without
--   <tt>CountryCode</tt> returns an <tt>InvalidInput</tt> error.
glSubdivisionCode :: Lens' GeoLocation (Maybe Text)
data HealthCheckObservation

-- | <a>HealthCheckObservation</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>hcoIPAddress</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>hcoStatusReport</a> <tt>::</tt> <a>Maybe</a>
--   <a>StatusReport</a></li>
--   </ul>
healthCheckObservation :: HealthCheckObservation

-- | The IP address of the Route 53 health checker that performed the
--   health check.
hcoIPAddress :: Lens' HealthCheckObservation (Maybe Text)

-- | A complex type that contains information about the health check status
--   for the current observation.
hcoStatusReport :: Lens' HealthCheckObservation (Maybe StatusReport)

-- | The sum of available AWS regions.
data Region :: *

-- | Europe / eu-west-1
Ireland :: Region

-- | Europe / eu-central-1
Frankfurt :: Region

-- | Asia Pacific / ap-northeast-1
Tokyo :: Region

-- | Asia Pacific / ap-southeast-1
Singapore :: Region

-- | Asia Pacific / ap-southeast-2
Sydney :: Region

-- | China / cn-north-1
Beijing :: Region

-- | US / us-east-1
NorthVirginia :: Region

-- | US / us-west-1
NorthCalifornia :: Region

-- | US / us-west-2
Oregon :: Region

-- | AWS GovCloud / us-gov-west-1
GovCloud :: Region

-- | AWS GovCloud (FIPS 140-2) S3 Only / fips-us-gov-west-1
GovCloudFIPS :: Region

-- | South America / sa-east-1
SaoPaulo :: Region
instance Eq AliasTarget
instance Ord AliasTarget
instance Read AliasTarget
instance Show AliasTarget
instance Eq ResourceRecord
instance Ord ResourceRecord
instance Read ResourceRecord
instance Show ResourceRecord
instance Monoid ResourceRecord
instance IsString ResourceRecord
instance Eq Tag
instance Ord Tag
instance Read Tag
instance Show Tag
instance Eq GeoLocationDetails
instance Ord GeoLocationDetails
instance Read GeoLocationDetails
instance Show GeoLocationDetails
instance Eq VPCRegion
instance Ord VPCRegion
instance Read VPCRegion
instance Show VPCRegion
instance Generic VPCRegion
instance Enum VPCRegion
instance Eq RecordType
instance Ord RecordType
instance Read RecordType
instance Show RecordType
instance Generic RecordType
instance Enum RecordType
instance Eq ChangeAction
instance Ord ChangeAction
instance Read ChangeAction
instance Show ChangeAction
instance Generic ChangeAction
instance Enum ChangeAction
instance Eq TagResourceType
instance Ord TagResourceType
instance Read TagResourceType
instance Show TagResourceType
instance Generic TagResourceType
instance Enum TagResourceType
instance Eq Failover
instance Ord Failover
instance Read Failover
instance Show Failover
instance Generic Failover
instance Enum Failover
instance Eq ResourceTagSet
instance Read ResourceTagSet
instance Show ResourceTagSet
instance Eq ChangeStatus
instance Ord ChangeStatus
instance Read ChangeStatus
instance Show ChangeStatus
instance Generic ChangeStatus
instance Enum ChangeStatus
instance Eq StatusReport
instance Ord StatusReport
instance Read StatusReport
instance Show StatusReport
instance Eq HealthCheckType
instance Ord HealthCheckType
instance Read HealthCheckType
instance Show HealthCheckType
instance Generic HealthCheckType
instance Enum HealthCheckType
instance Eq HealthCheckConfig
instance Read HealthCheckConfig
instance Show HealthCheckConfig
instance Eq HealthCheck
instance Read HealthCheck
instance Show HealthCheck
instance Eq VPC
instance Read VPC
instance Show VPC
instance Eq HostedZoneConfig
instance Ord HostedZoneConfig
instance Read HostedZoneConfig
instance Show HostedZoneConfig
instance Eq HostedZone
instance Read HostedZone
instance Show HostedZone
instance Eq DelegationSet
instance Ord DelegationSet
instance Read DelegationSet
instance Show DelegationSet
instance Eq ChangeInfo
instance Read ChangeInfo
instance Show ChangeInfo
instance Eq GeoLocation
instance Ord GeoLocation
instance Read GeoLocation
instance Show GeoLocation
instance Eq ResourceRecordSet
instance Read ResourceRecordSet
instance Show ResourceRecordSet
instance Eq Change
instance Read Change
instance Show Change
instance Eq ChangeBatch
instance Read ChangeBatch
instance Show ChangeBatch
instance Eq HealthCheckObservation
instance Read HealthCheckObservation
instance Show HealthCheckObservation
instance Datatype D1VPCRegion
instance Constructor C1_0VPCRegion
instance Constructor C1_1VPCRegion
instance Constructor C1_2VPCRegion
instance Constructor C1_3VPCRegion
instance Constructor C1_4VPCRegion
instance Constructor C1_5VPCRegion
instance Constructor C1_6VPCRegion
instance Constructor C1_7VPCRegion
instance Constructor C1_8VPCRegion
instance Constructor C1_9VPCRegion
instance Datatype D1RecordType
instance Constructor C1_0RecordType
instance Constructor C1_1RecordType
instance Constructor C1_2RecordType
instance Constructor C1_3RecordType
instance Constructor C1_4RecordType
instance Constructor C1_5RecordType
instance Constructor C1_6RecordType
instance Constructor C1_7RecordType
instance Constructor C1_8RecordType
instance Constructor C1_9RecordType
instance Datatype D1ChangeAction
instance Constructor C1_0ChangeAction
instance Constructor C1_1ChangeAction
instance Constructor C1_2ChangeAction
instance Datatype D1TagResourceType
instance Constructor C1_0TagResourceType
instance Constructor C1_1TagResourceType
instance Datatype D1Failover
instance Constructor C1_0Failover
instance Constructor C1_1Failover
instance Datatype D1ChangeStatus
instance Constructor C1_0ChangeStatus
instance Constructor C1_1ChangeStatus
instance Datatype D1HealthCheckType
instance Constructor C1_0HealthCheckType
instance Constructor C1_1HealthCheckType
instance Constructor C1_2HealthCheckType
instance Constructor C1_3HealthCheckType
instance Constructor C1_4HealthCheckType
instance ToXML HealthCheckObservation
instance ToXMLRoot HealthCheckObservation
instance FromXML HealthCheckObservation
instance ToXML GeoLocation
instance FromXML GeoLocation
instance ToXML ChangeInfo
instance ToXMLRoot ChangeInfo
instance FromXML ChangeInfo
instance ToXML DelegationSet
instance ToXMLRoot DelegationSet
instance FromXML DelegationSet
instance ToXML ResourceRecordSet
instance FromXML ResourceRecordSet
instance ToXML HostedZoneConfig
instance FromXML HostedZoneConfig
instance ToXML VPC
instance ToXMLRoot VPC
instance FromXML VPC
instance ToXML HealthCheckType
instance FromXML HealthCheckType
instance ToQuery HealthCheckType
instance ToHeader HealthCheckType
instance ToByteString HealthCheckType
instance ToText HealthCheckType
instance FromText HealthCheckType
instance Hashable HealthCheckType
instance ToXML StatusReport
instance FromXML StatusReport
instance ToXML ChangeBatch
instance FromXML ChangeBatch
instance ToXML ChangeStatus
instance FromXML ChangeStatus
instance ToQuery ChangeStatus
instance ToHeader ChangeStatus
instance ToByteString ChangeStatus
instance ToText ChangeStatus
instance FromText ChangeStatus
instance Hashable ChangeStatus
instance ToXML ResourceTagSet
instance ToXMLRoot ResourceTagSet
instance FromXML ResourceTagSet
instance ToXML HostedZone
instance ToXMLRoot HostedZone
instance FromXML HostedZone
instance ToXML Failover
instance FromXML Failover
instance ToQuery Failover
instance ToHeader Failover
instance ToByteString Failover
instance ToText Failover
instance FromText Failover
instance Hashable Failover
instance ToXML Change
instance FromXML Change
instance ToXML HealthCheckConfig
instance FromXML HealthCheckConfig
instance ToXML TagResourceType
instance FromXML TagResourceType
instance ToQuery TagResourceType
instance ToHeader TagResourceType
instance ToByteString TagResourceType
instance ToText TagResourceType
instance FromText TagResourceType
instance Hashable TagResourceType
instance ToXML ChangeAction
instance FromXML ChangeAction
instance ToQuery ChangeAction
instance ToHeader ChangeAction
instance ToByteString ChangeAction
instance ToText ChangeAction
instance FromText ChangeAction
instance Hashable ChangeAction
instance ToXML RecordType
instance FromXML RecordType
instance ToQuery RecordType
instance ToHeader RecordType
instance ToByteString RecordType
instance ToText RecordType
instance FromText RecordType
instance Hashable RecordType
instance ToXML VPCRegion
instance FromXML VPCRegion
instance ToQuery VPCRegion
instance ToHeader VPCRegion
instance ToByteString VPCRegion
instance ToText VPCRegion
instance FromText VPCRegion
instance Hashable VPCRegion
instance ToXML HealthCheck
instance ToXMLRoot HealthCheck
instance FromXML HealthCheck
instance ToXML GeoLocationDetails
instance ToXMLRoot GeoLocationDetails
instance FromXML GeoLocationDetails
instance ToXML Tag
instance FromXML Tag
instance ToXML ResourceRecord
instance FromXML ResourceRecord
instance ToXML AliasTarget
instance FromXML AliasTarget
instance AWSService Route53


-- | This action updates an existing health check.
--   
--   To update a health check, send a <a>POST</a> request to the
--   '2013-04-01<i>healthcheck</i><i>health check ID</i> resource. The
--   request body must include an XML document with an
--   <tt>UpdateHealthCheckRequest</tt> element. The response returns an
--   <a>UpdateHealthCheckResponse</a> element, which contains metadata
--   about the health check.
--   
--   
--   <a>http://docs.aws.amazon.com/Route53/latest/APIReference/API_UpdateHealthCheck.html</a>
module Network.AWS.Route53.UpdateHealthCheck
data UpdateHealthCheck

-- | <a>UpdateHealthCheck</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uhcFailureThreshold</a> <tt>::</tt> <a>Maybe</a>
--   <a>Natural</a></li>
--   <li><a>uhcFullyQualifiedDomainName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>uhcHealthCheckId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>uhcHealthCheckVersion</a> <tt>::</tt> <a>Maybe</a>
--   <a>Natural</a></li>
--   <li><a>uhcIPAddress</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>uhcPort</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>uhcResourcePath</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>uhcSearchString</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
updateHealthCheck :: Text -> UpdateHealthCheck

-- | The number of consecutive health checks that an endpoint must pass or
--   fail for Route 53 to change the current status of the endpoint from
--   unhealthy to healthy or vice versa.
--   
--   Valid values are integers between 1 and 10. For more information, see
--   "How Amazon Route 53 Determines Whether an Endpoint Is Healthy" in the
--   Amazon Route 53 Developer Guide.
--   
--   Specify this value only if you want to change it.
uhcFailureThreshold :: Lens' UpdateHealthCheck (Maybe Natural)

-- | Fully qualified domain name of the instance to be health checked.
--   
--   Specify this value only if you want to change it.
uhcFullyQualifiedDomainName :: Lens' UpdateHealthCheck (Maybe Text)

-- | The ID of the health check to update.
uhcHealthCheckId :: Lens' UpdateHealthCheck Text

-- | Optional. When you specify a health check version, Route 53 compares
--   this value with the current value in the health check, which prevents
--   you from updating the health check when the versions don't match.
--   Using <tt>HealthCheckVersion</tt> lets you prevent overwriting another
--   change to the health check.
uhcHealthCheckVersion :: Lens' UpdateHealthCheck (Maybe Natural)

-- | The IP address of the resource that you want to check.
--   
--   Specify this value only if you want to change it.
uhcIPAddress :: Lens' UpdateHealthCheck (Maybe Text)

-- | The port on which you want Route 53 to open a connection to perform
--   health checks.
--   
--   Specify this value only if you want to change it.
uhcPort :: Lens' UpdateHealthCheck (Maybe Natural)

-- | The path that you want Amazon Route 53 to request when performing
--   health checks. The path can be any value for which your endpoint will
--   return an HTTP status code of 2xx or 3xx when the endpoint is healthy,
--   for example the file <i>docs</i>route53-health-check.html.
--   
--   Specify this value only if you want to change it.
uhcResourcePath :: Lens' UpdateHealthCheck (Maybe Text)

-- | If the value of <tt>Type</tt> is <tt>HTTP_STR_MATCH</tt> or
--   <tt>HTTP_STR_MATCH</tt>, the string that you want Route 53 to search
--   for in the response body from the specified resource. If the string
--   appears in the response body, Route 53 considers the resource healthy.
--   
--   Specify this value only if you want to change it.
uhcSearchString :: Lens' UpdateHealthCheck (Maybe Text)
data UpdateHealthCheckResponse

-- | <a>UpdateHealthCheckResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uhcrHealthCheck</a> <tt>::</tt> <a>HealthCheck</a></li>
--   </ul>
updateHealthCheckResponse :: HealthCheck -> UpdateHealthCheckResponse
uhcrHealthCheck :: Lens' UpdateHealthCheckResponse HealthCheck
instance Eq UpdateHealthCheck
instance Ord UpdateHealthCheck
instance Read UpdateHealthCheck
instance Show UpdateHealthCheck
instance Eq UpdateHealthCheckResponse
instance Read UpdateHealthCheckResponse
instance Show UpdateHealthCheckResponse
instance FromXML UpdateHealthCheckResponse
instance AWSRequest UpdateHealthCheck
instance ToXML UpdateHealthCheck
instance ToXMLRoot UpdateHealthCheck
instance ToHeaders UpdateHealthCheck
instance ToQuery UpdateHealthCheck
instance ToPath UpdateHealthCheck


-- | To update the hosted zone comment, send a <a>POST</a> request to the
--   '2013-04-01<i>hostedzone</i><i>hosted zone ID</i> resource. The
--   request body must include an XML document with a
--   <tt>UpdateHostedZoneCommentRequest</tt> element. The response to this
--   request includes the modified <a>HostedZone</a> element.
--   
--   The comment can have a maximum length of 256 characters.
--   
--   
--   <a>http://docs.aws.amazon.com/Route53/latest/APIReference/API_UpdateHostedZoneComment.html</a>
module Network.AWS.Route53.UpdateHostedZoneComment
data UpdateHostedZoneComment

-- | <a>UpdateHostedZoneComment</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uhzcComment</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>uhzcId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
updateHostedZoneComment :: Text -> UpdateHostedZoneComment

-- | A comment about your hosted zone.
uhzcComment :: Lens' UpdateHostedZoneComment (Maybe Text)

-- | The ID of the hosted zone you want to update.
uhzcId :: Lens' UpdateHostedZoneComment Text
data UpdateHostedZoneCommentResponse

-- | <a>UpdateHostedZoneCommentResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uhzcrHostedZone</a> <tt>::</tt> <a>HostedZone</a></li>
--   </ul>
updateHostedZoneCommentResponse :: HostedZone -> UpdateHostedZoneCommentResponse
uhzcrHostedZone :: Lens' UpdateHostedZoneCommentResponse HostedZone
instance Eq UpdateHostedZoneComment
instance Ord UpdateHostedZoneComment
instance Read UpdateHostedZoneComment
instance Show UpdateHostedZoneComment
instance Eq UpdateHostedZoneCommentResponse
instance Read UpdateHostedZoneCommentResponse
instance Show UpdateHostedZoneCommentResponse
instance FromXML UpdateHostedZoneCommentResponse
instance AWSRequest UpdateHostedZoneComment
instance ToXML UpdateHostedZoneComment
instance ToXMLRoot UpdateHostedZoneComment
instance ToHeaders UpdateHostedZoneComment
instance ToQuery UpdateHostedZoneComment
instance ToPath UpdateHostedZoneComment


-- | 
--   <a>http://docs.aws.amazon.com/Route53/latest/APIReference/API_ListTagsForResources.html</a>
module Network.AWS.Route53.ListTagsForResources
data ListTagsForResources

-- | <a>ListTagsForResources</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ltfr1ResourceIds</a> <tt>::</tt> <a>NonEmpty</a>
--   <a>Text</a></li>
--   <li><a>ltfr1ResourceType</a> <tt>::</tt> <a>TagResourceType</a></li>
--   </ul>
listTagsForResources :: TagResourceType -> NonEmpty Text -> ListTagsForResources

-- | A complex type that contains the ResourceId element for each resource
--   for which you want to get a list of tags.
ltfr1ResourceIds :: Lens' ListTagsForResources (NonEmpty Text)

-- | The type of the resources.
--   
--   <ul>
--   <li>The resource type for health checks is <tt>healthcheck</tt>.</li>
--   <li>The resource type for hosted zones is <tt>hostedzone</tt>.</li>
--   </ul>
ltfr1ResourceType :: Lens' ListTagsForResources TagResourceType
data ListTagsForResourcesResponse

-- | <a>ListTagsForResourcesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ltfrrResourceTagSets</a> <tt>::</tt>
--   [<a>ResourceTagSet</a>]</li>
--   </ul>
listTagsForResourcesResponse :: ListTagsForResourcesResponse

-- | A list of <a>ResourceTagSet</a>s containing tags associated with the
--   specified resources.
ltfrrResourceTagSets :: Lens' ListTagsForResourcesResponse [ResourceTagSet]
instance Eq ListTagsForResources
instance Read ListTagsForResources
instance Show ListTagsForResources
instance Eq ListTagsForResourcesResponse
instance Read ListTagsForResourcesResponse
instance Show ListTagsForResourcesResponse
instance Monoid ListTagsForResourcesResponse
instance Semigroup ListTagsForResourcesResponse
instance FromXML ListTagsForResourcesResponse
instance AWSRequest ListTagsForResources
instance ToXML ListTagsForResources
instance ToXMLRoot ListTagsForResources
instance ToHeaders ListTagsForResources
instance ToQuery ListTagsForResources
instance ToPath ListTagsForResources
instance IsList ListTagsForResourcesResponse


-- | 
--   <a>http://docs.aws.amazon.com/Route53/latest/APIReference/API_ListTagsForResource.html</a>
module Network.AWS.Route53.ListTagsForResource
data ListTagsForResource

-- | <a>ListTagsForResource</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ltfrResourceId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ltfrResourceType</a> <tt>::</tt> <a>TagResourceType</a></li>
--   </ul>
listTagsForResource :: TagResourceType -> Text -> ListTagsForResource

-- | The ID of the resource for which you want to retrieve tags.
ltfrResourceId :: Lens' ListTagsForResource Text

-- | The type of the resource.
--   
--   <ul>
--   <li>The resource type for health checks is <tt>healthcheck</tt>.</li>
--   <li>The resource type for hosted zones is <tt>hostedzone</tt>.</li>
--   </ul>
ltfrResourceType :: Lens' ListTagsForResource TagResourceType
data ListTagsForResourceResponse

-- | <a>ListTagsForResourceResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ltfrrResourceTagSet</a> <tt>::</tt> <a>ResourceTagSet</a></li>
--   </ul>
listTagsForResourceResponse :: ResourceTagSet -> ListTagsForResourceResponse

-- | A <a>ResourceTagSet</a> containing tags associated with the specified
--   resource.
ltfrrResourceTagSet :: Lens' ListTagsForResourceResponse ResourceTagSet
instance Eq ListTagsForResource
instance Read ListTagsForResource
instance Show ListTagsForResource
instance Eq ListTagsForResourceResponse
instance Read ListTagsForResourceResponse
instance Show ListTagsForResourceResponse
instance FromXML ListTagsForResourceResponse
instance AWSRequest ListTagsForResource
instance ToXML ListTagsForResource
instance ToXMLRoot ListTagsForResource
instance ToHeaders ListTagsForResource
instance ToQuery ListTagsForResource
instance ToPath ListTagsForResource


-- | To retrieve a list of your reusable delegation sets, send a <a>GET</a>
--   request to the '2013-04-01/delegationset' resource. The response to
--   this request includes a <tt>DelegationSets</tt> element with zero,
--   one, or multiple <a>DelegationSet</a> child elements. By default, the
--   list of delegation sets is displayed on a single page. You can control
--   the length of the page that is displayed by using the
--   <tt>MaxItems</tt> parameter. You can use the <tt>Marker</tt> parameter
--   to control the delegation set that the list begins with.
--   
--   Amazon Route 53 returns a maximum of 100 items. If you set MaxItems to
--   a value greater than 100, Amazon Route 53 returns only the first 100.
--   
--   
--   <a>http://docs.aws.amazon.com/Route53/latest/APIReference/API_ListReusableDelegationSets.html</a>
module Network.AWS.Route53.ListReusableDelegationSets
data ListReusableDelegationSets

-- | <a>ListReusableDelegationSets</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lrdsMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lrdsMaxItems</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listReusableDelegationSets :: ListReusableDelegationSets

-- | If the request returned more than one page of results, submit another
--   request and specify the value of <tt>NextMarker</tt> from the last
--   response in the <tt>marker</tt> parameter to get the next page of
--   results.
lrdsMarker :: Lens' ListReusableDelegationSets (Maybe Text)

-- | Specify the maximum number of reusable delegation sets to return per
--   page of results.
lrdsMaxItems :: Lens' ListReusableDelegationSets (Maybe Text)
data ListReusableDelegationSetsResponse

-- | <a>ListReusableDelegationSetsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lrdsrDelegationSets</a> <tt>::</tt> [<a>DelegationSet</a>]</li>
--   <li><a>lrdsrIsTruncated</a> <tt>::</tt> <a>Bool</a></li>
--   <li><a>lrdsrMarker</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>lrdsrMaxItems</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>lrdsrNextMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listReusableDelegationSetsResponse :: Text -> Bool -> Text -> ListReusableDelegationSetsResponse

-- | A complex type that contains information about the reusable delegation
--   sets associated with the current AWS account.
lrdsrDelegationSets :: Lens' ListReusableDelegationSetsResponse [DelegationSet]

-- | A flag indicating whether there are more reusable delegation sets to
--   be listed. If your results were truncated, you can make a follow-up
--   request for the next page of results by using the <tt>Marker</tt>
--   element.
--   
--   Valid Values: <tt>true</tt> | <tt>false</tt>
lrdsrIsTruncated :: Lens' ListReusableDelegationSetsResponse Bool

-- | If the request returned more than one page of results, submit another
--   request and specify the value of <tt>NextMarker</tt> from the last
--   response in the <tt>marker</tt> parameter to get the next page of
--   results.
lrdsrMarker :: Lens' ListReusableDelegationSetsResponse Text

-- | The maximum number of reusable delegation sets to be included in the
--   response body. If the number of reusable delegation sets associated
--   with this AWS account exceeds <tt>MaxItems</tt>, the value of
--   'ListReusablDelegationSetsResponse$IsTruncated' in the response is
--   <tt>true</tt>. Call <a>ListReusableDelegationSets</a> again and
--   specify the value of 'ListReusableDelegationSetsResponse$NextMarker'
--   in the 'ListReusableDelegationSetsRequest$Marker' element to get the
--   next page of results.
lrdsrMaxItems :: Lens' ListReusableDelegationSetsResponse Text

-- | Indicates where to continue listing reusable delegation sets. If
--   'ListReusableDelegationSetsResponse$IsTruncated' is <tt>true</tt>,
--   make another request to <a>ListReusableDelegationSets</a> and include
--   the value of the <tt>NextMarker</tt> element in the <tt>Marker</tt>
--   element to get the next page of results.
lrdsrNextMarker :: Lens' ListReusableDelegationSetsResponse (Maybe Text)
instance Eq ListReusableDelegationSets
instance Ord ListReusableDelegationSets
instance Read ListReusableDelegationSets
instance Show ListReusableDelegationSets
instance Eq ListReusableDelegationSetsResponse
instance Read ListReusableDelegationSetsResponse
instance Show ListReusableDelegationSetsResponse
instance FromXML ListReusableDelegationSetsResponse
instance AWSRequest ListReusableDelegationSets
instance ToXML ListReusableDelegationSets
instance ToXMLRoot ListReusableDelegationSets
instance ToHeaders ListReusableDelegationSets
instance ToQuery ListReusableDelegationSets
instance ToPath ListReusableDelegationSets


-- | Imagine all the resource record sets in a zone listed out in front of
--   you. Imagine them sorted lexicographically first by DNS name (with the
--   labels reversed, like "com.amazon.www" for example), and secondarily,
--   lexicographically by record type. This operation retrieves at most
--   MaxItems resource record sets from this list, in order, starting at a
--   position specified by the Name and Type arguments:
--   
--   If both Name and Type are omitted, this means start the results at the
--   first RRSET in the HostedZone. If Name is specified but Type is
--   omitted, this means start the results at the first RRSET in the list
--   whose name is greater than or equal to Name. If both Name and Type are
--   specified, this means start the results at the first RRSET in the list
--   whose name is greater than or equal to Name and whose type is greater
--   than or equal to Type. It is an error to specify the Type but not the
--   Name. Use ListResourceRecordSets to retrieve a single known record set
--   by specifying the record set's name and type, and setting MaxItems = 1
--   
--   To retrieve all the records in a HostedZone, first pause any processes
--   making calls to ChangeResourceRecordSets. Initially call
--   ListResourceRecordSets without a Name and Type to get the first page
--   of record sets. For subsequent calls, set Name and Type to the
--   NextName and NextType values returned by the previous response.
--   
--   In the presence of concurrent ChangeResourceRecordSets calls, there is
--   no consistency of results across calls to ListResourceRecordSets. The
--   only way to get a consistent multi-page snapshot of all RRSETs in a
--   zone is to stop making changes while pagination is in progress.
--   
--   However, the results from ListResourceRecordSets are consistent within
--   a page. If MakeChange calls are taking place concurrently, the result
--   of each one will either be completely visible in your results or not
--   at all. You will not see partial changes, or changes that do not
--   ultimately succeed. (This follows from the fact that MakeChange is
--   atomic)
--   
--   The results from ListResourceRecordSets are strongly consistent with
--   ChangeResourceRecordSets. To be precise, if a single process makes a
--   call to ChangeResourceRecordSets and receives a successful response,
--   the effects of that change will be visible in a subsequent call to
--   ListResourceRecordSets by that process.
--   
--   
--   <a>http://docs.aws.amazon.com/Route53/latest/APIReference/API_ListResourceRecordSets.html</a>
module Network.AWS.Route53.ListResourceRecordSets
data ListResourceRecordSets

-- | <a>ListResourceRecordSets</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lrrsHostedZoneId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>lrrsMaxItems</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lrrsStartRecordIdentifier</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>lrrsStartRecordName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>lrrsStartRecordType</a> <tt>::</tt> <a>Maybe</a>
--   <a>RecordType</a></li>
--   </ul>
listResourceRecordSets :: Text -> ListResourceRecordSets

-- | The ID of the hosted zone that contains the resource record sets that
--   you want to get.
lrrsHostedZoneId :: Lens' ListResourceRecordSets Text

-- | The maximum number of records you want in the response body.
lrrsMaxItems :: Lens' ListResourceRecordSets (Maybe Text)

-- | <i>Weighted resource record sets only:</i> If results were truncated
--   for a given DNS name and type, specify the value of
--   'ListResourceRecordSetsResponse$NextRecordIdentifier' from the
--   previous response to get the next resource record set that has the
--   current DNS name and type.
lrrsStartRecordIdentifier :: Lens' ListResourceRecordSets (Maybe Text)

-- | The first name in the lexicographic ordering of domain names that you
--   want the <a>ListResourceRecordSets</a> request to list.
lrrsStartRecordName :: Lens' ListResourceRecordSets (Maybe Text)

-- | The DNS type at which to begin the listing of resource record sets.
--   
--   Valid values: <a>A</a> | <a>AAAA</a> | <a>CNAME</a> | <a>MX</a> |
--   <a>NS</a> | <a>PTR</a> | <a>SOA</a> | <a>SPF</a> | <a>SRV</a> |
--   <a>TXT</a>
--   
--   Values for Weighted Resource Record Sets: <a>A</a> | <a>AAAA</a> |
--   <a>CNAME</a> | <a>TXT</a>
--   
--   Values for Regional Resource Record Sets: <a>A</a> | <a>AAAA</a> |
--   <a>CNAME</a> | <a>TXT</a>
--   
--   Values for Alias Resource Record Sets: <a>A</a> | <a>AAAA</a>
--   
--   Constraint: Specifying 'type' without specifying <tt>name</tt> returns
--   an <tt>InvalidInput</tt> error.
lrrsStartRecordType :: Lens' ListResourceRecordSets (Maybe RecordType)
data ListResourceRecordSetsResponse

-- | <a>ListResourceRecordSetsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lrrsrIsTruncated</a> <tt>::</tt> <a>Bool</a></li>
--   <li><a>lrrsrMaxItems</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>lrrsrNextRecordIdentifier</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>lrrsrNextRecordName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>lrrsrNextRecordType</a> <tt>::</tt> <a>Maybe</a>
--   <a>RecordType</a></li>
--   <li><a>lrrsrResourceRecordSets</a> <tt>::</tt>
--   [<a>ResourceRecordSet</a>]</li>
--   </ul>
listResourceRecordSetsResponse :: Bool -> Text -> ListResourceRecordSetsResponse

-- | A flag that indicates whether there are more resource record sets to
--   be listed. If your results were truncated, you can make a follow-up
--   request for the next page of results by using the
--   'ListResourceRecordSetsResponse$NextRecordName' element.
--   
--   Valid Values: <tt>true</tt> | <tt>false</tt>
lrrsrIsTruncated :: Lens' ListResourceRecordSetsResponse Bool

-- | The maximum number of records you requested. The maximum value of
--   <tt>MaxItems</tt> is 100.
lrrsrMaxItems :: Lens' ListResourceRecordSetsResponse Text

-- | <i>Weighted resource record sets only:</i> If results were truncated
--   for a given DNS name and type, the value of <tt>SetIdentifier</tt> for
--   the next resource record set that has the current DNS name and type.
lrrsrNextRecordIdentifier :: Lens' ListResourceRecordSetsResponse (Maybe Text)

-- | If the results were truncated, the name of the next record in the
--   list. This element is present only if
--   'ListResourceRecordSetsResponse$IsTruncated' is true.
lrrsrNextRecordName :: Lens' ListResourceRecordSetsResponse (Maybe Text)

-- | If the results were truncated, the type of the next record in the
--   list. This element is present only if
--   'ListResourceRecordSetsResponse$IsTruncated' is true.
lrrsrNextRecordType :: Lens' ListResourceRecordSetsResponse (Maybe RecordType)

-- | A complex type that contains information about the resource record
--   sets that are returned by the request.
lrrsrResourceRecordSets :: Lens' ListResourceRecordSetsResponse [ResourceRecordSet]
instance Eq ListResourceRecordSets
instance Read ListResourceRecordSets
instance Show ListResourceRecordSets
instance Eq ListResourceRecordSetsResponse
instance Read ListResourceRecordSetsResponse
instance Show ListResourceRecordSetsResponse
instance AWSPager ListResourceRecordSets
instance FromXML ListResourceRecordSetsResponse
instance AWSRequest ListResourceRecordSets
instance ToXML ListResourceRecordSets
instance ToXMLRoot ListResourceRecordSets
instance ToHeaders ListResourceRecordSets
instance ToQuery ListResourceRecordSets
instance ToPath ListResourceRecordSets


-- | To retrieve a list of your hosted zones in lexicographic order, send a
--   <a>GET</a> request to the '2013-04-01/hostedzonesbyname' resource. The
--   response to this request includes a <tt>HostedZones</tt> element with
--   zero or more <a>HostedZone</a> child elements lexicographically
--   ordered by DNS name. By default, the list of hosted zones is displayed
--   on a single page. You can control the length of the page that is
--   displayed by using the <tt>MaxItems</tt> parameter. You can use the
--   <tt>DNSName</tt> and <tt>HostedZoneId</tt> parameters to control the
--   hosted zone that the list begins with.
--   
--   Amazon Route 53 returns a maximum of 100 items. If you set MaxItems to
--   a value greater than 100, Amazon Route 53 returns only the first 100.
--   
--   
--   <a>http://docs.aws.amazon.com/Route53/latest/APIReference/API_ListHostedZonesByName.html</a>
module Network.AWS.Route53.ListHostedZonesByName
data ListHostedZonesByName

-- | <a>ListHostedZonesByName</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lhzbnDNSName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lhzbnHostedZoneId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lhzbnMaxItems</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listHostedZonesByName :: ListHostedZonesByName

-- | The first name in the lexicographic ordering of domain names that you
--   want the <tt>ListHostedZonesByNameRequest</tt> request to list.
--   
--   If the request returned more than one page of results, submit another
--   request and specify the value of <tt>NextDNSName</tt> and
--   <tt>NextHostedZoneId</tt> from the last response in the
--   <tt>DNSName</tt> and <tt>HostedZoneId</tt> parameters to get the next
--   page of results.
lhzbnDNSName :: Lens' ListHostedZonesByName (Maybe Text)

-- | If the request returned more than one page of results, submit another
--   request and specify the value of <tt>NextDNSName</tt> and
--   <tt>NextHostedZoneId</tt> from the last response in the
--   <tt>DNSName</tt> and <tt>HostedZoneId</tt> parameters to get the next
--   page of results.
lhzbnHostedZoneId :: Lens' ListHostedZonesByName (Maybe Text)

-- | Specify the maximum number of hosted zones to return per page of
--   results.
lhzbnMaxItems :: Lens' ListHostedZonesByName (Maybe Text)
data ListHostedZonesByNameResponse

-- | <a>ListHostedZonesByNameResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lhzbnrDNSName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lhzbnrHostedZoneId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>lhzbnrHostedZones</a> <tt>::</tt> [<a>HostedZone</a>]</li>
--   <li><a>lhzbnrIsTruncated</a> <tt>::</tt> <a>Bool</a></li>
--   <li><a>lhzbnrMaxItems</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>lhzbnrNextDNSName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lhzbnrNextHostedZoneId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
listHostedZonesByNameResponse :: Bool -> Text -> ListHostedZonesByNameResponse

-- | The <tt>DNSName</tt> value sent in the request.
lhzbnrDNSName :: Lens' ListHostedZonesByNameResponse (Maybe Text)

-- | The <tt>HostedZoneId</tt> value sent in the request.
lhzbnrHostedZoneId :: Lens' ListHostedZonesByNameResponse (Maybe Text)

-- | A complex type that contains information about the hosted zones
--   associated with the current AWS account.
lhzbnrHostedZones :: Lens' ListHostedZonesByNameResponse [HostedZone]

-- | A flag indicating whether there are more hosted zones to be listed. If
--   your results were truncated, you can make a follow-up request for the
--   next page of results by using the <tt>NextDNSName</tt> and
--   <tt>NextHostedZoneId</tt> elements.
--   
--   Valid Values: <tt>true</tt> | <tt>false</tt>
lhzbnrIsTruncated :: Lens' ListHostedZonesByNameResponse Bool

-- | The maximum number of hosted zones to be included in the response
--   body. If the number of hosted zones associated with this AWS account
--   exceeds <tt>MaxItems</tt>, the value of
--   'ListHostedZonesByNameResponse$IsTruncated' in the response is
--   <tt>true</tt> . Call <a>ListHostedZonesByName</a> again and specify
--   the value of 'ListHostedZonesByNameResponse$NextDNSName' and
--   'ListHostedZonesByNameResponse$NextHostedZoneId' elements respectively
--   to get the next page of results.
lhzbnrMaxItems :: Lens' ListHostedZonesByNameResponse Text

-- | If 'ListHostedZonesByNameResponse$IsTruncated' is <tt>true</tt>, there
--   are more hosted zones associated with the current AWS account. To get
--   the next page of results, make another request to
--   <a>ListHostedZonesByName</a>. Specify the value of
--   'ListHostedZonesByNameResponse$NextDNSName' in the
--   'ListHostedZonesByNameRequest$DNSName' element and
--   'ListHostedZonesByNameResponse$NextHostedZoneId' in the
--   'ListHostedZonesByNameRequest$HostedZoneId' element.
lhzbnrNextDNSName :: Lens' ListHostedZonesByNameResponse (Maybe Text)

-- | If 'ListHostedZonesByNameResponse$IsTruncated' is <tt>true</tt>, there
--   are more hosted zones associated with the current AWS account. To get
--   the next page of results, make another request to
--   <a>ListHostedZonesByName</a>. Specify the value of
--   'ListHostedZonesByNameResponse$NextDNSName' in the
--   'ListHostedZonesByNameRequest$DNSName' element and
--   'ListHostedZonesByNameResponse$NextHostedZoneId' in the
--   'ListHostedZonesByNameRequest$HostedZoneId' element.
lhzbnrNextHostedZoneId :: Lens' ListHostedZonesByNameResponse (Maybe Text)
instance Eq ListHostedZonesByName
instance Ord ListHostedZonesByName
instance Read ListHostedZonesByName
instance Show ListHostedZonesByName
instance Eq ListHostedZonesByNameResponse
instance Read ListHostedZonesByNameResponse
instance Show ListHostedZonesByNameResponse
instance FromXML ListHostedZonesByNameResponse
instance AWSRequest ListHostedZonesByName
instance ToXML ListHostedZonesByName
instance ToXMLRoot ListHostedZonesByName
instance ToHeaders ListHostedZonesByName
instance ToQuery ListHostedZonesByName
instance ToPath ListHostedZonesByName


-- | To retrieve a list of your hosted zones, send a <a>GET</a> request to
--   the '2013-04-01/hostedzone' resource. The response to this request
--   includes a <tt>HostedZones</tt> element with zero, one, or multiple
--   <a>HostedZone</a> child elements. By default, the list of hosted zones
--   is displayed on a single page. You can control the length of the page
--   that is displayed by using the <tt>MaxItems</tt> parameter. You can
--   use the <tt>Marker</tt> parameter to control the hosted zone that the
--   list begins with.
--   
--   Amazon Route 53 returns a maximum of 100 items. If you set MaxItems to
--   a value greater than 100, Amazon Route 53 returns only the first 100.
--   
--   
--   <a>http://docs.aws.amazon.com/Route53/latest/APIReference/API_ListHostedZones.html</a>
module Network.AWS.Route53.ListHostedZones
data ListHostedZones

-- | <a>ListHostedZones</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lhzDelegationSetId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>lhzMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lhzMaxItems</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listHostedZones :: ListHostedZones
lhzDelegationSetId :: Lens' ListHostedZones (Maybe Text)

-- | If the request returned more than one page of results, submit another
--   request and specify the value of <tt>NextMarker</tt> from the last
--   response in the <tt>marker</tt> parameter to get the next page of
--   results.
lhzMarker :: Lens' ListHostedZones (Maybe Text)

-- | Specify the maximum number of hosted zones to return per page of
--   results.
lhzMaxItems :: Lens' ListHostedZones (Maybe Text)
data ListHostedZonesResponse

-- | <a>ListHostedZonesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lhzrHostedZones</a> <tt>::</tt> [<a>HostedZone</a>]</li>
--   <li><a>lhzrIsTruncated</a> <tt>::</tt> <a>Bool</a></li>
--   <li><a>lhzrMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lhzrMaxItems</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>lhzrNextMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listHostedZonesResponse :: Bool -> Text -> ListHostedZonesResponse

-- | A complex type that contains information about the hosted zones
--   associated with the current AWS account.
lhzrHostedZones :: Lens' ListHostedZonesResponse [HostedZone]

-- | A flag indicating whether there are more hosted zones to be listed. If
--   your results were truncated, you can make a follow-up request for the
--   next page of results by using the <tt>Marker</tt> element.
--   
--   Valid Values: <tt>true</tt> | <tt>false</tt>
lhzrIsTruncated :: Lens' ListHostedZonesResponse Bool

-- | If the request returned more than one page of results, submit another
--   request and specify the value of <tt>NextMarker</tt> from the last
--   response in the <tt>marker</tt> parameter to get the next page of
--   results.
lhzrMarker :: Lens' ListHostedZonesResponse (Maybe Text)

-- | The maximum number of hosted zones to be included in the response
--   body. If the number of hosted zones associated with this AWS account
--   exceeds <tt>MaxItems</tt>, the value of
--   'ListHostedZonesResponse$IsTruncated' in the response is
--   <tt>true</tt>. Call <a>ListHostedZones</a> again and specify the value
--   of 'ListHostedZonesResponse$NextMarker' in the
--   'ListHostedZonesRequest$Marker' element to get the next page of
--   results.
lhzrMaxItems :: Lens' ListHostedZonesResponse Text

-- | Indicates where to continue listing hosted zones. If
--   'ListHostedZonesResponse$IsTruncated' is <tt>true</tt>, make another
--   request to <a>ListHostedZones</a> and include the value of the
--   <tt>NextMarker</tt> element in the <tt>Marker</tt> element to get the
--   next page of results.
lhzrNextMarker :: Lens' ListHostedZonesResponse (Maybe Text)
instance Eq ListHostedZones
instance Ord ListHostedZones
instance Read ListHostedZones
instance Show ListHostedZones
instance Eq ListHostedZonesResponse
instance Read ListHostedZonesResponse
instance Show ListHostedZonesResponse
instance AWSPager ListHostedZones
instance FromXML ListHostedZonesResponse
instance AWSRequest ListHostedZones
instance ToXML ListHostedZones
instance ToXMLRoot ListHostedZones
instance ToHeaders ListHostedZones
instance ToQuery ListHostedZones
instance ToPath ListHostedZones


-- | To retrieve a list of your health checks, send a <a>GET</a> request to
--   the '2013-04-01/healthcheck' resource. The response to this request
--   includes a <tt>HealthChecks</tt> element with zero, one, or multiple
--   <a>HealthCheck</a> child elements. By default, the list of health
--   checks is displayed on a single page. You can control the length of
--   the page that is displayed by using the <tt>MaxItems</tt> parameter.
--   You can use the <tt>Marker</tt> parameter to control the health check
--   that the list begins with.
--   
--   Amazon Route 53 returns a maximum of 100 items. If you set MaxItems to
--   a value greater than 100, Amazon Route 53 returns only the first 100.
--   
--   
--   <a>http://docs.aws.amazon.com/Route53/latest/APIReference/API_ListHealthChecks.html</a>
module Network.AWS.Route53.ListHealthChecks
data ListHealthChecks

-- | <a>ListHealthChecks</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lhcMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lhcMaxItems</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listHealthChecks :: ListHealthChecks

-- | If the request returned more than one page of results, submit another
--   request and specify the value of <tt>NextMarker</tt> from the last
--   response in the <tt>marker</tt> parameter to get the next page of
--   results.
lhcMarker :: Lens' ListHealthChecks (Maybe Text)

-- | Specify the maximum number of health checks to return per page of
--   results.
lhcMaxItems :: Lens' ListHealthChecks (Maybe Text)
data ListHealthChecksResponse

-- | <a>ListHealthChecksResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lhcrHealthChecks</a> <tt>::</tt> [<a>HealthCheck</a>]</li>
--   <li><a>lhcrIsTruncated</a> <tt>::</tt> <a>Bool</a></li>
--   <li><a>lhcrMarker</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>lhcrMaxItems</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>lhcrNextMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listHealthChecksResponse :: Text -> Bool -> Text -> ListHealthChecksResponse

-- | A complex type that contains information about the health checks
--   associated with the current AWS account.
lhcrHealthChecks :: Lens' ListHealthChecksResponse [HealthCheck]

-- | A flag indicating whether there are more health checks to be listed.
--   If your results were truncated, you can make a follow-up request for
--   the next page of results by using the <tt>Marker</tt> element.
--   
--   Valid Values: <tt>true</tt> | <tt>false</tt>
lhcrIsTruncated :: Lens' ListHealthChecksResponse Bool

-- | If the request returned more than one page of results, submit another
--   request and specify the value of <tt>NextMarker</tt> from the last
--   response in the <tt>marker</tt> parameter to get the next page of
--   results.
lhcrMarker :: Lens' ListHealthChecksResponse Text

-- | The maximum number of health checks to be included in the response
--   body. If the number of health checks associated with this AWS account
--   exceeds <tt>MaxItems</tt>, the value of
--   'ListHealthChecksResponse$IsTruncated' in the response is
--   <tt>true</tt>. Call <a>ListHealthChecks</a> again and specify the
--   value of 'ListHealthChecksResponse$NextMarker' in the
--   'ListHostedZonesRequest$Marker' element to get the next page of
--   results.
lhcrMaxItems :: Lens' ListHealthChecksResponse Text

-- | Indicates where to continue listing health checks. If
--   'ListHealthChecksResponse$IsTruncated' is <tt>true</tt>, make another
--   request to <a>ListHealthChecks</a> and include the value of the
--   <tt>NextMarker</tt> element in the <tt>Marker</tt> element to get the
--   next page of results.
lhcrNextMarker :: Lens' ListHealthChecksResponse (Maybe Text)
instance Eq ListHealthChecks
instance Ord ListHealthChecks
instance Read ListHealthChecks
instance Show ListHealthChecks
instance Eq ListHealthChecksResponse
instance Read ListHealthChecksResponse
instance Show ListHealthChecksResponse
instance AWSPager ListHealthChecks
instance FromXML ListHealthChecksResponse
instance AWSRequest ListHealthChecks
instance ToXML ListHealthChecks
instance ToXMLRoot ListHealthChecks
instance ToHeaders ListHealthChecks
instance ToQuery ListHealthChecks
instance ToPath ListHealthChecks


-- | To retrieve a list of supported geo locations, send a <a>GET</a>
--   request to the '2013-04-01/geolocations' resource. The response to
--   this request includes a <tt>GeoLocationDetailsList</tt> element with
--   zero, one, or multiple <a>GeoLocationDetails</a> child elements. The
--   list is sorted by country code, and then subdivision code, followed by
--   continents at the end of the list.
--   
--   By default, the list of geo locations is displayed on a single page.
--   You can control the length of the page that is displayed by using the
--   <tt>MaxItems</tt> parameter. If the list is truncated,
--   <tt>IsTruncated</tt> will be set to <i>true</i> and a combination of
--   'NextContinentCode, NextCountryCode, NextSubdivisionCode' will be
--   populated. You can pass these as parameters to
--   'StartContinentCode,StartCountryCode, StartSubdivisionCode' to control
--   the geo location that the list begins with.
--   
--   
--   <a>http://docs.aws.amazon.com/Route53/latest/APIReference/API_ListGeoLocations.html</a>
module Network.AWS.Route53.ListGeoLocations
data ListGeoLocations

-- | <a>ListGeoLocations</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lglMaxItems</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lglStartContinentCode</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>lglStartCountryCode</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>lglStartSubdivisionCode</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
listGeoLocations :: ListGeoLocations

-- | The maximum number of geo locations you want in the response body.
lglMaxItems :: Lens' ListGeoLocations (Maybe Text)

-- | The first continent code in the lexicographic ordering of geo
--   locations that you want the <a>ListGeoLocations</a> request to list.
--   For non-continent geo locations, this should be null.
--   
--   Valid values: <tt>AF</tt> | <tt>AN</tt> | <tt>AS</tt> | <tt>EU</tt> |
--   <tt>OC</tt> | <tt>NA</tt> | <tt>SA</tt>
--   
--   Constraint: Specifying <tt>ContinentCode</tt> with either
--   <tt>CountryCode</tt> or <tt>SubdivisionCode</tt> returns an
--   <tt>InvalidInput</tt> error.
lglStartContinentCode :: Lens' ListGeoLocations (Maybe Text)

-- | The first country code in the lexicographic ordering of geo locations
--   that you want the <a>ListGeoLocations</a> request to list.
--   
--   The default geo location uses a <a>*</a> for the country code. All
--   other country codes follow the ISO 3166 two-character code.
lglStartCountryCode :: Lens' ListGeoLocations (Maybe Text)

-- | The first subdivision code in the lexicographic ordering of geo
--   locations that you want the <a>ListGeoLocations</a> request to list.
--   
--   Constraint: Specifying <tt>SubdivisionCode</tt> without
--   <tt>CountryCode</tt> returns an <tt>InvalidInput</tt> error.
lglStartSubdivisionCode :: Lens' ListGeoLocations (Maybe Text)
data ListGeoLocationsResponse

-- | <a>ListGeoLocationsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lglrGeoLocationDetailsList</a> <tt>::</tt>
--   [<a>GeoLocationDetails</a>]</li>
--   <li><a>lglrIsTruncated</a> <tt>::</tt> <a>Bool</a></li>
--   <li><a>lglrMaxItems</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>lglrNextContinentCode</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>lglrNextCountryCode</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>lglrNextSubdivisionCode</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
listGeoLocationsResponse :: Bool -> Text -> ListGeoLocationsResponse

-- | A complex type that contains information about the geo locations that
--   are returned by the request.
lglrGeoLocationDetailsList :: Lens' ListGeoLocationsResponse [GeoLocationDetails]

-- | A flag that indicates whether there are more geo locations to be
--   listed. If your results were truncated, you can make a follow-up
--   request for the next page of results by using the values included in
--   the 'ListGeoLocationsResponse$NextContinentCode',
--   'ListGeoLocationsResponse$NextCountryCode' and
--   'ListGeoLocationsResponse$NextSubdivisionCode' elements.
--   
--   Valid Values: <tt>true</tt> | <tt>false</tt>
lglrIsTruncated :: Lens' ListGeoLocationsResponse Bool

-- | The maximum number of records you requested. The maximum value of
--   <tt>MaxItems</tt> is 100.
lglrMaxItems :: Lens' ListGeoLocationsResponse Text

-- | If the results were truncated, the continent code of the next geo
--   location in the list. This element is present only if
--   'ListGeoLocationsResponse$IsTruncated' is true and the next geo
--   location to list is a continent location.
lglrNextContinentCode :: Lens' ListGeoLocationsResponse (Maybe Text)

-- | If the results were truncated, the country code of the next geo
--   location in the list. This element is present only if
--   'ListGeoLocationsResponse$IsTruncated' is true and the next geo
--   location to list is not a continent location.
lglrNextCountryCode :: Lens' ListGeoLocationsResponse (Maybe Text)

-- | If the results were truncated, the subdivision code of the next geo
--   location in the list. This element is present only if
--   'ListGeoLocationsResponse$IsTruncated' is true and the next geo
--   location has a subdivision.
lglrNextSubdivisionCode :: Lens' ListGeoLocationsResponse (Maybe Text)
instance Eq ListGeoLocations
instance Ord ListGeoLocations
instance Read ListGeoLocations
instance Show ListGeoLocations
instance Eq ListGeoLocationsResponse
instance Read ListGeoLocationsResponse
instance Show ListGeoLocationsResponse
instance FromXML ListGeoLocationsResponse
instance AWSRequest ListGeoLocations
instance ToXML ListGeoLocations
instance ToXMLRoot ListGeoLocations
instance ToHeaders ListGeoLocations
instance ToQuery ListGeoLocations
instance ToPath ListGeoLocations


-- | To retrieve the reusable delegation set, send a <a>GET</a> request to
--   the '2013-04-01<i>delegationset</i><i>delegation set ID</i> resource.
--   
--   
--   <a>http://docs.aws.amazon.com/Route53/latest/APIReference/API_GetReusableDelegationSet.html</a>
module Network.AWS.Route53.GetReusableDelegationSet
data GetReusableDelegationSet

-- | <a>GetReusableDelegationSet</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>grdsId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getReusableDelegationSet :: Text -> GetReusableDelegationSet

-- | The ID of the reusable delegation set for which you want to get a list
--   of the name server.
grdsId :: Lens' GetReusableDelegationSet Text
data GetReusableDelegationSetResponse

-- | <a>GetReusableDelegationSetResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>grdsrDelegationSet</a> <tt>::</tt> <a>DelegationSet</a></li>
--   </ul>
getReusableDelegationSetResponse :: DelegationSet -> GetReusableDelegationSetResponse

-- | A complex type that contains the information about the nameservers for
--   the specified delegation set ID.
grdsrDelegationSet :: Lens' GetReusableDelegationSetResponse DelegationSet
instance Eq GetReusableDelegationSet
instance Ord GetReusableDelegationSet
instance Read GetReusableDelegationSet
instance Show GetReusableDelegationSet
instance Monoid GetReusableDelegationSet
instance IsString GetReusableDelegationSet
instance Eq GetReusableDelegationSetResponse
instance Read GetReusableDelegationSetResponse
instance Show GetReusableDelegationSetResponse
instance FromXML GetReusableDelegationSetResponse
instance AWSRequest GetReusableDelegationSet
instance ToXML GetReusableDelegationSet
instance ToXMLRoot GetReusableDelegationSet
instance ToHeaders GetReusableDelegationSet
instance ToQuery GetReusableDelegationSet
instance ToPath GetReusableDelegationSet


-- | To retrieve a count of all your hosted zones, send a <a>GET</a>
--   request to the '2013-04-01/hostedzonecount' resource.
--   
--   
--   <a>http://docs.aws.amazon.com/Route53/latest/APIReference/API_GetHostedZoneCount.html</a>
module Network.AWS.Route53.GetHostedZoneCount
data GetHostedZoneCount

-- | <a>GetHostedZoneCount</a> constructor.
getHostedZoneCount :: GetHostedZoneCount
data GetHostedZoneCountResponse

-- | <a>GetHostedZoneCountResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ghzcrHostedZoneCount</a> <tt>::</tt> <a>Integer</a></li>
--   </ul>
getHostedZoneCountResponse :: Integer -> GetHostedZoneCountResponse

-- | The number of hosted zones associated with the current AWS account.
ghzcrHostedZoneCount :: Lens' GetHostedZoneCountResponse Integer
instance Eq GetHostedZoneCount
instance Ord GetHostedZoneCount
instance Read GetHostedZoneCount
instance Show GetHostedZoneCount
instance Generic GetHostedZoneCount
instance Eq GetHostedZoneCountResponse
instance Ord GetHostedZoneCountResponse
instance Read GetHostedZoneCountResponse
instance Show GetHostedZoneCountResponse
instance Enum GetHostedZoneCountResponse
instance Num GetHostedZoneCountResponse
instance Integral GetHostedZoneCountResponse
instance Real GetHostedZoneCountResponse
instance Datatype D1GetHostedZoneCount
instance Constructor C1_0GetHostedZoneCount
instance FromXML GetHostedZoneCountResponse
instance AWSRequest GetHostedZoneCount
instance ToXML GetHostedZoneCount
instance ToXMLRoot GetHostedZoneCount
instance ToHeaders GetHostedZoneCount
instance ToQuery GetHostedZoneCount
instance ToPath GetHostedZoneCount


-- | To retrieve the delegation set for a hosted zone, send a <a>GET</a>
--   request to the '2013-04-01<i>hostedzone</i><i>hosted zone ID</i>
--   resource. The delegation set is the four Route 53 name servers that
--   were assigned to the hosted zone when you created it.
--   
--   
--   <a>http://docs.aws.amazon.com/Route53/latest/APIReference/API_GetHostedZone.html</a>
module Network.AWS.Route53.GetHostedZone
data GetHostedZone

-- | <a>GetHostedZone</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ghzId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getHostedZone :: Text -> GetHostedZone

-- | The ID of the hosted zone for which you want to get a list of the name
--   servers in the delegation set.
ghzId :: Lens' GetHostedZone Text
data GetHostedZoneResponse

-- | <a>GetHostedZoneResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ghzrDelegationSet</a> <tt>::</tt> <a>Maybe</a>
--   <a>DelegationSet</a></li>
--   <li><a>ghzrHostedZone</a> <tt>::</tt> <a>HostedZone</a></li>
--   <li><a>ghzrVPCs</a> <tt>::</tt> <a>NonEmpty</a> <a>VPC</a></li>
--   </ul>
getHostedZoneResponse :: HostedZone -> NonEmpty VPC -> GetHostedZoneResponse

-- | A complex type that contains information about the name servers for
--   the specified hosted zone.
ghzrDelegationSet :: Lens' GetHostedZoneResponse (Maybe DelegationSet)

-- | A complex type that contains the information about the specified
--   hosted zone.
ghzrHostedZone :: Lens' GetHostedZoneResponse HostedZone

-- | A complex type that contains information about VPCs associated with
--   the specified hosted zone.
ghzrVPCs :: Lens' GetHostedZoneResponse (NonEmpty VPC)
instance Eq GetHostedZone
instance Ord GetHostedZone
instance Read GetHostedZone
instance Show GetHostedZone
instance Monoid GetHostedZone
instance IsString GetHostedZone
instance Eq GetHostedZoneResponse
instance Read GetHostedZoneResponse
instance Show GetHostedZoneResponse
instance FromXML GetHostedZoneResponse
instance AWSRequest GetHostedZone
instance ToXML GetHostedZone
instance ToXMLRoot GetHostedZone
instance ToHeaders GetHostedZone
instance ToQuery GetHostedZone
instance ToPath GetHostedZone


-- | To retrieve the health check status, send a <a>GET</a> request to the
--   '2013-04-01<i>healthcheck</i><i>health check ID</i>/status resource.
--   You can use this call to get a health check's current status.
--   
--   
--   <a>http://docs.aws.amazon.com/Route53/latest/APIReference/API_GetHealthCheckStatus.html</a>
module Network.AWS.Route53.GetHealthCheckStatus
data GetHealthCheckStatus

-- | <a>GetHealthCheckStatus</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ghcsHealthCheckId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getHealthCheckStatus :: Text -> GetHealthCheckStatus

-- | The ID of the health check for which you want to retrieve the most
--   recent status.
ghcsHealthCheckId :: Lens' GetHealthCheckStatus Text
data GetHealthCheckStatusResponse

-- | <a>GetHealthCheckStatusResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ghcsrHealthCheckObservations</a> <tt>::</tt>
--   [<a>HealthCheckObservation</a>]</li>
--   </ul>
getHealthCheckStatusResponse :: GetHealthCheckStatusResponse

-- | A list that contains one <a>HealthCheckObservation</a> element for
--   each Route 53 health checker.
ghcsrHealthCheckObservations :: Lens' GetHealthCheckStatusResponse [HealthCheckObservation]
instance Eq GetHealthCheckStatus
instance Ord GetHealthCheckStatus
instance Read GetHealthCheckStatus
instance Show GetHealthCheckStatus
instance Monoid GetHealthCheckStatus
instance IsString GetHealthCheckStatus
instance Eq GetHealthCheckStatusResponse
instance Read GetHealthCheckStatusResponse
instance Show GetHealthCheckStatusResponse
instance Monoid GetHealthCheckStatusResponse
instance Semigroup GetHealthCheckStatusResponse
instance FromXML GetHealthCheckStatusResponse
instance AWSRequest GetHealthCheckStatus
instance ToXML GetHealthCheckStatus
instance ToXMLRoot GetHealthCheckStatus
instance ToHeaders GetHealthCheckStatus
instance ToQuery GetHealthCheckStatus
instance ToPath GetHealthCheckStatus
instance IsList GetHealthCheckStatusResponse


-- | If you want to learn why a health check is currently failing or why it
--   failed most recently (if at all), you can get the failure reason for
--   the most recent failure. Send a <a>GET</a> request to the
--   '2013-04-01<i>healthcheck</i><i>health check ID</i>/lastfailurereason
--   resource.
--   
--   
--   <a>http://docs.aws.amazon.com/Route53/latest/APIReference/API_GetHealthCheckLastFailureReason.html</a>
module Network.AWS.Route53.GetHealthCheckLastFailureReason
data GetHealthCheckLastFailureReason

-- | <a>GetHealthCheckLastFailureReason</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ghclfrHealthCheckId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getHealthCheckLastFailureReason :: Text -> GetHealthCheckLastFailureReason

-- | The ID of the health check for which you want to retrieve the reason
--   for the most recent failure.
ghclfrHealthCheckId :: Lens' GetHealthCheckLastFailureReason Text
data GetHealthCheckLastFailureReasonResponse

-- | <a>GetHealthCheckLastFailureReasonResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ghclfrrHealthCheckObservations</a> <tt>::</tt>
--   [<a>HealthCheckObservation</a>]</li>
--   </ul>
getHealthCheckLastFailureReasonResponse :: GetHealthCheckLastFailureReasonResponse

-- | A list that contains one <a>HealthCheckObservation</a> element for
--   each Route 53 health checker.
ghclfrrHealthCheckObservations :: Lens' GetHealthCheckLastFailureReasonResponse [HealthCheckObservation]
instance Eq GetHealthCheckLastFailureReason
instance Ord GetHealthCheckLastFailureReason
instance Read GetHealthCheckLastFailureReason
instance Show GetHealthCheckLastFailureReason
instance Monoid GetHealthCheckLastFailureReason
instance IsString GetHealthCheckLastFailureReason
instance Eq GetHealthCheckLastFailureReasonResponse
instance Read GetHealthCheckLastFailureReasonResponse
instance Show GetHealthCheckLastFailureReasonResponse
instance Monoid GetHealthCheckLastFailureReasonResponse
instance Semigroup GetHealthCheckLastFailureReasonResponse
instance FromXML GetHealthCheckLastFailureReasonResponse
instance AWSRequest GetHealthCheckLastFailureReason
instance ToXML GetHealthCheckLastFailureReason
instance ToXMLRoot GetHealthCheckLastFailureReason
instance ToHeaders GetHealthCheckLastFailureReason
instance ToQuery GetHealthCheckLastFailureReason
instance ToPath GetHealthCheckLastFailureReason
instance IsList GetHealthCheckLastFailureReasonResponse


-- | To retrieve a count of all your health checks, send a <a>GET</a>
--   request to the '2013-04-01/healthcheckcount' resource.
--   
--   
--   <a>http://docs.aws.amazon.com/Route53/latest/APIReference/API_GetHealthCheckCount.html</a>
module Network.AWS.Route53.GetHealthCheckCount
data GetHealthCheckCount

-- | <a>GetHealthCheckCount</a> constructor.
getHealthCheckCount :: GetHealthCheckCount
data GetHealthCheckCountResponse

-- | <a>GetHealthCheckCountResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ghccrHealthCheckCount</a> <tt>::</tt> <a>Integer</a></li>
--   </ul>
getHealthCheckCountResponse :: Integer -> GetHealthCheckCountResponse

-- | The number of health checks associated with the current AWS account.
ghccrHealthCheckCount :: Lens' GetHealthCheckCountResponse Integer
instance Eq GetHealthCheckCount
instance Ord GetHealthCheckCount
instance Read GetHealthCheckCount
instance Show GetHealthCheckCount
instance Generic GetHealthCheckCount
instance Eq GetHealthCheckCountResponse
instance Ord GetHealthCheckCountResponse
instance Read GetHealthCheckCountResponse
instance Show GetHealthCheckCountResponse
instance Enum GetHealthCheckCountResponse
instance Num GetHealthCheckCountResponse
instance Integral GetHealthCheckCountResponse
instance Real GetHealthCheckCountResponse
instance Datatype D1GetHealthCheckCount
instance Constructor C1_0GetHealthCheckCount
instance FromXML GetHealthCheckCountResponse
instance AWSRequest GetHealthCheckCount
instance ToXML GetHealthCheckCount
instance ToXMLRoot GetHealthCheckCount
instance ToHeaders GetHealthCheckCount
instance ToQuery GetHealthCheckCount
instance ToPath GetHealthCheckCount


-- | To retrieve the health check, send a <a>GET</a> request to the
--   '2013-04-01<i>healthcheck</i><i>health check ID</i> resource.
--   
--   
--   <a>http://docs.aws.amazon.com/Route53/latest/APIReference/API_GetHealthCheck.html</a>
module Network.AWS.Route53.GetHealthCheck
data GetHealthCheck

-- | <a>GetHealthCheck</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ghcHealthCheckId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getHealthCheck :: Text -> GetHealthCheck

-- | The ID of the health check to retrieve.
ghcHealthCheckId :: Lens' GetHealthCheck Text
data GetHealthCheckResponse

-- | <a>GetHealthCheckResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ghcrHealthCheck</a> <tt>::</tt> <a>HealthCheck</a></li>
--   </ul>
getHealthCheckResponse :: HealthCheck -> GetHealthCheckResponse

-- | A complex type that contains the information about the specified
--   health check.
ghcrHealthCheck :: Lens' GetHealthCheckResponse HealthCheck
instance Eq GetHealthCheck
instance Ord GetHealthCheck
instance Read GetHealthCheck
instance Show GetHealthCheck
instance Monoid GetHealthCheck
instance IsString GetHealthCheck
instance Eq GetHealthCheckResponse
instance Read GetHealthCheckResponse
instance Show GetHealthCheckResponse
instance FromXML GetHealthCheckResponse
instance AWSRequest GetHealthCheck
instance ToXML GetHealthCheck
instance ToXMLRoot GetHealthCheck
instance ToHeaders GetHealthCheck
instance ToQuery GetHealthCheck
instance ToPath GetHealthCheck


-- | To retrieve a single geo location, send a <a>GET</a> request to the
--   '2013-04-01/geolocation' resource with one of these options:
--   continentcode | countrycode | countrycode and subdivisioncode.
--   
--   
--   <a>http://docs.aws.amazon.com/Route53/latest/APIReference/API_GetGeoLocation.html</a>
module Network.AWS.Route53.GetGeoLocation
data GetGeoLocation

-- | <a>GetGeoLocation</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gglContinentCode</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gglCountryCode</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gglSubdivisionCode</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
getGeoLocation :: GetGeoLocation

-- | The code for a continent geo location. Note: only continent locations
--   have a continent code.
--   
--   Valid values: <tt>AF</tt> | <tt>AN</tt> | <tt>AS</tt> | <tt>EU</tt> |
--   <tt>OC</tt> | <tt>NA</tt> | <tt>SA</tt>
--   
--   Constraint: Specifying <tt>ContinentCode</tt> with either
--   <tt>CountryCode</tt> or <tt>SubdivisionCode</tt> returns an
--   <tt>InvalidInput</tt> error.
gglContinentCode :: Lens' GetGeoLocation (Maybe Text)

-- | The code for a country geo location. The default location uses
--   <a>*</a> for the country code and will match all locations that are
--   not matched by a geo location.
--   
--   The default geo location uses a <a>*</a> for the country code. All
--   other country codes follow the ISO 3166 two-character code.
gglCountryCode :: Lens' GetGeoLocation (Maybe Text)

-- | The code for a country's subdivision (e.g., a province of Canada). A
--   subdivision code is only valid with the appropriate country code.
--   
--   Constraint: Specifying <tt>SubdivisionCode</tt> without
--   <tt>CountryCode</tt> returns an <tt>InvalidInput</tt> error.
gglSubdivisionCode :: Lens' GetGeoLocation (Maybe Text)
data GetGeoLocationResponse

-- | <a>GetGeoLocationResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gglrGeoLocationDetails</a> <tt>::</tt>
--   <a>GeoLocationDetails</a></li>
--   </ul>
getGeoLocationResponse :: GeoLocationDetails -> GetGeoLocationResponse

-- | A complex type that contains the information about the specified geo
--   location.
gglrGeoLocationDetails :: Lens' GetGeoLocationResponse GeoLocationDetails
instance Eq GetGeoLocation
instance Ord GetGeoLocation
instance Read GetGeoLocation
instance Show GetGeoLocation
instance Eq GetGeoLocationResponse
instance Read GetGeoLocationResponse
instance Show GetGeoLocationResponse
instance FromXML GetGeoLocationResponse
instance AWSRequest GetGeoLocation
instance ToXML GetGeoLocation
instance ToXMLRoot GetGeoLocation
instance ToHeaders GetGeoLocation
instance ToQuery GetGeoLocation
instance ToPath GetGeoLocation


-- | To retrieve a list of the IP ranges used by Amazon Route 53 health
--   checkers to check the health of your resources, send a <a>GET</a>
--   request to the '2013-04-01/checkeripranges' resource. You can use
--   these IP addresses to configure router and firewall rules to allow
--   health checkers to check the health of your resources.
--   
--   
--   <a>http://docs.aws.amazon.com/Route53/latest/APIReference/API_GetCheckerIpRanges.html</a>
module Network.AWS.Route53.GetCheckerIpRanges
data GetCheckerIpRanges

-- | <a>GetCheckerIpRanges</a> constructor.
getCheckerIpRanges :: GetCheckerIpRanges
data GetCheckerIpRangesResponse

-- | <a>GetCheckerIpRangesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gcirrCheckerIpRanges</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
getCheckerIpRangesResponse :: GetCheckerIpRangesResponse

-- | A complex type that contains sorted list of IP ranges in CIDR format
--   for Amazon Route 53 health checkers.
gcirrCheckerIpRanges :: Lens' GetCheckerIpRangesResponse [Text]
instance Eq GetCheckerIpRanges
instance Ord GetCheckerIpRanges
instance Read GetCheckerIpRanges
instance Show GetCheckerIpRanges
instance Generic GetCheckerIpRanges
instance Eq GetCheckerIpRangesResponse
instance Ord GetCheckerIpRangesResponse
instance Read GetCheckerIpRangesResponse
instance Show GetCheckerIpRangesResponse
instance Monoid GetCheckerIpRangesResponse
instance Semigroup GetCheckerIpRangesResponse
instance Datatype D1GetCheckerIpRanges
instance Constructor C1_0GetCheckerIpRanges
instance FromXML GetCheckerIpRangesResponse
instance AWSRequest GetCheckerIpRanges
instance ToXML GetCheckerIpRanges
instance ToXMLRoot GetCheckerIpRanges
instance ToHeaders GetCheckerIpRanges
instance ToQuery GetCheckerIpRanges
instance ToPath GetCheckerIpRanges
instance IsList GetCheckerIpRangesResponse


-- | This action returns the current status of a change batch request. The
--   status is one of the following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> indicates that the changes in this request have
--   not replicated to all Route 53 DNS servers. This is the initial status
--   of all change batch requests.</li>
--   <li><tt>INSYNC</tt> indicates that the changes have replicated to all
--   Amazon Route 53 DNS servers.</li>
--   </ul>
--   
--   
--   <a>http://docs.aws.amazon.com/Route53/latest/APIReference/API_GetChange.html</a>
module Network.AWS.Route53.GetChange
data GetChange

-- | <a>GetChange</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gcId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getChange :: Text -> GetChange

-- | The ID of the change batch request. The value that you specify here is
--   the value that <tt>ChangeResourceRecordSets</tt> returned in the Id
--   element when you submitted the request.
gcId :: Lens' GetChange Text
data GetChangeResponse

-- | <a>GetChangeResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gcrChangeInfo</a> <tt>::</tt> <a>ChangeInfo</a></li>
--   </ul>
getChangeResponse :: ChangeInfo -> GetChangeResponse

-- | A complex type that contains information about the specified change
--   batch, including the change batch ID, the status of the change, and
--   the date and time of the request.
gcrChangeInfo :: Lens' GetChangeResponse ChangeInfo
instance Eq GetChange
instance Ord GetChange
instance Read GetChange
instance Show GetChange
instance Monoid GetChange
instance IsString GetChange
instance Eq GetChangeResponse
instance Read GetChangeResponse
instance Show GetChangeResponse
instance FromXML GetChangeResponse
instance AWSRequest GetChange
instance ToXML GetChange
instance ToXMLRoot GetChange
instance ToHeaders GetChange
instance ToQuery GetChange
instance ToPath GetChange


-- | This action disassociates a VPC from an hosted zone.
--   
--   To disassociate a VPC to a hosted zone, send a <a>POST</a> request to
--   the '2013-04-01<i>hostedzone</i><i>hosted zone ID</i>/disassociatevpc
--   resource. The request body must include an XML document with a
--   <tt>DisassociateVPCFromHostedZoneRequest</tt> element. The response
--   returns the <a>DisassociateVPCFromHostedZoneResponse</a> element that
--   contains <a>ChangeInfo</a> for you to track the progress of the
--   <tt>DisassociateVPCFromHostedZoneRequest</tt> you made. See
--   <tt>GetChange</tt> operation for how to track the progress of your
--   change.
--   
--   
--   <a>http://docs.aws.amazon.com/Route53/latest/APIReference/API_DisassociateVPCFromHostedZone.html</a>
module Network.AWS.Route53.DisassociateVPCFromHostedZone
data DisassociateVPCFromHostedZone

-- | <a>DisassociateVPCFromHostedZone</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvpcfhzComment</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dvpcfhzHostedZoneId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>dvpcfhzVPC</a> <tt>::</tt> <a>VPC</a></li>
--   </ul>
disassociateVPCFromHostedZone :: Text -> VPC -> DisassociateVPCFromHostedZone

-- | <i>Optional:</i> Any comments you want to include about a
--   <tt>DisassociateVPCFromHostedZoneRequest</tt>.
dvpcfhzComment :: Lens' DisassociateVPCFromHostedZone (Maybe Text)

-- | The ID of the hosted zone you want to disassociate your VPC from.
--   
--   Note that you cannot disassociate the last VPC from a hosted zone.
dvpcfhzHostedZoneId :: Lens' DisassociateVPCFromHostedZone Text

-- | The VPC that you want your hosted zone to be disassociated from.
dvpcfhzVPC :: Lens' DisassociateVPCFromHostedZone VPC
data DisassociateVPCFromHostedZoneResponse

-- | <a>DisassociateVPCFromHostedZoneResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvpcfhzrChangeInfo</a> <tt>::</tt> <a>ChangeInfo</a></li>
--   </ul>
disassociateVPCFromHostedZoneResponse :: ChangeInfo -> DisassociateVPCFromHostedZoneResponse

-- | A complex type that contains the ID, the status, and the date and time
--   of your <tt>DisassociateVPCFromHostedZoneRequest</tt>.
dvpcfhzrChangeInfo :: Lens' DisassociateVPCFromHostedZoneResponse ChangeInfo
instance Eq DisassociateVPCFromHostedZone
instance Read DisassociateVPCFromHostedZone
instance Show DisassociateVPCFromHostedZone
instance Eq DisassociateVPCFromHostedZoneResponse
instance Read DisassociateVPCFromHostedZoneResponse
instance Show DisassociateVPCFromHostedZoneResponse
instance FromXML DisassociateVPCFromHostedZoneResponse
instance AWSRequest DisassociateVPCFromHostedZone
instance ToXML DisassociateVPCFromHostedZone
instance ToXMLRoot DisassociateVPCFromHostedZone
instance ToHeaders DisassociateVPCFromHostedZone
instance ToQuery DisassociateVPCFromHostedZone
instance ToPath DisassociateVPCFromHostedZone


-- | This action deletes a reusable delegation set. To delete a reusable
--   delegation set, send a <a>DELETE</a> request to the
--   '2013-04-01<i>delegationset</i><i>delegation set ID</i> resource.
--   
--   You can delete a reusable delegation set only if there are no
--   associated hosted zones. If your reusable delegation set contains
--   associated hosted zones, you must delete them before you can delete
--   your reusable delegation set. If you try to delete a reusable
--   delegation set that contains associated hosted zones, Route 53 will
--   deny your request with a <tt>DelegationSetInUse</tt> error.
--   
--   
--   <a>http://docs.aws.amazon.com/Route53/latest/APIReference/API_DeleteReusableDelegationSet.html</a>
module Network.AWS.Route53.DeleteReusableDelegationSet
data DeleteReusableDelegationSet

-- | <a>DeleteReusableDelegationSet</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>drdsId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteReusableDelegationSet :: Text -> DeleteReusableDelegationSet

-- | The ID of the reusable delegation set you want to delete.
drdsId :: Lens' DeleteReusableDelegationSet Text
data DeleteReusableDelegationSetResponse

-- | <a>DeleteReusableDelegationSetResponse</a> constructor.
deleteReusableDelegationSetResponse :: DeleteReusableDelegationSetResponse
instance Eq DeleteReusableDelegationSet
instance Ord DeleteReusableDelegationSet
instance Read DeleteReusableDelegationSet
instance Show DeleteReusableDelegationSet
instance Monoid DeleteReusableDelegationSet
instance IsString DeleteReusableDelegationSet
instance Eq DeleteReusableDelegationSetResponse
instance Ord DeleteReusableDelegationSetResponse
instance Read DeleteReusableDelegationSetResponse
instance Show DeleteReusableDelegationSetResponse
instance Generic DeleteReusableDelegationSetResponse
instance Datatype D1DeleteReusableDelegationSetResponse
instance Constructor C1_0DeleteReusableDelegationSetResponse
instance AWSRequest DeleteReusableDelegationSet
instance ToXML DeleteReusableDelegationSet
instance ToXMLRoot DeleteReusableDelegationSet
instance ToHeaders DeleteReusableDelegationSet
instance ToQuery DeleteReusableDelegationSet
instance ToPath DeleteReusableDelegationSet


-- | This action deletes a hosted zone. To delete a hosted zone, send a
--   <a>DELETE</a> request to the '2013-04-01<i>hostedzone</i><i>hosted
--   zone ID</i> resource.
--   
--   For more information about deleting a hosted zone, see <a>Deleting a
--   Hosted Zone</a> in the <i>Amazon Route 53 Developer Guide</i>.
--   
--   You can delete a hosted zone only if there are no resource record sets
--   other than the default SOA record and NS resource record sets. If your
--   hosted zone contains other resource record sets, you must delete them
--   before you can delete your hosted zone. If you try to delete a hosted
--   zone that contains other resource record sets, Route 53 will deny your
--   request with a <tt>HostedZoneNotEmpty</tt> error. For information
--   about deleting records from your hosted zone, see
--   <tt>ChangeResourceRecordSets</tt>.
--   
--   
--   <a>http://docs.aws.amazon.com/Route53/latest/APIReference/API_DeleteHostedZone.html</a>
module Network.AWS.Route53.DeleteHostedZone
data DeleteHostedZone

-- | <a>DeleteHostedZone</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dhzId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteHostedZone :: Text -> DeleteHostedZone

-- | The ID of the hosted zone you want to delete.
dhzId :: Lens' DeleteHostedZone Text
data DeleteHostedZoneResponse

-- | <a>DeleteHostedZoneResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dhzrChangeInfo</a> <tt>::</tt> <a>ChangeInfo</a></li>
--   </ul>
deleteHostedZoneResponse :: ChangeInfo -> DeleteHostedZoneResponse

-- | A complex type that contains the ID, the status, and the date and time
--   of your delete request.
dhzrChangeInfo :: Lens' DeleteHostedZoneResponse ChangeInfo
instance Eq DeleteHostedZone
instance Ord DeleteHostedZone
instance Read DeleteHostedZone
instance Show DeleteHostedZone
instance Monoid DeleteHostedZone
instance IsString DeleteHostedZone
instance Eq DeleteHostedZoneResponse
instance Read DeleteHostedZoneResponse
instance Show DeleteHostedZoneResponse
instance FromXML DeleteHostedZoneResponse
instance AWSRequest DeleteHostedZone
instance ToXML DeleteHostedZone
instance ToXMLRoot DeleteHostedZone
instance ToHeaders DeleteHostedZone
instance ToQuery DeleteHostedZone
instance ToPath DeleteHostedZone


-- | This action deletes a health check. To delete a health check, send a
--   <a>DELETE</a> request to the '2013-04-01<i>healthcheck</i><i>health
--   check ID</i> resource.
--   
--   You can delete a health check only if there are no resource record
--   sets associated with this health check. If resource record sets are
--   associated with this health check, you must disassociate them before
--   you can delete your health check. If you try to delete a health check
--   that is associated with resource record sets, Route 53 will deny your
--   request with a <tt>HealthCheckInUse</tt> error. For information about
--   disassociating the records from your health check, see
--   <tt>ChangeResourceRecordSets</tt>.
--   
--   
--   <a>http://docs.aws.amazon.com/Route53/latest/APIReference/API_DeleteHealthCheck.html</a>
module Network.AWS.Route53.DeleteHealthCheck
data DeleteHealthCheck

-- | <a>DeleteHealthCheck</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dhcHealthCheckId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteHealthCheck :: Text -> DeleteHealthCheck

-- | The ID of the health check to delete.
dhcHealthCheckId :: Lens' DeleteHealthCheck Text
data DeleteHealthCheckResponse

-- | <a>DeleteHealthCheckResponse</a> constructor.
deleteHealthCheckResponse :: DeleteHealthCheckResponse
instance Eq DeleteHealthCheck
instance Ord DeleteHealthCheck
instance Read DeleteHealthCheck
instance Show DeleteHealthCheck
instance Monoid DeleteHealthCheck
instance IsString DeleteHealthCheck
instance Eq DeleteHealthCheckResponse
instance Ord DeleteHealthCheckResponse
instance Read DeleteHealthCheckResponse
instance Show DeleteHealthCheckResponse
instance Generic DeleteHealthCheckResponse
instance Datatype D1DeleteHealthCheckResponse
instance Constructor C1_0DeleteHealthCheckResponse
instance AWSRequest DeleteHealthCheck
instance ToXML DeleteHealthCheck
instance ToXMLRoot DeleteHealthCheck
instance ToHeaders DeleteHealthCheck
instance ToQuery DeleteHealthCheck
instance ToPath DeleteHealthCheck


-- | This action creates a reusable delegationSet.
--   
--   To create a new reusable delegationSet, send a <a>POST</a> request to
--   the '2013-04-01/delegationset' resource. The request body must include
--   an XML document with a <tt>CreateReusableDelegationSetRequest</tt>
--   element. The response returns the
--   <a>CreateReusableDelegationSetResponse</a> element that contains
--   metadata about the delegationSet.
--   
--   If the optional parameter HostedZoneId is specified, it marks the
--   delegationSet associated with that particular hosted zone as reusable.
--   
--   
--   <a>http://docs.aws.amazon.com/Route53/latest/APIReference/API_CreateReusableDelegationSet.html</a>
module Network.AWS.Route53.CreateReusableDelegationSet
data CreateReusableDelegationSet

-- | <a>CreateReusableDelegationSet</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>crdsCallerReference</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>crdsHostedZoneId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
createReusableDelegationSet :: Text -> CreateReusableDelegationSet

-- | A unique string that identifies the request and that allows failed
--   <a>CreateReusableDelegationSet</a> requests to be retried without the
--   risk of executing the operation twice. You must use a unique
--   <tt>CallerReference</tt> string every time you create a reusable
--   delegation set. <tt>CallerReference</tt> can be any unique string; you
--   might choose to use a string that identifies your project, such as
--   <tt>DNSMigration_01</tt>.
--   
--   Valid characters are any Unicode code points that are legal in an XML
--   1.0 document. The UTF-8 encoding of the value must be less than 128
--   bytes.
crdsCallerReference :: Lens' CreateReusableDelegationSet Text

-- | The ID of the hosted zone whose delegation set you want to mark as
--   reusable. It is an optional parameter.
crdsHostedZoneId :: Lens' CreateReusableDelegationSet (Maybe Text)
data CreateReusableDelegationSetResponse

-- | <a>CreateReusableDelegationSetResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>crdsrDelegationSet</a> <tt>::</tt> <a>DelegationSet</a></li>
--   <li><a>crdsrLocation</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createReusableDelegationSetResponse :: DelegationSet -> Text -> CreateReusableDelegationSetResponse

-- | A complex type that contains name server information.
crdsrDelegationSet :: Lens' CreateReusableDelegationSetResponse DelegationSet

-- | The unique URL representing the new reusbale delegation set.
crdsrLocation :: Lens' CreateReusableDelegationSetResponse Text
instance Eq CreateReusableDelegationSet
instance Ord CreateReusableDelegationSet
instance Read CreateReusableDelegationSet
instance Show CreateReusableDelegationSet
instance Eq CreateReusableDelegationSetResponse
instance Read CreateReusableDelegationSetResponse
instance Show CreateReusableDelegationSetResponse
instance AWSRequest CreateReusableDelegationSet
instance ToXML CreateReusableDelegationSet
instance ToXMLRoot CreateReusableDelegationSet
instance ToHeaders CreateReusableDelegationSet
instance ToQuery CreateReusableDelegationSet
instance ToPath CreateReusableDelegationSet


-- | This action creates a new hosted zone.
--   
--   To create a new hosted zone, send a <a>POST</a> request to the
--   '2013-04-01/hostedzone' resource. The request body must include an XML
--   document with a <tt>CreateHostedZoneRequest</tt> element. The response
--   returns the <a>CreateHostedZoneResponse</a> element that contains
--   metadata about the hosted zone.
--   
--   Route 53 automatically creates a default SOA record and four NS
--   records for the zone. The NS records in the hosted zone are the name
--   servers you give your registrar to delegate your domain to. For more
--   information about SOA and NS records, see <a>NS and SOA Records that
--   Route 53 Creates for a Hosted Zone</a> in the <i>Amazon Route 53
--   Developer Guide</i>.
--   
--   When you create a zone, its initial status is <tt>PENDING</tt>. This
--   means that it is not yet available on all DNS servers. The status of
--   the zone changes to <tt>INSYNC</tt> when the NS and SOA records are
--   available on all Route 53 DNS servers.
--   
--   When trying to create a hosted zone using a reusable delegation set,
--   you could specify an optional DelegationSetId, and Route53 would
--   assign those 4 NS records for the zone, instead of alloting a new one.
--   
--   
--   <a>http://docs.aws.amazon.com/Route53/latest/APIReference/API_CreateHostedZone.html</a>
module Network.AWS.Route53.CreateHostedZone
data CreateHostedZone

-- | <a>CreateHostedZone</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>chzCallerReference</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>chzDelegationSetId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>chzHostedZoneConfig</a> <tt>::</tt> <a>Maybe</a>
--   <a>HostedZoneConfig</a></li>
--   <li><a>chzName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>chzVPC</a> <tt>::</tt> <a>Maybe</a> <a>VPC</a></li>
--   </ul>
createHostedZone :: Text -> Text -> CreateHostedZone

-- | A unique string that identifies the request and that allows failed
--   <a>CreateHostedZone</a> requests to be retried without the risk of
--   executing the operation twice. You must use a unique
--   <tt>CallerReference</tt> string every time you create a hosted zone.
--   <tt>CallerReference</tt> can be any unique string; you might choose to
--   use a string that identifies your project, such as
--   <tt>DNSMigration_01</tt>.
--   
--   Valid characters are any Unicode code points that are legal in an XML
--   1.0 document. The UTF-8 encoding of the value must be less than 128
--   bytes.
chzCallerReference :: Lens' CreateHostedZone Text

-- | The delegation set id of the reusable delgation set whose NS records
--   you want to assign to the new hosted zone.
chzDelegationSetId :: Lens' CreateHostedZone (Maybe Text)

-- | A complex type that contains an optional comment about your hosted
--   zone.
chzHostedZoneConfig :: Lens' CreateHostedZone (Maybe HostedZoneConfig)

-- | The name of the domain. This must be a fully-specified domain, for
--   example, www.example.com. The trailing dot is optional; Route 53
--   assumes that the domain name is fully qualified. This means that Route
--   53 treats www.example.com (without a trailing dot) and
--   www.example.com. (with a trailing dot) as identical.
--   
--   This is the name you have registered with your DNS registrar. You
--   should ask your registrar to change the authoritative name servers for
--   your domain to the set of <tt>NameServers</tt> elements returned in
--   <a>DelegationSet</a>.
chzName :: Lens' CreateHostedZone Text

-- | The VPC that you want your hosted zone to be associated with. By
--   providing this parameter, your newly created hosted cannot be resolved
--   anywhere other than the given VPC.
chzVPC :: Lens' CreateHostedZone (Maybe VPC)
data CreateHostedZoneResponse

-- | <a>CreateHostedZoneResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>chzrChangeInfo</a> <tt>::</tt> <a>ChangeInfo</a></li>
--   <li><a>chzrDelegationSet</a> <tt>::</tt> <a>DelegationSet</a></li>
--   <li><a>chzrHostedZone</a> <tt>::</tt> <a>HostedZone</a></li>
--   <li><a>chzrLocation</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>chzrVPC</a> <tt>::</tt> <a>Maybe</a> <a>VPC</a></li>
--   </ul>
createHostedZoneResponse :: HostedZone -> ChangeInfo -> DelegationSet -> Text -> CreateHostedZoneResponse

-- | A complex type that contains information about the request to create a
--   hosted zone. This includes an ID that you use when you call the
--   <tt>GetChange</tt> action to get the current status of the change
--   request.
chzrChangeInfo :: Lens' CreateHostedZoneResponse ChangeInfo

-- | A complex type that contains name server information.
chzrDelegationSet :: Lens' CreateHostedZoneResponse DelegationSet

-- | A complex type that contains identifying information about the hosted
--   zone.
chzrHostedZone :: Lens' CreateHostedZoneResponse HostedZone

-- | The unique URL representing the new hosted zone.
chzrLocation :: Lens' CreateHostedZoneResponse Text
chzrVPC :: Lens' CreateHostedZoneResponse (Maybe VPC)
instance Eq CreateHostedZone
instance Read CreateHostedZone
instance Show CreateHostedZone
instance Eq CreateHostedZoneResponse
instance Read CreateHostedZoneResponse
instance Show CreateHostedZoneResponse
instance AWSRequest CreateHostedZone
instance ToXML CreateHostedZone
instance ToXMLRoot CreateHostedZone
instance ToHeaders CreateHostedZone
instance ToQuery CreateHostedZone
instance ToPath CreateHostedZone


-- | This action creates a new health check.
--   
--   To create a new health check, send a <a>POST</a> request to the
--   '2013-04-01/healthcheck' resource. The request body must include an
--   XML document with a <tt>CreateHealthCheckRequest</tt> element. The
--   response returns the <a>CreateHealthCheckResponse</a> element that
--   contains metadata about the health check.
--   
--   
--   <a>http://docs.aws.amazon.com/Route53/latest/APIReference/API_CreateHealthCheck.html</a>
module Network.AWS.Route53.CreateHealthCheck
data CreateHealthCheck

-- | <a>CreateHealthCheck</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>chcCallerReference</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>chcHealthCheckConfig</a> <tt>::</tt>
--   <a>HealthCheckConfig</a></li>
--   </ul>
createHealthCheck :: Text -> HealthCheckConfig -> CreateHealthCheck

-- | A unique string that identifies the request and that allows failed
--   <a>CreateHealthCheck</a> requests to be retried without the risk of
--   executing the operation twice. You must use a unique
--   <tt>CallerReference</tt> string every time you create a health check.
--   <tt>CallerReference</tt> can be any unique string; you might choose to
--   use a string that identifies your project.
--   
--   Valid characters are any Unicode code points that are legal in an XML
--   1.0 document. The UTF-8 encoding of the value must be less than 128
--   bytes.
chcCallerReference :: Lens' CreateHealthCheck Text

-- | A complex type that contains health check configuration.
chcHealthCheckConfig :: Lens' CreateHealthCheck HealthCheckConfig
data CreateHealthCheckResponse

-- | <a>CreateHealthCheckResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>chcrHealthCheck</a> <tt>::</tt> <a>HealthCheck</a></li>
--   <li><a>chcrLocation</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createHealthCheckResponse :: HealthCheck -> Text -> CreateHealthCheckResponse

-- | A complex type that contains identifying information about the health
--   check.
chcrHealthCheck :: Lens' CreateHealthCheckResponse HealthCheck

-- | The unique URL representing the new health check.
chcrLocation :: Lens' CreateHealthCheckResponse Text
instance Eq CreateHealthCheck
instance Read CreateHealthCheck
instance Show CreateHealthCheck
instance Eq CreateHealthCheckResponse
instance Read CreateHealthCheckResponse
instance Show CreateHealthCheckResponse
instance AWSRequest CreateHealthCheck
instance ToXML CreateHealthCheck
instance ToXMLRoot CreateHealthCheck
instance ToHeaders CreateHealthCheck
instance ToQuery CreateHealthCheck
instance ToPath CreateHealthCheck


-- | 
--   <a>http://docs.aws.amazon.com/Route53/latest/APIReference/API_ChangeTagsForResource.html</a>
module Network.AWS.Route53.ChangeTagsForResource
data ChangeTagsForResource

-- | <a>ChangeTagsForResource</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ctfrAddTags</a> <tt>::</tt> <a>NonEmpty</a> <a>Tag</a></li>
--   <li><a>ctfrRemoveTagKeys</a> <tt>::</tt> <a>NonEmpty</a>
--   <a>Text</a></li>
--   <li><a>ctfrResourceId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ctfrResourceType</a> <tt>::</tt> <a>TagResourceType</a></li>
--   </ul>
changeTagsForResource :: TagResourceType -> Text -> NonEmpty Tag -> NonEmpty Text -> ChangeTagsForResource

-- | A complex type that contains a list of <a>Tag</a> elements. Each
--   <a>Tag</a> element identifies a tag that you want to add or update for
--   the specified resource.
ctfrAddTags :: Lens' ChangeTagsForResource (NonEmpty Tag)

-- | A list of <a>Tag</a> keys that you want to remove from the specified
--   resource.
ctfrRemoveTagKeys :: Lens' ChangeTagsForResource (NonEmpty Text)

-- | The ID of the resource for which you want to add, change, or delete
--   tags.
ctfrResourceId :: Lens' ChangeTagsForResource Text

-- | The type of the resource.
--   
--   <ul>
--   <li>The resource type for health checks is <tt>healthcheck</tt>.</li>
--   <li>The resource type for hosted zones is <tt>hostedzone</tt>.</li>
--   </ul>
ctfrResourceType :: Lens' ChangeTagsForResource TagResourceType
data ChangeTagsForResourceResponse

-- | <a>ChangeTagsForResourceResponse</a> constructor.
changeTagsForResourceResponse :: ChangeTagsForResourceResponse
instance Eq ChangeTagsForResource
instance Read ChangeTagsForResource
instance Show ChangeTagsForResource
instance Eq ChangeTagsForResourceResponse
instance Ord ChangeTagsForResourceResponse
instance Read ChangeTagsForResourceResponse
instance Show ChangeTagsForResourceResponse
instance Generic ChangeTagsForResourceResponse
instance Datatype D1ChangeTagsForResourceResponse
instance Constructor C1_0ChangeTagsForResourceResponse
instance AWSRequest ChangeTagsForResource
instance ToXML ChangeTagsForResource
instance ToXMLRoot ChangeTagsForResource
instance ToHeaders ChangeTagsForResource
instance ToQuery ChangeTagsForResource
instance ToPath ChangeTagsForResource


-- | Use this action to create or change your authoritative DNS
--   information. To use this action, send a <a>POST</a> request to the
--   '2013-04-01<i>hostedzone</i><i>hosted ZoneID</i>/rrset resource. The
--   request body must include an XML document with a
--   <tt>ChangeResourceRecordSetsRequest</tt> element.
--   
--   Changes are a list of change items and are considered transactional.
--   For more information on transactional changes, also known as change
--   batches, see <a>Creating, Changing, and Deleting Resource Record Sets
--   Using the Route 53 API</a> in the <i>Amazon Route 53 Developer
--   Guide</i>.
--   
--   Due to the nature of transactional changes, you cannot delete the same
--   resource record set more than once in a single change batch. If you
--   attempt to delete the same change batch more than once, Route 53
--   returns an <tt>InvalidChangeBatch</tt> error. In response to a
--   <a>ChangeResourceRecordSets</a> request, your DNS data is changed on
--   all Route 53 DNS servers. Initially, the status of a change is
--   <tt>PENDING</tt>. This means the change has not yet propagated to all
--   the authoritative Route 53 DNS servers. When the change is propagated
--   to all hosts, the change returns a status of <tt>INSYNC</tt>.
--   
--   Note the following limitations on a <a>ChangeResourceRecordSets</a>
--   request:
--   
--   <ul>
--   <li>A request cannot contain more than 100 Change elements.</li>
--   <li>A request cannot contain more than 1000 ResourceRecord
--   elements.</li>
--   </ul>
--   
--   The sum of the number of characters (including spaces) in all
--   <tt>Value</tt> elements in a request cannot exceed 32,000 characters.
--   
--   
--   <a>http://docs.aws.amazon.com/Route53/latest/APIReference/API_ChangeResourceRecordSets.html</a>
module Network.AWS.Route53.ChangeResourceRecordSets
data ChangeResourceRecordSets

-- | <a>ChangeResourceRecordSets</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>crrsChangeBatch</a> <tt>::</tt> <a>ChangeBatch</a></li>
--   <li><a>crrsHostedZoneId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
changeResourceRecordSets :: Text -> ChangeBatch -> ChangeResourceRecordSets

-- | A complex type that contains an optional comment and the
--   <tt>Changes</tt> element.
crrsChangeBatch :: Lens' ChangeResourceRecordSets ChangeBatch

-- | The ID of the hosted zone that contains the resource record sets that
--   you want to change.
crrsHostedZoneId :: Lens' ChangeResourceRecordSets Text
data ChangeResourceRecordSetsResponse

-- | <a>ChangeResourceRecordSetsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>crrsrChangeInfo</a> <tt>::</tt> <a>ChangeInfo</a></li>
--   </ul>
changeResourceRecordSetsResponse :: ChangeInfo -> ChangeResourceRecordSetsResponse

-- | A complex type that contains information about changes made to your
--   hosted zone.
--   
--   This element contains an ID that you use when performing a
--   <tt>GetChange</tt> action to get detailed information about the
--   change.
crrsrChangeInfo :: Lens' ChangeResourceRecordSetsResponse ChangeInfo
instance Eq ChangeResourceRecordSets
instance Read ChangeResourceRecordSets
instance Show ChangeResourceRecordSets
instance Eq ChangeResourceRecordSetsResponse
instance Read ChangeResourceRecordSetsResponse
instance Show ChangeResourceRecordSetsResponse
instance FromXML ChangeResourceRecordSetsResponse
instance AWSRequest ChangeResourceRecordSets
instance ToXML ChangeResourceRecordSets
instance ToXMLRoot ChangeResourceRecordSets
instance ToHeaders ChangeResourceRecordSets
instance ToQuery ChangeResourceRecordSets
instance ToPath ChangeResourceRecordSets


-- | This action associates a VPC with an hosted zone.
--   
--   To associate a VPC with an hosted zone, send a <a>POST</a> request to
--   the '2013-04-01<i>hostedzone</i><i>hosted zone ID</i>/associatevpc
--   resource. The request body must include an XML document with a
--   <tt>AssociateVPCWithHostedZoneRequest</tt> element. The response
--   returns the <a>AssociateVPCWithHostedZoneResponse</a> element that
--   contains <a>ChangeInfo</a> for you to track the progress of the
--   <tt>AssociateVPCWithHostedZoneRequest</tt> you made. See
--   <tt>GetChange</tt> operation for how to track the progress of your
--   change.
--   
--   
--   <a>http://docs.aws.amazon.com/Route53/latest/APIReference/API_AssociateVPCWithHostedZone.html</a>
module Network.AWS.Route53.AssociateVPCWithHostedZone
data AssociateVPCWithHostedZone

-- | <a>AssociateVPCWithHostedZone</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>avpcwhzComment</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>avpcwhzHostedZoneId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>avpcwhzVPC</a> <tt>::</tt> <a>VPC</a></li>
--   </ul>
associateVPCWithHostedZone :: Text -> VPC -> AssociateVPCWithHostedZone

-- | <i>Optional:</i> Any comments you want to include about a
--   <tt>AssociateVPCWithHostedZoneRequest</tt>.
avpcwhzComment :: Lens' AssociateVPCWithHostedZone (Maybe Text)

-- | The ID of the hosted zone you want to associate your VPC with.
--   
--   Note that you cannot associate a VPC with a hosted zone that doesn't
--   have an existing VPC association.
avpcwhzHostedZoneId :: Lens' AssociateVPCWithHostedZone Text

-- | The VPC that you want your hosted zone to be associated with.
avpcwhzVPC :: Lens' AssociateVPCWithHostedZone VPC
data AssociateVPCWithHostedZoneResponse

-- | <a>AssociateVPCWithHostedZoneResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>avpcwhzrChangeInfo</a> <tt>::</tt> <a>ChangeInfo</a></li>
--   </ul>
associateVPCWithHostedZoneResponse :: ChangeInfo -> AssociateVPCWithHostedZoneResponse

-- | A complex type that contains the ID, the status, and the date and time
--   of your <tt>AssociateVPCWithHostedZoneRequest</tt>.
avpcwhzrChangeInfo :: Lens' AssociateVPCWithHostedZoneResponse ChangeInfo
instance Eq AssociateVPCWithHostedZone
instance Read AssociateVPCWithHostedZone
instance Show AssociateVPCWithHostedZone
instance Eq AssociateVPCWithHostedZoneResponse
instance Read AssociateVPCWithHostedZoneResponse
instance Show AssociateVPCWithHostedZoneResponse
instance FromXML AssociateVPCWithHostedZoneResponse
instance AWSRequest AssociateVPCWithHostedZone
instance ToXML AssociateVPCWithHostedZone
instance ToXMLRoot AssociateVPCWithHostedZone
instance ToHeaders AssociateVPCWithHostedZone
instance ToQuery AssociateVPCWithHostedZone
instance ToPath AssociateVPCWithHostedZone


-- | Amazon Route 53 is a scalable Domain Name System (DNS) web service. It
--   provides secure and reliable routing to your infrastructure that uses
--   Amazon Web Services (AWS) products, such as Amazon Elastic Compute
--   Cloud (Amazon EC2), Elastic Load Balancing, or Amazon Simple Storage
--   Service (Amazon S3). You can also use Amazon Route 53 to route users
--   to your infrastructure outside of AWS.
module Network.AWS.Route53
