-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A binding for the OpenAL Utility Toolkit
--   
@package ALUT
@version 2.4.0.0


module Sound.ALUT.Version
alutAPIVersion :: String
alutVersion :: GettableStateVar String


module Sound.ALUT.Loaders
type Phase = Float
type Duration = Float
data SoundDataSource a
File :: FilePath -> SoundDataSource a
FileImage :: (MemoryRegion a) -> SoundDataSource a
HelloWorld :: SoundDataSource a
Sine :: Frequency -> Phase -> Duration -> SoundDataSource a
Square :: Frequency -> Phase -> Duration -> SoundDataSource a
Sawtooth :: Frequency -> Phase -> Duration -> SoundDataSource a
Impulse :: Frequency -> Phase -> Duration -> SoundDataSource a
WhiteNoise :: Duration -> SoundDataSource a
createBuffer :: MonadIO m => SoundDataSource a -> m Buffer
createBufferData :: MonadIO m => SoundDataSource a -> m (BufferData b)
bufferMIMETypes :: GettableStateVar [String]
bufferDataMIMETypes :: GettableStateVar [String]
instance Eq (SoundDataSource a)
instance Ord (SoundDataSource a)
instance Show (SoundDataSource a)


module Sound.ALUT.Sleep
sleep :: MonadIO m => Duration -> m ()


module Sound.ALUT.Initialization
type ArgumentConsumer a = String -> [String] -> a
type Runner m a = ArgumentConsumer (m a) -> m a
runALUT :: MonadIO m => ArgumentConsumer (Runner m a)
runALUTUsingCurrentContext :: MonadIO m => ArgumentConsumer (Runner m a)
withProgNameAndArgs :: MonadIO m => (ArgumentConsumer (Runner m a)) -> Runner m a


-- | A Haskell binding for the OpenAL Utility Toolkit, which makes managing
--   of OpenAL contexts, loading sounds in various formats and creating
--   waveforms very easy. For more information about the C library on which
--   this binding is based, please see:
--   <a>http://distro.ibiblio.org/rootlinux/rootlinux-ports/more/freealut/freealut-1.1.0/doc/alut.html</a>.
module Sound.ALUT
