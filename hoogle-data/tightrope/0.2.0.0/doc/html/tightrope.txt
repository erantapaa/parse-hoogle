-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Nice API for a Slackbot
--   
--   Making bots for Slack is hard! But wait: now it's easy.
@package tightrope
@version 0.2.0.0

module Network.Tightrope
data Slack m
data Command
data Message
newtype User
User :: Text -> User
newtype Channel
Channel :: Text -> Channel
newtype Icon
Icon :: Text -> Icon
data Room
Public :: Channel -> Room
Private :: User -> Room
say :: Message -> Room -> Slack (Response ByteString)
bot :: Account -> (Command -> Slack Text) -> Application
message :: Icon -> Text -> Text -> Message
defaultMessage :: Message
data Account
Account :: Token -> Url -> Account
source :: HasSource c_aab8 e_aab9 => Lens' c_aab8 e_aab9
user :: HasUser c_aab8 e_aab9 => Lens' c_aab8 e_aab9
name :: HasName c_aab8 e_aab9 => Lens' c_aab8 e_aab9
text :: HasText c_aab8 e_aab9 => Lens' c_aab8 e_aab9
iconEmoji :: HasIconEmoji c_aadj e_aadk => Lens' c_aadj e_aadk
username :: HasUsername c_aadj e_aadk => Lens' c_aadj e_aadk

-- | Lift a computation from the <a>IO</a> monad.
liftIO :: MonadIO m => forall a. IO a -> m a
instance Functor Slack
instance Applicative Slack
instance Monad Slack
instance MonadIO Slack
instance MonadReader Account Slack
instance ToJSON Icon
instance ToJSON Channel
instance ToJSON User
instance ToJSON Room
instance HasText Message Text
instance HasUsername Message Text
instance HasIconEmoji Message Icon
instance HasText Command Text
instance HasName Command Text
instance HasUser Command User
instance HasSource Command Room
instance Show User
instance Eq User
instance Ord User
instance Show Channel
instance Eq Channel
instance Ord Channel
instance Show Icon
instance Eq Icon
instance Ord Icon
instance Show Room
instance Eq Room
instance Ord Room
