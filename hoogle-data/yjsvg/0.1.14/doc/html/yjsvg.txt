-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | make SVG string from Haskell data
--   
--   <pre>
--   import Text.XML.YJSVG
--   main = putStrLn $ showSVG 500 750 [ Line 30 40 100 200 "yellow" 10 ]
--   </pre>
--   
--   etc
@package yjsvg
@version 0.1.14

module Text.XML.YJSVG
showSVG :: Double -> Double -> [SVG] -> String
data SVG
Line :: Position -> Position -> Color -> Double -> SVG
Polyline :: [Position] -> Color -> Color -> Double -> SVG
Rect :: Position -> Double -> Double -> Double -> Color -> Color -> SVG
Fill :: Color -> SVG
Circle :: Position -> Double -> Color -> SVG
Text :: Position -> Double -> Color -> Font -> String -> SVG
Image :: Position -> Double -> Double -> FilePath -> SVG
Group :: [Transform] -> [SVG] -> SVG
data Transform
Matrix :: Double -> Double -> Double -> Double -> Double -> Double -> Transform
Translate :: Double -> Double -> Transform
Scale :: Double -> Double -> Transform
Rotate :: Double -> (Maybe (Double, Double)) -> Transform
SkewX :: Double -> Transform
SkewY :: Double -> Transform
data Color
ColorName :: String -> Color
colorName :: Color -> String
RGB :: Word8 -> Word8 -> Word8 -> Color
colorRed :: Color -> Word8
colorGreen :: Color -> Word8
colorBlue :: Color -> Word8
data Position
TopLeft :: Double -> Double -> Position
posX :: Position -> Double
posY :: Position -> Double
Center :: Double -> Double -> Position
posX :: Position -> Double
posY :: Position -> Double
topleft, center :: Double -> Double -> Position -> Position
yjsvgVersion :: (Int, String)
instance Show Position
instance Read Position
instance Eq Color
instance Show Color
instance Read Color
instance Show Transform
instance Read Transform
instance Show SVG
instance Read SVG
