-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Type class for monads which support a fork operation.
--   
--   Type class for monads which support a fork operation.
@package monad-fork
@version 0.1

module Control.Monad.Fork.Class

-- | The <a>MonadFork</a> type class, for monads which support a fork
--   operation.
--   
--   The instance for <a>IO</a> is simply <a>forkIO</a>, while several very
--   overlapping instances are provided for composite monads, using the
--   monad-control package.
--   
--   An example of a monad which has a <a>MonadFork</a> instance that is
--   not simply a lifted form of <a>forkIO</a> is the <tt>ResourceT</tt>
--   monad from the conduit package, which defines the operation
--   <tt>resourceForkIO</tt>. The instances defined here, using the
--   OverlappingInstances extension, will correctly handle the case of
--   monads transformed on top of <tt>ResourceT</tt> (assuming a definition
--   exists for <tt>ResourceT</tt>).
class MonadFork m
fork :: MonadFork m => m () -> m ThreadId
instance [overlap ok] (MonadTransControl t, MonadFork m, Monad m) => MonadFork (t m)
instance [overlap ok] (MonadFork b, MonadBaseControl b m) => MonadFork m
instance [overlap ok] MonadFork IO
