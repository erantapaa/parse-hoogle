-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Exact rational multiples of pi (and integer powers of pi)
--   
@package exact-pi
@version 0.2.0.0


-- | This type is sufficient to exactly express the closure of Q ∪ {π}
--   under multiplication and division. As a result it is useful for
--   representing conversion factors between physical units. Approximate
--   values are included both to close the remainder of the arithmetic
--   operations in the <a>Num</a> typeclass and to encode conversion
--   factors defined experimentally.
module Data.ExactPi

-- | Represents an exact or approximate real value. The exactly
--   representable values are rational multiples of an integer power of pi.
data ExactPi

-- | <tt><a>Exact</a> z q</tt> = q * pi^z. Note that this means there are
--   many representations of zero.
Exact :: Integer -> Rational -> ExactPi

-- | An approximate value. This representation was chosen because it allows
--   conversion to floating types using their native definition of
--   <a>pi</a>.
Approximate :: (forall a. Floating a => a) -> ExactPi

-- | Approximates an exact or approximate value, converting it to a
--   <a>Floating</a> type. This uses the value of <a>pi</a> supplied by the
--   destination type, to provide the appropriate precision.
approximateValue :: Floating a => ExactPi -> a

-- | Identifies whether an <a>ExactPi</a> is an exact representation of
--   zero.
isExactZero :: ExactPi -> Bool

-- | Identifies whether an <a>ExactPi</a> is an exact representation of
--   one.
isExactOne :: ExactPi -> Bool
instance Monoid ExactPi
instance Floating ExactPi
instance Fractional ExactPi
instance Num ExactPi
instance Show ExactPi
