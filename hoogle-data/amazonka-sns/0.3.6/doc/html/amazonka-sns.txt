-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Amazon Simple Notification Service SDK.
--   
@package amazonka-sns
@version 0.3.6

module Network.AWS.SNS.Types

-- | Version <tt>2010-03-31</tt> of the Amazon Simple Notification Service
--   service.
data SNS
data RESTError :: *
ns :: Text
data Topic

-- | <a>Topic</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>tTopicArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
topic :: Topic

-- | The topic's ARN.
tTopicArn :: Lens' Topic (Maybe Text)
data MessageAttributeValue

-- | <a>MessageAttributeValue</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>mavBinaryValue</a> <tt>::</tt> <a>Maybe</a> <a>Base64</a></li>
--   <li><a>mavDataType</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>mavStringValue</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
messageAttributeValue :: Text -> MessageAttributeValue

-- | Binary type attributes can store any binary data, for example,
--   compressed data, encrypted data, or images.
mavBinaryValue :: Lens' MessageAttributeValue (Maybe Base64)

-- | Amazon SNS supports the following logical data types: String, Number,
--   and Binary. For more information, see <a>Message Attribute Data
--   Types</a>.
mavDataType :: Lens' MessageAttributeValue Text

-- | Strings are Unicode with UTF8 binary encoding. For a list of code
--   values, see
--   <a>http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters</a>.
mavStringValue :: Lens' MessageAttributeValue (Maybe Text)
data PlatformApplication

-- | <a>PlatformApplication</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>paAttributes</a> <tt>::</tt> <a>HashMap</a> <a>Text</a>
--   <a>Text</a></li>
--   <li><a>paPlatformApplicationArn</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
platformApplication :: PlatformApplication

-- | Attributes for platform application object.
paAttributes :: Lens' PlatformApplication (HashMap Text Text)

-- | PlatformApplicationArn for platform application object.
paPlatformApplicationArn :: Lens' PlatformApplication (Maybe Text)
data Subscription

-- | <a>Subscription</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>s1Endpoint</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>s1Owner</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>s1Protocol</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>s1SubscriptionArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>s1TopicArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
subscription :: Subscription

-- | The subscription's endpoint (format depends on the protocol).
s1Endpoint :: Lens' Subscription (Maybe Text)

-- | The subscription's owner.
s1Owner :: Lens' Subscription (Maybe Text)

-- | The subscription's protocol.
s1Protocol :: Lens' Subscription (Maybe Text)

-- | The subscription's ARN.
s1SubscriptionArn :: Lens' Subscription (Maybe Text)

-- | The ARN of the subscription's topic.
s1TopicArn :: Lens' Subscription (Maybe Text)
data Endpoint

-- | <a>Endpoint</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>eAttributes</a> <tt>::</tt> <a>HashMap</a> <a>Text</a>
--   <a>Text</a></li>
--   <li><a>eEndpointArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
endpoint :: Endpoint

-- | Attributes for endpoint.
eAttributes :: Lens' Endpoint (HashMap Text Text)

-- | EndpointArn for mobile app and device.
eEndpointArn :: Lens' Endpoint (Maybe Text)
instance Eq Topic
instance Ord Topic
instance Read Topic
instance Show Topic
instance Monoid Topic
instance Eq MessageAttributeValue
instance Read MessageAttributeValue
instance Show MessageAttributeValue
instance Eq PlatformApplication
instance Read PlatformApplication
instance Show PlatformApplication
instance Eq Subscription
instance Ord Subscription
instance Read Subscription
instance Show Subscription
instance Eq Endpoint
instance Read Endpoint
instance Show Endpoint
instance ToQuery Endpoint
instance FromXML Endpoint
instance ToQuery Subscription
instance FromXML Subscription
instance ToQuery PlatformApplication
instance FromXML PlatformApplication
instance ToQuery MessageAttributeValue
instance FromXML MessageAttributeValue
instance ToQuery Topic
instance FromXML Topic
instance AWSService SNS


-- | Deletes a subscription. If the subscription requires authentication
--   for deletion, only the owner of the subscription or the topic's owner
--   can unsubscribe, and an AWS signature is required. If the
--   <a>Unsubscribe</a> call does not require authentication and the
--   requester is not the subscription owner, a final cancellation message
--   is delivered to the endpoint, so that the endpoint owner can easily
--   resubscribe to the topic if the <a>Unsubscribe</a> request was
--   unintended.
--   
--   <a>http://docs.aws.amazon.com/sns/latest/api/API_Unsubscribe.html</a>
module Network.AWS.SNS.Unsubscribe
data Unsubscribe

-- | <a>Unsubscribe</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uSubscriptionArn</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
unsubscribe :: Text -> Unsubscribe

-- | The ARN of the subscription to be deleted.
uSubscriptionArn :: Lens' Unsubscribe Text
data UnsubscribeResponse

-- | <a>UnsubscribeResponse</a> constructor.
unsubscribeResponse :: UnsubscribeResponse
instance Eq Unsubscribe
instance Ord Unsubscribe
instance Read Unsubscribe
instance Show Unsubscribe
instance Monoid Unsubscribe
instance IsString Unsubscribe
instance Eq UnsubscribeResponse
instance Ord UnsubscribeResponse
instance Read UnsubscribeResponse
instance Show UnsubscribeResponse
instance Generic UnsubscribeResponse
instance Datatype D1UnsubscribeResponse
instance Constructor C1_0UnsubscribeResponse
instance AWSRequest Unsubscribe
instance ToHeaders Unsubscribe
instance ToQuery Unsubscribe
instance ToPath Unsubscribe


-- | Prepares to subscribe an endpoint by sending the endpoint a
--   confirmation message. To actually create a subscription, the endpoint
--   owner must call the <tt>ConfirmSubscription</tt> action with the token
--   from the confirmation message. Confirmation tokens are valid for three
--   days.
--   
--   <a>http://docs.aws.amazon.com/sns/latest/api/API_Subscribe.html</a>
module Network.AWS.SNS.Subscribe
data Subscribe

-- | <a>Subscribe</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sEndpoint</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>sProtocol</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>sTopicArn</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
subscribe :: Text -> Text -> Subscribe

-- | The endpoint that you want to receive notifications. Endpoints vary by
--   protocol:
--   
--   For the <tt>http</tt> protocol, the endpoint is an URL beginning with
--   "<a>http://"</a> For the <tt>https</tt> protocol, the endpoint is a
--   URL beginning with "<a>https://"</a> For the <tt>email</tt> protocol,
--   the endpoint is an email address For the 'email-json' protocol, the
--   endpoint is an email address For the <tt>sms</tt> protocol, the
--   endpoint is a phone number of an SMS-enabled device For the
--   <tt>sqs</tt> protocol, the endpoint is the ARN of an Amazon SQS queue
--   For the <tt>application</tt> protocol, the endpoint is the EndpointArn
--   of a mobile app and device.
sEndpoint :: Lens' Subscribe (Maybe Text)

-- | The protocol you want to use. Supported protocols include:
--   
--   <tt>http</tt> -- delivery of JSON-encoded message via HTTP POST
--   <tt>https</tt> -- delivery of JSON-encoded message via HTTPS POST
--   <tt>email</tt> -- delivery of message via SMTP 'email-json' --
--   delivery of JSON-encoded message via SMTP <tt>sms</tt> -- delivery of
--   message via SMS <tt>sqs</tt> -- delivery of JSON-encoded message to an
--   Amazon SQS queue <tt>application</tt> -- delivery of JSON-encoded
--   message to an EndpointArn for a mobile app and device.
sProtocol :: Lens' Subscribe Text

-- | The ARN of the topic you want to subscribe to.
sTopicArn :: Lens' Subscribe Text
data SubscribeResponse

-- | <a>SubscribeResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>srSubscriptionArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
subscribeResponse :: SubscribeResponse

-- | The ARN of the subscription, if the service was able to create a
--   subscription immediately (without requiring endpoint owner
--   confirmation).
srSubscriptionArn :: Lens' SubscribeResponse (Maybe Text)
instance Eq Subscribe
instance Ord Subscribe
instance Read Subscribe
instance Show Subscribe
instance Eq SubscribeResponse
instance Ord SubscribeResponse
instance Read SubscribeResponse
instance Show SubscribeResponse
instance Monoid SubscribeResponse
instance FromXML SubscribeResponse
instance AWSRequest Subscribe
instance ToHeaders Subscribe
instance ToQuery Subscribe
instance ToPath Subscribe


-- | Allows a topic owner to set an attribute of the topic to a new value.
--   
--   
--   <a>http://docs.aws.amazon.com/sns/latest/api/API_SetTopicAttributes.html</a>
module Network.AWS.SNS.SetTopicAttributes
data SetTopicAttributes

-- | <a>SetTopicAttributes</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>staAttributeName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>staAttributeValue</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>staTopicArn</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
setTopicAttributes :: Text -> Text -> SetTopicAttributes

-- | The name of the attribute you want to set. Only a subset of the
--   topic's attributes are mutable.
--   
--   Valid values: <tt>Policy</tt> | <tt>DisplayName</tt> |
--   <tt>DeliveryPolicy</tt>
staAttributeName :: Lens' SetTopicAttributes Text

-- | The new value for the attribute.
staAttributeValue :: Lens' SetTopicAttributes (Maybe Text)

-- | The ARN of the topic to modify.
staTopicArn :: Lens' SetTopicAttributes Text
data SetTopicAttributesResponse

-- | <a>SetTopicAttributesResponse</a> constructor.
setTopicAttributesResponse :: SetTopicAttributesResponse
instance Eq SetTopicAttributes
instance Ord SetTopicAttributes
instance Read SetTopicAttributes
instance Show SetTopicAttributes
instance Eq SetTopicAttributesResponse
instance Ord SetTopicAttributesResponse
instance Read SetTopicAttributesResponse
instance Show SetTopicAttributesResponse
instance Generic SetTopicAttributesResponse
instance Datatype D1SetTopicAttributesResponse
instance Constructor C1_0SetTopicAttributesResponse
instance AWSRequest SetTopicAttributes
instance ToHeaders SetTopicAttributes
instance ToQuery SetTopicAttributes
instance ToPath SetTopicAttributes


-- | Allows a subscription owner to set an attribute of the topic to a new
--   value.
--   
--   
--   <a>http://docs.aws.amazon.com/sns/latest/api/API_SetSubscriptionAttributes.html</a>
module Network.AWS.SNS.SetSubscriptionAttributes
data SetSubscriptionAttributes

-- | <a>SetSubscriptionAttributes</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ssaAttributeName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ssaAttributeValue</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ssaSubscriptionArn</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
setSubscriptionAttributes :: Text -> Text -> SetSubscriptionAttributes

-- | The name of the attribute you want to set. Only a subset of the
--   subscriptions attributes are mutable.
--   
--   Valid values: <tt>DeliveryPolicy</tt> | <tt>RawMessageDelivery</tt>
ssaAttributeName :: Lens' SetSubscriptionAttributes Text

-- | The new value for the attribute in JSON format.
ssaAttributeValue :: Lens' SetSubscriptionAttributes (Maybe Text)

-- | The ARN of the subscription to modify.
ssaSubscriptionArn :: Lens' SetSubscriptionAttributes Text
data SetSubscriptionAttributesResponse

-- | <a>SetSubscriptionAttributesResponse</a> constructor.
setSubscriptionAttributesResponse :: SetSubscriptionAttributesResponse
instance Eq SetSubscriptionAttributes
instance Ord SetSubscriptionAttributes
instance Read SetSubscriptionAttributes
instance Show SetSubscriptionAttributes
instance Eq SetSubscriptionAttributesResponse
instance Ord SetSubscriptionAttributesResponse
instance Read SetSubscriptionAttributesResponse
instance Show SetSubscriptionAttributesResponse
instance Generic SetSubscriptionAttributesResponse
instance Datatype D1SetSubscriptionAttributesResponse
instance Constructor C1_0SetSubscriptionAttributesResponse
instance AWSRequest SetSubscriptionAttributes
instance ToHeaders SetSubscriptionAttributes
instance ToQuery SetSubscriptionAttributes
instance ToPath SetSubscriptionAttributes


-- | Sets the attributes of the platform application object for the
--   supported push notification services, such as APNS and GCM. For more
--   information, see <a>UsingAmazon SNS Mobile Push Notifications</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/sns/latest/api/API_SetPlatformApplicationAttributes.html</a>
module Network.AWS.SNS.SetPlatformApplicationAttributes
data SetPlatformApplicationAttributes

-- | <a>SetPlatformApplicationAttributes</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>spaaAttributes</a> <tt>::</tt> <a>HashMap</a> <a>Text</a>
--   <a>Text</a></li>
--   <li><a>spaaPlatformApplicationArn</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
setPlatformApplicationAttributes :: Text -> SetPlatformApplicationAttributes

-- | A map of the platform application attributes. Attributes in this map
--   include the following:
--   
--   <tt>PlatformCredential</tt> -- The credential received from the
--   notification service. For APNS/APNS_SANDBOX, PlatformCredential is
--   "private key". For GCM, PlatformCredential is "API key". For ADM,
--   PlatformCredential is "client secret". <tt>PlatformPrincipal</tt> --
--   The principal received from the notification service. For
--   APNS/APNS_SANDBOX, PlatformPrincipal is "SSL certificate". For GCM,
--   PlatformPrincipal is not applicable. For ADM, PlatformPrincipal is
--   "client id". <tt>EventEndpointCreated</tt> -- Topic ARN to which
--   EndpointCreated event notifications should be sent.
--   <tt>EventEndpointDeleted</tt> -- Topic ARN to which EndpointDeleted
--   event notifications should be sent. <tt>EventEndpointUpdated</tt> --
--   Topic ARN to which EndpointUpdate event notifications should be sent.
--   <tt>EventDeliveryFailure</tt> -- Topic ARN to which DeliveryFailure
--   event notifications should be sent upon Direct Publish delivery
--   failure (permanent) to one of the application's endpoints.
spaaAttributes :: Lens' SetPlatformApplicationAttributes (HashMap Text Text)

-- | PlatformApplicationArn for SetPlatformApplicationAttributes action.
spaaPlatformApplicationArn :: Lens' SetPlatformApplicationAttributes Text
data SetPlatformApplicationAttributesResponse

-- | <a>SetPlatformApplicationAttributesResponse</a> constructor.
setPlatformApplicationAttributesResponse :: SetPlatformApplicationAttributesResponse
instance Eq SetPlatformApplicationAttributes
instance Read SetPlatformApplicationAttributes
instance Show SetPlatformApplicationAttributes
instance Eq SetPlatformApplicationAttributesResponse
instance Ord SetPlatformApplicationAttributesResponse
instance Read SetPlatformApplicationAttributesResponse
instance Show SetPlatformApplicationAttributesResponse
instance Generic SetPlatformApplicationAttributesResponse
instance Datatype D1SetPlatformApplicationAttributesResponse
instance Constructor C1_0SetPlatformApplicationAttributesResponse
instance AWSRequest SetPlatformApplicationAttributes
instance ToHeaders SetPlatformApplicationAttributes
instance ToQuery SetPlatformApplicationAttributes
instance ToPath SetPlatformApplicationAttributes


-- | Sets the attributes for an endpoint for a device on one of the
--   supported push notification services, such as GCM and APNS. For more
--   information, see <a>UsingAmazon SNS Mobile Push Notifications</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/sns/latest/api/API_SetEndpointAttributes.html</a>
module Network.AWS.SNS.SetEndpointAttributes
data SetEndpointAttributes

-- | <a>SetEndpointAttributes</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>seaAttributes</a> <tt>::</tt> <a>HashMap</a> <a>Text</a>
--   <a>Text</a></li>
--   <li><a>seaEndpointArn</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
setEndpointAttributes :: Text -> SetEndpointAttributes

-- | A map of the endpoint attributes. Attributes in this map include the
--   following:
--   
--   <tt>CustomUserData</tt> -- arbitrary user data to associate with the
--   endpoint. Amazon SNS does not use this data. The data must be in UTF-8
--   format and less than 2KB. <tt>Enabled</tt> -- flag that
--   enables/disables delivery to the endpoint. Amazon SNS will set this to
--   false when a notification service indicates to Amazon SNS that the
--   endpoint is invalid. Users can set it back to true, typically after
--   updating Token. <tt>Token</tt> -- device token, also referred to as a
--   registration id, for an app and mobile device. This is returned from
--   the notification service when an app and mobile device are registered
--   with the notification service.
seaAttributes :: Lens' SetEndpointAttributes (HashMap Text Text)

-- | EndpointArn used for SetEndpointAttributes action.
seaEndpointArn :: Lens' SetEndpointAttributes Text
data SetEndpointAttributesResponse

-- | <a>SetEndpointAttributesResponse</a> constructor.
setEndpointAttributesResponse :: SetEndpointAttributesResponse
instance Eq SetEndpointAttributes
instance Read SetEndpointAttributes
instance Show SetEndpointAttributes
instance Eq SetEndpointAttributesResponse
instance Ord SetEndpointAttributesResponse
instance Read SetEndpointAttributesResponse
instance Show SetEndpointAttributesResponse
instance Generic SetEndpointAttributesResponse
instance Datatype D1SetEndpointAttributesResponse
instance Constructor C1_0SetEndpointAttributesResponse
instance AWSRequest SetEndpointAttributes
instance ToHeaders SetEndpointAttributes
instance ToQuery SetEndpointAttributes
instance ToPath SetEndpointAttributes


-- | Removes a statement from a topic's access control policy.
--   
--   
--   <a>http://docs.aws.amazon.com/sns/latest/api/API_RemovePermission.html</a>
module Network.AWS.SNS.RemovePermission
data RemovePermission

-- | <a>RemovePermission</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rpLabel</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rpTopicArn</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
removePermission :: Text -> Text -> RemovePermission

-- | The unique label of the statement you want to remove.
rpLabel :: Lens' RemovePermission Text

-- | The ARN of the topic whose access control policy you wish to modify.
rpTopicArn :: Lens' RemovePermission Text
data RemovePermissionResponse

-- | <a>RemovePermissionResponse</a> constructor.
removePermissionResponse :: RemovePermissionResponse
instance Eq RemovePermission
instance Ord RemovePermission
instance Read RemovePermission
instance Show RemovePermission
instance Eq RemovePermissionResponse
instance Ord RemovePermissionResponse
instance Read RemovePermissionResponse
instance Show RemovePermissionResponse
instance Generic RemovePermissionResponse
instance Datatype D1RemovePermissionResponse
instance Constructor C1_0RemovePermissionResponse
instance AWSRequest RemovePermission
instance ToHeaders RemovePermission
instance ToQuery RemovePermission
instance ToPath RemovePermission


-- | Sends a message to all of a topic's subscribed endpoints. When a
--   <tt>messageId</tt> is returned, the message has been saved and Amazon
--   SNS will attempt to deliver it to the topic's subscribers shortly. The
--   format of the outgoing message to each subscribed endpoint depends on
--   the notification protocol selected.
--   
--   To use the <a>Publish</a> action for sending a message to a mobile
--   endpoint, such as an app on a Kindle device or mobile phone, you must
--   specify the EndpointArn. The EndpointArn is returned when making a
--   call with the <tt>CreatePlatformEndpoint</tt> action. The second
--   example below shows a request and response for publishing to a mobile
--   endpoint.
--   
--   <a>http://docs.aws.amazon.com/sns/latest/api/API_Publish.html</a>
module Network.AWS.SNS.Publish
data Publish

-- | <a>Publish</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pMessage</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>pMessageAttributes</a> <tt>::</tt> <a>HashMap</a> <a>Text</a>
--   <a>MessageAttributeValue</a></li>
--   <li><a>pMessageStructure</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pSubject</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pTargetArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pTopicArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
publish :: Text -> Publish

-- | The message you want to send to the topic.
--   
--   If you want to send the same message to all transport protocols,
--   include the text of the message as a String value.
--   
--   If you want to send different messages for each transport protocol,
--   set the value of the <tt>MessageStructure</tt> parameter to
--   <tt>json</tt> and use a JSON object for the <tt>Message</tt>
--   parameter. See the Examples section for the format of the JSON object.
--   
--   Constraints: Messages must be UTF-8 encoded strings at most 256 KB in
--   size (262144 bytes, not 262144 characters).
--   
--   JSON-specific constraints: Keys in the JSON object that correspond to
--   supported transport protocols must have simple JSON string values. The
--   values will be parsed (unescaped) before they are used in outgoing
--   messages. Outbound notifications are JSON encoded (meaning that the
--   characters will be reescaped for sending). Values have a minimum
--   length of 0 (the empty string, "", is allowed). Values have a maximum
--   length bounded by the overall message size (so, including multiple
--   protocols may limit message sizes). Non-string values will cause the
--   key to be ignored. Keys that do not correspond to supported transport
--   protocols are ignored. Duplicate keys are not allowed. Failure to
--   parse or validate any key or value in the message will cause the
--   <a>Publish</a> call to return an error (no partial delivery).
pMessage :: Lens' Publish Text

-- | Message attributes for Publish action.
pMessageAttributes :: Lens' Publish (HashMap Text MessageAttributeValue)

-- | Set <tt>MessageStructure</tt> to <tt>json</tt> if you want to send a
--   different message for each protocol. For example, using one publish
--   action, you can send a short message to your SMS subscribers and a
--   longer message to your email subscribers. If you set
--   <tt>MessageStructure</tt> to <tt>json</tt>, the value of the
--   <tt>Message</tt> parameter must:
--   
--   be a syntactically valid JSON object; and contain at least a top-level
--   JSON key of "default" with a value that is a string. You can define
--   other top-level keys that define the message you want to send to a
--   specific transport protocol (e.g., "http").
--   
--   For information about sending different messages for each protocol
--   using the AWS Management Console, go to <a>Create Different Messages
--   for Each Protocol</a> in the <i>Amazon Simple Notification Service
--   Getting Started Guide</i>.
--   
--   Valid value: <tt>json</tt>
pMessageStructure :: Lens' Publish (Maybe Text)

-- | Optional parameter to be used as the <a>Subject</a> line when the
--   message is delivered to email endpoints. This field will also be
--   included, if present, in the standard JSON messages delivered to other
--   endpoints.
--   
--   Constraints: Subjects must be ASCII text that begins with a letter,
--   number, or punctuation mark; must not include line breaks or control
--   characters; and must be less than 100 characters long.
pSubject :: Lens' Publish (Maybe Text)

-- | Either TopicArn or EndpointArn, but not both.
pTargetArn :: Lens' Publish (Maybe Text)

-- | The topic you want to publish to.
pTopicArn :: Lens' Publish (Maybe Text)
data PublishResponse

-- | <a>PublishResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>prMessageId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
publishResponse :: PublishResponse

-- | Unique identifier assigned to the published message.
--   
--   Length Constraint: Maximum 100 characters
prMessageId :: Lens' PublishResponse (Maybe Text)
instance Eq Publish
instance Read Publish
instance Show Publish
instance Eq PublishResponse
instance Ord PublishResponse
instance Read PublishResponse
instance Show PublishResponse
instance Monoid PublishResponse
instance FromXML PublishResponse
instance AWSRequest Publish
instance ToHeaders Publish
instance ToQuery Publish
instance ToPath Publish


-- | Returns a list of the requester's topics. Each call returns a limited
--   list of topics, up to 100. If there are more topics, a
--   <tt>NextToken</tt> is also returned. Use the <tt>NextToken</tt>
--   parameter in a new <a>ListTopics</a> call to get further results.
--   
--   <a>http://docs.aws.amazon.com/sns/latest/api/API_ListTopics.html</a>
module Network.AWS.SNS.ListTopics
data ListTopics

-- | <a>ListTopics</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ltNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listTopics :: ListTopics

-- | Token returned by the previous <a>ListTopics</a> request.
ltNextToken :: Lens' ListTopics (Maybe Text)
data ListTopicsResponse

-- | <a>ListTopicsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ltrNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ltrTopics</a> <tt>::</tt> [<a>Topic</a>]</li>
--   </ul>
listTopicsResponse :: ListTopicsResponse

-- | Token to pass along to the next <a>ListTopics</a> request. This
--   element is returned if there are additional topics to retrieve.
ltrNextToken :: Lens' ListTopicsResponse (Maybe Text)

-- | A list of topic ARNs.
ltrTopics :: Lens' ListTopicsResponse [Topic]
instance Eq ListTopics
instance Ord ListTopics
instance Read ListTopics
instance Show ListTopics
instance Monoid ListTopics
instance Eq ListTopicsResponse
instance Read ListTopicsResponse
instance Show ListTopicsResponse
instance AWSPager ListTopics
instance FromXML ListTopicsResponse
instance AWSRequest ListTopics
instance ToHeaders ListTopics
instance ToQuery ListTopics
instance ToPath ListTopics


-- | Returns a list of the subscriptions to a specific topic. Each call
--   returns a limited list of subscriptions, up to 100. If there are more
--   subscriptions, a <tt>NextToken</tt> is also returned. Use the
--   <tt>NextToken</tt> parameter in a new <a>ListSubscriptionsByTopic</a>
--   call to get further results.
--   
--   
--   <a>http://docs.aws.amazon.com/sns/latest/api/API_ListSubscriptionsByTopic.html</a>
module Network.AWS.SNS.ListSubscriptionsByTopic
data ListSubscriptionsByTopic

-- | <a>ListSubscriptionsByTopic</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lsbtNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lsbtTopicArn</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
listSubscriptionsByTopic :: Text -> ListSubscriptionsByTopic

-- | Token returned by the previous <a>ListSubscriptionsByTopic</a>
--   request.
lsbtNextToken :: Lens' ListSubscriptionsByTopic (Maybe Text)

-- | The ARN of the topic for which you wish to find subscriptions.
lsbtTopicArn :: Lens' ListSubscriptionsByTopic Text
data ListSubscriptionsByTopicResponse

-- | <a>ListSubscriptionsByTopicResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lsbtrNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lsbtrSubscriptions</a> <tt>::</tt> [<a>Subscription</a>]</li>
--   </ul>
listSubscriptionsByTopicResponse :: ListSubscriptionsByTopicResponse

-- | Token to pass along to the next <a>ListSubscriptionsByTopic</a>
--   request. This element is returned if there are more subscriptions to
--   retrieve.
lsbtrNextToken :: Lens' ListSubscriptionsByTopicResponse (Maybe Text)

-- | A list of subscriptions.
lsbtrSubscriptions :: Lens' ListSubscriptionsByTopicResponse [Subscription]
instance Eq ListSubscriptionsByTopic
instance Ord ListSubscriptionsByTopic
instance Read ListSubscriptionsByTopic
instance Show ListSubscriptionsByTopic
instance Eq ListSubscriptionsByTopicResponse
instance Read ListSubscriptionsByTopicResponse
instance Show ListSubscriptionsByTopicResponse
instance AWSPager ListSubscriptionsByTopic
instance FromXML ListSubscriptionsByTopicResponse
instance AWSRequest ListSubscriptionsByTopic
instance ToHeaders ListSubscriptionsByTopic
instance ToQuery ListSubscriptionsByTopic
instance ToPath ListSubscriptionsByTopic


-- | Returns a list of the requester's subscriptions. Each call returns a
--   limited list of subscriptions, up to 100. If there are more
--   subscriptions, a <tt>NextToken</tt> is also returned. Use the
--   <tt>NextToken</tt> parameter in a new <a>ListSubscriptions</a> call to
--   get further results.
--   
--   
--   <a>http://docs.aws.amazon.com/sns/latest/api/API_ListSubscriptions.html</a>
module Network.AWS.SNS.ListSubscriptions
data ListSubscriptions

-- | <a>ListSubscriptions</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lsNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listSubscriptions :: ListSubscriptions

-- | Token returned by the previous <a>ListSubscriptions</a> request.
lsNextToken :: Lens' ListSubscriptions (Maybe Text)
data ListSubscriptionsResponse

-- | <a>ListSubscriptionsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lsrNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lsrSubscriptions</a> <tt>::</tt> [<a>Subscription</a>]</li>
--   </ul>
listSubscriptionsResponse :: ListSubscriptionsResponse

-- | Token to pass along to the next <a>ListSubscriptions</a> request. This
--   element is returned if there are more subscriptions to retrieve.
lsrNextToken :: Lens' ListSubscriptionsResponse (Maybe Text)

-- | A list of subscriptions.
lsrSubscriptions :: Lens' ListSubscriptionsResponse [Subscription]
instance Eq ListSubscriptions
instance Ord ListSubscriptions
instance Read ListSubscriptions
instance Show ListSubscriptions
instance Monoid ListSubscriptions
instance Eq ListSubscriptionsResponse
instance Read ListSubscriptionsResponse
instance Show ListSubscriptionsResponse
instance AWSPager ListSubscriptions
instance FromXML ListSubscriptionsResponse
instance AWSRequest ListSubscriptions
instance ToHeaders ListSubscriptions
instance ToQuery ListSubscriptions
instance ToPath ListSubscriptions


-- | Lists the platform application objects for the supported push
--   notification services, such as APNS and GCM. The results for
--   <a>ListPlatformApplications</a> are paginated and return a limited
--   list of applications, up to 100. If additional records are available
--   after the first page results, then a NextToken string will be
--   returned. To receive the next page, you call
--   <a>ListPlatformApplications</a> using the NextToken string received
--   from the previous call. When there are no more records to return,
--   NextToken will be null. For more information, see <a>Using Amazon SNS
--   Mobile Push Notifications</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/sns/latest/api/API_ListPlatformApplications.html</a>
module Network.AWS.SNS.ListPlatformApplications
data ListPlatformApplications

-- | <a>ListPlatformApplications</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lpaNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listPlatformApplications :: ListPlatformApplications

-- | NextToken string is used when calling ListPlatformApplications action
--   to retrieve additional records that are available after the first page
--   results.
lpaNextToken :: Lens' ListPlatformApplications (Maybe Text)
data ListPlatformApplicationsResponse

-- | <a>ListPlatformApplicationsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lparNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lparPlatformApplications</a> <tt>::</tt>
--   [<a>PlatformApplication</a>]</li>
--   </ul>
listPlatformApplicationsResponse :: ListPlatformApplicationsResponse

-- | NextToken string is returned when calling ListPlatformApplications
--   action if additional records are available after the first page
--   results.
lparNextToken :: Lens' ListPlatformApplicationsResponse (Maybe Text)

-- | Platform applications returned when calling ListPlatformApplications
--   action.
lparPlatformApplications :: Lens' ListPlatformApplicationsResponse [PlatformApplication]
instance Eq ListPlatformApplications
instance Ord ListPlatformApplications
instance Read ListPlatformApplications
instance Show ListPlatformApplications
instance Monoid ListPlatformApplications
instance Eq ListPlatformApplicationsResponse
instance Read ListPlatformApplicationsResponse
instance Show ListPlatformApplicationsResponse
instance AWSPager ListPlatformApplications
instance FromXML ListPlatformApplicationsResponse
instance AWSRequest ListPlatformApplications
instance ToHeaders ListPlatformApplications
instance ToQuery ListPlatformApplications
instance ToPath ListPlatformApplications


-- | Lists the endpoints and endpoint attributes for devices in a supported
--   push notification service, such as GCM and APNS. The results for
--   <a>ListEndpointsByPlatformApplication</a> are paginated and return a
--   limited list of endpoints, up to 100. If additional records are
--   available after the first page results, then a NextToken string will
--   be returned. To receive the next page, you call
--   <a>ListEndpointsByPlatformApplication</a> again using the NextToken
--   string received from the previous call. When there are no more records
--   to return, NextToken will be null. For more information, see <a>Using
--   Amazon SNS Mobile Push Notifications</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/sns/latest/api/API_ListEndpointsByPlatformApplication.html</a>
module Network.AWS.SNS.ListEndpointsByPlatformApplication
data ListEndpointsByPlatformApplication

-- | <a>ListEndpointsByPlatformApplication</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lebpaNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lebpaPlatformApplicationArn</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
listEndpointsByPlatformApplication :: Text -> ListEndpointsByPlatformApplication

-- | NextToken string is used when calling
--   ListEndpointsByPlatformApplication action to retrieve additional
--   records that are available after the first page results.
lebpaNextToken :: Lens' ListEndpointsByPlatformApplication (Maybe Text)

-- | PlatformApplicationArn for ListEndpointsByPlatformApplicationInput
--   action.
lebpaPlatformApplicationArn :: Lens' ListEndpointsByPlatformApplication Text
data ListEndpointsByPlatformApplicationResponse

-- | <a>ListEndpointsByPlatformApplicationResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lebparEndpoints</a> <tt>::</tt> [<a>Endpoint</a>]</li>
--   <li><a>lebparNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listEndpointsByPlatformApplicationResponse :: ListEndpointsByPlatformApplicationResponse

-- | Endpoints returned for ListEndpointsByPlatformApplication action.
lebparEndpoints :: Lens' ListEndpointsByPlatformApplicationResponse [Endpoint]

-- | NextToken string is returned when calling
--   ListEndpointsByPlatformApplication action if additional records are
--   available after the first page results.
lebparNextToken :: Lens' ListEndpointsByPlatformApplicationResponse (Maybe Text)
instance Eq ListEndpointsByPlatformApplication
instance Ord ListEndpointsByPlatformApplication
instance Read ListEndpointsByPlatformApplication
instance Show ListEndpointsByPlatformApplication
instance Eq ListEndpointsByPlatformApplicationResponse
instance Read ListEndpointsByPlatformApplicationResponse
instance Show ListEndpointsByPlatformApplicationResponse
instance AWSPager ListEndpointsByPlatformApplication
instance FromXML ListEndpointsByPlatformApplicationResponse
instance AWSRequest ListEndpointsByPlatformApplication
instance ToHeaders ListEndpointsByPlatformApplication
instance ToQuery ListEndpointsByPlatformApplication
instance ToPath ListEndpointsByPlatformApplication


-- | Returns all of the properties of a topic. Topic properties returned
--   might differ based on the authorization of the user.
--   
--   
--   <a>http://docs.aws.amazon.com/sns/latest/api/API_GetTopicAttributes.html</a>
module Network.AWS.SNS.GetTopicAttributes
data GetTopicAttributes

-- | <a>GetTopicAttributes</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gtaTopicArn</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getTopicAttributes :: Text -> GetTopicAttributes

-- | The ARN of the topic whose properties you want to get.
gtaTopicArn :: Lens' GetTopicAttributes Text
data GetTopicAttributesResponse

-- | <a>GetTopicAttributesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gtarAttributes</a> <tt>::</tt> <a>HashMap</a> <a>Text</a>
--   <a>Text</a></li>
--   </ul>
getTopicAttributesResponse :: GetTopicAttributesResponse

-- | A map of the topic's attributes. Attributes in this map include the
--   following:
--   
--   <tt>TopicArn</tt> -- the topic's ARN <tt>Owner</tt> -- the AWS account
--   ID of the topic's owner <tt>Policy</tt> -- the JSON serialization of
--   the topic's access control policy <tt>DisplayName</tt> -- the
--   human-readable name used in the <a>From</a> field for notifications to
--   email and email-json endpoints <tt>SubscriptionsPending</tt> -- the
--   number of subscriptions pending confirmation on this topic
--   <tt>SubscriptionsConfirmed</tt> -- the number of confirmed
--   subscriptions on this topic <tt>SubscriptionsDeleted</tt> -- the
--   number of deleted subscriptions on this topic <tt>DeliveryPolicy</tt>
--   -- the JSON serialization of the topic's delivery policy
--   <tt>EffectiveDeliveryPolicy</tt> -- the JSON serialization of the
--   effective delivery policy that takes into account system defaults
gtarAttributes :: Lens' GetTopicAttributesResponse (HashMap Text Text)
instance Eq GetTopicAttributes
instance Ord GetTopicAttributes
instance Read GetTopicAttributes
instance Show GetTopicAttributes
instance Monoid GetTopicAttributes
instance IsString GetTopicAttributes
instance Eq GetTopicAttributesResponse
instance Read GetTopicAttributesResponse
instance Show GetTopicAttributesResponse
instance Monoid GetTopicAttributesResponse
instance Semigroup GetTopicAttributesResponse
instance FromXML GetTopicAttributesResponse
instance AWSRequest GetTopicAttributes
instance ToHeaders GetTopicAttributes
instance ToQuery GetTopicAttributes
instance ToPath GetTopicAttributes


-- | Returns all of the properties of a subscription.
--   
--   
--   <a>http://docs.aws.amazon.com/sns/latest/api/API_GetSubscriptionAttributes.html</a>
module Network.AWS.SNS.GetSubscriptionAttributes
data GetSubscriptionAttributes

-- | <a>GetSubscriptionAttributes</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gsaSubscriptionArn</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getSubscriptionAttributes :: Text -> GetSubscriptionAttributes

-- | The ARN of the subscription whose properties you want to get.
gsaSubscriptionArn :: Lens' GetSubscriptionAttributes Text
data GetSubscriptionAttributesResponse

-- | <a>GetSubscriptionAttributesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gsarAttributes</a> <tt>::</tt> <a>HashMap</a> <a>Text</a>
--   <a>Text</a></li>
--   </ul>
getSubscriptionAttributesResponse :: GetSubscriptionAttributesResponse

-- | A map of the subscription's attributes. Attributes in this map include
--   the following:
--   
--   <tt>SubscriptionArn</tt> -- the subscription's ARN <tt>TopicArn</tt>
--   -- the topic ARN that the subscription is associated with
--   <tt>Owner</tt> -- the AWS account ID of the subscription's owner
--   <tt>ConfirmationWasAuthenticated</tt> -- true if the subscription
--   confirmation request was authenticated <tt>DeliveryPolicy</tt> -- the
--   JSON serialization of the subscription's delivery policy
--   <tt>EffectiveDeliveryPolicy</tt> -- the JSON serialization of the
--   effective delivery policy that takes into account the topic delivery
--   policy and account system defaults
gsarAttributes :: Lens' GetSubscriptionAttributesResponse (HashMap Text Text)
instance Eq GetSubscriptionAttributes
instance Ord GetSubscriptionAttributes
instance Read GetSubscriptionAttributes
instance Show GetSubscriptionAttributes
instance Monoid GetSubscriptionAttributes
instance IsString GetSubscriptionAttributes
instance Eq GetSubscriptionAttributesResponse
instance Read GetSubscriptionAttributesResponse
instance Show GetSubscriptionAttributesResponse
instance Monoid GetSubscriptionAttributesResponse
instance Semigroup GetSubscriptionAttributesResponse
instance FromXML GetSubscriptionAttributesResponse
instance AWSRequest GetSubscriptionAttributes
instance ToHeaders GetSubscriptionAttributes
instance ToQuery GetSubscriptionAttributes
instance ToPath GetSubscriptionAttributes


-- | Retrieves the attributes of the platform application object for the
--   supported push notification services, such as APNS and GCM. For more
--   information, see <a>Using Amazon SNS Mobile Push Notifications</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/sns/latest/api/API_GetPlatformApplicationAttributes.html</a>
module Network.AWS.SNS.GetPlatformApplicationAttributes
data GetPlatformApplicationAttributes

-- | <a>GetPlatformApplicationAttributes</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gpaaPlatformApplicationArn</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getPlatformApplicationAttributes :: Text -> GetPlatformApplicationAttributes

-- | PlatformApplicationArn for GetPlatformApplicationAttributesInput.
gpaaPlatformApplicationArn :: Lens' GetPlatformApplicationAttributes Text
data GetPlatformApplicationAttributesResponse

-- | <a>GetPlatformApplicationAttributesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gpaarAttributes</a> <tt>::</tt> <a>HashMap</a> <a>Text</a>
--   <a>Text</a></li>
--   </ul>
getPlatformApplicationAttributesResponse :: GetPlatformApplicationAttributesResponse

-- | Attributes include the following:
--   
--   <tt>EventEndpointCreated</tt> -- Topic ARN to which EndpointCreated
--   event notifications should be sent. <tt>EventEndpointDeleted</tt> --
--   Topic ARN to which EndpointDeleted event notifications should be sent.
--   <tt>EventEndpointUpdated</tt> -- Topic ARN to which EndpointUpdate
--   event notifications should be sent. <tt>EventDeliveryFailure</tt> --
--   Topic ARN to which DeliveryFailure event notifications should be sent
--   upon Direct Publish delivery failure (permanent) to one of the
--   application's endpoints.
gpaarAttributes :: Lens' GetPlatformApplicationAttributesResponse (HashMap Text Text)
instance Eq GetPlatformApplicationAttributes
instance Ord GetPlatformApplicationAttributes
instance Read GetPlatformApplicationAttributes
instance Show GetPlatformApplicationAttributes
instance Monoid GetPlatformApplicationAttributes
instance IsString GetPlatformApplicationAttributes
instance Eq GetPlatformApplicationAttributesResponse
instance Read GetPlatformApplicationAttributesResponse
instance Show GetPlatformApplicationAttributesResponse
instance Monoid GetPlatformApplicationAttributesResponse
instance Semigroup GetPlatformApplicationAttributesResponse
instance FromXML GetPlatformApplicationAttributesResponse
instance AWSRequest GetPlatformApplicationAttributes
instance ToHeaders GetPlatformApplicationAttributes
instance ToQuery GetPlatformApplicationAttributes
instance ToPath GetPlatformApplicationAttributes


-- | Retrieves the endpoint attributes for a device on one of the supported
--   push notification services, such as GCM and APNS. For more
--   information, see <a>UsingAmazon SNS Mobile Push Notifications</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/sns/latest/api/API_GetEndpointAttributes.html</a>
module Network.AWS.SNS.GetEndpointAttributes
data GetEndpointAttributes

-- | <a>GetEndpointAttributes</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>geaEndpointArn</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getEndpointAttributes :: Text -> GetEndpointAttributes

-- | EndpointArn for GetEndpointAttributes input.
geaEndpointArn :: Lens' GetEndpointAttributes Text
data GetEndpointAttributesResponse

-- | <a>GetEndpointAttributesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gearAttributes</a> <tt>::</tt> <a>HashMap</a> <a>Text</a>
--   <a>Text</a></li>
--   </ul>
getEndpointAttributesResponse :: GetEndpointAttributesResponse

-- | Attributes include the following:
--   
--   <tt>CustomUserData</tt> -- arbitrary user data to associate with the
--   endpoint. Amazon SNS does not use this data. The data must be in UTF-8
--   format and less than 2KB. <tt>Enabled</tt> -- flag that
--   enables/disables delivery to the endpoint. Amazon SNS will set this to
--   false when a notification service indicates to Amazon SNS that the
--   endpoint is invalid. Users can set it back to true, typically after
--   updating Token. <tt>Token</tt> -- device token, also referred to as a
--   registration id, for an app and mobile device. This is returned from
--   the notification service when an app and mobile device are registered
--   with the notification service.
gearAttributes :: Lens' GetEndpointAttributesResponse (HashMap Text Text)
instance Eq GetEndpointAttributes
instance Ord GetEndpointAttributes
instance Read GetEndpointAttributes
instance Show GetEndpointAttributes
instance Monoid GetEndpointAttributes
instance IsString GetEndpointAttributes
instance Eq GetEndpointAttributesResponse
instance Read GetEndpointAttributesResponse
instance Show GetEndpointAttributesResponse
instance Monoid GetEndpointAttributesResponse
instance Semigroup GetEndpointAttributesResponse
instance FromXML GetEndpointAttributesResponse
instance AWSRequest GetEndpointAttributes
instance ToHeaders GetEndpointAttributes
instance ToQuery GetEndpointAttributes
instance ToPath GetEndpointAttributes


-- | Deletes a topic and all its subscriptions. Deleting a topic might
--   prevent some messages previously sent to the topic from being
--   delivered to subscribers. This action is idempotent, so deleting a
--   topic that does not exist does not result in an error.
--   
--   <a>http://docs.aws.amazon.com/sns/latest/api/API_DeleteTopic.html</a>
module Network.AWS.SNS.DeleteTopic
data DeleteTopic

-- | <a>DeleteTopic</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dtTopicArn</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteTopic :: Text -> DeleteTopic

-- | The ARN of the topic you want to delete.
dtTopicArn :: Lens' DeleteTopic Text
data DeleteTopicResponse

-- | <a>DeleteTopicResponse</a> constructor.
deleteTopicResponse :: DeleteTopicResponse
instance Eq DeleteTopic
instance Ord DeleteTopic
instance Read DeleteTopic
instance Show DeleteTopic
instance Monoid DeleteTopic
instance IsString DeleteTopic
instance Eq DeleteTopicResponse
instance Ord DeleteTopicResponse
instance Read DeleteTopicResponse
instance Show DeleteTopicResponse
instance Generic DeleteTopicResponse
instance Datatype D1DeleteTopicResponse
instance Constructor C1_0DeleteTopicResponse
instance AWSRequest DeleteTopic
instance ToHeaders DeleteTopic
instance ToQuery DeleteTopic
instance ToPath DeleteTopic


-- | Deletes a platform application object for one of the supported push
--   notification services, such as APNS and GCM. For more information, see
--   <a>UsingAmazon SNS Mobile Push Notifications</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/sns/latest/api/API_DeletePlatformApplication.html</a>
module Network.AWS.SNS.DeletePlatformApplication
data DeletePlatformApplication

-- | <a>DeletePlatformApplication</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dpaPlatformApplicationArn</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deletePlatformApplication :: Text -> DeletePlatformApplication

-- | PlatformApplicationArn of platform application object to delete.
dpaPlatformApplicationArn :: Lens' DeletePlatformApplication Text
data DeletePlatformApplicationResponse

-- | <a>DeletePlatformApplicationResponse</a> constructor.
deletePlatformApplicationResponse :: DeletePlatformApplicationResponse
instance Eq DeletePlatformApplication
instance Ord DeletePlatformApplication
instance Read DeletePlatformApplication
instance Show DeletePlatformApplication
instance Monoid DeletePlatformApplication
instance IsString DeletePlatformApplication
instance Eq DeletePlatformApplicationResponse
instance Ord DeletePlatformApplicationResponse
instance Read DeletePlatformApplicationResponse
instance Show DeletePlatformApplicationResponse
instance Generic DeletePlatformApplicationResponse
instance Datatype D1DeletePlatformApplicationResponse
instance Constructor C1_0DeletePlatformApplicationResponse
instance AWSRequest DeletePlatformApplication
instance ToHeaders DeletePlatformApplication
instance ToQuery DeletePlatformApplication
instance ToPath DeletePlatformApplication


-- | Deletes the endpoint from Amazon SNS. This action is idempotent. For
--   more information, see <a>Using Amazon SNS Mobile Push
--   Notifications</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/sns/latest/api/API_DeleteEndpoint.html</a>
module Network.AWS.SNS.DeleteEndpoint
data DeleteEndpoint

-- | <a>DeleteEndpoint</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>deEndpointArn</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteEndpoint :: Text -> DeleteEndpoint

-- | EndpointArn of endpoint to delete.
deEndpointArn :: Lens' DeleteEndpoint Text
data DeleteEndpointResponse

-- | <a>DeleteEndpointResponse</a> constructor.
deleteEndpointResponse :: DeleteEndpointResponse
instance Eq DeleteEndpoint
instance Ord DeleteEndpoint
instance Read DeleteEndpoint
instance Show DeleteEndpoint
instance Monoid DeleteEndpoint
instance IsString DeleteEndpoint
instance Eq DeleteEndpointResponse
instance Ord DeleteEndpointResponse
instance Read DeleteEndpointResponse
instance Show DeleteEndpointResponse
instance Generic DeleteEndpointResponse
instance Datatype D1DeleteEndpointResponse
instance Constructor C1_0DeleteEndpointResponse
instance AWSRequest DeleteEndpoint
instance ToHeaders DeleteEndpoint
instance ToQuery DeleteEndpoint
instance ToPath DeleteEndpoint


-- | Creates a topic to which notifications can be published. Users can
--   create at most 3000 topics. For more information, see
--   <a>http://aws.amazon.com/sns</a>. This action is idempotent, so if the
--   requester already owns a topic with the specified name, that topic's
--   ARN is returned without creating a new topic.
--   
--   <a>http://docs.aws.amazon.com/sns/latest/api/API_CreateTopic.html</a>
module Network.AWS.SNS.CreateTopic
data CreateTopic

-- | <a>CreateTopic</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ctName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createTopic :: Text -> CreateTopic

-- | The name of the topic you want to create.
--   
--   Constraints: Topic names must be made up of only uppercase and
--   lowercase ASCII letters, numbers, underscores, and hyphens, and must
--   be between 1 and 256 characters long.
ctName :: Lens' CreateTopic Text
data CreateTopicResponse

-- | <a>CreateTopicResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ctrTopicArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
createTopicResponse :: CreateTopicResponse

-- | The Amazon Resource Name (ARN) assigned to the created topic.
ctrTopicArn :: Lens' CreateTopicResponse (Maybe Text)
instance Eq CreateTopic
instance Ord CreateTopic
instance Read CreateTopic
instance Show CreateTopic
instance Monoid CreateTopic
instance IsString CreateTopic
instance Eq CreateTopicResponse
instance Ord CreateTopicResponse
instance Read CreateTopicResponse
instance Show CreateTopicResponse
instance Monoid CreateTopicResponse
instance FromXML CreateTopicResponse
instance AWSRequest CreateTopic
instance ToHeaders CreateTopic
instance ToQuery CreateTopic
instance ToPath CreateTopic


-- | Creates an endpoint for a device and mobile app on one of the
--   supported push notification services, such as GCM and APNS.
--   <a>CreatePlatformEndpoint</a> requires the PlatformApplicationArn that
--   is returned from <tt>CreatePlatformApplication</tt>. The EndpointArn
--   that is returned when using <a>CreatePlatformEndpoint</a> can then be
--   used by the <tt>Publish</tt> action to send a message to a mobile app
--   or by the <tt>Subscribe</tt> action for subscription to a topic. The
--   <a>CreatePlatformEndpoint</a> action is idempotent, so if the
--   requester already owns an endpoint with the same device token and
--   attributes, that endpoint's ARN is returned without creating a new
--   endpoint. For more information, see <a>Using Amazon SNS Mobile Push
--   Notifications</a> .
--   
--   When using <a>CreatePlatformEndpoint</a> with Baidu, two attributes
--   must be provided: ChannelId and UserId. The token field must also
--   contain the ChannelId. For more information, see <a>Creating an Amazon
--   SNS Endpoint for Baidu</a> .
--   
--   
--   <a>http://docs.aws.amazon.com/sns/latest/api/API_CreatePlatformEndpoint.html</a>
module Network.AWS.SNS.CreatePlatformEndpoint
data CreatePlatformEndpoint

-- | <a>CreatePlatformEndpoint</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cpeAttributes</a> <tt>::</tt> <a>HashMap</a> <a>Text</a>
--   <a>Text</a></li>
--   <li><a>cpeCustomUserData</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cpePlatformApplicationArn</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cpeToken</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createPlatformEndpoint :: Text -> Text -> CreatePlatformEndpoint

-- | For a list of attributes, see <a>SetEndpointAttributes</a>.
cpeAttributes :: Lens' CreatePlatformEndpoint (HashMap Text Text)

-- | Arbitrary user data to associate with the endpoint. Amazon SNS does
--   not use this data. The data must be in UTF-8 format and less than 2KB.
cpeCustomUserData :: Lens' CreatePlatformEndpoint (Maybe Text)

-- | PlatformApplicationArn returned from CreatePlatformApplication is used
--   to create a an endpoint.
cpePlatformApplicationArn :: Lens' CreatePlatformEndpoint Text

-- | Unique identifier created by the notification service for an app on a
--   device. The specific name for Token will vary, depending on which
--   notification service is being used. For example, when using APNS as
--   the notification service, you need the device token. Alternatively,
--   when using GCM or ADM, the device token equivalent is called the
--   registration ID.
cpeToken :: Lens' CreatePlatformEndpoint Text
data CreatePlatformEndpointResponse

-- | <a>CreatePlatformEndpointResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cperEndpointArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
createPlatformEndpointResponse :: CreatePlatformEndpointResponse

-- | EndpointArn returned from CreateEndpoint action.
cperEndpointArn :: Lens' CreatePlatformEndpointResponse (Maybe Text)
instance Eq CreatePlatformEndpoint
instance Read CreatePlatformEndpoint
instance Show CreatePlatformEndpoint
instance Eq CreatePlatformEndpointResponse
instance Ord CreatePlatformEndpointResponse
instance Read CreatePlatformEndpointResponse
instance Show CreatePlatformEndpointResponse
instance Monoid CreatePlatformEndpointResponse
instance FromXML CreatePlatformEndpointResponse
instance AWSRequest CreatePlatformEndpoint
instance ToHeaders CreatePlatformEndpoint
instance ToQuery CreatePlatformEndpoint
instance ToPath CreatePlatformEndpoint


-- | Creates a platform application object for one of the supported push
--   notification services, such as APNS and GCM, to which devices and
--   mobile apps may register. You must specify PlatformPrincipal and
--   PlatformCredential attributes when using the
--   <a>CreatePlatformApplication</a> action. The PlatformPrincipal is
--   received from the notification service. For APNS/APNS_SANDBOX,
--   PlatformPrincipal is "SSL certificate". For GCM, PlatformPrincipal is
--   not applicable. For ADM, PlatformPrincipal is "client id". The
--   PlatformCredential is also received from the notification service. For
--   APNS/APNS_SANDBOX, PlatformCredential is "private key". For GCM,
--   PlatformCredential is "API key". For ADM, PlatformCredential is
--   "client secret". The PlatformApplicationArn that is returned when
--   using <a>CreatePlatformApplication</a> is then used as an attribute
--   for the <tt>CreatePlatformEndpoint</tt> action. For more information,
--   see <a>Using Amazon SNS Mobile Push Notifications</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/sns/latest/api/API_CreatePlatformApplication.html</a>
module Network.AWS.SNS.CreatePlatformApplication
data CreatePlatformApplication

-- | <a>CreatePlatformApplication</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cpaAttributes</a> <tt>::</tt> <a>HashMap</a> <a>Text</a>
--   <a>Text</a></li>
--   <li><a>cpaName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cpaPlatform</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createPlatformApplication :: Text -> Text -> CreatePlatformApplication

-- | For a list of attributes, see <a>SetPlatformApplicationAttributes</a>
cpaAttributes :: Lens' CreatePlatformApplication (HashMap Text Text)

-- | Application names must be made up of only uppercase and lowercase
--   ASCII letters, numbers, underscores, hyphens, and periods, and must be
--   between 1 and 256 characters long.
cpaName :: Lens' CreatePlatformApplication Text

-- | The following platforms are supported: ADM (Amazon Device Messaging),
--   APNS (Apple Push Notification Service), APNS_SANDBOX, and GCM (Google
--   Cloud Messaging).
cpaPlatform :: Lens' CreatePlatformApplication Text
data CreatePlatformApplicationResponse

-- | <a>CreatePlatformApplicationResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cparPlatformApplicationArn</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
createPlatformApplicationResponse :: CreatePlatformApplicationResponse

-- | PlatformApplicationArn is returned.
cparPlatformApplicationArn :: Lens' CreatePlatformApplicationResponse (Maybe Text)
instance Eq CreatePlatformApplication
instance Read CreatePlatformApplication
instance Show CreatePlatformApplication
instance Eq CreatePlatformApplicationResponse
instance Ord CreatePlatformApplicationResponse
instance Read CreatePlatformApplicationResponse
instance Show CreatePlatformApplicationResponse
instance Monoid CreatePlatformApplicationResponse
instance FromXML CreatePlatformApplicationResponse
instance AWSRequest CreatePlatformApplication
instance ToHeaders CreatePlatformApplication
instance ToQuery CreatePlatformApplication
instance ToPath CreatePlatformApplication


-- | Verifies an endpoint owner's intent to receive messages by validating
--   the token sent to the endpoint by an earlier <tt>Subscribe</tt>
--   action. If the token is valid, the action creates a new subscription
--   and returns its Amazon Resource Name (ARN). This call requires an AWS
--   signature only when the <tt>AuthenticateOnUnsubscribe</tt> flag is set
--   to "true".
--   
--   
--   <a>http://docs.aws.amazon.com/sns/latest/api/API_ConfirmSubscription.html</a>
module Network.AWS.SNS.ConfirmSubscription
data ConfirmSubscription

-- | <a>ConfirmSubscription</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>csAuthenticateOnUnsubscribe</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>csToken</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>csTopicArn</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
confirmSubscription :: Text -> Text -> ConfirmSubscription

-- | Disallows unauthenticated unsubscribes of the subscription. If the
--   value of this parameter is <tt>true</tt> and the request has an AWS
--   signature, then only the topic owner and the subscription owner can
--   unsubscribe the endpoint. The unsubscribe action requires AWS
--   authentication.
csAuthenticateOnUnsubscribe :: Lens' ConfirmSubscription (Maybe Text)

-- | Short-lived token sent to an endpoint during the <tt>Subscribe</tt>
--   action.
csToken :: Lens' ConfirmSubscription Text

-- | The ARN of the topic for which you wish to confirm a subscription.
csTopicArn :: Lens' ConfirmSubscription Text
data ConfirmSubscriptionResponse

-- | <a>ConfirmSubscriptionResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>csrSubscriptionArn</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
confirmSubscriptionResponse :: ConfirmSubscriptionResponse

-- | The ARN of the created subscription.
csrSubscriptionArn :: Lens' ConfirmSubscriptionResponse (Maybe Text)
instance Eq ConfirmSubscription
instance Ord ConfirmSubscription
instance Read ConfirmSubscription
instance Show ConfirmSubscription
instance Eq ConfirmSubscriptionResponse
instance Ord ConfirmSubscriptionResponse
instance Read ConfirmSubscriptionResponse
instance Show ConfirmSubscriptionResponse
instance Monoid ConfirmSubscriptionResponse
instance FromXML ConfirmSubscriptionResponse
instance AWSRequest ConfirmSubscription
instance ToHeaders ConfirmSubscription
instance ToQuery ConfirmSubscription
instance ToPath ConfirmSubscription


-- | Adds a statement to a topic's access control policy, granting access
--   for the specified AWS accounts to the specified actions.
--   
--   
--   <a>http://docs.aws.amazon.com/sns/latest/api/API_AddPermission.html</a>
module Network.AWS.SNS.AddPermission
data AddPermission

-- | <a>AddPermission</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>apAWSAccountId</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>apActionName</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>apLabel</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>apTopicArn</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
addPermission :: Text -> Text -> AddPermission

-- | The AWS account IDs of the users (principals) who will be given access
--   to the specified actions. The users must have AWS accounts, but do not
--   need to be signed up for this service.
apAWSAccountId :: Lens' AddPermission [Text]

-- | The action you want to allow for the specified principal(s).
--   
--   Valid values: any Amazon SNS action name.
apActionName :: Lens' AddPermission [Text]

-- | A unique identifier for the new policy statement.
apLabel :: Lens' AddPermission Text

-- | The ARN of the topic whose access control policy you wish to modify.
apTopicArn :: Lens' AddPermission Text
data AddPermissionResponse

-- | <a>AddPermissionResponse</a> constructor.
addPermissionResponse :: AddPermissionResponse
instance Eq AddPermission
instance Ord AddPermission
instance Read AddPermission
instance Show AddPermission
instance Eq AddPermissionResponse
instance Ord AddPermissionResponse
instance Read AddPermissionResponse
instance Show AddPermissionResponse
instance Generic AddPermissionResponse
instance Datatype D1AddPermissionResponse
instance Constructor C1_0AddPermissionResponse
instance AWSRequest AddPermission
instance ToHeaders AddPermission
instance ToQuery AddPermission
instance ToPath AddPermission


-- | Amazon Simple Notification Service (Amazon SNS) is a fast, flexible,
--   fully managed push messaging service. Amazon SNS makes it simple and
--   cost-effective to push notifications to Apple, Google, Fire OS, and
--   Windows devices, as well as Android devices in China with Baidu Cloud
--   Push. You can also use SNS to push notifications to internet connected
--   smart devices, as well as other distributed services. Besides pushing
--   cloud notifications directly to mobile devices, Amazon SNS can also
--   deliver notifications by SMS text message or email, to Amazon Simple
--   Queue Service (SQS) queues, or to any HTTP endpoint. To prevent
--   messages from being lost, all messages published to Amazon SNS are
--   stored redundantly across multiple availability zones.
module Network.AWS.SNS
