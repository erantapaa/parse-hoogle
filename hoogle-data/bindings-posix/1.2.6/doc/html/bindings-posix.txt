-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Low level bindings to posix.
--   
--   Low level bindings to Posix standard library, part of the
--   <tt>bindings-*</tt> project. See:
--   
--   <a>http://bitbucket.org/mauricio/bindings-dsl</a>
@package bindings-posix
@version 1.2.6


-- | 
--   <a>http://www.opengroup.org/onlinepubs/9699919799/basedefs/sys_utsname.h.html</a>
module Bindings.Posix.Sys.Utsname
data C'utsname
C'utsname :: [CChar] -> [CChar] -> [CChar] -> [CChar] -> [CChar] -> C'utsname
c'utsname'sysname :: C'utsname -> [CChar]
c'utsname'nodename :: C'utsname -> [CChar]
c'utsname'release :: C'utsname -> [CChar]
c'utsname'version :: C'utsname -> [CChar]
c'utsname'machine :: C'utsname -> [CChar]
c'uname :: Ptr C'utsname -> IO CInt
p'uname :: FunPtr (Ptr C'utsname -> IO CInt)
p'utsname'sysname :: Ptr (C'utsname) -> Ptr (CChar)
p'utsname'nodename :: Ptr (C'utsname) -> Ptr (CChar)
p'utsname'release :: Ptr (C'utsname) -> Ptr (CChar)
p'utsname'version :: Ptr (C'utsname) -> Ptr (CChar)
p'utsname'machine :: Ptr (C'utsname) -> Ptr (CChar)
instance Eq C'utsname
instance Show C'utsname
instance Storable C'utsname


-- | 
--   <a>http://www.opengroup.org/onlinepubs/9699919799/basedefs/sys_types.h.html</a>
module Bindings.Posix.Sys.Types
type C'blkcnt_t = CInt
type C'blksize_t = CInt
type C'clockid_t = CInt
type C'dev_t = Word64
type C'gid_t = CUInt
type C'id_t = CUInt
type C'ino_t = CUInt
type C'mode_t = CUInt
type C'nlink_t = CUInt
type C'off_t = CInt
type C'pid_t = CInt
data C'pthread_attr_t
C'pthread_attr_t :: C'pthread_attr_t
data C'pthread_barrier_t
C'pthread_barrier_t :: C'pthread_barrier_t
data C'pthread_barrierattr_t
C'pthread_barrierattr_t :: C'pthread_barrierattr_t
data C'pthread_cond_t
C'pthread_cond_t :: C'pthread_cond_t
data C'pthread_condattr_t
C'pthread_condattr_t :: C'pthread_condattr_t
data C'pthread_key_t
C'pthread_key_t :: C'pthread_key_t
data C'pthread_mutex_t
C'pthread_mutex_t :: C'pthread_mutex_t
data C'pthread_mutexattr_t
C'pthread_mutexattr_t :: C'pthread_mutexattr_t
data C'pthread_once_t
C'pthread_once_t :: C'pthread_once_t
data C'pthread_rwlock_t
C'pthread_rwlock_t :: C'pthread_rwlock_t
data C'pthread_rwlockattr_t
C'pthread_rwlockattr_t :: C'pthread_rwlockattr_t
data C'pthread_spinlock_t
C'pthread_spinlock_t :: C'pthread_spinlock_t
type C'pthread_t = CUInt
type C'size_t = CUInt
type C'ssize_t = CInt
type C'suseconds_t = CInt
type C'time_t = CInt
type C'timer_t = CUInt
type C'uid_t = CUInt
instance Eq C'pthread_attr_t
instance Show C'pthread_attr_t
instance Eq C'pthread_barrier_t
instance Show C'pthread_barrier_t
instance Eq C'pthread_barrierattr_t
instance Show C'pthread_barrierattr_t
instance Eq C'pthread_cond_t
instance Show C'pthread_cond_t
instance Eq C'pthread_condattr_t
instance Show C'pthread_condattr_t
instance Eq C'pthread_key_t
instance Show C'pthread_key_t
instance Eq C'pthread_mutex_t
instance Show C'pthread_mutex_t
instance Eq C'pthread_mutexattr_t
instance Show C'pthread_mutexattr_t
instance Eq C'pthread_once_t
instance Show C'pthread_once_t
instance Eq C'pthread_rwlock_t
instance Show C'pthread_rwlock_t
instance Eq C'pthread_rwlockattr_t
instance Show C'pthread_rwlockattr_t
instance Eq C'pthread_spinlock_t
instance Show C'pthread_spinlock_t
instance Storable C'pthread_spinlock_t
instance Storable C'pthread_rwlockattr_t
instance Storable C'pthread_rwlock_t
instance Storable C'pthread_once_t
instance Storable C'pthread_mutexattr_t
instance Storable C'pthread_mutex_t
instance Storable C'pthread_key_t
instance Storable C'pthread_condattr_t
instance Storable C'pthread_cond_t
instance Storable C'pthread_barrierattr_t
instance Storable C'pthread_barrier_t
instance Storable C'pthread_attr_t


-- | 
--   <a>http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/sys_mman.h.html</a>
module Bindings.Posix.Sys.Mman
c'PROT_EXEC :: Num a => a
c'PROT_NONE :: Num a => a
c'PROT_READ :: Num a => a
c'PROT_WRITE :: Num a => a
c'MAP_FIXED :: Num a => a
c'MAP_PRIVATE :: Num a => a
c'MAP_SHARED :: Num a => a
c'MAP_FAILED :: Ptr a
c'mmap :: Ptr () -> CSize -> CInt -> CInt -> CInt -> C'off_t -> IO (Ptr ())
c'mprotect :: Ptr () -> CSize -> IO CInt
c'munmap :: Ptr () -> CSize -> IO CInt
p'mmap :: FunPtr (Ptr () -> CSize -> CInt -> CInt -> CInt -> C'off_t -> IO (Ptr ()))
p'mprotect :: FunPtr (Ptr () -> CSize -> IO CInt)
p'munmap :: FunPtr (Ptr () -> CSize -> IO CInt)


-- | 
--   <a>http://www.opengroup.org/onlinepubs/9699919799/basedefs/unistd.h.html</a>
module Bindings.Posix.Unistd
c'_POSIX_VERSION :: Num a => a
c'_POSIX2_VERSION :: Num a => a
c'_POSIX_ASYNCHRONOUS_IO :: Num a => a
c'_POSIX_BARRIERS :: Num a => a
c'_POSIX_CHOWN_RESTRICTED :: Num a => a
c'_POSIX_CLOCK_SELECTION :: Num a => a
c'_POSIX_IPV6 :: Num a => a
c'_POSIX_JOB_CONTROL :: Num a => a
c'_POSIX_MAPPED_FILES :: Num a => a
c'_POSIX_MEMORY_PROTECTION :: Num a => a
c'_POSIX_NO_TRUNC :: Num a => a
c'_POSIX_READER_WRITER_LOCKS :: Num a => a
c'_POSIX_REALTIME_SIGNALS :: Num a => a
c'_POSIX_REGEXP :: Num a => a
c'_POSIX_SAVED_IDS :: Num a => a
c'_POSIX_SEMAPHORES :: Num a => a
c'_POSIX_SHELL :: Num a => a
c'_POSIX_SPIN_LOCKS :: Num a => a
c'_POSIX_THREAD_SAFE_FUNCTIONS :: Num a => a
c'_POSIX_THREADS :: Num a => a
c'_POSIX_TIMEOUTS :: Num a => a
c'_POSIX_TIMERS :: Num a => a
c'_POSIX2_C_BIND :: Num a => a
c'_POSIX2_CHAR_TERM :: Num a => a
c'_POSIX2_LOCALEDEF :: Num a => a
c'F_OK :: Num a => a
c'R_OK :: Num a => a
c'W_OK :: Num a => a
c'X_OK :: Num a => a
c'F_LOCK :: Num a => a
c'F_TEST :: Num a => a
c'F_TLOCK :: Num a => a
c'F_ULOCK :: Num a => a
c'_PC_2_SYMLINKS :: Num a => a
c'_PC_ALLOC_SIZE_MIN :: Num a => a
c'_PC_ASYNC_IO :: Num a => a
c'_PC_CHOWN_RESTRICTED :: Num a => a
c'_PC_FILESIZEBITS :: Num a => a
c'_PC_LINK_MAX :: Num a => a
c'_PC_MAX_CANON :: Num a => a
c'_PC_MAX_INPUT :: Num a => a
c'_PC_NAME_MAX :: Num a => a
c'_PC_NO_TRUNC :: Num a => a
c'_PC_PATH_MAX :: Num a => a
c'_PC_PIPE_BUF :: Num a => a
c'_PC_PRIO_IO :: Num a => a
c'_PC_REC_INCR_XFER_SIZE :: Num a => a
c'_PC_REC_MAX_XFER_SIZE :: Num a => a
c'_PC_REC_MIN_XFER_SIZE :: Num a => a
c'_PC_REC_XFER_ALIGN :: Num a => a
c'_PC_SYMLINK_MAX :: Num a => a
c'_PC_SYNC_IO :: Num a => a
c'_PC_VDISABLE :: Num a => a
c'_SC_2_C_BIND :: Num a => a
c'_SC_2_C_DEV :: Num a => a
c'_SC_2_CHAR_TERM :: Num a => a
c'_SC_2_FORT_DEV :: Num a => a
c'_SC_2_FORT_RUN :: Num a => a
c'_SC_2_LOCALEDEF :: Num a => a
c'_SC_2_PBS :: Num a => a
c'_SC_2_PBS_ACCOUNTING :: Num a => a
c'_SC_2_PBS_CHECKPOINT :: Num a => a
c'_SC_2_PBS_LOCATE :: Num a => a
c'_SC_2_PBS_MESSAGE :: Num a => a
c'_SC_2_PBS_TRACK :: Num a => a
c'_SC_2_SW_DEV :: Num a => a
c'_SC_2_UPE :: Num a => a
c'_SC_2_VERSION :: Num a => a
c'_SC_ADVISORY_INFO :: Num a => a
c'_SC_AIO_LISTIO_MAX :: Num a => a
c'_SC_AIO_MAX :: Num a => a
c'_SC_AIO_PRIO_DELTA_MAX :: Num a => a
c'_SC_ARG_MAX :: Num a => a
c'_SC_ASYNCHRONOUS_IO :: Num a => a
c'_SC_ATEXIT_MAX :: Num a => a
c'_SC_BARRIERS :: Num a => a
c'_SC_BC_BASE_MAX :: Num a => a
c'_SC_BC_DIM_MAX :: Num a => a
c'_SC_BC_SCALE_MAX :: Num a => a
c'_SC_BC_STRING_MAX :: Num a => a
c'_SC_CHILD_MAX :: Num a => a
c'_SC_CLK_TCK :: Num a => a
c'_SC_CLOCK_SELECTION :: Num a => a
c'_SC_COLL_WEIGHTS_MAX :: Num a => a
c'_SC_CPUTIME :: Num a => a
c'_SC_DELAYTIMER_MAX :: Num a => a
c'_SC_EXPR_NEST_MAX :: Num a => a
c'_SC_FSYNC :: Num a => a
c'_SC_GETGR_R_SIZE_MAX :: Num a => a
c'_SC_GETPW_R_SIZE_MAX :: Num a => a
c'_SC_HOST_NAME_MAX :: Num a => a
c'_SC_IOV_MAX :: Num a => a
c'_SC_IPV6 :: Num a => a
c'_SC_JOB_CONTROL :: Num a => a
c'_SC_LINE_MAX :: Num a => a
c'_SC_LOGIN_NAME_MAX :: Num a => a
c'_SC_MAPPED_FILES :: Num a => a
c'_SC_MEMLOCK :: Num a => a
c'_SC_MEMLOCK_RANGE :: Num a => a
c'_SC_MEMORY_PROTECTION :: Num a => a
c'_SC_MESSAGE_PASSING :: Num a => a
c'_SC_MONOTONIC_CLOCK :: Num a => a
c'_SC_MQ_OPEN_MAX :: Num a => a
c'_SC_MQ_PRIO_MAX :: Num a => a
c'_SC_NGROUPS_MAX :: Num a => a
c'_SC_OPEN_MAX :: Num a => a
c'_SC_PAGE_SIZE :: Num a => a
c'_SC_PAGESIZE :: Num a => a
c'_SC_PRIORITIZED_IO :: Num a => a
c'_SC_PRIORITY_SCHEDULING :: Num a => a
c'_SC_RAW_SOCKETS :: Num a => a
c'_SC_RE_DUP_MAX :: Num a => a
c'_SC_READER_WRITER_LOCKS :: Num a => a
c'_SC_REALTIME_SIGNALS :: Num a => a
c'_SC_REGEXP :: Num a => a
c'_SC_RTSIG_MAX :: Num a => a
c'_SC_SAVED_IDS :: Num a => a
c'_SC_SEM_NSEMS_MAX :: Num a => a
c'_SC_SEM_VALUE_MAX :: Num a => a
c'_SC_SEMAPHORES :: Num a => a
c'_SC_SHARED_MEMORY_OBJECTS :: Num a => a
c'_SC_SHELL :: Num a => a
c'_SC_SIGQUEUE_MAX :: Num a => a
c'_SC_SPAWN :: Num a => a
c'_SC_SPIN_LOCKS :: Num a => a
c'_SC_SPORADIC_SERVER :: Num a => a
c'_SC_STREAM_MAX :: Num a => a
c'_SC_SYMLOOP_MAX :: Num a => a
c'_SC_SYNCHRONIZED_IO :: Num a => a
c'_SC_THREAD_ATTR_STACKADDR :: Num a => a
c'_SC_THREAD_ATTR_STACKSIZE :: Num a => a
c'_SC_THREAD_CPUTIME :: Num a => a
c'_SC_THREAD_DESTRUCTOR_ITERATIONS :: Num a => a
c'_SC_THREAD_KEYS_MAX :: Num a => a
c'_SC_THREAD_PRIO_INHERIT :: Num a => a
c'_SC_THREAD_PRIO_PROTECT :: Num a => a
c'_SC_THREAD_PRIORITY_SCHEDULING :: Num a => a
c'_SC_THREAD_PROCESS_SHARED :: Num a => a
c'_SC_THREAD_SAFE_FUNCTIONS :: Num a => a
c'_SC_THREAD_SPORADIC_SERVER :: Num a => a
c'_SC_THREAD_STACK_MIN :: Num a => a
c'_SC_THREAD_THREADS_MAX :: Num a => a
c'_SC_THREADS :: Num a => a
c'_SC_TIMEOUTS :: Num a => a
c'_SC_TIMER_MAX :: Num a => a
c'_SC_TIMERS :: Num a => a
c'_SC_TRACE :: Num a => a
c'_SC_TRACE_EVENT_FILTER :: Num a => a
c'_SC_TRACE_INHERIT :: Num a => a
c'_SC_TRACE_LOG :: Num a => a
c'_SC_TTY_NAME_MAX :: Num a => a
c'_SC_TYPED_MEMORY_OBJECTS :: Num a => a
c'_SC_TZNAME_MAX :: Num a => a
c'_SC_VERSION :: Num a => a
c'_SC_XOPEN_CRYPT :: Num a => a
c'_SC_XOPEN_ENH_I18N :: Num a => a
c'_SC_XOPEN_REALTIME :: Num a => a
c'_SC_XOPEN_REALTIME_THREADS :: Num a => a
c'_SC_XOPEN_SHM :: Num a => a
c'_SC_XOPEN_UNIX :: Num a => a
c'_SC_XOPEN_VERSION :: Num a => a
c'STDERR_FILENO :: Num a => a
c'STDIN_FILENO :: Num a => a
c'STDOUT_FILENO :: Num a => a
c'_POSIX_VDISABLE :: Num a => a
c'access :: CString -> CInt -> IO CInt
c'alarm :: CUInt -> IO CUInt
c'chdir :: CString -> IO CInt
p'access :: FunPtr (CString -> CInt -> IO CInt)
p'alarm :: FunPtr (CUInt -> IO CUInt)
c'chown :: CString -> C'uid_t -> C'gid_t -> IO CInt
c'close :: CInt -> IO CInt
p'chdir :: FunPtr (CString -> IO CInt)
c'confstr :: CInt -> CString -> CSize -> IO CSize
p'chown :: FunPtr (CString -> C'uid_t -> C'gid_t -> IO CInt)
c'dup :: CInt -> IO CInt
p'close :: FunPtr (CInt -> IO CInt)
c'dup2 :: CInt -> CInt -> IO CInt
p'confstr :: FunPtr (CInt -> CString -> CSize -> IO CSize)
c'_exit :: CInt -> IO ()
p'dup :: FunPtr (CInt -> IO CInt)
p'dup2 :: FunPtr (CInt -> CInt -> IO CInt)
c'execv :: CString -> Ptr CString -> IO CInt
p'_exit :: FunPtr (CInt -> IO ())
c'execve :: CString -> Ptr CString -> Ptr CString -> IO CInt
c'execvp :: CString -> Ptr CString -> IO CInt
p'execv :: FunPtr (CString -> Ptr CString -> IO CInt)
c'faccessat :: CInt -> CString -> CInt -> CInt -> IO CInt
p'execve :: FunPtr (CString -> Ptr CString -> Ptr CString -> IO CInt)
c'fchdir :: CInt -> IO CInt
p'execvp :: FunPtr (CString -> Ptr CString -> IO CInt)
c'fchown :: CInt -> C'uid_t -> C'gid_t -> IO CInt
p'faccessat :: FunPtr (CInt -> CString -> CInt -> CInt -> IO CInt)
p'fchdir :: FunPtr (CInt -> IO CInt)
c'fchownat :: CInt -> CString -> C'uid_t -> C'gid_t -> CInt -> IO CInt
c'fexecve :: CInt -> Ptr CString -> Ptr CString -> IO CInt
p'fchown :: FunPtr (CInt -> C'uid_t -> C'gid_t -> IO CInt)
c'fork :: IO C'pid_t
p'fchownat :: FunPtr (CInt -> CString -> C'uid_t -> C'gid_t -> CInt -> IO CInt)
c'fpathconf :: CInt -> CInt -> IO CLong
p'fexecve :: FunPtr (CInt -> Ptr CString -> Ptr CString -> IO CInt)
p'fork :: FunPtr (IO C'pid_t)
c'ftruncate :: CInt -> C'off_t -> IO CInt
c'getcwd :: CString -> CSize -> IO CString
p'fpathconf :: FunPtr (CInt -> CInt -> IO CLong)
c'getegid :: IO C'gid_t
p'ftruncate :: FunPtr (CInt -> C'off_t -> IO CInt)
c'geteuid :: IO C'uid_t
p'getcwd :: FunPtr (CString -> CSize -> IO CString)
c'getgid :: IO C'gid_t
p'getegid :: FunPtr (IO C'gid_t)
p'geteuid :: FunPtr (IO C'uid_t)
c'getgroups :: CInt -> Ptr C'gid_t -> IO CInt
p'getgid :: FunPtr (IO C'gid_t)
c'gethostname :: CString -> CSize -> IO CInt
c'getlogin :: IO CString
p'getgroups :: FunPtr (CInt -> Ptr C'gid_t -> IO CInt)
c'getlogin_r :: CString -> CSize -> IO CInt
p'gethostname :: FunPtr (CString -> CSize -> IO CInt)
p'getlogin :: FunPtr (IO CString)
c'getopt :: CInt -> Ptr CString -> CString -> IO CInt
c'getpgid :: C'pid_t -> IO C'pid_t
p'getlogin_r :: FunPtr (CString -> CSize -> IO CInt)
c'getpgrp :: IO C'pid_t
p'getopt :: FunPtr (CInt -> Ptr CString -> CString -> IO CInt)
c'getpid :: IO C'pid_t
p'getpgid :: FunPtr (C'pid_t -> IO C'pid_t)
c'getppid :: IO C'pid_t
p'getpgrp :: FunPtr (IO C'pid_t)
p'getpid :: FunPtr (IO C'pid_t)
c'getsid :: C'pid_t -> IO C'pid_t
c'getuid :: IO C'uid_t
p'getppid :: FunPtr (IO C'pid_t)
c'isatty :: CInt -> IO CInt
p'getsid :: FunPtr (C'pid_t -> IO C'pid_t)
p'getuid :: FunPtr (IO C'uid_t)
c'lchown :: CString -> C'uid_t -> C'gid_t -> IO CInt
p'isatty :: FunPtr (CInt -> IO CInt)
c'link :: CString -> CString -> IO CInt
p'lchown :: FunPtr (CString -> C'uid_t -> C'gid_t -> IO CInt)
c'linkat :: CInt -> CString -> CInt -> CString -> CInt -> IO CInt
c'lseek :: CInt -> C'off_t -> CInt -> IO C'off_t
p'link :: FunPtr (CString -> CString -> IO CInt)
c'pathconf :: CString -> CInt -> IO CLong
p'linkat :: FunPtr (CInt -> CString -> CInt -> CString -> CInt -> IO CInt)
c'pause :: IO CInt
p'lseek :: FunPtr (CInt -> C'off_t -> CInt -> IO C'off_t)
c'pipe :: Ptr CInt -> IO CInt
p'pathconf :: FunPtr (CString -> CInt -> IO CLong)
p'pause :: FunPtr (IO CInt)
c'pread :: CInt -> Ptr () -> CSize -> C'off_t -> IO C'ssize_t
p'pipe :: FunPtr (Ptr CInt -> IO CInt)
c'pwrite :: CInt -> Ptr () -> CSize -> C'off_t -> IO C'ssize_t
c'read :: CInt -> Ptr () -> CSize -> IO C'ssize_t
p'pread :: FunPtr (CInt -> Ptr () -> CSize -> C'off_t -> IO C'ssize_t)
c'readlink :: CString -> CString -> CSize -> IO C'ssize_t
p'pwrite :: FunPtr (CInt -> Ptr () -> CSize -> C'off_t -> IO C'ssize_t)
p'read :: FunPtr (CInt -> Ptr () -> CSize -> IO C'ssize_t)
c'readlinkat :: CInt -> CString -> CString -> CSize -> IO C'ssize_t
c'rmdir :: CString -> IO CInt
p'readlink :: FunPtr (CString -> CString -> CSize -> IO C'ssize_t)
c'setegid :: C'gid_t -> IO CInt
p'readlinkat :: FunPtr (CInt -> CString -> CString -> CSize -> IO C'ssize_t)
c'seteuid :: C'uid_t -> IO CInt
p'rmdir :: FunPtr (CString -> IO CInt)
c'setgid :: C'gid_t -> IO CInt
p'setegid :: FunPtr (C'gid_t -> IO CInt)
p'seteuid :: FunPtr (C'uid_t -> IO CInt)
c'setpgid :: C'pid_t -> C'pid_t -> IO CInt
c'setsid :: IO C'pid_t
p'setgid :: FunPtr (C'gid_t -> IO CInt)
c'setuid :: C'uid_t -> IO CInt
p'setpgid :: FunPtr (C'pid_t -> C'pid_t -> IO CInt)
c'sleep :: CUInt -> IO CUInt
p'setsid :: FunPtr (IO C'pid_t)
p'setuid :: FunPtr (C'uid_t -> IO CInt)
c'symlink :: CString -> CString -> IO CInt
p'sleep :: FunPtr (CUInt -> IO CUInt)
c'symlinkat :: CString -> CInt -> CString -> IO CInt
c'sysconf :: CInt -> IO CLong
p'symlink :: FunPtr (CString -> CString -> IO CInt)
c'tcgetpgrp :: CInt -> IO C'pid_t
p'symlinkat :: FunPtr (CString -> CInt -> CString -> IO CInt)
p'sysconf :: FunPtr (CInt -> IO CLong)
c'tcsetpgrp :: CInt -> C'pid_t -> IO CInt
p'tcgetpgrp :: FunPtr (CInt -> IO C'pid_t)
c'truncate :: CString -> C'off_t -> IO CInt
c'ttyname :: CInt -> IO CString
p'tcsetpgrp :: FunPtr (CInt -> C'pid_t -> IO CInt)
c'ttyname_r :: CInt -> CString -> CSize -> IO CInt
p'truncate :: FunPtr (CString -> C'off_t -> IO CInt)
c'unlink :: CString -> IO CInt
p'ttyname :: FunPtr (CInt -> IO CString)
c'unlinkat :: CInt -> CString -> CInt -> IO CInt
p'ttyname_r :: FunPtr (CInt -> CString -> CSize -> IO CInt)
p'unlink :: FunPtr (CString -> IO CInt)
c'write :: CInt -> Ptr () -> CSize -> IO C'ssize_t
p'unlinkat :: FunPtr (CInt -> CString -> CInt -> IO CInt)
p'optarg :: Ptr (CString)
p'write :: FunPtr (CInt -> Ptr () -> CSize -> IO C'ssize_t)
p'opterr :: Ptr (CInt)
p'optind :: Ptr (CInt)
p'optopt :: Ptr (CInt)


-- | 
--   <a>http://www.opengroup.org/onlinepubs/9699919799/basedefs/signal.h.html</a>
module Bindings.Posix.Signal
data C'sigset_t
C'sigset_t :: C'sigset_t
data C'sigevent
C'sigevent :: CInt -> CInt -> C'sigval -> FunPtr (C'sigval -> IO ()) -> Ptr C'pthread_attr_t -> C'sigevent
c'sigevent'sigev_notify :: C'sigevent -> CInt
c'sigevent'sigev_signo :: C'sigevent -> CInt
c'sigevent'sigev_value :: C'sigevent -> C'sigval
c'sigevent'_sigev_un'_sigev_thread'_function :: C'sigevent -> FunPtr (C'sigval -> IO ())
c'sigevent'_sigev_un'_sigev_thread'_attribute :: C'sigevent -> Ptr C'pthread_attr_t
c'SIGEV_NONE :: Num a => a
c'SIGEV_SIGNAL :: Num a => a
c'SIGEV_THREAD :: Num a => a
p'sigevent'sigev_notify :: Ptr (C'sigevent) -> Ptr (CInt)
data C'sigval
C'sigval :: CInt -> Ptr () -> C'sigval
c'sigval'sival_int :: C'sigval -> CInt
c'sigval'sival_ptr :: C'sigval -> Ptr ()
p'sigevent'sigev_signo :: Ptr (C'sigevent) -> Ptr (CInt)
c'SIGRTMIN :: Num a => a
p'sigevent'sigev_value :: Ptr (C'sigevent) -> Ptr (C'sigval)
c'SIGRTMAX :: Num a => a
p'sigval'sival_int :: Ptr (C'sigval) -> Ptr (CInt)
p'sigevent'_sigev_un'_sigev_thread'_function :: Ptr (C'sigevent) -> Ptr (FunPtr (C'sigval -> IO ()))
c'SIGABRT :: Num a => a
c'SIGALRM :: Num a => a
p'sigval'sival_ptr :: Ptr (C'sigval) -> Ptr (Ptr ())
p'sigevent'_sigev_un'_sigev_thread'_attribute :: Ptr (C'sigevent) -> Ptr (Ptr C'pthread_attr_t)
c'SIGBUS :: Num a => a
c'SIGCHLD :: Num a => a
c'SIGCONT :: Num a => a
c'SIGFPE :: Num a => a
c'SIGHUP :: Num a => a
c'SIGILL :: Num a => a
c'SIGINT :: Num a => a
c'SIGKILL :: Num a => a
c'SIGPIPE :: Num a => a
c'SIGQUIT :: Num a => a
c'SIGSEGV :: Num a => a
c'SIGSTOP :: Num a => a
c'SIGTERM :: Num a => a
c'SIGTSTP :: Num a => a
c'SIGTTIN :: Num a => a
c'SIGTTOU :: Num a => a
c'SIGUSR1 :: Num a => a
c'SIGUSR2 :: Num a => a
c'SIGURG :: Num a => a
data C'sigaction
C'sigaction :: FunPtr (CInt -> IO ()) -> C'sigset_t -> CInt -> FunPtr (CInt -> Ptr C'siginfo_t -> Ptr () -> IO ()) -> C'sigaction
c'sigaction'__sigaction_handler'sa_handler :: C'sigaction -> FunPtr (CInt -> IO ())
c'sigaction'sa_mask :: C'sigaction -> C'sigset_t
c'sigaction'sa_flags :: C'sigaction -> CInt
c'sigaction'__sigaction_handler'sa_sigaction :: C'sigaction -> FunPtr (CInt -> Ptr C'siginfo_t -> Ptr () -> IO ())
c'SIG_BLOCK :: Num a => a
c'SIG_UNBLOCK :: Num a => a
c'SIG_SETMASK :: Num a => a
c'SA_NOCLDSTOP :: Num a => a
c'SA_RESETHAND :: Num a => a
p'sigaction'__sigaction_handler'sa_handler :: Ptr (C'sigaction) -> Ptr (FunPtr (CInt -> IO ()))
c'SA_RESTART :: Num a => a
c'SA_SIGINFO :: Num a => a
p'sigaction'sa_mask :: Ptr (C'sigaction) -> Ptr (C'sigset_t)
c'SA_NOCLDWAIT :: Num a => a
c'SA_NODEFER :: Num a => a
p'sigaction'sa_flags :: Ptr (C'sigaction) -> Ptr (CInt)
p'sigaction'__sigaction_handler'sa_sigaction :: Ptr (C'sigaction) -> Ptr (FunPtr (CInt -> Ptr C'siginfo_t -> Ptr () -> IO ()))
data C'mcontext_t
C'mcontext_t :: C'mcontext_t
data C'ucontext_t
C'ucontext_t :: Ptr C'ucontext_t -> C'sigset_t -> C'stack_t -> C'mcontext_t -> C'ucontext_t
c'ucontext_t'uc_link :: C'ucontext_t -> Ptr C'ucontext_t
c'ucontext_t'uc_sigmask :: C'ucontext_t -> C'sigset_t
c'ucontext_t'uc_stack :: C'ucontext_t -> C'stack_t
c'ucontext_t'uc_mcontext :: C'ucontext_t -> C'mcontext_t
data C'stack_t
C'stack_t :: Ptr () -> CSize -> CInt -> C'stack_t
c'stack_t'ss_sp :: C'stack_t -> Ptr ()
c'stack_t'ss_size :: C'stack_t -> CSize
c'stack_t'ss_flags :: C'stack_t -> CInt
p'ucontext_t'uc_link :: Ptr (C'ucontext_t) -> Ptr (Ptr C'ucontext_t)
p'ucontext_t'uc_sigmask :: Ptr (C'ucontext_t) -> Ptr (C'sigset_t)
p'ucontext_t'uc_stack :: Ptr (C'ucontext_t) -> Ptr (C'stack_t)
p'stack_t'ss_sp :: Ptr (C'stack_t) -> Ptr (Ptr ())
p'ucontext_t'uc_mcontext :: Ptr (C'ucontext_t) -> Ptr (C'mcontext_t)
p'stack_t'ss_size :: Ptr (C'stack_t) -> Ptr (CSize)
p'stack_t'ss_flags :: Ptr (C'stack_t) -> Ptr (CInt)
data C'siginfo_t
C'siginfo_t :: CInt -> CInt -> C'pid_t -> C'uid_t -> Ptr () -> CInt -> C'sigval -> C'siginfo_t
c'siginfo_t'si_signo :: C'siginfo_t -> CInt
c'siginfo_t'si_code :: C'siginfo_t -> CInt
c'siginfo_t'_sifields'_kill'si_pid :: C'siginfo_t -> C'pid_t
c'siginfo_t'_sifields'_kill'si_uid :: C'siginfo_t -> C'uid_t
c'siginfo_t'_sifields'_sigfault'si_addr :: C'siginfo_t -> Ptr ()
c'siginfo_t'_sifields'_sigchld'si_status :: C'siginfo_t -> CInt
c'siginfo_t'_sifields'_rt'si_sigval :: C'siginfo_t -> C'sigval
c'ILL_ILLOPC :: Num a => a
c'ILL_ILLOPN :: Num a => a
c'ILL_ILLADR :: Num a => a
c'ILL_ILLTRP :: Num a => a
c'ILL_PRVOPC :: Num a => a
c'ILL_PRVREG :: Num a => a
c'ILL_COPROC :: Num a => a
c'ILL_BADSTK :: Num a => a
p'siginfo_t'si_signo :: Ptr (C'siginfo_t) -> Ptr (CInt)
c'FPE_INTDIV :: Num a => a
c'FPE_INTOVF :: Num a => a
p'siginfo_t'si_code :: Ptr (C'siginfo_t) -> Ptr (CInt)
c'FPE_FLTDIV :: Num a => a
c'FPE_FLTOVF :: Num a => a
p'siginfo_t'_sifields'_kill'si_pid :: Ptr (C'siginfo_t) -> Ptr (C'pid_t)
c'FPE_FLTUND :: Num a => a
c'FPE_FLTRES :: Num a => a
p'siginfo_t'_sifields'_kill'si_uid :: Ptr (C'siginfo_t) -> Ptr (C'uid_t)
c'FPE_FLTINV :: Num a => a
c'FPE_FLTSUB :: Num a => a
p'siginfo_t'_sifields'_sigfault'si_addr :: Ptr (C'siginfo_t) -> Ptr (Ptr ())
c'SEGV_MAPERR :: Num a => a
c'SEGV_ACCERR :: Num a => a
p'siginfo_t'_sifields'_sigchld'si_status :: Ptr (C'siginfo_t) -> Ptr (CInt)
c'BUS_ADRALN :: Num a => a
c'BUS_ADRERR :: Num a => a
p'siginfo_t'_sifields'_rt'si_sigval :: Ptr (C'siginfo_t) -> Ptr (C'sigval)
c'BUS_OBJERR :: Num a => a
c'CLD_EXITED :: Num a => a
c'CLD_KILLED :: Num a => a
c'CLD_DUMPED :: Num a => a
c'CLD_TRAPPED :: Num a => a
c'CLD_STOPPED :: Num a => a
c'CLD_CONTINUED :: Num a => a
c'SI_USER :: Num a => a
c'SI_QUEUE :: Num a => a
c'SI_TIMER :: Num a => a
c'SI_ASYNCIO :: Num a => a
c'SI_MESGQ :: Num a => a
c'kill :: C'pid_t -> CInt -> IO CInt
c'psignal :: CInt -> CString -> IO ()
p'kill :: FunPtr (C'pid_t -> CInt -> IO CInt)
c'pthread_kill :: C'pthread_t -> CInt -> IO CInt
p'psignal :: FunPtr (CInt -> CString -> IO ())
c'pthread_sigmask :: CInt -> Ptr C'sigset_t -> Ptr C'sigset_t -> IO CInt
p'pthread_kill :: FunPtr (C'pthread_t -> CInt -> IO CInt)
c'sigaction :: CInt -> Ptr C'sigaction -> Ptr C'sigaction -> IO CInt
p'pthread_sigmask :: FunPtr (CInt -> Ptr C'sigset_t -> Ptr C'sigset_t -> IO CInt)
c'sigaddset :: Ptr C'sigset_t -> CInt -> IO CInt
p'sigaction :: FunPtr (CInt -> Ptr C'sigaction -> Ptr C'sigaction -> IO CInt)
c'sigdelset :: Ptr C'sigset_t -> CInt -> IO CInt
c'sigemptyset :: Ptr C'sigset_t -> IO CInt
p'sigaddset :: FunPtr (Ptr C'sigset_t -> CInt -> IO CInt)
c'sigfillset :: Ptr C'sigset_t -> IO CInt
p'sigdelset :: FunPtr (Ptr C'sigset_t -> CInt -> IO CInt)
c'sigismember :: Ptr C'sigset_t -> CInt -> IO CInt
p'sigemptyset :: FunPtr (Ptr C'sigset_t -> IO CInt)
c'sigpending :: Ptr C'sigset_t -> IO CInt
p'sigfillset :: FunPtr (Ptr C'sigset_t -> IO CInt)
p'sigismember :: FunPtr (Ptr C'sigset_t -> CInt -> IO CInt)
c'sigprocmask :: CInt -> Ptr C'sigset_t -> Ptr C'sigset_t -> IO CInt
p'sigpending :: FunPtr (Ptr C'sigset_t -> IO CInt)
p'sigprocmask :: FunPtr (CInt -> Ptr C'sigset_t -> Ptr C'sigset_t -> IO CInt)
c'sigsuspend :: Ptr C'sigset_t -> IO CInt
p'sigsuspend :: FunPtr (Ptr C'sigset_t -> IO CInt)
c'sigwait :: Ptr C'sigset_t -> Ptr CInt -> IO CInt
c'sigwaitinfo :: Ptr C'sigset_t -> Ptr C'siginfo_t -> IO CInt
p'sigwait :: FunPtr (Ptr C'sigset_t -> Ptr CInt -> IO CInt)
p'sigwaitinfo :: FunPtr (Ptr C'sigset_t -> Ptr C'siginfo_t -> IO CInt)
instance Eq C'sigset_t
instance Show C'sigset_t
instance Eq C'sigval
instance Show C'sigval
instance Eq C'sigevent
instance Show C'sigevent
instance Eq C'mcontext_t
instance Show C'mcontext_t
instance Eq C'stack_t
instance Show C'stack_t
instance Eq C'ucontext_t
instance Show C'ucontext_t
instance Eq C'siginfo_t
instance Show C'siginfo_t
instance Eq C'sigaction
instance Show C'sigaction
instance Storable C'siginfo_t
instance Storable C'stack_t
instance Storable C'ucontext_t
instance Storable C'mcontext_t
instance Storable C'sigaction
instance Storable C'sigval
instance Storable C'sigevent
instance Storable C'sigset_t


-- | 
--   <a>http://www.opengroup.org/onlinepubs/9699919799/basedefs/regex.h.html</a>
module Bindings.Posix.Regex
data C'regex_t
C'regex_t :: CSize -> C'regex_t
c'regex_t're_nsub :: C'regex_t -> CSize
type C'regoff_t = CInt
p'regex_t're_nsub :: Ptr (C'regex_t) -> Ptr (CSize)
data C'regmatch_t
C'regmatch_t :: C'regoff_t -> C'regoff_t -> C'regmatch_t
c'regmatch_t'rm_so :: C'regmatch_t -> C'regoff_t
c'regmatch_t'rm_eo :: C'regmatch_t -> C'regoff_t
c'REG_EXTENDED :: Num a => a
c'REG_ICASE :: Num a => a
c'REG_NOSUB :: Num a => a
p'regmatch_t'rm_so :: Ptr (C'regmatch_t) -> Ptr (C'regoff_t)
c'REG_NEWLINE :: Num a => a
p'regmatch_t'rm_eo :: Ptr (C'regmatch_t) -> Ptr (C'regoff_t)
c'REG_NOTBOL :: Num a => a
c'REG_NOTEOL :: Num a => a
c'REG_NOMATCH :: Num a => a
c'REG_BADPAT :: Num a => a
c'REG_ECOLLATE :: Num a => a
c'REG_ECTYPE :: Num a => a
c'REG_EESCAPE :: Num a => a
c'REG_ESUBREG :: Num a => a
c'REG_EBRACK :: Num a => a
c'REG_EPAREN :: Num a => a
c'REG_EBRACE :: Num a => a
c'REG_BADBR :: Num a => a
c'REG_ERANGE :: Num a => a
c'REG_ESPACE :: Num a => a
c'REG_BADRPT :: Num a => a
c'regcomp :: Ptr C'regex_t -> CString -> CInt -> IO CInt
c'regerror :: CInt -> Ptr C'regex_t -> CString -> CSize -> IO CSize
p'regcomp :: FunPtr (Ptr C'regex_t -> CString -> CInt -> IO CInt)
c'regexec :: Ptr C'regex_t -> CString -> CSize -> Ptr C'regmatch_t -> CInt -> IO CInt
c'regfree :: Ptr C'regex_t -> IO ()
p'regerror :: FunPtr (CInt -> Ptr C'regex_t -> CString -> CSize -> IO CSize)
p'regexec :: FunPtr (Ptr C'regex_t -> CString -> CSize -> Ptr C'regmatch_t -> CInt -> IO CInt)
p'regfree :: FunPtr (Ptr C'regex_t -> IO ())
instance Eq C'regex_t
instance Show C'regex_t
instance Eq C'regmatch_t
instance Show C'regmatch_t
instance Storable C'regmatch_t
instance Storable C'regex_t


-- | 
--   <a>http://www.opengroup.org/onlinepubs/9699919799/basedefs/locale.h.html</a>
module Bindings.Posix.Locale
c'LC_MESSAGES :: Num a => a


-- | 
--   <a>http://www.opengroup.org/onlinepubs/9699919799/basedefs/time.h.html</a>
module Bindings.Posix.Time
data C'tm
C'tm :: CInt -> CInt -> CInt -> CInt -> CInt -> CInt -> CInt -> CInt -> CInt -> C'tm
c'tm'tm_sec :: C'tm -> CInt
c'tm'tm_min :: C'tm -> CInt
c'tm'tm_hour :: C'tm -> CInt
c'tm'tm_mday :: C'tm -> CInt
c'tm'tm_mon :: C'tm -> CInt
c'tm'tm_year :: C'tm -> CInt
c'tm'tm_wday :: C'tm -> CInt
c'tm'tm_yday :: C'tm -> CInt
c'tm'tm_isdst :: C'tm -> CInt
data C'timespec
C'timespec :: CTime -> CLong -> C'timespec
c'timespec'tv_sec :: C'timespec -> CTime
c'timespec'tv_nsec :: C'timespec -> CLong
p'timespec'tv_sec :: Ptr (C'timespec) -> Ptr (CTime)
data C'itimerspec
C'itimerspec :: C'timespec -> C'timespec -> C'itimerspec
c'itimerspec'it_interval :: C'itimerspec -> C'timespec
c'itimerspec'it_value :: C'itimerspec -> C'timespec
p'tm'tm_sec :: Ptr (C'tm) -> Ptr (CInt)
p'timespec'tv_nsec :: Ptr (C'timespec) -> Ptr (CLong)
c'CLOCKS_PER_SEC :: Num a => a
c'CLOCK_REALTIME :: Num a => a
p'tm'tm_min :: Ptr (C'tm) -> Ptr (CInt)
c'TIMER_ABSTIME :: Num a => a
p'itimerspec'it_interval :: Ptr (C'itimerspec) -> Ptr (C'timespec)
p'tm'tm_hour :: Ptr (C'tm) -> Ptr (CInt)
c'getdate_err :: IO CInt
p'itimerspec'it_value :: Ptr (C'itimerspec) -> Ptr (C'timespec)
p'tm'tm_mday :: Ptr (C'tm) -> Ptr (CInt)
c'clock_getres :: C'clockid_t -> Ptr C'timespec -> IO CInt
c'clock_gettime :: C'clockid_t -> Ptr C'timespec -> IO CInt
p'tm'tm_mon :: Ptr (C'tm) -> Ptr (CInt)
p'clock_getres :: FunPtr (C'clockid_t -> Ptr C'timespec -> IO CInt)
c'clock_nanosleep :: C'clockid_t -> CInt -> Ptr C'timespec -> Ptr C'timespec -> IO CInt
c'clock_settime :: C'clockid_t -> Ptr C'timespec -> IO CInt
p'clock_gettime :: FunPtr (C'clockid_t -> Ptr C'timespec -> IO CInt)
p'tm'tm_year :: Ptr (C'tm) -> Ptr (CInt)
c'difftime :: C'time_t -> C'time_t -> IO CDouble
p'clock_nanosleep :: FunPtr (C'clockid_t -> CInt -> Ptr C'timespec -> Ptr C'timespec -> IO CInt)
c'getdate :: CString -> IO (Ptr C'tm)
p'clock_settime :: FunPtr (C'clockid_t -> Ptr C'timespec -> IO CInt)
p'tm'tm_wday :: Ptr (C'tm) -> Ptr (CInt)
c'gmtime :: Ptr C'time_t -> IO (Ptr C'tm)
p'difftime :: FunPtr (C'time_t -> C'time_t -> IO CDouble)
p'getdate :: FunPtr (CString -> IO (Ptr C'tm))
c'gmtime_r :: Ptr C'time_t -> Ptr C'tm -> IO (Ptr C'tm)
p'tm'tm_yday :: Ptr (C'tm) -> Ptr (CInt)
c'localtime :: Ptr C'time_t -> IO (Ptr C'tm)
p'gmtime :: FunPtr (Ptr C'time_t -> IO (Ptr C'tm))
c'localtime_r :: Ptr C'time_t -> Ptr C'tm -> IO (Ptr C'tm)
p'gmtime_r :: FunPtr (Ptr C'time_t -> Ptr C'tm -> IO (Ptr C'tm))
p'tm'tm_isdst :: Ptr (C'tm) -> Ptr (CInt)
c'mktime :: Ptr C'tm -> IO C'time_t
p'localtime :: FunPtr (Ptr C'time_t -> IO (Ptr C'tm))
c'nanosleep :: Ptr C'timespec -> Ptr C'timespec -> IO CInt
p'localtime_r :: FunPtr (Ptr C'time_t -> Ptr C'tm -> IO (Ptr C'tm))
p'mktime :: FunPtr (Ptr C'tm -> IO C'time_t)
c'strftime :: CString -> CSize -> CString -> Ptr C'tm -> IO CSize
p'nanosleep :: FunPtr (Ptr C'timespec -> Ptr C'timespec -> IO CInt)
c'strptime :: CString -> CString -> Ptr C'tm -> IO CString
p'strftime :: FunPtr (CString -> CSize -> CString -> Ptr C'tm -> IO CSize)
c'time :: Ptr C'time_t -> IO C'time_t
p'strptime :: FunPtr (CString -> CString -> Ptr C'tm -> IO CString)
c'timer_create :: C'clockid_t -> Ptr C'sigevent -> Ptr C'timer_t -> IO CInt
c'timer_delete :: C'timer_t -> IO CInt
p'time :: FunPtr (Ptr C'time_t -> IO C'time_t)
c'timer_getoverrun :: C'timer_t -> IO CInt
p'timer_create :: FunPtr (C'clockid_t -> Ptr C'sigevent -> Ptr C'timer_t -> IO CInt)
p'timer_delete :: FunPtr (C'timer_t -> IO CInt)
c'timer_gettime :: C'timer_t -> Ptr C'itimerspec -> IO CInt
p'timer_getoverrun :: FunPtr (C'timer_t -> IO CInt)
c'timer_settime :: C'timer_t -> CInt -> Ptr C'itimerspec -> Ptr C'itimerspec -> IO CInt
c'tzset :: IO ()
p'timer_gettime :: FunPtr (C'timer_t -> Ptr C'itimerspec -> IO CInt)
p'timer_settime :: FunPtr (C'timer_t -> CInt -> Ptr C'itimerspec -> Ptr C'itimerspec -> IO CInt)
p'daylight :: Ptr (CInt)
p'tzset :: FunPtr (IO ())
p'timezone :: Ptr (CLong)
c'tzname :: Ptr (CString)
instance Eq C'tm
instance Show C'tm
instance Eq C'timespec
instance Show C'timespec
instance Eq C'itimerspec
instance Show C'itimerspec
instance Storable C'itimerspec
instance Storable C'timespec
instance Storable C'tm


-- | 
--   <a>http://www.opengroup.org/onlinepubs/9699919799/basedefs/sys_select.h.html</a>
module Bindings.Posix.Sys.Select
data C'timeval
C'timeval :: CTime -> C'suseconds_t -> C'timeval
c'timeval'tv_sec :: C'timeval -> CTime
c'timeval'tv_usec :: C'timeval -> C'suseconds_t
data C'fd_set
C'fd_set :: C'fd_set
p'timeval'tv_sec :: Ptr (C'timeval) -> Ptr (CTime)
c'FD_SETSIZE :: Num a => a
p'timeval'tv_usec :: Ptr (C'timeval) -> Ptr (C'suseconds_t)
c'FD_CLR :: CInt -> Ptr C'fd_set -> IO ()
c'FD_ISSET :: CInt -> Ptr C'fd_set -> IO CInt
c'FD_SET :: CInt -> Ptr C'fd_set -> IO ()
c'FD_ZERO :: Ptr C'fd_set -> IO ()
c'pselect :: CInt -> Ptr C'fd_set -> Ptr C'fd_set -> Ptr C'fd_set -> Ptr C'timespec -> Ptr C'sigset_t -> IO CInt
c'select :: CInt -> Ptr C'fd_set -> Ptr C'fd_set -> Ptr C'fd_set -> Ptr C'timeval -> IO CInt
p'pselect :: FunPtr (CInt -> Ptr C'fd_set -> Ptr C'fd_set -> Ptr C'fd_set -> Ptr C'timespec -> Ptr C'sigset_t -> IO CInt)
p'select :: FunPtr (CInt -> Ptr C'fd_set -> Ptr C'fd_set -> Ptr C'fd_set -> Ptr C'timeval -> IO CInt)
instance Eq C'timeval
instance Show C'timeval
instance Eq C'fd_set
instance Show C'fd_set
instance Storable C'fd_set
instance Storable C'timeval

module Bindings.Posix.Sys


-- | 
--   <a>http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/fcntl.h.html</a>
module Bindings.Posix.Fcntl
c'F_DUPFD :: Num a => a
c'F_GETFD :: Num a => a
c'F_SETFD :: Num a => a
c'F_GETFL :: Num a => a
c'F_SETFL :: Num a => a
c'F_GETLK :: Num a => a
c'F_SETLK :: Num a => a
c'F_SETLKW :: Num a => a
c'F_GETOWN :: Num a => a
c'F_SETOWN :: Num a => a
c'FD_CLOEXEC :: Num a => a
c'F_RDLCK :: Num a => a
c'F_UNLCK :: Num a => a
c'F_WRLCK :: Num a => a
c'O_CREAT :: Num a => a
c'O_EXCL :: Num a => a
c'O_NOCTTY :: Num a => a
c'O_TRUNC :: Num a => a
c'O_APPEND :: Num a => a
c'O_NONBLOCK :: Num a => a
c'O_SYNC :: Num a => a
c'O_ACCMODE :: Num a => a
c'O_RDONLY :: Num a => a
c'O_RDWR :: Num a => a
c'O_WRONLY :: Num a => a
data C'flock
C'flock :: CShort -> CShort -> C'off_t -> C'off_t -> C'pid_t -> C'flock
c'flock'l_type :: C'flock -> CShort
c'flock'l_whence :: C'flock -> CShort
c'flock'l_start :: C'flock -> C'off_t
c'flock'l_len :: C'flock -> C'off_t
c'flock'l_pid :: C'flock -> C'pid_t
c'creat :: CString -> C'mode_t -> IO CInt
p'creat :: FunPtr (CString -> C'mode_t -> IO CInt)
p'flock'l_type :: Ptr (C'flock) -> Ptr (CShort)
p'flock'l_whence :: Ptr (C'flock) -> Ptr (CShort)
p'flock'l_start :: Ptr (C'flock) -> Ptr (C'off_t)
p'flock'l_len :: Ptr (C'flock) -> Ptr (C'off_t)
p'flock'l_pid :: Ptr (C'flock) -> Ptr (C'pid_t)
instance Eq C'flock
instance Show C'flock
instance Storable C'flock


-- | 
--   <a>http://www.opengroup.org/onlinepubs/9699919799/basedefs/errno.h.html</a>
module Bindings.Posix.Errno
c'E2BIG :: Num a => a
c'EACCES :: Num a => a
c'EADDRINUSE :: Num a => a
c'EADDRNOTAVAIL :: Num a => a
c'EAFNOSUPPORT :: Num a => a
c'EAGAIN :: Num a => a
c'EALREADY :: Num a => a
c'EBADF :: Num a => a
c'EBADMSG :: Num a => a
c'EBUSY :: Num a => a
c'ECANCELED :: Num a => a
c'ECHILD :: Num a => a
c'ECONNABORTED :: Num a => a
c'ECONNREFUSED :: Num a => a
c'ECONNRESET :: Num a => a
c'EDEADLK :: Num a => a
c'EDESTADDRREQ :: Num a => a
c'EDOM :: Num a => a
c'EDQUOT :: Num a => a
c'EEXIST :: Num a => a
c'EFAULT :: Num a => a
c'EFBIG :: Num a => a
c'EHOSTUNREACH :: Num a => a
c'EIDRM :: Num a => a
c'EILSEQ :: Num a => a
c'EINPROGRESS :: Num a => a
c'EINTR :: Num a => a
c'EINVAL :: Num a => a
c'EIO :: Num a => a
c'EISCONN :: Num a => a
c'EISDIR :: Num a => a
c'ELOOP :: Num a => a
c'EMFILE :: Num a => a
c'EMLINK :: Num a => a
c'EMSGSIZE :: Num a => a
c'EMULTIHOP :: Num a => a
c'ENAMETOOLONG :: Num a => a
c'ENETDOWN :: Num a => a
c'ENETRESET :: Num a => a
c'ENETUNREACH :: Num a => a
c'ENFILE :: Num a => a
c'ENOBUFS :: Num a => a
c'ENODEV :: Num a => a
c'ENOENT :: Num a => a
c'ENOEXEC :: Num a => a
c'ENOLCK :: Num a => a
c'ENOLINK :: Num a => a
c'ENOMEM :: Num a => a
c'ENOMSG :: Num a => a
c'ENOPROTOOPT :: Num a => a
c'ENOSPC :: Num a => a
c'ENOSYS :: Num a => a
c'ENOTCONN :: Num a => a
c'ENOTDIR :: Num a => a
c'ENOTEMPTY :: Num a => a
c'ENOTRECOVERABLE :: Num a => a
c'ENOTSOCK :: Num a => a
c'ENOTSUP :: Num a => a
c'ENOTTY :: Num a => a
c'ENXIO :: Num a => a
c'EOPNOTSUPP :: Num a => a
c'EOVERFLOW :: Num a => a
c'EOWNERDEAD :: Num a => a
c'EPERM :: Num a => a
c'EPIPE :: Num a => a
c'EPROTO :: Num a => a
c'EPROTONOSUPPORT :: Num a => a
c'EPROTOTYPE :: Num a => a
c'ERANGE :: Num a => a
c'EROFS :: Num a => a
c'ESPIPE :: Num a => a
c'ESRCH :: Num a => a
c'ESTALE :: Num a => a
c'ETIMEDOUT :: Num a => a
c'ETXTBSY :: Num a => a
c'EWOULDBLOCK :: Num a => a
c'EXDEV :: Num a => a

module Bindings.Posix
