-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Haskell bindings for the C Wayland library.
--   
@package hayland
@version 0.1.0.0

module Graphics.Wayland
version :: (Int, Int, Int)

-- | Fixed point number with 8 bits of decimal precision.
--   
--   The equivalent of wayland's wl_fixed_t.
type Fixed256 = Fixed Precision256

-- | 8 bits of precision means a resolution of 256.
data Precision256

-- | Represents time in seconds with millisecond precision.
type Time = Milli
data Result
Success :: Result
Failure :: Result
errToResult :: CInt -> Result
diffTimeToTime :: DiffTime -> Time
timeToDiffTime :: Time -> DiffTime
instance Eq Result
instance Show Result

module Graphics.Wayland.Scanner
generateTypes :: ProtocolSpec -> Q [Dec]
generateEnums :: ProtocolSpec -> [Dec]

-- | generate FFI for a certain side of the API
--   
--   Either Dec Dec explained: Left dec for internal declarations, Right
--   dec for external declarations (ie. those that should be exposed to the
--   user)
generateMethods :: ProtocolSpec -> ServerClient -> Q [Either Dec Dec]
generateListeners :: ProtocolSpec -> ServerClient -> Q [Either Dec Dec]
generateRegistryBind :: ProtocolSpec -> Q [Either Dec Dec]
generateRegistryBindInternal :: ProtocolSpec -> Q [Dec]
generateRegistryBindExternal :: ProtocolSpec -> Q [Dec]
generateClientInternalListeners :: ProtocolSpec -> Q [Dec]
generateServerInternalListeners :: ProtocolSpec -> Q [Dec]
generateClientExternalListeners :: ProtocolSpec -> Q [Dec]
generateServerExternalListeners :: ProtocolSpec -> Q [Dec]
generateClientInternalMethods :: ProtocolSpec -> Q [Dec]
generateServerInternalMethods :: ProtocolSpec -> Q [Dec]
generateClientExternalMethods :: ProtocolSpec -> Q [Dec]
generateServerExternalMethods :: ProtocolSpec -> Q [Dec]
data ServerClient
Server :: ServerClient
Client :: ServerClient

-- | wayland-style interface name (e.g. wl_display)
type InterfaceName = String
data Interface
Interface :: InterfaceName -> Int -> [Message] -> [Message] -> [WLEnum] -> Interface
interfaceName :: Interface -> InterfaceName
interfaceVersion :: Interface -> Int

-- | aka requests
interfaceRequests :: Interface -> [Message]
interfaceEvents :: Interface -> [Message]
interfaceEnums :: Interface -> [WLEnum]
type EnumName = String

-- | wayland style enum specification (not Prelude)
data WLEnum
WLEnum :: EnumName -> [(String, Int)] -> WLEnum
enumName :: WLEnum -> EnumName
enumEntries :: WLEnum -> [(String, Int)]

-- | wayland wire protocol argument type. we can't deal with untyped
--   object/new-id arguments.
data ArgumentType
IntArg :: ArgumentType
UIntArg :: ArgumentType
FixedArg :: ArgumentType
StringArg :: ArgumentType
ObjectArg :: Name -> ArgumentType
NewIdArg :: Name -> MessageName -> ArgumentType
ArrayArg :: ArgumentType
FdArg :: ArgumentType
argConversionTable :: [(String, ArgumentType)]
type Argument = (String, ArgumentType, Bool)
type MessageName = String
data Message
Message :: MessageName -> [Argument] -> Bool -> Message
messageName :: Message -> MessageName
messageArguments :: Message -> [Argument]
messageIsDestructor :: Message -> Bool
type ProtocolName = String
data ProtocolSpec
ProtocolSpec :: ProtocolName -> [Interface] -> ProtocolSpec
protocolName :: ProtocolSpec -> ProtocolName
protocolInterfaces :: ProtocolSpec -> [Interface]

-- | locate wayland.xml on disk and parse it
readProtocol :: IO ProtocolSpec
parseFile :: FilePath -> IO ProtocolSpec

-- | struct wl_interface pointer
newtype CInterface
CInterface :: (Ptr (CInterface)) -> CInterface

module Graphics.Wayland.Client
data Result
Success :: Result
Failure :: Result

-- | Connect to the default display by passing a null pointer
displayConnect :: IO ((Maybe Display))

-- | Connect to a display with a specified name
displayConnectName :: (String) -> IO ((Maybe Display))

-- | Connect to a display by file descriptor
displayConnectFd :: (Fd) -> IO ((Maybe Display))
displayDisconnect :: (Display) -> IO ()
displayGetFd :: (Display) -> IO ((Fd))

-- | wl_display_dispatch. Returns <tt>Nothing</tt> on failure or <tt>Just
--   k</tt> if k events were processed.
--   
--   Strictly safe!!! This *will* call back into Haskell code!
displayDispatch :: (Display) -> IO ((Maybe Int))

-- | wl_display_dispatch_pending. Returns <tt>Nothing</tt> on failure or
--   <tt>Just k</tt> if k events were processed.
--   
--   Strictly safe!!! This *will* call back into Haskell code!
displayDispatchPending :: (Display) -> IO ((Maybe Int))

-- | <tt>Nothing</tt> if no error occurred or <tt>Just k</tt> if the latest
--   error had code k
--   
--   Note (from the wayland documentation): errors are fatal. If this
--   function returns a <tt>Just</tt> value, the display can no longer be
--   used.
displayGetError :: (Display) -> IO ((Maybe Int))

-- | <tt>Nothing</tt> on failure or <tt>Just k</tt> if k bytes were sent
--   
--   <b>It is not clear to me if this is can be unsafe (ie. can this call
--   back into haskell code?).</b>
displayFlush :: (Display) -> IO ((Maybe Int))

-- | <tt>Nothing</tt> on failure or <tt>Just k</tt> if k events were
--   dispatched.
--   
--   <b>It is not clear to me if this is can be unsafe (ie. can this call
--   back into haskell code?).</b>
displayRoundtrip :: (Display) -> IO ((Maybe Int))
displayPrepareRead :: (Display) -> IO ((Result))
displayCancelRead :: (Display) -> IO ()

-- | This will read events from the file descriptor for the display. This
--   function does not dispatch events, it only reads and queues events
--   into their corresponding event queues.
--   
--   Before calling this function, wl_display_prepare_read() must be called
--   first.
displayReadEvents :: (Display) -> IO ((Result))
subsurfaceSetDesync :: Subsurface -> IO ()
subsurfaceSetSync :: Subsurface -> IO ()
subsurfacePlaceBelow :: Subsurface -> Surface -> IO ()
subsurfacePlaceAbove :: Subsurface -> Surface -> IO ()
subsurfaceSetPosition :: Subsurface -> Int -> Int -> IO ()
subsurfaceDestroy :: Subsurface -> IO ()
subcompositorGetSubsurface :: Subcompositor -> Surface -> Surface -> IO Subsurface
subcompositorDestroy :: Subcompositor -> IO ()
regionSubtract :: Region -> Int -> Int -> Int -> Int -> IO ()
regionAdd :: Region -> Int -> Int -> Int -> Int -> IO ()
regionDestroy :: Region -> IO ()
outputDestroy :: Output -> IO ()
touchRelease :: Touch -> IO ()
keyboardRelease :: Keyboard -> IO ()
pointerRelease :: Pointer -> IO ()
pointerSetCursor :: Pointer -> Word -> Maybe Surface -> Int -> Int -> IO ()
seatDestroy :: Seat -> IO ()
seatGetTouch :: Seat -> IO Touch
seatGetKeyboard :: Seat -> IO Keyboard
seatGetPointer :: Seat -> IO Pointer
surfaceSetBufferScale :: Surface -> Int -> IO ()
surfaceSetBufferTransform :: Surface -> Int -> IO ()
surfaceCommit :: Surface -> IO ()
surfaceSetInputRegion :: Surface -> Maybe Region -> IO ()
surfaceSetOpaqueRegion :: Surface -> Maybe Region -> IO ()
surfaceFrame :: Surface -> IO Callback
surfaceDamage :: Surface -> Int -> Int -> Int -> Int -> IO ()
surfaceAttach :: Surface -> Maybe Buffer -> Int -> Int -> IO ()
surfaceDestroy :: Surface -> IO ()
shellSurfaceDestroy :: ShellSurface -> IO ()
shellSurfaceSetClass :: ShellSurface -> String -> IO ()
shellSurfaceSetTitle :: ShellSurface -> String -> IO ()
shellSurfaceSetMaximized :: ShellSurface -> Maybe Output -> IO ()
shellSurfaceSetPopup :: ShellSurface -> Seat -> Word -> Surface -> Int -> Int -> Word -> IO ()
shellSurfaceSetFullscreen :: ShellSurface -> Word -> Word -> Maybe Output -> IO ()
shellSurfaceSetTransient :: ShellSurface -> Surface -> Int -> Int -> Word -> IO ()
shellSurfaceSetToplevel :: ShellSurface -> IO ()
shellSurfaceResize :: ShellSurface -> Seat -> Word -> Word -> IO ()
shellSurfaceMove :: ShellSurface -> Seat -> Word -> IO ()
shellSurfacePong :: ShellSurface -> Word -> IO ()
shellDestroy :: Shell -> IO ()
shellGetShellSurface :: Shell -> Surface -> IO ShellSurface
dataDeviceManagerDestroy :: DataDeviceManager -> IO ()
dataDeviceManagerGetDataDevice :: DataDeviceManager -> Seat -> IO DataDevice
dataDeviceManagerCreateDataSource :: DataDeviceManager -> IO DataSource
dataDeviceDestroy :: DataDevice -> IO ()
dataDeviceSetSelection :: DataDevice -> Maybe DataSource -> Word -> IO ()
dataDeviceStartDrag :: DataDevice -> Maybe DataSource -> Surface -> Maybe Surface -> Word -> IO ()
dataSourceDestroy :: DataSource -> IO ()
dataSourceOffer :: DataSource -> String -> IO ()
dataOfferDestroy :: DataOffer -> IO ()
dataOfferReceive :: DataOffer -> String -> Fd -> IO ()
dataOfferAccept :: DataOffer -> Word -> Maybe String -> IO ()
bufferDestroy :: Buffer -> IO ()
shmDestroy :: Shm -> IO ()
shmCreatePool :: Shm -> Fd -> Int -> IO ShmPool
shmPoolResize :: ShmPool -> Int -> IO ()
shmPoolDestroy :: ShmPool -> IO ()
shmPoolCreateBuffer :: ShmPool -> Int -> Int -> Int -> Int -> Word -> IO Buffer
compositorDestroy :: Compositor -> IO ()
compositorCreateRegion :: Compositor -> IO Region
compositorCreateSurface :: Compositor -> IO Surface
callbackDestroy :: Callback -> IO ()
registryDestroy :: Registry -> IO ()
displayGetRegistry :: Display -> IO Registry
displaySync :: Display -> IO Callback
data DisplayListener
DisplayListener :: (Display -> Word -> IO ()) -> DisplayListener
displayDeleteId :: DisplayListener -> Display -> Word -> IO ()
data RegistryListener
RegistryListener :: (Registry -> Word -> String -> Word -> IO ()) -> (Registry -> Word -> IO ()) -> RegistryListener
registryGlobal :: RegistryListener -> Registry -> Word -> String -> Word -> IO ()
registryGlobalRemove :: RegistryListener -> Registry -> Word -> IO ()
data CallbackListener
CallbackListener :: (Callback -> Word -> IO ()) -> CallbackListener
callbackDone :: CallbackListener -> Callback -> Word -> IO ()
data ShmListener
ShmListener :: (Shm -> Word -> IO ()) -> ShmListener
shmFormat :: ShmListener -> Shm -> Word -> IO ()
data BufferListener
BufferListener :: (Buffer -> IO ()) -> BufferListener
bufferRelease :: BufferListener -> Buffer -> IO ()
data DataOfferListener
DataOfferListener :: (DataOffer -> String -> IO ()) -> DataOfferListener
dataOfferOffer :: DataOfferListener -> DataOffer -> String -> IO ()
data DataSourceListener
DataSourceListener :: (DataSource -> Maybe String -> IO ()) -> (DataSource -> String -> Fd -> IO ()) -> (DataSource -> IO ()) -> DataSourceListener
dataSourceTarget :: DataSourceListener -> DataSource -> Maybe String -> IO ()
dataSourceSend :: DataSourceListener -> DataSource -> String -> Fd -> IO ()
dataSourceCancelled :: DataSourceListener -> DataSource -> IO ()
data DataDeviceListener
DataDeviceListener :: (DataDevice -> DataOffer -> IO ()) -> (DataDevice -> Word -> Surface -> Fixed256 -> Fixed256 -> Maybe DataOffer -> IO ()) -> (DataDevice -> IO ()) -> (DataDevice -> Time -> Fixed256 -> Fixed256 -> IO ()) -> (DataDevice -> IO ()) -> (DataDevice -> Maybe DataOffer -> IO ()) -> DataDeviceListener
dataDeviceDataOffer :: DataDeviceListener -> DataDevice -> DataOffer -> IO ()
dataDeviceEnter :: DataDeviceListener -> DataDevice -> Word -> Surface -> Fixed256 -> Fixed256 -> Maybe DataOffer -> IO ()
dataDeviceLeave :: DataDeviceListener -> DataDevice -> IO ()
dataDeviceMotion :: DataDeviceListener -> DataDevice -> Time -> Fixed256 -> Fixed256 -> IO ()
dataDeviceDrop :: DataDeviceListener -> DataDevice -> IO ()
dataDeviceSelection :: DataDeviceListener -> DataDevice -> Maybe DataOffer -> IO ()
data ShellSurfaceListener
ShellSurfaceListener :: (ShellSurface -> Word -> IO ()) -> (ShellSurface -> Word -> Int -> Int -> IO ()) -> (ShellSurface -> IO ()) -> ShellSurfaceListener
shellSurfacePing :: ShellSurfaceListener -> ShellSurface -> Word -> IO ()
shellSurfaceConfigure :: ShellSurfaceListener -> ShellSurface -> Word -> Int -> Int -> IO ()
shellSurfacePopupDone :: ShellSurfaceListener -> ShellSurface -> IO ()
data SurfaceListener
SurfaceListener :: (Surface -> Output -> IO ()) -> (Surface -> Output -> IO ()) -> SurfaceListener
surfaceEnter :: SurfaceListener -> Surface -> Output -> IO ()
surfaceLeave :: SurfaceListener -> Surface -> Output -> IO ()
data SeatListener
SeatListener :: (Seat -> Word -> IO ()) -> (Seat -> String -> IO ()) -> SeatListener
seatCapabilities :: SeatListener -> Seat -> Word -> IO ()
seatName :: SeatListener -> Seat -> String -> IO ()
data PointerListener
PointerListener :: (Pointer -> Word -> Surface -> Fixed256 -> Fixed256 -> IO ()) -> (Pointer -> Word -> Surface -> IO ()) -> (Pointer -> Time -> Fixed256 -> Fixed256 -> IO ()) -> (Pointer -> Word -> Time -> Word -> Word -> IO ()) -> (Pointer -> Time -> Word -> Fixed256 -> IO ()) -> PointerListener
pointerEnter :: PointerListener -> Pointer -> Word -> Surface -> Fixed256 -> Fixed256 -> IO ()
pointerLeave :: PointerListener -> Pointer -> Word -> Surface -> IO ()
pointerMotion :: PointerListener -> Pointer -> Time -> Fixed256 -> Fixed256 -> IO ()
pointerButton :: PointerListener -> Pointer -> Word -> Time -> Word -> Word -> IO ()
pointerAxis :: PointerListener -> Pointer -> Time -> Word -> Fixed256 -> IO ()
data KeyboardListener
KeyboardListener :: (Keyboard -> Word -> Fd -> Word -> IO ()) -> (Keyboard -> Word -> Surface -> IO ()) -> (Keyboard -> Word -> Time -> Word -> Word -> IO ()) -> (Keyboard -> Word -> Word -> Word -> Word -> Word -> IO ()) -> KeyboardListener
keyboardKeymap :: KeyboardListener -> Keyboard -> Word -> Fd -> Word -> IO ()
keyboardLeave :: KeyboardListener -> Keyboard -> Word -> Surface -> IO ()
keyboardKey :: KeyboardListener -> Keyboard -> Word -> Time -> Word -> Word -> IO ()
keyboardModifiers :: KeyboardListener -> Keyboard -> Word -> Word -> Word -> Word -> Word -> IO ()
data TouchListener
TouchListener :: (Touch -> Word -> Time -> Surface -> Int -> Fixed256 -> Fixed256 -> IO ()) -> (Touch -> Word -> Time -> Int -> IO ()) -> (Touch -> Time -> Int -> Fixed256 -> Fixed256 -> IO ()) -> (Touch -> IO ()) -> (Touch -> IO ()) -> TouchListener
touchDown :: TouchListener -> Touch -> Word -> Time -> Surface -> Int -> Fixed256 -> Fixed256 -> IO ()
touchUp :: TouchListener -> Touch -> Word -> Time -> Int -> IO ()
touchMotion :: TouchListener -> Touch -> Time -> Int -> Fixed256 -> Fixed256 -> IO ()
touchFrame :: TouchListener -> Touch -> IO ()
touchCancel :: TouchListener -> Touch -> IO ()
data OutputListener
OutputListener :: (Output -> Int -> Int -> Int -> Int -> Int -> String -> String -> Int -> IO ()) -> (Output -> Word -> Int -> Int -> Int -> IO ()) -> (Output -> IO ()) -> (Output -> Int -> IO ()) -> OutputListener
outputGeometry :: OutputListener -> Output -> Int -> Int -> Int -> Int -> Int -> String -> String -> Int -> IO ()
outputMode :: OutputListener -> Output -> Word -> Int -> Int -> Int -> IO ()
outputDone :: OutputListener -> Output -> IO ()
outputScale :: OutputListener -> Output -> Int -> IO ()
wl_output_c_add_listener_request_binding :: Output -> Ptr OutputListener -> Ptr () -> IO CInt
wl_touch_c_add_listener_request_binding :: Touch -> Ptr TouchListener -> Ptr () -> IO CInt
wl_keyboard_c_add_listener_request_binding :: Keyboard -> Ptr KeyboardListener -> Ptr () -> IO CInt
wl_pointer_c_add_listener_request_binding :: Pointer -> Ptr PointerListener -> Ptr () -> IO CInt
wl_seat_c_add_listener_request_binding :: Seat -> Ptr SeatListener -> Ptr () -> IO CInt
wl_surface_c_add_listener_request_binding :: Surface -> Ptr SurfaceListener -> Ptr () -> IO CInt
wl_shell_surface_c_add_listener_request_binding :: ShellSurface -> Ptr ShellSurfaceListener -> Ptr () -> IO CInt
wl_data_device_c_add_listener_request_binding :: DataDevice -> Ptr DataDeviceListener -> Ptr () -> IO CInt
wl_data_source_c_add_listener_request_binding :: DataSource -> Ptr DataSourceListener -> Ptr () -> IO CInt
wl_data_offer_c_add_listener_request_binding :: DataOffer -> Ptr DataOfferListener -> Ptr () -> IO CInt
wl_buffer_c_add_listener_request_binding :: Buffer -> Ptr BufferListener -> Ptr () -> IO CInt
wl_shm_c_add_listener_request_binding :: Shm -> Ptr ShmListener -> Ptr () -> IO CInt
wl_callback_c_add_listener_request_binding :: Callback -> Ptr CallbackListener -> Ptr () -> IO CInt
wl_registry_c_add_listener_request_binding :: Registry -> Ptr RegistryListener -> Ptr () -> IO CInt
wl_display_c_add_listener_request_binding :: Display -> Ptr DisplayListener -> Ptr () -> IO CInt
outputSetListener :: Output -> OutputListener -> IO Result
touchSetListener :: Touch -> TouchListener -> IO Result
keyboardSetListener :: Keyboard -> KeyboardListener -> IO Result
pointerSetListener :: Pointer -> PointerListener -> IO Result
seatSetListener :: Seat -> SeatListener -> IO Result
surfaceSetListener :: Surface -> SurfaceListener -> IO Result
shellSurfaceSetListener :: ShellSurface -> ShellSurfaceListener -> IO Result
dataDeviceSetListener :: DataDevice -> DataDeviceListener -> IO Result
dataSourceSetListener :: DataSource -> DataSourceListener -> IO Result
dataOfferSetListener :: DataOffer -> DataOfferListener -> IO Result
bufferSetListener :: Buffer -> BufferListener -> IO Result
shmSetListener :: Shm -> ShmListener -> IO Result
callbackSetListener :: Callback -> CallbackListener -> IO Result
registrySetListener :: Registry -> RegistryListener -> IO Result
displaySetListener :: Display -> DisplayListener -> IO Result
registryBindSubcompositor :: Registry -> Word -> String -> Word -> IO Subcompositor
registryBindOutput :: Registry -> Word -> String -> Word -> IO Output
registryBindSeat :: Registry -> Word -> String -> Word -> IO Seat
registryBindShell :: Registry -> Word -> String -> Word -> IO Shell
registryBindDataDeviceManager :: Registry -> Word -> String -> Word -> IO DataDeviceManager
registryBindDataOffer :: Registry -> Word -> String -> Word -> IO DataOffer
registryBindShm :: Registry -> Word -> String -> Word -> IO Shm
registryBindCompositor :: Registry -> Word -> String -> Word -> IO Compositor
newtype Display
Display :: Ptr Display -> Display
newtype Registry
Registry :: Ptr Registry -> Registry
newtype Callback
Callback :: Ptr Callback -> Callback
newtype Compositor
Compositor :: Ptr Compositor -> Compositor
newtype ShmPool
ShmPool :: Ptr ShmPool -> ShmPool
newtype Shm
Shm :: Ptr Shm -> Shm
newtype Buffer
Buffer :: Ptr Buffer -> Buffer
newtype DataOffer
DataOffer :: Ptr DataOffer -> DataOffer
newtype DataSource
DataSource :: Ptr DataSource -> DataSource
newtype DataDevice
DataDevice :: Ptr DataDevice -> DataDevice
newtype DataDeviceManager
DataDeviceManager :: Ptr DataDeviceManager -> DataDeviceManager
newtype Shell
Shell :: Ptr Shell -> Shell
newtype ShellSurface
ShellSurface :: Ptr ShellSurface -> ShellSurface
newtype Surface
Surface :: Ptr Surface -> Surface
newtype Seat
Seat :: Ptr Seat -> Seat
newtype Pointer
Pointer :: Ptr Pointer -> Pointer
newtype Keyboard
Keyboard :: Ptr Keyboard -> Keyboard
newtype Touch
Touch :: Ptr Touch -> Touch
newtype Output
Output :: Ptr Output -> Output
newtype Region
Region :: Ptr Region -> Region
newtype Subcompositor
Subcompositor :: Ptr Subcompositor -> Subcompositor
newtype Subsurface
Subsurface :: Ptr Subsurface -> Subsurface
wl_subsurface_c_interface :: CInterface
wl_subcompositor_c_interface :: CInterface
wl_region_c_interface :: CInterface
wl_output_c_interface :: CInterface
wl_touch_c_interface :: CInterface
wl_keyboard_c_interface :: CInterface
wl_pointer_c_interface :: CInterface
wl_seat_c_interface :: CInterface
wl_surface_c_interface :: CInterface
wl_shell_surface_c_interface :: CInterface
wl_shell_c_interface :: CInterface
wl_data_device_manager_c_interface :: CInterface
wl_data_device_c_interface :: CInterface
wl_data_source_c_interface :: CInterface
wl_data_offer_c_interface :: CInterface
wl_buffer_c_interface :: CInterface
wl_shm_c_interface :: CInterface
wl_shm_pool_c_interface :: CInterface
wl_compositor_c_interface :: CInterface
wl_callback_c_interface :: CInterface
wl_registry_c_interface :: CInterface
wl_display_c_interface :: CInterface
newtype DisplayError
DisplayError :: Int -> DisplayError
newtype ShmError
ShmError :: Int -> ShmError
newtype ShmFormat
ShmFormat :: Int -> ShmFormat
newtype ShellSurfaceResize
ShellSurfaceResize :: Int -> ShellSurfaceResize
newtype ShellSurfaceTransient
ShellSurfaceTransient :: Int -> ShellSurfaceTransient
newtype ShellSurfaceFullscreenMethod
ShellSurfaceFullscreenMethod :: Int -> ShellSurfaceFullscreenMethod
newtype SeatCapability
SeatCapability :: Int -> SeatCapability
newtype PointerButtonState
PointerButtonState :: Int -> PointerButtonState
newtype PointerAxis
PointerAxis :: Int -> PointerAxis
newtype KeyboardKeymapFormat
KeyboardKeymapFormat :: Int -> KeyboardKeymapFormat
newtype KeyboardKeyState
KeyboardKeyState :: Int -> KeyboardKeyState
newtype OutputSubpixel
OutputSubpixel :: Int -> OutputSubpixel
newtype OutputTransform
OutputTransform :: Int -> OutputTransform
newtype OutputMode
OutputMode :: Int -> OutputMode
newtype SubcompositorError
SubcompositorError :: Int -> SubcompositorError
newtype SubsurfaceError
SubsurfaceError :: Int -> SubsurfaceError
subsurfaceErrorBadSurface :: SubsurfaceError
subcompositorErrorBadSurface :: SubcompositorError
outputModePreferred :: OutputMode
outputModeCurrent :: OutputMode
outputTransformFlipped_270 :: OutputTransform
outputTransformFlipped_180 :: OutputTransform
outputTransformFlipped_90 :: OutputTransform
outputTransformFlipped :: OutputTransform
outputTransform270 :: OutputTransform
outputTransform180 :: OutputTransform
outputTransform90 :: OutputTransform
outputTransformNormal :: OutputTransform
outputSubpixelVerticalBgr :: OutputSubpixel
outputSubpixelVerticalRgb :: OutputSubpixel
outputSubpixelHorizontalBgr :: OutputSubpixel
outputSubpixelHorizontalRgb :: OutputSubpixel
outputSubpixelNone :: OutputSubpixel
outputSubpixelUnknown :: OutputSubpixel
keyboardKeyStatePressed :: KeyboardKeyState
keyboardKeyStateReleased :: KeyboardKeyState
keyboardKeymapFormatXkbV1 :: KeyboardKeymapFormat
keyboardKeymapFormatNoKeymap :: KeyboardKeymapFormat
pointerAxisHorizontalScroll :: PointerAxis
pointerAxisVerticalScroll :: PointerAxis
pointerButtonStatePressed :: PointerButtonState
pointerButtonStateReleased :: PointerButtonState
seatCapabilityTouch :: SeatCapability
seatCapabilityKeyboard :: SeatCapability
seatCapabilityPointer :: SeatCapability
shellSurfaceFullscreenMethodFill :: ShellSurfaceFullscreenMethod
shellSurfaceFullscreenMethodDriver :: ShellSurfaceFullscreenMethod
shellSurfaceFullscreenMethodScale :: ShellSurfaceFullscreenMethod
shellSurfaceFullscreenMethodDefault :: ShellSurfaceFullscreenMethod
shellSurfaceTransientInactive :: ShellSurfaceTransient
shellSurfaceResizeBottomRight :: ShellSurfaceResize
shellSurfaceResizeTopRight :: ShellSurfaceResize
shellSurfaceResizeRight :: ShellSurfaceResize
shellSurfaceResizeBottomLeft :: ShellSurfaceResize
shellSurfaceResizeTopLeft :: ShellSurfaceResize
shellSurfaceResizeLeft :: ShellSurfaceResize
shellSurfaceResizeBottom :: ShellSurfaceResize
shellSurfaceResizeTop :: ShellSurfaceResize
shellSurfaceResizeNone :: ShellSurfaceResize
shmFormatYvu444 :: ShmFormat
shmFormatYuv444 :: ShmFormat
shmFormatYvu422 :: ShmFormat
shmFormatYuv422 :: ShmFormat
shmFormatYvu420 :: ShmFormat
shmFormatYuv420 :: ShmFormat
shmFormatYvu411 :: ShmFormat
shmFormatYuv411 :: ShmFormat
shmFormatYvu410 :: ShmFormat
shmFormatYuv410 :: ShmFormat
shmFormatNv61 :: ShmFormat
shmFormatNv16 :: ShmFormat
shmFormatNv21 :: ShmFormat
shmFormatNv12 :: ShmFormat
shmFormatAyuv :: ShmFormat
shmFormatVyuy :: ShmFormat
shmFormatUyvy :: ShmFormat
shmFormatYvyu :: ShmFormat
shmFormatYuyv :: ShmFormat
shmFormatBgra1010102 :: ShmFormat
shmFormatRgba1010102 :: ShmFormat
shmFormatAbgr2101010 :: ShmFormat
shmFormatArgb2101010 :: ShmFormat
shmFormatBgrx1010102 :: ShmFormat
shmFormatRgbx1010102 :: ShmFormat
shmFormatXbgr2101010 :: ShmFormat
shmFormatXrgb2101010 :: ShmFormat
shmFormatBgra8888 :: ShmFormat
shmFormatRgba8888 :: ShmFormat
shmFormatAbgr8888 :: ShmFormat
shmFormatBgrx8888 :: ShmFormat
shmFormatRgbx8888 :: ShmFormat
shmFormatXbgr8888 :: ShmFormat
shmFormatBgr888 :: ShmFormat
shmFormatRgb888 :: ShmFormat
shmFormatBgr565 :: ShmFormat
shmFormatRgb565 :: ShmFormat
shmFormatBgra5551 :: ShmFormat
shmFormatRgba5551 :: ShmFormat
shmFormatAbgr1555 :: ShmFormat
shmFormatArgb1555 :: ShmFormat
shmFormatBgrx5551 :: ShmFormat
shmFormatRgbx5551 :: ShmFormat
shmFormatXbgr1555 :: ShmFormat
shmFormatXrgb1555 :: ShmFormat
shmFormatBgra4444 :: ShmFormat
shmFormatRgba4444 :: ShmFormat
shmFormatAbgr4444 :: ShmFormat
shmFormatArgb4444 :: ShmFormat
shmFormatBgrx4444 :: ShmFormat
shmFormatRgbx4444 :: ShmFormat
shmFormatXbgr4444 :: ShmFormat
shmFormatXrgb4444 :: ShmFormat
shmFormatBgr233 :: ShmFormat
shmFormatRgb332 :: ShmFormat
shmFormatC8 :: ShmFormat
shmFormatXrgb8888 :: ShmFormat
shmFormatArgb8888 :: ShmFormat
shmErrorInvalidFd :: ShmError
shmErrorInvalidStride :: ShmError
shmErrorInvalidFormat :: ShmError
displayErrorNoMemory :: DisplayError
displayErrorInvalidMethod :: DisplayError
displayErrorInvalidObject :: DisplayError

-- | struct wl_cursor_theme;
data CursorTheme

-- | struct wl_cursor_image { uint32_t width; <i>* actual width *</i>
--   uint32_t height; <i>* actual height *</i> uint32_t hotspot_x; <i>* hot
--   spot x (must be inside image) *</i> uint32_t hotspot_y; <i>* hot spot
--   y (must be inside image) *</i> uint32_t delay; <i>* animation delay to
--   next frame (ms) *</i> };
data CursorImage

-- | struct wl_cursor { unsigned int image_count; struct wl_cursor_image
--   **images; char *name; };
data Cursor
cursorImageSize :: CursorImage -> (Word, Word)
cursorImageHotspot :: CursorImage -> (Word, Word)
cursorImageDelay :: CursorImage -> Word
cursorName :: Cursor -> String
cursorImages :: Cursor -> [CursorImage]

-- | struct wl_cursor_theme * wl_cursor_theme_load(const char *name, int
--   size, struct wl_shm *shm);
cursorThemeLoad :: (String) -> (Int) -> (Shm) -> IO ((CursorTheme))

-- | void wl_cursor_theme_destroy(struct wl_cursor_theme *theme);
cursorThemeDestroy :: (CursorTheme) -> IO ()

-- | struct wl_cursor * wl_cursor_theme_get_cursor(struct wl_cursor_theme
--   *theme, const char *name);
cursorThemeGetCursor :: (CursorTheme) -> (String) -> IO ((Cursor))

-- | struct wl_buffer * wl_cursor_image_get_buffer(struct wl_cursor_image
--   *image);
--   
--   From the wayland docs: do not destroy the returned buffer.
cursorImageGetBuffer :: (CursorImage) -> IO ((Buffer))

-- | int wl_cursor_frame(struct wl_cursor *cursor, uint32_t time);
cursorFrame :: (Cursor) -> (Int) -> IO ((Int))
data EGLWindow
eglWindowCreate :: (Surface) -> (Int) -> (Int) -> IO ((EGLWindow))
eglWindowDestroy :: (EGLWindow) -> IO ()
eglWindowResize :: (EGLWindow) -> (Int) -> (Int) -> (Int) -> (Int) -> IO ()
eglWindowGetAttachedSize :: (EGLWindow) -> IO (Int, Int)

module Graphics.Wayland.Server

-- | enum { WL_EVENT_READABLE = 0x01, WL_EVENT_WRITABLE = 0x02,
--   WL_EVENT_HANGUP = 0x04, WL_EVENT_ERROR = 0x08 };
--   
--   The "uint32_t mask" argument passed to a variety of functions in this
--   file is a bitmask detailing the state of the client.
newtype ClientState
ClientState :: CUInt -> ClientState
clientStateReadable :: ClientState
clientStateWritable :: ClientState
clientStateHangup :: ClientState
clientStateError :: ClientState

-- | struct wl_event_loop;
data EventLoop

-- | struct wl_event_source;
data EventSource

-- | typedef int (*wl_event_loop_fd_func_t)(int fd, uint32_t mask, void
--   *data);
type EventLoopFdFunc = Int -> ClientState -> IO Bool

-- | typedef int (*wl_event_loop_timer_func_t)(void *data);
type EventLoopTimerFunc = IO Bool

-- | typedef int (*wl_event_loop_signal_func_t)(int signal_number, void
--   *data);
type EventLoopSignalFunc = Int -> IO Bool
type EventLoopIdleFunc = IO ()

-- | struct wl_event_loop *wl_event_loop_create(void);
eventLoopCreate :: IO ((EventLoop))

-- | void wl_event_loop_destroy(struct wl_event_loop *loop);
eventLoopDestroy :: (EventLoop) -> IO ()

-- | struct wl_event_source *wl_event_loop_add_fd(struct wl_event_loop
--   *loop, int fd, uint32_t mask, wl_event_loop_fd_func_t func, void
--   *data);
eventLoopAddFd :: (EventLoop) -> (Fd) -> (ClientState) -> (EventLoopFdFunc) -> IO ((EventSource))

-- | int wl_event_source_fd_update(struct wl_event_source *source, uint32_t
--   mask);
eventSourceFdUpdate :: (EventSource) -> (ClientState) -> IO ((Result))

-- | struct wl_event_source *wl_event_loop_add_timer(struct wl_event_loop
--   *loop, wl_event_loop_timer_func_t func, void *data);
eventLoopAddTimer :: (EventLoop) -> (EventLoopTimerFunc) -> IO ((EventSource))

-- | struct wl_event_source * wl_event_loop_add_signal(struct wl_event_loop
--   *loop, int signal_number, wl_event_loop_signal_func_t func, void
--   *data);
eventLoopAddSignal :: (EventLoop) -> (Int) -> (EventLoopSignalFunc) -> IO ((EventSource))

-- | int wl_event_source_timer_update(struct wl_event_source *source, int
--   ms_delay);
eventSourceTimerUpdate :: (EventSource) -> (Int) -> IO ((Result))

-- | int wl_event_source_remove(struct wl_event_source *source);
eventSourceRemove :: (EventSource) -> IO ()

-- | void wl_event_source_check(struct wl_event_source *source);
eventSourceCheck :: (EventSource) -> IO ()

-- | int wl_event_loop_dispatch(struct wl_event_loop *loop, int timeout);
--   
--   SAFE!!
eventLoopDispatch :: (EventLoop) -> (Int) -> IO ((Result))

-- | void wl_event_loop_dispatch_idle(struct wl_event_loop *loop);
eventLoopDispatchIdle :: (EventLoop) -> IO ()

-- | struct wl_event_source *wl_event_loop_add_idle(struct wl_event_loop
--   *loop, wl_event_loop_idle_func_t func, void *data);
eventLoopAddIdle :: (EventLoop) -> (EventLoopIdleFunc) -> IO ((EventSource))

-- | int wl_event_loop_get_fd(struct wl_event_loop *loop);
eventLoopGetFd :: (EventLoop) -> IO ((Fd))

-- | struct wl_display;
--   
--   this is called a Compositor in e.g weston, QtWayland
--   
--   this is NOT an instance of a wl_resource or a wl_proxy! it is a global
--   server status singleton listing e.g. connected clients.
data DisplayServer

-- | struct wl_display *wl_display_create(void);
displayCreate :: IO ((DisplayServer))

-- | void wl_display_destroy(struct wl_display *display);
displayDestroy :: (DisplayServer) -> IO ()

-- | struct wl_event_loop *wl_display_get_event_loop(struct wl_display
--   *display);
displayGetEventLoop :: (DisplayServer) -> IO ((EventLoop))
displayAddSocket :: (DisplayServer) -> (Maybe String) -> IO ((Result))

-- | void wl_display_terminate(struct wl_display *display);
displayTerminate :: (DisplayServer) -> IO ()

-- | void wl_display_run(struct wl_display *display);
--   
--   STRICTLY SAFE!!!
displayRun :: (DisplayServer) -> IO ()

-- | void wl_display_flush_clients(struct wl_display *display);
displayFlushClients :: (DisplayServer) -> IO ()

-- | uint32_t wl_display_get_serial(struct wl_display *display);
displayGetSerial :: (DisplayServer) -> IO ((Word))

-- | uint32_t wl_display_next_serial(struct wl_display *display);
displayNextSerial :: (DisplayServer) -> IO ((Word))

-- | struct wl_client *wl_client_create(struct wl_display *display, int
--   fd);
clientCreate :: (DisplayServer) -> (Fd) -> IO ((Maybe Client))

-- | void wl_client_destroy(struct wl_client *client);
clientDestroy :: (Client) -> IO ()

-- | void wl_client_flush(struct wl_client *client);
clientFlush :: (Client) -> IO ()

-- | void wl_client_get_credentials(struct wl_client *client, pid_t *pid,
--   uid_t *uid, gid_t *gid);
clientGetCredentials :: (Client) -> IO (ProcessID, UserID, GroupID)

-- | wl_client_post_no_memory(struct wl_client *client);
clientPostNoMemory :: (Client) -> IO ()
data ShmBuffer

-- | void wl_shm_buffer_begin_access(struct wl_shm_buffer *buffer);
--   
--   Lock the memory for reading. Needed to protect the server against
--   SIGBUS signals caused by the client resizing the buffer.
shmBufferBeginAccess :: (ShmBuffer) -> IO ()

-- | void wl_shm_buffer_end_access(struct wl_shm_buffer *buffer);
--   
--   Unlock the memory.
shmBufferEndAccess :: (ShmBuffer) -> IO ()

-- | struct wl_shm_buffer * wl_shm_buffer_get(struct wl_resource
--   *resource);
shmBufferGet :: (Buffer) -> IO ((Maybe ShmBuffer))

-- | void * wl_shm_buffer_get_data(struct wl_shm_buffer *buffer);
shmBufferGetData :: (ShmBuffer) -> IO ((Ptr ()))

-- | int32_t wl_shm_buffer_get_stride(struct wl_shm_buffer *buffer);
shmBufferGetStride :: (ShmBuffer) -> IO ((Int))

-- | uint32_t wl_shm_buffer_get_format(struct wl_shm_buffer *buffer);
shmBufferGetFormat :: (ShmBuffer) -> IO ((Word))

-- | int32_t wl_shm_buffer_get_width(struct wl_shm_buffer *buffer);
shmBufferGetWidth :: (ShmBuffer) -> IO ((Int))

-- | int32_t wl_shm_buffer_get_height(struct wl_shm_buffer *buffer);
shmBufferGetHeight :: (ShmBuffer) -> IO ((Int))

-- | int wl_display_init_shm(struct wl_display *display);
displayInitShm :: (DisplayServer) -> IO ((Result))

-- | uint32_t * wl_display_add_shm_format(struct wl_display *display,
--   uint32_t format);
displayAddShmFormat :: (DisplayServer) -> (Word) -> IO ()

-- | struct wl_shm_buffer * wl_shm_buffer_create(struct wl_client *client,
--   uint32_t id, int32_t width, int32_t height, int32_t stride, uint32_t
--   format);
shmBufferCreate :: (Client) -> (Word) -> (Word) -> (Int) -> (Int) -> (Word) -> IO ((Maybe ShmBuffer))
outputScale :: Output -> Int -> IO ()
outputDone :: Output -> IO ()
outputMode :: Output -> Word -> Int -> Int -> Int -> IO ()
outputGeometry :: Output -> Int -> Int -> Int -> Int -> Int -> String -> String -> Int -> IO ()
touchCancel :: Touch -> IO ()
touchFrame :: Touch -> IO ()
touchMotion :: Touch -> Time -> Int -> Fixed256 -> Fixed256 -> IO ()
touchUp :: Touch -> Word -> Time -> Int -> IO ()
touchDown :: Touch -> Word -> Time -> Surface -> Int -> Fixed256 -> Fixed256 -> IO ()
keyboardModifiers :: Keyboard -> Word -> Word -> Word -> Word -> Word -> IO ()
keyboardKey :: Keyboard -> Word -> Time -> Word -> Word -> IO ()
keyboardLeave :: Keyboard -> Word -> Surface -> IO ()
keyboardKeymap :: Keyboard -> Word -> Fd -> Word -> IO ()
pointerAxis :: Pointer -> Time -> Word -> Fixed256 -> IO ()
pointerButton :: Pointer -> Word -> Time -> Word -> Word -> IO ()
pointerMotion :: Pointer -> Time -> Fixed256 -> Fixed256 -> IO ()
pointerLeave :: Pointer -> Word -> Surface -> IO ()
pointerEnter :: Pointer -> Word -> Surface -> Fixed256 -> Fixed256 -> IO ()
seatName :: Seat -> String -> IO ()
seatCapabilities :: Seat -> Word -> IO ()
surfaceLeave :: Surface -> Output -> IO ()
surfaceEnter :: Surface -> Output -> IO ()
shellSurfacePopupDone :: ShellSurface -> IO ()
shellSurfaceConfigure :: ShellSurface -> Word -> Int -> Int -> IO ()
shellSurfacePing :: ShellSurface -> Word -> IO ()
dataDeviceSelection :: DataDevice -> Maybe DataOffer -> IO ()
dataDeviceDrop :: DataDevice -> IO ()
dataDeviceMotion :: DataDevice -> Time -> Fixed256 -> Fixed256 -> IO ()
dataDeviceLeave :: DataDevice -> IO ()
dataDeviceEnter :: DataDevice -> Word -> Surface -> Fixed256 -> Fixed256 -> Maybe DataOffer -> IO ()
dataDeviceDataOffer :: DataDevice -> DataOffer -> IO ()
dataSourceCancelled :: DataSource -> IO ()
dataSourceSend :: DataSource -> String -> Fd -> IO ()
dataSourceTarget :: DataSource -> Maybe String -> IO ()
dataOfferOffer :: DataOffer -> String -> IO ()
bufferRelease :: Buffer -> IO ()
shmFormat :: Shm -> Word -> IO ()
callbackDone :: Callback -> Word -> IO ()
registryGlobalRemove :: Registry -> Word -> IO ()
registryGlobal :: Registry -> Word -> String -> Word -> IO ()
data DisplayImplementation
DisplayImplementation :: (Client -> Display -> Callback -> IO ()) -> (Client -> Display -> Registry -> IO ()) -> DisplayImplementation
displaySync :: DisplayImplementation -> Client -> Display -> Callback -> IO ()
displayGetRegistry :: DisplayImplementation -> Client -> Display -> Registry -> IO ()
data CompositorImplementation
CompositorImplementation :: (Client -> Compositor -> Surface -> IO ()) -> (Client -> Compositor -> Region -> IO ()) -> CompositorImplementation
compositorCreateSurface :: CompositorImplementation -> Client -> Compositor -> Surface -> IO ()
compositorCreateRegion :: CompositorImplementation -> Client -> Compositor -> Region -> IO ()
data ShmPoolImplementation
ShmPoolImplementation :: (Client -> ShmPool -> Buffer -> Int -> Int -> Int -> Int -> Word -> IO ()) -> (Client -> ShmPool -> IO ()) -> (Client -> ShmPool -> Int -> IO ()) -> ShmPoolImplementation
shmPoolCreateBuffer :: ShmPoolImplementation -> Client -> ShmPool -> Buffer -> Int -> Int -> Int -> Int -> Word -> IO ()
shmPoolDestroy :: ShmPoolImplementation -> Client -> ShmPool -> IO ()
shmPoolResize :: ShmPoolImplementation -> Client -> ShmPool -> Int -> IO ()
data ShmImplementation
ShmImplementation :: (Client -> Shm -> ShmPool -> Fd -> Int -> IO ()) -> ShmImplementation
shmCreatePool :: ShmImplementation -> Client -> Shm -> ShmPool -> Fd -> Int -> IO ()
data BufferImplementation
BufferImplementation :: (Client -> Buffer -> IO ()) -> BufferImplementation
bufferDestroy :: BufferImplementation -> Client -> Buffer -> IO ()
data DataOfferImplementation
DataOfferImplementation :: (Client -> DataOffer -> Word -> Maybe String -> IO ()) -> (Client -> DataOffer -> String -> Fd -> IO ()) -> (Client -> DataOffer -> IO ()) -> DataOfferImplementation
dataOfferAccept :: DataOfferImplementation -> Client -> DataOffer -> Word -> Maybe String -> IO ()
dataOfferReceive :: DataOfferImplementation -> Client -> DataOffer -> String -> Fd -> IO ()
dataOfferDestroy :: DataOfferImplementation -> Client -> DataOffer -> IO ()
data DataSourceImplementation
DataSourceImplementation :: (Client -> DataSource -> String -> IO ()) -> (Client -> DataSource -> IO ()) -> DataSourceImplementation
dataSourceOffer :: DataSourceImplementation -> Client -> DataSource -> String -> IO ()
dataSourceDestroy :: DataSourceImplementation -> Client -> DataSource -> IO ()
data DataDeviceImplementation
DataDeviceImplementation :: (Client -> DataDevice -> Maybe DataSource -> Surface -> Maybe Surface -> Word -> IO ()) -> (Client -> DataDevice -> Maybe DataSource -> Word -> IO ()) -> DataDeviceImplementation
dataDeviceStartDrag :: DataDeviceImplementation -> Client -> DataDevice -> Maybe DataSource -> Surface -> Maybe Surface -> Word -> IO ()
dataDeviceSetSelection :: DataDeviceImplementation -> Client -> DataDevice -> Maybe DataSource -> Word -> IO ()
data DataDeviceManagerImplementation
DataDeviceManagerImplementation :: (Client -> DataDeviceManager -> DataSource -> IO ()) -> (Client -> DataDeviceManager -> DataDevice -> Seat -> IO ()) -> DataDeviceManagerImplementation
dataDeviceManagerCreateDataSource :: DataDeviceManagerImplementation -> Client -> DataDeviceManager -> DataSource -> IO ()
dataDeviceManagerGetDataDevice :: DataDeviceManagerImplementation -> Client -> DataDeviceManager -> DataDevice -> Seat -> IO ()
data ShellImplementation
ShellImplementation :: (Client -> Shell -> ShellSurface -> Surface -> IO ()) -> ShellImplementation
shellGetShellSurface :: ShellImplementation -> Client -> Shell -> ShellSurface -> Surface -> IO ()
data ShellSurfaceImplementation
ShellSurfaceImplementation :: (Client -> ShellSurface -> Word -> IO ()) -> (Client -> ShellSurface -> Seat -> Word -> IO ()) -> (Client -> ShellSurface -> Seat -> Word -> Word -> IO ()) -> (Client -> ShellSurface -> IO ()) -> (Client -> ShellSurface -> Surface -> Int -> Int -> Word -> IO ()) -> (Client -> ShellSurface -> Word -> Word -> Maybe Output -> IO ()) -> (Client -> ShellSurface -> Seat -> Word -> Surface -> Int -> Int -> Word -> IO ()) -> (Client -> ShellSurface -> Maybe Output -> IO ()) -> (Client -> ShellSurface -> String -> IO ()) -> (Client -> ShellSurface -> String -> IO ()) -> ShellSurfaceImplementation
shellSurfacePong :: ShellSurfaceImplementation -> Client -> ShellSurface -> Word -> IO ()
shellSurfaceMove :: ShellSurfaceImplementation -> Client -> ShellSurface -> Seat -> Word -> IO ()
shellSurfaceResize :: ShellSurfaceImplementation -> Client -> ShellSurface -> Seat -> Word -> Word -> IO ()
shellSurfaceSetToplevel :: ShellSurfaceImplementation -> Client -> ShellSurface -> IO ()
shellSurfaceSetTransient :: ShellSurfaceImplementation -> Client -> ShellSurface -> Surface -> Int -> Int -> Word -> IO ()
shellSurfaceSetFullscreen :: ShellSurfaceImplementation -> Client -> ShellSurface -> Word -> Word -> Maybe Output -> IO ()
shellSurfaceSetPopup :: ShellSurfaceImplementation -> Client -> ShellSurface -> Seat -> Word -> Surface -> Int -> Int -> Word -> IO ()
shellSurfaceSetMaximized :: ShellSurfaceImplementation -> Client -> ShellSurface -> Maybe Output -> IO ()
shellSurfaceSetTitle :: ShellSurfaceImplementation -> Client -> ShellSurface -> String -> IO ()
shellSurfaceSetClass :: ShellSurfaceImplementation -> Client -> ShellSurface -> String -> IO ()
data SurfaceImplementation
SurfaceImplementation :: (Client -> Surface -> IO ()) -> (Client -> Surface -> Maybe Buffer -> Int -> Int -> IO ()) -> (Client -> Surface -> Int -> Int -> Int -> Int -> IO ()) -> (Client -> Surface -> Callback -> IO ()) -> (Client -> Surface -> Maybe Region -> IO ()) -> (Client -> Surface -> Maybe Region -> IO ()) -> (Client -> Surface -> IO ()) -> (Client -> Surface -> Int -> IO ()) -> (Client -> Surface -> Int -> IO ()) -> SurfaceImplementation
surfaceDestroy :: SurfaceImplementation -> Client -> Surface -> IO ()
surfaceAttach :: SurfaceImplementation -> Client -> Surface -> Maybe Buffer -> Int -> Int -> IO ()
surfaceDamage :: SurfaceImplementation -> Client -> Surface -> Int -> Int -> Int -> Int -> IO ()
surfaceFrame :: SurfaceImplementation -> Client -> Surface -> Callback -> IO ()
surfaceSetOpaqueRegion :: SurfaceImplementation -> Client -> Surface -> Maybe Region -> IO ()
surfaceSetInputRegion :: SurfaceImplementation -> Client -> Surface -> Maybe Region -> IO ()
surfaceCommit :: SurfaceImplementation -> Client -> Surface -> IO ()
surfaceSetBufferTransform :: SurfaceImplementation -> Client -> Surface -> Int -> IO ()
surfaceSetBufferScale :: SurfaceImplementation -> Client -> Surface -> Int -> IO ()
data SeatImplementation
SeatImplementation :: (Client -> Seat -> Pointer -> IO ()) -> (Client -> Seat -> Keyboard -> IO ()) -> (Client -> Seat -> Touch -> IO ()) -> SeatImplementation
seatGetPointer :: SeatImplementation -> Client -> Seat -> Pointer -> IO ()
seatGetKeyboard :: SeatImplementation -> Client -> Seat -> Keyboard -> IO ()
seatGetTouch :: SeatImplementation -> Client -> Seat -> Touch -> IO ()
data PointerImplementation
PointerImplementation :: (Client -> Pointer -> Word -> Maybe Surface -> Int -> Int -> IO ()) -> (Client -> Pointer -> IO ()) -> PointerImplementation
pointerSetCursor :: PointerImplementation -> Client -> Pointer -> Word -> Maybe Surface -> Int -> Int -> IO ()
pointerRelease :: PointerImplementation -> Client -> Pointer -> IO ()
data KeyboardImplementation
KeyboardImplementation :: (Client -> Keyboard -> IO ()) -> KeyboardImplementation
keyboardRelease :: KeyboardImplementation -> Client -> Keyboard -> IO ()
data TouchImplementation
TouchImplementation :: (Client -> Touch -> IO ()) -> TouchImplementation
touchRelease :: TouchImplementation -> Client -> Touch -> IO ()
data RegionImplementation
RegionImplementation :: (Client -> Region -> IO ()) -> (Client -> Region -> Int -> Int -> Int -> Int -> IO ()) -> (Client -> Region -> Int -> Int -> Int -> Int -> IO ()) -> RegionImplementation
regionDestroy :: RegionImplementation -> Client -> Region -> IO ()
regionAdd :: RegionImplementation -> Client -> Region -> Int -> Int -> Int -> Int -> IO ()
regionSubtract :: RegionImplementation -> Client -> Region -> Int -> Int -> Int -> Int -> IO ()
data SubcompositorImplementation
SubcompositorImplementation :: (Client -> Subcompositor -> IO ()) -> (Client -> Subcompositor -> Subsurface -> Surface -> Surface -> IO ()) -> SubcompositorImplementation
subcompositorDestroy :: SubcompositorImplementation -> Client -> Subcompositor -> IO ()
subcompositorGetSubsurface :: SubcompositorImplementation -> Client -> Subcompositor -> Subsurface -> Surface -> Surface -> IO ()
data SubsurfaceImplementation
SubsurfaceImplementation :: (Client -> Subsurface -> IO ()) -> (Client -> Subsurface -> Int -> Int -> IO ()) -> (Client -> Subsurface -> Surface -> IO ()) -> (Client -> Subsurface -> Surface -> IO ()) -> (Client -> Subsurface -> IO ()) -> (Client -> Subsurface -> IO ()) -> SubsurfaceImplementation
subsurfaceDestroy :: SubsurfaceImplementation -> Client -> Subsurface -> IO ()
subsurfaceSetPosition :: SubsurfaceImplementation -> Client -> Subsurface -> Int -> Int -> IO ()
subsurfacePlaceAbove :: SubsurfaceImplementation -> Client -> Subsurface -> Surface -> IO ()
subsurfacePlaceBelow :: SubsurfaceImplementation -> Client -> Subsurface -> Surface -> IO ()
subsurfaceSetSync :: SubsurfaceImplementation -> Client -> Subsurface -> IO ()
subsurfaceSetDesync :: SubsurfaceImplementation -> Client -> Subsurface -> IO ()
wl_subsurface_c_add_listener_request_binding :: Subsurface -> Ptr SubsurfaceImplementation -> Ptr () -> FunPtr (Subsurface -> IO ()) -> IO ()
wl_subcompositor_c_add_listener_request_binding :: Subcompositor -> Ptr SubcompositorImplementation -> Ptr () -> FunPtr (Subcompositor -> IO ()) -> IO ()
wl_region_c_add_listener_request_binding :: Region -> Ptr RegionImplementation -> Ptr () -> FunPtr (Region -> IO ()) -> IO ()
wl_touch_c_add_listener_request_binding :: Touch -> Ptr TouchImplementation -> Ptr () -> FunPtr (Touch -> IO ()) -> IO ()
wl_keyboard_c_add_listener_request_binding :: Keyboard -> Ptr KeyboardImplementation -> Ptr () -> FunPtr (Keyboard -> IO ()) -> IO ()
wl_pointer_c_add_listener_request_binding :: Pointer -> Ptr PointerImplementation -> Ptr () -> FunPtr (Pointer -> IO ()) -> IO ()
wl_seat_c_add_listener_request_binding :: Seat -> Ptr SeatImplementation -> Ptr () -> FunPtr (Seat -> IO ()) -> IO ()
wl_surface_c_add_listener_request_binding :: Surface -> Ptr SurfaceImplementation -> Ptr () -> FunPtr (Surface -> IO ()) -> IO ()
wl_shell_surface_c_add_listener_request_binding :: ShellSurface -> Ptr ShellSurfaceImplementation -> Ptr () -> FunPtr (ShellSurface -> IO ()) -> IO ()
wl_shell_c_add_listener_request_binding :: Shell -> Ptr ShellImplementation -> Ptr () -> FunPtr (Shell -> IO ()) -> IO ()
wl_data_device_manager_c_add_listener_request_binding :: DataDeviceManager -> Ptr DataDeviceManagerImplementation -> Ptr () -> FunPtr (DataDeviceManager -> IO ()) -> IO ()
wl_data_device_c_add_listener_request_binding :: DataDevice -> Ptr DataDeviceImplementation -> Ptr () -> FunPtr (DataDevice -> IO ()) -> IO ()
wl_data_source_c_add_listener_request_binding :: DataSource -> Ptr DataSourceImplementation -> Ptr () -> FunPtr (DataSource -> IO ()) -> IO ()
wl_data_offer_c_add_listener_request_binding :: DataOffer -> Ptr DataOfferImplementation -> Ptr () -> FunPtr (DataOffer -> IO ()) -> IO ()
wl_buffer_c_add_listener_request_binding :: Buffer -> Ptr BufferImplementation -> Ptr () -> FunPtr (Buffer -> IO ()) -> IO ()
wl_shm_c_add_listener_request_binding :: Shm -> Ptr ShmImplementation -> Ptr () -> FunPtr (Shm -> IO ()) -> IO ()
wl_shm_pool_c_add_listener_request_binding :: ShmPool -> Ptr ShmPoolImplementation -> Ptr () -> FunPtr (ShmPool -> IO ()) -> IO ()
wl_compositor_c_add_listener_request_binding :: Compositor -> Ptr CompositorImplementation -> Ptr () -> FunPtr (Compositor -> IO ()) -> IO ()
wl_display_c_add_listener_request_binding :: Display -> Ptr DisplayImplementation -> Ptr () -> FunPtr (Display -> IO ()) -> IO ()
subsurfaceSetListener :: Subsurface -> SubsurfaceImplementation -> IO ()
subcompositorSetListener :: Subcompositor -> SubcompositorImplementation -> IO ()
regionSetListener :: Region -> RegionImplementation -> IO ()
touchSetListener :: Touch -> TouchImplementation -> IO ()
keyboardSetListener :: Keyboard -> KeyboardImplementation -> IO ()
pointerSetListener :: Pointer -> PointerImplementation -> IO ()
seatSetListener :: Seat -> SeatImplementation -> IO ()
surfaceSetListener :: Surface -> SurfaceImplementation -> IO ()
shellSurfaceSetListener :: ShellSurface -> ShellSurfaceImplementation -> IO ()
shellSetListener :: Shell -> ShellImplementation -> IO ()
dataDeviceManagerSetListener :: DataDeviceManager -> DataDeviceManagerImplementation -> IO ()
dataDeviceSetListener :: DataDevice -> DataDeviceImplementation -> IO ()
dataSourceSetListener :: DataSource -> DataSourceImplementation -> IO ()
dataOfferSetListener :: DataOffer -> DataOfferImplementation -> IO ()
bufferSetListener :: Buffer -> BufferImplementation -> IO ()
shmSetListener :: Shm -> ShmImplementation -> IO ()
shmPoolSetListener :: ShmPool -> ShmPoolImplementation -> IO ()
compositorSetListener :: Compositor -> CompositorImplementation -> IO ()
displaySetListener :: Display -> DisplayImplementation -> IO ()
newtype Display
Display :: Ptr Display -> Display
newtype Registry
Registry :: Ptr Registry -> Registry
newtype Callback
Callback :: Ptr Callback -> Callback
newtype Compositor
Compositor :: Ptr Compositor -> Compositor
newtype ShmPool
ShmPool :: Ptr ShmPool -> ShmPool
newtype Shm
Shm :: Ptr Shm -> Shm
newtype Buffer
Buffer :: Ptr Buffer -> Buffer
newtype DataOffer
DataOffer :: Ptr DataOffer -> DataOffer
newtype DataSource
DataSource :: Ptr DataSource -> DataSource
newtype DataDevice
DataDevice :: Ptr DataDevice -> DataDevice
newtype DataDeviceManager
DataDeviceManager :: Ptr DataDeviceManager -> DataDeviceManager
newtype Shell
Shell :: Ptr Shell -> Shell
newtype ShellSurface
ShellSurface :: Ptr ShellSurface -> ShellSurface
newtype Surface
Surface :: Ptr Surface -> Surface
newtype Seat
Seat :: Ptr Seat -> Seat
newtype Pointer
Pointer :: Ptr Pointer -> Pointer
newtype Keyboard
Keyboard :: Ptr Keyboard -> Keyboard
newtype Touch
Touch :: Ptr Touch -> Touch
newtype Output
Output :: Ptr Output -> Output
newtype Region
Region :: Ptr Region -> Region
newtype Subcompositor
Subcompositor :: Ptr Subcompositor -> Subcompositor
newtype Subsurface
Subsurface :: Ptr Subsurface -> Subsurface
wl_subsurface_c_interface :: CInterface
wl_subcompositor_c_interface :: CInterface
wl_region_c_interface :: CInterface
wl_output_c_interface :: CInterface
wl_touch_c_interface :: CInterface
wl_keyboard_c_interface :: CInterface
wl_pointer_c_interface :: CInterface
wl_seat_c_interface :: CInterface
wl_surface_c_interface :: CInterface
wl_shell_surface_c_interface :: CInterface
wl_shell_c_interface :: CInterface
wl_data_device_manager_c_interface :: CInterface
wl_data_device_c_interface :: CInterface
wl_data_source_c_interface :: CInterface
wl_data_offer_c_interface :: CInterface
wl_buffer_c_interface :: CInterface
wl_shm_c_interface :: CInterface
wl_shm_pool_c_interface :: CInterface
wl_compositor_c_interface :: CInterface
wl_callback_c_interface :: CInterface
wl_registry_c_interface :: CInterface
wl_display_c_interface :: CInterface
newtype DisplayError
DisplayError :: Int -> DisplayError
newtype ShmError
ShmError :: Int -> ShmError
newtype ShmFormat
ShmFormat :: Int -> ShmFormat
newtype ShellSurfaceResize
ShellSurfaceResize :: Int -> ShellSurfaceResize
newtype ShellSurfaceTransient
ShellSurfaceTransient :: Int -> ShellSurfaceTransient
newtype ShellSurfaceFullscreenMethod
ShellSurfaceFullscreenMethod :: Int -> ShellSurfaceFullscreenMethod
newtype SeatCapability
SeatCapability :: Int -> SeatCapability
newtype PointerButtonState
PointerButtonState :: Int -> PointerButtonState
newtype PointerAxis
PointerAxis :: Int -> PointerAxis
newtype KeyboardKeymapFormat
KeyboardKeymapFormat :: Int -> KeyboardKeymapFormat
newtype KeyboardKeyState
KeyboardKeyState :: Int -> KeyboardKeyState
newtype OutputSubpixel
OutputSubpixel :: Int -> OutputSubpixel
newtype OutputTransform
OutputTransform :: Int -> OutputTransform
newtype OutputMode
OutputMode :: Int -> OutputMode
newtype SubcompositorError
SubcompositorError :: Int -> SubcompositorError
newtype SubsurfaceError
SubsurfaceError :: Int -> SubsurfaceError
subsurfaceErrorBadSurface :: SubsurfaceError
subcompositorErrorBadSurface :: SubcompositorError
outputModePreferred :: OutputMode
outputModeCurrent :: OutputMode
outputTransformFlipped_270 :: OutputTransform
outputTransformFlipped_180 :: OutputTransform
outputTransformFlipped_90 :: OutputTransform
outputTransformFlipped :: OutputTransform
outputTransform270 :: OutputTransform
outputTransform180 :: OutputTransform
outputTransform90 :: OutputTransform
outputTransformNormal :: OutputTransform
outputSubpixelVerticalBgr :: OutputSubpixel
outputSubpixelVerticalRgb :: OutputSubpixel
outputSubpixelHorizontalBgr :: OutputSubpixel
outputSubpixelHorizontalRgb :: OutputSubpixel
outputSubpixelNone :: OutputSubpixel
outputSubpixelUnknown :: OutputSubpixel
keyboardKeyStatePressed :: KeyboardKeyState
keyboardKeyStateReleased :: KeyboardKeyState
keyboardKeymapFormatXkbV1 :: KeyboardKeymapFormat
keyboardKeymapFormatNoKeymap :: KeyboardKeymapFormat
pointerAxisHorizontalScroll :: PointerAxis
pointerAxisVerticalScroll :: PointerAxis
pointerButtonStatePressed :: PointerButtonState
pointerButtonStateReleased :: PointerButtonState
seatCapabilityTouch :: SeatCapability
seatCapabilityKeyboard :: SeatCapability
seatCapabilityPointer :: SeatCapability
shellSurfaceFullscreenMethodFill :: ShellSurfaceFullscreenMethod
shellSurfaceFullscreenMethodDriver :: ShellSurfaceFullscreenMethod
shellSurfaceFullscreenMethodScale :: ShellSurfaceFullscreenMethod
shellSurfaceFullscreenMethodDefault :: ShellSurfaceFullscreenMethod
shellSurfaceTransientInactive :: ShellSurfaceTransient
shellSurfaceResizeBottomRight :: ShellSurfaceResize
shellSurfaceResizeTopRight :: ShellSurfaceResize
shellSurfaceResizeRight :: ShellSurfaceResize
shellSurfaceResizeBottomLeft :: ShellSurfaceResize
shellSurfaceResizeTopLeft :: ShellSurfaceResize
shellSurfaceResizeLeft :: ShellSurfaceResize
shellSurfaceResizeBottom :: ShellSurfaceResize
shellSurfaceResizeTop :: ShellSurfaceResize
shellSurfaceResizeNone :: ShellSurfaceResize
shmFormatYvu444 :: ShmFormat
shmFormatYuv444 :: ShmFormat
shmFormatYvu422 :: ShmFormat
shmFormatYuv422 :: ShmFormat
shmFormatYvu420 :: ShmFormat
shmFormatYuv420 :: ShmFormat
shmFormatYvu411 :: ShmFormat
shmFormatYuv411 :: ShmFormat
shmFormatYvu410 :: ShmFormat
shmFormatYuv410 :: ShmFormat
shmFormatNv61 :: ShmFormat
shmFormatNv16 :: ShmFormat
shmFormatNv21 :: ShmFormat
shmFormatNv12 :: ShmFormat
shmFormatAyuv :: ShmFormat
shmFormatVyuy :: ShmFormat
shmFormatUyvy :: ShmFormat
shmFormatYvyu :: ShmFormat
shmFormatYuyv :: ShmFormat
shmFormatBgra1010102 :: ShmFormat
shmFormatRgba1010102 :: ShmFormat
shmFormatAbgr2101010 :: ShmFormat
shmFormatArgb2101010 :: ShmFormat
shmFormatBgrx1010102 :: ShmFormat
shmFormatRgbx1010102 :: ShmFormat
shmFormatXbgr2101010 :: ShmFormat
shmFormatXrgb2101010 :: ShmFormat
shmFormatBgra8888 :: ShmFormat
shmFormatRgba8888 :: ShmFormat
shmFormatAbgr8888 :: ShmFormat
shmFormatBgrx8888 :: ShmFormat
shmFormatRgbx8888 :: ShmFormat
shmFormatXbgr8888 :: ShmFormat
shmFormatBgr888 :: ShmFormat
shmFormatRgb888 :: ShmFormat
shmFormatBgr565 :: ShmFormat
shmFormatRgb565 :: ShmFormat
shmFormatBgra5551 :: ShmFormat
shmFormatRgba5551 :: ShmFormat
shmFormatAbgr1555 :: ShmFormat
shmFormatArgb1555 :: ShmFormat
shmFormatBgrx5551 :: ShmFormat
shmFormatRgbx5551 :: ShmFormat
shmFormatXbgr1555 :: ShmFormat
shmFormatXrgb1555 :: ShmFormat
shmFormatBgra4444 :: ShmFormat
shmFormatRgba4444 :: ShmFormat
shmFormatAbgr4444 :: ShmFormat
shmFormatArgb4444 :: ShmFormat
shmFormatBgrx4444 :: ShmFormat
shmFormatRgbx4444 :: ShmFormat
shmFormatXbgr4444 :: ShmFormat
shmFormatXrgb4444 :: ShmFormat
shmFormatBgr233 :: ShmFormat
shmFormatRgb332 :: ShmFormat
shmFormatC8 :: ShmFormat
shmFormatXrgb8888 :: ShmFormat
shmFormatArgb8888 :: ShmFormat
shmErrorInvalidFd :: ShmError
shmErrorInvalidStride :: ShmError
shmErrorInvalidFormat :: ShmError
displayErrorNoMemory :: DisplayError
displayErrorInvalidMethod :: DisplayError
displayErrorInvalidObject :: DisplayError

-- | opaque server-side wl_client struct
newtype Client
Client :: (Ptr Client) -> Client
