-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Serialize instance for Message Pack Object
--   
@package messagepack
@version 0.4.0


-- | Define, in a single place, all the message-pack specification binary
--   type markers.
module Data.MessagePack.Spec
posFixintMask :: Word8
negFixintMask :: Word8
fixmapMask :: Word8
fixarrayMask :: Word8
fixstrMask :: Word8
posFixint :: Word8
negFixint :: Word8
fixmap :: Word8
fixarray :: Word8
fixstr :: Word8
nil :: Word8
false :: Word8
true :: Word8
bin8 :: Word8
bin16 :: Word8
bin32 :: Word8
ext8 :: Word8
ext16 :: Word8
ext32 :: Word8
float32 :: Word8
float64 :: Word8
uint8 :: Word8
uint16 :: Word8
uint32 :: Word8
uint64 :: Word8
int8 :: Word8
int16 :: Word8
int32 :: Word8
int64 :: Word8
fixext1 :: Word8
fixext2 :: Word8
fixext4 :: Word8
fixext8 :: Word8
fixext16 :: Word8
str8 :: Word8
str16 :: Word8
str32 :: Word8
array16 :: Word8
array32 :: Word8
map16 :: Word8
map32 :: Word8


-- | <tt>Object</tt> is a message pack object, and it have constructors for
--   all message pack types.
--   
--   The <tt>Serialize</tt> instances define how Object values may be
--   serialized and deserialized to message pack binary format, following
--   the specification.
module Data.MessagePack
data Object
ObjectNil :: Object
ObjectInt :: Int64 -> Object
ObjectBool :: Bool -> Object
ObjectFloat :: Float -> Object
ObjectDouble :: Double -> Object
ObjectString :: ByteString -> Object
ObjectBinary :: ByteString -> Object
ObjectArray :: [Object] -> Object
ObjectMap :: (Map Object Object) -> Object
ObjectExt :: !Int8 -> ByteString -> Object
instance Eq Object
instance Ord Object
instance Show Object
instance Serialize Object
