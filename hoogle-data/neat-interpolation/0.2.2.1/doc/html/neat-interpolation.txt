-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A quasiquoter for neat and simple multiline text interpolation
--   
@package neat-interpolation
@version 0.2.2.1


-- | NeatInterpolation provides a quasiquoter for producing strings with a
--   simple interpolation of input values. It removes the excessive
--   indentation from the input and accurately manages the indentation of
--   all lines of interpolated variables. But enough words, the code shows
--   it better.
--   
--   Consider the following declaration:
--   
--   <pre>
--   {-# LANGUAGE QuasiQuotes, OverloadedStrings #-}
--   
--   import NeatInterpolation
--   
--   f :: String -&gt; String -&gt; String
--   f a b = 
--     [string|
--       function(){
--         function(){
--           $a
--         }
--         return $b
--       }
--     |]
--   </pre>
--   
--   Executing the following:
--   
--   <pre>
--   main = putStrLn $ f "1" "2"
--   </pre>
--   
--   will produce this (notice the reduced indentation compared to how it
--   was declared):
--   
--   <pre>
--   function(){
--     function(){
--       1
--     }
--     return 2
--   }
--   </pre>
--   
--   Now let's test it with multiline string parameters:
--   
--   <pre>
--   main = putStrLn $ f 
--     "{\n  indented line\n  indented line\n}" 
--     "{\n  indented line\n  indented line\n}" 
--   </pre>
--   
--   We get
--   
--   <pre>
--   function(){
--     function(){
--       {
--         indented line
--         indented line
--       }
--     }
--     return {
--       indented line
--       indented line
--     }
--   }
--   </pre>
--   
--   See how it neatly preserved the indentation levels of lines the
--   variable placeholders were at?
module NeatInterpolation

-- | The quasiquoter.
string :: QuasiQuoter

-- | A function used internally by quasiquoter. Just ignore it.
indentQQPlaceholder :: Int -> String -> String
