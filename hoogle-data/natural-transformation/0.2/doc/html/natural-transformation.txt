-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A natural transformation package.
--   
@package natural-transformation
@version 0.2


-- | A data type for natural transformations.
module Control.Natural

-- | A natural transformation from <tt>f</tt> to <tt>g</tt>.
type (~>) f g = forall x. f x -> g x

-- | A natural transformation suitable for storing in a container.
newtype (:~>) f g
Nat :: f ~> g -> (:~>) f g
($$) :: (:~>) f g -> f ~> g
instance [safe] Typeable (:~>)
instance [safe] f ~ g => Monoid (f :~> g)
instance [safe] Category (:~>)


-- | A type class for transformations.
module Control.Transformation

-- | A (natural) transformation is inside <tt>t</tt>, and contains
--   <tt>f</tt> and <tt>g</tt> (typically <a>Functor</a>s).
--   
--   The order of arguments allows the use of
--   <tt>GeneralizedNewtypeDeriving</tt> to wrap a <a>:~&gt;</a>, but
--   maintain the <a>Transformation</a> constraint. Thus, <tt>#</tt> can be
--   used on abstract data types.
class Transformation f g t | t -> f g
(#) :: Transformation f g t => t -> f a -> g a
instance [safe] Transformation f g (f :~> g)
