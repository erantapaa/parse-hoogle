-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Some add-on instances for the Alloy library
--   
--   Two modules supplying proxy instances that allow you to define pure
--   and/or effectful instances in terms of their more general
--   effectful/route-including equivalents in Alloy.
@package alloy-proxy-fd
@version 1.0.0


-- | A module providing an <a>Alloy</a> instance in terms of <a>AlloyA</a>.
--   
--   The contents of this module appear blank because it contains only
--   class instances. The <a>Alloy</a> and <a>AlloyA</a> class instances
--   have nearly identical definitions for any given type, and running
--   <a>AlloyA</a> with an identity functor/monad has the same behaviour as
--   the pure class. Therefore, it is possible to define a single
--   <a>Alloy</a> instance in terms of <a>AlloyA</a>. That is what this
--   module does.
--   
--   To use this module, you should generate only <a>AlloyA</a> instances
--   with the <a>Data.Generics.Alloy.GenInstances</a> module, and import
--   this module. If you import this alongside any other <a>Alloy</a>
--   instances you'll have incoherent instances. Alternatively, you can
--   generate only <a>AlloyARoute</a> instances and use this module along
--   with <a>Data.Generics.Alloy.EffectProxy</a>.
module Data.Generics.Alloy.PureProxy
instance ConvertOpsToIdentity r r' => ConvertOpsToIdentity (a :- r) (a :-* r')
instance ConvertOpsToIdentity BaseOp BaseOpA
instance (AlloyA t mo mo', ConvertOpsToIdentity o mo, ConvertOpsToIdentity o' mo') => Alloy t o o'


-- | A module providing an <a>AlloyA</a> instance in terms of
--   <a>AlloyARoute</a>.
--   
--   The contents of this module appear blank because it contains only
--   class instances. The <a>AlloyA</a> and <a>AlloyARoute</a> class
--   instances have nearly identical definitions for any given type, and
--   running <a>AlloyARoute</a> and ignoring the route has the same
--   behaviour as the <a>AlloyA</a> class. Therefore, it is possible to
--   define a single <a>AlloyA</a> instance in terms of <a>AlloyARoute</a>.
--   That is what this module does.
--   
--   To use this module, you should generate only <a>AlloyARoute</a>
--   instances with the <a>Data.Generics.Alloy.GenInstances</a> module, and
--   import this module. If you import this alongside any other
--   <a>AlloyA</a> instances you'll have incoherent instances.
module Data.Generics.Alloy.EffectProxy
instance (AlloyARoute t o o', ConvertOpsToIgnoreRoute ro o, ConvertOpsToIgnoreRoute ro' o') => AlloyA t ro ro'
instance ConvertOpsToIgnoreRoute r r' => ConvertOpsToIgnoreRoute (t :-* r) (t :-@ r')
instance ConvertOpsToIgnoreRoute BaseOpA BaseOpARoute
