-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Discussion support system
--   
--   Discussion support system
@package DiscussionSupportSystem
@version 0.11.0.2

module DSS.Parser
data Discussion
Discussion :: (Maybe Expression) -> Basiss -> Claim -> Discussion
data Basiss
Basiss :: [(Maybe Label, Basis)] -> Basiss
data Label
Label :: String -> Label
data Basis
UrlBasis :: Url -> Basis
BookBasis :: Book -> Basis
QuoteBasis :: Quote -> Basis
data Url
Url :: String -> Url
data Book
Book :: Isbn -> (Maybe Pages) -> Book
data Quote
Quote :: [ExpressionString] -> Quote
data Isbn
Isbn :: String -> Isbn
data Pages
Pages :: [Int] -> Pages
data Claim
Claim :: [ExpressionString] -> Claim
data ExpressionString
StringExpression :: String -> ExpressionString
QuoteExpression :: Expression -> ExpressionString
data Expression
Expression :: [String] -> Expression

-- | parse discussion
--   
--   <pre>
--   &gt;&gt;&gt; parse "opinion to {hoge.piyo}\ntext\"\"\nclaim \"123{hoge.piyo}\""
--   [Discussion (Just (Expression ["hoge","piyo"])) (Basiss [(Nothing,QuoteBasis (Quote []))]) (Claim [StringExpression "123",QuoteExpression (Expression ["hoge","piyo"])])]
--   
--   &gt;&gt;&gt; parse "opinion to {hoge.piyo}\n1:text \"hoge{piyo.foo}bar\"\nurl https://github.com/minamiyama1994\n2 : ISBN 9784798120393 pages ( 1024 , 2048 )\nclaim \"123{hoge.piyo}\""
--   [Discussion (Just (Expression ["hoge","piyo"])) (Basiss [(Just (Label "1"),QuoteBasis (Quote [StringExpression "hoge",QuoteExpression (Expression ["piyo","foo"]),StringExpression "bar"])),(Nothing,UrlBasis (Url "https://github.com/minamiyama1994")),(Just (Label "2"),BookBasis (Book (Isbn "9784798120393") (Just (Pages [1024,2048]))))]) (Claim [StringExpression "123",QuoteExpression (Expression ["hoge","piyo"])])]
--   
--   &gt;&gt;&gt; parse "opinion to {hoge.piyo}\n1:text \"hoge{piyo.foo}bar\"\nurl https://github.com/minamiyama1994\n2 : ISBN 9784798120393 pages ( 1024 , 2048 )\n3 : ISBN 9784798120393\nclaim \"123{hoge.piyo}\""
--   [Discussion (Just (Expression ["hoge","piyo"])) (Basiss [(Just (Label "1"),QuoteBasis (Quote [StringExpression "hoge",QuoteExpression (Expression ["piyo","foo"]),StringExpression "bar"])),(Nothing,UrlBasis (Url "https://github.com/minamiyama1994")),(Just (Label "2"),BookBasis (Book (Isbn "9784798120393") (Just (Pages [1024,2048])))),(Just (Label "3"),BookBasis (Book (Isbn "9784798120393") Nothing))]) (Claim [StringExpression "123",QuoteExpression (Expression ["hoge","piyo"])])]
--   </pre>
parse :: String -> [Discussion]
instance Show Label
instance Read Label
instance Eq Label
instance Show Url
instance Read Url
instance Eq Url
instance Show Isbn
instance Read Isbn
instance Eq Isbn
instance Show Pages
instance Read Pages
instance Eq Pages
instance Show Book
instance Read Book
instance Eq Book
instance Show Expression
instance Read Expression
instance Eq Expression
instance Show ExpressionString
instance Read ExpressionString
instance Eq ExpressionString
instance Show Claim
instance Read Claim
instance Eq Claim
instance Show Quote
instance Read Quote
instance Eq Quote
instance Show Basis
instance Read Basis
instance Eq Basis
instance Show Basiss
instance Read Basiss
instance Eq Basiss
instance Show Discussion
instance Read Discussion
instance Eq Discussion

module DSS.Html
instance ToMarkup (String, Claim)
instance ToMarkup (String, Expression)
instance ToMarkup (String, ExpressionString)
instance ToMarkup (String, Basis)
instance ToMarkup (String, (Maybe Label, Basis))
instance ToMarkup (String, Basiss)
instance ToMarkup (String, Maybe Expression)
instance ToMarkup (String, Discussion)
