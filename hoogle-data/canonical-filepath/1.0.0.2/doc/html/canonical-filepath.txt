-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Abstract data type for canonical file paths.
--   
--   Abstract data type for canonical file paths.
@package canonical-filepath
@version 1.0.0.2


-- | Abstract data type for canonical file paths.
--   
--   Due to the context sensitive way in which file paths are specified on
--   today's computer systems it is useful to have the notion of a
--   <i>canonical</i> <a>FilePath</a>.
--   
--   The basic feature is that two canonical file paths <tt>cfp1</tt> and
--   <tt>cfp2</tt> refer to the same file if and only if <tt>cfp1 ==
--   cfp2</tt>. This property can be achieved using
--   <a>canonicalizePath</a>. However, if given an arbitrary
--   <tt>FilePath</tt> we don't know whether it is canonical so having a
--   separate type is useful. Secondly, <tt>canonicalizePath</tt> might
--   fail if the target path does not exist on the system.
--   
--   This module therefore provides an abstract type that represents paths
--   that have been canonicalised. The intended use straightforward, just
--   use <a>canonical</a> to create a <a>CanonicalFilePath</a>.
--   
--   <pre>
--   example = do 
--     cfp1 &lt;- <a>canonical</a> "./foo"
--     curr &lt;- getCurrentDirectory
--     cfp2 &lt;- canonical (curr &lt;/&gt; "foo")
--     print (cfp1 == cfp2)  -- should print "True"
--   </pre>
--   
--   To extract a canonical <tt>FilePath</tt> use <a>canonicalFilePath</a>
--   (don't use <a>show</a>).
module System.FilePath.Canonical

-- | A canonical <a>FilePath</a>.
--   
--   Construct values of this type using the <a>canonical</a> function.
--   
--   Note that it is not always possible to guarantee a truly canonical
--   path due to various file system features. For more information see the
--   documentation of <tt>realpath</tt> in your favourite man page.
data CanonicalFilePath

-- | Construct a canonical file path from the given path.
--   
--   Unlike <a>canonicalizePath</a> this operation works even if the file
--   or its containing directory does not exist, but it may fail due to
--   other reasons (e.g., permission errors).
canonical :: FilePath -> IO CanonicalFilePath

-- | The original input to <a>canonical</a>.
originalFilePath :: CanonicalFilePath -> FilePath

-- | The canonical path.
canonicalFilePath :: CanonicalFilePath -> FilePath

-- | Unsafely constructs a <a>CanonicalFilePath</a>.
--   
--   It is unsafe in the sense that it is up to the caller to guarantee
--   that the second argument is indeed a canonical file path.
--   
--   This function is intended mainly to aid in writing custom
--   serialisation instances.
unsafeCanonicalise :: FilePath -> FilePath -> CanonicalFilePath
instance NFData CanonicalFilePath
instance Ord CanonicalFilePath
instance Eq CanonicalFilePath
instance Show CanonicalFilePath
