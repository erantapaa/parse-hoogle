-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Representing and handling OPML subscription information.
--   
--   Representing and handling OPML subscription information. OPML (Outline
--   Processor Markup Language) is an XML format for outlines, most
--   commonly used to exchange lists of web feeds between web feed
--   aggregators. <a>http://www.opml.org/</a>
@package opml
@version 0.4


module Text.OPML.Syntax
type DateString = String
type URIString = String

-- | An OPML structure
data OPML
OPML :: String -> [Attr] -> OPMLHead -> [Outline] -> [Element] -> OPML
opmlVersion :: OPML -> String
opmlAttrs :: OPML -> [Attr]
opmlHead :: OPML -> OPMLHead
opmlBody :: OPML -> [Outline]
opmlOther :: OPML -> [Element]
data Outline
Outline :: String -> Maybe String -> Maybe [String] -> Maybe Bool -> Maybe Bool -> [Attr] -> [Outline] -> [Element] -> Outline
opmlText :: Outline -> String
opmlType :: Outline -> Maybe String
opmlCategories :: Outline -> Maybe [String]
opmlIsComment :: Outline -> Maybe Bool
opmlIsBreakpoint :: Outline -> Maybe Bool
opmlOutlineAttrs :: Outline -> [Attr]
opmlOutlineChildren :: Outline -> [Outline]
opmlOutlineOther :: Outline -> [Element]
data OPMLHead
OPMLHead :: String -> [Attr] -> Maybe DateString -> Maybe DateString -> Maybe OPMLOwner -> Maybe URIString -> Maybe [Int] -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> [Element] -> OPMLHead
opmlTitle :: OPMLHead -> String
opmlHeadAttrs :: OPMLHead -> [Attr]
opmlCreated :: OPMLHead -> Maybe DateString
opmlModified :: OPMLHead -> Maybe DateString
opmlOwner :: OPMLHead -> Maybe OPMLOwner
opmlDocs :: OPMLHead -> Maybe URIString
opmlExpansionState :: OPMLHead -> Maybe [Int]
opmlVertScrollState :: OPMLHead -> Maybe Int
opmlWindowTop :: OPMLHead -> Maybe Int
opmlWindowLeft :: OPMLHead -> Maybe Int
opmlWindowBottom :: OPMLHead -> Maybe Int
opmlWindowRight :: OPMLHead -> Maybe Int
opmlHeadOther :: OPMLHead -> [Element]
data OPMLOwner
OPMLOwner :: Maybe String -> Maybe String -> Maybe String -> OPMLOwner
opmlOwnerId :: OPMLOwner -> Maybe String
opmlOwnerEmail :: OPMLOwner -> Maybe String
opmlOwnerName :: OPMLOwner -> Maybe String
nullOPML :: OPML
nullOutline :: String -> Outline
nullHead :: OPMLHead
nullOwner :: OPMLOwner


module Text.OPML.Export
opmlNode :: String -> [Content] -> Element
opmlName :: String -> QName
xmlOPML :: OPML -> Element
xmlHead :: OPMLHead -> Element
xmlBody :: [Outline] -> Element
xmlOutline :: Outline -> Element
showCats :: [String] -> String
showBool :: Bool -> String
showInts :: [Int] -> String
xmlAttr :: String -> String -> Attr
xmlLeaf :: String -> String -> Element
mb :: (a -> b) -> Maybe a -> [b]


module Text.OPML.Writer

-- | Serialise OPML data back to Strings.
serializeOPML :: OPML -> String


module Text.OPML.Import
pNodes :: String -> [Element] -> [Element]
pNode :: String -> [Element] -> Maybe Element
pLeaf :: String -> [Element] -> Maybe String
pAttr :: String -> Element -> Maybe String
pMany :: String -> (Element -> Maybe a) -> [Element] -> [a]
children :: Element -> [Element]
opmlName :: String -> QName

-- | Parse XML elements into OPML.
elementToOPML :: Element -> Maybe OPML
elementToHead :: Element -> Maybe OPMLHead
elementToBody :: Element -> Maybe [Outline]
elementToOutline :: Element -> Maybe Outline


module Text.OPML.Reader

-- | Parse a string into OPML.
parseOPMLString :: String -> Maybe OPML
