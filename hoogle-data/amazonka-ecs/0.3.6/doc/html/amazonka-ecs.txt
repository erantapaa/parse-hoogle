-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Amazon EC2 Container Service SDK.
--   
@package amazonka-ecs
@version 0.3.6

module Network.AWS.ECS.Types

-- | Version <tt>2014-11-13</tt> of the Amazon EC2 Container Service
--   service.
data ECS
data JSONError :: *
data NetworkBinding

-- | <a>NetworkBinding</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>nbBindIP</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>nbContainerPort</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>nbHostPort</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   </ul>
networkBinding :: NetworkBinding

-- | The IP address that the container is bound to on the container
--   instance.
nbBindIP :: Lens' NetworkBinding (Maybe Text)

-- | The port number on the container that is be used with the network
--   binding.
nbContainerPort :: Lens' NetworkBinding (Maybe Int)

-- | The port number on the host that is used with the network binding.
nbHostPort :: Lens' NetworkBinding (Maybe Int)
data ContainerService

-- | <a>ContainerService</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>csClusterArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>csDeployments</a> <tt>::</tt> [<a>Deployment</a>]</li>
--   <li><a>csDesiredCount</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>csEvents</a> <tt>::</tt> [<a>ServiceEvent</a>]</li>
--   <li><a>csLoadBalancers</a> <tt>::</tt> [<a>LoadBalancer</a>]</li>
--   <li><a>csPendingCount</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>csRoleArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>csRunningCount</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>csServiceArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>csServiceName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>csStatus</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>csTaskDefinition</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
containerService :: ContainerService

-- | The Amazon Resource Name (ARN) of the of the cluster that hosts the
--   service.
csClusterArn :: Lens' ContainerService (Maybe Text)

-- | The current state of deployments for the service.
csDeployments :: Lens' ContainerService [Deployment]

-- | The desired number of instantiations of the task definition to keep
--   running on the service. This value is specified when the service is
--   created with <tt>CreateService</tt>, and it can be modified with
--   <tt>UpdateService</tt>.
csDesiredCount :: Lens' ContainerService (Maybe Int)

-- | The event stream for your service. A maximum of 100 of the latest
--   events are displayed.
csEvents :: Lens' ContainerService [ServiceEvent]

-- | A list of load balancer objects, containing the load balancer name,
--   the container name (as it appears in a container definition), and the
--   container port to access from the load balancer.
csLoadBalancers :: Lens' ContainerService [LoadBalancer]

-- | The number of tasks in the cluster that are in the <tt>PENDING</tt>
--   state.
csPendingCount :: Lens' ContainerService (Maybe Int)

-- | The Amazon Resource Name (ARN) of the IAM role associated with the
--   service that allows the Amazon ECS container agent to register
--   container instances with a load balancer.
csRoleArn :: Lens' ContainerService (Maybe Text)

-- | The number of tasks in the cluster that are in the <tt>RUNNING</tt>
--   state.
csRunningCount :: Lens' ContainerService (Maybe Int)

-- | The Amazon Resource Name (ARN) that identifies the service. The ARN
--   contains the 'arn:aws:ecs' namespace, followed by the region of the
--   service, the AWS account ID of the service owner, the <a>service</a>
--   namespace, and then the service name. For example,
--   arn:aws:ecs:<i>region</i>:<i>012345678910</i>:service/<i>my-service</i>.
csServiceArn :: Lens' ContainerService (Maybe Text)

-- | A user-generated string that you can use to identify your service.
csServiceName :: Lens' ContainerService (Maybe Text)

-- | The status of the service. The valid values are <tt>ACTIVE</tt>,
--   <tt>DRAINING</tt>, or <tt>INACTIVE</tt>.
csStatus :: Lens' ContainerService (Maybe Text)

-- | The task definition to use for tasks in the service. This value is
--   specified when the service is created with <tt>CreateService</tt>, and
--   it can be modified with <tt>UpdateService</tt>.
csTaskDefinition :: Lens' ContainerService (Maybe Text)
data Cluster

-- | <a>Cluster</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cClusterArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cClusterName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cPendingTasksCount</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>cRegisteredContainerInstancesCount</a> <tt>::</tt> <a>Maybe</a>
--   <a>Int</a></li>
--   <li><a>cRunningTasksCount</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>cStatus</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
cluster :: Cluster

-- | The Amazon Resource Name (ARN) that identifies the cluster. The ARN
--   contains the 'arn:aws:ecs' namespace, followed by the region of the
--   cluster, the AWS account ID of the cluster owner, the <a>cluster</a>
--   namespace, and then the cluster name. For example,
--   arn:aws:ecs:<i>region</i>:<i>012345678910</i>:cluster/<i>test</i>.
cClusterArn :: Lens' Cluster (Maybe Text)

-- | A user-generated string that you can use to identify your cluster.
cClusterName :: Lens' Cluster (Maybe Text)

-- | The number of tasks in the cluster that are in the <tt>PENDING</tt>
--   state.
cPendingTasksCount :: Lens' Cluster (Maybe Int)

-- | The number of container instances registered into the cluster.
cRegisteredContainerInstancesCount :: Lens' Cluster (Maybe Int)

-- | The number of tasks in the cluster that are in the <tt>RUNNING</tt>
--   state.
cRunningTasksCount :: Lens' Cluster (Maybe Int)

-- | The status of the cluster. The valid values are <tt>ACTIVE</tt> or
--   <tt>INACTIVE</tt>. <tt>ACTIVE</tt> indicates that you can register
--   container instances with the cluster and the associated instances can
--   accept tasks.
cStatus :: Lens' Cluster (Maybe Text)
data Volume

-- | <a>Volume</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vHost</a> <tt>::</tt> <a>Maybe</a>
--   <a>HostVolumeProperties</a></li>
--   <li><a>vName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
volume :: Volume

-- | The path on the host container instance that is presented to the
--   containers which access the volume. If this parameter is empty, then
--   the Docker daemon assigns a host path for you.
vHost :: Lens' Volume (Maybe HostVolumeProperties)

-- | The name of the volume. This name is referenced in the
--   <tt>sourceVolume</tt> parameter of container definition
--   <tt>mountPoints</tt>.
vName :: Lens' Volume (Maybe Text)
data ContainerOverride

-- | <a>ContainerOverride</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>coCommand</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>coName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
containerOverride :: ContainerOverride

-- | The command to send to the container that overrides the default
--   command from the Docker image or the task definition.
coCommand :: Lens' ContainerOverride [Text]

-- | The name of the container that receives the override.
coName :: Lens' ContainerOverride (Maybe Text)
data KeyValuePair

-- | <a>KeyValuePair</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>kvpName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>kvpValue</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
keyValuePair :: KeyValuePair

-- | The name of the key value pair.
kvpName :: Lens' KeyValuePair (Maybe Text)

-- | The value of the key value pair.
kvpValue :: Lens' KeyValuePair (Maybe Text)
data VolumeFrom

-- | <a>VolumeFrom</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vfReadOnly</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>vfSourceContainer</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
volumeFrom :: VolumeFrom

-- | If this value is <tt>true</tt>, the container has read-only access to
--   the volume. If this value is <tt>false</tt>, then the container can
--   write to the volume. The default value is <tt>false</tt>.
vfReadOnly :: Lens' VolumeFrom (Maybe Bool)

-- | The name of the container to mount volumes from.
vfSourceContainer :: Lens' VolumeFrom (Maybe Text)
data TaskOverride

-- | <a>TaskOverride</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>toContainerOverrides</a> <tt>::</tt>
--   [<a>ContainerOverride</a>]</li>
--   </ul>
taskOverride :: TaskOverride

-- | One or more container overrides sent to a task.
toContainerOverrides :: Lens' TaskOverride [ContainerOverride]
data HostVolumeProperties

-- | <a>HostVolumeProperties</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>hvpSourcePath</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
hostVolumeProperties :: HostVolumeProperties

-- | The path on the host container instance that is presented to the
--   container. If this parameter is empty, then the Docker daemon has
--   assigned a host path for you.
hvpSourcePath :: Lens' HostVolumeProperties (Maybe Text)
data VersionInfo

-- | <a>VersionInfo</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>viAgentHash</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>viAgentVersion</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>viDockerVersion</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
versionInfo :: VersionInfo

-- | The Git commit hash for the Amazon ECS container agent build on the
--   <a>amazon-ecs-agent</a> GitHub repository.
viAgentHash :: Lens' VersionInfo (Maybe Text)

-- | The version number of the Amazon ECS container agent.
viAgentVersion :: Lens' VersionInfo (Maybe Text)

-- | The Docker version running on the container instance.
viDockerVersion :: Lens' VersionInfo (Maybe Text)
data Container

-- | <a>Container</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cContainerArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cExitCode</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>cLastStatus</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cNetworkBindings</a> <tt>::</tt> [<a>NetworkBinding</a>]</li>
--   <li><a>cReason</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cTaskArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
container :: Container

-- | The Amazon Resource Name (ARN) of the container.
cContainerArn :: Lens' Container (Maybe Text)

-- | The exit code returned from the container.
cExitCode :: Lens' Container (Maybe Int)

-- | The last known status of the container.
cLastStatus :: Lens' Container (Maybe Text)

-- | The name of the container.
cName :: Lens' Container (Maybe Text)
cNetworkBindings :: Lens' Container [NetworkBinding]

-- | A short (255 max characters) human-readable string to provide
--   additional detail about a running or stopped container.
cReason :: Lens' Container (Maybe Text)

-- | The Amazon Resource Name (ARN) of the task.
cTaskArn :: Lens' Container (Maybe Text)
data LoadBalancer

-- | <a>LoadBalancer</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lbContainerName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lbContainerPort</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>lbLoadBalancerName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
loadBalancer :: LoadBalancer

-- | The name of the container to associate with the load balancer.
lbContainerName :: Lens' LoadBalancer (Maybe Text)

-- | The port on the container to associate with the load balancer.
lbContainerPort :: Lens' LoadBalancer (Maybe Int)

-- | The name of the load balancer.
lbLoadBalancerName :: Lens' LoadBalancer (Maybe Text)
data ContainerDefinition

-- | <a>ContainerDefinition</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cdCommand</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>cdCpu</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>cdEntryPoint</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>cdEnvironment</a> <tt>::</tt> [<a>KeyValuePair</a>]</li>
--   <li><a>cdEssential</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>cdImage</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cdLinks</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>cdMemory</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>cdMountPoints</a> <tt>::</tt> [<a>MountPoint</a>]</li>
--   <li><a>cdName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cdPortMappings</a> <tt>::</tt> [<a>PortMapping</a>]</li>
--   <li><a>cdVolumesFrom</a> <tt>::</tt> [<a>VolumeFrom</a>]</li>
--   </ul>
containerDefinition :: ContainerDefinition

-- | The <tt>CMD</tt> that is passed to the container. For more information
--   on the Docker <tt>CMD</tt> parameter, see
--   <a>https://docs.docker.com/reference/builder/#cmd</a>.
cdCommand :: Lens' ContainerDefinition [Text]

-- | The number of <tt>cpu</tt> units reserved for the container. A
--   container instance has 1,024 <tt>cpu</tt> units for every CPU core.
cdCpu :: Lens' ContainerDefinition (Maybe Int)

-- | Early versions of the Amazon ECS container agent do not properly
--   handle <tt>entryPoint</tt> parameters. If you have problems using
--   <tt>entryPoint</tt>, update your container agent or enter your
--   commands and arguments as <tt>command</tt> array items instead.
--   
--   The <tt>ENTRYPOINT</tt> that is passed to the container. For more
--   information on the Docker <tt>ENTRYPOINT</tt> parameter, see
--   <a>https://docs.docker.com/reference/builder/#entrypoint</a>.
cdEntryPoint :: Lens' ContainerDefinition [Text]

-- | The environment variables to pass to a container.
cdEnvironment :: Lens' ContainerDefinition [KeyValuePair]

-- | If the <tt>essential</tt> parameter of a container is marked as
--   <tt>true</tt>, the failure of that container will stop the task. If
--   the <tt>essential</tt> parameter of a container is marked as
--   <tt>false</tt>, then its failure will not affect the rest of the
--   containers in a task.
cdEssential :: Lens' ContainerDefinition (Maybe Bool)

-- | The image used to start a container. This string is passed directly to
--   the Docker daemon. Images in the Docker Hub registry are available by
--   default. Other repositories are specified with
--   '<i>repository-url</i>/<i>image</i>:<i>tag</i>.
cdImage :: Lens' ContainerDefinition (Maybe Text)

-- | The <tt>link</tt> parameter allows containers to communicate with each
--   other without the need for port mappings, using the <tt>name</tt>
--   parameter. For more information on linking Docker containers, see
--   <a>https://docs.docker.com/userguide/dockerlinks/</a>.
cdLinks :: Lens' ContainerDefinition [Text]

-- | The number of MiB of memory reserved for the container. Docker will
--   allocate a minimum of 4 MiB of memory to a container.
cdMemory :: Lens' ContainerDefinition (Maybe Int)

-- | The mount points for data volumes in your container.
cdMountPoints :: Lens' ContainerDefinition [MountPoint]

-- | The name of a container. If you are linking multiple containers
--   together in a task definition, the <tt>name</tt> of one container can
--   be entered in the <tt>links</tt> of another container to connect the
--   containers.
cdName :: Lens' ContainerDefinition (Maybe Text)

-- | The list of port mappings for the container.
cdPortMappings :: Lens' ContainerDefinition [PortMapping]

-- | Data volumes to mount from another container.
cdVolumesFrom :: Lens' ContainerDefinition [VolumeFrom]
data Resource

-- | <a>Resource</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rDoubleValue</a> <tt>::</tt> <a>Maybe</a> <a>Double</a></li>
--   <li><a>rIntegerValue</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>rLongValue</a> <tt>::</tt> <a>Maybe</a> <a>Integer</a></li>
--   <li><a>rName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rStringSetValue</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>rType</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
resource :: Resource

-- | When the <tt>doubleValue</tt> type is set, the value of the resource
--   must be a double precision floating-point type.
rDoubleValue :: Lens' Resource (Maybe Double)

-- | When the <tt>integerValue</tt> type is set, the value of the resource
--   must be an integer.
rIntegerValue :: Lens' Resource (Maybe Int)

-- | When the <tt>longValue</tt> type is set, the value of the resource
--   must be an extended precision floating-point type.
rLongValue :: Lens' Resource (Maybe Integer)

-- | The name of the resource, such as <tt>CPU</tt>, <tt>MEMORY</tt>,
--   <tt>PORTS</tt>, or a user-defined resource.
rName :: Lens' Resource (Maybe Text)

-- | When the <tt>stringSetValue</tt> type is set, the value of the
--   resource must be a string type.
rStringSetValue :: Lens' Resource [Text]

-- | The type of the resource, such as <tt>INTEGER</tt>, <tt>DOUBLE</tt>,
--   <tt>LONG</tt>, or <tt>STRINGSET</tt>.
rType :: Lens' Resource (Maybe Text)
data Task

-- | <a>Task</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>tClusterArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>tContainerInstanceArn</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>tContainers</a> <tt>::</tt> [<a>Container</a>]</li>
--   <li><a>tDesiredStatus</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>tLastStatus</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>tOverrides</a> <tt>::</tt> <a>Maybe</a>
--   <a>TaskOverride</a></li>
--   <li><a>tStartedBy</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>tTaskArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>tTaskDefinitionArn</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
task :: Task

-- | The Amazon Resource Name (ARN) of the of the cluster that hosts the
--   task.
tClusterArn :: Lens' Task (Maybe Text)

-- | The Amazon Resource Name (ARN) of the container instances that host
--   the task.
tContainerInstanceArn :: Lens' Task (Maybe Text)

-- | The containers associated with the task.
tContainers :: Lens' Task [Container]

-- | The desired status of the task.
tDesiredStatus :: Lens' Task (Maybe Text)

-- | The last known status of the task.
tLastStatus :: Lens' Task (Maybe Text)

-- | One or more container overrides.
tOverrides :: Lens' Task (Maybe TaskOverride)

-- | The tag specified when a task is started. If the task is started by an
--   Amazon ECS service, then the <tt>startedBy</tt> parameter contains the
--   deployment ID of the service that starts it.
tStartedBy :: Lens' Task (Maybe Text)

-- | The Amazon Resource Name (ARN) of the task.
tTaskArn :: Lens' Task (Maybe Text)

-- | The Amazon Resource Name (ARN) of the of the task definition that
--   creates the task.
tTaskDefinitionArn :: Lens' Task (Maybe Text)
data PortMapping

-- | <a>PortMapping</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pmContainerPort</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>pmHostPort</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   </ul>
portMapping :: PortMapping

-- | The port number on the container that is bound to the user-specified
--   or automatically assigned host port. If you specify a container port
--   and not a host port, your container will automatically receive a host
--   port in the 49153 to 65535 port range.
pmContainerPort :: Lens' PortMapping (Maybe Int)

-- | The port number on the container instance to reserve for your
--   container. You can specify a non-reserved host port for your container
--   port mapping, or you can omit the <tt>hostPort</tt> while specifying a
--   <tt>containerPort</tt> and your container will automatically receive a
--   port in the 49153 to 65535 port range. You should not attempt to
--   specify a host port in the 49153 to 65535 port range, since these are
--   reserved for automatic assignment.
--   
--   The default reserved ports are 22 for SSH, the Docker ports 2375 and
--   2376, and the Amazon ECS Container Agent port 51678. Any host port
--   that was previously specified in a running task is also reserved while
--   the task is running (once a task stops, the host port is released).The
--   current reserved ports are displayed in the
--   <tt>remainingResources</tt> of <tt>DescribeContainerInstances</tt>
--   output, and a container instance may have up to 50 reserved ports at a
--   time, including the default reserved ports (automatically assigned
--   ports do not count toward this limit).
pmHostPort :: Lens' PortMapping (Maybe Int)
data TaskDefinition

-- | <a>TaskDefinition</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>tdContainerDefinitions</a> <tt>::</tt>
--   [<a>ContainerDefinition</a>]</li>
--   <li><a>tdFamily</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>tdRevision</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>tdTaskDefinitionArn</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>tdVolumes</a> <tt>::</tt> [<a>Volume</a>]</li>
--   </ul>
taskDefinition :: TaskDefinition

-- | A list of container definitions in JSON format that describe the
--   different containers that make up your task. For more information on
--   container definition parameters and defaults, see <a>Amazon ECS Task
--   Definitions</a> in the <i>Amazon EC2 Container Service Developer
--   Guide</i>.
tdContainerDefinitions :: Lens' TaskDefinition [ContainerDefinition]

-- | The family of your task definition. You can think of the
--   <tt>family</tt> as the name of your task definition.
tdFamily :: Lens' TaskDefinition (Maybe Text)

-- | The revision of the task in a particular family. You can think of the
--   revision as a version number of a task definition in a family. When
--   you register a task definition for the first time, the revision is
--   '1', and each time you register a task definition in the same family,
--   the revision value increases by one.
tdRevision :: Lens' TaskDefinition (Maybe Int)

-- | The full Amazon Resource Name (ARN) of the of the task definition.
tdTaskDefinitionArn :: Lens' TaskDefinition (Maybe Text)

-- | The list of volumes in a task. For more information on volume
--   definition parameters and defaults, see <a>Amazon ECS Task
--   Definitions</a> in the <i>Amazon EC2Container Service Developer
--   Guide</i>.
tdVolumes :: Lens' TaskDefinition [Volume]
data Failure

-- | <a>Failure</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>fArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>fReason</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
failure :: Failure

-- | The Amazon Resource Name (ARN) of the failed resource.
fArn :: Lens' Failure (Maybe Text)

-- | The reason for the failure.
fReason :: Lens' Failure (Maybe Text)
data ContainerInstance

-- | <a>ContainerInstance</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ciAgentConnected</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>ciContainerInstanceArn</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>ciEc2InstanceId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ciPendingTasksCount</a> <tt>::</tt> <a>Maybe</a>
--   <a>Int</a></li>
--   <li><a>ciRegisteredResources</a> <tt>::</tt> [<a>Resource</a>]</li>
--   <li><a>ciRemainingResources</a> <tt>::</tt> [<a>Resource</a>]</li>
--   <li><a>ciRunningTasksCount</a> <tt>::</tt> <a>Maybe</a>
--   <a>Int</a></li>
--   <li><a>ciStatus</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
containerInstance :: ContainerInstance

-- | This parameter returns <tt>true</tt> if the agent is actually
--   connected to Amazon ECS. Registered instances with an agent that may
--   be unhealthy or stopped will return <tt>false</tt>, and instances
--   without a connected agent cannot accept placement request.
ciAgentConnected :: Lens' ContainerInstance (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the container instance. The ARN
--   contains the 'arn:aws:ecs' namespace, followed by the region of the
--   container instance, the AWS account ID of the container instance
--   owner, the 'container-instance' namespace, and then the container
--   instance UUID. For example,
--   arn:aws:ecs:<i>region</i>:<i>aws_account_id</i>:container-instance/<i>container_instance_UUID</i>.
ciContainerInstanceArn :: Lens' ContainerInstance (Maybe Text)

-- | The Amazon EC2 instance ID of the container instance.
ciEc2InstanceId :: Lens' ContainerInstance (Maybe Text)

-- | The number of tasks on the container instance that are in the
--   <tt>PENDING</tt> status.
ciPendingTasksCount :: Lens' ContainerInstance (Maybe Int)

-- | The registered resources on the container instance that are in use by
--   current tasks.
ciRegisteredResources :: Lens' ContainerInstance [Resource]

-- | The remaining resources of the container instance that are available
--   for new tasks.
ciRemainingResources :: Lens' ContainerInstance [Resource]

-- | The number of tasks on the container instance that are in the
--   <tt>RUNNING</tt> status.
ciRunningTasksCount :: Lens' ContainerInstance (Maybe Int)

-- | The status of the container instance. The valid values are
--   <tt>ACTIVE</tt> or <tt>INACTIVE</tt>. <tt>ACTIVE</tt> indicates that
--   the container instance can accept tasks.
ciStatus :: Lens' ContainerInstance (Maybe Text)
data ServiceEvent

-- | <a>ServiceEvent</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>seCreatedAt</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>seId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>seMessage</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
serviceEvent :: ServiceEvent

-- | The Unix time in seconds and milliseconds when the event was
--   triggered.
seCreatedAt :: Lens' ServiceEvent (Maybe UTCTime)

-- | The ID string of the event.
seId :: Lens' ServiceEvent (Maybe Text)

-- | The event message.
seMessage :: Lens' ServiceEvent (Maybe Text)
data Deployment

-- | <a>Deployment</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dCreatedAt</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>dDesiredCount</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>dId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dPendingCount</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>dRunningCount</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>dStatus</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dTaskDefinition</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dUpdatedAt</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   </ul>
deployment :: Deployment

-- | The Unix time in seconds and milliseconds when the service was
--   created.
dCreatedAt :: Lens' Deployment (Maybe UTCTime)

-- | The most recent desired count of tasks that was specified for the
--   service to deploy and/or maintain.
dDesiredCount :: Lens' Deployment (Maybe Int)

-- | The ID of the deployment.
dId :: Lens' Deployment (Maybe Text)

-- | The number of tasks in the deployment that are in the <tt>PENDING</tt>
--   status.
dPendingCount :: Lens' Deployment (Maybe Int)

-- | The number of tasks in the deployment that are in the <tt>RUNNING</tt>
--   status.
dRunningCount :: Lens' Deployment (Maybe Int)

-- | The status of the deployment. Valid values are <tt>PRIMARY</tt> (for
--   the most recent deployment), <tt>ACTIVE</tt> (for previous deployments
--   that still have tasks running, but are being replaced with the
--   <tt>PRIMARY</tt> deployment), and <tt>INACTIVE</tt> (for deployments
--   that have been completely replaced).
dStatus :: Lens' Deployment (Maybe Text)

-- | The most recent task definition that was specified for the service to
--   use.
dTaskDefinition :: Lens' Deployment (Maybe Text)

-- | The Unix time in seconds and milliseconds when the service was last
--   updated.
dUpdatedAt :: Lens' Deployment (Maybe UTCTime)
data MountPoint

-- | <a>MountPoint</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>mpContainerPath</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>mpReadOnly</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>mpSourceVolume</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
mountPoint :: MountPoint

-- | The path on the container to mount the host volume at.
mpContainerPath :: Lens' MountPoint (Maybe Text)

-- | If this value is <tt>true</tt>, the container has read-only access to
--   the volume. If this value is <tt>false</tt>, then the container can
--   write to the volume. The default value is <tt>false</tt>.
mpReadOnly :: Lens' MountPoint (Maybe Bool)

-- | The name of the volume to mount.
mpSourceVolume :: Lens' MountPoint (Maybe Text)
instance Eq NetworkBinding
instance Ord NetworkBinding
instance Read NetworkBinding
instance Show NetworkBinding
instance Eq Cluster
instance Ord Cluster
instance Read Cluster
instance Show Cluster
instance Eq ContainerOverride
instance Ord ContainerOverride
instance Read ContainerOverride
instance Show ContainerOverride
instance Eq KeyValuePair
instance Ord KeyValuePair
instance Read KeyValuePair
instance Show KeyValuePair
instance Eq VolumeFrom
instance Ord VolumeFrom
instance Read VolumeFrom
instance Show VolumeFrom
instance Eq TaskOverride
instance Read TaskOverride
instance Show TaskOverride
instance Monoid TaskOverride
instance Semigroup TaskOverride
instance Eq HostVolumeProperties
instance Ord HostVolumeProperties
instance Read HostVolumeProperties
instance Show HostVolumeProperties
instance Monoid HostVolumeProperties
instance Eq Volume
instance Read Volume
instance Show Volume
instance Eq VersionInfo
instance Ord VersionInfo
instance Read VersionInfo
instance Show VersionInfo
instance Eq Container
instance Read Container
instance Show Container
instance Eq LoadBalancer
instance Ord LoadBalancer
instance Read LoadBalancer
instance Show LoadBalancer
instance Eq Resource
instance Ord Resource
instance Read Resource
instance Show Resource
instance Eq Task
instance Read Task
instance Show Task
instance Eq PortMapping
instance Ord PortMapping
instance Read PortMapping
instance Show PortMapping
instance Eq Failure
instance Ord Failure
instance Read Failure
instance Show Failure
instance Eq ContainerInstance
instance Read ContainerInstance
instance Show ContainerInstance
instance Eq ServiceEvent
instance Ord ServiceEvent
instance Read ServiceEvent
instance Show ServiceEvent
instance Eq Deployment
instance Ord Deployment
instance Read Deployment
instance Show Deployment
instance Eq ContainerService
instance Read ContainerService
instance Show ContainerService
instance Eq MountPoint
instance Ord MountPoint
instance Read MountPoint
instance Show MountPoint
instance Eq ContainerDefinition
instance Read ContainerDefinition
instance Show ContainerDefinition
instance Eq TaskDefinition
instance Read TaskDefinition
instance Show TaskDefinition
instance ToJSON MountPoint
instance FromJSON MountPoint
instance ToJSON Deployment
instance FromJSON Deployment
instance ToJSON ServiceEvent
instance FromJSON ServiceEvent
instance ToJSON ContainerInstance
instance FromJSON ContainerInstance
instance ToJSON Failure
instance FromJSON Failure
instance ToJSON TaskDefinition
instance FromJSON TaskDefinition
instance ToJSON PortMapping
instance FromJSON PortMapping
instance ToJSON Task
instance FromJSON Task
instance ToJSON Resource
instance FromJSON Resource
instance ToJSON ContainerDefinition
instance FromJSON ContainerDefinition
instance ToJSON LoadBalancer
instance FromJSON LoadBalancer
instance ToJSON Container
instance FromJSON Container
instance ToJSON VersionInfo
instance FromJSON VersionInfo
instance ToJSON HostVolumeProperties
instance FromJSON HostVolumeProperties
instance ToJSON TaskOverride
instance FromJSON TaskOverride
instance IsList TaskOverride
instance ToJSON VolumeFrom
instance FromJSON VolumeFrom
instance ToJSON KeyValuePair
instance FromJSON KeyValuePair
instance ToJSON ContainerOverride
instance FromJSON ContainerOverride
instance ToJSON Volume
instance FromJSON Volume
instance ToJSON Cluster
instance FromJSON Cluster
instance ToJSON ContainerService
instance FromJSON ContainerService
instance ToJSON NetworkBinding
instance FromJSON NetworkBinding
instance AWSService ECS


-- | Modify the desired count or task definition used in a service.
--   
--   You can add to or subtract from the number of instantiations of a task
--   definition in a service by specifying the cluster that the service is
--   running in and a new <tt>desiredCount</tt> parameter.
--   
--   You can use <a>UpdateService</a> to modify your task definition and
--   deploy a new version of your service, one task at a time. If you
--   modify the task definition with <a>UpdateService</a>, Amazon ECS
--   spawns a task with the new version of the task definition and then
--   stops an old task after the new version is running. Because
--   <a>UpdateService</a> starts a new version of the task before stopping
--   an old version, your cluster must have capacity to support one more
--   instantiation of the task when <a>UpdateService</a> is run. If your
--   cluster cannot support another instantiation of the task used in your
--   service, you can reduce the desired count of your service by one
--   before modifying the task definition.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_UpdateService.html</a>
module Network.AWS.ECS.UpdateService
data UpdateService

-- | <a>UpdateService</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>usCluster</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>usDesiredCount</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>usService</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>usTaskDefinition</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
updateService :: Text -> UpdateService

-- | The short name or full Amazon Resource Name (ARN) of the cluster that
--   your service is running on. If you do not specify a cluster, the
--   default cluster is assumed.
usCluster :: Lens' UpdateService (Maybe Text)

-- | The number of instantiations of the task that you would like to place
--   and keep running in your service.
usDesiredCount :: Lens' UpdateService (Maybe Int)

-- | The name of the service that you want to update.
usService :: Lens' UpdateService Text

-- | The <tt>family</tt> and <tt>revision</tt> ('family:revision') or full
--   Amazon Resource Name (ARN) of the task definition that you want to run
--   in your service. If you modify the task definition with
--   <a>UpdateService</a>, Amazon ECS spawns a task with the new version of
--   the task definition and then stops an old task after the new version
--   is running.
usTaskDefinition :: Lens' UpdateService (Maybe Text)
data UpdateServiceResponse

-- | <a>UpdateServiceResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>usrService</a> <tt>::</tt> <a>Maybe</a>
--   <a>ContainerService</a></li>
--   </ul>
updateServiceResponse :: UpdateServiceResponse

-- | The full description of your service following the update call.
usrService :: Lens' UpdateServiceResponse (Maybe ContainerService)
instance Eq UpdateService
instance Ord UpdateService
instance Read UpdateService
instance Show UpdateService
instance Eq UpdateServiceResponse
instance Read UpdateServiceResponse
instance Show UpdateServiceResponse
instance FromJSON UpdateServiceResponse
instance AWSRequest UpdateService
instance ToJSON UpdateService
instance ToHeaders UpdateService
instance ToQuery UpdateService
instance ToPath UpdateService


-- | This action is only used by the Amazon EC2 Container Service agent,
--   and it is not intended for use outside of the agent.
--   
--   Sent to acknowledge that a task changed states.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_SubmitTaskStateChange.html</a>
module Network.AWS.ECS.SubmitTaskStateChange
data SubmitTaskStateChange

-- | <a>SubmitTaskStateChange</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>stscCluster</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>stscReason</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>stscStatus</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>stscTask</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
submitTaskStateChange :: SubmitTaskStateChange

-- | The short name or full Amazon Resource Name (ARN) of the cluster that
--   hosts the task.
stscCluster :: Lens' SubmitTaskStateChange (Maybe Text)

-- | The reason for the state change request.
stscReason :: Lens' SubmitTaskStateChange (Maybe Text)

-- | The status of the state change request.
stscStatus :: Lens' SubmitTaskStateChange (Maybe Text)

-- | The task UUID or full Amazon Resource Name (ARN) of the task in the
--   state change request.
stscTask :: Lens' SubmitTaskStateChange (Maybe Text)
data SubmitTaskStateChangeResponse

-- | <a>SubmitTaskStateChangeResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>stscrAcknowledgment</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
submitTaskStateChangeResponse :: SubmitTaskStateChangeResponse

-- | Acknowledgement of the state change.
stscrAcknowledgment :: Lens' SubmitTaskStateChangeResponse (Maybe Text)
instance Eq SubmitTaskStateChange
instance Ord SubmitTaskStateChange
instance Read SubmitTaskStateChange
instance Show SubmitTaskStateChange
instance Eq SubmitTaskStateChangeResponse
instance Ord SubmitTaskStateChangeResponse
instance Read SubmitTaskStateChangeResponse
instance Show SubmitTaskStateChangeResponse
instance Monoid SubmitTaskStateChangeResponse
instance FromJSON SubmitTaskStateChangeResponse
instance AWSRequest SubmitTaskStateChange
instance ToJSON SubmitTaskStateChange
instance ToHeaders SubmitTaskStateChange
instance ToQuery SubmitTaskStateChange
instance ToPath SubmitTaskStateChange


-- | This action is only used by the Amazon EC2 Container Service agent,
--   and it is not intended for use outside of the agent.
--   
--   Sent to acknowledge that a container changed states.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_SubmitContainerStateChange.html</a>
module Network.AWS.ECS.SubmitContainerStateChange
data SubmitContainerStateChange

-- | <a>SubmitContainerStateChange</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>scscCluster</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>scscContainerName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>scscExitCode</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>scscNetworkBindings</a> <tt>::</tt>
--   [<a>NetworkBinding</a>]</li>
--   <li><a>scscReason</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>scscStatus</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>scscTask</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
submitContainerStateChange :: SubmitContainerStateChange

-- | The short name or full Amazon Resource Name (ARN) of the cluster that
--   hosts the container.
scscCluster :: Lens' SubmitContainerStateChange (Maybe Text)

-- | The name of the container.
scscContainerName :: Lens' SubmitContainerStateChange (Maybe Text)

-- | The exit code returned for the state change request.
scscExitCode :: Lens' SubmitContainerStateChange (Maybe Int)

-- | The network bindings of the container.
scscNetworkBindings :: Lens' SubmitContainerStateChange [NetworkBinding]

-- | The reason for the state change request.
scscReason :: Lens' SubmitContainerStateChange (Maybe Text)

-- | The status of the state change request.
scscStatus :: Lens' SubmitContainerStateChange (Maybe Text)

-- | The task UUID or full Amazon Resource Name (ARN) of the task that
--   hosts the container.
scscTask :: Lens' SubmitContainerStateChange (Maybe Text)
data SubmitContainerStateChangeResponse

-- | <a>SubmitContainerStateChangeResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>scscrAcknowledgment</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
submitContainerStateChangeResponse :: SubmitContainerStateChangeResponse

-- | Acknowledgement of the state change.
scscrAcknowledgment :: Lens' SubmitContainerStateChangeResponse (Maybe Text)
instance Eq SubmitContainerStateChange
instance Read SubmitContainerStateChange
instance Show SubmitContainerStateChange
instance Eq SubmitContainerStateChangeResponse
instance Ord SubmitContainerStateChangeResponse
instance Read SubmitContainerStateChangeResponse
instance Show SubmitContainerStateChangeResponse
instance Monoid SubmitContainerStateChangeResponse
instance FromJSON SubmitContainerStateChangeResponse
instance AWSRequest SubmitContainerStateChange
instance ToJSON SubmitContainerStateChange
instance ToHeaders SubmitContainerStateChange
instance ToQuery SubmitContainerStateChange
instance ToPath SubmitContainerStateChange


-- | Stops a running task.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_StopTask.html</a>
module Network.AWS.ECS.StopTask
data StopTask

-- | <a>StopTask</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>stCluster</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>stTask</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
stopTask :: Text -> StopTask

-- | The short name or full Amazon Resource Name (ARN) of the cluster that
--   hosts the task you want to stop. If you do not specify a cluster, the
--   default cluster is assumed..
stCluster :: Lens' StopTask (Maybe Text)

-- | The task UUIDs or full Amazon Resource Name (ARN) entry of the task
--   you would like to stop.
stTask :: Lens' StopTask Text
data StopTaskResponse

-- | <a>StopTaskResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>strTask</a> <tt>::</tt> <a>Maybe</a> <a>Task</a></li>
--   </ul>
stopTaskResponse :: StopTaskResponse
strTask :: Lens' StopTaskResponse (Maybe Task)
instance Eq StopTask
instance Ord StopTask
instance Read StopTask
instance Show StopTask
instance Eq StopTaskResponse
instance Read StopTaskResponse
instance Show StopTaskResponse
instance FromJSON StopTaskResponse
instance AWSRequest StopTask
instance ToJSON StopTask
instance ToHeaders StopTask
instance ToQuery StopTask
instance ToPath StopTask


-- | Starts a new task from the specified task definition on the specified
--   container instance or instances. If you want to use the default Amazon
--   ECS scheduler to place your task, use <tt>RunTask</tt> instead.
--   
--   The list of container instances to start tasks on is limited to 10.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_StartTask.html</a>
module Network.AWS.ECS.StartTask
data StartTask

-- | <a>StartTask</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>st1Cluster</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>st1ContainerInstances</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>st1Overrides</a> <tt>::</tt> <a>Maybe</a>
--   <a>TaskOverride</a></li>
--   <li><a>st1StartedBy</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>st1TaskDefinition</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
startTask :: Text -> StartTask

-- | The short name or full Amazon Resource Name (ARN) of the cluster that
--   you want to start your task on. If you do not specify a cluster, the
--   default cluster is assumed..
st1Cluster :: Lens' StartTask (Maybe Text)

-- | The container instance UUIDs or full Amazon Resource Name (ARN)
--   entries for the container instances on which you would like to place
--   your task.
--   
--   The list of container instances to start tasks on is limited to 10.
st1ContainerInstances :: Lens' StartTask [Text]

-- | A list of container overrides in JSON format that specify the name of
--   a container in the specified task definition and the command it should
--   run instead of its default. A total of 8192 characters are allowed for
--   overrides. This limit includes the JSON formatting characters of the
--   override structure.
st1Overrides :: Lens' StartTask (Maybe TaskOverride)

-- | An optional tag specified when a task is started. For example if you
--   automatically trigger a task to run a batch process job, you could
--   apply a unique identifier for that job to your task with the
--   <tt>startedBy</tt> parameter. You can then identify which tasks belong
--   to that job by filtering the results of a <tt>ListTasks</tt> call with
--   the <tt>startedBy</tt> value.
--   
--   If a task is started by an Amazon ECS service, then the
--   <tt>startedBy</tt> parameter contains the deployment ID of the service
--   that starts it.
st1StartedBy :: Lens' StartTask (Maybe Text)

-- | The <tt>family</tt> and <tt>revision</tt> ('family:revision') or full
--   Amazon Resource Name (ARN) of the task definition that you want to
--   start.
st1TaskDefinition :: Lens' StartTask Text
data StartTaskResponse

-- | <a>StartTaskResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>strFailures</a> <tt>::</tt> [<a>Failure</a>]</li>
--   <li><a>strTasks</a> <tt>::</tt> [<a>Task</a>]</li>
--   </ul>
startTaskResponse :: StartTaskResponse

-- | Any failed tasks from your <a>StartTask</a> action are listed here.
strFailures :: Lens' StartTaskResponse [Failure]

-- | A full description of the tasks that were started. Each task that was
--   successfully placed on your container instances will be described
--   here.
strTasks :: Lens' StartTaskResponse [Task]
instance Eq StartTask
instance Read StartTask
instance Show StartTask
instance Eq StartTaskResponse
instance Read StartTaskResponse
instance Show StartTaskResponse
instance FromJSON StartTaskResponse
instance AWSRequest StartTask
instance ToJSON StartTask
instance ToHeaders StartTask
instance ToQuery StartTask
instance ToPath StartTask


-- | Start a task using random placement and the default Amazon ECS
--   scheduler. If you want to use your own scheduler or place a task on a
--   specific container instance, use <tt>StartTask</tt> instead.
--   
--   The <tt>count</tt> parameter is limited to 10 tasks per call.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RunTask.html</a>
module Network.AWS.ECS.RunTask
data RunTask

-- | <a>RunTask</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rtCluster</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rtCount</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>rtOverrides</a> <tt>::</tt> <a>Maybe</a>
--   <a>TaskOverride</a></li>
--   <li><a>rtStartedBy</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rtTaskDefinition</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
runTask :: Text -> RunTask

-- | The short name or full Amazon Resource Name (ARN) of the cluster that
--   you want to run your task on. If you do not specify a cluster, the
--   default cluster is assumed..
rtCluster :: Lens' RunTask (Maybe Text)

-- | The number of instantiations of the specified task that you would like
--   to place on your cluster.
--   
--   The <tt>count</tt> parameter is limited to 10 tasks per call.
rtCount :: Lens' RunTask (Maybe Int)

-- | A list of container overrides in JSON format that specify the name of
--   a container in the specified task definition and the command it should
--   run instead of its default. A total of 8192 characters are allowed for
--   overrides. This limit includes the JSON formatting characters of the
--   override structure.
rtOverrides :: Lens' RunTask (Maybe TaskOverride)

-- | An optional tag specified when a task is started. For example if you
--   automatically trigger a task to run a batch process job, you could
--   apply a unique identifier for that job to your task with the
--   <tt>startedBy</tt> parameter. You can then identify which tasks belong
--   to that job by filtering the results of a <tt>ListTasks</tt> call with
--   the <tt>startedBy</tt> value.
--   
--   If a task is started by an Amazon ECS service, then the
--   <tt>startedBy</tt> parameter contains the deployment ID of the service
--   that starts it.
rtStartedBy :: Lens' RunTask (Maybe Text)

-- | The <tt>family</tt> and <tt>revision</tt> ('family:revision') or full
--   Amazon Resource Name (ARN) of the task definition that you want to
--   run.
rtTaskDefinition :: Lens' RunTask Text
data RunTaskResponse

-- | <a>RunTaskResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rtrFailures</a> <tt>::</tt> [<a>Failure</a>]</li>
--   <li><a>rtrTasks</a> <tt>::</tt> [<a>Task</a>]</li>
--   </ul>
runTaskResponse :: RunTaskResponse

-- | Any failed tasks from your <a>RunTask</a> action are listed here.
rtrFailures :: Lens' RunTaskResponse [Failure]

-- | A full description of the tasks that were run. Each task that was
--   successfully placed on your cluster will be described here.
rtrTasks :: Lens' RunTaskResponse [Task]
instance Eq RunTask
instance Read RunTask
instance Show RunTask
instance Eq RunTaskResponse
instance Read RunTaskResponse
instance Show RunTaskResponse
instance FromJSON RunTaskResponse
instance AWSRequest RunTask
instance ToJSON RunTask
instance ToHeaders RunTask
instance ToQuery RunTask
instance ToPath RunTask


-- | Registers a new task definition from the supplied <tt>family</tt> and
--   <tt>containerDefinitions</tt>. Optionally, you can add data volumes to
--   your containers with the <tt>volumes</tt> parameter. For more
--   information on task definition parameters and defaults, see <a>Amazon
--   ECS Task Definitions</a> in the <i>Amazon EC2 Container Service
--   DeveloperGuide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RegisterTaskDefinition.html</a>
module Network.AWS.ECS.RegisterTaskDefinition
data RegisterTaskDefinition

-- | <a>RegisterTaskDefinition</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rtdContainerDefinitions</a> <tt>::</tt>
--   [<a>ContainerDefinition</a>]</li>
--   <li><a>rtdFamily</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rtdVolumes</a> <tt>::</tt> [<a>Volume</a>]</li>
--   </ul>
registerTaskDefinition :: Text -> RegisterTaskDefinition

-- | A list of container definitions in JSON format that describe the
--   different containers that make up your task.
rtdContainerDefinitions :: Lens' RegisterTaskDefinition [ContainerDefinition]

-- | You must specify a <tt>family</tt> for a task definition, which allows
--   you to track multiple versions of the same task definition. You can
--   think of the <tt>family</tt> as a name for your task definition. Up to
--   255 letters (uppercase and lowercase), numbers, hyphens, and
--   underscores are allowed.
rtdFamily :: Lens' RegisterTaskDefinition Text

-- | A list of volume definitions in JSON format that containers in your
--   task may use.
rtdVolumes :: Lens' RegisterTaskDefinition [Volume]
data RegisterTaskDefinitionResponse

-- | <a>RegisterTaskDefinitionResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rtdrTaskDefinition</a> <tt>::</tt> <a>Maybe</a>
--   <a>TaskDefinition</a></li>
--   </ul>
registerTaskDefinitionResponse :: RegisterTaskDefinitionResponse
rtdrTaskDefinition :: Lens' RegisterTaskDefinitionResponse (Maybe TaskDefinition)
instance Eq RegisterTaskDefinition
instance Read RegisterTaskDefinition
instance Show RegisterTaskDefinition
instance Eq RegisterTaskDefinitionResponse
instance Read RegisterTaskDefinitionResponse
instance Show RegisterTaskDefinitionResponse
instance FromJSON RegisterTaskDefinitionResponse
instance AWSRequest RegisterTaskDefinition
instance ToJSON RegisterTaskDefinition
instance ToHeaders RegisterTaskDefinition
instance ToQuery RegisterTaskDefinition
instance ToPath RegisterTaskDefinition


-- | This action is only used by the Amazon EC2 Container Service agent,
--   and it is not intended for use outside of the agent.
--   
--   Registers an Amazon EC2 instance into the specified cluster. This
--   instance will become available to place containers on.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RegisterContainerInstance.html</a>
module Network.AWS.ECS.RegisterContainerInstance
data RegisterContainerInstance

-- | <a>RegisterContainerInstance</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rciCluster</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rciInstanceIdentityDocument</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>rciInstanceIdentityDocumentSignature</a> <tt>::</tt>
--   <a>Maybe</a> <a>Text</a></li>
--   <li><a>rciTotalResources</a> <tt>::</tt> [<a>Resource</a>]</li>
--   <li><a>rciVersionInfo</a> <tt>::</tt> <a>Maybe</a>
--   <a>VersionInfo</a></li>
--   </ul>
registerContainerInstance :: RegisterContainerInstance

-- | The short name or full Amazon Resource Name (ARN) of the cluster that
--   you want to register your container instance with. If you do not
--   specify a cluster, the default cluster is assumed..
rciCluster :: Lens' RegisterContainerInstance (Maybe Text)
rciInstanceIdentityDocument :: Lens' RegisterContainerInstance (Maybe Text)
rciInstanceIdentityDocumentSignature :: Lens' RegisterContainerInstance (Maybe Text)
rciTotalResources :: Lens' RegisterContainerInstance [Resource]
rciVersionInfo :: Lens' RegisterContainerInstance (Maybe VersionInfo)
data RegisterContainerInstanceResponse

-- | <a>RegisterContainerInstanceResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rcirContainerInstance</a> <tt>::</tt> <a>Maybe</a>
--   <a>ContainerInstance</a></li>
--   </ul>
registerContainerInstanceResponse :: RegisterContainerInstanceResponse
rcirContainerInstance :: Lens' RegisterContainerInstanceResponse (Maybe ContainerInstance)
instance Eq RegisterContainerInstance
instance Read RegisterContainerInstance
instance Show RegisterContainerInstance
instance Eq RegisterContainerInstanceResponse
instance Read RegisterContainerInstanceResponse
instance Show RegisterContainerInstanceResponse
instance FromJSON RegisterContainerInstanceResponse
instance AWSRequest RegisterContainerInstance
instance ToJSON RegisterContainerInstance
instance ToHeaders RegisterContainerInstance
instance ToQuery RegisterContainerInstance
instance ToPath RegisterContainerInstance


-- | Returns a list of tasks for a specified cluster. You can filter the
--   results by family name or by a particular container instance with the
--   <tt>family</tt> and <a>containerInstance</a> parameters.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListTasks.html</a>
module Network.AWS.ECS.ListTasks
data ListTasks

-- | <a>ListTasks</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ltCluster</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ltContainerInstance</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>ltFamily</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ltMaxResults</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>ltNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ltServiceName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ltStartedBy</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listTasks :: ListTasks

-- | The short name or full Amazon Resource Name (ARN) of the cluster that
--   hosts the tasks you want to list. If you do not specify a cluster, the
--   default cluster is assumed..
ltCluster :: Lens' ListTasks (Maybe Text)

-- | The container instance UUID or full Amazon Resource Name (ARN) of the
--   container instance that you want to filter the <a>ListTasks</a>
--   results with. Specifying a <a>containerInstance</a> will limit the
--   results to tasks that belong to that container instance.
ltContainerInstance :: Lens' ListTasks (Maybe Text)

-- | The name of the family that you want to filter the <a>ListTasks</a>
--   results with. Specifying a <tt>family</tt> will limit the results to
--   tasks that belong to that family.
ltFamily :: Lens' ListTasks (Maybe Text)

-- | The maximum number of task results returned by <a>ListTasks</a> in
--   paginated output. When this parameter is used, <a>ListTasks</a> only
--   returns <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another <a>ListTasks</a>
--   request with the returned <tt>nextToken</tt> value. This value can be
--   between 1 and 100. If this parameter is not used, then
--   <a>ListTasks</a> returns up to 100 results and a <tt>nextToken</tt>
--   value if applicable.
ltMaxResults :: Lens' ListTasks (Maybe Int)

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <a>ListTasks</a> request where <tt>maxResults</tt> was used and the
--   results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value. This value is <a>null</a> when there are no
--   more results to return.
ltNextToken :: Lens' ListTasks (Maybe Text)

-- | The name of the service that you want to filter the <a>ListTasks</a>
--   results with. Specifying a <tt>serviceName</tt> will limit the results
--   to tasks that belong to that service.
ltServiceName :: Lens' ListTasks (Maybe Text)

-- | The <tt>startedBy</tt> value that you want to filter the task results
--   with. Specifying a <tt>startedBy</tt> value will limit the results to
--   tasks that were started with that value.
ltStartedBy :: Lens' ListTasks (Maybe Text)
data ListTasksResponse

-- | <a>ListTasksResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ltrNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ltrTaskArns</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
listTasksResponse :: ListTasksResponse

-- | The <tt>nextToken</tt> value to include in a future <a>ListTasks</a>
--   request. When the results of a <a>ListTasks</a> request exceed
--   <tt>maxResults</tt>, this value can be used to retrieve the next page
--   of results. This value is <a>null</a> when there are no more results
--   to return.
ltrNextToken :: Lens' ListTasksResponse (Maybe Text)

-- | The list of task Amazon Resource Name (ARN) entries for the
--   <a>ListTasks</a> request.
ltrTaskArns :: Lens' ListTasksResponse [Text]
instance Eq ListTasks
instance Ord ListTasks
instance Read ListTasks
instance Show ListTasks
instance Eq ListTasksResponse
instance Ord ListTasksResponse
instance Read ListTasksResponse
instance Show ListTasksResponse
instance FromJSON ListTasksResponse
instance AWSRequest ListTasks
instance ToJSON ListTasks
instance ToHeaders ListTasks
instance ToQuery ListTasks
instance ToPath ListTasks


-- | Returns a list of task definitions that are registered to your
--   account. You can filter the results by family name with the
--   <tt>familyPrefix</tt> parameter.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListTaskDefinitions.html</a>
module Network.AWS.ECS.ListTaskDefinitions
data ListTaskDefinitions

-- | <a>ListTaskDefinitions</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ltdFamilyPrefix</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ltdMaxResults</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>ltdNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listTaskDefinitions :: ListTaskDefinitions

-- | The full family name that you want to filter the
--   <a>ListTaskDefinitions</a> results with. Specifying a
--   <tt>familyPrefix</tt> will limit the listed task definitions to task
--   definition revisions that belong to that family.
ltdFamilyPrefix :: Lens' ListTaskDefinitions (Maybe Text)

-- | The maximum number of task definition results returned by
--   <a>ListTaskDefinitions</a> in paginated output. When this parameter is
--   used, <a>ListTaskDefinitions</a> only returns <tt>maxResults</tt>
--   results in a single page along with a <tt>nextToken</tt> response
--   element. The remaining results of the initial request can be seen by
--   sending another <a>ListTaskDefinitions</a> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter is not used, then <a>ListTaskDefinitions</a> returns up to
--   100 results and a <tt>nextToken</tt> value if applicable.
ltdMaxResults :: Lens' ListTaskDefinitions (Maybe Int)

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <a>ListTaskDefinitions</a> request where <tt>maxResults</tt> was used
--   and the results exceeded the value of that parameter. Pagination
--   continues from the end of the previous results that returned the
--   <tt>nextToken</tt> value. This value is <a>null</a> when there are no
--   more results to return.
ltdNextToken :: Lens' ListTaskDefinitions (Maybe Text)
data ListTaskDefinitionsResponse

-- | <a>ListTaskDefinitionsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ltdrNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ltdrTaskDefinitionArns</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
listTaskDefinitionsResponse :: ListTaskDefinitionsResponse

-- | The <tt>nextToken</tt> value to include in a future
--   <a>ListTaskDefinitions</a> request. When the results of a
--   <a>ListTaskDefinitions</a> request exceed <tt>maxResults</tt>, this
--   value can be used to retrieve the next page of results. This value is
--   <a>null</a> when there are no more results to return.
ltdrNextToken :: Lens' ListTaskDefinitionsResponse (Maybe Text)

-- | The list of task definition Amazon Resource Name (ARN) entries for the
--   <tt>ListTaskDefintions</tt> request.
ltdrTaskDefinitionArns :: Lens' ListTaskDefinitionsResponse [Text]
instance Eq ListTaskDefinitions
instance Ord ListTaskDefinitions
instance Read ListTaskDefinitions
instance Show ListTaskDefinitions
instance Eq ListTaskDefinitionsResponse
instance Ord ListTaskDefinitionsResponse
instance Read ListTaskDefinitionsResponse
instance Show ListTaskDefinitionsResponse
instance FromJSON ListTaskDefinitionsResponse
instance AWSRequest ListTaskDefinitions
instance ToJSON ListTaskDefinitions
instance ToHeaders ListTaskDefinitions
instance ToQuery ListTaskDefinitions
instance ToPath ListTaskDefinitions


-- | Returns a list of task definition families that are registered to your
--   account. You can filter the results with the <tt>familyPrefix</tt>
--   parameter.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListTaskDefinitionFamilies.html</a>
module Network.AWS.ECS.ListTaskDefinitionFamilies
data ListTaskDefinitionFamilies

-- | <a>ListTaskDefinitionFamilies</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ltdfFamilyPrefix</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ltdfMaxResults</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>ltdfNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listTaskDefinitionFamilies :: ListTaskDefinitionFamilies

-- | The <tt>familyPrefix</tt> is a string that is used to filter the
--   results of <a>ListTaskDefinitionFamilies</a>. If you specify a
--   <tt>familyPrefix</tt>, only task definition family names that begin
--   with the <tt>familyPrefix</tt> string are returned.
ltdfFamilyPrefix :: Lens' ListTaskDefinitionFamilies (Maybe Text)

-- | The maximum number of task definition family results returned by
--   <a>ListTaskDefinitionFamilies</a> in paginated output. When this
--   parameter is used, <tt>ListTaskDefinitions</tt> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <a>ListTaskDefinitionFamilies</a> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter is not used, then <a>ListTaskDefinitionFamilies</a> returns
--   up to 100 results and a <tt>nextToken</tt> value if applicable.
ltdfMaxResults :: Lens' ListTaskDefinitionFamilies (Maybe Int)

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <a>ListTaskDefinitionFamilies</a> request where <tt>maxResults</tt>
--   was used and the results exceeded the value of that parameter.
--   Pagination continues from the end of the previous results that
--   returned the <tt>nextToken</tt> value. This value is <a>null</a> when
--   there are no more results to return.
ltdfNextToken :: Lens' ListTaskDefinitionFamilies (Maybe Text)
data ListTaskDefinitionFamiliesResponse

-- | <a>ListTaskDefinitionFamiliesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ltdfrFamilies</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>ltdfrNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listTaskDefinitionFamiliesResponse :: ListTaskDefinitionFamiliesResponse

-- | The list of task definition family names that match the
--   <a>ListTaskDefinitionFamilies</a> request.
ltdfrFamilies :: Lens' ListTaskDefinitionFamiliesResponse [Text]

-- | The <tt>nextToken</tt> value to include in a future
--   <a>ListTaskDefinitionFamilies</a> request. When the results of a
--   <a>ListTaskDefinitionFamilies</a> request exceed <tt>maxResults</tt>,
--   this value can be used to retrieve the next page of results. This
--   value is <a>null</a> when there are no more results to return.
ltdfrNextToken :: Lens' ListTaskDefinitionFamiliesResponse (Maybe Text)
instance Eq ListTaskDefinitionFamilies
instance Ord ListTaskDefinitionFamilies
instance Read ListTaskDefinitionFamilies
instance Show ListTaskDefinitionFamilies
instance Eq ListTaskDefinitionFamiliesResponse
instance Ord ListTaskDefinitionFamiliesResponse
instance Read ListTaskDefinitionFamiliesResponse
instance Show ListTaskDefinitionFamiliesResponse
instance FromJSON ListTaskDefinitionFamiliesResponse
instance AWSRequest ListTaskDefinitionFamilies
instance ToJSON ListTaskDefinitionFamilies
instance ToHeaders ListTaskDefinitionFamilies
instance ToQuery ListTaskDefinitionFamilies
instance ToPath ListTaskDefinitionFamilies


-- | Lists the services that are running in a specified cluster.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServices.html</a>
module Network.AWS.ECS.ListServices
data ListServices

-- | <a>ListServices</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lsCluster</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lsMaxResults</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>lsNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listServices :: ListServices

-- | The short name or full Amazon Resource Name (ARN) of the cluster that
--   hosts the services you want to list. If you do not specify a cluster,
--   the default cluster is assumed..
lsCluster :: Lens' ListServices (Maybe Text)

-- | The maximum number of container instance results returned by
--   <a>ListServices</a> in paginated output. When this parameter is used,
--   <a>ListServices</a> only returns <tt>maxResults</tt> results in a
--   single page along with a <tt>nextToken</tt> response element. The
--   remaining results of the initial request can be seen by sending
--   another <a>ListServices</a> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter is not used, then <a>ListServices</a> returns up to 100
--   results and a <tt>nextToken</tt> value if applicable.
lsMaxResults :: Lens' ListServices (Maybe Int)

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <a>ListServices</a> request where <tt>maxResults</tt> was used and the
--   results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value. This value is <a>null</a> when there are no
--   more results to return.
lsNextToken :: Lens' ListServices (Maybe Text)
data ListServicesResponse

-- | <a>ListServicesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lsrNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lsrServiceArns</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
listServicesResponse :: ListServicesResponse

-- | The <tt>nextToken</tt> value to include in a future
--   <a>ListServices</a> request. When the results of a <a>ListServices</a>
--   request exceed <tt>maxResults</tt>, this value can be used to retrieve
--   the next page of results. This value is <a>null</a> when there are no
--   more results to return.
lsrNextToken :: Lens' ListServicesResponse (Maybe Text)

-- | The list of full Amazon Resource Name (ARN) entries for each service
--   associated with the specified cluster.
lsrServiceArns :: Lens' ListServicesResponse [Text]
instance Eq ListServices
instance Ord ListServices
instance Read ListServices
instance Show ListServices
instance Eq ListServicesResponse
instance Ord ListServicesResponse
instance Read ListServicesResponse
instance Show ListServicesResponse
instance FromJSON ListServicesResponse
instance AWSRequest ListServices
instance ToJSON ListServices
instance ToHeaders ListServices
instance ToQuery ListServices
instance ToPath ListServices


-- | Returns a list of container instances in a specified cluster.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListContainerInstances.html</a>
module Network.AWS.ECS.ListContainerInstances
data ListContainerInstances

-- | <a>ListContainerInstances</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lciCluster</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lciMaxResults</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>lciNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listContainerInstances :: ListContainerInstances

-- | The short name or full Amazon Resource Name (ARN) of the cluster that
--   hosts the container instances you want to list. If you do not specify
--   a cluster, the default cluster is assumed..
lciCluster :: Lens' ListContainerInstances (Maybe Text)

-- | The maximum number of container instance results returned by
--   <a>ListContainerInstances</a> in paginated output. When this parameter
--   is used, <a>ListContainerInstances</a> only returns
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another
--   <a>ListContainerInstances</a> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If this
--   parameter is not used, then <a>ListContainerInstances</a> returns up
--   to 100 results and a <tt>nextToken</tt> value if applicable.
lciMaxResults :: Lens' ListContainerInstances (Maybe Int)

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <a>ListContainerInstances</a> request where <tt>maxResults</tt> was
--   used and the results exceeded the value of that parameter. Pagination
--   continues from the end of the previous results that returned the
--   <tt>nextToken</tt> value. This value is <a>null</a> when there are no
--   more results to return.
lciNextToken :: Lens' ListContainerInstances (Maybe Text)
data ListContainerInstancesResponse

-- | <a>ListContainerInstancesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lcirContainerInstanceArns</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>lcirNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listContainerInstancesResponse :: ListContainerInstancesResponse

-- | The list of container instance full Amazon Resource Name (ARN) entries
--   for each container instance associated with the specified cluster.
lcirContainerInstanceArns :: Lens' ListContainerInstancesResponse [Text]

-- | The <tt>nextToken</tt> value to include in a future
--   <a>ListContainerInstances</a> request. When the results of a
--   <a>ListContainerInstances</a> request exceed <tt>maxResults</tt>, this
--   value can be used to retrieve the next page of results. This value is
--   <a>null</a> when there are no more results to return.
lcirNextToken :: Lens' ListContainerInstancesResponse (Maybe Text)
instance Eq ListContainerInstances
instance Ord ListContainerInstances
instance Read ListContainerInstances
instance Show ListContainerInstances
instance Eq ListContainerInstancesResponse
instance Ord ListContainerInstancesResponse
instance Read ListContainerInstancesResponse
instance Show ListContainerInstancesResponse
instance FromJSON ListContainerInstancesResponse
instance AWSRequest ListContainerInstances
instance ToJSON ListContainerInstances
instance ToHeaders ListContainerInstances
instance ToQuery ListContainerInstances
instance ToPath ListContainerInstances


-- | Returns a list of existing clusters.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListClusters.html</a>
module Network.AWS.ECS.ListClusters
data ListClusters

-- | <a>ListClusters</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lcMaxResults</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>lcNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listClusters :: ListClusters

-- | The maximum number of cluster results returned by <a>ListClusters</a>
--   in paginated output. When this parameter is used, <a>ListClusters</a>
--   only returns <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. The remaining results of the
--   initial request can be seen by sending another <a>ListClusters</a>
--   request with the returned <tt>nextToken</tt> value. This value can be
--   between 1 and 100. If this parameter is not used, then
--   <a>ListClusters</a> returns up to 100 results and a <tt>nextToken</tt>
--   value if applicable.
lcMaxResults :: Lens' ListClusters (Maybe Int)

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <a>ListClusters</a> request where <tt>maxResults</tt> was used and the
--   results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value. This value is <a>null</a> when there are no
--   more results to return.
lcNextToken :: Lens' ListClusters (Maybe Text)
data ListClustersResponse

-- | <a>ListClustersResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lcrClusterArns</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>lcrNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listClustersResponse :: ListClustersResponse

-- | The list of full Amazon Resource Name (ARN) entries for each cluster
--   associated with your account.
lcrClusterArns :: Lens' ListClustersResponse [Text]

-- | The <tt>nextToken</tt> value to include in a future
--   <a>ListClusters</a> request. When the results of a <a>ListClusters</a>
--   request exceed <tt>maxResults</tt>, this value can be used to retrieve
--   the next page of results. This value is <a>null</a> when there are no
--   more results to return.
lcrNextToken :: Lens' ListClustersResponse (Maybe Text)
instance Eq ListClusters
instance Ord ListClusters
instance Read ListClusters
instance Show ListClusters
instance Eq ListClustersResponse
instance Ord ListClustersResponse
instance Read ListClustersResponse
instance Show ListClustersResponse
instance FromJSON ListClustersResponse
instance AWSRequest ListClusters
instance ToJSON ListClusters
instance ToHeaders ListClusters
instance ToQuery ListClusters
instance ToPath ListClusters


-- | This action is only used by the Amazon EC2 Container Service agent,
--   and it is not intended for use outside of the agent.
--   
--   Returns an endpoint for the Amazon EC2 Container Service agent to poll
--   for updates.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DiscoverPollEndpoint.html</a>
module Network.AWS.ECS.DiscoverPollEndpoint
data DiscoverPollEndpoint

-- | <a>DiscoverPollEndpoint</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dpeCluster</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dpeContainerInstance</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
discoverPollEndpoint :: DiscoverPollEndpoint

-- | The cluster that the container instance belongs to.
dpeCluster :: Lens' DiscoverPollEndpoint (Maybe Text)

-- | The container instance UUID or full Amazon Resource Name (ARN) of the
--   container instance. The ARN contains the 'arn:aws:ecs' namespace,
--   followed by the region of the container instance, the AWS account ID
--   of the container instance owner, the 'container-instance' namespace,
--   and then the container instance UUID. For example,
--   arn:aws:ecs:<i>region</i>:<i>aws_account_id</i>:container-instance/
--   <i>container_instance_UUID</i>.
dpeContainerInstance :: Lens' DiscoverPollEndpoint (Maybe Text)
data DiscoverPollEndpointResponse

-- | <a>DiscoverPollEndpointResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dperEndpoint</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
discoverPollEndpointResponse :: DiscoverPollEndpointResponse

-- | The endpoint for the Amazon ECS agent to poll.
dperEndpoint :: Lens' DiscoverPollEndpointResponse (Maybe Text)
instance Eq DiscoverPollEndpoint
instance Ord DiscoverPollEndpoint
instance Read DiscoverPollEndpoint
instance Show DiscoverPollEndpoint
instance Eq DiscoverPollEndpointResponse
instance Ord DiscoverPollEndpointResponse
instance Read DiscoverPollEndpointResponse
instance Show DiscoverPollEndpointResponse
instance Monoid DiscoverPollEndpointResponse
instance FromJSON DiscoverPollEndpointResponse
instance AWSRequest DiscoverPollEndpoint
instance ToJSON DiscoverPollEndpoint
instance ToHeaders DiscoverPollEndpoint
instance ToQuery DiscoverPollEndpoint
instance ToPath DiscoverPollEndpoint


-- | Describes a specified task or tasks.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeTasks.html</a>
module Network.AWS.ECS.DescribeTasks
data DescribeTasks

-- | <a>DescribeTasks</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dtCluster</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dtTasks</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeTasks :: DescribeTasks

-- | The short name or full Amazon Resource Name (ARN) of the cluster that
--   hosts the task you want to describe. If you do not specify a cluster,
--   the default cluster is assumed.
dtCluster :: Lens' DescribeTasks (Maybe Text)

-- | A space-separated list of task UUIDs or full Amazon Resource Name
--   (ARN) entries.
dtTasks :: Lens' DescribeTasks [Text]
data DescribeTasksResponse

-- | <a>DescribeTasksResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dtrFailures</a> <tt>::</tt> [<a>Failure</a>]</li>
--   <li><a>dtrTasks</a> <tt>::</tt> [<a>Task</a>]</li>
--   </ul>
describeTasksResponse :: DescribeTasksResponse
dtrFailures :: Lens' DescribeTasksResponse [Failure]

-- | The list of tasks.
dtrTasks :: Lens' DescribeTasksResponse [Task]
instance Eq DescribeTasks
instance Ord DescribeTasks
instance Read DescribeTasks
instance Show DescribeTasks
instance Eq DescribeTasksResponse
instance Read DescribeTasksResponse
instance Show DescribeTasksResponse
instance FromJSON DescribeTasksResponse
instance AWSRequest DescribeTasks
instance ToJSON DescribeTasks
instance ToHeaders DescribeTasks
instance ToQuery DescribeTasks
instance ToPath DescribeTasks


-- | Describes a task definition. You can specify a <tt>family</tt> and
--   <tt>revision</tt> to find information on a specific task definition,
--   or you can simply specify the family to find the latest revision in
--   that family.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeTaskDefinition.html</a>
module Network.AWS.ECS.DescribeTaskDefinition
data DescribeTaskDefinition

-- | <a>DescribeTaskDefinition</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dtdTaskDefinition</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
describeTaskDefinition :: Text -> DescribeTaskDefinition

-- | The <tt>family</tt> for the latest revision, <tt>family</tt> and
--   <tt>revision</tt> ('family:revision') for a specific revision in the
--   family, or full Amazon Resource Name (ARN) of the task definition that
--   you want to describe.
dtdTaskDefinition :: Lens' DescribeTaskDefinition Text
data DescribeTaskDefinitionResponse

-- | <a>DescribeTaskDefinitionResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dtdr1TaskDefinition</a> <tt>::</tt> <a>Maybe</a>
--   <a>TaskDefinition</a></li>
--   </ul>
describeTaskDefinitionResponse :: DescribeTaskDefinitionResponse

-- | The full task definition description.
dtdr1TaskDefinition :: Lens' DescribeTaskDefinitionResponse (Maybe TaskDefinition)
instance Eq DescribeTaskDefinition
instance Ord DescribeTaskDefinition
instance Read DescribeTaskDefinition
instance Show DescribeTaskDefinition
instance Monoid DescribeTaskDefinition
instance IsString DescribeTaskDefinition
instance Eq DescribeTaskDefinitionResponse
instance Read DescribeTaskDefinitionResponse
instance Show DescribeTaskDefinitionResponse
instance FromJSON DescribeTaskDefinitionResponse
instance AWSRequest DescribeTaskDefinition
instance ToJSON DescribeTaskDefinition
instance ToHeaders DescribeTaskDefinition
instance ToQuery DescribeTaskDefinition
instance ToPath DescribeTaskDefinition


-- | Describes the specified services running in your cluster.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeServices.html</a>
module Network.AWS.ECS.DescribeServices
data DescribeServices

-- | <a>DescribeServices</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ds1Cluster</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ds1Services</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeServices :: DescribeServices

-- | The name of the cluster that hosts the service you want to describe.
ds1Cluster :: Lens' DescribeServices (Maybe Text)

-- | A list of services you want to describe.
ds1Services :: Lens' DescribeServices [Text]
data DescribeServicesResponse

-- | <a>DescribeServicesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsrFailures</a> <tt>::</tt> [<a>Failure</a>]</li>
--   <li><a>dsrServices</a> <tt>::</tt> [<a>ContainerService</a>]</li>
--   </ul>
describeServicesResponse :: DescribeServicesResponse

-- | Any failures associated with the call.
dsrFailures :: Lens' DescribeServicesResponse [Failure]

-- | The list of services described.
dsrServices :: Lens' DescribeServicesResponse [ContainerService]
instance Eq DescribeServices
instance Ord DescribeServices
instance Read DescribeServices
instance Show DescribeServices
instance Eq DescribeServicesResponse
instance Read DescribeServicesResponse
instance Show DescribeServicesResponse
instance FromJSON DescribeServicesResponse
instance AWSRequest DescribeServices
instance ToJSON DescribeServices
instance ToHeaders DescribeServices
instance ToQuery DescribeServices
instance ToPath DescribeServices


-- | Describes Amazon EC2 Container Service container instances. Returns
--   metadata about registered and remaining resources on each container
--   instance requested.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeContainerInstances.html</a>
module Network.AWS.ECS.DescribeContainerInstances
data DescribeContainerInstances

-- | <a>DescribeContainerInstances</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dciCluster</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dciContainerInstances</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeContainerInstances :: DescribeContainerInstances

-- | The short name or full Amazon Resource Name (ARN) of the cluster that
--   hosts the container instances you want to describe. If you do not
--   specify a cluster, the default cluster is assumed.
dciCluster :: Lens' DescribeContainerInstances (Maybe Text)

-- | A space-separated list of container instance UUIDs or full Amazon
--   Resource Name (ARN) entries.
dciContainerInstances :: Lens' DescribeContainerInstances [Text]
data DescribeContainerInstancesResponse

-- | <a>DescribeContainerInstancesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dcirContainerInstances</a> <tt>::</tt>
--   [<a>ContainerInstance</a>]</li>
--   <li><a>dcirFailures</a> <tt>::</tt> [<a>Failure</a>]</li>
--   </ul>
describeContainerInstancesResponse :: DescribeContainerInstancesResponse

-- | The list of container instances.
dcirContainerInstances :: Lens' DescribeContainerInstancesResponse [ContainerInstance]
dcirFailures :: Lens' DescribeContainerInstancesResponse [Failure]
instance Eq DescribeContainerInstances
instance Ord DescribeContainerInstances
instance Read DescribeContainerInstances
instance Show DescribeContainerInstances
instance Eq DescribeContainerInstancesResponse
instance Read DescribeContainerInstancesResponse
instance Show DescribeContainerInstancesResponse
instance FromJSON DescribeContainerInstancesResponse
instance AWSRequest DescribeContainerInstances
instance ToJSON DescribeContainerInstances
instance ToHeaders DescribeContainerInstances
instance ToQuery DescribeContainerInstances
instance ToPath DescribeContainerInstances


-- | Describes one or more of your clusters.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeClusters.html</a>
module Network.AWS.ECS.DescribeClusters
data DescribeClusters

-- | <a>DescribeClusters</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dcClusters</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeClusters :: DescribeClusters

-- | A space-separated list of cluster names or full cluster Amazon
--   Resource Name (ARN) entries. If you do not specify a cluster, the
--   default cluster is assumed.
dcClusters :: Lens' DescribeClusters [Text]
data DescribeClustersResponse

-- | <a>DescribeClustersResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dcrClusters</a> <tt>::</tt> [<a>Cluster</a>]</li>
--   <li><a>dcrFailures</a> <tt>::</tt> [<a>Failure</a>]</li>
--   </ul>
describeClustersResponse :: DescribeClustersResponse

-- | The list of clusters.
dcrClusters :: Lens' DescribeClustersResponse [Cluster]
dcrFailures :: Lens' DescribeClustersResponse [Failure]
instance Eq DescribeClusters
instance Ord DescribeClusters
instance Read DescribeClusters
instance Show DescribeClusters
instance Monoid DescribeClusters
instance Semigroup DescribeClusters
instance Eq DescribeClustersResponse
instance Read DescribeClustersResponse
instance Show DescribeClustersResponse
instance FromJSON DescribeClustersResponse
instance AWSRequest DescribeClusters
instance ToJSON DescribeClusters
instance ToHeaders DescribeClusters
instance ToQuery DescribeClusters
instance ToPath DescribeClusters
instance IsList DescribeClusters


-- | NOT YET IMPLEMENTED.
--   
--   Deregisters the specified task definition. You will no longer be able
--   to run tasks from this definition after deregistration.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeregisterTaskDefinition.html</a>
module Network.AWS.ECS.DeregisterTaskDefinition
data DeregisterTaskDefinition

-- | <a>DeregisterTaskDefinition</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dtd1TaskDefinition</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deregisterTaskDefinition :: Text -> DeregisterTaskDefinition

-- | The <tt>family</tt> and <tt>revision</tt> ('family:revision') or full
--   Amazon Resource Name (ARN) of the task definition that you want to
--   deregister.
dtd1TaskDefinition :: Lens' DeregisterTaskDefinition Text
data DeregisterTaskDefinitionResponse

-- | <a>DeregisterTaskDefinitionResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dtdrTaskDefinition</a> <tt>::</tt> <a>Maybe</a>
--   <a>TaskDefinition</a></li>
--   </ul>
deregisterTaskDefinitionResponse :: DeregisterTaskDefinitionResponse

-- | The full description of the deregistered task.
dtdrTaskDefinition :: Lens' DeregisterTaskDefinitionResponse (Maybe TaskDefinition)
instance Eq DeregisterTaskDefinition
instance Ord DeregisterTaskDefinition
instance Read DeregisterTaskDefinition
instance Show DeregisterTaskDefinition
instance Monoid DeregisterTaskDefinition
instance IsString DeregisterTaskDefinition
instance Eq DeregisterTaskDefinitionResponse
instance Read DeregisterTaskDefinitionResponse
instance Show DeregisterTaskDefinitionResponse
instance FromJSON DeregisterTaskDefinitionResponse
instance AWSRequest DeregisterTaskDefinition
instance ToJSON DeregisterTaskDefinition
instance ToHeaders DeregisterTaskDefinition
instance ToQuery DeregisterTaskDefinition
instance ToPath DeregisterTaskDefinition


-- | Deregisters an Amazon ECS container instance from the specified
--   cluster. This instance will no longer be available to run tasks.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeregisterContainerInstance.html</a>
module Network.AWS.ECS.DeregisterContainerInstance
data DeregisterContainerInstance

-- | <a>DeregisterContainerInstance</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dci1Cluster</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dci1ContainerInstance</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>dci1Force</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   </ul>
deregisterContainerInstance :: Text -> DeregisterContainerInstance

-- | The short name or full Amazon Resource Name (ARN) of the cluster that
--   hosts the container instance you want to deregister. If you do not
--   specify a cluster, the default cluster is assumed.
dci1Cluster :: Lens' DeregisterContainerInstance (Maybe Text)

-- | The container instance UUID or full Amazon Resource Name (ARN) of the
--   container instance you want to deregister. The ARN contains the
--   'arn:aws:ecs' namespace, followed by the region of the container
--   instance, the AWS account ID of the container instance owner, the
--   'container-instance' namespace, and then the container instance UUID.
--   For example,
--   arn:aws:ecs:<i>region</i>:<i>aws_account_id</i>:container-instance/<i>container_instance_UUID</i>.
dci1ContainerInstance :: Lens' DeregisterContainerInstance Text

-- | Force the deregistration of the container instance. You can use the
--   <tt>force</tt> parameter if you have several tasks running on a
--   container instance and you don't want to run <tt>StopTask</tt> for
--   each task before deregistering the container instance.
dci1Force :: Lens' DeregisterContainerInstance (Maybe Bool)
data DeregisterContainerInstanceResponse

-- | <a>DeregisterContainerInstanceResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dcirContainerInstance</a> <tt>::</tt> <a>Maybe</a>
--   <a>ContainerInstance</a></li>
--   </ul>
deregisterContainerInstanceResponse :: DeregisterContainerInstanceResponse
dcirContainerInstance :: Lens' DeregisterContainerInstanceResponse (Maybe ContainerInstance)
instance Eq DeregisterContainerInstance
instance Ord DeregisterContainerInstance
instance Read DeregisterContainerInstance
instance Show DeregisterContainerInstance
instance Eq DeregisterContainerInstanceResponse
instance Read DeregisterContainerInstanceResponse
instance Show DeregisterContainerInstanceResponse
instance FromJSON DeregisterContainerInstanceResponse
instance AWSRequest DeregisterContainerInstance
instance ToJSON DeregisterContainerInstance
instance ToHeaders DeregisterContainerInstance
instance ToQuery DeregisterContainerInstance
instance ToPath DeregisterContainerInstance


-- | Deletes a specified service within a cluster.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeleteService.html</a>
module Network.AWS.ECS.DeleteService
data DeleteService

-- | <a>DeleteService</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsCluster</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dsService</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteService :: Text -> DeleteService

-- | The name of the cluster that hosts the service you want to delete.
dsCluster :: Lens' DeleteService (Maybe Text)

-- | The name of the service you want to delete.
dsService :: Lens' DeleteService Text
data DeleteServiceResponse

-- | <a>DeleteServiceResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsrService</a> <tt>::</tt> <a>Maybe</a>
--   <a>ContainerService</a></li>
--   </ul>
deleteServiceResponse :: DeleteServiceResponse
dsrService :: Lens' DeleteServiceResponse (Maybe ContainerService)
instance Eq DeleteService
instance Ord DeleteService
instance Read DeleteService
instance Show DeleteService
instance Eq DeleteServiceResponse
instance Read DeleteServiceResponse
instance Show DeleteServiceResponse
instance FromJSON DeleteServiceResponse
instance AWSRequest DeleteService
instance ToJSON DeleteService
instance ToHeaders DeleteService
instance ToQuery DeleteService
instance ToPath DeleteService


-- | Deletes the specified cluster. You must deregister all container
--   instances from this cluster before you may delete it. You can list the
--   container instances in a cluster with <tt>ListContainerInstances</tt>
--   and deregister them with <tt>DeregisterContainerInstance</tt>.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeleteCluster.html</a>
module Network.AWS.ECS.DeleteCluster
data DeleteCluster

-- | <a>DeleteCluster</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dcCluster</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteCluster :: Text -> DeleteCluster

-- | The short name or full Amazon Resource Name (ARN) of the cluster that
--   you want to delete.
dcCluster :: Lens' DeleteCluster Text
data DeleteClusterResponse

-- | <a>DeleteClusterResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dcrCluster</a> <tt>::</tt> <a>Maybe</a> <a>Cluster</a></li>
--   </ul>
deleteClusterResponse :: DeleteClusterResponse

-- | The full description of the deleted cluster.
dcrCluster :: Lens' DeleteClusterResponse (Maybe Cluster)
instance Eq DeleteCluster
instance Ord DeleteCluster
instance Read DeleteCluster
instance Show DeleteCluster
instance Monoid DeleteCluster
instance IsString DeleteCluster
instance Eq DeleteClusterResponse
instance Read DeleteClusterResponse
instance Show DeleteClusterResponse
instance FromJSON DeleteClusterResponse
instance AWSRequest DeleteCluster
instance ToJSON DeleteCluster
instance ToHeaders DeleteCluster
instance ToQuery DeleteCluster
instance ToPath DeleteCluster


-- | Runs and maintains a desired number of tasks from a specified task
--   definition. If the number of tasks running in a service drops below
--   <tt>desiredCount</tt>, Amazon ECS will spawn another instantiation of
--   the task in the specified cluster.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateService.html</a>
module Network.AWS.ECS.CreateService
data CreateService

-- | <a>CreateService</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cs1ClientToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cs1Cluster</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cs1DesiredCount</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>cs1LoadBalancers</a> <tt>::</tt> [<a>LoadBalancer</a>]</li>
--   <li><a>cs1Role</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cs1ServiceName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cs1TaskDefinition</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
createService :: Text -> CreateService

-- | Unique, case-sensitive identifier you provide to ensure the
--   idempotency of the request. Up to 32 ASCII characters are allowed.
cs1ClientToken :: Lens' CreateService (Maybe Text)

-- | The short name or full Amazon Resource Name (ARN) of the cluster that
--   you want to run your service on. If you do not specify a cluster, the
--   default cluster is assumed.
cs1Cluster :: Lens' CreateService (Maybe Text)

-- | The number of instantiations of the specified task definition that you
--   would like to place and keep running on your cluster.
cs1DesiredCount :: Lens' CreateService (Maybe Int)

-- | A list of load balancer objects, containing the load balancer name,
--   the container name (as it appears in a container definition), and the
--   container port to access from the load balancer.
cs1LoadBalancers :: Lens' CreateService [LoadBalancer]

-- | The name or full Amazon Resource Name (ARN) of the IAM role that
--   allows your Amazon ECS container agent to make calls to your load
--   balancer on your behalf. This parameter is only required if you are
--   using a load balancer with your service.
cs1Role :: Lens' CreateService (Maybe Text)

-- | The name of your service. Up to 255 letters (uppercase and lowercase),
--   numbers, hyphens, and underscores are allowed.
cs1ServiceName :: Lens' CreateService Text

-- | The <tt>family</tt> and <tt>revision</tt> ('family:revision') or full
--   Amazon Resource Name (ARN) of the task definition that you want to run
--   in your service.
cs1TaskDefinition :: Lens' CreateService (Maybe Text)
data CreateServiceResponse

-- | <a>CreateServiceResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>csrService</a> <tt>::</tt> <a>Maybe</a>
--   <a>ContainerService</a></li>
--   </ul>
createServiceResponse :: CreateServiceResponse

-- | The full description of your service following the create call.
csrService :: Lens' CreateServiceResponse (Maybe ContainerService)
instance Eq CreateService
instance Read CreateService
instance Show CreateService
instance Eq CreateServiceResponse
instance Read CreateServiceResponse
instance Show CreateServiceResponse
instance FromJSON CreateServiceResponse
instance AWSRequest CreateService
instance ToJSON CreateService
instance ToHeaders CreateService
instance ToQuery CreateService
instance ToPath CreateService


-- | Creates a new Amazon ECS cluster. By default, your account will
--   receive a 'default' cluster when you launch your first container
--   instance. However, you can create your own cluster with a unique name
--   with the <a>CreateCluster</a> action.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateCluster.html</a>
module Network.AWS.ECS.CreateCluster
data CreateCluster

-- | <a>CreateCluster</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ccClusterName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
createCluster :: CreateCluster

-- | The name of your cluster. If you do not specify a name for your
--   cluster, you will create a cluster named 'default'. Up to 255 letters
--   (uppercase and lowercase), numbers, hyphens, and underscores are
--   allowed.
ccClusterName :: Lens' CreateCluster (Maybe Text)
data CreateClusterResponse

-- | <a>CreateClusterResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ccrCluster</a> <tt>::</tt> <a>Maybe</a> <a>Cluster</a></li>
--   </ul>
createClusterResponse :: CreateClusterResponse

-- | The full description of your new cluster.
ccrCluster :: Lens' CreateClusterResponse (Maybe Cluster)
instance Eq CreateCluster
instance Ord CreateCluster
instance Read CreateCluster
instance Show CreateCluster
instance Monoid CreateCluster
instance Eq CreateClusterResponse
instance Read CreateClusterResponse
instance Show CreateClusterResponse
instance FromJSON CreateClusterResponse
instance AWSRequest CreateCluster
instance ToJSON CreateCluster
instance ToHeaders CreateCluster
instance ToQuery CreateCluster
instance ToPath CreateCluster


-- | Amazon EC2 Container Service is a highly scalable, high performance
--   container management service that supports Docker containers and
--   allows you to easily run distributed applications on a managed cluster
--   of Amazon EC2 instances. Amazon EC2 Container Service lets you launch
--   and stop container-enabled applications with simple API calls, allows
--   you to query the state of your cluster from a centralized service, and
--   gives you access to many familiar Amazon EC2 features like security
--   groups, EBS volumes and IAM roles. You can use EC2 Container Service
--   to schedule the placement of containers across your cluster based on
--   your resource needs, isolation policies, and availability
--   requirements. Amazon EC2 Container Service eliminates the need for you
--   to operate your own cluster management and configuration management
--   systems or worry about scaling your management infrastructure.
module Network.AWS.ECS
