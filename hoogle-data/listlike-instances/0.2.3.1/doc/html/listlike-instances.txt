-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Extra instances of the ListLike class
--   
--   Provides ListLike instances for Vector and Text types
@package listlike-instances
@version 0.2.3.1


-- | ListLike instance for any type supporting the
--   <tt>Data.Vector.Generic</tt> interface. To avoid collisions with other
--   Vector instances, this module must be imported directly.
module Data.ListLike.Vector.Generic
instance [overlap ok] (Eq (v Char), Vector v Char) => StringLike (v Char)
instance [overlap ok] (Monoid (v a), Eq (v a), Vector v a) => ListLike (v a) a
instance [overlap ok] Vector v a => FoldableLL (v a) a

module Data.ListLike.Vector.Vector
instance StringLike (Vector Char)
instance ListLike (Vector a) a
instance FoldableLL (Vector a) a

module Data.ListLike.Vector.Unboxed
instance StringLike (Vector Char)
instance Unbox a => ListLike (Vector a) a
instance Unbox a => FoldableLL (Vector a) a

module Data.ListLike.Vector.Storable
instance StringLike (Vector Char)
instance Storable a => ListLike (Vector a) a
instance Storable a => FoldableLL (Vector a) a


-- | ListLike instances for several <tt>Data.Vector</tt> types. The
--   <a>Generic</a> instances are not exported from this module in order to
--   prevent collisions.
module Data.ListLike.Vector

module Data.ListLike.Text.TextLazy
instance StringLike Text
instance ListLikeIO Text Char
instance ListLike Text Char
instance FoldableLL Text Char

module Data.ListLike.Text.Text
instance StringLike Text
instance ListLikeIO Text Char
instance ListLike Text Char
instance FoldableLL Text Char

module Data.ListLike.Text
