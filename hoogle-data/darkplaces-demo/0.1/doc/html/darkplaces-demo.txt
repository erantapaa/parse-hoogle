-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Utility and parser for DarkPlaces demo files
--   
@package darkplaces-demo
@version 0.1

module DarkPlaces.Types
data QVector
data ClientStatsEnum
HealthStat :: ClientStatsEnum
WeaponStat :: ClientStatsEnum
AmmoStat :: ClientStatsEnum
ArmorStat :: ClientStatsEnum
WeaponFrameStat :: ClientStatsEnum
ShellsStat :: ClientStatsEnum
NailsStat :: ClientStatsEnum
RocketsStat :: ClientStatsEnum
CellsStat :: ClientStatsEnum
ActiveWeaponStat :: ClientStatsEnum
TotalSecretsStat :: ClientStatsEnum
TotalMonstersStat :: ClientStatsEnum
SecretsStat :: ClientStatsEnum
MonstersStat :: ClientStatsEnum
ItemsStat :: ClientStatsEnum
ViewHeightStat :: ClientStatsEnum
ViewZoomStat :: ClientStatsEnum
type ClientStatsList = [(ClientStatsEnum, Int)]
data ProtocolVersion
ProtocolQuake :: ProtocolVersion
ProtocolQuakeWorld :: ProtocolVersion
ProtocolQuakeDP :: ProtocolVersion
ProtocolNehahraMovie :: ProtocolVersion
ProtocolNehahraBJP :: ProtocolVersion
ProtocolNehahraBJP2 :: ProtocolVersion
ProtocolNehahraBJP3 :: ProtocolVersion
ProtocolDarkplaces1 :: ProtocolVersion
ProtocolDarkplaces2 :: ProtocolVersion
ProtocolDarkplaces3 :: ProtocolVersion
ProtocolDarkplaces4 :: ProtocolVersion
ProtocolDarkplaces5 :: ProtocolVersion
ProtocolDarkplaces6 :: ProtocolVersion
ProtocolDarkplaces7 :: ProtocolVersion
data GameMode
GameNormal :: GameMode
GameHipnotic :: GameMode
GameRogue :: GameMode
GameQuoth :: GameMode
GameNehahra :: GameMode
GameNexuiz :: GameMode
GameXonotic :: GameMode
GameTransfusion :: GameMode
GameGoodVsBad2 :: GameMode
GameTeu :: GameMode
GameBattlemech :: GameMode
GameZymotic :: GameMode
GameSetheral :: GameMode
GameTenebrae :: GameMode
GameNeoteric :: GameMode
GameOpenquartz :: GameMode
GamePrydon :: GameMode
GameDeluxeQuake :: GameMode
GameThehunTed :: GameMode
GameDefeatIndetail2 :: GameMode
GameDarsana :: GameMode
GameContagionTheory :: GameMode
GameEdu2p :: GameMode
GameProphecy :: GameMode
GameBloodOmnicide :: GameMode
GameSteelStorm :: GameMode
GameSteelStorm2 :: GameMode
GameSsammo :: GameMode
GameTomesofMephistopheles :: GameMode
GameStrapBomb :: GameMode
GameMoonhelm :: GameMode
GameVoreTournament :: GameMode
GameCount :: GameMode
type ErrorInfo = (ByteOffset, String)
consQVector :: Float -> Float -> Float -> QVector
qvectorFromList :: [Float] -> Maybe QVector
protocolVersionFromNum :: Integral a => a -> Maybe ProtocolVersion
statsFromNum :: Integral a => a -> Maybe ClientStatsEnum
instance Show QVector
instance Eq QVector
instance Ord QVector
instance Show ClientStatsEnum
instance Eq ClientStatsEnum
instance Enum ClientStatsEnum
instance Bounded ClientStatsEnum
instance Show ProtocolVersion
instance Eq ProtocolVersion
instance Ord ProtocolVersion
instance Bounded ProtocolVersion
instance Enum ProtocolVersion
instance Show GameMode
instance Eq GameMode
instance Enum GameMode
instance Bounded GameMode

module DarkPlaces.PacketParser
data DPServerPacket
DPNop :: DPServerPacket
DPDisconnect :: DPServerPacket
DPUpdateStat :: (Either Word8 ClientStatsEnum) -> Int -> DPServerPacket
DPVersion :: (Maybe ProtocolVersion) -> DPServerPacket
DPSetView :: Word16 -> DPServerPacket
DPSound :: DPServerPacket
DPTime :: Float -> DPServerPacket
DPPrint :: ByteString -> DPServerPacket
DPStuffText :: ByteString -> DPServerPacket
DPSetAngle :: SetAngleData -> DPServerPacket
DPServerInfo :: (Either Word32 ServerInfoData) -> DPServerPacket
DPLightStyle :: Word8 -> ByteString -> DPServerPacket
DPUpdateName :: Word8 -> ByteString -> DPServerPacket
DPUpdateFrags :: Word8 -> Int16 -> DPServerPacket
DPClientData :: Word32 -> ClientDataPacket -> DPServerPacket
DPStopSound :: Word16 -> DPServerPacket
DPUpdateColors :: Word8 -> Word8 -> DPServerPacket
DPParticle :: DPServerPacket
DPDamage :: Int -> Int -> QVector -> DPServerPacket
DPSpawnStatic :: DPServerPacket
DPSpawnBaseline :: DPServerPacket
DPTempEntity :: DPServerPacket
DPSetPause :: DPServerPacket
DPSignonNum :: Word8 -> DPServerPacket
DPCenterPrint :: DPServerPacket
DPKilledMonster :: DPServerPacket
DPFoundSecret :: DPServerPacket
DPSpawnStaticSound :: DPServerPacket
DPIntermission :: DPServerPacket
DPFinale :: ByteString -> DPServerPacket
DPCDTrack :: Word8 -> Word8 -> DPServerPacket
DPSellScreen :: DPServerPacket
DPCutScene :: DPServerPacket
DPShowlmp :: DPServerPacket
DPHidelmp :: DPServerPacket
DPSkybox :: DPServerPacket
DPDownloadData :: Word32 -> Word16 -> ByteString -> DPServerPacket
DPUpdateStatUbyte :: (Either Word8 ClientStatsEnum) -> Int -> DPServerPacket
DPSpawnStaticSound2 :: QVector -> Word16 -> Word8 -> Word8 -> DPServerPacket
data ProtocolVersion
ProtocolQuake :: ProtocolVersion
ProtocolQuakeWorld :: ProtocolVersion
ProtocolQuakeDP :: ProtocolVersion
ProtocolNehahraMovie :: ProtocolVersion
ProtocolNehahraBJP :: ProtocolVersion
ProtocolNehahraBJP2 :: ProtocolVersion
ProtocolNehahraBJP3 :: ProtocolVersion
ProtocolDarkplaces1 :: ProtocolVersion
ProtocolDarkplaces2 :: ProtocolVersion
ProtocolDarkplaces3 :: ProtocolVersion
ProtocolDarkplaces4 :: ProtocolVersion
ProtocolDarkplaces5 :: ProtocolVersion
ProtocolDarkplaces6 :: ProtocolVersion
ProtocolDarkplaces7 :: ProtocolVersion
data ServerInfoData
QWServerInfoData :: ServerInfoData
DPServerInfoData :: ProtocolVersion -> Word8 -> Word8 -> ByteString -> [ByteString] -> [ByteString] -> ServerInfoData
dpserverProtocol :: ServerInfoData -> ProtocolVersion
dpmaxClients :: ServerInfoData -> Word8
dpgameType :: ServerInfoData -> Word8
dpsignonMessage :: ServerInfoData -> ByteString
dpmodelsPrecached :: ServerInfoData -> [ByteString]
dpsoundsPrecached :: ServerInfoData -> [ByteString]
type PacketOrError = Either Word8 DPServerPacket
defaultDemoState :: ServerProtocolState
parsePacket :: ServerProtocolStateM PacketOrError
parsePackets :: ServerProtocolStateM [PacketOrError]
iterPacketsWithState :: ByteString -> ServerProtocolState -> [Either ErrorInfo (PacketOrError, ServerProtocolState)]
iterPackets :: ByteString -> ServerProtocolState -> ([Either ErrorInfo PacketOrError], ServerProtocolState)
listPackets :: ByteString -> ServerProtocolState -> Either ErrorInfo ([PacketOrError], ServerProtocolState)
instance Show ServerInfoData
instance Eq ServerInfoData
instance Show SetAngleData
instance Eq SetAngleData
instance Show ClientDataPacket
instance Eq ClientDataPacket
instance Show DPServerPacket
instance Eq DPServerPacket
instance Show ServerProtocolState
instance Eq ServerProtocolState

module DarkPlaces.Demo
getDemoMessage :: Get (QVector, ByteString)
getDemoMessages :: Get [(QVector, ByteString)]
iterDemoMessages :: ByteString -> [Either ErrorInfo (QVector, ByteString)]
demoFileMessages :: ByteString -> [Either ErrorInfo (QVector, ByteString)]
demoFilePackets :: ByteString -> [Either ErrorInfo PacketOrError]

module DarkPlaces.DemoMetadata
data DemoMetadata
MapName :: String -> DemoMetadata
DemoTime :: Float -> DemoMetadata
DemoMessage :: Float -> ByteString -> DemoMetadata
CurlDownload :: ByteString -> ByteString -> ByteString -> DemoMetadata
type MetadataList = [DemoMetadata]
getMetadata :: ByteString -> [Either ErrorInfo DemoMetadata]
getMapname :: ByteString -> Either ErrorInfo (Maybe String)
instance Show DemoMetadata
instance Eq DemoMetadata
instance Show DTimeState
instance Eq DTimeState
