-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | bug tracking plugin for clckwrks
--   
--   bug tracking plugin for clckwrks
@package clckwrks-plugin-bugs
@version 0.7.5

module Paths_clckwrks_plugin_bugs
version :: Version
getBinDir :: IO FilePath
getLibDir :: IO FilePath
getDataDir :: IO FilePath
getLibexecDir :: IO FilePath
getDataFileName :: FilePath -> IO FilePath
getSysconfDir :: IO FilePath

module Clckwrks.Bugs.Types
newtype BugId
BugId :: Integer -> BugId
unBugId :: BugId -> Integer
newtype BugTag
BugTag :: Text -> BugTag
tagText :: BugTag -> Text
newtype MilestoneId
MilestoneId :: Integer -> MilestoneId
unMilestoneId :: MilestoneId -> Integer
data Milestone
Milestone :: MilestoneId -> Text -> Maybe UTCTime -> Maybe UTCTime -> Milestone
milestoneId :: Milestone -> MilestoneId
milestoneTitle :: Milestone -> Text
milestoneTarget :: Milestone -> Maybe UTCTime
milestoneReached :: Milestone -> Maybe UTCTime
newtype TargetDate
TargetDate :: UTCTime -> TargetDate
data BugStatus
New :: BugStatus
Accepted :: BugStatus
Closed :: BugStatus
Invalid :: BugStatus
WontFix :: BugStatus
data Bug_0
Bug_0 :: BugId -> UserId -> UTCTime -> BugStatus -> Maybe UserId -> Text -> Markup -> Set BugTag -> Maybe MilestoneId -> Bug_0
bugId_0 :: Bug_0 -> BugId
bugSubmittor_0 :: Bug_0 -> UserId
bugSubmitted_0 :: Bug_0 -> UTCTime
bugStatus_0 :: Bug_0 -> BugStatus
bugAssigned_0 :: Bug_0 -> Maybe UserId
bugTitle_0 :: Bug_0 -> Text
bugBody_0 :: Bug_0 -> Markup
bugTags_0 :: Bug_0 -> Set BugTag
bugMilestone_0 :: Bug_0 -> Maybe MilestoneId
data BugMeta
BugMeta :: BugId -> UserId -> UTCTime -> BugStatus -> Maybe UserId -> Text -> Set BugTag -> Maybe MilestoneId -> BugMeta
bugId :: BugMeta -> BugId
bugSubmitter :: BugMeta -> UserId
bugSubmitted :: BugMeta -> UTCTime
bugStatus :: BugMeta -> BugStatus
bugAssigned :: BugMeta -> Maybe UserId
bugTitle :: BugMeta -> Text
bugTags :: BugMeta -> Set BugTag
bugMilestone :: BugMeta -> Maybe MilestoneId
data Bug
Bug :: BugMeta -> Markup -> Bug
bugMeta :: Bug -> BugMeta
bugBody :: Bug -> Markup
instance Indexable BugMeta
instance Indexable Bug
instance Migrate Bug
instance SafeCopy Bug
instance Typeable Bug
instance Eq Bug
instance Ord Bug
instance Read Bug
instance Show Bug
instance Data Bug
instance SafeCopy BugMeta
instance Typeable BugMeta
instance Eq BugMeta
instance Ord BugMeta
instance Read BugMeta
instance Show BugMeta
instance Data BugMeta
instance SafeCopy Bug_0
instance Typeable Bug_0
instance Eq Bug_0
instance Ord Bug_0
instance Read Bug_0
instance Show Bug_0
instance Data Bug_0
instance SafeCopy BugStatus
instance Typeable TargetDate
instance Typeable BugStatus
instance Eq TargetDate
instance Ord TargetDate
instance Show TargetDate
instance Data TargetDate
instance Eq BugStatus
instance Ord BugStatus
instance Read BugStatus
instance Show BugStatus
instance Data BugStatus
instance Bounded BugStatus
instance Enum BugStatus
instance Indexable Milestone
instance SafeCopy Milestone
instance Typeable BugId
instance Typeable BugTag
instance Typeable MilestoneId
instance Typeable Milestone
instance Eq BugId
instance Ord BugId
instance Read BugId
instance Show BugId
instance Data BugId
instance PathInfo BugId
instance Eq BugTag
instance Ord BugTag
instance Read BugTag
instance Show BugTag
instance Data BugTag
instance PathInfo BugTag
instance Eq MilestoneId
instance Ord MilestoneId
instance Read MilestoneId
instance Show MilestoneId
instance Data MilestoneId
instance PathInfo MilestoneId
instance Enum MilestoneId
instance Eq Milestone
instance Ord Milestone
instance Read Milestone
instance Show Milestone
instance Data Milestone
instance SafeCopy MilestoneId
instance SafeCopy BugTag
instance SafeCopy BugId

module Clckwrks.Bugs.Acid
data BugsState_0
BugsState_0 :: BugId -> IxSet Bug -> BugsState_0
nextBugId_0 :: BugsState_0 -> BugId
bugs_0 :: BugsState_0 -> IxSet Bug

-- | <a>BugsState</a> stores all the bugs
data BugsState
BugsState :: BugId -> IxSet Bug -> MilestoneId -> IxSet Milestone -> BugsState
nextBugId :: BugsState -> BugId
bugs :: BugsState -> IxSet Bug
nextMilestoneId :: BugsState -> MilestoneId
milestones :: BugsState -> IxSet Milestone

-- | initial <a>BugsState</a>
initialBugsState :: BugsState

-- | get the next unused <tt>BugsId</tt>
genBugId :: Update BugsState BugId

-- | get <tt>Bugs</tt> by <a>BugId</a>
getBugById :: BugId -> Query BugsState (Maybe Bug)

-- | store <tt>Bugs</tt> in the state. Will overwrite an existing entry
--   with the same <a>BugId</a>
putBug :: Bug -> Update BugsState ()
allBugIds :: Query BugsState [BugId]
data SortBugsBy
SortByBugId :: SortBugsBy
data SortOrder a
Asc :: a -> SortOrder a
Desc :: a -> SortOrder a
allBugMeta :: SortOrder SortBugsBy -> Query BugsState [BugMeta]

-- | add a new, empty <a>Milestone</a> to the database and return the
--   <a>MilestoneId</a>
newMilestone :: Update BugsState MilestoneId

-- | get the milestones
getMilestones :: Query BugsState [Milestone]

-- | get all the <a>MilestoneId</a>s
getMilestoneIds :: Query BugsState [MilestoneId]

-- | get the <a>milestoneTitle</a> for a <a>MilestoneId</a>
getMilestoneTitle :: MilestoneId -> Query BugsState (Maybe Text)

-- | get the milestones sorted by target date
setMilestones :: [Milestone] -> Update BugsState ()

-- | get all the <a>Bug</a>s with one of the target <a>MilestoneId</a>s
bugsForMilestones :: [MilestoneId] -> Query BugsState (IxSet Bug)

-- | return the percentage completion of a <a>MilestoneId</a>
--   
--   Will return <a>Nothing</a> if no bugs were found for the
--   <a>MilestoneId</a>
milestoneCompletion :: MilestoneId -> Query BugsState (Maybe Rational)
data GenBugId
GenBugId :: GenBugId
newtype GetBugById
GetBugById :: BugId -> GetBugById
newtype PutBug
PutBug :: Bug -> PutBug
data AllBugIds
AllBugIds :: AllBugIds
newtype AllBugMeta
AllBugMeta :: SortOrder SortBugsBy -> AllBugMeta
data NewMilestone
NewMilestone :: NewMilestone
data GetMilestones
GetMilestones :: GetMilestones
newtype GetMilestoneTitle
GetMilestoneTitle :: MilestoneId -> GetMilestoneTitle
newtype SetMilestones
SetMilestones :: [Milestone] -> SetMilestones
newtype BugsForMilestones
BugsForMilestones :: [MilestoneId] -> BugsForMilestones
newtype MilestoneCompletion
MilestoneCompletion :: MilestoneId -> MilestoneCompletion
instance Typeable GenBugId
instance Typeable GetBugById
instance Typeable PutBug
instance Typeable AllBugIds
instance Typeable AllBugMeta
instance Typeable NewMilestone
instance Typeable GetMilestones
instance Typeable GetMilestoneTitle
instance Typeable SetMilestones
instance Typeable BugsForMilestones
instance Typeable MilestoneCompletion
instance QueryEvent MilestoneCompletion
instance Method MilestoneCompletion
instance SafeCopy MilestoneCompletion
instance QueryEvent BugsForMilestones
instance Method BugsForMilestones
instance SafeCopy BugsForMilestones
instance UpdateEvent SetMilestones
instance Method SetMilestones
instance SafeCopy SetMilestones
instance QueryEvent GetMilestoneTitle
instance Method GetMilestoneTitle
instance SafeCopy GetMilestoneTitle
instance QueryEvent GetMilestones
instance Method GetMilestones
instance SafeCopy GetMilestones
instance UpdateEvent NewMilestone
instance Method NewMilestone
instance SafeCopy NewMilestone
instance QueryEvent AllBugMeta
instance Method AllBugMeta
instance SafeCopy AllBugMeta
instance QueryEvent AllBugIds
instance Method AllBugIds
instance SafeCopy AllBugIds
instance UpdateEvent PutBug
instance Method PutBug
instance SafeCopy PutBug
instance QueryEvent GetBugById
instance Method GetBugById
instance SafeCopy GetBugById
instance UpdateEvent GenBugId
instance Method GenBugId
instance SafeCopy GenBugId
instance IsAcidic BugsState
instance SafeCopy a0 => SafeCopy (SortOrder a0)
instance Typeable1 SortOrder
instance Eq a => Eq (SortOrder a)
instance Ord a => Ord (SortOrder a)
instance Read a => Read (SortOrder a)
instance Show a => Show (SortOrder a)
instance Data a => Data (SortOrder a)
instance SafeCopy SortBugsBy
instance Typeable SortBugsBy
instance Eq SortBugsBy
instance Ord SortBugsBy
instance Read SortBugsBy
instance Show SortBugsBy
instance Data SortBugsBy
instance Migrate BugsState
instance SafeCopy BugsState
instance Typeable BugsState
instance Data BugsState
instance SafeCopy BugsState_0

module Clckwrks.Bugs.URL
data BugsAdminURL
EditBug :: BugId -> BugsAdminURL
EditMilestones :: BugsAdminURL
data BugsURL
ViewBug :: BugId -> BugsURL
SubmitBug :: BugsURL
SearchBugs :: BugsURL
BugsAdmin :: BugsAdminURL -> BugsURL
BugsData :: FilePath -> BugsURL
Timeline :: BugsURL
BugList :: BugsURL
instance PathInfo BugsURL
instance Typeable BugsURL
instance Eq BugsURL
instance Ord BugsURL
instance Read BugsURL
instance Show BugsURL
instance Data BugsURL
instance PathInfo BugsAdminURL
instance Typeable BugsAdminURL
instance Eq BugsAdminURL
instance Ord BugsAdminURL
instance Read BugsAdminURL
instance Show BugsAdminURL
instance Data BugsAdminURL

module Clckwrks.Bugs.Monad
data BugsConfig
BugsConfig :: FilePath -> AcidState BugsState -> (ClckURL -> [(Text, Maybe Text)] -> Text) -> BugsConfig

-- | directory in which to store uploaded attachments
bugsDirectory :: BugsConfig -> FilePath
bugsState :: BugsConfig -> AcidState BugsState
bugsClckURL :: BugsConfig -> ClckURL -> [(Text, Maybe Text)] -> Text
type BugsT m = ClckT BugsURL (ReaderT BugsConfig m)
type BugsM = ClckT BugsURL (ReaderT BugsConfig (ServerPartT IO))
data BugsFormError
BugsCFE :: (CommonFormError [Input]) -> BugsFormError
type BugsForm = ClckFormT BugsFormError BugsM
runBugsT :: BugsConfig -> BugsT m a -> ClckT BugsURL m a
instance Show BugsFormError
instance (Functor m, Monad m) => GetAcidState (BugsT m) BugsState
instance Monad m => MonadReader BugsConfig (BugsT m)
instance (Functor m, Monad m, EmbedAsChild m String) => EmbedAsChild m BugId
instance IsName n Text => EmbedAsAttr BugsM (Attr n ClckURL)
instance IsName n Text => EmbedAsAttr BugsM (Attr n BugsURL)
instance (Functor m, Monad m) => EmbedAsChild (BugsT m) BugsFormError
instance FormError BugsFormError

module Clckwrks.Bugs.Page.Template
template :: (EmbedAsChild BugsM headers, EmbedAsChild BugsM body) => Text -> headers -> body -> BugsM Response

module Clckwrks.Bugs.Page.BugList
bugList :: BugsM Response
bugListWidget :: XMLGenT BugsM XML
showBugMeta :: BugMeta -> XMLGenT BugsM XML

module Clckwrks.Bugs.Page.EditBug
editBug :: BugsURL -> BugId -> BugsM Response
editBugForm :: [(Maybe UserId, Text)] -> [Milestone] -> Bug -> BugsForm Bug
impure :: (Monoid view, Monad m) => m a -> Form m input error view () a

module Clckwrks.Bugs.Page.EditMilestones
editMilestones :: BugsURL -> BugsM Response
editMilestonesForm :: [Milestone] -> BugsForm ([Milestone], (Bool, Bool))
impure :: (Monoid view, Monad m) => m a -> Form m input error view () a

module Clckwrks.Bugs.Page.Timeline
timeline :: BugsM Response
timelineWidget :: XMLGenT BugsM XML
showMilestone :: [Milestone] -> (MilestoneId, [Bug]) -> XMLGenT BugsM [ChildType BugsM]
showBugSummary :: Bug -> XMLGenT BugsM XML
meter :: Real a => a -> XMLGenT BugsM XML

module Clckwrks.Bugs.PreProcess
data BugsCmd
ShowBug :: BugId -> BugsCmd
ShowTimeline :: BugsCmd
BugListLink :: BugsCmd
parseAttr :: Text -> Parser ()
parseCmd :: Parser BugsCmd
bugsCmd :: (Functor m, Monad m) => (BugsURL -> [(Text, Maybe Text)] -> Text) -> Text -> ClckT url m Text
applyCmd :: (EmbedAsAttr m (Attr Text a1), EmbedAsChild m Text, EmbedAsChild m String, ~ * (StringType m) Text, ~ * (XMLType m) XML) => (BugsURL -> [a] -> a1) -> BugsCmd -> m Builder

module Clckwrks.Bugs.Page.SubmitBug
submitBug :: BugsURL -> BugsM Response
submitForm :: BugsForm Bug
impure :: (Monoid view, Monad m) => m a -> Form m input error view () a

module Clckwrks.Bugs.Page.ViewBug
viewBug :: BugId -> BugsM Response
bugHtml :: Bug -> BugsM Response
whenHasRole :: (Happstack m, GetAcidState m AuthState, GetAcidState m ProfileState, GetAcidState m ProfileDataState, MonadState ClckState m) => Set Role -> m XML -> m XML

module Clckwrks.Bugs.Route
checkAuth :: BugsURL -> BugsM BugsURL
routeBugs :: BugsURL -> BugsM Response

module Clckwrks.Bugs.Plugin
bugsHandler :: (BugsURL -> [(Text, Maybe Text)] -> Text) -> BugsConfig -> ClckPlugins -> [Text] -> ClckT ClckURL (ServerPartT IO) Response
navBarCallback :: AcidState BugsState -> (BugsURL -> [(Text, Maybe Text)] -> Text) -> ClckT ClckURL IO (String, [NamedLink])
bugsInit :: ClckPlugins -> IO (Maybe Text)
addBugsAdminMenu :: ClckT url IO ()
bugsPlugin :: Plugin BugsURL Theme (ClckT ClckURL (ServerPartT IO) Response) (ClckT ClckURL IO ()) ClckwrksConfig ClckPluginsSt
plugin :: ClckPlugins -> Text -> IO (Maybe Text)

module Clckwrks.Bugs
