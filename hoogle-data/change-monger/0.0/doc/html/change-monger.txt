-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Parse VCS changelogs into ChangeLogs
--   
--   change-monger is intended to allow you to extract the revision history
--   from various VCSes like Darcs, and save them as a ChangeLog;
--   particularly important is being able to extract the summaries for all
--   patches since the last release.
@package change-monger
@version 0.0

module Text.ChangeMonger.Parse

-- | Call out to the shell, and collect the result as a String.
run :: String -> [String] -> IO String

module Text.ChangeMonger.Git

-- | Ask Git for changes in general; we accept an options argument which
--   will be passed onto Git, so you can customize by using any of the many
--   options to <a>log</a> which Git understands. Tricky bits: we can't
--   pass Git "", because it won't treat it as non-existent, so the
--   implementation needs to reflect this.
gitChanges :: String -> IO String

-- | Nothing fancy: just get the entire repository history.
gitChangesAll :: IO String

-- | Ask Git for all changes, since the last tag. Conscientious folks tag
--   at every release, so this is a good heuristic. Tricky bits: <a>run</a>
--   returns the name of the last tag with '\n' included, so we use
--   <a>init</a> to drop the last character and remove '\n'. Then, we ask
--   <a>git log</a> 'tag-name..', which is its syntax for <a>all
--   commits</a> since a particular tag. In this case, our tag-name is the
--   last tag, so we're good.
gitChangesSince :: IO String

module Text.ChangeMonger.Subversion

-- | Ask Subversion for changes in general; we accept an options argument
--   which will be passed onto Subversion, so you can customize by using
--   any of the many options to <a>log</a> which Subversion understands.
svnChanges :: String -> IO String

-- | Nothing fancy: just get the entire repository history. Unfortunately,
--   Subversion doesn't have a very useful notion of tags, so we merely get
--   the full history.
svnChangesAll :: IO String

module Text.ChangeMonger.CVS

-- | Ask CVS for changes in general; we accept an options argument which
--   will be passed onto CVS, so you can customize by using any of the many
--   options to <tt>changes</tt> which CVS understands. WARNING: This seems
--   to be broken.
cvsChanges :: String -> IO String

-- | Nothing fancy: just get the entire repository history.
cvsChangesAll :: IO String

module Text.ChangeMonger.Mercurial

-- | Ask Mercurial for changes in general; we accept an options argument
--   which will be passed onto Mercurial, so you can customize by using any
--   of the many options to <a>log</a> which Mercurial understands.
hgChanges :: String -> IO String

-- | Nothing fancy: just get the entire repository history.
hgChangesAll :: IO String

-- | Ask Mercurial for all changes, since the last tag. Conscientious folks
--   tag at every release, so this is a good heuristic.
hgChangesSince :: IO String

module Text.ChangeMonger.Darcs

-- | Ask Darcs for changes in general; we accept an options argument which
--   will be passed onto Darcs, so you can customize by using any of the
--   many options to <tt>changes</tt> which Darcs understands.
darcsChanges :: String -> IO String

-- | Nothing fancy: just get the entire repository history.
darcsChangesAll :: IO String

-- | Ask Darcs for all changes, since the last tag. Conscientious folks tag
--   at every release, so this is a good heuristic.
darcsChangesSince :: IO String
