-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | An example Haxl data source for accessing the
Facebook Graph API
--   
--   An example Haxl data source for accessing the Facebook Graph API
@package haxl-facebook
@version 0.1.0.0

module FB.DataSource
data FacebookReq a
GetObject :: Id -> FacebookReq Object
GetUser :: UserId -> FacebookReq User
GetUserFriends :: UserId -> FacebookReq [Friend]
initGlobalState :: Int -> Credentials -> UserAccessToken -> IO (State FacebookReq)

-- | Credentials that you get for your app when you register on Facebook.
data Credentials :: *
Credentials :: Text -> Text -> Text -> Credentials

-- | Your application name (e.g. for Open Graph calls).
appName :: Credentials -> Text

-- | Your application ID.
appId :: Credentials -> Text

-- | Your application secret key.
appSecret :: Credentials -> Text

-- | Type synonym for <tt><a>AccessToken</a> <a>UserKind</a></tt>.
type UserAccessToken = AccessToken UserKind

-- | An access token. While you can make some API calls without an access
--   token, many require an access token and some will give you more
--   information with an appropriate access token.
--   
--   There are two kinds of access tokens:
--   
--   <ul>
--   <li><i>User access token</i> An access token obtained after an user
--   accepts your application. Let's you access more information about that
--   user and act on their behalf (depending on which permissions you've
--   asked for).</li>
--   <li><i>App access token</i> An access token that allows you to take
--   administrative actions for your application.</li>
--   </ul>
--   
--   These two kinds of access tokens are distinguished by the phantom type
--   on <a>AccessToken</a>, which can be <a>UserKind</a> or <a>AppKind</a>.
data AccessToken kind :: * -> *
UserAccessToken :: UserId -> AccessTokenData -> UTCTime -> AccessToken UserKind
AppAccessToken :: AccessTokenData -> AccessToken AppKind
instance Typeable1 FacebookReq
instance Show (FacebookReq a)
instance Eq (FacebookReq a)
instance DataSource u FacebookReq
instance DataSourceName FacebookReq
instance StateKey FacebookReq
instance Hashable (FacebookReq a)
instance Show1 FacebookReq

module FB

-- | Fetch an arbitrary object in the Facebook graph.
getObject :: Id -> GenHaxl u Object

-- | Fetch a Facebook user.
getUser :: Id -> GenHaxl u User

-- | Fetch the friends of a Facebook user that are registered with the
--   current app.
getUserFriends :: Id -> GenHaxl u [Friend]

-- | The identification code of an object.
newtype Id :: *
Id :: Text -> Id
idCode :: Id -> Text

-- | A friend connection of a <a>User</a>.
data Friend :: *
Friend :: UserId -> Text -> Friend
friendId :: Friend -> UserId
friendName :: Friend -> Text

-- | A Facebook user profile (see
--   <a>https://developers.facebook.com/docs/reference/api/user/</a>).
--   
--   <i>NOTE:</i> We still don't support all fields supported by Facebook.
--   Please fill an issue if you need access to any other fields.
data User :: *
User :: UserId -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Gender -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Place -> User
userId :: User -> UserId
userName :: User -> Maybe Text
userFirstName :: User -> Maybe Text
userMiddleName :: User -> Maybe Text
userLastName :: User -> Maybe Text
userGender :: User -> Maybe Gender
userLocale :: User -> Maybe Text
userUsername :: User -> Maybe Text
userVerified :: User -> Maybe Bool
userEmail :: User -> Maybe Text
userLocation :: User -> Maybe Place
