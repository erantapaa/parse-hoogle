-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Template Haskell hack to violate another module's abstractions
--   
@package true-name
@version 0.0.0.1

module Unsafe.TrueName

-- | Scrapes a qualified <a>Name</a> out from a point-of-entry that you do
--   have access to. The first <a>String</a> argument is either the
--   <a>nameBase</a>―or fully-qualified―part of the required <a>Name</a>,
--   while the second is some other <a>Name</a> that contains the required
--   <a>Name</a> in its type or declaration.
--   
--   Note that since GHC <a>does not currently return the RHS of function
--   definitons</a>, <a>trueName</a> cannot obtain the <a>Name</a> for an
--   unexported function. The only workaround seems to involve copypasta.
--   D:
--   
--   Check the <a>included examples</a>.
trueName :: String -> Name -> Q Name

-- | <a>QuasiQuoter</a> interface to <a>trueName</a>. Accepts two or more
--   corresponding argument tokens: first should be sans
--   <tt>""</tt>-quotes; the namespace for the second is denoted in the
--   usual TH syntax of either a single <tt>'</tt> or double <tt>''</tt>
--   prefix.
--   
--   Extra tokens are assigned as variable names in a <a>Pat</a> context.
--   <a>Exp</a> and <a>Type</a> are always created with <a>ConE</a> and
--   <a>ConT</a> respectively, so this is not quite as flexible as
--   <a>trueName</a>.
quasiName :: QuasiQuoter
