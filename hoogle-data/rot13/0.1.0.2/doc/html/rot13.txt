-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Fast ROT13 cipher for Haskell.
--   
@package rot13
@version 0.1.0.2


-- | This module exposes all the API for this package.
module Codec.Rot13

-- | Perform the ROT13 cipher on the given ANSI encoded <a>Word</a>.
rot13word :: Word -> Word

-- | Like <a>rot13word</a>, but using the smaller <a>Word8</a> type.
--   
--   <pre>
--   rot13word8 = fromIntegral . rot13word . fromIntegral
--   </pre>
rot13word8 :: Word8 -> Word8

-- | Perform the ROT13 cipher on a single <a>Char</a>. A ROT13 cipher is
--   the inverse of itself, so one function will both suitably encode and
--   decode. Thus, the following holds:
--   
--   <pre>
--   rot13char . rot13char = id
--   </pre>
rot13char :: Char -> Char

-- | Perform the ROT13 cipher on a <a>String</a>. This is just equivalent
--   to:
--   
--   <pre>
--   rot13 = map rot13char
--   </pre>
rot13 :: String -> String

-- | Like <a>rot13</a> but for <a>ByteString</a>s.
rot13bs :: ByteString -> ByteString
