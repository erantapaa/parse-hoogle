-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A wrapper around Sean Barrett's JPEG/PNG decoder
--   
--   Partial implementation of JPEG, PNG, TGA, BMP, PSD decoders, with a
--   really simple API.
@package stb-image
@version 0.2.1


-- | A wrapper around <tt>stb_image</tt>, Sean Barrett's public domain
--   JPEG/PNG decoder. The original can be found at
--   <a>http://nothings.org/stb_image.c</a>. The version of
--   <tt>stb_image</tt> used here is <tt>stbi-1.33</tt>. The current list
--   of (partially) supported formats is JPEG, PNG, TGA, BMP, PSD.
--   
--   Please note that the library is not (fully) thread-safe! Furthermore,
--   the library does not give any guarantee in case of invalid input; in
--   particular it is a security risk to load untrusted image files.
module Codec.Image.STB

-- | A bitmap.
data Bitmap t :: * -> *
type Image = Bitmap Word8

-- | Decodes an image from a compressed format stored in a strict
--   <a>ByteString</a>. Supported formats (see <tt>stb_image.c</tt> for
--   details!):
--   
--   <ul>
--   <li>JPEG baseline (no JPEG progressive, no oddball channel
--   decimations)</li>
--   <li>PNG 8-bit only (8 bit per component, that is)</li>
--   <li>BMP non-1bpp, non-RLE</li>
--   <li>TGA (not sure what subset, if a subset)</li>
--   <li>PSD (composite view only, no extra channels)</li>
--   </ul>
--   
--   If the operation fails, we return an error message.
decodeImage :: ByteString -> IO (Either String Image)

-- | Decodes an image, with the number of components per pixel forced by
--   the user.
decodeImage' :: Int -> ByteString -> IO (Either String Image)

-- | Loads an image from a file. Catches IO exceptions and converts them to
--   an error message.
loadImage :: FilePath -> IO (Either String Image)

-- | Force the number of components in the image.
loadImage' :: FilePath -> Int -> IO (Either String Image)
