-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | PokitDok Platform API Client for Haskell
--   
@package pokitdok
@version 4.1.0.2


-- | This module contains all of the endpoints available in the PokitDok
--   Platform API.
module PokitDok.Paths
apiSite :: [Char]
apiVersionPath :: [Char]
apiTokenPath :: [Char]
apiEndpointEligibility :: [Char]
apiEndpointProviders :: [Char]
apiEndpointClaims :: [Char]
apiEndpointClaimsStatus :: [Char]
apiEndpointEnrollment :: [Char]
apiEndpointDeductible :: [Char]
apiEndpointPayers :: [Char]
apiEndpointPriceInsurance :: [Char]
apiEndpointPriceCash :: [Char]
apiEndpointActivities :: [Char]
apiEndpointFiles :: [Char]
apiEndpointTradingPartners :: [Char]
apiEndpointPlans :: [Char]
apiEndpointReferrals :: [Char]
apiEndpointAuthorizations :: [Char]
apiEndpointSchedulers :: [Char]
apiEndpointAppointmentTypes :: [Char]
apiEndpointSlots :: [Char]
apiEndpointAppointments :: [Char]
apiEndpointMPC :: [Char]
path :: String


-- | This module provides the core functionality that connects to the
--   specified API and performs generic GET, POST, PUT, and DELETE
--   requests.
--   
--   Powered by the Network.HTTP.Conduit (http-conduit) package.
module PokitDok.OAuth2

-- | Stores OAuth2 data.
data OAuth2
OAuth2 :: String -> String -> String -> Maybe String -> Maybe String -> Maybe AccessToken -> OAuth2
oauthClientId :: OAuth2 -> String
oauthClientSecret :: OAuth2 -> String
oauthAccessTokenEndpoint :: OAuth2 -> String
oauthOAuthorizeEndpoint :: OAuth2 -> Maybe String
oauthCallback :: OAuth2 -> Maybe String
oauthAccessToken :: OAuth2 -> Maybe AccessToken

-- | OAuth access token.
data AccessToken
AccessToken :: String -> Maybe String -> Maybe Int -> Maybe Int -> Maybe String -> AccessToken
accessToken :: AccessToken -> String
refreshToken :: AccessToken -> Maybe String

-- | measured in POSIX seconds.
expires :: AccessToken -> Maybe Int
expiresIn :: AccessToken -> Maybe Int
token_type :: AccessToken -> Maybe String

-- | Stores http response headers, body and status code.
data ResponseData
ResponseData :: Headers -> String -> Int -> ResponseData
headers :: ResponseData -> Headers
body :: ResponseData -> String
status :: ResponseData -> Int
type Parameters = [(String, String)]

-- | Modifies the given key's <tt>AccessToken</tt> with the given
--   <tt><a>Maybe</a></tt> <tt>AccessToken</tt>'s value.
keyModAccessToken :: OAuth2 -> Maybe AccessToken -> OAuth2

-- | Returns a valid <tt>AccessCode</tt> given some headers and an
--   <tt>OAuth2</tt>.
authenticateClientCredentials :: Headers -> OAuth2 -> IO AccessToken

-- | Returns an <tt>AccessToken</tt> given some headers, an
--   <tt>OAuth2</tt>, and an authorization code.
authenticateAuthorizationCode :: Headers -> OAuth2 -> String -> IO AccessToken

-- | Takes <tt>OAuth2</tt> data and returns a refreshed
--   <tt>AccessToken</tt>.
authenticateRefreshToken :: Headers -> OAuth2 -> IO AccessToken

-- | Perform a GET request given request headers, a url, and query
--   parameters.
getRequest :: Headers -> String -> Parameters -> IO ResponseData

-- | Perform a DELETE request, given some headers, for the given resource.
deleteRequest :: Headers -> String -> IO ResponseData

-- | Perform a POST request given request headers, a url, and request body.
postRequest :: Headers -> String -> String -> IO ResponseData

-- | Performs a multipart request file upload with the given parameters.
multipartRequest :: Headers -> String -> Parameters -> String -> String -> IO ResponseData

-- | Perform a PUT request given request headers, a url, and a request
--   body.
putRequest :: Headers -> String -> String -> IO ResponseData

-- | Returns a user agent tuple with the specified user agent.
makeUserAgentHeader :: String -> (String, String)

-- | Returns a content type tuple with the specified content type.
makeContentHeader :: String -> (String, String)

-- | Returns an authorization tuple with the specified authorization
--   string.
makeAuthHeader :: String -> (String, String)

-- | Takes a url and appends the parameters to form a query url.
appendParams :: String -> Parameters -> String
instance Show AccessToken
instance Eq AccessToken
instance Show OAuth2
instance Eq OAuth2
instance Show ResponseData
instance FromJSON AccessToken


-- | This module bridges the minimal calls in the Client module, adds
--   specific headers required by the API, and passes them to the more
--   generic calls of the OAuth2 module.
--   
--   It also includes auxiliary funtions for handling its main return type:
--   <tt>ResponseData</tt>.
module PokitDok.Requests

-- | Sends a GET request to the server with the given query parameters.
pokitdokGetRequest :: OAuth2 -> String -> Parameters -> IO ResponseData

-- | Sends a DELETE request to the server with the given query parameters.
pokitdokDeleteRequest :: OAuth2 -> String -> IO ResponseData

-- | Sends a POST request to the server and posts the json string.
pokitdokPostRequest :: OAuth2 -> String -> String -> IO ResponseData

-- | Sends a PUT request with JSON data.
pokitdokPutRequest :: OAuth2 -> String -> String -> IO ResponseData

-- | A multipart request that uploads a file.
pokitdokMultipartRequest :: OAuth2 -> String -> Parameters -> String -> IO ResponseData

-- | Takes an <tt>OAuth2</tt> &amp; an authorization code, and returns an
--   <tt>OAuth2</tt> with a refreshed <tt>AccessToken</tt>.
activateKeyWithAuthCode :: OAuth2 -> String -> IO OAuth2

-- | Refreshes an <tt>OAuth2</tt>'s token given whether or not it is
--   expired.
refreshExpired :: OAuth2 -> Bool -> IO OAuth2

-- | Checks if the given <tt>AccessToken</tt> is expired.
isExpired' :: AccessToken -> IO Bool

-- | Asserts that the given <tt>OAuth2</tt> is valid to make a call.
assertValid :: OAuth2 -> IO ()

-- | Pulls the JSON response <tt>String</tt> from a <tt>ResponseDat</tt>um,
--   and lifts the result to an IO monad.
getJSONIO :: ResponseData -> IO String


-- | This module contains everything you need to perform PokitDok Platform
--   API calls.
module PokitDok.Client

-- | Generates a new key with the given id and secret.
keyWithIdSecret :: String -> String -> OAuth2

-- | Modifies the given key's callback url with the given <tt>Maybe
--   String</tt>.
keyModCallback :: OAuth2 -> Maybe String -> OAuth2

-- | A url where a user can obtain an access token. Throws an error unless
--   <tt>keyModCallback</tt> is used on the credential first.
authorizationUrl :: OAuth2 -> String

-- | Checks if the given <tt>OAuth2</tt>'s <tt>AccessToken</tt> is expired.
isExpired :: OAuth2 -> IO Bool

-- | Takes an <tt>OAuth2</tt> and returns an <tt>IO</tt> <tt>OAuth2</tt>
--   with a valid <tt>AccessToken</tt>.
refresh :: OAuth2 -> IO OAuth2

-- | Authenticate's an <tt>OAuth2</tt> given an authorization code.
authenticateCode :: OAuth2 -> String -> IO OAuth2

-- | Call the activities endpoint for a specific activityId. See docs here:
--   <a>https://platform.pokitdok.com/documentation/v4#/#activities</a>
activitiesWithId :: OAuth2 -> String -> IO String

-- | Call the activities endpoint to get a listing of current activities, a
--   query string parameter <tt>parent_id</tt> may also be used with this
--   API to get information about sub-activities that were initiated from a
--   batch file upload. See docs here:
--   <a>https://platform.pokitdok.com/documentation/v4#/#activities</a>
activities :: OAuth2 -> Parameters -> IO String

-- | Return a list of cash prices for a given procedure code in a given
--   region (by ZIP Code). See docs here:
--   <a>https://platform.pokitdok.com/documentation/v4#/#cashprices</a>
pricesCash :: OAuth2 -> Parameters -> IO String

-- | Return a list of insurance prices for a given procedure code in a
--   given region (by ZIP Code). See docs here:
--   <a>https://platform.pokitdok.com/documentation/v4#/#insuranceprices</a>
pricesInsurance :: OAuth2 -> Parameters -> IO String

-- | Create a new claim, via the filing of an EDI 837 Professional Claims,
--   to the designated Payer. See docs here:
--   <a>https://platform.pokitdok.com/documentation/v4#/#claims</a>
claims :: OAuth2 -> String -> IO String

-- | Ascertain the status of the specified claim, via the filing of an EDI
--   276 Claims Status. See docs here:
--   <a>https://platform.pokitdok.com/documentation/v4#/#claimstatus</a>
claimsStatus :: OAuth2 -> String -> IO String

-- | Determine eligibility via an EDI 270 Request For Eligibility. See docs
--   here:
--   <a>https://platform.pokitdok.com/documentation/v4#/#eligibility</a>
eligibility :: OAuth2 -> String -> IO String

-- | File an EDI 834 benefit enrollment. See docs here:
--   <a>https://platform.pokitdok.com/documentation/v4#/#enrollment</a>
enrollment :: OAuth2 -> String -> IO String

-- | Retrieve providers data matching specified query parameters. See docs
--   here:
--   <a>https://platform.pokitdok.com/documentation/v4#/#providers</a>
providers :: OAuth2 -> Parameters -> IO String

-- | Retrieve the data for a specified provider. See docs here:
--   <a>https://platform.pokitdok.com/documentation/v4#/#providers</a>
providersWithNpi :: OAuth2 -> String -> IO String

-- | Retrieve data on plans based on the parameters given. See docs here:
--   <a>https://platform.pokitdok.com/documentation/v4#/#plans</a>
plans :: OAuth2 -> Parameters -> IO String

-- | Use the <i>payers</i> API to determine available <tt>payer_id</tt>
--   values for use with other endpoints. This endpoint will be deprecated
--   in v5. Use <i>Trading Partners</i> instead. See docs here:
--   <a>https://platform.pokitdok.com/documentation/v4#/#payers</a>
payers :: OAuth2 -> IO String

-- | Retrieve a list of trading partners or submit an id to get info for a
--   specific trading partner. Empty string is a valid parameter. See docs
--   here:
--   <a>https://platform.pokitdok.com/documentation/v4#/#tradingpartners</a>
tradingPartners :: OAuth2 -> String -> IO String

-- | Submit an X12 formatted EDI file for batch processing. If the callback
--   url is not nothing in the <tt>OAuth2</tt>, it will be included.
files :: OAuth2 -> String -> String -> IO String

-- | Request approval for a referral to another health care provider. See
--   docs here:
--   <a>https://platform.pokitdok.com/documentation/v4#/#referrals</a>
referrals :: OAuth2 -> String -> IO String

-- | Submit an authorization request. See docs here:
--   <a>https://platform.pokitdok.com/documentation/v4#/#authorizations</a>
authorizations :: OAuth2 -> String -> IO String

-- | Get a list of supported scheduling systems and their UUIDs &amp;
--   descriptions.
schedulers :: OAuth2 -> String -> IO String

-- | Get a list of appointment types, their UUIDs, and descriptions.
appointmentTypes :: OAuth2 -> String -> IO String

-- | Create an available appointment slot in the PokitDok scheduler system.
createSlot :: OAuth2 -> String -> IO String

-- | Query for an open appointment slot or a booked appointment given a
--   specific <tt>pd_appointment_uuid</tt>, the PokitDok unique appointment
--   identifier. See <a>https://platform.pokitdok.com/documentation</a>
appointmentsWithId :: OAuth2 -> String -> IO String

-- | Query for open appointment slots (using <tt>pd_provider_uuid</tt> and
--   <tt>location</tt>) or booked appointments (using
--   <tt>patient_uuid</tt>2) given query parameters. See
--   <a>https://platform.pokitdok.com/documentation</a>
appointments :: OAuth2 -> Parameters -> IO String

-- | Book appointment for an open slot. Post data contains patient
--   attributes and description. See
--   <a>https://platform.pokitdok.com/documentation</a>
bookAppointment :: OAuth2 -> String -> String -> IO String

-- | Update appointment description. See
--   <a>https://platform.pokitdok.com/documentation</a>
updateAppointment :: OAuth2 -> String -> String -> IO String

-- | Cancel appointment given its <tt>pd_appointment_uuid</tt>. See
--   <a>https://platform.pokitdok.com/documentation</a>
cancelAppointment :: OAuth2 -> String -> IO String


-- | The PokitDok module enables a Haskell programmer to make PokitDok API
--   calls from within the Haskell platform. The usage principles are
--   concise and easy to implement.
module PokitDok
