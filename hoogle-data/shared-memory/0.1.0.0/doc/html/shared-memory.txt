-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | POSIX shared memory
--   
@package shared-memory
@version 0.1.0.0


-- | Provides <tt>mmap</tt>: mapping files into memory.
module MMAP

-- | Exception thrown when <tt>mmap</tt> fails.
data MmapException
MmapException :: MmapException

-- | Exception thrown when <tt>munmap</tt> fails.
data MunmapException
MunmapException :: CSize -> Ptr () -> MunmapException
munmapExceptionSize :: MunmapException -> CSize
munmapExceptionPtr :: MunmapException -> Ptr ()

-- | <tt>mmap</tt> - map files or devices into memory.
--   
--   The returned memory should be freed with <a>c_munmap</a> after use.
--   
--   This is the raw C function, and its return value must be checked
--   according to <tt>man mmap</tt>.
--   
--   See <a>mmap</a> for a variant that turns bad return values into
--   exceptions.
c_mmap :: Ptr () -> CSize -> ProtOption -> MmapFlags -> Fd -> COff -> IO (Ptr ())

-- | <tt>munmap</tt> - unmap <tt>mmap</tt>'ed memory.
--   
--   This is the raw C function, and its return value must be checked
--   according to <tt>man mmap</tt>.
--   
--   See <a>munmap</a> for a variant that turns bad return values into
--   exceptions.
c_munmap :: Ptr () -> CSize -> IO CInt

-- | Convenience around <a>c_mmap</a>, throwing a <a>MmapException</a> on a
--   negative return value.
mmap :: Ptr () -> CSize -> ProtOption -> MmapFlags -> Fd -> COff -> IO (Ptr ())

-- | Convenience around <a>c_munmap</a>, throwing a <a>MunmapException</a>
--   on a negative return value.
munmap :: Ptr () -> CSize -> IO ()

-- | Describes the desired memory protection of the mapping (and must not
--   conflict with the open mode of the file).
--   
--   Can be combined using the <a>Monoid</a> instance `(&lt;&gt;)`.
newtype ProtOption
ProtOption :: CInt -> ProtOption
unProtOption :: ProtOption -> CInt

-- | Pages may be executed.
protExec :: ProtOption

-- | Pages may be read.
protRead :: ProtOption

-- | Pages may be written.
protWrite :: ProtOption

-- | Pages may not be accessed.
protNone :: ProtOption

-- | Determines whether updates to the mapping are visible to other
--   processes mapping the same region, and whether updates are carried
--   through to the underlying file.
--   
--   This behavior is determined by including exactly one of
--   <a>mapShared</a> and <a>mapPrivate</a>.
newtype MmapSharedFlag
MmapSharedFlag :: CInt -> MmapSharedFlag
unMmapSharedFlag :: MmapSharedFlag -> CInt

-- | Share this mapping. Updates to the mapping are visible to other
--   processes that map the file, and are carried through to the underlying
--   file. The file may not actually be updated until <tt>msync(2)</tt> or
--   <tt>munmap()</tt> is called..
mapShared :: MmapSharedFlag

-- | Create a private copy-on-write mapping. Updates to the mapping are not
--   visible to other processes mapping the same file, and are not carried
--   through to the underlying file. It is unspecified whether changes made
--   to the file after the <tt>mmap()</tt> call are visible in the mapped
--   region.
mapPrivate :: MmapSharedFlag

-- | And <a>MmapSharedFlag</a> with one or more <a>MmapOptionalFlag</a>s.
newtype MmapOptionalFlag
MmapOptionalFlag :: CInt -> MmapOptionalFlag
unMmapOptionalFlag :: MmapOptionalFlag -> CInt

-- | See <tt>man mmap</tt> for a description.
map32Bit :: MmapOptionalFlag

-- | See <tt>man mmap</tt> for a description.
mapAnonymous :: MmapOptionalFlag

-- | See <tt>man mmap</tt> for a description.
mapDenywrite :: MmapOptionalFlag

-- | See <tt>man mmap</tt> for a description.
mapFile :: MmapOptionalFlag

-- | See <tt>man mmap</tt> for a description.
mapFixed :: MmapOptionalFlag

-- | See <tt>man mmap</tt> for a description.
mapHugetlb :: MmapOptionalFlag

-- | See <tt>man mmap</tt> for a description.
mapLocked :: MmapOptionalFlag

-- | See <tt>man mmap</tt> for a description.
mapNonblock :: MmapOptionalFlag

-- | See <tt>man mmap</tt> for a description.
mapNoreserve :: MmapOptionalFlag

-- | See <tt>man mmap</tt> for a description.
mapStack :: MmapOptionalFlag

-- | An <a>MmapSharedFlag</a> with one or more <a>MmapOptionalFlag</a>s.
newtype MmapFlags
MmapFlags :: CInt -> MmapFlags
unMmapFlags :: MmapFlags -> CInt

-- | Create <a>MmapFlags</a> to be passed to <a>c_mmap</a> from an
--   <a>MmapSharedFlag</a> and one or more <a>MmapOptionalFlag</a>s
--   (combine them via `(&lt;&gt;)`, <a>mempty</a> for none).
mkMmapFlags :: MmapSharedFlag -> MmapOptionalFlag -> MmapFlags
instance Typeable MmapException
instance Typeable MunmapException
instance Eq MmapException
instance Ord MmapException
instance Show MmapException
instance Eq MunmapException
instance Ord MunmapException
instance Show MunmapException
instance Eq ProtOption
instance Show ProtOption
instance Ord ProtOption
instance Eq MmapSharedFlag
instance Show MmapSharedFlag
instance Ord MmapSharedFlag
instance Eq MmapOptionalFlag
instance Show MmapOptionalFlag
instance Ord MmapOptionalFlag
instance Eq MmapFlags
instance Show MmapFlags
instance Ord MmapFlags
instance Monoid MmapOptionalFlag
instance Monoid ProtOption
instance Exception MunmapException
instance Exception MmapException


-- | Provides shared memory for IPC (Inter Process Communication).
module SharedMemory

-- | <tt>openSharedMemory shmemPath size openFlags openFileMode</tt>:
--   Creates a shared memory file using <tt>shm_open</tt> at
--   <tt>shmemPath</tt> of <tt>size</tt> bytes, returning the created
--   <a>Fd</a> and <a>ForeignPtr</a> pointing to the <tt>mmap</tt>'ed
--   memory.
--   
--   The <a>Fd</a> can be used to resize the shared memory region.
--   
--   When the returned <a>ForeignPtr</a> is garbage collected, the memory
--   is <tt>munmap</tt>'ed, but the <a>Fd</a> remains open until it is
--   closed or garbage collected.
--   
--   Closing the <a>Fd</a> will not invalidate the returned
--   <a>ForeignPtr</a>.
openSharedMemory :: String -> CSize -> ShmOpenFlags -> FileMode -> IO (ForeignPtr (), Fd)
