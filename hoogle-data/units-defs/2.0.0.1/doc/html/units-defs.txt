-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Definitions for use with the units package
--   
@package units-defs
@version 2.0.0.1


-- | Defines prefixes from the SI standard at
--   <a>http://www.bipm.org/en/si/</a>
module Data.Units.SI.Prefixes

-- | 10^1
data Deca
Deca :: Deca
deca :: unit -> Deca :@ unit

-- | 10^2
data Hecto
Hecto :: Hecto
hecto :: unit -> Hecto :@ unit

-- | 10^3
data Kilo
Kilo :: Kilo
kilo :: unit -> Kilo :@ unit

-- | 10^6
data Mega
Mega :: Mega
mega :: unit -> Mega :@ unit

-- | 10^9
data Giga
Giga :: Giga
giga :: unit -> Giga :@ unit

-- | 10^12
data Tera
Tera :: Tera
tera :: unit -> Tera :@ unit

-- | 10^15
data Peta
Peta :: Peta
peta :: unit -> Peta :@ unit

-- | 10^18
data Exa
Exa :: Exa
exa :: unit -> Exa :@ unit

-- | 10^21
data Zetta
Zetta :: Zetta
zetta :: unit -> Zetta :@ unit

-- | 10^24
data Yotta
Yotta :: Yotta
yotta :: unit -> Yotta :@ unit

-- | 10^-1
data Deci
Deci :: Deci
deci :: unit -> Deci :@ unit

-- | 10^-2
data Centi
Centi :: Centi
centi :: unit -> Centi :@ unit

-- | 10^-3
data Milli
Milli :: Milli
milli :: unit -> Milli :@ unit

-- | 10^-6
data Micro
Micro :: Micro
micro :: unit -> Micro :@ unit

-- | 10^-9
data Nano
Nano :: Nano
nano :: unit -> Nano :@ unit

-- | 10^-12
data Pico
Pico :: Pico
pico :: unit -> Pico :@ unit

-- | 10^-15
data Femto
Femto :: Femto
femto :: unit -> Femto :@ unit

-- | 10^-18
data Atto
Atto :: Atto
atto :: unit -> Atto :@ unit

-- | 10^-21
data Zepto
Zepto :: Zepto
zepto :: unit -> Zepto :@ unit

-- | 10^-24
data Yocto
Yocto :: Yocto
yocto :: unit -> Yocto :@ unit

-- | A list of the names of all prefix types. Useful with
--   <a>makeQuasiQuoter</a>.
siPrefixes :: [Name]
instance Show Yocto
instance UnitPrefix Yocto
instance Show Zepto
instance UnitPrefix Zepto
instance Show Atto
instance UnitPrefix Atto
instance Show Femto
instance UnitPrefix Femto
instance Show Pico
instance UnitPrefix Pico
instance Show Nano
instance UnitPrefix Nano
instance Show Micro
instance UnitPrefix Micro
instance Show Milli
instance UnitPrefix Milli
instance Show Centi
instance UnitPrefix Centi
instance Show Deci
instance UnitPrefix Deci
instance Show Yotta
instance UnitPrefix Yotta
instance Show Zetta
instance UnitPrefix Zetta
instance Show Exa
instance UnitPrefix Exa
instance Show Peta
instance UnitPrefix Peta
instance Show Tera
instance UnitPrefix Tera
instance Show Giga
instance UnitPrefix Giga
instance Show Mega
instance UnitPrefix Mega
instance Show Kilo
instance UnitPrefix Kilo
instance Show Hecto
instance UnitPrefix Hecto
instance Show Deca
instance UnitPrefix Deca


-- | This module defines SI dimensions. The names of SI dimensions conform
--   to
--   <a>http://www.bipm.org/utils/common/documents/jcgm/JCGM_200_2012.pdf</a>.
module Data.Dimensions.SI
data Length
Length :: Length
data Mass
Mass :: Mass
data Time
Time :: Time
data Current
Current :: Current
data Temperature
Temperature :: Temperature
data AmountOfSubstance
AmountOfSubstance :: AmountOfSubstance
data LuminousIntensity
LuminousIntensity :: LuminousIntensity
type Area = Length :^ Two
type Volume = Length :^ Three
type Velocity = Length :/ Time
type Acceleration = Velocity :/ Time
type Wavenumber = Length :^ MOne
type Density = Mass :/ Volume
type SurfaceDensity = Mass :/ Area
type SpecificVolume = Volume :/ Mass
type CurrentDensity = Current :/ Area
type MagneticStrength = Current :/ Length
type Concentration = AmountOfSubstance :/ Volume
type Luminance = LuminousIntensity :/ Area
type Frequency = Time :^ MOne
type Force = Mass :* Acceleration
type Pressure = Force :/ Area
type Energy = Force :* Length
type Power = Energy :/ Time
type Charge = Current :* Time
type ElectricPotential = Power :/ Current
type Capacitance = Charge :/ ElectricPotential
type Resistance = ElectricPotential :/ Current
type Conductance = Current :/ ElectricPotential
type MagneticFlux = ElectricPotential :* Time
type MagneticFluxDensity = MagneticFlux :/ Area
type Inductance = MagneticFlux :/ Current
type LuminousFlux = LuminousIntensity
type Illuminance = LuminousIntensity :/ Area
type Kerma = Area :/ (Time :^ Two)
type CatalyticActivity = AmountOfSubstance :/ Time
type Momentum = Mass :* Velocity
instance Dimension LuminousIntensity
instance Dimension AmountOfSubstance
instance Dimension Temperature
instance Dimension Current
instance Dimension Time
instance Dimension Mass
instance Dimension Length


-- | This module defines type synonyms for SI units, using a Double as the
--   internal representation. This module <i>does not</i> export instances
--   of <a>DefaultUnitOfDim</a>. Use <a>Mono</a> for that.
module Data.Metrology.SI.MonoTypes
type Length = MkQu_D Length
type Mass = MkQu_D Mass
type Time = MkQu_D Time
type Current = MkQu_D Current
type Temperature = MkQu_D Temperature
type AmountOfSubstance = MkQu_D AmountOfSubstance
type LuminousIntensity = MkQu_D LuminousIntensity
type Area = MkQu_D Area
type Volume = MkQu_D Volume
type Velocity = MkQu_D Velocity
type Acceleration = MkQu_D Acceleration
type Wavenumber = MkQu_D Wavenumber
type Density = MkQu_D Density
type SurfaceDensity = MkQu_D SurfaceDensity
type SpecificVolume = MkQu_D SpecificVolume
type CurrentDensity = MkQu_D CurrentDensity
type MagneticStrength = MkQu_D MagneticStrength
type Concentration = MkQu_D Concentration
type Luminance = MkQu_D Luminance
type Frequency = MkQu_D Frequency
type Force = MkQu_D Force
type Pressure = MkQu_D Pressure
type Energy = MkQu_D Energy
type Power = MkQu_D Power
type Charge = MkQu_D Charge
type ElectricPotential = MkQu_D ElectricPotential
type Capacitance = MkQu_D Capacitance
type Resistance = MkQu_D Resistance
type Conductance = MkQu_D Conductance
type MagneticFlux = MkQu_D MagneticFlux
type MagneticFluxDensity = MkQu_D MagneticFluxDensity
type Inductance = MkQu_D Inductance
type LuminousFlux = MkQu_D LuminousFlux
type Illuminance = MkQu_D Illuminance
type Kerma = MkQu_D Kerma
type CatalyticActivity = MkQu_D CatalyticActivity
type Momentum = MkQu_D Momentum


-- | This module exports unit definitions according to the SI system of
--   units. The definitions were taken from here:
--   <a>http://www.bipm.org/en/si/</a>.
--   
--   Some additional units were added based on <a>this link</a>: "Non-SI
--   units accepted for use with the SI, and units based on fundamental
--   constants".
--   
--   There is one deviation from the definitions at that site: To work
--   better with prefixes, the unit of mass is <a>Gram</a>.
--   
--   This module exports both American spellings and British spellings of
--   units, using pattern synonyms to get the British spellings of data
--   constructors.
module Data.Units.SI
data Meter
Meter :: Meter
type Metre = Meter
data Gram
Gram :: Gram
type Gramme = Gram
data Second
Second :: Second

-- | Derived SI unit
data Minute
Minute :: Minute

-- | Derived SI unit
data Hour
Hour :: Hour
data Ampere
Ampere :: Ampere
data Kelvin
Kelvin :: Kelvin
data Mole
Mole :: Mole
data Candela
Candela :: Candela
data Hertz
Hertz :: Hertz

-- | This is not in the SI standard, but is used widely.
data Liter
Liter :: Liter
type Litre = Liter
data Newton
Newton :: Newton
data Pascal
Pascal :: Pascal
data Joule
Joule :: Joule
data Watt
Watt :: Watt
data Coulomb
Coulomb :: Coulomb
data Volt
Volt :: Volt
data Farad
Farad :: Farad
data Ohm
Ohm :: Ohm
data Siemens
Siemens :: Siemens
data Weber
Weber :: Weber
data Tesla
Tesla :: Tesla
data Henry
Henry :: Henry
data Lumen
Lumen :: Lumen
data Lux
Lux :: Lux
data Becquerel
Becquerel :: Becquerel
data Gray
Gray :: Gray
data Sievert
Sievert :: Sievert
data Katal
Katal :: Katal

-- | Derived SI unit
data Hectare
Hectare :: Hectare

-- | Derived SI unit
data Ton
Ton :: Ton
type Tonne = Ton

-- | A list of the names of all unit types. Useful with
--   <a>makeQuasiQuoter</a>.
siUnits :: [Name]
instance Show Ton
instance Unit Ton
instance Show Hectare
instance Unit Hectare
instance Show Katal
instance Unit Katal
instance Show Sievert
instance Unit Sievert
instance Show Gray
instance Unit Gray
instance Show Becquerel
instance Unit Becquerel
instance Show Lux
instance Unit Lux
instance Show Lumen
instance Unit Lumen
instance Show Henry
instance Unit Henry
instance Show Tesla
instance Unit Tesla
instance Show Weber
instance Unit Weber
instance Show Siemens
instance Unit Siemens
instance Show Ohm
instance Unit Ohm
instance Show Farad
instance Unit Farad
instance Show Volt
instance Unit Volt
instance Show Coulomb
instance Unit Coulomb
instance Show Watt
instance Unit Watt
instance Show Joule
instance Unit Joule
instance Show Pascal
instance Unit Pascal
instance Show Newton
instance Unit Newton
instance Show Liter
instance Unit Liter
instance Show Hertz
instance Unit Hertz
instance Show Candela
instance Unit Candela
instance Show Mole
instance Unit Mole
instance Show Kelvin
instance Unit Kelvin
instance Show Ampere
instance Unit Ampere
instance Show Hour
instance Unit Hour
instance Show Minute
instance Unit Minute
instance Show Second
instance Unit Second
instance Show Gram
instance Unit Gram
instance Show Meter
instance Unit Meter


-- | Defines a quasi-quoting parser for unit expressions. Writing, say,
--   <tt>[si| m/s^2 |]</tt> produces <tt>(Meter :/ (Second :^ sTwo))</tt>.
--   A larger example is
--   
--   <pre>
--   ke :: Energy
--   ke = 5 % [si| N km |]  -- 5 Newton-kilometers
--   </pre>
--   
--   See <a>Parser</a> for more information about the syntax of these unit
--   expressions.
module Data.Units.SI.Parser
si :: QuasiQuoter


-- | This module exports definitions for the SI system, with the intent of
--   using these definitions in a monomorphic manner -- that is, with the
--   DefaultLCSU. The difference between this module and <a>MonoTypes</a>
--   is that this module also exports instances of <a>DefaultUnitOfDim</a>,
--   necessary for use with <a>DefaultLCSU</a>.
module Data.Metrology.SI.Mono


-- | This module defines units used in the centimeter<i>gram</i>second
--   system of measurement.
--   
--   Included are all mechanical units mentioned here:
--   <a>http://en.wikipedia.org/wiki/Centimetre%E2%80%93gram%E2%80%93second_system_of_units</a>
--   
--   Some electromagnetic units are not included, because these do not have
--   reliable conversions to/from the SI units, on which the
--   <tt>units-defs</tt> edifice is based.
module Data.Units.CGS

-- | 10^-2
data Centi
Centi :: Centi
centi :: unit -> Centi :@ unit
data Meter
Meter :: Meter
data Gram
Gram :: Gram
data Second
Second :: Second
type Centimeter = Centi :@ Meter
type Centimetre = Centimeter
data Gal
Gal :: Gal
data Dyne
Dyne :: Dyne
data Erg
Erg :: Erg
data Barye
Barye :: Barye
data Poise
Poise :: Poise
data Stokes
Stokes :: Stokes
data Kayser
Kayser :: Kayser
data Maxwell
Maxwell :: Maxwell
data Gauss
Gauss :: Gauss
instance Show Gauss
instance Unit Gauss
instance Show Maxwell
instance Unit Maxwell
instance Unit Kayser
instance Show Stokes
instance Unit Stokes
instance Show Poise
instance Unit Poise
instance Show Barye
instance Unit Barye
instance Show Erg
instance Unit Erg
instance Show Dyne
instance Unit Dyne
instance Show Gal
instance Unit Gal


-- | This module defines survey measures as used in the USA. Note that a
--   survey foot is ever so slightly different from a standard foot.
--   
--   Included are all units mentioned here:
--   <a>http://en.wikipedia.org/wiki/United_States_customary_units</a>
--   Where possible, conversion rates have been independently verified at a
--   US government website. However, Wikipedia's base is <i>much</i> better
--   organized than any government resource immediately available. The US
--   government references used are as follows:
--   <a>http://nist.gov/pml/wmd/metric/upload/SP1038.pdf</a>
--   <a>http://nist.gov/pml/wmd/pubs/upload/appc-14-hb44-final.pdf</a>
module Data.Units.US.Survey
data Foot
Foot :: Foot
data Link
Link :: Link
data Rod
Rod :: Rod
data Chain
Chain :: Chain
data Furlong
Furlong :: Furlong
data Mile
Mile :: Mile
data League
League :: League

-- | Includes all the lengths above.
surveyLengths :: [Name]
data Acre
Acre :: Acre
data Section
Section :: Section
data Township
Township :: Township

-- | Includes all the areas above.
surveyAreas :: [Name]
instance Show Township
instance Unit Township
instance Show Section
instance Unit Section
instance Show Acre
instance Unit Acre
instance Show League
instance Unit League
instance Show Mile
instance Unit Mile
instance Show Furlong
instance Unit Furlong
instance Show Chain
instance Unit Chain
instance Show Rod
instance Unit Rod
instance Show Link
instance Unit Link
instance Show Foot
instance Unit Foot


-- | This module defines avoirdupois measures of mass. The avoirdupois
--   system is the one most commonly used in the US.
--   
--   Included are all units mentioned here:
--   <a>http://en.wikipedia.org/wiki/United_States_customary_units</a>
--   Where possible, conversion rates have been independently verified at a
--   US government website. However, Wikipedia's base is <i>much</i> better
--   organized than any government resource immediately available. The US
--   government references used are as follows:
--   <a>http://nist.gov/pml/wmd/metric/upload/SP1038.pdf</a>
--   <a>http://nist.gov/pml/wmd/pubs/upload/appc-14-hb44-final.pdf</a>
module Data.Units.US.Avoirdupois
data Pound
Pound :: Pound
data Grain
Grain :: Grain
data Dram
Dram :: Dram
data Ounce
Ounce :: Ounce
data Hundredweight
Hundredweight :: Hundredweight
data LongHundredweight
LongHundredweight :: LongHundredweight
data Ton
Ton :: Ton
data LongTon
LongTon :: LongTon

-- | Includes <a>Ounce</a>, <a>Pound</a>, <a>Ton</a>
commonMassMeasures :: [Name]

-- | Includes <a>Grain</a>, <a>Dram</a>, <a>Hundredweight</a>,
--   <a>LongHundredweight</a>, and <a>LongTon</a>
otherMassMeasures :: [Name]
instance Show LongTon
instance Unit LongTon
instance Show Ton
instance Unit Ton
instance Show LongHundredweight
instance Unit LongHundredweight
instance Show Hundredweight
instance Unit Hundredweight
instance Show Ounce
instance Unit Ounce
instance Show Dram
instance Unit Dram
instance Show Grain
instance Unit Grain
instance Show Pound
instance Unit Pound


-- | This module defines troy measures of mass. The troy system is most
--   often used when measuring precious metals.
--   
--   Included are all units mentioned here:
--   <a>http://en.wikipedia.org/wiki/United_States_customary_units</a>
--   Where possible, conversion rates have been independently verified at a
--   US government website. However, Wikipedia's base is <i>much</i> better
--   organized than any government resource immediately available. The US
--   government references used are as follows:
--   <a>http://nist.gov/pml/wmd/metric/upload/SP1038.pdf</a>
--   <a>http://nist.gov/pml/wmd/pubs/upload/appc-14-hb44-final.pdf</a>
module Data.Units.US.Troy
data Pennyweight
Pennyweight :: Pennyweight
data Ounce
Ounce :: Ounce
data Pound
Pound :: Pound

-- | Includes <a>Grain</a>, <a>Pennyweight</a>, <a>Ounce</a>, and
--   <a>Pound</a>
troyMassMeasures :: [Name]
data Grain
Grain :: Grain
instance Show Pound
instance Unit Pound
instance Show Ounce
instance Unit Ounce
instance Show Pennyweight
instance Unit Pennyweight


-- | This module defines apothecaries' measures of mass. These measures are
--   rarely used.
--   
--   Included are all units mentioned here:
--   <a>http://en.wikipedia.org/wiki/United_States_customary_units</a>
--   Where possible, conversion rates have been independently verified at a
--   US government website. However, Wikipedia's base is <i>much</i> better
--   organized than any government resource immediately available. The US
--   government references used are as follows:
--   <a>http://nist.gov/pml/wmd/metric/upload/SP1038.pdf</a>
--   <a>http://nist.gov/pml/wmd/pubs/upload/appc-14-hb44-final.pdf</a>
module Data.Units.US.Apothecaries
data Scruple
Scruple :: Scruple
data Dram
Dram :: Dram

-- | Includes <a>Grain</a>, <a>Scruple</a>, <a>Dram</a>, <a>Ounce</a>, and
--   <a>Pound</a>.
apothecariesMassMeasures :: [Name]
data Grain
Grain :: Grain
data Ounce
Ounce :: Ounce
data Pound
Pound :: Pound
instance Show Dram
instance Unit Dram
instance Show Scruple
instance Unit Scruple


-- | Units used in the measure of precious metals.
module Data.Units.PreciousMetals
data Carat
Carat :: Carat
data Point
Point :: Point
data AssayTon
AssayTon :: AssayTon
instance Show AssayTon
instance Unit AssayTon
instance Show Point
instance Unit Point
instance Show Carat
instance Unit Carat


-- | This module defines type synonyms for dimensions based on the seven SI
--   dimensions, for arbitrary choice of system of units and numerical
--   values.
module Data.Metrology.SI.PolyTypes
type Length = MkQu_DLN Length
type Mass = MkQu_DLN Mass
type Time = MkQu_DLN Time
type Current = MkQu_DLN Current
type Temperature = MkQu_DLN Temperature
type AmountOfSubstance = MkQu_DLN AmountOfSubstance
type LuminousIntensity = MkQu_DLN LuminousIntensity
type Area = MkQu_DLN Area
type Volume = MkQu_DLN Volume
type Velocity = MkQu_DLN Velocity
type Acceleration = MkQu_DLN Acceleration
type Wavenumber = MkQu_DLN Wavenumber
type Density = MkQu_DLN Density
type SurfaceDensity = MkQu_DLN SurfaceDensity
type SpecificVolume = MkQu_DLN SpecificVolume
type CurrentDensity = MkQu_DLN CurrentDensity
type MagneticStrength = MkQu_DLN MagneticStrength
type Concentration = MkQu_DLN Concentration
type Luminance = MkQu_DLN Luminance
type Frequency = MkQu_DLN Frequency
type Force = MkQu_DLN Force
type Pressure = MkQu_DLN Pressure
type Energy = MkQu_DLN Energy
type Power = MkQu_DLN Power
type Charge = MkQu_DLN Charge
type ElectricPotential = MkQu_DLN ElectricPotential
type Capacitance = MkQu_DLN Capacitance
type Resistance = MkQu_DLN Resistance
type Conductance = MkQu_DLN Conductance
type MagneticFlux = MkQu_DLN MagneticFlux
type MagneticFluxDensity = MkQu_DLN MagneticFluxDensity
type Inductance = MkQu_DLN Inductance
type LuminousFlux = MkQu_DLN LuminousFlux
type Illuminance = MkQu_DLN Illuminance
type Kerma = MkQu_DLN Kerma
type CatalyticActivity = MkQu_DLN CatalyticActivity
type Momentum = MkQu_DLN Momentum


-- | Approximates mathematical constants as <a>Rational</a>s
module Data.Constants.Math
piR :: Rational
eR :: Rational


-- | This module defines American customary units that don't fit into other
--   categories.
--   
--   Included are all units mentioned here:
--   <a>http://en.wikipedia.org/wiki/United_States_customary_units</a>
--   Where possible, conversion rates have been independently verified at a
--   US government website. However, Wikipedia's base is <i>much</i> better
--   organized than any government resource immediately available. The US
--   government references used are as follows:
--   <a>http://nist.gov/pml/wmd/metric/upload/SP1038.pdf</a>
--   <a>http://nist.gov/pml/wmd/pubs/upload/appc-14-hb44-final.pdf</a>
module Data.Units.US.Misc
data Foot
Foot :: Foot
data Inch
Inch :: Inch
data Yard
Yard :: Yard
data Mile
Mile :: Mile
data Angstrom
Angstrom :: Angstrom
data Hand
Hand :: Hand
data Mil
Mil :: Mil
data Point
Point :: Point
data Pica
Pica :: Pica
data Fathom
Fathom :: Fathom
data Cable
Cable :: Cable
data NauticalMile
NauticalMile :: NauticalMile
data Knot
Knot :: Knot
data Atmosphere
Atmosphere :: Atmosphere
data Bar
Bar :: Bar
data MillimeterOfMercury
MillimeterOfMercury :: MillimeterOfMercury
data Torr
Torr :: Torr
data Calorie
Calorie :: Calorie
data FoodCalorie
FoodCalorie :: FoodCalorie
data Therm
Therm :: Therm
data Btu
Btu :: Btu
data Horsepower
Horsepower :: Horsepower
data Rankine
Rankine :: Rankine
data PoundForce
PoundForce :: PoundForce
data Slug
Slug :: Slug
data Oersted
Oersted :: Oersted

-- | Standard lengths: <a>Foot</a>, <a>Inch</a>, <a>Yard</a>, and
--   <a>Mile</a>
lengths :: [Name]
data Maxwell
Maxwell :: Maxwell
instance Show Oersted
instance Unit Oersted
instance Show Slug
instance Unit Slug
instance Show PoundForce
instance Unit PoundForce
instance Show Rankine
instance Unit Rankine
instance Show Horsepower
instance Unit Horsepower
instance Show Btu
instance Unit Btu
instance Show Therm
instance Unit Therm
instance Show FoodCalorie
instance Unit FoodCalorie
instance Show Calorie
instance Unit Calorie
instance Show Torr
instance Unit Torr
instance Show MillimeterOfMercury
instance Unit MillimeterOfMercury
instance Show Bar
instance Unit Bar
instance Show Atmosphere
instance Unit Atmosphere
instance Show Knot
instance Unit Knot
instance Show NauticalMile
instance Unit NauticalMile
instance Show Cable
instance Unit Cable
instance Show Fathom
instance Unit Fathom
instance Show Pica
instance Unit Pica
instance Show Point
instance Unit Point
instance Show Mil
instance Unit Mil
instance Show Hand
instance Unit Hand
instance Show Angstrom
instance Unit Angstrom
instance Show Mile
instance Unit Mile
instance Show Yard
instance Unit Yard
instance Show Inch
instance Unit Inch
instance Show Foot
instance Unit Foot


-- | This module defines liquid volume measures as used in the USA. Note
--   that liquid volumes in the USA differ both from solid volumes in the
--   USA and from liquid volumes in the UK.
--   
--   Included are all units mentioned here:
--   <a>http://en.wikipedia.org/wiki/United_States_customary_units</a>
--   Where possible, conversion rates have been independently verified at a
--   US government website. However, Wikipedia's base is <i>much</i> better
--   organized than any government resource immediately available. The US
--   government references used are as follows:
--   <a>http://nist.gov/pml/wmd/metric/upload/SP1038.pdf</a>
--   <a>http://nist.gov/pml/wmd/pubs/upload/appc-14-hb44-final.pdf</a>
module Data.Units.US.Liquid
data Gallon
Gallon :: Gallon
data FluidOunce
FluidOunce :: FluidOunce
data Gill
Gill :: Gill
data Cup
Cup :: Cup
data Pint
Pint :: Pint
data Quart
Quart :: Quart
data Teaspoon
Teaspoon :: Teaspoon
data Tablespoon
Tablespoon :: Tablespoon
data Shot
Shot :: Shot
data Minim
Minim :: Minim
data Dram
Dram :: Dram
data Hogshead
Hogshead :: Hogshead
data Barrel
Barrel :: Barrel
data OilBarrel
OilBarrel :: OilBarrel

-- | As shown on Wikipedia:
--   <a>http://en.wikipedia.org/wiki/United_States_customary_units</a>
commonLiquidMeasures :: [Name]

-- | Includes the rest of the measures in this file.
otherLiquidMeasures :: [Name]
instance Show OilBarrel
instance Unit OilBarrel
instance Show Barrel
instance Unit Barrel
instance Show Hogshead
instance Unit Hogshead
instance Show Dram
instance Unit Dram
instance Show Minim
instance Unit Minim
instance Show Shot
instance Unit Shot
instance Show Tablespoon
instance Unit Tablespoon
instance Show Teaspoon
instance Unit Teaspoon
instance Show Quart
instance Unit Quart
instance Show Pint
instance Unit Pint
instance Show Cup
instance Unit Cup
instance Show Gill
instance Unit Gill
instance Show FluidOunce
instance Unit FluidOunce
instance Show Gallon
instance Unit Gallon


-- | This module defines the American customary system of units. Because
--   there are some names that are conflicted, even within this system,
--   there are several modules underneath here, defining sub-parts of the
--   US system. This module gathers together a subjective set of units
--   users will commonly wish to use. It also exports type instances
--   <tt>DefaultUnitOfDim</tt> that use the <i>SI</i> internal
--   representations. This choice is made for inter-compatibility with SI
--   computations. If you want the foot-pound-second system, use the
--   <tt>FPS</tt>.
--   
--   Included are all units mentioned here:
--   <a>http://en.wikipedia.org/wiki/United_States_customary_units</a>
--   Where possible, conversion rates have been independently verified at a
--   US government website. However, Wikipedia's base is <i>much</i> better
--   organized than any government resource immediately available. The US
--   government references used are as follows:
--   <a>http://nist.gov/pml/wmd/metric/upload/SP1038.pdf</a>
--   <a>http://nist.gov/pml/wmd/pubs/upload/appc-14-hb44-final.pdf</a>
module Data.Units.US
data Angstrom
Angstrom :: Angstrom
data Mil
Mil :: Mil
data Point
Point :: Point
data Pica
Pica :: Pica
data Inch
Inch :: Inch
data Foot
Foot :: Foot
data Yard
Yard :: Yard
data Mile
Mile :: Mile
data NauticalMile
NauticalMile :: NauticalMile
data Knot
Knot :: Knot
data Acre
Acre :: Acre
data Teaspoon
Teaspoon :: Teaspoon
data Tablespoon
Tablespoon :: Tablespoon
data FluidOunce
FluidOunce :: FluidOunce
data Cup
Cup :: Cup
data Pint
Pint :: Pint
data Quart
Quart :: Quart
data Gallon
Gallon :: Gallon
data Ounce
Ounce :: Ounce
data Pound
Pound :: Pound
data Ton
Ton :: Ton
data Atmosphere
Atmosphere :: Atmosphere
data Bar
Bar :: Bar
data FoodCalorie
FoodCalorie :: FoodCalorie
data Therm
Therm :: Therm
data Btu
Btu :: Btu
data Horsepower
Horsepower :: Horsepower


-- | This module defines dry volume measures as used in the USA.
--   
--   Included are all units mentioned here:
--   <a>http://en.wikipedia.org/wiki/United_States_customary_units</a>
--   Where possible, conversion rates have been independently verified at a
--   US government website. However, Wikipedia's base is <i>much</i> better
--   organized than any government resource immediately available. The US
--   government references used are as follows:
--   <a>http://nist.gov/pml/wmd/metric/upload/SP1038.pdf</a>
--   <a>http://nist.gov/pml/wmd/pubs/upload/appc-14-hb44-final.pdf</a>
module Data.Units.US.DryVolume
data Gallon
Gallon :: Gallon
data Quart
Quart :: Quart
data Pint
Pint :: Pint
data Peck
Peck :: Peck
data Bushel
Bushel :: Bushel
data Barrel
Barrel :: Barrel
data Cord
Cord :: Cord
data BoardFoot
BoardFoot :: BoardFoot
data RegisterTon
RegisterTon :: RegisterTon
data CranberryBarrel
CranberryBarrel :: CranberryBarrel

-- | Includes all measures in this file, except <a>CranberryBarrel</a>.
dryVolumeMeasures :: [Name]
instance Show CranberryBarrel
instance Unit CranberryBarrel
instance Show RegisterTon
instance Unit RegisterTon
instance Show BoardFoot
instance Unit BoardFoot
instance Show Cord
instance Unit Cord
instance Show Barrel
instance Unit Barrel
instance Show Bushel
instance Unit Bushel
instance Show Peck
instance Unit Peck
instance Show Pint
instance Unit Pint
instance Show Quart
instance Unit Quart
instance Show Gallon
instance Unit Gallon


-- | This module exports definitions for the SI system, with the intent of
--   using these definitions in a polymorphic manner -- that is, with
--   multiple LCSUs.
module Data.Metrology.SI.Poly
type SI = MkLCSU '[(Length, Meter), (Mass, Kilo :@ Gram), (Time, Second), (Current, Ampere), (Temperature, Kelvin), (AmountOfSubstance, Mole), (LuminousIntensity, Lumen)]


-- | This module exports unit, type, and prefix definitions according to
--   the SI system of units. The definitions were taken from here:
--   <a>http://www.bipm.org/en/si/</a> and here:
--   <a>http://www.bipm.org/utils/common/documents/jcgm/JCGM_200_2012.pdf</a>.
--   
--   This module exports the monomorphic version of the definitions. For
--   polymorphic versions, use <a>Poly</a>.
module Data.Metrology.SI


-- | This file defines dimensioned physical constants, useful in mechanics.
--   
--   The names used are a short description of the constant followed by its
--   usual symbol, separated by an underscore. For non-Latin symbols, the
--   Latin-lettered transliteration of the symbol name is used.
module Data.Constants.Mechanics

-- | Acceleration at Earth's surface due to gravity.
gravity_g :: (Fractional n_apbm, CompatibleUnit lcsu_apbl ((:/) Meter ((:^) Second Two))) => MkQu_ULN ((:/) Meter ((:^) Second Two)) lcsu_apbl n_apbm
