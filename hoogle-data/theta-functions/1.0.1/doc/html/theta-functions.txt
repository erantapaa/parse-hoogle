-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Theta-functions implemented as trigonometric series
--   
--   Small and simple library for computing values of Theta functions.
--   They're the special functions of two variables. Described very well at
--   <a>https://en.wikipedia.org/wiki/Theta_function</a>. Library exports
--   four theta-functions and a small helper to calculate their second
--   parameter. Theta functions are functions of Complex variables, FYI.
@package theta-functions
@version 1.0.1


-- | Theta-functions implemented on top of trigonometric series.
--   
--   Theta-functions are special functions of several complex variables
--   Their importance is that we can construct an elliptic functions from
--   combination of theta-functions, see details at
--   <a>http://en.wikipedia.org/wiki/Theta_function</a>.
--   
--   Depend on parameter Tau, which should be positive. Call every function
--   in the following form:
--   
--   <pre>
--   theta1 N (qpar Tau) U
--   </pre>
--   
--   where <tt>N</tt> is a number of addends in series representing the
--   function, <tt>Tau</tt> is a tau parameter defining the theta-function
--   and <tt>U</tt> is an argument, which is a complex number.
--   
--   WARNING: theta-functions are raising their values very quickly when
--   arg is raising. This depends on behaviour of cos and sin of complex
--   functions, which are very rapidly increasing their values. Call
--   theta-functions with n &lt; 20, q &lt; 1, |u| &lt; pi.
module Numeric.Functions.Theta

-- | Theta-function depends on parameter q, which abs should be lower than
--   1 Parameter q, however, depends on the main parameter tau, so we will
--   make q dependent variable
qpar :: RealFloat a => a -> Complex a

-- | Theta_1
theta1 :: RealFloat a => Integer -> Complex a -> Complex a -> Complex a

-- | Theta_2
theta2 :: RealFloat a => Integer -> Complex a -> Complex a -> Complex a

-- | Theta_3
theta3 :: RealFloat a => Integer -> Complex a -> Complex a -> Complex a

-- | Theta_4
theta4 :: RealFloat a => Integer -> Complex a -> Complex a -> Complex a
