-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Tags for hedis
--   
--   Brain-free tags for Redis.
@package hedis-tags
@version 0.2.3


-- | Hedis tags helper.
module Database.Redis.Tags

-- | Mark keys with tags. Keys may be absent. All tags named in next
--   manner:
--   
--   <pre>
--   tag-prefix:tag:tag-signature
--   </pre>
--   
--   Tags stored in Redis as sets with no expiration. Tags not related to
--   each other.
--   
--   <i>Time complexity</i> <tt>O(K+T)</tt> where <tt>K</tt> and <tt>T</tt>
--   is number of keys and tags.
markTags :: RedisCtx m f => [ByteString] -> ByteString -> [ByteString] -> m ()

-- | Purge tagged keys and tags.
--   
--   Because the tags are not related to each other, if key tagged with
--   more than one tags, remember the following. After removal of one of
--   the tags, may remain orphans. To avoid this, purge all needed tags or
--   use <tt>reconcileTags</tt> for stripping.
--   
--   <i>Time complexity</i> <tt>~O(T+2K)</tt> where <tt>T</tt> is number
--   tags and <tt>K</tt> is number of tagged keys.
purgeTags :: RedisCtx m (Either a) => ByteString -> [ByteString] -> m ()

-- | Helper for create list of nested tags.
--   
--   <pre>
--   nestTags ["one", "two", "three"]
--   ["one", "one:two", "one:two:three"]
--   </pre>
nestTags :: [ByteString] -> [ByteString]

-- | Reconcile all tags with given prefix.
--   
--   <ul>
--   <li>Remove noexistent keys from tags.</li>
--   <li>Remove empty tags.</li>
--   </ul>
--   
--   This operation take huge time complexity. Use it only for maintenance.
reconsileTags :: RedisCtx m (Either a) => ByteString -> m ()
