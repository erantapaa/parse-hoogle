-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Minimalist haskell html library
--   
@package html-minimalist
@version 0.15


-- | Element constructors. The resulting elements are lifted to the Content
--   data type, with the exception of the <a>html</a> element.
module Text.HTML.Light.Element

-- | Ordinary character data, subject to escaping.
cdata :: String -> Content

-- | Raw character data, not subject to escaping.
cdata_raw :: String -> Content

-- | Element contructor.
type Element_C = [Attr] -> [Content] -> Content

-- | Empty element contructor.
type Empty_Element_C = [Attr] -> Content
mk_element :: String -> Element_C
mk_empty_element :: String -> Empty_Element_C
a :: Element_C
address :: Element_C
area :: Empty_Element_C
article :: Element_C
aside :: Element_C
audio :: Element_C
body :: Element_C
br :: Empty_Element_C
caption :: Element_C
cite :: Element_C
colgroup :: Element_C
col :: Empty_Element_C
div :: Element_C
em :: Element_C
embed :: Empty_Element_C
figcaption :: Element_C
figure :: Element_C
footer :: Element_C
form :: Element_C
frame :: Empty_Element_C
frameset :: Empty_Element_C
h1 :: Element_C
h2 :: Element_C
h3 :: Element_C
h4 :: Element_C
head :: Element_C
header :: Element_C
hgroup :: Element_C
hr :: Empty_Element_C
html :: [Attr] -> [Content] -> Element
iframe :: Element_C
img :: Empty_Element_C
input :: Empty_Element_C
li :: Element_C
link :: Empty_Element_C
map :: Element_C
meta :: Empty_Element_C
nav :: Element_C
object :: Element_C
ol :: Element_C
param :: Empty_Element_C
ul :: Element_C
dl :: Element_C
dt :: Element_C
dd :: Element_C
p :: Element_C
pre :: Element_C
q :: Element_C
script :: Element_C
section :: Element_C
source :: Empty_Element_C
span :: Element_C
style :: Element_C
table :: Element_C
tbody :: Element_C
td :: Element_C
textarea :: Element_C
tfoot :: Element_C
th :: Element_C
thead :: Element_C
time :: Element_C
title :: Element_C
tr :: Element_C
wbr :: Empty_Element_C


-- | (x)html related constants.
module Text.HTML.Light.Constant
c_entity :: String -> Content

-- | The copyright character.
copy :: Content

-- | The down arrow character.
darr :: Content

-- | The double down arrow character.
dArr :: Content

-- | The degree character.
deg :: Content

-- | The horizontal ellipsis character.
hellip :: Content

-- | The left double arrow character.
larr :: Content

-- | The empty set symbol.
empty :: Content

-- | The left arrow character.
lArr :: Content

-- | The right double angle quote character.
laquo :: Content

-- | The mid (centre) dot character.
middot :: Content

-- | The non-breaking space character.
nbsp :: Content

-- | The right arrow character.
rarr :: Content

-- | The right double arrow character.
rArr :: Content

-- | The right double angle quote character.
raquo :: Content

-- | The dot operator.
sdot :: Content

-- | The up arrow character.
uarr :: Content

-- | The up double arrow character.
uArr :: Content

-- | The xml version 1.0 string with UTF-8 encoding set.
xml_1_0 :: String

-- | A type synonym for document type strings.
type DocType = String

-- | The xhtml 1.0 strict document type string.
xhtml_1_0_strict :: DocType

-- | The xhtml 1.0 transitional document type string.
xhtml_1_0_transitional :: DocType

-- | The HTML5 document type string.
html5_dt :: DocType


-- | HTML attribute constructors. Where an attribute name conflicts with a
--   haskell keyword the attribute name is written with a prime suffix, ie.
--   <tt>class'</tt>. Where an attribute name conflicts with an element
--   name the attribute name is written likewise.
module Text.HTML.Light.Attribute
mk_attr :: String -> String -> Attr

-- | Make an <a>Attr</a> where the <i>key</i> and <i>value</i> are equal.
mk_bool_attr :: String -> Attr
accept :: String -> Attr
action :: String -> Attr
align :: String -> Attr
alt :: String -> Attr
bgcolor :: String -> Attr
border :: String -> Attr
charset :: String -> Attr

-- | Prime suffixed since <i>class</i> is a reserved word.
class' :: String -> Attr
classid :: String -> Attr
cols :: String -> Attr
colspan :: String -> Attr
content :: String -> Attr
controls :: Attr
coords :: String -> Attr

-- | Prime suffixed since <i>data</i> is a reserved word.
data' :: String -> Attr
datetime :: String -> Attr
enctype :: String -> Attr
frameborder :: String -> Attr
height :: String -> Attr
href :: String -> Attr
id :: String -> Attr
http_equiv :: String -> Attr
lang :: String -> Attr
language :: String -> Attr
media :: String -> Attr
method :: String -> Attr
name :: String -> Attr
onblur :: String -> Attr
onfocus :: String -> Attr
onkeydown :: String -> Attr
onkeypress :: String -> Attr
onkeyup :: String -> Attr
onmousedown :: String -> Attr
onmousemove :: String -> Attr
onmouseout :: String -> Attr
onmouseover :: String -> Attr
onmouseup :: String -> Attr
onmousewheel :: String -> Attr
quality :: String -> Attr
rel :: String -> Attr
rows :: String -> Attr
rowspan :: String -> Attr
seamless :: Attr
shape :: String -> Attr

-- | Prime suffixed since <i>span</i> is the name of both an attribute and
--   element.
span' :: String -> Attr
src :: String -> Attr

-- | Prime suffixed since <i>style</i> is the name of both an attribute and
--   element.
style' :: String -> Attr
tabindex :: String -> Attr
target :: String -> Attr

-- | Prime suffixed since <i>title</i> is the name of both an attribute and
--   element.
title' :: String -> Attr

-- | Prime suffixed since <i>type</i> is a reserved word.
type' :: String -> Attr
usemap :: String -> Attr
user_data :: String -> String -> Attr
valign :: String -> Attr
value :: String -> Attr
width :: String -> Attr
xml_lang :: String -> Attr
xmlns :: String -> Attr


-- | Composite constructors and constants.
module Text.HTML.Light.Composite

-- | Variant on <a>add_attrs</a> lifted to <a>Content</a>.
add_attrs_c :: [Attr] -> Content -> Content

-- | Set <tt>content-type</tt>.
meta_content_type :: String -> Content

-- | Set <tt>author</tt>.
meta_author :: String -> Content

-- | Set <tt>description</tt>.
meta_description :: String -> Content

-- | Set <tt>meta_viewport</tt>.
meta_viewport :: String -> Content

-- | Enumeration of HTML5 link types.
data Link_Type
Link_Alternate :: Link_Type
Link_Author :: Link_Type
Link_Bookmark :: Link_Type
Link_Help :: Link_Type
Link_Icon :: Link_Type
Link_License :: Link_Type
Link_Next :: Link_Type
Link_NoFollow :: Link_Type
Link_NoReferrer :: Link_Type
Link_Prefetch :: Link_Type
Link_Prev :: Link_Type
Link_Search :: Link_Type
Link_Stylesheet :: Link_Type

-- | HTML name for <a>Link_Type</a>.
--   
--   <pre>
--   link_type_str Link_Stylesheet == "stylesheet"
--   </pre>
link_type_str :: Link_Type -> String

-- | Variant on <a>link</a> with enumerated <i>type</i> value.
link_ty :: Link_Type -> [Attr] -> Content

-- | Set CSS <tt>stylesheet</tt> for given <tt>media</tt>.
link_css :: String -> String -> Content

-- | Set RSS <tt>alternate</tt> with given <tt>title</tt>.
link_rss :: String -> String -> Content

-- | Embed javascript.
script_js :: String -> Content

-- | Source javascript.
script_js_src :: FilePath -> Content

-- | <tt>W3.org</tt> HTML validator.
w3_html_validator :: String

-- | <tt>W3.org</tt> CSS validator.
w3_css_validator :: String

-- | <tt>W3.org</tt> CSS validator.
--   
--   <pre>
--   w3_rss_validator "http://haskell.org"
--   </pre>
w3_rss_validator :: String -> String

-- | Enumeration of HTML5 input types.
data Input_Type
Hidden :: Input_Type
Text :: Input_Type
Search :: Input_Type
Tel :: Input_Type
Url :: Input_Type
Email :: Input_Type
Password :: Input_Type
DateTime :: Input_Type
Date :: Input_Type
Month :: Input_Type
Week :: Input_Type
Time :: Input_Type
DateTime_Local :: Input_Type
Number :: Input_Type
Range :: Input_Type
Color :: Input_Type
Checkbox :: Input_Type
Radio :: Input_Type
File :: Input_Type
Submit :: Input_Type
Image :: Input_Type
Reset :: Input_Type
Button :: Input_Type

-- | HTML name for <a>Input_Type</a>.
input_type_str :: Input_Type -> String

-- | Variant on <a>input</a> with enumerated <i>type</i> value.
input_ty :: Input_Type -> [Attr] -> Content

-- | <a>Hidden</a> input with <i>name</i> and <i>value</i>.
input_hidden :: String -> String -> Content

-- | <a>Submit</a> input with <i>name</i> and <i>value</i>.
input_submit :: String -> String -> Content
instance Eq Link_Type
instance Show Link_Type
instance Eq Input_Type
instance Show Input_Type


-- | Menu constructors.
module Text.HTML.Light.Composite.Menu

-- | A menu entry is <i>(name,identifier,link)</i>.
type Menu_Entry = (String, String, Maybe String)
type Menu_P = [Content] -> [Content]

-- | Menu constructor.
type Menu_C = Menu_P -> String -> [Menu_Entry] -> String -> Content
nav_menu :: Element_C -> Element_C -> Menu_C

-- | Make a <a>nav</a> menu of class <i>ty</i> with a <a>ul</a> structure.
--   The entry corresponding to identifier <i>h</i> is marked with the
--   class <tt>here</tt>.
nav_menu_list :: Menu_C

-- | Variant of <a>nav_menu_list</a> using <a>span</a> elements.
nav_menu_span :: Menu_C


-- | Provides xhtml constructors for <a>Light</a>.
module Text.HTML.Light

-- | Render an xhtml element with the given document type.
renderXHTML :: DocType -> Element -> String

-- | Render an HTML5 element with the given document type.
renderHTML5 :: Element -> String

-- | Pretty-printing variant (inserts whitespace).
renderHTML5_pp :: Element -> String

-- | Show HTML content (importantly an <a>iframe</a> element must not be
--   abbreviated).
showHTML5 :: Content -> String
