-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Miniature FORTH-like interpreter
--   
@package miniforth
@version 0.1.0.1

module MiniForth.Types
newtype VM a
VM :: ExceptT Err (StateT World IO) a -> VM a
runVM :: VM a -> ExceptT Err (StateT World IO) a
data Token
Word :: String -> Token
Number :: Double -> Token
Def :: String -> [Token] -> Token
data World
World :: [Double] -> Map String (VM ()) -> World
_stack :: World -> [Double]
_dict :: World -> Map String (VM ())
data Err
StackUnderflow :: Err
UndefinedWord :: String -> Err
AddressOutOfBounds :: Int -> Err
ProgramExit :: Err
stack :: Lens' World [Double]
dict :: Lens' World (Map String (VM ()))
instance Functor VM
instance Applicative VM
instance Monad VM
instance MonadState World VM
instance MonadError Err VM
instance MonadRandom VM
instance MonadIO VM
instance Show Err

module MiniForth.Parser
programParser :: Parsec String () [Token]

module MiniForth.Engine
pop :: VM Double
push :: Double -> VM ()
define :: String -> VM () -> VM ()
run :: [Token] -> VM ()
word :: String -> VM ()

module MiniForth.StdLib
load :: VM ()

module MiniForth
