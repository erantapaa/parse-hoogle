-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Utility functions for testing JSON web services written in Yesod
--   
--   yesod-test-json provides combinators for using the hspec and wai-test
--   libraries together. It is meant to be used like yesod-test, but for
--   web services as opposed to web applications.
@package yesod-test-json
@version 0.2.0.0


-- | Yesod.Test.Json provides convenience functions for working with
--   Test.Hspec and Network.Wai.Test on JSON data.
module Yesod.Test.Json

-- | Run a test suite for your <a>Application</a>
testApp :: Application -> AppConfig env extra -> (((APIFunction -> Session ()) -> Assertion) -> Spec) -> IO ()

-- | A request to your server.
type APIFunction = ByteString -> [Text] -> Maybe Value -> Session SResponse
assertBool :: String -> Bool -> Session ()
assertString :: String -> Session ()
assertOK :: SResponse -> Session ()
assertJSON :: (ToJSON a, FromJSON a) => (a -> (String, Bool)) -> SResponse -> Session ()
type Session = ReaderT Application (StateT ClientState IO)

-- | When an assertion is evaluated, it will output a message if and only
--   if the assertion fails.
--   
--   Test cases are composed of a sequence of one or more assertions.
type Assertion = IO ()
data SResponse :: *
SResponse :: Status -> ResponseHeaders -> ByteString -> SResponse
simpleStatus :: SResponse -> Status
simpleHeaders :: SResponse -> ResponseHeaders
simpleBody :: SResponse -> ByteString
