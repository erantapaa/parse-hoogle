-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A consul client for Haskell
--   
@package consul-haskell
@version 0.2.1

module Network.Consul.Types
data Check
Check :: Text -> Text -> Maybe Text -> Maybe Text -> Maybe Text -> HealthCheckStatus -> Text -> Text -> Check
cNode :: Check -> Text
cCheckId :: Check -> Text
cName :: Check -> Maybe Text
cNotes :: Check -> Maybe Text
cServiceId :: Check -> Maybe Text
cStatus :: Check -> HealthCheckStatus
cOutput :: Check -> Text
cServiceName :: Check -> Text
data Config
Config :: Bool -> Bool -> Datacenter -> Text -> Text -> Config
cBootstrap :: Config -> Bool
cServer :: Config -> Bool
cDatacenter :: Config -> Datacenter
cDataDir :: Config -> Text
cClientAddr :: Config -> Text
data Consistency
Consistent :: Consistency
Default :: Consistency
Stale :: Consistency
data ConsulClient
ConsulClient :: Manager -> Text -> PortNumber -> ConsulClient
ccManager :: ConsulClient -> Manager
ccHostname :: ConsulClient -> Text
ccPort :: ConsulClient -> PortNumber
data Datacenter
Datacenter :: Text -> Datacenter
data Health
Health :: Node -> Service -> [Check] -> Health
hNode :: Health -> Node
hService :: Health -> Service
hChecks :: Health -> [Check]
data HealthCheck
Script :: Text -> Text -> HealthCheck
Ttl :: Text -> HealthCheck
Http :: Text -> HealthCheck
data KeyValue
KeyValue :: Word64 -> Word64 -> Word64 -> ByteString -> Word64 -> Maybe Text -> Text -> KeyValue
kvCreateIndex :: KeyValue -> Word64
kvLockIndex :: KeyValue -> Word64
kvModifyIndex :: KeyValue -> Word64
kvValue :: KeyValue -> ByteString
kvFlags :: KeyValue -> Word64
kvSession :: KeyValue -> Maybe Text
kvKey :: KeyValue -> Text
data KeyValuePut
KeyValuePut :: Text -> ByteString -> Maybe Word64 -> Maybe Word64 -> KeyValuePut
kvpKey :: KeyValuePut -> Text
kvpValue :: KeyValuePut -> ByteString
kvpCasIndex :: KeyValuePut -> Maybe Word64
kvpFlags :: KeyValuePut -> Maybe Word64
data Member
Member :: Text -> Text -> Int -> Object -> Int -> Int -> Int -> Int -> Int -> Int -> Int -> Member
mName :: Member -> Text
mAddress :: Member -> Text
mPort :: Member -> Int
mTags :: Member -> Object
mStatus :: Member -> Int
mProtocolMin :: Member -> Int
mProtocolMax :: Member -> Int
mProtocolCur :: Member -> Int
mDelegateMin :: Member -> Int
mDelegateMax :: Member -> Int
mDelegateCur :: Member -> Int
data Node
Node :: Text -> Text -> Node
nNode :: Node -> Text
nAddress :: Node -> Text
data RegisterRequest
RegisterRequest :: Maybe Datacenter -> Text -> Text -> Maybe Service -> Maybe Check -> RegisterRequest
rrDatacenter :: RegisterRequest -> Maybe Datacenter
rrNode :: RegisterRequest -> Text
rrAddress :: RegisterRequest -> Text
rrService :: RegisterRequest -> Maybe Service
rrCheck :: RegisterRequest -> Maybe Check
data RegisterHealthCheck
RegisterHealthCheck :: Text -> Text -> Text -> Maybe Text -> Maybe Text -> Maybe Text -> RegisterHealthCheck
rhcId :: RegisterHealthCheck -> Text
rhcName :: RegisterHealthCheck -> Text
rhcNotes :: RegisterHealthCheck -> Text
rhcScript :: RegisterHealthCheck -> Maybe Text
rhcInterval :: RegisterHealthCheck -> Maybe Text
rhcTtl :: RegisterHealthCheck -> Maybe Text
data RegisterService
RegisterService :: Maybe Text -> Text -> [Text] -> Maybe Int16 -> Maybe HealthCheck -> RegisterService
rsId :: RegisterService -> Maybe Text
rsName :: RegisterService -> Text
rsTags :: RegisterService -> [Text]
rsPort :: RegisterService -> Maybe Int16
rsCheck :: RegisterService -> Maybe HealthCheck
data Self
Self :: Member -> Self
sMember :: Self -> Member
data Service
Service :: Text -> Text -> [Text] -> Maybe Int -> Service
seId :: Service -> Text
seService :: Service -> Text
seTags :: Service -> [Text]
sePort :: Service -> Maybe Int
data Session
Session :: Text -> Maybe Word64 -> Session
sId :: Session -> Text
sCreateIndex :: Session -> Maybe Word64
data SessionBehavior
Release :: SessionBehavior
Delete :: SessionBehavior
data SessionInfo
SessionInfo :: Maybe Word64 -> [Text] -> Text -> Text -> Maybe SessionBehavior -> Word64 -> Maybe Text -> Maybe Text -> SessionInfo
siLockDelay :: SessionInfo -> Maybe Word64
siChecks :: SessionInfo -> [Text]
siNode :: SessionInfo -> Text
siId :: SessionInfo -> Text
siBehavior :: SessionInfo -> Maybe SessionBehavior
siCreateIndex :: SessionInfo -> Word64
siName :: SessionInfo -> Maybe Text
siTtl :: SessionInfo -> Maybe Text
data SessionRequest
SessionRequest :: Maybe Text -> Maybe Text -> Maybe Node -> [Text] -> Maybe SessionBehavior -> Maybe Text -> SessionRequest
srLockDelay :: SessionRequest -> Maybe Text
srName :: SessionRequest -> Maybe Text
srNode :: SessionRequest -> Maybe Node
srChecks :: SessionRequest -> [Text]
srBehavor :: SessionRequest -> Maybe SessionBehavior
srTtl :: SessionRequest -> Maybe Text
data Sequencer
Sequencer :: Text -> Word64 -> Session -> Sequencer
sKey :: Sequencer -> Text
sLockIndex :: Sequencer -> Word64
sSession :: Sequencer -> Session
instance Eq Datacenter
instance Show Datacenter
instance Ord Datacenter
instance Eq Consistency
instance Show Consistency
instance Enum Consistency
instance Ord Consistency
instance Eq HealthCheckStatus
instance Show HealthCheckStatus
instance Enum HealthCheckStatus
instance Ord HealthCheckStatus
instance Eq SessionBehavior
instance Show SessionBehavior
instance Enum SessionBehavior
instance Ord SessionBehavior
instance Eq HealthCheck
instance Show HealthCheck
instance Ord HealthCheck
instance Show KeyValue
instance Eq KeyValue
instance Show Session
instance Eq SessionInfo
instance Show SessionInfo
instance Show Member
instance Show Self
instance ToJSON (Either (Text, Text) Text)
instance ToJSON SessionRequest
instance ToJSON HealthCheck
instance ToJSON RegisterService
instance ToJSON RegisterHealthCheck
instance ToJSON SessionBehavior
instance FromJSON SessionBehavior
instance FromJSON SessionInfo
instance FromJSON SessionInfoList
instance FromJSON Session
instance FromJSON Health
instance FromJSON Node
instance FromJSON Service
instance FromJSON Check
instance FromJSON Datacenter
instance FromJSON KeyValue
instance FromJSON HealthCheckStatus
instance FromJSON Member
instance FromJSON Config
instance FromJSON Self

module Network.Consul.Internal
deleteKey :: MonadIO m => Manager -> Text -> PortNumber -> Text -> Bool -> Maybe Datacenter -> m ()
getKey :: MonadIO m => Manager -> Text -> PortNumber -> Text -> Maybe Word64 -> Maybe Consistency -> Maybe Datacenter -> m (Maybe KeyValue)
getKeys :: MonadIO m => Manager -> Text -> PortNumber -> Text -> Maybe Word64 -> Maybe Consistency -> Maybe Datacenter -> m [KeyValue]
listKeys :: MonadIO m => Manager -> Text -> PortNumber -> Text -> Maybe Word64 -> Maybe Consistency -> Maybe Datacenter -> m [Text]
putKey :: MonadIO m => Manager -> Text -> PortNumber -> KeyValuePut -> Maybe Datacenter -> m Bool
putKeyAcquireLock :: MonadIO m => Manager -> Text -> PortNumber -> KeyValuePut -> Session -> Maybe Datacenter -> m Bool
putKeyReleaseLock :: MonadIO m => Manager -> Text -> PortNumber -> KeyValuePut -> Session -> Maybe Datacenter -> m Bool
deregisterHealthCheck :: MonadIO m => Manager -> Text -> PortNumber -> Text -> m ()
deregisterService :: MonadIO m => Manager -> Text -> PortNumber -> Text -> m ()
failHealthCheck :: MonadIO m => Manager -> Text -> PortNumber -> Text -> m ()
getSelf :: MonadIO m => Manager -> Text -> PortNumber -> m (Maybe Self)
passHealthCheck :: MonadIO m => Manager -> Text -> PortNumber -> Text -> m ()
registerHealthCheck :: MonadIO m => Manager -> Text -> PortNumber -> RegisterHealthCheck -> m ()
registerService :: MonadIO m => Manager -> Text -> PortNumber -> RegisterService -> Maybe Datacenter -> m Bool
warnHealthCheck :: MonadIO m => Manager -> Text -> PortNumber -> Text -> m ()
getServiceChecks :: MonadIO m => Manager -> Text -> PortNumber -> Text -> m [Check]
getServiceHealth :: MonadIO m => Manager -> Text -> PortNumber -> Text -> m (Maybe Health)
createSession :: MonadIO m => Manager -> Text -> PortNumber -> SessionRequest -> Maybe Datacenter -> m (Maybe Session)
destroySession :: MonadIO m => Manager -> Text -> PortNumber -> Session -> Maybe Datacenter -> m ()
getSessionInfo :: MonadIO m => Manager -> Text -> PortNumber -> Text -> Maybe Datacenter -> m (Maybe [SessionInfo])
renewSession :: MonadIO m => Manager -> Text -> PortNumber -> Session -> Maybe Datacenter -> m Bool
getDatacenters :: MonadIO m => Manager -> Text -> PortNumber -> m [Datacenter]

module Network.Consul
createManagedSession :: MonadIO m => ConsulClient -> Maybe Text -> Text -> m (Maybe ManagedSession)
deleteKey :: MonadIO m => ConsulClient -> Text -> Bool -> Maybe Datacenter -> m ()
destroyManagedSession :: MonadIO m => ConsulClient -> ManagedSession -> m ()
getKey :: MonadIO m => ConsulClient -> Text -> Maybe Word64 -> Maybe Consistency -> Maybe Datacenter -> m (Maybe KeyValue)
getKeys :: MonadIO m => ConsulClient -> Text -> Maybe Word64 -> Maybe Consistency -> Maybe Datacenter -> m [KeyValue]
getSelf :: MonadIO m => ConsulClient -> m (Maybe Self)
getSessionInfo :: MonadIO m => ConsulClient -> Text -> Maybe Datacenter -> m (Maybe [SessionInfo])
getSequencerForLock :: MonadIO m => ConsulClient -> Text -> Session -> Maybe Datacenter -> m (Maybe Sequencer)
initializeConsulClient :: MonadIO m => Text -> PortNumber -> Maybe Manager -> m ConsulClient
isValidSequencer :: MonadIO m => ConsulClient -> Sequencer -> Maybe Datacenter -> m Bool
listKeys :: MonadIO m => ConsulClient -> Text -> Maybe Word64 -> Maybe Consistency -> Maybe Datacenter -> m [Text]
putKey :: MonadIO m => ConsulClient -> KeyValuePut -> Maybe Datacenter -> m Bool
putKeyAcquireLock :: MonadIO m => ConsulClient -> KeyValuePut -> Session -> Maybe Datacenter -> m Bool
putKeyReleaseLock :: MonadIO m => ConsulClient -> KeyValuePut -> Session -> Maybe Datacenter -> m Bool
registerService :: MonadIO m => ConsulClient -> RegisterService -> Maybe Datacenter -> m Bool
withManagedSession :: (MonadBaseControl IO m, MonadIO m) => ConsulClient -> Text -> (Session -> m ()) -> m () -> m ()
withSequencer :: (MonadBaseControl IO m, MonadIO m) => ConsulClient -> Sequencer -> m a -> m a -> Int -> Maybe Datacenter -> m a
withSession :: (MonadIO m, MonadBaseControl IO m) => ConsulClient -> Session -> (Session -> m a) -> m a -> m a
data Consistency
Consistent :: Consistency
Default :: Consistency
Stale :: Consistency
data ConsulClient
ConsulClient :: Manager -> Text -> PortNumber -> ConsulClient
ccManager :: ConsulClient -> Manager
ccHostname :: ConsulClient -> Text
ccPort :: ConsulClient -> PortNumber
data Datacenter
Datacenter :: Text -> Datacenter
data KeyValue
KeyValue :: Word64 -> Word64 -> Word64 -> ByteString -> Word64 -> Maybe Text -> Text -> KeyValue
kvCreateIndex :: KeyValue -> Word64
kvLockIndex :: KeyValue -> Word64
kvModifyIndex :: KeyValue -> Word64
kvValue :: KeyValue -> ByteString
kvFlags :: KeyValue -> Word64
kvSession :: KeyValue -> Maybe Text
kvKey :: KeyValue -> Text
data KeyValuePut
KeyValuePut :: Text -> ByteString -> Maybe Word64 -> Maybe Word64 -> KeyValuePut
kvpKey :: KeyValuePut -> Text
kvpValue :: KeyValuePut -> ByteString
kvpCasIndex :: KeyValuePut -> Maybe Word64
kvpFlags :: KeyValuePut -> Maybe Word64
data ManagedSession
ManagedSession :: Session -> ThreadId -> ManagedSession
msSession :: ManagedSession -> Session
msThreadId :: ManagedSession -> ThreadId
data Session
Session :: Text -> Maybe Word64 -> Session
sId :: Session -> Text
sCreateIndex :: Session -> Maybe Word64
