-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Amazon Glacier SDK.
--   
@package amazonka-glacier
@version 0.3.6

module Network.AWS.Glacier.Types

-- | Version <tt>2012-06-01</tt> of the Amazon Glacier service.
data Glacier
data JSONError :: *
data ArchiveCreationOutput

-- | <a>ArchiveCreationOutput</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>acoArchiveId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>acoChecksum</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>acoLocation</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
archiveCreationOutput :: ArchiveCreationOutput

-- | The ID of the archive. This value is also included as part of the
--   location.
acoArchiveId :: Lens' ArchiveCreationOutput (Maybe Text)

-- | The checksum of the archive computed by Amazon Glacier.
acoChecksum :: Lens' ArchiveCreationOutput (Maybe Text)

-- | The relative URI path of the newly added archive resource.
acoLocation :: Lens' ArchiveCreationOutput (Maybe Text)
data UploadListElement

-- | <a>UploadListElement</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uleArchiveDescription</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>uleCreationDate</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>uleMultipartUploadId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>ulePartSizeInBytes</a> <tt>::</tt> <a>Maybe</a>
--   <a>Integer</a></li>
--   <li><a>uleVaultARN</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
uploadListElement :: UploadListElement

-- | The description of the archive that was specified in the Initiate
--   Multipart Upload request.
uleArchiveDescription :: Lens' UploadListElement (Maybe Text)

-- | The UTC time at which the multipart upload was initiated.
uleCreationDate :: Lens' UploadListElement (Maybe Text)

-- | The ID of a multipart upload.
uleMultipartUploadId :: Lens' UploadListElement (Maybe Text)

-- | The part size, in bytes, specified in the Initiate Multipart Upload
--   request. This is the size of all the parts in the upload except the
--   last part, which may be smaller than this size.
ulePartSizeInBytes :: Lens' UploadListElement (Maybe Integer)

-- | The Amazon Resource Name (ARN) of the vault that contains the archive.
uleVaultARN :: Lens' UploadListElement (Maybe Text)
data InventoryRetrievalJobDescription

-- | <a>InventoryRetrievalJobDescription</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>irjdEndDate</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>irjdFormat</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>irjdLimit</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>irjdMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>irjdStartDate</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
inventoryRetrievalJobDescription :: InventoryRetrievalJobDescription

-- | The end of the date range in UTC for vault inventory retrieval that
--   includes archives created before this date. A string representation of
--   ISO 8601 date format, for example, 2013-03-20T17:03:43Z.
irjdEndDate :: Lens' InventoryRetrievalJobDescription (Maybe Text)

-- | The output format for the vault inventory list, which is set by the
--   InitiateJob request when initiating a job to retrieve a vault
--   inventory. Valid values are <a>CSV</a> and <a>JSON</a>.
irjdFormat :: Lens' InventoryRetrievalJobDescription (Maybe Text)

-- | Specifies the maximum number of inventory items returned per vault
--   inventory retrieval request. This limit is set when initiating the job
--   with the a InitiateJob request.
irjdLimit :: Lens' InventoryRetrievalJobDescription (Maybe Text)

-- | An opaque string that represents where to continue pagination of the
--   vault inventory retrieval results. You use the marker in a new
--   InitiateJob request to obtain additional inventory items. If there are
--   no more inventory items, this value is <a>null</a>. For more
--   information, see <a>Range Inventory Retrieval</a>.
irjdMarker :: Lens' InventoryRetrievalJobDescription (Maybe Text)

-- | The start of the date range in UTC for vault inventory retrieval that
--   includes archives created on or after this date. A string
--   representation of ISO 8601 date format, for example,
--   2013-03-20T17:03:43Z.
irjdStartDate :: Lens' InventoryRetrievalJobDescription (Maybe Text)
data JobParameters

-- | <a>JobParameters</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>jpArchiveId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>jpDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>jpFormat</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>jpInventoryRetrievalParameters</a> <tt>::</tt> <a>Maybe</a>
--   <a>InventoryRetrievalJobInput</a></li>
--   <li><a>jpRetrievalByteRange</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>jpSNSTopic</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>jpType</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
jobParameters :: JobParameters

-- | The ID of the archive that you want to retrieve. This field is
--   required only if <tt>Type</tt> is set to archive-retrieval. An error
--   occurs if you specify this request parameter for an inventory
--   retrieval job request.
jpArchiveId :: Lens' JobParameters (Maybe Text)

-- | The optional description for the job. The description must be less
--   than or equal to 1,024 bytes. The allowable characters are 7-bit ASCII
--   without control codes-specifically, ASCII values 32-126 decimal or
--   0x20-0x7E hexadecimal.
jpDescription :: Lens' JobParameters (Maybe Text)

-- | When initiating a job to retrieve a vault inventory, you can
--   optionally add this parameter to your request to specify the output
--   format. If you are initiating an inventory job and do not specify a
--   Format field, JSON is the default format. Valid values are <a>CSV</a>
--   and <a>JSON</a>.
jpFormat :: Lens' JobParameters (Maybe Text)

-- | Input parameters used for range inventory retrieval.
jpInventoryRetrievalParameters :: Lens' JobParameters (Maybe InventoryRetrievalJobInput)

-- | The byte range to retrieve for an archive retrieval. in the form
--   "<i>StartByteValue</i>-<i>EndByteValue</i>" If not specified, the
--   whole archive is retrieved. If specified, the byte range must be
--   megabyte (1024*1024) aligned which means that <i>StartByteValue</i>
--   must be divisible by 1 MB and <i>EndByteValue</i> plus 1 must be
--   divisible by 1 MB or be the end of the archive specified as the
--   archive byte size value minus 1. If RetrievalByteRange is not megabyte
--   aligned, this operation returns a 400 response.
--   
--   An error occurs if you specify this field for an inventory retrieval
--   job request.
jpRetrievalByteRange :: Lens' JobParameters (Maybe Text)

-- | The Amazon SNS topic ARN to which Amazon Glacier sends a notification
--   when the job is completed and the output is ready for you to download.
--   The specified topic publishes the notification to its subscribers. The
--   SNS topic must exist.
jpSNSTopic :: Lens' JobParameters (Maybe Text)

-- | The job type. You can initiate a job to retrieve an archive or get an
--   inventory of a vault. Valid values are "archive-retrieval" and
--   "inventory-retrieval".
jpType :: Lens' JobParameters (Maybe Text)
data DescribeVaultOutput

-- | <a>DescribeVaultOutput</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvoCreationDate</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dvoLastInventoryDate</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>dvoNumberOfArchives</a> <tt>::</tt> <a>Maybe</a>
--   <a>Integer</a></li>
--   <li><a>dvoSizeInBytes</a> <tt>::</tt> <a>Maybe</a> <a>Integer</a></li>
--   <li><a>dvoVaultARN</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dvoVaultName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
describeVaultOutput :: DescribeVaultOutput

-- | The UTC date when the vault was created. A string representation of
--   ISO 8601 date format, for example, "2012-03-20T17:03:43.221Z".
dvoCreationDate :: Lens' DescribeVaultOutput (Maybe Text)

-- | The UTC date when Amazon Glacier completed the last vault inventory. A
--   string representation of ISO 8601 date format, for example,
--   "2012-03-20T17:03:43.221Z".
dvoLastInventoryDate :: Lens' DescribeVaultOutput (Maybe Text)

-- | The number of archives in the vault as of the last inventory date.
--   This field will return <a>null</a> if an inventory has not yet run on
--   the vault, for example, if you just created the vault.
dvoNumberOfArchives :: Lens' DescribeVaultOutput (Maybe Integer)

-- | Total size, in bytes, of the archives in the vault as of the last
--   inventory date. This field will return null if an inventory has not
--   yet run on the vault, for example, if you just created the vault.
dvoSizeInBytes :: Lens' DescribeVaultOutput (Maybe Integer)

-- | The Amazon Resource Name (ARN) of the vault.
dvoVaultARN :: Lens' DescribeVaultOutput (Maybe Text)

-- | The name of the vault.
dvoVaultName :: Lens' DescribeVaultOutput (Maybe Text)
data DataRetrievalRule

-- | <a>DataRetrievalRule</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>drrBytesPerHour</a> <tt>::</tt> <a>Maybe</a>
--   <a>Integer</a></li>
--   <li><a>drrStrategy</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
dataRetrievalRule :: DataRetrievalRule

-- | The maximum number of bytes that can be retrieved in an hour.
--   
--   This field is required only if the value of the Strategy field is
--   <tt>BytesPerHour</tt>. Your PUT operation will be rejected if the
--   Strategy field is not set to <tt>BytesPerHour</tt> and you set this
--   field.
drrBytesPerHour :: Lens' DataRetrievalRule (Maybe Integer)

-- | The type of data retrieval policy to set.
--   
--   Valid values: BytesPerHour|FreeTier|None
drrStrategy :: Lens' DataRetrievalRule (Maybe Text)
data ActionCode

-- | ArchiveRetrieval
ArchiveRetrieval :: ActionCode

-- | InventoryRetrieval
InventoryRetrieval :: ActionCode
data VaultNotificationConfig

-- | <a>VaultNotificationConfig</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vncEvents</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>vncSNSTopic</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
vaultNotificationConfig :: VaultNotificationConfig

-- | A list of one or more events for which Amazon Glacier will send a
--   notification to the specified Amazon SNS topic.
vncEvents :: Lens' VaultNotificationConfig [Text]

-- | The Amazon Simple Notification Service (Amazon SNS) topic Amazon
--   Resource Name (ARN).
vncSNSTopic :: Lens' VaultNotificationConfig (Maybe Text)
data InventoryRetrievalJobInput

-- | <a>InventoryRetrievalJobInput</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>irjiEndDate</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>irjiLimit</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>irjiMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>irjiStartDate</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
inventoryRetrievalJobInput :: InventoryRetrievalJobInput

-- | The end of the date range in UTC for vault inventory retrieval that
--   includes archives created before this date. A string representation of
--   ISO 8601 date format, for example, 2013-03-20T17:03:43Z.
irjiEndDate :: Lens' InventoryRetrievalJobInput (Maybe Text)

-- | Specifies the maximum number of inventory items returned per vault
--   inventory retrieval request. Valid values are greater than or equal to
--   1.
irjiLimit :: Lens' InventoryRetrievalJobInput (Maybe Text)

-- | An opaque string that represents where to continue pagination of the
--   vault inventory retrieval results. You use the marker in a new
--   InitiateJob request to obtain additional inventory items. If there are
--   no more inventory items, this value is <a>null</a>.
irjiMarker :: Lens' InventoryRetrievalJobInput (Maybe Text)

-- | The start of the date range in UTC for vault inventory retrieval that
--   includes archives created on or after this date. A string
--   representation of ISO 8601 date format, for example,
--   2013-03-20T17:03:43Z.
irjiStartDate :: Lens' InventoryRetrievalJobInput (Maybe Text)
data PartListElement

-- | <a>PartListElement</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pleRangeInBytes</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pleSHA256TreeHash</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
partListElement :: PartListElement

-- | The byte range of a part, inclusive of the upper value of the range.
pleRangeInBytes :: Lens' PartListElement (Maybe Text)

-- | The SHA256 tree hash value that Amazon Glacier calculated for the
--   part. This field is never <a>null</a>.
pleSHA256TreeHash :: Lens' PartListElement (Maybe Text)
data DataRetrievalPolicy

-- | <a>DataRetrievalPolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>drpRules</a> <tt>::</tt> [<a>DataRetrievalRule</a>]</li>
--   </ul>
dataRetrievalPolicy :: DataRetrievalPolicy

-- | The policy rule. Although this is a list type, currently there must be
--   only one rule, which contains a Strategy field and optionally a
--   BytesPerHour field.
drpRules :: Lens' DataRetrievalPolicy [DataRetrievalRule]
data GlacierJobDescription

-- | <a>GlacierJobDescription</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gjdAction</a> <tt>::</tt> <a>Maybe</a> <a>ActionCode</a></li>
--   <li><a>gjdArchiveId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gjdArchiveSHA256TreeHash</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>gjdArchiveSizeInBytes</a> <tt>::</tt> <a>Maybe</a>
--   <a>Integer</a></li>
--   <li><a>gjdCompleted</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>gjdCompletionDate</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gjdCreationDate</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gjdInventoryRetrievalParameters</a> <tt>::</tt> <a>Maybe</a>
--   <a>InventoryRetrievalJobDescription</a></li>
--   <li><a>gjdInventorySizeInBytes</a> <tt>::</tt> <a>Maybe</a>
--   <a>Integer</a></li>
--   <li><a>gjdJobDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gjdJobId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gjdRetrievalByteRange</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>gjdSHA256TreeHash</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gjdSNSTopic</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gjdStatusCode</a> <tt>::</tt> <a>Maybe</a>
--   <a>StatusCode</a></li>
--   <li><a>gjdStatusMessage</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gjdVaultARN</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
glacierJobDescription :: GlacierJobDescription

-- | The job type. It is either ArchiveRetrieval or InventoryRetrieval.
gjdAction :: Lens' GlacierJobDescription (Maybe ActionCode)

-- | For an ArchiveRetrieval job, this is the archive ID requested for
--   download. Otherwise, this field is null.
gjdArchiveId :: Lens' GlacierJobDescription (Maybe Text)

-- | The SHA256 tree hash of the entire archive for an archive retrieval.
--   For inventory retrieval jobs, this field is null.
gjdArchiveSHA256TreeHash :: Lens' GlacierJobDescription (Maybe Text)

-- | For an ArchiveRetrieval job, this is the size in bytes of the archive
--   being requested for download. For the InventoryRetrieval job, the
--   value is null.
gjdArchiveSizeInBytes :: Lens' GlacierJobDescription (Maybe Integer)

-- | The job status. When a job is completed, you get the job's output.
gjdCompleted :: Lens' GlacierJobDescription (Maybe Bool)

-- | The UTC time that the archive retrieval request completed. While the
--   job is in progress, the value will be null.
gjdCompletionDate :: Lens' GlacierJobDescription (Maybe Text)

-- | The UTC date when the job was created. A string representation of ISO
--   8601 date format, for example, "2012-03-20T17:03:43.221Z".
gjdCreationDate :: Lens' GlacierJobDescription (Maybe Text)

-- | Parameters used for range inventory retrieval.
gjdInventoryRetrievalParameters :: Lens' GlacierJobDescription (Maybe InventoryRetrievalJobDescription)

-- | For an InventoryRetrieval job, this is the size in bytes of the
--   inventory requested for download. For the ArchiveRetrieval job, the
--   value is null.
gjdInventorySizeInBytes :: Lens' GlacierJobDescription (Maybe Integer)

-- | The job description you provided when you initiated the job.
gjdJobDescription :: Lens' GlacierJobDescription (Maybe Text)

-- | An opaque string that identifies an Amazon Glacier job.
gjdJobId :: Lens' GlacierJobDescription (Maybe Text)

-- | The retrieved byte range for archive retrieval jobs in the form
--   "<i>StartByteValue</i>-<i>EndByteValue</i>" If no range was specified
--   in the archive retrieval, then the whole archive is retrieved and
--   <i>StartByteValue</i> equals 0 and <i>EndByteValue</i> equals the size
--   of the archive minus 1. For inventory retrieval jobs this field is
--   null.
gjdRetrievalByteRange :: Lens' GlacierJobDescription (Maybe Text)

-- | For an ArchiveRetrieval job, it is the checksum of the archive.
--   Otherwise, the value is null.
--   
--   The SHA256 tree hash value for the requested range of an archive. If
--   the Initiate a Job request for an archive specified a tree-hash
--   aligned range, then this field returns a value.
--   
--   For the specific case when the whole archive is retrieved, this value
--   is the same as the ArchiveSHA256TreeHash value.
--   
--   This field is null in the following situations: Archive retrieval jobs
--   that specify a range that is not tree-hash aligned.
--   
--   Archival jobs that specify a range that is equal to the whole archive
--   and the job status is InProgress.
--   
--   Inventory jobs.
gjdSHA256TreeHash :: Lens' GlacierJobDescription (Maybe Text)

-- | An Amazon Simple Notification Service (Amazon SNS) topic that receives
--   notification.
gjdSNSTopic :: Lens' GlacierJobDescription (Maybe Text)

-- | The status code can be InProgress, Succeeded, or Failed, and indicates
--   the status of the job.
gjdStatusCode :: Lens' GlacierJobDescription (Maybe StatusCode)

-- | A friendly message that describes the job status.
gjdStatusMessage :: Lens' GlacierJobDescription (Maybe Text)

-- | The Amazon Resource Name (ARN) of the vault from which the archive
--   retrieval was requested.
gjdVaultARN :: Lens' GlacierJobDescription (Maybe Text)
data VaultAccessPolicy

-- | <a>VaultAccessPolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vapPolicy</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
vaultAccessPolicy :: VaultAccessPolicy

-- | The vault access policy.
vapPolicy :: Lens' VaultAccessPolicy (Maybe Text)
data StatusCode

-- | Failed
Failed :: StatusCode

-- | InProgress
InProgress :: StatusCode

-- | Succeeded
Succeeded :: StatusCode
instance Eq ArchiveCreationOutput
instance Ord ArchiveCreationOutput
instance Read ArchiveCreationOutput
instance Show ArchiveCreationOutput
instance Eq UploadListElement
instance Ord UploadListElement
instance Read UploadListElement
instance Show UploadListElement
instance Eq InventoryRetrievalJobDescription
instance Ord InventoryRetrievalJobDescription
instance Read InventoryRetrievalJobDescription
instance Show InventoryRetrievalJobDescription
instance Eq DescribeVaultOutput
instance Ord DescribeVaultOutput
instance Read DescribeVaultOutput
instance Show DescribeVaultOutput
instance Eq DataRetrievalRule
instance Ord DataRetrievalRule
instance Read DataRetrievalRule
instance Show DataRetrievalRule
instance Eq ActionCode
instance Ord ActionCode
instance Read ActionCode
instance Show ActionCode
instance Generic ActionCode
instance Enum ActionCode
instance Eq VaultNotificationConfig
instance Ord VaultNotificationConfig
instance Read VaultNotificationConfig
instance Show VaultNotificationConfig
instance Eq InventoryRetrievalJobInput
instance Ord InventoryRetrievalJobInput
instance Read InventoryRetrievalJobInput
instance Show InventoryRetrievalJobInput
instance Eq JobParameters
instance Read JobParameters
instance Show JobParameters
instance Eq PartListElement
instance Ord PartListElement
instance Read PartListElement
instance Show PartListElement
instance Eq DataRetrievalPolicy
instance Read DataRetrievalPolicy
instance Show DataRetrievalPolicy
instance Monoid DataRetrievalPolicy
instance Semigroup DataRetrievalPolicy
instance Eq VaultAccessPolicy
instance Ord VaultAccessPolicy
instance Read VaultAccessPolicy
instance Show VaultAccessPolicy
instance Monoid VaultAccessPolicy
instance Eq StatusCode
instance Ord StatusCode
instance Read StatusCode
instance Show StatusCode
instance Generic StatusCode
instance Enum StatusCode
instance Eq GlacierJobDescription
instance Read GlacierJobDescription
instance Show GlacierJobDescription
instance Datatype D1ActionCode
instance Constructor C1_0ActionCode
instance Constructor C1_1ActionCode
instance Datatype D1StatusCode
instance Constructor C1_0StatusCode
instance Constructor C1_1StatusCode
instance Constructor C1_2StatusCode
instance ToJSON StatusCode
instance FromJSON StatusCode
instance ToQuery StatusCode
instance ToHeader StatusCode
instance ToByteString StatusCode
instance ToText StatusCode
instance FromText StatusCode
instance Hashable StatusCode
instance ToJSON VaultAccessPolicy
instance FromJSON VaultAccessPolicy
instance ToJSON GlacierJobDescription
instance FromJSON GlacierJobDescription
instance ToJSON DataRetrievalPolicy
instance FromJSON DataRetrievalPolicy
instance IsList DataRetrievalPolicy
instance ToJSON PartListElement
instance FromJSON PartListElement
instance ToJSON InventoryRetrievalJobInput
instance FromJSON InventoryRetrievalJobInput
instance ToJSON VaultNotificationConfig
instance FromJSON VaultNotificationConfig
instance ToJSON ActionCode
instance FromJSON ActionCode
instance ToQuery ActionCode
instance ToHeader ActionCode
instance ToByteString ActionCode
instance ToText ActionCode
instance FromText ActionCode
instance Hashable ActionCode
instance ToJSON DataRetrievalRule
instance FromJSON DataRetrievalRule
instance ToJSON DescribeVaultOutput
instance FromJSON DescribeVaultOutput
instance ToJSON JobParameters
instance FromJSON JobParameters
instance ToJSON InventoryRetrievalJobDescription
instance FromJSON InventoryRetrievalJobDescription
instance ToJSON UploadListElement
instance FromJSON UploadListElement
instance ToJSON ArchiveCreationOutput
instance FromJSON ArchiveCreationOutput
instance AWSService Glacier


-- | This operation adds an archive to a vault. This is a synchronous
--   operation, and for a successful upload, your data is durably
--   persisted. Amazon Glacier returns the archive ID in the
--   'x-amz-archive-id' header of the response.
--   
--   You must use the archive ID to access your data in Amazon Glacier.
--   After you upload an archive, you should save the archive ID returned
--   so that you can retrieve or delete the archive later. Besides saving
--   the archive ID, you can also index it and give it a friendly name to
--   allow for better searching. You can also use the optional archive
--   description field to specify how the archive is referred to in an
--   external index of archives, such as you might create in Amazon
--   DynamoDB. You can also get the vault inventory to obtain a list of
--   archive IDs in a vault. For more information, see
--   <tt>InitiateJob</tt>.
--   
--   You must provide a SHA256 tree hash of the data you are uploading. For
--   information about computing a SHA256 tree hash, see <a>Computing
--   Checksums</a>.
--   
--   You can optionally specify an archive description of up to 1,024
--   printable ASCII characters. You can get the archive description when
--   you either retrieve the archive or get the vault inventory. For more
--   information, see <tt>InitiateJob</tt>. Amazon Glacier does not
--   interpret the description in any way. An archive description does not
--   need to be unique. You cannot use the description to retrieve or sort
--   the archive list.
--   
--   Archives are immutable. After you upload an archive, you cannot edit
--   the archive or its description.
--   
--   An AWS account has full permission to perform all operations
--   (actions). However, AWS Identity and Access Management (IAM) users
--   don't have any permissions by default. You must grant them explicit
--   permission to perform specific actions. For more information, see
--   <a>Access Control Using AWS Identityand Access Management (IAM)</a>.
--   
--   For conceptual information and underlying REST API, go to <a>Uploading
--   anArchive in Amazon Glacier</a> and <a>Upload Archive</a> in the
--   <i>Amazon Glacier DeveloperGuide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/amazonglacier/latest/dev/api-UploadArchive.html</a>
module Network.AWS.Glacier.UploadArchive
data UploadArchive

-- | <a>UploadArchive</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uaAccountId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>uaArchiveDescription</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>uaBody</a> <tt>::</tt> <a>RqBody</a></li>
--   <li><a>uaChecksum</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>uaVaultName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
uploadArchive :: Text -> Text -> RqBody -> UploadArchive

-- | The <tt>AccountId</tt> value is the AWS account ID of the account that
--   owns the vault. You can either specify an AWS account ID or optionally
--   a single apos<a>-</a>apos (hyphen), in which case Amazon Glacier uses
--   the AWS account ID associated with the credentials used to sign the
--   request. If you use an account ID, do not include any hyphens
--   (apos-apos) in the ID.
uaAccountId :: Lens' UploadArchive Text

-- | The optional description of the archive you are uploading.
uaArchiveDescription :: Lens' UploadArchive (Maybe Text)

-- | The data to upload.
uaBody :: Lens' UploadArchive RqBody

-- | The SHA256 tree hash of the data being uploaded.
uaChecksum :: Lens' UploadArchive (Maybe Text)

-- | The name of the vault.
uaVaultName :: Lens' UploadArchive Text
data UploadArchiveResponse

-- | <a>UploadArchiveResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uarArchiveId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>uarChecksum</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>uarLocation</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
uploadArchiveResponse :: UploadArchiveResponse

-- | The ID of the archive. This value is also included as part of the
--   location.
uarArchiveId :: Lens' UploadArchiveResponse (Maybe Text)

-- | The checksum of the archive computed by Amazon Glacier.
uarChecksum :: Lens' UploadArchiveResponse (Maybe Text)

-- | The relative URI path of the newly added archive resource.
uarLocation :: Lens' UploadArchiveResponse (Maybe Text)
instance Show UploadArchive
instance Eq UploadArchiveResponse
instance Ord UploadArchiveResponse
instance Read UploadArchiveResponse
instance Show UploadArchiveResponse
instance AWSRequest UploadArchive
instance ToBody UploadArchive
instance ToHeaders UploadArchive
instance ToQuery UploadArchive
instance ToPath UploadArchive


-- | This operation uploads a part of an archive. You can upload archive
--   parts in any order. You can also upload them in parallel. You can
--   upload up to 10,000 parts for a multipart upload.
--   
--   Amazon Glacier rejects your upload part request if any of the
--   following conditions is true:
--   
--   SHA256 tree hash does not matchTo ensure that part data is not
--   corrupted in transmission, you compute a SHA256 tree hash of the part
--   and include it in your request. Upon receiving the part data, Amazon
--   Glacier also computes a SHA256 tree hash. If these hash values don't
--   match, the operation fails. For information about computing a SHA256
--   tree hash, see <a>Computing Checksums</a>.
--   
--   Part size does not matchThe size of each part except the last must
--   match the size specified in the corresponding
--   <tt>InitiateMultipartUpload</tt> request. The size of the last part
--   must be the same size as, or smaller than, the specified size.
--   
--   If you upload a part whose size is smaller than the part size you
--   specified in your initiate multipart upload request and that part is
--   not the last part, then the upload part request will succeed. However,
--   the subsequent Complete Multipart Upload request will fail.
--   
--   Range does not alignThe byte range value in the request does not align
--   with the part size specified in the corresponding initiate request.
--   For example, if you specify a part size of 4194304 bytes (4 MB), then
--   0 to 4194303 bytes (4 MB - 1) and 4194304 (4 MB) to 8388607 (8 MB - 1)
--   are valid part ranges. However, if you set a range value of 2 MB to 6
--   MB, the range does not align with the part size and the upload will
--   fail. This operation is idempotent. If you upload the same part
--   multiple times, the data included in the most recent request
--   overwrites the previously uploaded data.
--   
--   An AWS account has full permission to perform all operations
--   (actions). However, AWS Identity and Access Management (IAM) users
--   don't have any permissions by default. You must grant them explicit
--   permission to perform specific actions. For more information, see
--   <a>Access Control Using AWS Identityand Access Management (IAM)</a>.
--   
--   For conceptual information and underlying REST API, go to <a>Uploading
--   LargeArchives in Parts (Multipart Upload)</a> and <a>Upload Part</a>
--   in the <i>Amazon GlacierDeveloper Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/amazonglacier/latest/dev/api-UploadMultipartPart.html</a>
module Network.AWS.Glacier.UploadMultipartPart
data UploadMultipartPart

-- | <a>UploadMultipartPart</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>umpAccountId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>umpBody</a> <tt>::</tt> <a>RqBody</a></li>
--   <li><a>umpChecksum</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>umpRange</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>umpUploadId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>umpVaultName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
uploadMultipartPart :: Text -> Text -> Text -> RqBody -> UploadMultipartPart

-- | The <tt>AccountId</tt> value is the AWS account ID of the account that
--   owns the vault. You can either specify an AWS account ID or optionally
--   a single apos<a>-</a>apos (hyphen), in which case Amazon Glacier uses
--   the AWS account ID associated with the credentials used to sign the
--   request. If you use an account ID, do not include any hyphens
--   (apos-apos) in the ID.
umpAccountId :: Lens' UploadMultipartPart Text

-- | The data to upload.
umpBody :: Lens' UploadMultipartPart RqBody

-- | The SHA256 tree hash of the data being uploaded.
umpChecksum :: Lens' UploadMultipartPart (Maybe Text)

-- | Identifies the range of bytes in the assembled archive that will be
--   uploaded in this part. Amazon Glacier uses this information to
--   assemble the archive in the proper sequence. The format of this header
--   follows RFC 2616. An example header is Content-Range:bytes
--   0-4194303/*.
umpRange :: Lens' UploadMultipartPart (Maybe Text)

-- | The upload ID of the multipart upload.
umpUploadId :: Lens' UploadMultipartPart Text

-- | The name of the vault.
umpVaultName :: Lens' UploadMultipartPart Text
data UploadMultipartPartResponse

-- | <a>UploadMultipartPartResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>umprChecksum</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
uploadMultipartPartResponse :: UploadMultipartPartResponse

-- | The SHA256 tree hash that Amazon Glacier computed for the uploaded
--   part.
umprChecksum :: Lens' UploadMultipartPartResponse (Maybe Text)
instance Show UploadMultipartPart
instance Eq UploadMultipartPartResponse
instance Ord UploadMultipartPartResponse
instance Read UploadMultipartPartResponse
instance Show UploadMultipartPartResponse
instance Monoid UploadMultipartPartResponse
instance AWSRequest UploadMultipartPart
instance ToBody UploadMultipartPart
instance ToHeaders UploadMultipartPart
instance ToQuery UploadMultipartPart
instance ToPath UploadMultipartPart


-- | This operation configures notifications that will be sent when
--   specific events happen to a vault. By default, you don't get any
--   notifications.
--   
--   To configure vault notifications, send a PUT request to the
--   'notification-configuration' subresource of the vault. The request
--   should include a JSON document that provides an Amazon SNS topic and
--   specific events for which you want Amazon Glacier to send
--   notifications to the topic.
--   
--   Amazon SNS topics must grant permission to the vault to be allowed to
--   publish notifications to the topic. You can configure a vault to
--   publish a notification for the following vault events:
--   
--   ArchiveRetrievalCompleted This event occurs when a job that was
--   initiated for an archive retrieval is completed
--   (<tt>InitiateJob</tt>). The status of the completed job can be
--   <a>Succeeded</a> or <a>Failed</a>. The notification sent to the SNS
--   topic is the same output as returned from <tt>DescribeJob</tt>.
--   InventoryRetrievalCompleted This event occurs when a job that was
--   initiated for an inventory retrieval is completed
--   (<tt>InitiateJob</tt>). The status of the completed job can be
--   <a>Succeeded</a> or <a>Failed</a>. The notification sent to the SNS
--   topic is the same output as returned from <tt>DescribeJob</tt>. An AWS
--   account has full permission to perform all operations (actions).
--   However, AWS Identity and Access Management (IAM) users don't have any
--   permissions by default. You must grant them explicit permission to
--   perform specific actions. For more information, see <a>Access Control
--   Using AWS Identity and Access Management (IAM)</a>.
--   
--   For conceptual information and underlying REST API, go to
--   <a>Configuring VaultNotifications in Amazon Glacier</a> and <a>Set
--   Vault Notification Configuration</a> in the <i>Amazon Glacier
--   Developer Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/amazonglacier/latest/dev/api-SetVaultNotifications.html</a>
module Network.AWS.Glacier.SetVaultNotifications
data SetVaultNotifications

-- | <a>SetVaultNotifications</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>svnAccountId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>svnVaultName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>svnVaultNotificationConfig</a> <tt>::</tt> <a>Maybe</a>
--   <a>VaultNotificationConfig</a></li>
--   </ul>
setVaultNotifications :: Text -> Text -> SetVaultNotifications

-- | The <tt>AccountId</tt> value is the AWS account ID of the account that
--   owns the vault. You can either specify an AWS account ID or optionally
--   a single apos<a>-</a>apos (hyphen), in which case Amazon Glacier uses
--   the AWS account ID associated with the credentials used to sign the
--   request. If you use an account ID, do not include any hyphens
--   (apos-apos) in the ID.
svnAccountId :: Lens' SetVaultNotifications Text

-- | The name of the vault.
svnVaultName :: Lens' SetVaultNotifications Text

-- | Provides options for specifying notification configuration.
svnVaultNotificationConfig :: Lens' SetVaultNotifications (Maybe VaultNotificationConfig)
data SetVaultNotificationsResponse

-- | <a>SetVaultNotificationsResponse</a> constructor.
setVaultNotificationsResponse :: SetVaultNotificationsResponse
instance Eq SetVaultNotifications
instance Read SetVaultNotifications
instance Show SetVaultNotifications
instance Eq SetVaultNotificationsResponse
instance Ord SetVaultNotificationsResponse
instance Read SetVaultNotificationsResponse
instance Show SetVaultNotificationsResponse
instance Generic SetVaultNotificationsResponse
instance Datatype D1SetVaultNotificationsResponse
instance Constructor C1_0SetVaultNotificationsResponse
instance AWSRequest SetVaultNotifications
instance ToJSON SetVaultNotifications
instance ToHeaders SetVaultNotifications
instance ToQuery SetVaultNotifications
instance ToPath SetVaultNotifications


-- | This operation configures an access policy for a vault and will
--   overwrite an existing policy. To configure a vault access policy, send
--   a PUT request to the 'access-policy' subresource of the vault. An
--   access policy is specific to a vault and is also called a vault
--   subresource. You can set one access policy per vault and the policy
--   can be up to 20 KB in size. For more information about vault access
--   policies, see <a>Amazon Glacier Access Control with VaultAccess
--   Policies</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/amazonglacier/latest/dev/api-SetVaultAccessPolicy.html</a>
module Network.AWS.Glacier.SetVaultAccessPolicy
data SetVaultAccessPolicy

-- | <a>SetVaultAccessPolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>svapAccountId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>svapPolicy</a> <tt>::</tt> <a>Maybe</a>
--   <a>VaultAccessPolicy</a></li>
--   <li><a>svapVaultName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
setVaultAccessPolicy :: Text -> Text -> SetVaultAccessPolicy

-- | The <tt>AccountId</tt> value is the AWS account ID of the account that
--   owns the vault. You can either specify an AWS account ID or optionally
--   a single apos<a>-</a>apos (hyphen), in which case Amazon Glacier uses
--   the AWS account ID associated with the credentials used to sign the
--   request. If you use an account ID, do not include any hyphens
--   (apos-apos) in the ID.
svapAccountId :: Lens' SetVaultAccessPolicy Text

-- | The vault access policy as a JSON string.
svapPolicy :: Lens' SetVaultAccessPolicy (Maybe VaultAccessPolicy)

-- | The name of the vault.
svapVaultName :: Lens' SetVaultAccessPolicy Text
data SetVaultAccessPolicyResponse

-- | <a>SetVaultAccessPolicyResponse</a> constructor.
setVaultAccessPolicyResponse :: SetVaultAccessPolicyResponse
instance Eq SetVaultAccessPolicy
instance Read SetVaultAccessPolicy
instance Show SetVaultAccessPolicy
instance Eq SetVaultAccessPolicyResponse
instance Ord SetVaultAccessPolicyResponse
instance Read SetVaultAccessPolicyResponse
instance Show SetVaultAccessPolicyResponse
instance Generic SetVaultAccessPolicyResponse
instance Datatype D1SetVaultAccessPolicyResponse
instance Constructor C1_0SetVaultAccessPolicyResponse
instance AWSRequest SetVaultAccessPolicy
instance ToJSON SetVaultAccessPolicy
instance ToHeaders SetVaultAccessPolicy
instance ToQuery SetVaultAccessPolicy
instance ToPath SetVaultAccessPolicy


-- | This operation sets and then enacts a data retrieval policy in the
--   region specified in the PUT request. You can set one policy per region
--   for an AWS account. The policy is enacted within a few minutes of a
--   successful PUT operation.
--   
--   The set policy operation does not affect retrieval jobs that were in
--   progress before the policy was enacted. For more information about
--   data retrieval policies, see <a>Amazon Glacier Data Retrieval
--   Policies</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/amazonglacier/latest/dev/api-SetDataRetrievalPolicy.html</a>
module Network.AWS.Glacier.SetDataRetrievalPolicy
data SetDataRetrievalPolicy

-- | <a>SetDataRetrievalPolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sdrpAccountId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>sdrpPolicy</a> <tt>::</tt> <a>Maybe</a>
--   <a>DataRetrievalPolicy</a></li>
--   </ul>
setDataRetrievalPolicy :: Text -> SetDataRetrievalPolicy

-- | The <tt>AccountId</tt> value is the AWS account ID. This value must
--   match the AWS account ID associated with the credentials used to sign
--   the request. You can either specify an AWS account ID or optionally a
--   single apos<a>-</a>apos (hyphen), in which case Amazon Glacier uses
--   the AWS account ID associated with the credentials used to sign the
--   request. If you specify your Account ID, do not include any hyphens
--   (apos-apos) in the ID.
sdrpAccountId :: Lens' SetDataRetrievalPolicy Text

-- | The data retrieval policy in JSON format.
sdrpPolicy :: Lens' SetDataRetrievalPolicy (Maybe DataRetrievalPolicy)
data SetDataRetrievalPolicyResponse

-- | <a>SetDataRetrievalPolicyResponse</a> constructor.
setDataRetrievalPolicyResponse :: SetDataRetrievalPolicyResponse
instance Eq SetDataRetrievalPolicy
instance Read SetDataRetrievalPolicy
instance Show SetDataRetrievalPolicy
instance Eq SetDataRetrievalPolicyResponse
instance Ord SetDataRetrievalPolicyResponse
instance Read SetDataRetrievalPolicyResponse
instance Show SetDataRetrievalPolicyResponse
instance Generic SetDataRetrievalPolicyResponse
instance Datatype D1SetDataRetrievalPolicyResponse
instance Constructor C1_0SetDataRetrievalPolicyResponse
instance AWSRequest SetDataRetrievalPolicy
instance ToJSON SetDataRetrievalPolicy
instance ToHeaders SetDataRetrievalPolicy
instance ToQuery SetDataRetrievalPolicy
instance ToPath SetDataRetrievalPolicy


-- | This operation lists all vaults owned by the calling user's account.
--   The list returned in the response is ASCII-sorted by vault name.
--   
--   By default, this operation returns up to 1,000 items. If there are
--   more vaults to list, the response <tt>marker</tt> field contains the
--   vault Amazon Resource Name (ARN) at which to continue the list with a
--   new List Vaults request; otherwise, the <tt>marker</tt> field is
--   <a>null</a>. To return a list of vaults that begins at a specific
--   vault, set the <tt>marker</tt> request parameter to the vault ARN you
--   obtained from a previous List Vaults request. You can also limit the
--   number of vaults returned in the response by specifying the
--   <tt>limit</tt> parameter in the request.
--   
--   An AWS account has full permission to perform all operations
--   (actions). However, AWS Identity and Access Management (IAM) users
--   don't have any permissions by default. You must grant them explicit
--   permission to perform specific actions. For more information, see
--   <a>Access Control Using AWS Identityand Access Management (IAM)</a>.
--   
--   For conceptual information and underlying REST API, go to
--   <a>Retrieving VaultMetadata in Amazon Glacier</a> and <a>List
--   Vaults</a> in the <i>Amazon Glacier DeveloperGuide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/amazonglacier/latest/dev/api-ListVaults.html</a>
module Network.AWS.Glacier.ListVaults
data ListVaults

-- | <a>ListVaults</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lvAccountId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>lvLimit</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lvMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listVaults :: Text -> ListVaults

-- | The <tt>AccountId</tt> value is the AWS account ID. This value must
--   match the AWS account ID associated with the credentials used to sign
--   the request. You can either specify an AWS account ID or optionally a
--   single apos<a>-</a>apos (hyphen), in which case Amazon Glacier uses
--   the AWS account ID associated with the credentials used to sign the
--   request. If you specify your Account ID, do not include any hyphens
--   (apos-apos) in the ID.
lvAccountId :: Lens' ListVaults Text

-- | The maximum number of items returned in the response. If you don't
--   specify a value, the List Vaults operation returns up to 1,000 items.
lvLimit :: Lens' ListVaults (Maybe Text)

-- | A string used for pagination. The marker specifies the vault ARN after
--   which the listing of vaults should begin.
lvMarker :: Lens' ListVaults (Maybe Text)
data ListVaultsResponse

-- | <a>ListVaultsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lvrMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lvrVaultList</a> <tt>::</tt> [<a>DescribeVaultOutput</a>]</li>
--   </ul>
listVaultsResponse :: ListVaultsResponse

-- | The vault ARN at which to continue pagination of the results. You use
--   the marker in another List Vaults request to obtain more vaults in the
--   list.
lvrMarker :: Lens' ListVaultsResponse (Maybe Text)

-- | List of vaults.
lvrVaultList :: Lens' ListVaultsResponse [DescribeVaultOutput]
instance Eq ListVaults
instance Ord ListVaults
instance Read ListVaults
instance Show ListVaults
instance Eq ListVaultsResponse
instance Read ListVaultsResponse
instance Show ListVaultsResponse
instance FromJSON ListVaultsResponse
instance AWSRequest ListVaults
instance ToJSON ListVaults
instance ToHeaders ListVaults
instance ToQuery ListVaults
instance ToPath ListVaults


-- | This operation lists the parts of an archive that have been uploaded
--   in a specific multipart upload. You can make this request at any time
--   during an in-progress multipart upload before you complete the upload
--   (see <tt>CompleteMultipartUpload</tt>. List Parts returns an error for
--   completed uploads. The list returned in the List Parts response is
--   sorted by part range.
--   
--   The List Parts operation supports pagination. By default, this
--   operation returns up to 1,000 uploaded parts in the response. You
--   should always check the response for a <tt>marker</tt> at which to
--   continue the list; if there are no more items the <tt>marker</tt> is
--   <a>null</a>. To return a list of parts that begins at a specific part,
--   set the <tt>marker</tt> request parameter to the value you obtained
--   from a previous List Parts request. You can also limit the number of
--   parts returned in the response by specifying the <tt>limit</tt>
--   parameter in the request.
--   
--   An AWS account has full permission to perform all operations
--   (actions). However, AWS Identity and Access Management (IAM) users
--   don't have any permissions by default. You must grant them explicit
--   permission to perform specific actions. For more information, see
--   <a>Access Control Using AWS Identityand Access Management (IAM)</a>.
--   
--   For conceptual information and the underlying REST API, go to
--   <a>Working withArchives in Amazon Glacier</a> and <a>List Parts</a> in
--   the <i>Amazon Glacier DeveloperGuide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/amazonglacier/latest/dev/api-ListParts.html</a>
module Network.AWS.Glacier.ListParts
data ListParts

-- | <a>ListParts</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lpAccountId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>lpLimit</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lpMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lpUploadId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>lpVaultName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
listParts :: Text -> Text -> Text -> ListParts

-- | The <tt>AccountId</tt> value is the AWS account ID of the account that
--   owns the vault. You can either specify an AWS account ID or optionally
--   a single apos<a>-</a>apos (hyphen), in which case Amazon Glacier uses
--   the AWS account ID associated with the credentials used to sign the
--   request. If you use an account ID, do not include any hyphens
--   (apos-apos) in the ID.
lpAccountId :: Lens' ListParts Text

-- | Specifies the maximum number of parts returned in the response body.
--   If this value is not specified, the List Parts operation returns up to
--   1,000 uploads.
lpLimit :: Lens' ListParts (Maybe Text)

-- | An opaque string used for pagination. This value specifies the part at
--   which the listing of parts should begin. Get the marker value from the
--   response of a previous List Parts response. You need only include the
--   marker if you are continuing the pagination of results started in a
--   previous List Parts request.
lpMarker :: Lens' ListParts (Maybe Text)

-- | The upload ID of the multipart upload.
lpUploadId :: Lens' ListParts Text

-- | The name of the vault.
lpVaultName :: Lens' ListParts Text
data ListPartsResponse

-- | <a>ListPartsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lprArchiveDescription</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>lprCreationDate</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lprMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lprMultipartUploadId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>lprPartSizeInBytes</a> <tt>::</tt> <a>Maybe</a>
--   <a>Integer</a></li>
--   <li><a>lprParts</a> <tt>::</tt> [<a>PartListElement</a>]</li>
--   <li><a>lprVaultARN</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listPartsResponse :: ListPartsResponse

-- | The description of the archive that was specified in the Initiate
--   Multipart Upload request.
lprArchiveDescription :: Lens' ListPartsResponse (Maybe Text)

-- | The UTC time at which the multipart upload was initiated.
lprCreationDate :: Lens' ListPartsResponse (Maybe Text)

-- | An opaque string that represents where to continue pagination of the
--   results. You use the marker in a new List Parts request to obtain more
--   jobs in the list. If there are no more parts, this value is
--   <a>null</a>.
lprMarker :: Lens' ListPartsResponse (Maybe Text)

-- | The ID of the upload to which the parts are associated.
lprMultipartUploadId :: Lens' ListPartsResponse (Maybe Text)

-- | The part size in bytes.
lprPartSizeInBytes :: Lens' ListPartsResponse (Maybe Integer)

-- | A list of the part sizes of the multipart upload.
lprParts :: Lens' ListPartsResponse [PartListElement]

-- | The Amazon Resource Name (ARN) of the vault to which the multipart
--   upload was initiated.
lprVaultARN :: Lens' ListPartsResponse (Maybe Text)
instance Eq ListParts
instance Ord ListParts
instance Read ListParts
instance Show ListParts
instance Eq ListPartsResponse
instance Read ListPartsResponse
instance Show ListPartsResponse
instance FromJSON ListPartsResponse
instance AWSRequest ListParts
instance ToJSON ListParts
instance ToHeaders ListParts
instance ToQuery ListParts
instance ToPath ListParts


-- | This operation lists in-progress multipart uploads for the specified
--   vault. An in-progress multipart upload is a multipart upload that has
--   been initiated by an <tt>InitiateMultipartUpload</tt> request, but has
--   not yet been completed or aborted. The list returned in the List
--   Multipart Upload response has no guaranteed order.
--   
--   The List Multipart Uploads operation supports pagination. By default,
--   this operation returns up to 1,000 multipart uploads in the response.
--   You should always check the response for a <tt>marker</tt> at which to
--   continue the list; if there are no more items the <tt>marker</tt> is
--   <a>null</a>. To return a list of multipart uploads that begins at a
--   specific upload, set the <tt>marker</tt> request parameter to the
--   value you obtained from a previous List Multipart Upload request. You
--   can also limit the number of uploads returned in the response by
--   specifying the <tt>limit</tt> parameter in the request.
--   
--   Note the difference between this operation and listing parts
--   (<tt>ListParts</tt>). The List Multipart Uploads operation lists all
--   multipart uploads for a vault and does not require a multipart upload
--   ID. The List Parts operation requires a multipart upload ID since
--   parts are associated with a single upload.
--   
--   An AWS account has full permission to perform all operations
--   (actions). However, AWS Identity and Access Management (IAM) users
--   don't have any permissions by default. You must grant them explicit
--   permission to perform specific actions. For more information, see
--   <a>Access Control Using AWS Identityand Access Management (IAM)</a>.
--   
--   For conceptual information and the underlying REST API, go to
--   <a>Working withArchives in Amazon Glacier</a> and <a>List Multipart
--   Uploads</a> in the <i>Amazon GlacierDeveloper Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/amazonglacier/latest/dev/api-ListMultipartUploads.html</a>
module Network.AWS.Glacier.ListMultipartUploads
data ListMultipartUploads

-- | <a>ListMultipartUploads</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lmuAccountId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>lmuLimit</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lmuMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lmuVaultName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
listMultipartUploads :: Text -> Text -> ListMultipartUploads

-- | The <tt>AccountId</tt> value is the AWS account ID of the account that
--   owns the vault. You can either specify an AWS account ID or optionally
--   a single apos<a>-</a>apos (hyphen), in which case Amazon Glacier uses
--   the AWS account ID associated with the credentials used to sign the
--   request. If you use an account ID, do not include any hyphens
--   (apos-apos) in the ID.
lmuAccountId :: Lens' ListMultipartUploads Text

-- | Specifies the maximum number of uploads returned in the response body.
--   If this value is not specified, the List Uploads operation returns up
--   to 1,000 uploads.
lmuLimit :: Lens' ListMultipartUploads (Maybe Text)

-- | An opaque string used for pagination. This value specifies the upload
--   at which the listing of uploads should begin. Get the marker value
--   from a previous List Uploads response. You need only include the
--   marker if you are continuing the pagination of results started in a
--   previous List Uploads request.
lmuMarker :: Lens' ListMultipartUploads (Maybe Text)

-- | The name of the vault.
lmuVaultName :: Lens' ListMultipartUploads Text
data ListMultipartUploadsResponse

-- | <a>ListMultipartUploadsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lmurMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lmurUploadsList</a> <tt>::</tt> [<a>UploadListElement</a>]</li>
--   </ul>
listMultipartUploadsResponse :: ListMultipartUploadsResponse

-- | An opaque string that represents where to continue pagination of the
--   results. You use the marker in a new List Multipart Uploads request to
--   obtain more uploads in the list. If there are no more uploads, this
--   value is <a>null</a>.
lmurMarker :: Lens' ListMultipartUploadsResponse (Maybe Text)

-- | A list of in-progress multipart uploads.
lmurUploadsList :: Lens' ListMultipartUploadsResponse [UploadListElement]
instance Eq ListMultipartUploads
instance Ord ListMultipartUploads
instance Read ListMultipartUploads
instance Show ListMultipartUploads
instance Eq ListMultipartUploadsResponse
instance Read ListMultipartUploadsResponse
instance Show ListMultipartUploadsResponse
instance FromJSON ListMultipartUploadsResponse
instance AWSRequest ListMultipartUploads
instance ToJSON ListMultipartUploads
instance ToHeaders ListMultipartUploads
instance ToQuery ListMultipartUploads
instance ToPath ListMultipartUploads


-- | This operation lists jobs for a vault, including jobs that are
--   in-progress and jobs that have recently finished.
--   
--   Amazon Glacier retains recently completed jobs for a period before
--   deleting them; however, it eventually removes completed jobs. The
--   output of completed jobs can be retrieved. Retaining completed jobs
--   for a period of time after they have completed enables you to get a
--   job output in the event you miss the job completion notification or
--   your first attempt to download it fails. For example, suppose you
--   start an archive retrieval job to download an archive. After the job
--   completes, you start to download the archive but encounter a network
--   error. In this scenario, you can retry and download the archive while
--   the job exists.
--   
--   To retrieve an archive or retrieve a vault inventory from Amazon
--   Glacier, you first initiate a job, and after the job completes, you
--   download the data. For an archive retrieval, the output is the archive
--   data, and for an inventory retrieval, it is the inventory list. The
--   List Job operation returns a list of these jobs sorted by job
--   initiation time.
--   
--   This List Jobs operation supports pagination. By default, this
--   operation returns up to 1,000 jobs in the response. You should always
--   check the response for a <tt>marker</tt> at which to continue the
--   list; if there are no more items the <tt>marker</tt> is <a>null</a>.
--   To return a list of jobs that begins at a specific job, set the
--   <tt>marker</tt> request parameter to the value you obtained from a
--   previous List Jobs request. You can also limit the number of jobs
--   returned in the response by specifying the <tt>limit</tt> parameter in
--   the request.
--   
--   Additionally, you can filter the jobs list returned by specifying an
--   optional <tt>statuscode</tt> (InProgress, Succeeded, or Failed) and
--   <tt>completed</tt> (true, false) parameter. The <tt>statuscode</tt>
--   allows you to specify that only jobs that match a specified status are
--   returned. The <tt>completed</tt> parameter allows you to specify that
--   only jobs in a specific completion state are returned.
--   
--   An AWS account has full permission to perform all operations
--   (actions). However, AWS Identity and Access Management (IAM) users
--   don't have any permissions by default. You must grant them explicit
--   permission to perform specific actions. For more information, see
--   <a>Access Control Using AWS Identityand Access Management (IAM)</a>.
--   
--   For the underlying REST API, go to <a>List Jobs</a>
--   
--   
--   <a>http://docs.aws.amazon.com/amazonglacier/latest/dev/api-ListJobs.html</a>
module Network.AWS.Glacier.ListJobs
data ListJobs

-- | <a>ListJobs</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ljAccountId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ljCompleted</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ljLimit</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ljMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ljStatuscode</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ljVaultName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
listJobs :: Text -> Text -> ListJobs

-- | The <tt>AccountId</tt> value is the AWS account ID of the account that
--   owns the vault. You can either specify an AWS account ID or optionally
--   a single apos<a>-</a>apos (hyphen), in which case Amazon Glacier uses
--   the AWS account ID associated with the credentials used to sign the
--   request. If you use an account ID, do not include any hyphens
--   (apos-apos) in the ID.
ljAccountId :: Lens' ListJobs Text

-- | Specifies the state of the jobs to return. You can specify
--   <tt>true</tt> or <tt>false</tt>.
ljCompleted :: Lens' ListJobs (Maybe Text)

-- | Specifies that the response be limited to the specified number of
--   items or fewer. If not specified, the List Jobs operation returns up
--   to 1,000 jobs.
ljLimit :: Lens' ListJobs (Maybe Text)

-- | An opaque string used for pagination. This value specifies the job at
--   which the listing of jobs should begin. Get the marker value from a
--   previous List Jobs response. You need only include the marker if you
--   are continuing the pagination of results started in a previous List
--   Jobs request.
ljMarker :: Lens' ListJobs (Maybe Text)

-- | Specifies the type of job status to return. You can specify the
--   following values: <a>InProgress</a>, <a>Succeeded</a>, or
--   <a>Failed</a>.
ljStatuscode :: Lens' ListJobs (Maybe Text)

-- | The name of the vault.
ljVaultName :: Lens' ListJobs Text
data ListJobsResponse

-- | <a>ListJobsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ljrJobList</a> <tt>::</tt> [<a>GlacierJobDescription</a>]</li>
--   <li><a>ljrMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listJobsResponse :: ListJobsResponse

-- | A list of job objects. Each job object contains metadata describing
--   the job.
ljrJobList :: Lens' ListJobsResponse [GlacierJobDescription]

-- | An opaque string that represents where to continue pagination of the
--   results. You use this value in a new List Jobs request to obtain more
--   jobs in the list. If there are no more jobs, this value is
--   <a>null</a>.
ljrMarker :: Lens' ListJobsResponse (Maybe Text)
instance Eq ListJobs
instance Ord ListJobs
instance Read ListJobs
instance Show ListJobs
instance Eq ListJobsResponse
instance Read ListJobsResponse
instance Show ListJobsResponse
instance FromJSON ListJobsResponse
instance AWSRequest ListJobs
instance ToJSON ListJobs
instance ToHeaders ListJobs
instance ToQuery ListJobs
instance ToPath ListJobs


-- | This operation initiates a multipart upload. Amazon Glacier creates a
--   multipart upload resource and returns its ID in the response. The
--   multipart upload ID is used in subsequent requests to upload parts of
--   an archive (see <tt>UploadMultipartPart</tt>).
--   
--   When you initiate a multipart upload, you specify the part size in
--   number of bytes. The part size must be a megabyte (1024 KB) multiplied
--   by a power of 2-for example, 1048576 (1 MB), 2097152 (2 MB), 4194304
--   (4 MB), 8388608 (8 MB), and so on. The minimum allowable part size is
--   1 MB, and the maximum is 4 GB.
--   
--   Every part you upload to this resource (see
--   <tt>UploadMultipartPart</tt>), except the last one, must have the same
--   size. The last one can be the same size or smaller. For example,
--   suppose you want to upload a 16.2 MB file. If you initiate the
--   multipart upload with a part size of 4 MB, you will upload four parts
--   of 4 MB each and one part of 0.2 MB.
--   
--   You don't need to know the size of the archive when you start a
--   multipart upload because Amazon Glacier does not require you to
--   specify the overall archive size.
--   
--   After you complete the multipart upload, Amazon Glacier removes the
--   multipart upload resource referenced by the ID. Amazon Glacier also
--   removes the multipart upload resource if you cancel the multipart
--   upload or it may be removed if there is no activity for a period of 24
--   hours.
--   
--   An AWS account has full permission to perform all operations
--   (actions). However, AWS Identity and Access Management (IAM) users
--   don't have any permissions by default. You must grant them explicit
--   permission to perform specific actions. For more information, see
--   <a>Access Control Using AWS Identityand Access Management (IAM)</a>.
--   
--   For conceptual information and underlying REST API, go to <a>Uploading
--   LargeArchives in Parts (Multipart Upload)</a> and <a>Initiate
--   Multipart Upload</a> in the <i>Amazon Glacier Developer Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/amazonglacier/latest/dev/api-InitiateMultipartUpload.html</a>
module Network.AWS.Glacier.InitiateMultipartUpload
data InitiateMultipartUpload

-- | <a>InitiateMultipartUpload</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>imuAccountId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>imuArchiveDescription</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>imuPartSize</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>imuVaultName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
initiateMultipartUpload :: Text -> Text -> InitiateMultipartUpload

-- | The <tt>AccountId</tt> value is the AWS account ID of the account that
--   owns the vault. You can either specify an AWS account ID or optionally
--   a single apos<a>-</a>apos (hyphen), in which case Amazon Glacier uses
--   the AWS account ID associated with the credentials used to sign the
--   request. If you use an account ID, do not include any hyphens
--   (apos-apos) in the ID.
imuAccountId :: Lens' InitiateMultipartUpload Text

-- | The archive description that you are uploading in parts.
--   
--   The part size must be a megabyte (1024 KB) multiplied by a power of
--   2—for example, 1048576 (1 MB), 2097152 (2 MB), 4194304 (4 MB), 8388608
--   (8 MB), and so on. The minimum allowable part size is 1 MB, and the
--   maximum is 4 GB (4096 MB).
imuArchiveDescription :: Lens' InitiateMultipartUpload (Maybe Text)

-- | The size of each part except the last, in bytes. The last part can be
--   smaller than this part size.
imuPartSize :: Lens' InitiateMultipartUpload (Maybe Text)

-- | The name of the vault.
imuVaultName :: Lens' InitiateMultipartUpload Text
data InitiateMultipartUploadResponse

-- | <a>InitiateMultipartUploadResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>imurLocation</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>imurUploadId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
initiateMultipartUploadResponse :: InitiateMultipartUploadResponse

-- | The relative URI path of the multipart upload ID Amazon Glacier
--   created.
imurLocation :: Lens' InitiateMultipartUploadResponse (Maybe Text)

-- | The ID of the multipart upload. This value is also included as part of
--   the location.
imurUploadId :: Lens' InitiateMultipartUploadResponse (Maybe Text)
instance Eq InitiateMultipartUpload
instance Ord InitiateMultipartUpload
instance Read InitiateMultipartUpload
instance Show InitiateMultipartUpload
instance Eq InitiateMultipartUploadResponse
instance Ord InitiateMultipartUploadResponse
instance Read InitiateMultipartUploadResponse
instance Show InitiateMultipartUploadResponse
instance AWSRequest InitiateMultipartUpload
instance ToJSON InitiateMultipartUpload
instance ToHeaders InitiateMultipartUpload
instance ToQuery InitiateMultipartUpload
instance ToPath InitiateMultipartUpload


-- | This operation initiates a job of the specified type. In this release,
--   you can initiate a job to retrieve either an archive or a vault
--   inventory (a list of archives in a vault).
--   
--   Retrieving data from Amazon Glacier is a two-step process:
--   
--   Initiate a retrieval job.
--   
--   A data retrieval policy can cause your initiate retrieval job request
--   to fail with a PolicyEnforcedException exception. For more information
--   about data retrieval policies, see <a>Amazon Glacier Data Retrieval
--   Policies</a>. For more information about the PolicyEnforcedException
--   exception, see <a>Error Responses</a>.
--   
--   After the job completes, download the bytes.
--   
--   The retrieval request is executed asynchronously. When you initiate a
--   retrieval job, Amazon Glacier creates a job and returns a job ID in
--   the response. When Amazon Glacier completes the job, you can get the
--   job output (archive or inventory data). For information about getting
--   job output, see <tt>GetJobOutput</tt> operation.
--   
--   The job must complete before you can get its output. To determine when
--   a job is complete, you have the following options:
--   
--   Use Amazon SNS Notification You can specify an Amazon Simple
--   Notification Service (Amazon SNS) topic to which Amazon Glacier can
--   post a notification after the job is completed. You can specify an SNS
--   topic per job request. The notification is sent only after Amazon
--   Glacier completes the job. In addition to specifying an SNS topic per
--   job request, you can configure vault notifications for a vault so that
--   job notifications are always sent. For more information, see
--   <tt>SetVaultNotifications</tt>.
--   
--   Get job details You can make a <tt>DescribeJob</tt> request to obtain
--   job status information while a job is in progress. However, it is more
--   efficient to use an Amazon SNS notification to determine when a job is
--   complete.
--   
--   The information you get via notification is same that you get by
--   calling <tt>DescribeJob</tt>.
--   
--   If for a specific event, you add both the notification configuration
--   on the vault and also specify an SNS topic in your initiate job
--   request, Amazon Glacier sends both notifications. For more
--   information, see <tt>SetVaultNotifications</tt>.
--   
--   An AWS account has full permission to perform all operations
--   (actions). However, AWS Identity and Access Management (IAM) users
--   don't have any permissions by default. You must grant them explicit
--   permission to perform specific actions. For more information, see
--   <a>Access Control Using AWS Identityand Access Management (IAM)</a>.
--   
--   About the Vault Inventory
--   
--   Amazon Glacier prepares an inventory for each vault periodically,
--   every 24 hours. When you initiate a job for a vault inventory, Amazon
--   Glacier returns the last inventory for the vault. The inventory data
--   you get might be up to a day or two days old. Also, the initiate
--   inventory job might take some time to complete before you can download
--   the vault inventory. So you do not want to retrieve a vault inventory
--   for each vault operation. However, in some scenarios, you might find
--   the vault inventory useful. For example, when you upload an archive,
--   you can provide an archive description but not an archive name. Amazon
--   Glacier provides you a unique archive ID, an opaque string of
--   characters. So, you might maintain your own database that maps archive
--   names to their corresponding Amazon Glacier assigned archive IDs. You
--   might find the vault inventory useful in the event you need to
--   reconcile information in your database with the actual vault
--   inventory.
--   
--   Range Inventory Retrieval
--   
--   You can limit the number of inventory items retrieved by filtering on
--   the archive creation date or by setting a limit.
--   
--   <i>Filtering by Archive Creation Date</i>
--   
--   You can retrieve inventory items for archives created between
--   <tt>StartDate</tt> and <tt>EndDate</tt> by specifying values for these
--   parameters in the InitiateJob request. Archives created on or after
--   the <tt>StartDate</tt> and before the <tt>EndDate</tt> will be
--   returned. If you only provide the <tt>StartDate</tt> without the
--   <tt>EndDate</tt>, you will retrieve the inventory for all archives
--   created on or after the <tt>StartDate</tt>. If you only provide the
--   <tt>EndDate</tt> without the <tt>StartDate</tt>, you will get back the
--   inventory for all archives created before the <tt>EndDate</tt>.
--   
--   <i>Limiting Inventory Items per Retrieval</i>
--   
--   You can limit the number of inventory items returned by setting the
--   <tt>Limit</tt> parameter in the InitiateJob request. The inventory job
--   output will contain inventory items up to the specified
--   <tt>Limit</tt>. If there are more inventory items available, the
--   result is paginated. After a job is complete you can use the
--   <tt>DescribeJob</tt> operation to get a marker that you use in a
--   subsequent InitiateJob request. The marker will indicate the starting
--   point to retrieve the next set of inventory items. You can page
--   through your entire inventory by repeatedly making InitiateJob
--   requests with the marker from the previous DescribeJob output, until
--   you get a marker from DescribeJob that returns null, indicating that
--   there are no more inventory items available.
--   
--   You can use the <tt>Limit</tt> parameter together with the date range
--   parameters.
--   
--   About Ranged Archive Retrieval
--   
--   You can initiate an archive retrieval for the whole archive or a range
--   of the archive. In the case of ranged archive retrieval, you specify a
--   byte range to return or the whole archive. The range specified must be
--   megabyte (MB) aligned, that is the range start value must be divisible
--   by 1 MB and range end value plus 1 must be divisible by 1 MB or equal
--   the end of the archive. If the ranged archive retrieval is not
--   megabyte aligned, this operation returns a 400 response. Furthermore,
--   to ensure you get checksum values for data you download using Get Job
--   Output API, the range must be tree hash aligned.
--   
--   An AWS account has full permission to perform all operations
--   (actions). However, AWS Identity and Access Management (IAM) users
--   don't have any permissions by default. You must grant them explicit
--   permission to perform specific actions. For more information, see
--   <a>Access Control Using AWS Identityand Access Management (IAM)</a>.
--   
--   For conceptual information and the underlying REST API, go to
--   <a>Initiate a Job</a> and <a>Downloading a Vault Inventory</a>
--   
--   
--   <a>http://docs.aws.amazon.com/amazonglacier/latest/dev/api-InitiateJob.html</a>
module Network.AWS.Glacier.InitiateJob
data InitiateJob

-- | <a>InitiateJob</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ijAccountId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ijJobParameters</a> <tt>::</tt> <a>Maybe</a>
--   <a>JobParameters</a></li>
--   <li><a>ijVaultName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
initiateJob :: Text -> Text -> InitiateJob

-- | The <tt>AccountId</tt> value is the AWS account ID of the account that
--   owns the vault. You can either specify an AWS account ID or optionally
--   a single apos<a>-</a>apos (hyphen), in which case Amazon Glacier uses
--   the AWS account ID associated with the credentials used to sign the
--   request. If you use an account ID, do not include any hyphens
--   (apos-apos) in the ID.
ijAccountId :: Lens' InitiateJob Text

-- | Provides options for specifying job information.
ijJobParameters :: Lens' InitiateJob (Maybe JobParameters)

-- | The name of the vault.
ijVaultName :: Lens' InitiateJob Text
data InitiateJobResponse

-- | <a>InitiateJobResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ijrJobId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ijrLocation</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
initiateJobResponse :: InitiateJobResponse

-- | The ID of the job.
ijrJobId :: Lens' InitiateJobResponse (Maybe Text)

-- | The relative URI path of the job.
ijrLocation :: Lens' InitiateJobResponse (Maybe Text)
instance Eq InitiateJob
instance Read InitiateJob
instance Show InitiateJob
instance Eq InitiateJobResponse
instance Ord InitiateJobResponse
instance Read InitiateJobResponse
instance Show InitiateJobResponse
instance AWSRequest InitiateJob
instance ToJSON InitiateJob
instance ToHeaders InitiateJob
instance ToQuery InitiateJob
instance ToPath InitiateJob


-- | This operation retrieves the 'notification-configuration' subresource
--   of the specified vault.
--   
--   For information about setting a notification configuration on a vault,
--   see <tt>SetVaultNotifications</tt>. If a notification configuration
--   for a vault is not set, the operation returns a '404 Not Found' error.
--   For more information about vault notifications, see <a>Configuring
--   Vault Notifications in Amazon Glacier</a>.
--   
--   An AWS account has full permission to perform all operations
--   (actions). However, AWS Identity and Access Management (IAM) users
--   don't have any permissions by default. You must grant them explicit
--   permission to perform specific actions. For more information, see
--   <a>Access Control Using AWS Identityand Access Management (IAM)</a>.
--   
--   For conceptual information and underlying REST API, go to
--   <a>Configuring VaultNotifications in Amazon Glacier</a> and <a>Get
--   Vault Notification Configuration</a> in the <i>Amazon Glacier
--   Developer Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/amazonglacier/latest/dev/api-GetVaultNotifications.html</a>
module Network.AWS.Glacier.GetVaultNotifications
data GetVaultNotifications

-- | <a>GetVaultNotifications</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gvnAccountId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>gvnVaultName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getVaultNotifications :: Text -> Text -> GetVaultNotifications

-- | The <tt>AccountId</tt> value is the AWS account ID of the account that
--   owns the vault. You can either specify an AWS account ID or optionally
--   a single apos<a>-</a>apos (hyphen), in which case Amazon Glacier uses
--   the AWS account ID associated with the credentials used to sign the
--   request. If you use an account ID, do not include any hyphens
--   (apos-apos) in the ID.
gvnAccountId :: Lens' GetVaultNotifications Text

-- | The name of the vault.
gvnVaultName :: Lens' GetVaultNotifications Text
data GetVaultNotificationsResponse

-- | <a>GetVaultNotificationsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gvnrVaultNotificationConfig</a> <tt>::</tt> <a>Maybe</a>
--   <a>VaultNotificationConfig</a></li>
--   </ul>
getVaultNotificationsResponse :: GetVaultNotificationsResponse

-- | Returns the notification configuration set on the vault.
gvnrVaultNotificationConfig :: Lens' GetVaultNotificationsResponse (Maybe VaultNotificationConfig)
instance Eq GetVaultNotifications
instance Ord GetVaultNotifications
instance Read GetVaultNotifications
instance Show GetVaultNotifications
instance Eq GetVaultNotificationsResponse
instance Read GetVaultNotificationsResponse
instance Show GetVaultNotificationsResponse
instance FromJSON GetVaultNotificationsResponse
instance AWSRequest GetVaultNotifications
instance ToJSON GetVaultNotifications
instance ToHeaders GetVaultNotifications
instance ToQuery GetVaultNotifications
instance ToPath GetVaultNotifications


-- | This operation retrieves the 'access-policy' subresource set on the
--   vault—for more information on setting this subresource, see <a>Set
--   Vault Access Policy(PUT access-policy)</a>. If there is no access
--   policy set on the vault, the operation returns a '404 Not found'
--   error. For more information about vault access policies, see <a>Amazon
--   Glacier Access Control with Vault Access Policies</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/amazonglacier/latest/dev/api-GetVaultAccessPolicy.html</a>
module Network.AWS.Glacier.GetVaultAccessPolicy
data GetVaultAccessPolicy

-- | <a>GetVaultAccessPolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gvapAccountId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>gvapVaultName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getVaultAccessPolicy :: Text -> Text -> GetVaultAccessPolicy

-- | The <tt>AccountId</tt> value is the AWS account ID of the account that
--   owns the vault. You can either specify an AWS account ID or optionally
--   a single apos<a>-</a>apos (hyphen), in which case Amazon Glacier uses
--   the AWS account ID associated with the credentials used to sign the
--   request. If you use an account ID, do not include any hyphens
--   (apos-apos) in the ID.
gvapAccountId :: Lens' GetVaultAccessPolicy Text

-- | The name of the vault.
gvapVaultName :: Lens' GetVaultAccessPolicy Text
data GetVaultAccessPolicyResponse

-- | <a>GetVaultAccessPolicyResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gvaprPolicy</a> <tt>::</tt> <a>Maybe</a>
--   <a>VaultAccessPolicy</a></li>
--   </ul>
getVaultAccessPolicyResponse :: GetVaultAccessPolicyResponse

-- | Contains the returned vault access policy as a JSON string.
gvaprPolicy :: Lens' GetVaultAccessPolicyResponse (Maybe VaultAccessPolicy)
instance Eq GetVaultAccessPolicy
instance Ord GetVaultAccessPolicy
instance Read GetVaultAccessPolicy
instance Show GetVaultAccessPolicy
instance Eq GetVaultAccessPolicyResponse
instance Read GetVaultAccessPolicyResponse
instance Show GetVaultAccessPolicyResponse
instance FromJSON GetVaultAccessPolicyResponse
instance AWSRequest GetVaultAccessPolicy
instance ToJSON GetVaultAccessPolicy
instance ToHeaders GetVaultAccessPolicy
instance ToQuery GetVaultAccessPolicy
instance ToPath GetVaultAccessPolicy


-- | This operation downloads the output of the job you initiated using
--   <tt>InitiateJob</tt> . Depending on the job type you specified when
--   you initiated the job, the output will be either the content of an
--   archive or a vault inventory.
--   
--   A job ID will not expire for at least 24 hours after Amazon Glacier
--   completes the job. That is, you can download the job output within the
--   24 hours period after Amazon Glacier completes the job.
--   
--   If the job output is large, then you can use the <tt>Range</tt>
--   request header to retrieve a portion of the output. This allows you to
--   download the entire output in smaller chunks of bytes. For example,
--   suppose you have 1 GB of job output you want to download and you
--   decide to download 128 MB chunks of data at a time, which is a total
--   of eight Get Job Output requests. You use the following process to
--   download the job output:
--   
--   Download a 128 MB chunk of output by specifying the appropriate byte
--   range using the <tt>Range</tt> header.
--   
--   Along with the data, the response includes a SHA256 tree hash of the
--   payload. You compute the checksum of the payload on the client and
--   compare it with the checksum you received in the response to ensure
--   you received all the expected data.
--   
--   Repeat steps 1 and 2 for all the eight 128 MB chunks of output data,
--   each time specifying the appropriate byte range.
--   
--   After downloading all the parts of the job output, you have a list of
--   eight checksum values. Compute the tree hash of these values to find
--   the checksum of the entire output. Using the <tt>DescribeJob</tt> API,
--   obtain job information of the job that provided you the output. The
--   response includes the checksum of the entire archive stored in Amazon
--   Glacier. You compare this value with the checksum you computed to
--   ensure you have downloaded the entire archive content with no errors.
--   
--   An AWS account has full permission to perform all operations
--   (actions). However, AWS Identity and Access Management (IAM) users
--   don't have any permissions by default. You must grant them explicit
--   permission to perform specific actions. For more information, see
--   <a>Access Control Using AWS Identityand Access Management (IAM)</a>.
--   
--   For conceptual information and the underlying REST API, go to
--   <a>Downloading aVault Inventory</a>, <a>Downloading an Archive</a>,
--   and <a>Get Job Output</a>
--   
--   
--   <a>http://docs.aws.amazon.com/amazonglacier/latest/dev/api-GetJobOutput.html</a>
module Network.AWS.Glacier.GetJobOutput
data GetJobOutput

-- | <a>GetJobOutput</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gjoAccountId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>gjoJobId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>gjoRange</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gjoVaultName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getJobOutput :: Text -> Text -> Text -> GetJobOutput

-- | The <tt>AccountId</tt> value is the AWS account ID of the account that
--   owns the vault. You can either specify an AWS account ID or optionally
--   a single apos<a>-</a>apos (hyphen), in which case Amazon Glacier uses
--   the AWS account ID associated with the credentials used to sign the
--   request. If you use an account ID, do not include any hyphens
--   (apos-apos) in the ID.
gjoAccountId :: Lens' GetJobOutput Text

-- | The job ID whose data is downloaded.
gjoJobId :: Lens' GetJobOutput Text

-- | The range of bytes to retrieve from the output. For example, if you
--   want to download the first 1,048,576 bytes, specify "Range:
--   bytes=0-1048575". By default, this operation downloads the entire
--   output.
gjoRange :: Lens' GetJobOutput (Maybe Text)

-- | The name of the vault.
gjoVaultName :: Lens' GetJobOutput Text
data GetJobOutputResponse

-- | <a>GetJobOutputResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gjorAcceptRanges</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gjorArchiveDescription</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>gjorBody</a> <tt>::</tt> <a>RsBody</a></li>
--   <li><a>gjorChecksum</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gjorContentRange</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gjorContentType</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gjorStatus</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   </ul>
getJobOutputResponse :: RsBody -> GetJobOutputResponse

-- | Indicates the range units accepted. For more information, go to
--   <a>RFC2616</a>.
gjorAcceptRanges :: Lens' GetJobOutputResponse (Maybe Text)

-- | The description of an archive.
gjorArchiveDescription :: Lens' GetJobOutputResponse (Maybe Text)

-- | The job data, either archive data or inventory data.
gjorBody :: Lens' GetJobOutputResponse RsBody

-- | The checksum of the data in the response. This header is returned only
--   when retrieving the output for an archive retrieval job. Furthermore,
--   this header appears only under the following conditions: You get the
--   entire range of the archive. You request a range to return of the
--   archive that starts and ends on a multiple of 1 MB. For example, if
--   you have an 3.1 MB archive and you specify a range to return that
--   starts at 1 MB and ends at 2 MB, then the x-amz-sha256-tree-hash is
--   returned as a response header. You request a range of the archive to
--   return that starts on a multiple of 1 MB and goes to the end of the
--   archive. For example, if you have a 3.1 MB archive and you specify a
--   range that starts at 2 MB and ends at 3.1 MB (the end of the archive),
--   then the x-amz-sha256-tree-hash is returned as a response header.
gjorChecksum :: Lens' GetJobOutputResponse (Maybe Text)

-- | The range of bytes returned by Amazon Glacier. If only partial output
--   is downloaded, the response provides the range of bytes Amazon Glacier
--   returned. For example, bytes 0-1048575/8388608 returns the first 1 MB
--   from 8 MB.
gjorContentRange :: Lens' GetJobOutputResponse (Maybe Text)

-- | The Content-Type depends on whether the job output is an archive or a
--   vault inventory. For archive data, the Content-Type is
--   application/octet-stream. For vault inventory, if you requested CSV
--   format when you initiated the job, the Content-Type is text/csv.
--   Otherwise, by default, vault inventory is returned as JSON, and the
--   Content-Type is application/json.
gjorContentType :: Lens' GetJobOutputResponse (Maybe Text)

-- | The HTTP response code for a job output request. The value depends on
--   whether a range was specified in the request.
gjorStatus :: Lens' GetJobOutputResponse (Maybe Int)
instance Eq GetJobOutput
instance Ord GetJobOutput
instance Read GetJobOutput
instance Show GetJobOutput
instance Show GetJobOutputResponse
instance AWSRequest GetJobOutput
instance ToJSON GetJobOutput
instance ToHeaders GetJobOutput
instance ToQuery GetJobOutput
instance ToPath GetJobOutput


-- | This operation returns the current data retrieval policy for the
--   account and region specified in the GET request. For more information
--   about data retrieval policies, see <a>Amazon Glacier Data Retrieval
--   Policies</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/amazonglacier/latest/dev/api-GetDataRetrievalPolicy.html</a>
module Network.AWS.Glacier.GetDataRetrievalPolicy
data GetDataRetrievalPolicy

-- | <a>GetDataRetrievalPolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gdrpAccountId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getDataRetrievalPolicy :: Text -> GetDataRetrievalPolicy

-- | The <tt>AccountId</tt> value is the AWS account ID. This value must
--   match the AWS account ID associated with the credentials used to sign
--   the request. You can either specify an AWS account ID or optionally a
--   single apos<a>-</a>apos (hyphen), in which case Amazon Glacier uses
--   the AWS account ID associated with the credentials used to sign the
--   request. If you specify your Account ID, do not include any hyphens
--   (apos-apos) in the ID.
gdrpAccountId :: Lens' GetDataRetrievalPolicy Text
data GetDataRetrievalPolicyResponse

-- | <a>GetDataRetrievalPolicyResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gdrprPolicy</a> <tt>::</tt> <a>Maybe</a>
--   <a>DataRetrievalPolicy</a></li>
--   </ul>
getDataRetrievalPolicyResponse :: GetDataRetrievalPolicyResponse

-- | Contains the returned data retrieval policy in JSON format.
gdrprPolicy :: Lens' GetDataRetrievalPolicyResponse (Maybe DataRetrievalPolicy)
instance Eq GetDataRetrievalPolicy
instance Ord GetDataRetrievalPolicy
instance Read GetDataRetrievalPolicy
instance Show GetDataRetrievalPolicy
instance Monoid GetDataRetrievalPolicy
instance IsString GetDataRetrievalPolicy
instance Eq GetDataRetrievalPolicyResponse
instance Read GetDataRetrievalPolicyResponse
instance Show GetDataRetrievalPolicyResponse
instance FromJSON GetDataRetrievalPolicyResponse
instance AWSRequest GetDataRetrievalPolicy
instance ToJSON GetDataRetrievalPolicy
instance ToHeaders GetDataRetrievalPolicy
instance ToQuery GetDataRetrievalPolicy
instance ToPath GetDataRetrievalPolicy


-- | This operation returns information about a vault, including the
--   vault's Amazon Resource Name (ARN), the date the vault was created,
--   the number of archives it contains, and the total size of all the
--   archives in the vault. The number of archives and their total size are
--   as of the last inventory generation. This means that if you add or
--   remove an archive from a vault, and then immediately use Describe
--   Vault, the change in contents will not be immediately reflected. If
--   you want to retrieve the latest inventory of the vault, use
--   <tt>InitiateJob</tt>. Amazon Glacier generates vault inventories
--   approximately daily. For more information, see <a>Downloading a Vault
--   Inventoryin Amazon Glacier</a>.
--   
--   An AWS account has full permission to perform all operations
--   (actions). However, AWS Identity and Access Management (IAM) users
--   don't have any permissions by default. You must grant them explicit
--   permission to perform specific actions. For more information, see
--   <a>Access Control Using AWS Identityand Access Management (IAM)</a>.
--   
--   For conceptual information and underlying REST API, go to
--   <a>Retrieving VaultMetadata in Amazon Glacier</a> and <a>Describe
--   Vault</a> in the <i>Amazon GlacierDeveloper Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/amazonglacier/latest/dev/api-DescribeVault.html</a>
module Network.AWS.Glacier.DescribeVault
data DescribeVault

-- | <a>DescribeVault</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvAccountId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>dvVaultName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
describeVault :: Text -> Text -> DescribeVault

-- | The <tt>AccountId</tt> value is the AWS account ID of the account that
--   owns the vault. You can either specify an AWS account ID or optionally
--   a single apos<a>-</a>apos (hyphen), in which case Amazon Glacier uses
--   the AWS account ID associated with the credentials used to sign the
--   request. If you use an account ID, do not include any hyphens
--   (apos-apos) in the ID.
dvAccountId :: Lens' DescribeVault Text

-- | The name of the vault.
dvVaultName :: Lens' DescribeVault Text
data DescribeVaultResponse

-- | <a>DescribeVaultResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvrCreationDate</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dvrLastInventoryDate</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>dvrNumberOfArchives</a> <tt>::</tt> <a>Maybe</a>
--   <a>Integer</a></li>
--   <li><a>dvrSizeInBytes</a> <tt>::</tt> <a>Maybe</a> <a>Integer</a></li>
--   <li><a>dvrVaultARN</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dvrVaultName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
describeVaultResponse :: DescribeVaultResponse

-- | The UTC date when the vault was created. A string representation of
--   ISO 8601 date format, for example, "2012-03-20T17:03:43.221Z".
dvrCreationDate :: Lens' DescribeVaultResponse (Maybe Text)

-- | The UTC date when Amazon Glacier completed the last vault inventory. A
--   string representation of ISO 8601 date format, for example,
--   "2012-03-20T17:03:43.221Z".
dvrLastInventoryDate :: Lens' DescribeVaultResponse (Maybe Text)

-- | The number of archives in the vault as of the last inventory date.
--   This field will return <a>null</a> if an inventory has not yet run on
--   the vault, for example, if you just created the vault.
dvrNumberOfArchives :: Lens' DescribeVaultResponse (Maybe Integer)

-- | Total size, in bytes, of the archives in the vault as of the last
--   inventory date. This field will return null if an inventory has not
--   yet run on the vault, for example, if you just created the vault.
dvrSizeInBytes :: Lens' DescribeVaultResponse (Maybe Integer)

-- | The Amazon Resource Name (ARN) of the vault.
dvrVaultARN :: Lens' DescribeVaultResponse (Maybe Text)

-- | The name of the vault.
dvrVaultName :: Lens' DescribeVaultResponse (Maybe Text)
instance Eq DescribeVault
instance Ord DescribeVault
instance Read DescribeVault
instance Show DescribeVault
instance Eq DescribeVaultResponse
instance Ord DescribeVaultResponse
instance Read DescribeVaultResponse
instance Show DescribeVaultResponse
instance FromJSON DescribeVaultResponse
instance AWSRequest DescribeVault
instance ToJSON DescribeVault
instance ToHeaders DescribeVault
instance ToQuery DescribeVault
instance ToPath DescribeVault


-- | This operation returns information about a job you previously
--   initiated, including the job initiation date, the user who initiated
--   the job, the job status code/message and the Amazon SNS topic to
--   notify after Amazon Glacier completes the job. For more information
--   about initiating a job, see <tt>InitiateJob</tt>.
--   
--   This operation enables you to check the status of your job. However,
--   it is strongly recommended that you set up an Amazon SNS topic and
--   specify it in your initiate job request so that Amazon Glacier can
--   notify the topic after it completes the job.
--   
--   A job ID will not expire for at least 24 hours after Amazon Glacier
--   completes the job.
--   
--   An AWS account has full permission to perform all operations
--   (actions). However, AWS Identity and Access Management (IAM) users
--   don't have any permissions by default. You must grant them explicit
--   permission to perform specific actions. For more information, see
--   <a>Access Control Using AWS Identityand Access Management (IAM)</a>.
--   
--   For information about the underlying REST API, go to <a>Working with
--   Archivesin Amazon Glacier</a> in the <i>Amazon Glacier Developer
--   Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/amazonglacier/latest/dev/api-DescribeJob.html</a>
module Network.AWS.Glacier.DescribeJob
data DescribeJob

-- | <a>DescribeJob</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>djAccountId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>djJobId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>djVaultName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
describeJob :: Text -> Text -> Text -> DescribeJob

-- | The <tt>AccountId</tt> value is the AWS account ID of the account that
--   owns the vault. You can either specify an AWS account ID or optionally
--   a single apos<a>-</a>apos (hyphen), in which case Amazon Glacier uses
--   the AWS account ID associated with the credentials used to sign the
--   request. If you use an account ID, do not include any hyphens
--   (apos-apos) in the ID.
djAccountId :: Lens' DescribeJob Text

-- | The ID of the job to describe.
djJobId :: Lens' DescribeJob Text

-- | The name of the vault.
djVaultName :: Lens' DescribeJob Text
data DescribeJobResponse

-- | <a>DescribeJobResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>djrAction</a> <tt>::</tt> <a>Maybe</a> <a>ActionCode</a></li>
--   <li><a>djrArchiveId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>djrArchiveSHA256TreeHash</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>djrArchiveSizeInBytes</a> <tt>::</tt> <a>Maybe</a>
--   <a>Integer</a></li>
--   <li><a>djrCompleted</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>djrCompletionDate</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>djrCreationDate</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>djrInventoryRetrievalParameters</a> <tt>::</tt> <a>Maybe</a>
--   <a>InventoryRetrievalJobDescription</a></li>
--   <li><a>djrInventorySizeInBytes</a> <tt>::</tt> <a>Maybe</a>
--   <a>Integer</a></li>
--   <li><a>djrJobDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>djrJobId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>djrRetrievalByteRange</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>djrSHA256TreeHash</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>djrSNSTopic</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>djrStatusCode</a> <tt>::</tt> <a>Maybe</a>
--   <a>StatusCode</a></li>
--   <li><a>djrStatusMessage</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>djrVaultARN</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
describeJobResponse :: DescribeJobResponse

-- | The job type. It is either ArchiveRetrieval or InventoryRetrieval.
djrAction :: Lens' DescribeJobResponse (Maybe ActionCode)

-- | For an ArchiveRetrieval job, this is the archive ID requested for
--   download. Otherwise, this field is null.
djrArchiveId :: Lens' DescribeJobResponse (Maybe Text)

-- | The SHA256 tree hash of the entire archive for an archive retrieval.
--   For inventory retrieval jobs, this field is null.
djrArchiveSHA256TreeHash :: Lens' DescribeJobResponse (Maybe Text)

-- | For an ArchiveRetrieval job, this is the size in bytes of the archive
--   being requested for download. For the InventoryRetrieval job, the
--   value is null.
djrArchiveSizeInBytes :: Lens' DescribeJobResponse (Maybe Integer)

-- | The job status. When a job is completed, you get the job's output.
djrCompleted :: Lens' DescribeJobResponse (Maybe Bool)

-- | The UTC time that the archive retrieval request completed. While the
--   job is in progress, the value will be null.
djrCompletionDate :: Lens' DescribeJobResponse (Maybe Text)

-- | The UTC date when the job was created. A string representation of ISO
--   8601 date format, for example, "2012-03-20T17:03:43.221Z".
djrCreationDate :: Lens' DescribeJobResponse (Maybe Text)

-- | Parameters used for range inventory retrieval.
djrInventoryRetrievalParameters :: Lens' DescribeJobResponse (Maybe InventoryRetrievalJobDescription)

-- | For an InventoryRetrieval job, this is the size in bytes of the
--   inventory requested for download. For the ArchiveRetrieval job, the
--   value is null.
djrInventorySizeInBytes :: Lens' DescribeJobResponse (Maybe Integer)

-- | The job description you provided when you initiated the job.
djrJobDescription :: Lens' DescribeJobResponse (Maybe Text)

-- | An opaque string that identifies an Amazon Glacier job.
djrJobId :: Lens' DescribeJobResponse (Maybe Text)

-- | The retrieved byte range for archive retrieval jobs in the form
--   "<i>StartByteValue</i>-<i>EndByteValue</i>" If no range was specified
--   in the archive retrieval, then the whole archive is retrieved and
--   <i>StartByteValue</i> equals 0 and <i>EndByteValue</i> equals the size
--   of the archive minus 1. For inventory retrieval jobs this field is
--   null.
djrRetrievalByteRange :: Lens' DescribeJobResponse (Maybe Text)

-- | For an ArchiveRetrieval job, it is the checksum of the archive.
--   Otherwise, the value is null.
--   
--   The SHA256 tree hash value for the requested range of an archive. If
--   the Initiate a Job request for an archive specified a tree-hash
--   aligned range, then this field returns a value.
--   
--   For the specific case when the whole archive is retrieved, this value
--   is the same as the ArchiveSHA256TreeHash value.
--   
--   This field is null in the following situations: Archive retrieval jobs
--   that specify a range that is not tree-hash aligned.
--   
--   Archival jobs that specify a range that is equal to the whole archive
--   and the job status is InProgress.
--   
--   Inventory jobs.
djrSHA256TreeHash :: Lens' DescribeJobResponse (Maybe Text)

-- | An Amazon Simple Notification Service (Amazon SNS) topic that receives
--   notification.
djrSNSTopic :: Lens' DescribeJobResponse (Maybe Text)

-- | The status code can be InProgress, Succeeded, or Failed, and indicates
--   the status of the job.
djrStatusCode :: Lens' DescribeJobResponse (Maybe StatusCode)

-- | A friendly message that describes the job status.
djrStatusMessage :: Lens' DescribeJobResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the vault from which the archive
--   retrieval was requested.
djrVaultARN :: Lens' DescribeJobResponse (Maybe Text)
instance Eq DescribeJob
instance Ord DescribeJob
instance Read DescribeJob
instance Show DescribeJob
instance Eq DescribeJobResponse
instance Read DescribeJobResponse
instance Show DescribeJobResponse
instance FromJSON DescribeJobResponse
instance AWSRequest DescribeJob
instance ToJSON DescribeJob
instance ToHeaders DescribeJob
instance ToQuery DescribeJob
instance ToPath DescribeJob


-- | This operation deletes the notification configuration set for a vault.
--   The operation is eventually consistent;that is, it might take some
--   time for Amazon Glacier to completely disable the notifications and
--   you might still receive some notifications for a short time after you
--   send the delete request.
--   
--   An AWS account has full permission to perform all operations
--   (actions). However, AWS Identity and Access Management (IAM) users
--   don't have any permissions by default. You must grant them explicit
--   permission to perform specific actions. For more information, see
--   <a>Access Control Using AWS Identityand Access Management (IAM)</a>.
--   
--   For conceptual information and underlying REST API, go to
--   <a>Configuring VaultNotifications in Amazon Glacier</a> and <a>Delete
--   Vault Notification Configuration</a> in the Amazon Glacier Developer
--   Guide.
--   
--   
--   <a>http://docs.aws.amazon.com/amazonglacier/latest/dev/api-DeleteVaultNotifications.html</a>
module Network.AWS.Glacier.DeleteVaultNotifications
data DeleteVaultNotifications

-- | <a>DeleteVaultNotifications</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvnAccountId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>dvnVaultName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteVaultNotifications :: Text -> Text -> DeleteVaultNotifications

-- | The <tt>AccountId</tt> value is the AWS account ID of the account that
--   owns the vault. You can either specify an AWS account ID or optionally
--   a single apos<a>-</a>apos (hyphen), in which case Amazon Glacier uses
--   the AWS account ID associated with the credentials used to sign the
--   request. If you use an account ID, do not include any hyphens
--   (apos-apos) in the ID.
dvnAccountId :: Lens' DeleteVaultNotifications Text

-- | The name of the vault.
dvnVaultName :: Lens' DeleteVaultNotifications Text
data DeleteVaultNotificationsResponse

-- | <a>DeleteVaultNotificationsResponse</a> constructor.
deleteVaultNotificationsResponse :: DeleteVaultNotificationsResponse
instance Eq DeleteVaultNotifications
instance Ord DeleteVaultNotifications
instance Read DeleteVaultNotifications
instance Show DeleteVaultNotifications
instance Eq DeleteVaultNotificationsResponse
instance Ord DeleteVaultNotificationsResponse
instance Read DeleteVaultNotificationsResponse
instance Show DeleteVaultNotificationsResponse
instance Generic DeleteVaultNotificationsResponse
instance Datatype D1DeleteVaultNotificationsResponse
instance Constructor C1_0DeleteVaultNotificationsResponse
instance AWSRequest DeleteVaultNotifications
instance ToJSON DeleteVaultNotifications
instance ToHeaders DeleteVaultNotifications
instance ToQuery DeleteVaultNotifications
instance ToPath DeleteVaultNotifications


-- | This operation deletes the access policy associated with the specified
--   vault. The operation is eventually consistent—that is, it might take
--   some time for Amazon Glacier to completely remove the access policy,
--   and you might still see the effect of the policy for a short time
--   after you send the delete request.
--   
--   This operation is idempotent. You can invoke delete multiple times,
--   even if there is no policy associated with the vault. For more
--   information about vault access policies, see <a>Amazon Glacier Access
--   Control with Vault AccessPolicies</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/amazonglacier/latest/dev/api-DeleteVaultAccessPolicy.html</a>
module Network.AWS.Glacier.DeleteVaultAccessPolicy
data DeleteVaultAccessPolicy

-- | <a>DeleteVaultAccessPolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvapAccountId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>dvapVaultName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteVaultAccessPolicy :: Text -> Text -> DeleteVaultAccessPolicy

-- | The <tt>AccountId</tt> value is the AWS account ID of the account that
--   owns the vault. You can either specify an AWS account ID or optionally
--   a single apos<a>-</a>apos (hyphen), in which case Amazon Glacier uses
--   the AWS account ID associated with the credentials used to sign the
--   request. If you use an account ID, do not include any hyphens
--   (apos-apos) in the ID.
dvapAccountId :: Lens' DeleteVaultAccessPolicy Text

-- | The name of the vault.
dvapVaultName :: Lens' DeleteVaultAccessPolicy Text
data DeleteVaultAccessPolicyResponse

-- | <a>DeleteVaultAccessPolicyResponse</a> constructor.
deleteVaultAccessPolicyResponse :: DeleteVaultAccessPolicyResponse
instance Eq DeleteVaultAccessPolicy
instance Ord DeleteVaultAccessPolicy
instance Read DeleteVaultAccessPolicy
instance Show DeleteVaultAccessPolicy
instance Eq DeleteVaultAccessPolicyResponse
instance Ord DeleteVaultAccessPolicyResponse
instance Read DeleteVaultAccessPolicyResponse
instance Show DeleteVaultAccessPolicyResponse
instance Generic DeleteVaultAccessPolicyResponse
instance Datatype D1DeleteVaultAccessPolicyResponse
instance Constructor C1_0DeleteVaultAccessPolicyResponse
instance AWSRequest DeleteVaultAccessPolicy
instance ToJSON DeleteVaultAccessPolicy
instance ToHeaders DeleteVaultAccessPolicy
instance ToQuery DeleteVaultAccessPolicy
instance ToPath DeleteVaultAccessPolicy


-- | This operation deletes a vault. Amazon Glacier will delete a vault
--   only if there are no archives in the vault as of the last inventory
--   and there have been no writes to the vault since the last inventory.
--   If either of these conditions is not satisfied, the vault deletion
--   fails (that is, the vault is not removed) and Amazon Glacier returns
--   an error. You can use <tt>DescribeVault</tt> to return the number of
--   archives in a vault, and you can use <a>Initiate a Job(POST jobs)</a>
--   to initiate a new inventory retrieval for a vault. The inventory
--   contains the archive IDs you use to delete archives using <a>Delete
--   Archive(DELETE archive)</a>.
--   
--   This operation is idempotent.
--   
--   An AWS account has full permission to perform all operations
--   (actions). However, AWS Identity and Access Management (IAM) users
--   don't have any permissions by default. You must grant them explicit
--   permission to perform specific actions. For more information, see
--   <a>Access Control Using AWS Identityand Access Management (IAM)</a>.
--   
--   For conceptual information and underlying REST API, go to <a>Deleting
--   a Vaultin Amazon Glacier</a> and <a>Delete Vault</a> in the <i>Amazon
--   Glacier Developer Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/amazonglacier/latest/dev/api-DeleteVault.html</a>
module Network.AWS.Glacier.DeleteVault
data DeleteVault

-- | <a>DeleteVault</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dv1AccountId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>dv1VaultName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteVault :: Text -> Text -> DeleteVault

-- | The <tt>AccountId</tt> value is the AWS account ID of the account that
--   owns the vault. You can either specify an AWS account ID or optionally
--   a single apos<a>-</a>apos (hyphen), in which case Amazon Glacier uses
--   the AWS account ID associated with the credentials used to sign the
--   request. If you use an account ID, do not include any hyphens
--   (apos-apos) in the ID.
dv1AccountId :: Lens' DeleteVault Text

-- | The name of the vault.
dv1VaultName :: Lens' DeleteVault Text
data DeleteVaultResponse

-- | <a>DeleteVaultResponse</a> constructor.
deleteVaultResponse :: DeleteVaultResponse
instance Eq DeleteVault
instance Ord DeleteVault
instance Read DeleteVault
instance Show DeleteVault
instance Eq DeleteVaultResponse
instance Ord DeleteVaultResponse
instance Read DeleteVaultResponse
instance Show DeleteVaultResponse
instance Generic DeleteVaultResponse
instance Datatype D1DeleteVaultResponse
instance Constructor C1_0DeleteVaultResponse
instance AWSRequest DeleteVault
instance ToJSON DeleteVault
instance ToHeaders DeleteVault
instance ToQuery DeleteVault
instance ToPath DeleteVault


-- | This operation deletes an archive from a vault. Subsequent requests to
--   initiate a retrieval of this archive will fail. Archive retrievals
--   that are in progress for this archive ID may or may not succeed
--   according to the following scenarios:
--   
--   If the archive retrieval job is actively preparing the data for
--   download when Amazon Glacier receives the delete archive request, the
--   archival retrieval operation might fail. If the archive retrieval job
--   has successfully prepared the archive for download when Amazon Glacier
--   receives the delete archive request, you will be able to download the
--   output. This operation is idempotent. Attempting to delete an
--   already-deleted archive does not result in an error.
--   
--   An AWS account has full permission to perform all operations
--   (actions). However, AWS Identity and Access Management (IAM) users
--   don't have any permissions by default. You must grant them explicit
--   permission to perform specific actions. For more information, see
--   <a>Access Control Using AWS Identityand Access Management (IAM)</a>.
--   
--   For conceptual information and underlying REST API, go to <a>Deleting
--   anArchive in Amazon Glacier</a> and <a>Delete Archive</a> in the
--   <i>Amazon Glacier DeveloperGuide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/amazonglacier/latest/dev/api-DeleteArchive.html</a>
module Network.AWS.Glacier.DeleteArchive
data DeleteArchive

-- | <a>DeleteArchive</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>daAccountId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>daArchiveId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>daVaultName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteArchive :: Text -> Text -> Text -> DeleteArchive

-- | The <tt>AccountId</tt> value is the AWS account ID of the account that
--   owns the vault. You can either specify an AWS account ID or optionally
--   a single apos<a>-</a>apos (hyphen), in which case Amazon Glacier uses
--   the AWS account ID associated with the credentials used to sign the
--   request. If you use an account ID, do not include any hyphens
--   (apos-apos) in the ID.
daAccountId :: Lens' DeleteArchive Text

-- | The ID of the archive to delete.
daArchiveId :: Lens' DeleteArchive Text

-- | The name of the vault.
daVaultName :: Lens' DeleteArchive Text
data DeleteArchiveResponse

-- | <a>DeleteArchiveResponse</a> constructor.
deleteArchiveResponse :: DeleteArchiveResponse
instance Eq DeleteArchive
instance Ord DeleteArchive
instance Read DeleteArchive
instance Show DeleteArchive
instance Eq DeleteArchiveResponse
instance Ord DeleteArchiveResponse
instance Read DeleteArchiveResponse
instance Show DeleteArchiveResponse
instance Generic DeleteArchiveResponse
instance Datatype D1DeleteArchiveResponse
instance Constructor C1_0DeleteArchiveResponse
instance AWSRequest DeleteArchive
instance ToJSON DeleteArchive
instance ToHeaders DeleteArchive
instance ToQuery DeleteArchive
instance ToPath DeleteArchive


-- | This operation creates a new vault with the specified name. The name
--   of the vault must be unique within a region for an AWS account. You
--   can create up to 1,000 vaults per account. If you need to create more
--   vaults, contact Amazon Glacier.
--   
--   You must use the following guidelines when naming a vault.
--   
--   Names can be between 1 and 255 characters long.
--   
--   Allowed characters are a-z, A-Z, 0-9, '_' (underscore), <a>-</a>
--   (hyphen), and <a>.</a> (period).
--   
--   This operation is idempotent.
--   
--   An AWS account has full permission to perform all operations
--   (actions). However, AWS Identity and Access Management (IAM) users
--   don't have any permissions by default. You must grant them explicit
--   permission to perform specific actions. For more information, see
--   <a>Access Control Using AWS Identityand Access Management (IAM)</a>.
--   
--   For conceptual information and underlying REST API, go to <a>Creating
--   a Vaultin Amazon Glacier</a> and <a>Create Vault</a> in the <i>Amazon
--   Glacier Developer Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/amazonglacier/latest/dev/api-CreateVault.html</a>
module Network.AWS.Glacier.CreateVault
data CreateVault

-- | <a>CreateVault</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cvAccountId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cvVaultName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createVault :: Text -> Text -> CreateVault

-- | The <tt>AccountId</tt> value is the AWS account ID. This value must
--   match the AWS account ID associated with the credentials used to sign
--   the request. You can either specify an AWS account ID or optionally a
--   single apos<a>-</a>apos (hyphen), in which case Amazon Glacier uses
--   the AWS account ID associated with the credentials used to sign the
--   request. If you specify your Account ID, do not include any hyphens
--   (apos-apos) in the ID.
cvAccountId :: Lens' CreateVault Text

-- | The name of the vault.
cvVaultName :: Lens' CreateVault Text
data CreateVaultResponse

-- | <a>CreateVaultResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cvrLocation</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
createVaultResponse :: CreateVaultResponse

-- | The URI of the vault that was created.
cvrLocation :: Lens' CreateVaultResponse (Maybe Text)
instance Eq CreateVault
instance Ord CreateVault
instance Read CreateVault
instance Show CreateVault
instance Eq CreateVaultResponse
instance Ord CreateVaultResponse
instance Read CreateVaultResponse
instance Show CreateVaultResponse
instance Monoid CreateVaultResponse
instance AWSRequest CreateVault
instance ToJSON CreateVault
instance ToHeaders CreateVault
instance ToQuery CreateVault
instance ToPath CreateVault


-- | You call this operation to inform Amazon Glacier that all the archive
--   parts have been uploaded and that Amazon Glacier can now assemble the
--   archive from the uploaded parts. After assembling and saving the
--   archive to the vault, Amazon Glacier returns the URI path of the newly
--   created archive resource. Using the URI path, you can then access the
--   archive. After you upload an archive, you should save the archive ID
--   returned to retrieve the archive at a later point. You can also get
--   the vault inventory to obtain a list of archive IDs in a vault. For
--   more information, see <tt>InitiateJob</tt>.
--   
--   In the request, you must include the computed SHA256 tree hash of the
--   entire archive you have uploaded. For information about computing a
--   SHA256 tree hash, see <a>Computing Checksums</a>. On the server side,
--   Amazon Glacier also constructs the SHA256 tree hash of the assembled
--   archive. If the values match, Amazon Glacier saves the archive to the
--   vault; otherwise, it returns an error, and the operation fails. The
--   <tt>ListParts</tt> operation returns a list of parts uploaded for a
--   specific multipart upload. It includes checksum information for each
--   uploaded part that can be used to debug a bad checksum issue.
--   
--   Additionally, Amazon Glacier also checks for any missing content
--   ranges when assembling the archive, if missing content ranges are
--   found, Amazon Glacier returns an error and the operation fails.
--   
--   Complete Multipart Upload is an idempotent operation. After your first
--   successful complete multipart upload, if you call the operation again
--   within a short period, the operation will succeed and return the same
--   archive ID. This is useful in the event you experience a network issue
--   that causes an aborted connection or receive a 500 server error, in
--   which case you can repeat your Complete Multipart Upload request and
--   get the same archive ID without creating duplicate archives. Note,
--   however, that after the multipart upload completes, you cannot call
--   the List Parts operation and the multipart upload will not appear in
--   List Multipart Uploads response, even if idempotent complete is
--   possible.
--   
--   An AWS account has full permission to perform all operations
--   (actions). However, AWS Identity and Access Management (IAM) users
--   don't have any permissions by default. You must grant them explicit
--   permission to perform specific actions. For more information, see
--   <a>Access Control Using AWS Identityand Access Management (IAM)</a>.
--   
--   For conceptual information and underlying REST API, go to <a>Uploading
--   LargeArchives in Parts (Multipart Upload)</a> and <a>Complete
--   Multipart Upload</a> in the <i>Amazon Glacier Developer Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/amazonglacier/latest/dev/api-CompleteMultipartUpload.html</a>
module Network.AWS.Glacier.CompleteMultipartUpload
data CompleteMultipartUpload

-- | <a>CompleteMultipartUpload</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cmuAccountId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cmuArchiveSize</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cmuChecksum</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cmuUploadId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cmuVaultName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
completeMultipartUpload :: Text -> Text -> Text -> CompleteMultipartUpload

-- | The <tt>AccountId</tt> value is the AWS account ID of the account that
--   owns the vault. You can either specify an AWS account ID or optionally
--   a single apos<a>-</a>apos (hyphen), in which case Amazon Glacier uses
--   the AWS account ID associated with the credentials used to sign the
--   request. If you use an account ID, do not include any hyphens
--   (apos-apos) in the ID.
cmuAccountId :: Lens' CompleteMultipartUpload Text

-- | The total size, in bytes, of the entire archive. This value should be
--   the sum of all the sizes of the individual parts that you uploaded.
cmuArchiveSize :: Lens' CompleteMultipartUpload (Maybe Text)

-- | The SHA256 tree hash of the entire archive. It is the tree hash of
--   SHA256 tree hash of the individual parts. If the value you specify in
--   the request does not match the SHA256 tree hash of the final assembled
--   archive as computed by Amazon Glacier, Amazon Glacier returns an error
--   and the request fails.
cmuChecksum :: Lens' CompleteMultipartUpload (Maybe Text)

-- | The upload ID of the multipart upload.
cmuUploadId :: Lens' CompleteMultipartUpload Text

-- | The name of the vault.
cmuVaultName :: Lens' CompleteMultipartUpload Text
data CompleteMultipartUploadResponse

-- | <a>CompleteMultipartUploadResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cmurArchiveId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cmurChecksum</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cmurLocation</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
completeMultipartUploadResponse :: CompleteMultipartUploadResponse

-- | The ID of the archive. This value is also included as part of the
--   location.
cmurArchiveId :: Lens' CompleteMultipartUploadResponse (Maybe Text)

-- | The checksum of the archive computed by Amazon Glacier.
cmurChecksum :: Lens' CompleteMultipartUploadResponse (Maybe Text)

-- | The relative URI path of the newly added archive resource.
cmurLocation :: Lens' CompleteMultipartUploadResponse (Maybe Text)
instance Eq CompleteMultipartUpload
instance Ord CompleteMultipartUpload
instance Read CompleteMultipartUpload
instance Show CompleteMultipartUpload
instance Eq CompleteMultipartUploadResponse
instance Ord CompleteMultipartUploadResponse
instance Read CompleteMultipartUploadResponse
instance Show CompleteMultipartUploadResponse
instance AWSRequest CompleteMultipartUpload
instance ToJSON CompleteMultipartUpload
instance ToHeaders CompleteMultipartUpload
instance ToQuery CompleteMultipartUpload
instance ToPath CompleteMultipartUpload


-- | This operation aborts a multipart upload identified by the upload ID.
--   
--   After the Abort Multipart Upload request succeeds, you cannot upload
--   any more parts to the multipart upload or complete the multipart
--   upload. Aborting a completed upload fails. However, aborting an
--   already-aborted upload will succeed, for a short time. For more
--   information about uploading a part and completing a multipart upload,
--   see <tt>UploadMultipartPart</tt> and <tt>CompleteMultipartUpload</tt>.
--   
--   This operation is idempotent.
--   
--   An AWS account has full permission to perform all operations
--   (actions). However, AWS Identity and Access Management (IAM) users
--   don't have any permissions by default. You must grant them explicit
--   permission to perform specific actions. For more information, see
--   <a>Access Control Using AWS Identityand Access Management (IAM)</a>.
--   
--   For conceptual information and underlying REST API, go to <a>Working
--   withArchives in Amazon Glacier</a> and <a>Abort Multipart Upload</a>
--   in the <i>Amazon GlacierDeveloper Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/amazonglacier/latest/dev/api-AbortMultipartUpload.html</a>
module Network.AWS.Glacier.AbortMultipartUpload
data AbortMultipartUpload

-- | <a>AbortMultipartUpload</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>amuAccountId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>amuUploadId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>amuVaultName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
abortMultipartUpload :: Text -> Text -> Text -> AbortMultipartUpload

-- | The <tt>AccountId</tt> value is the AWS account ID of the account that
--   owns the vault. You can either specify an AWS account ID or optionally
--   a single apos<a>-</a>apos (hyphen), in which case Amazon Glacier uses
--   the AWS account ID associated with the credentials used to sign the
--   request. If you use an account ID, do not include any hyphens
--   (apos-apos) in the ID.
amuAccountId :: Lens' AbortMultipartUpload Text

-- | The upload ID of the multipart upload to delete.
amuUploadId :: Lens' AbortMultipartUpload Text

-- | The name of the vault.
amuVaultName :: Lens' AbortMultipartUpload Text
data AbortMultipartUploadResponse

-- | <a>AbortMultipartUploadResponse</a> constructor.
abortMultipartUploadResponse :: AbortMultipartUploadResponse
instance Eq AbortMultipartUpload
instance Ord AbortMultipartUpload
instance Read AbortMultipartUpload
instance Show AbortMultipartUpload
instance Eq AbortMultipartUploadResponse
instance Ord AbortMultipartUploadResponse
instance Read AbortMultipartUploadResponse
instance Show AbortMultipartUploadResponse
instance Generic AbortMultipartUploadResponse
instance Datatype D1AbortMultipartUploadResponse
instance Constructor C1_0AbortMultipartUploadResponse
instance AWSRequest AbortMultipartUpload
instance ToJSON AbortMultipartUpload
instance ToHeaders AbortMultipartUpload
instance ToQuery AbortMultipartUpload
instance ToPath AbortMultipartUpload


-- | Amazon Glacier is a secure, durable, and extremely low-cost storage
--   service for data archiving and online backup. Customers can reliably
--   store large or small amounts of data for as little as $0.01 per
--   gigabyte per month, a significant savings compared to on-premises
--   solutions. To keep costs low, Amazon Glacier is optimized for
--   infrequently accessed data where a retrieval time of several hours is
--   suitable.
module Network.AWS.Glacier
