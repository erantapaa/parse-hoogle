-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Enforce endianness with types
--   
--   This package provides newtype wrappers for separating data with
--   specified endianness from other data of the same type with normal,
--   system-specific endianness. Since these wrappers are newtypes, no
--   runtime overhead is incurred. Currently the underlying
--   <a>EndianSensitive</a> typeclass its instances are taken directly from
--   the 'data-endian' package. However, if Haskell or GHC ever gets a
--   built-in equivalent, like as is proposed in
--   'http://ghc.haskell.org/trac/ghc/ticket/7902', it should be trivial to
--   update this to use that instead.
@package typesafe-endian
@version 0.1.0.1

module Data.Endian.Unsafe

-- | Wrapper, guaranteeing enclosed type is big-endian
data BigEndian α

-- | Wrapper, guaranteeing enclosed type is little-endian
data LittleEndian α

-- | put in BigEndian newtype without any swapping
unsafeAssertBigEndian :: EndianSensitive α => α -> BigEndian α

-- | put in LittleEndian newtype without any swapping
unsafeAssertLittleEndian :: EndianSensitive α => α -> LittleEndian α

-- | pull out of BigEndian newtype without any swapping
unsafeUnwrapBigEndian :: EndianSensitive α => BigEndian α -> α

-- | pull out of LittleEndian newtype without any swapping
unsafeUnwrapLittleEndian :: EndianSensitive α => LittleEndian α -> α

-- | Invert the the endianness of the argument
swapEndian :: EndianSensitive α => α -> α

module Data.Endian

-- | Raw, endian-sensitive data
class EndianSensitive α

-- | Wrapper, guaranteeing enclosed type is big-endian
data BigEndian α

-- | Wrapper, guaranteeing enclosed type is little-endian
data LittleEndian α

-- | Convert from the native format to big-endian
toBigEndian :: EndianSensitive α => α -> BigEndian α

-- | Convert from big-endian to the native format
fromBigEndian :: EndianSensitive α => BigEndian α -> α

-- | Convert from the native format to little-endian
toLittleEndian :: EndianSensitive α => α -> LittleEndian α

-- | Convert from little-endian to the native format
fromLittleEndian :: EndianSensitive α => LittleEndian α -> α
