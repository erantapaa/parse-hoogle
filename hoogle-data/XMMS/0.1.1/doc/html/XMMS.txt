-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | XMMS2 client library.
--   
--   Provides the haskell client lib for XMMS2
@package XMMS
@version 0.1.1

module Network.XMMS.Playback
data SeekMode
SeekCur :: SeekMode
SeekSet :: SeekMode

-- | Stop decoding of current song. <i>Usefull to implement things like
--   next, prev etc</i>
tickle :: Connection -> IO Result

-- | Stops the current playback.
stop :: Connection -> IO Result

-- | Pause the current playback, will tell the output to not read nor
--   write.
pause :: Connection -> IO Result

-- | Starts playback if server is idle.
start :: Connection -> IO Result

-- | Seek to an absolute time in the current playback.
seekmsAbs :: Connection -> Int -> IO Result

-- | Seek to a time relative to the current position in the current
--   playback.
seekmsRel :: Connection -> Int -> IO Result

-- | Seek to a position given in milliseconds in the current playback.
seekms :: Connection -> Int -> SeekMode -> IO Result

-- | Seek to a absoulte number of samples in the current playback.
seekSamplesAbs :: Connection -> Int -> IO Result

-- | Seek to a number of samples relative to the current position in the
--   current playback.
seekSamplesRel :: Connection -> Int -> IO Result

-- | Seek to a position given in samples in the current playback.
seekSamples :: Connection -> Int -> SeekMode -> IO Result

-- | Requests the playback status broadcast.
broadcastStatus :: Connection -> IO Result

-- | Make server emit the playback status.
status :: Connection -> IO Result

-- | Request the current id broadcast.
broadcastCurrentID :: Connection -> IO Result

-- | Make server emit the current id.
currentID :: Connection -> IO Result

-- | Request the playback_playtime signal.
signalPlaytime :: Connection -> IO Result

-- | Make server emit the current playtime.
playtime :: Connection -> IO Result
volumeGet :: Connection -> IO Result
volumeSet :: Connection -> String -> Int -> IO Result
broadcastVolumeChanged :: Connection -> IO Result

module Network.XMMS.Playlist
retrieveChange :: XMMSCV -> Change
data Change
Add :: Int -> String -> Int -> Change
position :: Change -> Int
name :: Change -> String
id :: Change -> Int
Insert :: Int -> String -> Int -> Change
position :: Change -> Int
name :: Change -> String
id :: Change -> Int
Remove :: Int -> String -> Change
position :: Change -> Int
name :: Change -> String
Clear :: String -> Change
name :: Change -> String
Move :: Int -> Int -> String -> Int -> Change
position :: Change -> Int
newPosition :: Change -> Int
name :: Change -> String
id :: Change -> Int
Sort :: String -> Change
name :: Change -> String
Shuffle :: String -> Change
name :: Change -> String
Update :: String -> Change
name :: Change -> String
NoChange :: Change

-- | Retrive the current position in the playlist.
currentPos :: Connection -> String -> IO Result

-- | Retrive the name of the active playlist.
currentActive :: Connection -> IO Result

-- | List the existing playlists.
list :: Connection -> IO Result

-- | Create a new empty playlist.
create :: Connection -> String -> IO Result

-- | Shuffles the current playlist.
shuffle :: Connection -> String -> IO Result

-- | Sorts the playlist according to the list of properties
sort :: Connection -> String -> [String] -> IO Result

-- | Clears the current playlist.
clear :: Connection -> String -> IO Result

-- | Remove the given playlist.
remove :: Connection -> String -> IO Result

-- | List current playlist.
listEntries :: Connection -> String -> IO Result

-- | Insert a medialib id at given position in playlist.
insertID :: Connection -> String -> Int -> Int -> IO Result

-- | Insert entry at given position in playlist.
insertURL :: Connection -> String -> Int -> String -> IO Result

-- | Insert a directory recursivly at a given position in the playlist.
rInsert :: Connection -> String -> Int -> String -> IO Result

-- | Insert a directory recursivly at a given position in the playlist.
rInsertEncoded :: Connection -> String -> Int -> String -> IO Result

-- | Insert entry at given position in playlist.
insertEncoded :: Connection -> String -> Int -> String -> IO Result

-- | Add a medialib id to the playlist.
addID :: Connection -> String -> Int -> IO Result

-- | Add the url to the playlist.
addURL :: Connection -> String -> String -> IO Result

-- | Adds a directory recursivly to the playlist.
rAdd :: Connection -> String -> String -> IO Result

-- | Adds a directory recursivly to the playlist.
rAddEncoded :: Connection -> String -> String -> IO Result

-- | Add the url to the playlist.
addEncoded :: Connection -> String -> String -> IO Result

-- | Move a playlist entry to a new position (absolute move).
moveEntry :: Connection -> String -> Int -> Int -> IO Result

-- | Remove an entry from the playlist.
removeEntry :: Connection -> String -> Int -> IO Result

-- | Request the playlist changed broadcast from the server.
broadcastChanged :: Connection -> IO Result

-- | Request the playlist current pos broadcast.
broadcastCurrentPos :: Connection -> IO Result

-- | Set next entry in the playlist.
setNext :: Connection -> Int -> IO Result

-- | Same as setNextRel but relative to the current postion.
setNextRel :: Connection -> Int -> IO Result

-- | Load a playlist as the current active playlist.
load :: Connection -> String -> IO Result

module Network.XMMS.Config

-- | Registers a configvalue in the server.
registerValue :: Connection -> String -> String -> IO Result

-- | Sets a configvalue in the server.
setValue :: Connection -> String -> String -> IO Result

-- | Retrieves a configvalue from the server.
getValue :: Connection -> String -> IO Result

-- | Lists all configuration values.
listValues :: Connection -> IO Result

-- | Requests the config_value_changed broadcast.
broadcastValueChanged :: Connection -> IO Result

module Network.XMMS.Medialib

-- | Retrieve information about an entry from the medialib.
medialibGetInfo :: Connection -> Int -> IO Result

module Network.XMMS.Client.Glib
mainLoopGmainInit :: Connection -> IO ()

module Network.XMMS.Client
type Connection = ForeignPtr C_xmmsc_connection
type Result = ForeignPtr C_xmmsc_result
data XMMSCV
XMMSNothing :: XMMSCV
XMMSError :: String -> XMMSCV
xmmsError :: XMMSCV -> String
XMMSInt :: Int -> XMMSCV
xmmsInt :: XMMSCV -> Int
XMMSString :: String -> XMMSCV
xmmsString :: XMMSCV -> String
XMMSDict :: (Map String XMMSCV) -> XMMSCV
xmmsDict :: XMMSCV -> (Map String XMMSCV)
XMMSList :: [XMMSCV] -> XMMSCV
xmmsList :: XMMSCV -> [XMMSCV]
data SeekMode
SeekCur :: SeekMode
SeekSet :: SeekMode

-- | Initializes a connection. With the coresponding name
init :: String -> IO Connection

-- | Connects to the XMMS server.
connect :: Connection -> String -> IO Int

-- | Returns a string that descibes the last error.
getLastError :: Connection -> IO String

-- | Tell the server to quit.
quit :: Connection -> IO Result

-- | Request the quit broadcast.
broadcastQuit :: Connection -> IO Result

-- | Get the absolute path to the user config dir.
--   
--   <i>The Int parameter is the buffer length and should probably go
--   away... </i>
userConfigDirGet :: Int -> IO String

-- | Block for the reply.
resultWait :: Result -> IO ()
propdictToDict :: (Map String XMMSCV) -> (Map String XMMSCV)
resultGetValue :: Result -> IO XMMSCV
resultNotifierSet :: Result -> (XMMSCV -> IO Bool) -> IO ()
resultGetConnection :: Result -> IO (Connection)
