-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | An ARFF file parser using Attoparsec
--   
--   Parse ARFF files
@package attoparsec-arff
@version 0.0

module Text.ARFF
data AttributeType
Numeric :: AttributeType
Nominal :: [ByteString] -> AttributeType
String :: AttributeType
data Attribute
Attribute :: ByteString -> AttributeType -> Attribute
name :: Attribute -> ByteString
dataType :: Attribute -> AttributeType

-- | Represents the entire header
data Header
Header :: ByteString -> [Attribute] -> Header

-- | Name of the relation (@RELATION foo)
title :: Header -> ByteString

-- | Mapping of indexes to values
attributes :: Header -> [Attribute]

-- | Value of a single attribute in a single row
data AttributeValue
NumericValue :: Double -> AttributeValue
NominalValue :: ByteString -> AttributeValue
StringValue :: ByteString -> AttributeValue
showAttributeValue :: AttributeValue -> String

-- | Parse two expressions sequentially, returning the result of the first.
before :: Parser p1 -> Parser p2 -> Parser p1

-- | matches non-newline space characters
isInlineSpace :: Char -> Bool

-- | Parses a sequence of non-newline space characters
lineSpace :: Parser ()
comment :: Parser ()

-- | Matches what should be the end of the line- optional comment then
--   newline.
lineEnd :: Parser ()

-- | <tt>identifier</tt> parses arguments to <tt>\@</tt> directives, e.g.
--   <a>@RELATION foo</a> TODO: Check these rules against the spec! TODO:
--   Allow quoted identifiers with spaces inside.
identifier :: Parser ByteString

-- | Parse the title of the relation
relation :: Parser ByteString

-- | Parse the attribute type: @ATTRIBUTE <a>name</a> <a>type</a>
attributeType :: Parser AttributeType

-- | Parse an attribute: @ATTRIBUTE <a>Name</a> <a>Type</a>
attribute :: Parser Attribute

-- | Parses the next expected line
line :: Parser p -> Parser p

-- | Parse an ARFF header.
header :: Parser Header

-- | Parse a value of the expected type (not handling missings)
value' :: AttributeType -> Parser AttributeValue

-- | Parse a value of the expected type, returning Nothing for missing
--   values
value :: AttributeType -> Parser (Maybe AttributeValue)

-- | Create a parser which parses a single row of AttributeValues,
--   expecting each to be in order of the Attributes supplied.
row :: [AttributeType] -> Parser [Maybe AttributeValue]

-- | Parse all data rows in the file.
rows :: Header -> Parser [[Maybe AttributeValue]]

-- | Parse a tuple of Header data and a list of rows, composed of values or
--   <a>Nothing</a> (for missing- ?- values).
arff :: Parser (Header, [[Maybe AttributeValue]])
instance Show AttributeType
instance Show Attribute
instance Show Header
instance Show AttributeValue
