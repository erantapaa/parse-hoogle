-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | File system utilities for Haskell that are missing from built in libraries.
--   
--   A collection of file system utilities such as recursive walks and file
--   listings that I couldn't find nice solutions for elsewhere.
@package fsutils
@version 0.1.2


-- | A collection of file system utilities that appear to be missing from
--   Directory, FilePath, Prelude, etc. Some of these may overlap with
--   MissingH but the versions here will probably be more simplistic.
--   Furthermore, this library is focused on this one thing and not a whole
--   bunch of things.
module System.Path

-- | Returns a list of nodes in a tree via a depth-first walk.
mtreeList :: Monad m => (a -> m [a]) -> a -> m [a]

-- | Recursively list the contents of a directory. Depth-first.
fileList :: FilePath -> IO [FilePath]

-- | Walk a directory depth-first. Similar to Python's os.walk and
--   fs.core/walk from the fs Clojure library.
walkDir :: FilePath -> IO [Directory]

-- | Copy a directory recursively. Moves every file, creates every
--   directory.
copyDir :: FilePath -> FilePath -> IO ()

-- | Given a root path, a new root path, and a path to be changed, removes
--   the old root from the path and replaces it with to.
replaceRoot :: FilePath -> FilePath -> FilePath -> FilePath

-- | Given a root (prefix), remove it from a path. This is useful for
--   getting the filename and subdirs of a path inside of a root.
removeRoot :: FilePath -> FilePath -> FilePath

-- | We can use this data type to represent the pieces of a directory.
data Directory

-- | The path of the directory itself.
dirPath :: Directory -> FilePath

-- | All subdirectories of this directory.
subDirs :: Directory -> [FilePath]

-- | All files contained in this directory.
files :: Directory -> [FilePath]

-- | Creates a Directory instance from a FilePath.
createDir :: FilePath -> IO Directory

-- | Remove useless paths from a list of paths.
filterUseless :: [FilePath] -> [FilePath]
instance Show Directory
