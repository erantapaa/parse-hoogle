-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Variants of Control.Arrow functions, specialised to kleislis.
--   
--   Precomposition and postcomposition of functors and monads. Variants of
--   Control.Arrow functions, specialised to kleislis. Avoids boxing into
--   Kleisli values.
@package Kleislify
@version 0.0.4


-- | Precomposition and postcomposition of functors and monads.
--   
--   Variants of Control.Arrow functions, specialised to kleislis. Avoids
--   boxing into Kleisli values.
module Control.Kleislify

-- | precomposition of a monad with a pure function. Equivalent to
--   <a>^&gt;&gt;</a> Equivalent to 'flip (.)'
(^=>) :: Monad m => (b -> c) -> (c -> m d) -> b -> m d

-- | precomposition of a functor with a pure function. Equivalent to 'flip
--   (.)'
(^->) :: Functor f => (b -> c) -> (c -> f d) -> b -> f d

-- | postcomposition of a monad with a pure function. Equivalent to
--   <a>&gt;&gt;^</a>
(=>^) :: Monad m => (b -> m c) -> (c -> d) -> b -> m d

-- | postcomposition of a functor with a pure function. Equivalent to
--   <a>&gt;&gt;^</a>
(->^) :: Functor f => (b -> f c) -> (c -> d) -> b -> f d

-- | precomposition of a monad with a pure function (right-to-left
--   variant). Equivalent to <a>&lt;&lt;^</a> Equivalent to <a>.</a>
(<=^) :: Monad m => (c -> m d) -> (b -> c) -> (b -> m d)

-- | precomposition of a functor with a pure function (right-to-left
--   variant). Equivalent to <a>&lt;&lt;^</a> Equivalent to <a>.</a>
(<-^) :: Functor f => (c -> f d) -> (b -> c) -> (b -> f d)

-- | postcomposition of a monad with a pure function (right-to-left
--   variant). Equivalent to <a>^&lt;&lt;</a>
(^<=) :: Monad m => (c -> d) -> (b -> m c) -> b -> m d

-- | postcomposition of a functor with a pure function (right-to-left
--   variant). Equivalent to <a>^&lt;&lt;</a>
(^<-) :: Functor f => (c -> d) -> (b -> f c) -> b -> f d
