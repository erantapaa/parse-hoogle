-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | 1976 US Standard Atmosphere
--   
--   1976 US Standard Atmosphere
--   
--   Adapted by Greg Horn from original programs by Ralph L. Carmichael,
--   Public Domain Aeronautical Software
--   
--   The original code can be found at
--   <a>http://www.pdas.com/atmos.html</a>
@package atmos
@version 0.2.0.0

module Atmosphere
data Atmos a
Atmos :: a -> a -> a -> a -> a -> a -> Atmos a
atmosTemperature :: Atmos a -> a
atmosPressure :: Atmos a -> a
atmosDensity :: Atmos a -> a
atmosSpeedOfSound :: Atmos a -> a
atmosViscosity :: Atmos a -> a
atmosKinematicViscosity :: Atmos a -> a

-- | atmosphere in SI units
--   
--   Input: altitude in meters
--   
--   Output: (pressure, density, speed of sound, viscosity, kinematic
--   viscosity)
--   
--   <pre>
--   pressure            - N/m^2
--   density             - kg/m^3
--   speed of sound      - m/s
--   viscosity           - N-s/m^2
--   kinematic viscosity - m^2/s
--   </pre>
siAtmosphere :: (Floating a, Ord a) => a -> Atmos a

-- | atmosphere in imperial units
--   
--   Input: altitude in ft
--   
--   Output: (pressure, density, speed of sound, viscosity, kinematic
--   viscosity)
--   
--   <pre>
--   pressure            - lb/ft^2
--   density             - slugs/ft^3
--   speed of sound      - ft/s
--   viscosity           - slugs/(ft-s)
--   kinematic viscosity - ft^2/s
--   </pre>
usAtmosphere :: (Floating a, Ord a) => a -> Atmos a

-- | Compute temperature, density, and pressure in standard atmosphere.
--   
--   Correct to 86 km. Only approximate thereafter.
--   
--   Input: alt geometric altitude, km.
--   
--   Output: (sigma, delta, theta)
--   
--   <pre>
--   sigma - density/sea-level standard density
--   delta - pressure/sea-level standard pressure
--   theta - temperature/sea-level std. temperature
--   </pre>
atmosphere :: (Floating a, Ord a) => a -> (a, a, a)

-- | Compute altitude at which the standard atmosphere has a certain
--   pressure.
--   
--   Input: Pressure, N/m^2
--   
--   Output: Altitude in meters
siAltitudeFromPressure :: (Floating a, Ord a) => a -> a
