-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Binding to the VTE library.
--   
@package vte
@version 0.13.0.2


-- | A terminal widget
module Graphics.UI.Gtk.Vte.Vte
data Terminal

-- | A predicate that states which characters are of interest. The
--   predicate <tt>p c r</tt> where <tt>p :: VteSelect</tt>, should return
--   <tt>True</tt> if the character at column <tt>c</tt> and row <tt>r</tt>
--   should be extracted.
type VteSelect = Int -> Int -> Bool

-- | A structure describing the individual characters in the visible part
--   of a terminal window.
data VteChar
VteChar :: Int -> Int -> Char -> Color -> Color -> Bool -> Bool -> VteChar
vcRow :: VteChar -> Int
vcCol :: VteChar -> Int
vcChar :: VteChar -> Char
vcFore :: VteChar -> Color
vcBack :: VteChar -> Color
vcUnderline :: VteChar -> Bool
vcStrikethrough :: VteChar -> Bool

-- | Values for what should happen when the user presses backspace/delete.
--   Use <a>EraseAuto</a> unless the user can cause them to be overridden.
data TerminalEraseBinding
EraseAuto :: TerminalEraseBinding
EraseAsciiBackspace :: TerminalEraseBinding
EraseAsciiDelete :: TerminalEraseBinding
EraseDeleteSequence :: TerminalEraseBinding
EraseTty :: TerminalEraseBinding

-- | Values for the cursor blink setting.
data TerminalCursorBlinkMode
CursorBlinkSystem :: TerminalCursorBlinkMode
CursorBlinkOn :: TerminalCursorBlinkMode
CursorBlinkOff :: TerminalCursorBlinkMode

-- | Values for the cursor shape setting.
data TerminalCursorShape
CursorShapeBlock :: TerminalCursorShape
CursorShapeIbeam :: TerminalCursorShape
CursorShapeUnderline :: TerminalCursorShape

-- | Flags determining how the regular expression is to be interpreted. See
--   &lt;http: for an explanation of these flags.
data RegexCompileFlags
GRegexCaseless :: RegexCompileFlags
GRegexMultiline :: RegexCompileFlags
GRegexDotall :: RegexCompileFlags
GRegexExtended :: RegexCompileFlags
GRegexAnchored :: RegexCompileFlags
GRegexDollarEndonly :: RegexCompileFlags
GRegexUngreedy :: RegexCompileFlags
GRegexRaw :: RegexCompileFlags
GRegexNoAutoCapture :: RegexCompileFlags
GRegexOptimize :: RegexCompileFlags
GRegexFirstline :: RegexCompileFlags
GRegexDupnames :: RegexCompileFlags
GRegexNewlineCr :: RegexCompileFlags
GRegexNewlineLf :: RegexCompileFlags
GRegexNewlineCrlf :: RegexCompileFlags
GRegexNewlineAnycrlf :: RegexCompileFlags
GRegexBsrAnycrlf :: RegexCompileFlags
GRegexJavascriptCompat :: RegexCompileFlags

-- | Flags determining how the string is matched against the regular
--   expression. See &lt;http: for an explanation of these flags.
data RegexMatchFlags
GRegexMatchAnchored :: RegexMatchFlags
GRegexMatchNotbol :: RegexMatchFlags
GRegexMatchNoteol :: RegexMatchFlags
GRegexMatchNotempty :: RegexMatchFlags
GRegexMatchPartial :: RegexMatchFlags
GRegexMatchNewlineCr :: RegexMatchFlags
GRegexMatchNewlineLf :: RegexMatchFlags
GRegexMatchNewlineCrlf :: RegexMatchFlags
GRegexMatchNewlineAny :: RegexMatchFlags
GRegexMatchNewlineAnycrlf :: RegexMatchFlags
GRegexMatchBsrAnycrlf :: RegexMatchFlags
GRegexMatchBsrAny :: RegexMatchFlags
GRegexMatchPartialSoft :: RegexMatchFlags
GRegexMatchPartialHard :: RegexMatchFlags
GRegexMatchNotemptyAtstart :: RegexMatchFlags

-- | Create a new terminal widget.
terminalNew :: IO Terminal

-- | Appends menu items for various input methods to the given menu. The
--   user can select one of these items to modify the input method used by
--   the terminal.
terminalImAppendMenuitems :: TerminalClass self => self -> MenuShell -> IO ()

-- | Starts the specified command under a newly-allocated controlling
--   pseudo-terminal.
terminalForkCommand :: (TerminalClass self, GlibFilePath fp, GlibString string) => self -> (Maybe fp) -> (Maybe [string]) -> (Maybe [string]) -> (Maybe fp) -> Bool -> Bool -> Bool -> IO Int

-- | Starts a new child process under a newly-allocated controlling
--   pseudo-terminal.
--   
--   <ul>
--   <li>Available since Vte version 0.11.11</li>
--   </ul>
terminalForkpty :: (TerminalClass self, GlibString string, GlibFilePath fp) => self -> (Maybe [string]) -> (Maybe fp) -> Bool -> Bool -> Bool -> IO Int

-- | Attach an existing PTY master side to the terminal widget. Use instead
--   of <a>terminalForkCommand</a> or <a>terminalForkpty</a>.
--   
--   <ul>
--   <li>Available since Vte version 0.12.1</li>
--   </ul>
terminalSetPty :: TerminalClass self => self -> Int -> IO ()

-- | Returns the file descriptor of the master end of terminal's PTY.
--   
--   <ul>
--   <li>Available since Vte version 0.19.1</li>
--   </ul>
terminalGetPty :: TerminalClass self => self -> IO Int

-- | Interprets data as if it were data received from a child process. This
--   can either be used to drive the terminal without a child process, or
--   just to mess with your users.
terminalFeed :: (TerminalClass self, GlibString string) => self -> string -> IO ()

-- | Sends a block of UTF-8 text to the child as if it were entered by the
--   user at the keyboard.
terminalFeedChild :: (TerminalClass self, GlibString string) => self -> string -> IO ()

-- | Sends a block of binary data to the child.
--   
--   <ul>
--   <li>Available since Vte version 0.12.1</li>
--   </ul>
terminalFeedChildBinary :: TerminalClass self => self -> [Word8] -> IO ()

-- | Gets the exit status of the command started by
--   <a>terminalForkCommand</a>.
--   
--   <ul>
--   <li>Available since Vte version 0.19.1</li>
--   </ul>
terminalGetChildExitStatus :: TerminalClass self => self -> IO Int

-- | Selects all text within the terminal (including the scrollback
--   buffer).
--   
--   <ul>
--   <li>Available since Vte version 0.16</li>
--   </ul>
terminalSelectAll :: TerminalClass self => self -> IO ()

-- | Clears the current selection.
--   
--   <ul>
--   <li>Available since Vte version 0.16</li>
--   </ul>
terminalSelectNone :: TerminalClass self => self -> IO ()

-- | Places the selected text in the terminal in the
--   <a>selectionClipboard</a> selection.
terminalCopyClipboard :: TerminalClass self => self -> IO ()

-- | Sends the contents of the <a>selectionClipboard</a> selection to the
--   terminal's child. If necessary, the data is converted from UTF-8 to
--   the terminal's current encoding. It's called on paste menu item, or
--   when user presses Shift+Insert.
terminalPasteClipboard :: TerminalClass self => self -> IO ()

-- | Places the selected text in the terminal in the
--   <a>selectionPrimary</a> selection.
terminalCopyPrimary :: TerminalClass self => self -> IO ()

-- | Sends the contents of the <a>selectionPrimary</a> selection to the
--   terminal's child. If necessary, the data is converted from UTF-8 to
--   the terminal's current encoding. The terminal will call also paste the
--   <tt>SelectionPrimary</tt> selection when the user clicks with the the
--   second mouse button.
terminalPastePrimary :: TerminalClass self => self -> IO ()

-- | Attempts to change the terminal's size in terms of rows and columns.
--   If the attempt succeeds, the widget will resize itself to the proper
--   size.
terminalSetSize :: TerminalClass self => self -> Int -> Int -> IO ()

-- | Controls whether or not the terminal will beep when the child outputs
--   the "bl" sequence.
terminalSetAudibleBell :: TerminalClass self => self -> Bool -> IO ()

-- | Checks whether or not the terminal will beep when the child outputs
--   the "bl" sequence.
terminalGetAudibleBell :: TerminalClass self => self -> IO Bool

-- | Controls whether or not the terminal will present a visible bell to
--   the user when the child outputs the "bl" sequence. The terminal will
--   clear itself to the default foreground color and then repaint itself.
terminalSetVisibleBell :: TerminalClass self => self -> Bool -> IO ()

-- | Checks whether or not the terminal will present a visible bell to the
--   user when the child outputs the "bl" sequence. The terminal will clear
--   itself to the default foreground color and then repaint itself.
terminalGetVisibleBell :: TerminalClass self => self -> IO Bool

-- | Controls whether or not the terminal will attempt to draw bold text,
--   either by using a bold font variant or by repainting text with a
--   different offset.
terminalSetAllowBold :: TerminalClass self => self -> Bool -> IO ()

-- | Checks whether or not the terminal will attempt to draw bold text by
--   repainting text with a one-pixel offset.
terminalGetAllowBold :: TerminalClass self => self -> IO Bool

-- | Controls whether or not the terminal will forcibly scroll to the
--   bottom of the viewable history when the new data is received from the
--   child.
terminalSetScrollOnOutput :: TerminalClass self => self -> Bool -> IO ()

-- | Controls whether or not the terminal will forcibly scroll to the
--   bottom of the viewable history when the user presses a key. Modifier
--   keys do not trigger this behavior.
terminalSetScrollOnKeystroke :: TerminalClass self => self -> Bool -> IO ()

-- | Sets the color used to draw bold text in the default foreground color.
terminalSetColorBold :: TerminalClass self => self -> Color -> IO ()

-- | Sets the foreground color used to draw normal text
terminalSetColorForeground :: TerminalClass self => self -> Color -> IO ()

-- | Sets the background color for text which does not have a specific
--   background color assigned. Only has effect when no background image is
--   set and when the terminal is not transparent.
terminalSetColorBackground :: TerminalClass self => self -> Color -> IO ()

-- | Sets the color used to draw dim text in the default foreground color.
terminalSetColorDim :: TerminalClass self => self -> Color -> IO ()

-- | Sets the background color for text which is under the cursor. If
--   <tt>Nothing</tt>, text under the cursor will be drawn with foreground
--   and background colors reversed.
--   
--   <ul>
--   <li>Available since Vte version 0.11.11</li>
--   </ul>
terminalSetColorCursor :: TerminalClass self => self -> Color -> IO ()

-- | Sets the background color for text which is highlighted. If
--   <tt>Nothing</tt>, highlighted text (which is usually highlighted
--   because it is selected) will be drawn with foreground and background
--   colors reversed.
--   
--   <ul>
--   <li>Available since Vte version 0.11.11</li>
--   </ul>
terminalSetColorHighlight :: TerminalClass self => self -> Color -> IO ()

-- | The terminal widget uses a 28-color model comprised of the default
--   foreground and background colors, the bold foreground color, the dim
--   foreground color, an eight color palette, bold versions of the eight
--   color palette, and a dim version of the the eight color palette.
--   palette_size must be either 0, 8, 16, or 24. If foreground is
--   <tt>Nothing</tt> and palette_size is greater than 0, the new
--   foreground color is taken from palette[7]. If background is
--   <tt>Nothing</tt> and palette_size is greater than 0, the new
--   background color is taken from palette[0]. If palette_size is 8 or 16,
--   the third (dim) and possibly the second (bold) 8-color palettes are
--   extrapolated from the new background color and the items in palette.
terminalSetColors :: TerminalClass self => self -> Color -> Color -> [Color] -> IO ()

-- | Reset the terminal palette to reasonable compiled-in defaults.
terminalSetDefaultColors :: TerminalClass self => self -> IO ()

-- | Sets the opacity of the terminal background, were 0 means completely
--   transparent and 65535 means completely opaque.
terminalSetOpacity :: TerminalClass self => self -> Int -> IO ()

-- | Sets a background image for the widget. Text which would otherwise be
--   drawn using the default background color will instead be drawn over
--   the specified image. If necessary, the image will be tiled to cover
--   the widget's entire visible area. If specified by
--   <a>terminalSetBackgroundSaturation</a> the terminal will tint its
--   in-memory copy of the image before applying it to the terminal.
terminalSetBackgroundImage :: TerminalClass self => self -> Maybe Pixbuf -> IO ()

-- | Sets a background image for the widget. If specified by
--   <a>terminalSetBackgroundSaturation</a>, the terminal will tint its
--   in-memory copy of the image before applying it to the terminal.
terminalSetBackgroundImageFile :: (TerminalClass self, GlibFilePath fp) => self -> fp -> IO ()

-- | If a background image has been set using
--   <a>terminalSetBackgroundImage</a>,
--   <a>terminalSetBackgroundImageFile</a>, or
--   <a>terminalSetBackgroundTransparent</a>, and the saturation value is
--   less than 1.0, the terminal will adjust the colors of the image before
--   drawing the image. To do so, the terminal will create a copy of the
--   background image (or snapshot of the root window) and modify its pixel
--   values.
terminalSetBackgroundSaturation :: TerminalClass self => self -> Double -> IO ()

-- | Sets the terminal's background image to the pixmap stored in the root
--   window, adjusted so that if there are no windows below your
--   application, the widget will appear to be transparent.
terminalSetBackgroundTransparent :: TerminalClass self => self -> Bool -> IO ()

-- | If a background image has been set using
--   <a>terminalSetBackgroundImage</a>,
--   <a>terminalSetBackgroundImageFile</a>, or
--   <a>terminalSetBackgroundTransparent</a>, and the value set by
--   <a>terminalSetBackgroundSaturation</a> is less than one, the terminal
--   will adjust the color of the image before drawing the image. To do so,
--   the terminal will create a copy of the background image (or snapshot
--   of the root window) and modify its pixel values. The initial tint
--   color is black.
--   
--   <ul>
--   <li>Available since Vte version 0.11</li>
--   </ul>
terminalSetBackgroundTintColor :: TerminalClass self => self -> Color -> IO ()

-- | Controls whether or not the terminal will scroll the background image
--   (if one is set) when the text in the window must be scrolled.
--   
--   <ul>
--   <li>Available since Vte version 0.11</li>
--   </ul>
terminalSetScrollBackground :: TerminalClass self => self -> Bool -> IO ()

-- | Sets the shape of the cursor drawn.
--   
--   <ul>
--   <li>Available since Vte version 0.19.1</li>
--   </ul>
terminalSetCursorShape :: TerminalClass self => self -> TerminalCursorShape -> IO ()

-- | Returns the currently set cursor shape.
--   
--   <ul>
--   <li>Available since Vte version 0.17.6</li>
--   </ul>
terminalGetCursorShape :: TerminalClass self => self -> IO TerminalCursorShape

-- | Sets whether or not the cursor will blink.
--   
--   <ul>
--   <li>Available since Vte version 0.17.1</li>
--   </ul>
terminalSetCursorBlinkMode :: TerminalClass self => self -> TerminalCursorBlinkMode -> IO ()

-- | Returns the currently set cursor blink mode.
--   
--   <ul>
--   <li>Available since Vte version 0.17.1</li>
--   </ul>
terminalGetCursorBlinkMode :: TerminalClass self => self -> IO TerminalCursorBlinkMode

-- | Sets the length of the scrollback buffer used by the terminal. The
--   size of the scrollback buffer will be set to the larger of this value
--   and the number of visible rows the widget can display, so 0 can safely
--   be used to disable scrollback. Note that this setting only affects the
--   normal screen buffer. For terminal types which have an alternate
--   screen buffer, no scrollback is allowed on the alternate screen
--   buffer.
terminalSetScrollbackLines :: TerminalClass self => self -> Int -> IO ()

-- | Sets the font used for rendering all text displayed by the terminal,
--   overriding any fonts set using <tt>widgetModifyFont</tt>. The terminal
--   will immediately attempt to load the desired font, retrieve its
--   metrics, and attempt to resize itself to keep the same number of rows
--   and columns.
terminalSetFont :: TerminalClass self => self -> FontDescription -> IO ()

-- | A convenience function which converts name into a
--   <a>FontDescription</a> and passes it to <a>terminalSetFont</a>.
terminalSetFontFromString :: (TerminalClass self, GlibString string) => self -> string -> IO ()

-- | Queries the terminal for information about the fonts which will be
--   used to draw text in the terminal.
terminalGetFont :: TerminalClass self => self -> IO FontDescription

-- | Checks if the terminal currently contains selected text. Note that
--   this is different from determining if the terminal is the owner of any
--   <tt>GtkClipboard</tt> items.
terminalGetHasSelection :: TerminalClass self => self -> IO Bool

-- | When the user double-clicks to start selection, the terminal will
--   extend the selection on word boundaries. It will treat characters
--   included in spec as parts of words, and all other characters as word
--   separators. Ranges of characters can be specified by separating them
--   with a hyphen. As a special case, if <tt>spec</tt> is the empty
--   string, the terminal will treat all graphic non-punctuation non-space
--   characters as word characters.
terminalSetWordChars :: (TerminalClass self, GlibString string) => self -> string -> IO ()

-- | Checks if a particular character is considered to be part of a word or
--   not, based on the values last passed to <a>terminalSetWordChars</a>.
terminalIsWordChar :: TerminalClass self => self -> Char -> IO Bool

-- | Modifies the terminal's backspace key binding, which controls what
--   string or control sequence the terminal sends to its child when the
--   user presses the backspace key.
terminalSetBackspaceBinding :: TerminalClass self => self -> TerminalEraseBinding -> IO ()

-- | Modifies the terminal's delete key binding, which controls what string
--   or control sequence the terminal sends to its child when the user
--   presses the delete key.
terminalSetDeleteBinding :: TerminalClass self => self -> TerminalEraseBinding -> IO ()

-- | Changes the value of the terminal's mouse autohide setting. When
--   autohiding is enabled, the mouse cursor will be hidden when the user
--   presses a key and shown when the user moves the mouse. This setting
--   can be read using <a>terminalGetMouseAutohide</a>.
terminalSetMouseAutohide :: TerminalClass self => self -> Bool -> IO ()

-- | Determines the value of the terminal's mouse autohide setting. When
--   autohiding is enabled, the mouse cursor will be hidden when the user
--   presses a key and shown when the user moves the mouse. This setting
--   can be changed using <a>terminalSetMouseAutohide</a>.
terminalGetMouseAutohide :: TerminalClass self => self -> IO Bool

-- | Resets as much of the terminal's internal state as possible,
--   discarding any unprocessed input data, resetting character attributes,
--   cursor state, national character set state, status line, terminal
--   modes (insert/delete), selection state, and encoding.
terminalReset :: TerminalClass self => self -> Bool -> Bool -> IO ()

-- | Extracts a view of the visible part of the terminal. A selection
--   predicate may be supplied to restrict the inspected characters. The
--   return value is a list of <a>VteChar</a> structures, each detailing
--   the character's position, colors, and other characteristics.
terminalGetText :: TerminalClass self => self -> Maybe VteSelect -> IO [VteChar]

-- | Extracts a view of the visible part of the terminal. If is_selected is
--   not <tt>Nothing</tt>, characters will only be read if is_selected
--   returns <tt>True</tt> after being passed the column and row,
--   respectively. A <tt>CharAttributes</tt> structure is added to
--   attributes for each byte added to the returned string detailing the
--   character's position, colors, and other characteristics. This function
--   differs from <a>terminalGetText</a> in that trailing spaces at the end
--   of lines are included.
--   
--   <ul>
--   <li>Available since Vte version 0.11.11</li>
--   </ul>
terminalGetTextIncludeTrailingSpaces :: TerminalClass self => self -> Maybe VteSelect -> IO [VteChar]

-- | Extracts a view of the visible part of the terminal. If is_selected is
--   not <tt>Nothing</tt>, characters will only be read if is_selected
--   returns <tt>True</tt> after being passed the column and row,
--   respectively. A <tt>CharAttributes</tt> structure is added to
--   attributes for each byte added to the returned string detailing the
--   character's position, colors, and other characteristics. The entire
--   scrollback buffer is scanned, so it is possible to read the entire
--   contents of the buffer using this function.
terminalGetTextRange :: TerminalClass self => self -> Int -> Int -> Int -> Int -> Maybe VteSelect -> IO [VteChar]

-- | Reads the location of the insertion cursor and returns it. The row
--   coordinate is absolute.
terminalGetCursorPosition :: TerminalClass self => self -> IO (Int, Int)

-- | Clears the list of regular expressions the terminal uses to highlight
--   text when the user moves the mouse cursor.
terminalMatchClearAll :: TerminalClass self => self -> IO ()

-- | Adds the regular expression to the list of matching expressions. When
--   the user moves the mouse cursor over a section of displayed text which
--   matches this expression, the text will be highlighted.
--   
--   See &lt;http: details about the accepted syntex.
--   
--   <ul>
--   <li>Available since Vte version 0.17.1</li>
--   </ul>
terminalMatchAddRegex :: (TerminalClass self, GlibString string) => self -> string -> [RegexCompileFlags] -> [RegexMatchFlags] -> IO Int

-- | Removes the regular expression which is associated with the given tag
--   from the list of expressions which the terminal will highlight when
--   the user moves the mouse cursor over matching text.
terminalMatchRemove :: TerminalClass self => self -> Int -> IO ()

-- | Checks if the text in and around the specified position matches any of
--   the regular expressions previously registered using
--   <a>terminalMatchAddRegex</a>. If a match exists, the matching string
--   is returned together with the number associated with the matched
--   regular expression. If more than one regular expression matches, the
--   expressions that was registered first will be returned.
terminalMatchCheck :: (TerminalClass self, GlibString string) => self -> Int -> Int -> IO (Maybe (string, Int))

-- | Sets which cursor the terminal will use if the pointer is over the
--   pattern specified by tag. The terminal keeps a reference to cursor.
--   
--   <ul>
--   <li>Available since Vte version 0.11</li>
--   </ul>
terminalMatchSetCursor :: TerminalClass self => self -> Int -> Cursor -> IO ()

-- | Sets which cursor the terminal will use if the pointer is over the
--   pattern specified by tag.
--   
--   <ul>
--   <li>Available since Vte version 0.11.9</li>
--   </ul>
terminalMatchSetCursorType :: TerminalClass self => self -> Int -> CursorType -> IO ()

-- | Sets which cursor the terminal will use if the pointer is over the
--   pattern specified by tag.
--   
--   <ul>
--   <li>Available since Vte version 0.17.1</li>
--   </ul>
terminalMatchSetCursorName :: (TerminalClass self, GlibString string) => self -> Int -> string -> IO ()

-- | Sets what type of terminal the widget attempts to emulate by scanning
--   for control sequences defined in the system's termcap file. Unless you
--   are interested in this feature, always use "xterm".
terminalSetEmulation :: (TerminalClass self, GlibString string) => self -> string -> IO ()

-- | Queries the terminal for its current emulation, as last set by a call
--   to <a>terminalSetEmulation</a>.
terminalGetEmulation :: (TerminalClass self, GlibString string) => self -> IO string

-- | Queries the terminal for its default emulation, which is attempted if
--   the terminal type passed to <a>terminalSetEmulation</a> emptry string.
--   
--   <ul>
--   <li>Available since Vte version 0.11.11</li>
--   </ul>
terminalGetDefaultEmulation :: (TerminalClass self, GlibString string) => self -> IO string

-- | Changes the encoding the terminal will expect data from the child to
--   be encoded with. For certain terminal types, applications executing in
--   the terminal can change the encoding. The default encoding is defined
--   by the application's locale settings.
terminalSetEncoding :: (TerminalClass self, GlibString string) => self -> string -> IO ()

-- | Determines the name of the encoding in which the terminal expects data
--   to be encoded.
terminalGetEncoding :: (TerminalClass self, GlibString string) => self -> IO string

-- | Some terminal emulations specify a status line which is separate from
--   the main display area, and define a means for applications to move the
--   cursor to the status line and back.
terminalGetStatusLine :: (TerminalClass self, GlibString string) => self -> IO string

-- | Determines the amount of additional space the widget is using to pad
--   the edges of its visible area. This is necessary for cases where
--   characters in the selected font don't themselves include a padding
--   area and the text itself would otherwise be contiguous with the window
--   border. Applications which use the widget's row_count, column_count,
--   char_height, and char_width fields to set geometry hints using
--   <tt>windowSetGeometryHints</tt> will need to add this value to the
--   base size. The values returned in xpad and ypad are the total padding
--   used in each direction, and do not need to be doubled.
terminalGetPadding :: TerminalClass self => self -> IO (Int, Int)

-- | Get <a>Adjustment</a> of terminal widget.
terminalGetAdjustment :: TerminalClass self => self -> IO Adjustment

-- | Get terminal's char height.
terminalGetCharHeight :: TerminalClass self => self -> IO Int

-- | Get terminal's char width.
terminalGetCharWidth :: TerminalClass self => self -> IO Int

-- | Get terminal's column count.
terminalGetColumnCount :: TerminalClass self => self -> IO Int

-- | Get terminal's row count.
terminalGetRowCount :: TerminalClass self => self -> IO Int

-- | Get icon title.
terminalGetIconTitle :: (TerminalClass self, GlibString string) => self -> IO string

-- | Get window title.
terminalGetWindowTitle :: (TerminalClass self, GlibString string) => self -> IO string

-- | Controls whether or not the terminal will attempt to draw bold text.
--   This may happen either by using a bold font variant, or by repainting
--   text with a different offset.
--   
--   Default value: <tt>True</tt>
--   
--   <ul>
--   <li>Available since Vte version 0.19.1</li>
--   </ul>
terminalAllowBold :: TerminalClass self => Attr self Bool

-- | Controls whether or not the terminal will beep when the child outputs
--   the "bl" sequence.
--   
--   Default value: <tt>True</tt>
--   
--   <ul>
--   <li>Available since Vte version 0.19.1</li>
--   </ul>
terminalAudibleBell :: TerminalClass self => Attr self Bool

-- | Sets a background image file for the widget. If specified by
--   "background-saturation:", the terminal will tint its in-memory copy of
--   the image before applying it to the terminal.
--   
--   Default value: ""
--   
--   <ul>
--   <li>Available since Vte version 0.19.1</li>
--   </ul>
terminalBackgroundImageFile :: (TerminalClass self, GlibString string) => Attr self string

-- | Sets a background image for the widget. Text which would otherwise be
--   drawn using the default background color will instead be drawn over
--   the specified image. If necessary, the image will be tiled to cover
--   the widget's entire visible area. If specified by
--   "background-saturation:", the terminal will tint its in-memory copy of
--   the image before applying it to the terminal.
--   
--   <ul>
--   <li>Available since Vte version 0.19.1</li>
--   </ul>
terminalBackgroundImagePixbuf :: TerminalClass self => Attr self (Maybe Pixbuf)

-- | Sets the opacity of the terminal background, were 0.0 means completely
--   transparent and 1.0 means completely opaque.
--   
--   Allowed values: [0,1]
--   
--   Default values: 1
--   
--   <ul>
--   <li>Available since Vte version 0.19.1</li>
--   </ul>
terminalBackgroundOpacity :: TerminalClass self => Attr self Double

-- | If a background image has been set using "background-image-file:" or
--   "background-image-pixbuf:", or "background-transparent:", and the
--   saturation value is less than 1.0, the terminal will adjust the colors
--   of the image before drawing the image. To do so, the terminal will
--   create a copy of the background image (or snapshot of the root window)
--   and modify its pixel values.
--   
--   Allowed values: [0,1]
--   
--   Default value: 0.4
--   
--   <ul>
--   <li>Available since Vte version 0.19.1</li>
--   </ul>
terminalBackgroundSaturation :: TerminalClass self => Attr self Double

-- | If a background image has been set using "background-image-file:" or
--   "background-image-pixbuf:", or "background-transparent:", and the
--   value set by <a>Terminal</a> background-saturation: is less than 1.0,
--   the terminal will adjust the color of the image before drawing the
--   image. To do so, the terminal will create a copy of the background
--   image (or snapshot of the root window) and modify its pixel values.
--   The initial tint color is black.
--   
--   <ul>
--   <li>Available since Vte version 0.19.1</li>
--   </ul>
terminalBackgroundTintColor :: TerminalClass self => Attr self Color

-- | Sets whther the terminal uses the pixmap stored in the root window as
--   the background, adjusted so that if there are no windows below your
--   application, the widget will appear to be transparent.
--   
--   NOTE: When using a compositing window manager, you should instead set
--   a RGBA colourmap on the toplevel window, so you get real transparency.
--   
--   Default value: <tt>False</tt>
--   
--   <ul>
--   <li>Available since Vte version 0.19.1</li>
--   </ul>
terminalBackgroundTransparent :: TerminalClass self => Attr self Bool

-- | <ul>
--   <li>Controls what string or control sequence the terminal sends to its
--   child when the user presses the backspace key.</li>
--   </ul>
--   
--   Default value: <a>EraseAuto</a>
--   
--   <ul>
--   <li>Available since Vte version 0.19.1</li>
--   </ul>
terminalBackspaceBinding :: TerminalClass self => Attr self TerminalEraseBinding

-- | Sets whether or not the cursor will blink. Using
--   <a>CursorBlinkSystem</a> will use the "gtk-cursor-blink" setting.
--   
--   Default value: <a>CursorBlinkSystem</a>
--   
--   <ul>
--   <li>Available since Vte version 0.19.1</li>
--   </ul>
terminalCursorBlinkMode :: TerminalClass self => Attr self TerminalCursorBlinkMode

-- | Controls the shape of the cursor.
--   
--   Default value: <a>CursorShapeBlock</a>
--   
--   <ul>
--   <li>Available since Vte version 0.19.1</li>
--   </ul>
terminalCursorShape :: TerminalClass self => Attr self TerminalCursorShape

-- | Controls what string or control sequence the terminal sends to its
--   child when the user presses the delete key.
--   
--   Default value: <a>EraseAuto</a>
--   
--   <ul>
--   <li>Available since Vte version 0.19.1</li>
--   </ul>
terminalDeleteBinding :: TerminalClass self => Attr self TerminalEraseBinding

-- | Sets what type of terminal the widget attempts to emulate by scanning
--   for control sequences defined in the system's termcap file. Unless you
--   are interested in this feature, always use the default which is
--   "xterm".
--   
--   Default value: "xterm"
--   
--   <ul>
--   <li>Available since Vte version 0.19.1</li>
--   </ul>
terminalEmulation :: (TerminalClass self, GlibString string) => Attr self string

-- | Controls the encoding the terminal will expect data from the child to
--   be encoded with. For certain terminal types, applications executing in
--   the terminal can change the encoding. The default is defined by the
--   application's locale settings.
--   
--   Default value: ""
--   
--   <ul>
--   <li>Available since Vte version 0.19.1</li>
--   </ul>
terminalEncoding :: (TerminalClass self, GlibString string) => Attr self string

-- | Specifies the font used for rendering all text displayed by the
--   terminal, overriding any fonts set using <tt>widgetModifyFont</tt>.
--   The terminal will immediately attempt to load the desired font,
--   retrieve its metrics, and attempt to resize itself to keep the same
--   number of rows and columns.
--   
--   <ul>
--   <li>Available since Vte version 0.19.1</li>
--   </ul>
terminalFontDesc :: TerminalClass self => Attr self FontDescription

-- | The terminal's so-called icon title, or empty if no icon title has
--   been set.
--   
--   Default value: ""
--   
--   <ul>
--   <li>Available since Vte version 0.19.1</li>
--   </ul>
terminalIconTitle :: (TerminalClass self, GlibString string) => ReadAttr self string

-- | Controls the value of the terminal's mouse autohide setting. When
--   autohiding is enabled, the mouse cursor will be hidden when the user
--   presses a key and shown when the user moves the mouse.
--   
--   Default value: <tt>False</tt>
--   
--   <ul>
--   <li>Available since Vte version 0.19.1</li>
--   </ul>
terminalPointerAutohide :: TerminalClass self => Attr self Bool

-- | The file descriptor of the master end of the terminal's PTY.
--   
--   Allowed values: [-1 ...]
--   
--   Default values: -1
--   
--   <ul>
--   <li>Available since Vte version 0.19.1</li>
--   </ul>
terminalPty :: TerminalClass self => Attr self Int

-- | Controls the value of the terminal's mouse autohide setting. When
--   autohiding is enabled, the mouse cursor will be hidden when the user
--   presses a key and shown when the user moves the mouse.
--   
--   Default value: <tt>False</tt>
--   
--   <ul>
--   <li>Available since Vte version 0.19.1</li>
--   </ul>
terminalScrollBackground :: TerminalClass self => Attr self Bool

-- | Controls whether or not the terminal will forcibly scroll to the
--   bottom of the viewable history when the user presses a key. Modifier
--   keys do not trigger this behavior.
--   
--   Default value: <tt>False</tt>
--   
--   <ul>
--   <li>Available since Vte version 0.19.1</li>
--   </ul>
terminalScrollOnKeystroke :: TerminalClass self => Attr self Bool

-- | Controls whether or not the terminal will forcibly scroll to the
--   bottom of the viewable history when the new data is received from the
--   child.
--   
--   Default value: <tt>True</tt>
--   
--   <ul>
--   <li>Available since Vte version 0.19.1</li>
--   </ul>
terminalScrollOnOutput :: TerminalClass self => Attr self Bool

-- | The length of the scrollback buffer used by the terminal. The size of
--   the scrollback buffer will be set to the larger of this value and the
--   number of visible rows the widget can display, so 0 can safely be used
--   to disable scrollback. Note that this setting only affects the normal
--   screen buffer. For terminal types which have an alternate screen
--   buffer, no scrollback is allowed on the alternate screen buffer.
--   
--   Default value: 100
--   
--   <ul>
--   <li>Available since Vte version 0.19.1</li>
--   </ul>
terminalScrollbackLines :: TerminalClass self => Attr self Int

-- | Controls whether the terminal will present a visible bell to the user
--   when the child outputs the "bl" sequence. The terminal will clear
--   itself to the default foreground color and then repaint itself.
--   
--   Default value: <tt>False</tt>
--   
--   <ul>
--   <li>Available since Vte version 0.19.1</li>
--   </ul>
terminalVisibleBell :: TerminalClass self => Attr self Bool

-- | The terminal's title.
--   
--   Default value: ""
--   
--   <ul>
--   <li>Available since Vte version 0.19.1</li>
--   </ul>
terminalWindowTitle :: (TerminalClass self, GlibString string) => ReadAttr self string

-- | When the user double-clicks to start selection, the terminal will
--   extend the selection on word boundaries. It will treat characters the
--   word-chars characters as parts of words, and all other characters as
--   word separators. Ranges of characters can be specified by separating
--   them with a hyphen. As a special case, when setting this to the empty
--   string, the terminal will treat all graphic non-punctuation non-space
--   characters as word characters.
--   
--   Defalut value: ""
--   
--   <ul>
--   <li>Available since Vte version 0.19.1</li>
--   </ul>
terminalWordChars :: (TerminalClass self, GlibString string) => Attr self string

-- | This signal is emitted when the a child sends a beep request to the
--   terminal.
beep :: TerminalClass self => Signal self (IO ())

-- | Emitted whenever selection of a new font causes the values of the
--   char_width or char_height fields to change.
charSizeChanged :: TerminalClass self => Signal self (Int -> Int -> IO ())

-- | This signal is emitted when the terminal detects that a child started
--   using <a>terminalForkCommand</a> has exited.
childExited :: TerminalClass self => Signal self (IO ())

-- | Emitted whenever the terminal receives input from the user and
--   prepares to send it to the child process. The signal is emitted even
--   when there is no child process.
commit :: (TerminalClass self, GlibString string) => Signal self (string -> Int -> IO ())

-- | Emitted whenever the visible appearance of the terminal has changed.
--   Used primarily by <tt>TerminalAccessible</tt>.
contentsChanged :: TerminalClass self => Signal self (IO ())

-- | Emitted whenever <a>terminalCopyClipboard</a> is called.
copyClipboard :: TerminalClass self => Signal self (IO ())

-- | Emitted whenever the cursor moves to a new character cell. Used
--   primarily by <tt>TerminalAccessible</tt>.
cursorMoved :: TerminalClass self => Signal self (IO ())

-- | Emitted when the user hits the <a>-</a> key while holding the Control
--   key.
decreaseFontSize :: TerminalClass self => Signal self (IO ())

-- | Emitted at the child application's request.
deiconifyWindow :: TerminalClass self => Signal self (IO ())

-- | Emitted whenever the terminal's emulation changes, only possible at
--   the parent application's request.
emulationChanged :: TerminalClass self => Signal self (IO ())

-- | Emitted whenever the terminal's current encoding has changed, either
--   as a result of receiving a control sequence which toggled between the
--   local and UTF-8 encodings, or at the parent application's request.
encodingChanged :: TerminalClass self => Signal self (IO ())

-- | Emitted when the terminal receives an end-of-file from a child which
--   is running in the terminal. This signal is frequently (but not always)
--   emitted with a <a>childExited</a> signal.
eof :: TerminalClass self => Signal self (IO ())

-- | Emitted when the terminal's icon_title field is modified.
iconTitleChanged :: TerminalClass self => Signal self (IO ())

-- | Emitted at the child application's request.
iconifyWindow :: TerminalClass self => Signal self (IO ())

-- | Emitted when the user hits the <a>+</a> key while holding the Control
--   key.
increaseFontSize :: TerminalClass self => Signal self (IO ())

-- | Emitted at the child application's request.
lowerWindow :: TerminalClass self => Signal self (IO ())

-- | Emitted at the child application's request.
maximizeWindow :: TerminalClass self => Signal self (IO ())

-- | Emitted when user move terminal window.
moveWindow :: TerminalClass self => Signal self (Word -> Word -> IO ())

-- | Emitted whenever <a>terminalPasteClipboard</a> is called.
pasteClipboard :: TerminalClass self => Signal self (IO ())

-- | Emitted at the child application's request.
raiseWindow :: TerminalClass self => Signal self (IO ())

-- | Emitted at the child application's request.
refreshWindow :: TerminalClass self => Signal self (IO ())

-- | Emitted at the child application's request.
resizeWindow :: TerminalClass self => Signal self (Int -> Int -> IO ())

-- | Emitted at the child application's request.
restoreWindow :: TerminalClass self => Signal self (IO ())

-- | Emitted at the child application's request.
selectionChanged :: TerminalClass self => Signal self (IO ())

-- | Set the scroll adjustments for the terminal. Usually scrolled
--   containers like <a>ScrolledWindow</a> will emit this signal to connect
--   two instances of <a>Scrollbar</a> to the scroll directions of the
--   <a>Terminal</a>.
setScrollAdjustments :: TerminalClass self => Signal self (Adjustment -> Adjustment -> IO ())

-- | Emitted whenever the contents of the status line are modified or
--   cleared.
statusLineChanged :: TerminalClass self => Signal self (IO ())

-- | An internal signal used for communication between the terminal and its
--   accessibility peer. May not be emitted under certain circumstances.
textDeleted :: TerminalClass self => Signal self (IO ())

-- | An internal signal used for communication between the terminal and its
--   accessibility peer. May not be emitted under certain circumstances.
textInserted :: TerminalClass self => Signal self (IO ())

-- | An internal signal used for communication between the terminal and its
--   accessibility peer. May not be emitted under certain circumstances.
textModified :: TerminalClass self => Signal self (IO ())

-- | An internal signal used for communication between the terminal and its
--   accessibility peer. May not be emitted under certain circumstances.
textScrolled :: TerminalClass self => Signal self (Int -> IO ())

-- | Emitted when the terminal's window_title field is modified.
windowTitleChanged :: TerminalClass self => Signal self (IO ())
instance Enum TerminalEraseBinding
instance Bounded TerminalEraseBinding
instance Eq TerminalEraseBinding
instance Show TerminalEraseBinding
instance Enum TerminalCursorBlinkMode
instance Bounded TerminalCursorBlinkMode
instance Eq TerminalCursorBlinkMode
instance Show TerminalCursorBlinkMode
instance Enum TerminalCursorShape
instance Bounded TerminalCursorShape
instance Eq TerminalCursorShape
instance Show TerminalCursorShape
instance Bounded RegexCompileFlags
instance Eq RegexCompileFlags
instance Show RegexCompileFlags
instance Bounded RegexMatchFlags
instance Eq RegexMatchFlags
instance Show RegexMatchFlags
instance Flags RegexMatchFlags
instance Enum RegexMatchFlags
instance Flags RegexCompileFlags
instance Enum RegexCompileFlags
