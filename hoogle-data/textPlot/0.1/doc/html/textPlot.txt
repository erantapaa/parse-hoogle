-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Graphs functions as lines of text
--   
--   Graphs standard, parametric, and polar functions and plots them into
--   text files or prints them. One creates a standard, polar, or
--   parametric plot with boundaries, dimensions and possible functions.
--   One may add functions to any plot.
@package textPlot
@version 0.1

module TextPlot
type TextPlot = [[Char]]

-- | Specifies a set of functions to be graphed in Cartesian coordinates
data Plot
Plot :: Double -> Double -> Int -> Double -> Double -> Int -> [(Double -> Double)] -> Plot

-- | Specifies a set of parametric functions to be graphed in Cartesian
--   coordinates
data PlotParam
PlotParam :: Double -> Double -> Int -> Double -> Double -> Int -> [(Double -> (Double, Double), Double, Double, Int)] -> PlotParam

-- | Specifies a set of functions to be graphed in polar coordinates
data PlotPolar
PlotPolar :: Double -> Double -> Int -> Double -> Double -> Int -> [(Double -> Double, Double, Double, Int)] -> PlotPolar

-- | adds a function to a <tt>Plot</tt>
insertF :: (Double -> Double) -> Plot -> Plot

-- | adds a function to a <tt>PlotParam</tt>
insertParam :: (Double -> (Double, Double), Double, Double, Int) -> PlotParam -> PlotParam

-- | adds a function to a <tt>PlotPolar</tt>
insertPolar :: (Double -> Double, Double, Double, Int) -> PlotPolar -> PlotPolar
class Draw a

-- | prints a <tt>TextPlot</tt> to the terminal
printPlot :: TextPlot -> IO ()

-- | writes a <tt>TextPlot</tt> to a specified file name
export :: String -> TextPlot -> IO ()

-- | prints the a <tt>TextPlot</tt> from a file to the terminal
view :: String -> IO ()
instance Draw PlotPolar
instance Draw PlotParam
instance Draw Plot
instance Show PlotPolar
instance Show PlotParam
instance Show Plot
