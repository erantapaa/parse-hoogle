-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | ExtremlyEasyConfig - Extremly Simple parser for config files
--   
--   Implementation of a very simple parser for parameters recognition. It
--   recognizes given parameters and their values. As input it becomes list
--   of parameters and all their possible values in format [ParameterInput]
--   and input String where parameters will be searched for. As output it
--   deliveres recognized parameters and their values in format
--   [ParameterOutput], where only these parameters are present which have
--   been found in the input string. In output list each exisitng parameter
--   has exactly one value - this one that has been recognized in the input
--   string. Parameters in the input string have to be always given in
--   following format: (&lt;flagname&gt; &lt;parameter&gt;)*. Anything what
--   is not recognized as parameter or value is ignored.
@package EEConfig
@version 1.0


-- | This module is a very simple parser for parameters recognition. It
--   recognizes given parameters and their values. As input it becomes list
--   of parameters and their values in format <tt>[ParameterInput]</tt> and
--   input String where parameters will be searched. As output it deliveres
--   recognized parameters and values in format <tt>[ParameterOutput]</tt>,
--   where only these parameters are present which have been found in the
--   input string. In output list each exisitng parameter has exactly one
--   value - this one that has been recognized in the input string.
--   Parameters in the input string have to be always given in following
--   format: (&lt;flagname&gt; &lt;parameter&gt;)*
--   
--   Example how to use it.
--   
--   <pre>
--   let paramsList = matchParamsL params inputText
--   let paramsTree = matchParamsT paramsList
--   params :: [ParameterInput]
--   params = [(<a>-pl1</a>,algNum),(<a>-pl2</a>,algNum),
--            (<a>-br1</a>,<a>0</a>:(map show [5..30])),(<a>-br2</a>,<a>0</a>:(map show [5..30])),
--            (<a>-dp1</a>,<a>0</a>:(map show [3..8])),(<a>-dp2</a>,<a>0</a>:(map show [3..8])),
--            (<a>-verbose</a>,[<a>0</a>,<a>1</a>,<a>2</a>]),
--            (<a>-evaluator</a>,[<a>only</a>,<a>all</a>])]
--   </pre>
module EEConfig

-- | ParameterInput is a pair of parameter label and all its valid values.
type ParameterInput = (String, [String])

-- | Parameter's label and its value formated for output.
type ParameterOutput = (String, String)

-- | Read parameters [ParameterOutput] formated can be transformed into
--   binary tree for search purposes.
type ParameterTree = Map String String
matchParamsL :: [ParameterInput] -> String -> [ParameterOutput]

-- | Transfers list of regonized parameters into a tree.
matchParamsT :: [ParameterOutput] -> ParameterTree
member :: (Ord k) => k -> Map k a -> Bool
(!) :: (Ord k) => Map k a -> k -> a
