-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Parse character delimited textual data
--   
--   Parse character delimited textual data
@package delimited-text
@version 0.3.0


-- | Parse text files containing lines with records separated by character
--   delimiters.
--   
--   At this time parsing is only supported for lazy <tt>ByteString</tt>s.
module Text.Delimited

-- | Encode records separated by newlines to a ByteString. Record fields
--   are separated by <tt>delim</tt>.
encode :: Char -> Content -> ByteString

-- | Parse records separated by newlines from a ByteString. Record fields
--   are separated by any of the characters in <tt>delims</tt>. There is no
--   way of escaping delimiters, so record fields may not contain any of
--   the characters in <tt>delims</tt>.
decode :: [Char] -> ByteString -> Result Content

-- | Decode a ByteString, apply a function to each <a>Record</a> and encode
--   the content. Delimiters may contain multiple characters but only the
--   first is used for encoding.
interact :: (Record -> Record) -> [Char] -> ByteString -> Result ByteString

-- | A delimited file is a series of variable length records.
type Content = [Record]

-- | A record is a series of fields. Each record is located on a separate
--   line, delimited by a line break (CRLF).
type Record = [Field]

-- | A field is a strict ByteString.
type Field = ByteString

-- | Result type.
type Result a = Either ParseError a
