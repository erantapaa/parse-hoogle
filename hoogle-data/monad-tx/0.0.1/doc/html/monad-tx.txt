-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A transactional state monad.
--   
--   .
@package monad-tx
@version 0.0.1


-- | A transactional state monad.
module Control.Monad.Tx

-- | The transaction monad. A State monad, with transactional state.
data TxM o s a

-- | A transaction handle.
data Tx o s e a

-- | Transaction Status.
data TxStat e a
Begin :: TxStat e a

-- | Reverted state, returned an error.
Abort :: (Maybe e) -> TxStat e a

-- | Committed state, returned an error.
Dirty :: (Maybe e) -> TxStat e a

-- | Reverted state, returned a result.
Rollback :: a -> TxStat e a

-- | Committed state, returned a result.
Commit :: a -> TxStat e a
runTxM :: TxM o s a -> s -> (s -> a -> o) -> o
runTxM_ :: TxM (a, s) s a -> s -> (a, s)

-- | Begin a transaction. <tt>begin</tt> takes a function which represents
--   this transaction.
begin :: (Tx o s e a -> TxM o s ()) -> TxM o s (TxStat e a)

-- | Revert state, return an error.
abort :: Tx o s e a -> Maybe e -> TxM o s ()

-- | Commit state, return an error.
dirty :: Tx o s e a -> Maybe e -> TxM o s ()

-- | Revert state, return a result.
rollback :: Tx o s e a -> a -> TxM o s ()

-- | Commit state, return a result.
commit :: Tx o s e a -> a -> TxM o s ()
get :: TxM o s s
gets :: (s -> a) -> TxM o s a
set :: s -> TxM o s ()
modify :: (s -> s) -> TxM o s ()

-- | <pre>
--   test0 :: Tx o Int String String -&gt; TxM o Int ()
--   test0 tx = do
--     s &lt;- get
--     set 99
--     case s of
--       0 -&gt; return   ()
--       1 -&gt; abort    tx (Just (show s))
--       2 -&gt; dirty    tx (Just (show s))
--       3 -&gt; rollback tx  "rollback!"
--       _ -&gt; commit   tx  "wooo"
--   </pre>
test0 :: Tx o Int String String -> TxM o Int ()

-- | <pre>
--   runTest0 :: [(TxStat String String, Int)]
--   runTest0 = fmap (runTxM_ (begin test0)) [0..4]
--   </pre>
--   
--   <pre>
--   ghci&gt; mapM_ print runTest0
--   (Abort Nothing,0)
--   (Abort (Just "1"),1)
--   (Dirty (Just "2"),99)
--   (Rollback "rollback!",3)
--   (Commit "wooo",99)
--   </pre>
runTest0 :: [(TxStat String String, Int)]
instance (Eq e, Eq a) => Eq (TxStat e a)
instance (Ord e, Ord a) => Ord (TxStat e a)
instance (Read e, Read a) => Read (TxStat e a)
instance (Show e, Show a) => Show (TxStat e a)
instance Monad (TxM o s)
instance Functor (TxM o s)
