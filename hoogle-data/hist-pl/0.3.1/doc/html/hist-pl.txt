-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Umbrella package for the historical dictionary of Polish
--   
--   The package provides a tool for creating and searching the historical
--   dictionary of Polish.
@package hist-pl
@version 0.3.1


-- | The module provides functions for dictionary-driven analysis of the
--   input text.
module NLP.HistPL.Analyse

-- | A token is an element of the analysis result.
data Token
Token :: Text -> [(LexEntry, Code)] -> [[Interp]] -> Token

-- | Orthographic form.
orth :: Token -> Text

-- | Historical interpretations.
hist :: Token -> [(LexEntry, Code)]

-- | Contemporary interpretations.
cont :: Token -> [[Interp]]

-- | A punctuation or a space.
data Other

-- | Punctuation
Pun :: Text -> Other

-- | Space
Space :: Text -> Other

-- | Perform simple tokenization -- spaces and punctuation characters are
--   treated as token ending markers.
tokenize :: Text -> [Either Text Other]

-- | Remove all instances of the "-\n" string.
rmHyphen :: Text -> Text

-- | Analyse the word.
anaWord :: HistPL -> Text -> IO Token

-- | Map the monadic function over the left elements of the input list.
mapL :: (Functor m, Monad m) => (a -> m a') -> [Either a b] -> m [Either a' b]

-- | JSON serialization configuration. Depending on the configuration,
--   different parts of the result will be converted to a JSON format.
data JConf
JConf :: ShowCont -> Bool -> JConf

-- | When to show cont. interpretations.
showCont :: JConf -> ShowCont

-- | Show definitions?
showDefs :: JConf -> Bool

-- | When contemporary interpretations should be shown.
data ShowCont

-- | Never
NoShowCont :: ShowCont

-- | When no historical interpretation
ShowCont :: ShowCont

-- | Alwas
ForceShowCont :: ShowCont

-- | Default JSON serialization configuration.
defaultJConf :: JConf

-- | Build JSON value from a list of analysed sentences.
jsonAna :: JConf -> [Either Token Other] -> Value
instance Show Token
instance Show Other
instance Show ShowCont
instance Eq ShowCont
instance Ord ShowCont
instance Show JConf
instance Eq JConf
instance Ord JConf
