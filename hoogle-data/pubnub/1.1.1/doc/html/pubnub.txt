-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | PubNub Haskell SDK
--   
--   The PubNub Network makes Real-time easy with a Simple Communications
--   API. Two Functions: Send and Receive (Publish and Subscribe). We
--   provide a web-service API for businesses to build scalable Data Push
--   communication apps on Mobile, Tablet and Web. Bidirectional JSON.
@package pubnub
@version 1.1.1

module Network.Pubnub.Types
convertHistoryOptions :: HistoryOptions -> [(ByteString, ByteString)]
newtype Timestamp
Timestamp :: Integer -> Timestamp
data PN
PN :: Text -> Text -> Text -> Text -> Maybe UUID -> Maybe Text -> [Text] -> Integer -> Timestamp -> ByteString -> Maybe AES -> Maybe (IV AES) -> Bool -> PN
origin :: PN -> Text
pub_key :: PN -> Text
sub_key :: PN -> Text
sec_key :: PN -> Text
uuid_key :: PN -> Maybe UUID
auth_key :: PN -> Maybe Text
channels :: PN -> [Text]
jsonp_callback :: PN -> Integer
time_token :: PN -> Timestamp
cipher_key :: PN -> ByteString
ctx :: PN -> Maybe AES
iv :: PN -> Maybe (IV AES)
ssl :: PN -> Bool
defaultPN :: PN
data SubscribeOptions a
SubscribeOptions :: (a -> IO ()) -> IO () -> IO () -> (Maybe Int -> Maybe ByteString -> IO ()) -> Maybe (Presence -> IO ()) -> IO () -> Maybe Int -> Bool -> Maybe Integer -> SubscribeOptions a
onMsg :: SubscribeOptions a -> a -> IO ()
onConnect :: SubscribeOptions a -> IO ()
onDisconnect :: SubscribeOptions a -> IO ()
onError :: SubscribeOptions a -> Maybe Int -> Maybe ByteString -> IO ()
onPresence :: SubscribeOptions a -> Maybe (Presence -> IO ())
onReconnect :: SubscribeOptions a -> IO ()
subTimeout :: SubscribeOptions a -> Maybe Int
resumeOnReconnect :: SubscribeOptions a -> Bool
windowing :: SubscribeOptions a -> Maybe Integer
defaultSubscribeOptions :: SubscribeOptions a
data Auth
Auth :: Maybe Text -> [Text] -> Bool -> Bool -> Int -> Auth
chan :: Auth -> Maybe Text
authKeys :: Auth -> [Text]
r :: Auth -> Bool
w :: Auth -> Bool
ttl :: Auth -> Int
defaultAuth :: Auth
data ConnectResponse
ConnectResponse :: ([Value], Timestamp) -> ConnectResponse
data SubscribeResponse a
SubscribeResponse :: (a, Timestamp) -> SubscribeResponse a
data EncryptedSubscribeResponse
EncryptedSubscribeResponse :: ([Text], Timestamp) -> EncryptedSubscribeResponse
data PublishResponse
PublishResponse :: Integer -> String -> Timestamp -> PublishResponse
type UUID = Text
data Presence
Presence :: Action -> Integer -> UUID -> Occupancy -> Presence
action :: Presence -> Action
timestamp :: Presence -> Integer
uuid :: Presence -> UUID
presenceOccupancy :: Presence -> Occupancy
data Action
Join :: Action
Leave :: Action
Timeout :: Action
data HereNow
HereNow :: [UUID] -> Occupancy -> HereNow
uuids :: HereNow -> [UUID]
herenowOccupancy :: HereNow -> Occupancy
data History a
History :: [a] -> Integer -> Integer -> History a
data HistoryOption
Start :: Integer -> HistoryOption
End :: Integer -> HistoryOption
Reverse :: Bool -> HistoryOption
Count :: Integer -> HistoryOption
type HistoryOptions = [HistoryOption]
setEncryptionKey :: PN -> ByteString -> Either KeyError PN
instance FromJSON HereNow
instance ToJSON HereNow
instance FromJSON Presence
instance ToJSON Presence
instance Show Auth
instance Show Timestamp
instance Show ConnectResponse
instance Generic ConnectResponse
instance Show PublishResponse
instance Generic PublishResponse
instance Show a => Show (SubscribeResponse a)
instance Generic (SubscribeResponse a)
instance Show EncryptedSubscribeResponse
instance Generic EncryptedSubscribeResponse
instance Show Action
instance Show Presence
instance Show HereNow
instance Show a => Show (History a)
instance Generic (History a)
instance Datatype D1ConnectResponse
instance Constructor C1_0ConnectResponse
instance Datatype D1PublishResponse
instance Constructor C1_0PublishResponse
instance Datatype D1SubscribeResponse
instance Constructor C1_0SubscribeResponse
instance Datatype D1EncryptedSubscribeResponse
instance Constructor C1_0EncryptedSubscribeResponse
instance Datatype D1History
instance Constructor C1_0History
instance FromJSON a => FromJSON (History a)
instance ToJSON Action
instance FromJSON Action
instance FromJSON EncryptedSubscribeResponse
instance FromJSON a => FromJSON (SubscribeResponse a)
instance FromJSON PublishResponse
instance FromJSON ConnectResponse
instance FromJSON Timestamp
instance ToJSON Timestamp

module Network.Pubnub
data PN
PN :: Text -> Text -> Text -> Text -> Maybe UUID -> Maybe Text -> [Text] -> Integer -> Timestamp -> ByteString -> Maybe AES -> Maybe (IV AES) -> Bool -> PN
origin :: PN -> Text
pub_key :: PN -> Text
sub_key :: PN -> Text
sec_key :: PN -> Text
uuid_key :: PN -> Maybe UUID
auth_key :: PN -> Maybe Text
channels :: PN -> [Text]
jsonp_callback :: PN -> Integer
time_token :: PN -> Timestamp
cipher_key :: PN -> ByteString
ctx :: PN -> Maybe AES
iv :: PN -> Maybe (IV AES)
ssl :: PN -> Bool
defaultPN :: PN
newtype Timestamp
Timestamp :: Integer -> Timestamp
time :: IO (Maybe Timestamp)
publish :: ToJSON a => PN -> Text -> a -> IO (Maybe PublishResponse)
subscribe :: FromJSON b => PN -> SubscribeOptions b -> IO (Async ())
hereNow :: PN -> Text -> IO (Maybe HereNow)
presence :: FromJSON b => PN -> Maybe UUID -> (b -> IO ()) -> IO (Async ())
history :: FromJSON b => PN -> Text -> HistoryOptions -> IO (Maybe (History b))
leave :: PN -> Text -> UUID -> IO ()
getUuid :: IO UUID
unsubscribe :: Async () -> IO ()
audit :: PN -> Auth -> IO (Maybe Value)
auth :: PN -> Text -> PN
grant :: PN -> Auth -> IO (Maybe Value)
