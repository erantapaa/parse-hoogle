-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Unicode alternatives for common functions and operators
--   
--   <ul>
--   <li><i>Important note:</i> This package will soon be deprecated. Use
--   <a>http://hackage.haskell.org/package/base-unicode-symbols</a> and/or
--   <a>http://hackage.haskell.org/package/containers-unicode-symbols</a>
--   instead.</li>
--   </ul>
--   
--   This package defines new symbols for a number of functions and
--   operators in the base package and for the containers package.
--   
--   All symbols are documented with their actual definition and
--   information regarding their Unicode code point. They should be
--   completely interchangeable with their definitions.
--   
--   This package was inspired by unicode-prelude from Péter Diviánszky:
--   <a>http://hackage.haskell.org/package/unicode-prelude</a>
@package unicode-symbols
@version 0.1.1.2

module Data.Sequence.Unicode

-- | (∅) = <a>empty</a>
--   
--   U+2205, EMPTY SET
(∅) :: Seq α

-- | (⊲) = (<a>&lt;|</a>)
--   
--   U+22B2, NORMAL SUBGROUP OF
(⊲) :: α -> Seq α -> Seq α

-- | (⊳) = (<a>|&gt;</a>)
--   
--   U+22B3, CONTAINS AS NORMAL SUBGROUP
(⊳) :: Seq α -> α -> Seq α

-- | (⋈) = (<a>&gt;&lt;</a>)
--   
--   U+22C8, BOWTIE
(⋈) :: Seq α -> Seq α -> Seq α

module Data.Map.Unicode

-- | (∈) = <a>member</a>
--   
--   U+2208, ELEMENT OF
(∈) :: (Ord k) => k -> Map k α -> Bool

-- | (∉) = <a>notMember</a>
--   
--   U+2209, NOT AN ELEMENT OF
(∉) :: (Ord k) => k -> Map k α -> Bool

-- | (∅) = <a>empty</a>
--   
--   U+2205, EMPTY SET
(∅) :: Map k α

-- | (∪) = <a>union</a>
--   
--   U+222A, UNION
(∪) :: (Ord k) => Map k α -> Map k α -> Map k α

-- | (∩) = <a>intersection</a>
--   
--   U+2229, INTERSECTION
(∩) :: (Ord k) => Map k α -> Map k β -> Map k α

module Data.IntMap.Unicode

-- | (∈) = <a>member</a>
--   
--   U+2208, ELEMENT OF
(∈) :: Int -> IntMap α -> Bool

-- | (∉) = <a>notMember</a>
--   
--   U+2209, NOT AN ELEMENT OF
(∉) :: Int -> IntMap α -> Bool

-- | (∅) = <a>empty</a>
--   
--   U+2205, EMPTY SET
(∅) :: IntMap α

-- | (∪) = <a>union</a>
--   
--   U+222A, UNION
(∪) :: IntMap α -> IntMap α -> IntMap α

-- | (∩) = <a>intersection</a>
--   
--   U+2229, INTERSECTION
(∩) :: IntMap α -> IntMap β -> IntMap α

module Data.Monoid.Unicode

-- | (∅) = <a>mempty</a>
--   
--   U+2205, EMPTY SET
(∅) :: (Monoid α) => α

-- | (⊕) = <a>mappend</a>
--   
--   U+2295, CIRCLED PLUS
(⊕) :: (Monoid α) => α -> α -> α

module Control.Category.Unicode

-- | (∘) = (<a>.</a>)
--   
--   U+2218, RING OPERATOR
(∘) :: (Category cat) => cat b c -> cat a b -> cat a c

module Control.Applicative.Unicode

-- | (⊛) = <a>&lt;*&gt;</a>
--   
--   U+229B, CIRCLED ASTERISK OPERATOR
(⊛) :: (Applicative f) => f (α -> β) -> f α -> f β

-- | (∅) = <a>empty</a>
--   
--   U+2205, EMPTY SET
(∅) :: (Alternative f) => f α

module Prelude.Unicode

-- | (¬) = <a>not</a>
--   
--   U+00AC, NOT SIGN
(¬) :: Bool -> Bool

-- | (∧) = (<a>&amp;&amp;</a>)
--   
--   U+2227, LOGICAL AND
(∧) :: Bool -> Bool -> Bool

-- | (∨) = (<a>||</a>)
--   
--   U+2228, LOGICAL OR
(∨) :: Bool -> Bool -> Bool

-- | (≡) = (<a>==</a>)
--   
--   U+2261, IDENTICAL TO
(≡) :: (Eq α) => α -> α -> Bool

-- | (≢) = (<a>/=</a>)
--   
--   U+2262, NOT IDENTICAL TO
(≢) :: (Eq α) => α -> α -> Bool

-- | (≤) = (<a>&lt;=</a>)
--   
--   U+2264, LESS-THAN OR EQUAL TO
(≤) :: (Ord α) => α -> α -> Bool

-- | (≥) = (<a>&gt;=</a>)
--   
--   U+2265, GREATER-THAN OR EQUAL TO
(≥) :: (Ord α) => α -> α -> Bool

-- | (≮) = (<a>&gt;=</a>)
--   
--   U+226E, NOT LESS-THAN
(≮) :: (Ord α) => α -> α -> Bool

-- | (≯) = (<a>&lt;=</a>)
--   
--   U+226F, NOT GREATER-THAN
(≯) :: (Ord α) => α -> α -> Bool

-- | π = <a>pi</a>
--   
--   U+03C0, GREEK SMALL LETTER PI
π :: (Floating α) => α

-- | (÷) = (<a>/</a>)
--   
--   U+00F7, DIVISION SIGN
(÷) :: (Fractional α) => α -> α -> α

-- | (⋅) = (<a>*</a>)
--   
--   U+22C5, DOT OPERATOR
(⋅) :: (Num α) => α -> α -> α

-- | (∘) = (<a>.</a>)
--   
--   U+2218, RING OPERATOR
(∘) :: (b -> c) -> (a -> b) -> (a -> c)

-- | (∈) = <a>elem</a>
--   
--   U+2208, ELEMENT OF
(∈) :: (Eq α) => α -> [α] -> Bool

-- | x ∉ y = <a>not</a> (x ∈ y)
--   
--   U+2209, NOT AN ELEMENT OF
(∉) :: (Eq α) => α -> [α] -> Bool

-- | (⊥) = <a>undefined</a>
--   
--   U+22A5, UP TACK
(⊥) :: α

module Data.IntSet.Unicode

-- | (∈) = <a>member</a>
--   
--   U+2208, ELEMENT OF
(∈) :: Int -> IntSet -> Bool

-- | (∉) = <a>notMember</a>
--   
--   U+2209, NOT AN ELEMENT OF
(∉) :: Int -> IntSet -> Bool

-- | (∅) = <a>empty</a>
--   
--   U+2205, EMPTY SET
(∅) :: IntSet

-- | (∪) = <a>union</a>
--   
--   U+222A, UNION
(∪) :: IntSet -> IntSet -> IntSet

-- | (∩) = <a>intersection</a>
--   
--   U+2229, INTERSECTION
(∩) :: IntSet -> IntSet -> IntSet

-- | (⊆) = <a>isSubsetOf</a>
--   
--   U+2286, SUBSET OF OR EQUAL TO
(⊆) :: IntSet -> IntSet -> Bool

-- | (⊇) = <a>flip</a> (⊆)
--   
--   U+2287, SUPERSET OF OR EQUAL TO
(⊇) :: IntSet -> IntSet -> Bool

-- | x ⊈ y = (x ≢ y) ∧ (x ⊄ y)
--   
--   U+2288, NEITHER A SUBSET OF NOR EQUAL TO
(⊈) :: IntSet -> IntSet -> Bool

-- | x ⊉ y = (x ≢ y) ∧ (x ⊅ y)
--   
--   U+2289, NEITHER A SUPERSET OF NOR EQUAL TO
(⊉) :: IntSet -> IntSet -> Bool

-- | (⊂) = <a>isProperSubsetOf</a>
--   
--   U+2282, SUBSET OF
(⊂) :: IntSet -> IntSet -> Bool

-- | (⊃) = <a>flip</a> (⊂)
--   
--   U+2283, SUPERSET OF
(⊃) :: IntSet -> IntSet -> Bool

-- | x ⊄ y = <a>not</a> (x ⊂ y)
--   
--   U+2284, NOT A SUBSET OF
(⊄) :: IntSet -> IntSet -> Bool

-- | x ⊅ y = <a>not</a> (x ⊃ y)
--   
--   U+2285, NOT A SUPERSET OF
(⊅) :: IntSet -> IntSet -> Bool

module Data.Set.Unicode

-- | (∈) = <a>member</a>
--   
--   U+2208, ELEMENT OF
(∈) :: (Ord α) => α -> Set α -> Bool

-- | (∉) = <a>notMember</a>
--   
--   U+2209, NOT AN ELEMENT OF
(∉) :: (Ord α) => α -> Set α -> Bool

-- | (∅) = <a>empty</a>
--   
--   U+2205, EMPTY SET
(∅) :: Set α

-- | (∪) = <a>union</a>
--   
--   U+222A, UNION
(∪) :: (Ord α) => Set α -> Set α -> Set α

-- | (∩) = <a>intersection</a>
--   
--   U+2229, INTERSECTION
(∩) :: (Ord α) => Set α -> Set α -> Set α

-- | (⊆) = <a>isSubsetOf</a>
--   
--   U+2286, SUBSET OF OR EQUAL TO
(⊆) :: (Ord α) => Set α -> Set α -> Bool

-- | (⊇) = <a>flip</a> (⊆)
--   
--   U+2287, SUPERSET OF OR EQUAL TO
(⊇) :: (Ord α) => Set α -> Set α -> Bool

-- | x ⊈ y = (x ≢ y) ∧ (x ⊄ y)
--   
--   U+2288, NEITHER A SUBSET OF NOR EQUAL TO
(⊈) :: (Ord α) => Set α -> Set α -> Bool

-- | x ⊉ y = (x ≢ y) ∧ (x ⊅ y)
--   
--   U+2289, NEITHER A SUPERSET OF NOR EQUAL TO
(⊉) :: (Ord α) => Set α -> Set α -> Bool

-- | (⊂) = <a>isProperSubsetOf</a>
--   
--   U+2282, SUBSET OF
(⊂) :: (Ord α) => Set α -> Set α -> Bool

-- | (⊃) = <a>flip</a> (⊂)
--   
--   U+2283, SUPERSET OF
(⊃) :: (Ord α) => Set α -> Set α -> Bool

-- | x ⊄ y = <a>not</a> (x ⊂ y)
--   
--   U+2284, NOT A SUBSET OF
(⊄) :: (Ord α) => Set α -> Set α -> Bool

-- | x ⊅ y = <a>not</a> (x ⊃ y)
--   
--   U+2285, NOT A SUPERSET OF
(⊅) :: (Ord α) => Set α -> Set α -> Bool
