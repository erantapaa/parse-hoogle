-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A Haskell implementation of the Accentuate.us API.
--   
--   Accentuate.us (<a>http://accentuate.us/</a>) is a free and open-source
--   web service that makes computer input really easy for over 115
--   languages. Using statistics, it will automatically add diacritics
--   ("special characters") to otherwise plain text. In support of being an
--   open web service, an API is provided and documented at
--   <a>http://accentuate.us/api</a>, which is implemented by this package.
@package accentuateus
@version 0.9.4

module Text.AccentuateUs
type Lang = ByteString
type Locale = ByteString

-- | Represents responses for the three Accentuate.us calls.
data AUSResponse
Langs :: LangsStatus -> Int -> [(Lang, Text)] -> AUSResponse
status :: AUSResponse -> LangsStatus
version :: AUSResponse -> Int

-- | <ul>
--   <li><i>(ISO-639, Localized Language)</i></li>
--   </ul>
languages :: AUSResponse -> [(Lang, Text)]
Lift :: Text -> AUSResponse
text :: AUSResponse -> Text
Feedback :: AUSResponse

-- | Represents languages response status
data LangsStatus

-- | Given version number &lt; server's
OutOfDate :: LangsStatus

-- | Given version number == server's
UpToDate :: LangsStatus

-- | Given version number &gt; server's
OverDate :: LangsStatus

-- | Get langs and their localized names. E.g.,
--   
--   <pre>
--   getEnglishName langs = fromMaybe "Not Found" $ "en" `lookup` langs
--   
--   TIO.putStrLn =&lt;&lt; liftM (either decodeUtf8 (getEnglishName . languages))
--                          (langs (Just "ga") 0)
--   </pre>
--   
--   The above example will get the localized name for English (ISO-639:
--   en) for localized into Irish (ISO-639: ga).
langs :: Maybe Locale -> Int -> IO (Either ByteString AUSResponse)

-- | For a given language, and optionally a locale, accentuates text. This
--   function is that which does the heavy lifting, restoring diacritics
--   (special characters) to otherwise plain text. E.g.,
--   
--   <pre>
--   TIO.putStrLn =&lt;&lt; liftM (either decodeUtf8 text)
--      (accentuate "vie" (Just "en") "My tu bo ke hoach la chan ten lua")
--   </pre>
--   
--   The above example accentuates the input text (<a>My tu...</a>) in
--   Vietnamese with an English localization of error responses.
accentuate :: Lang -> Maybe Locale -> Text -> IO (Either ByteString AUSResponse)

-- | Submits corrected text as feedback to Accentuate.us. It is helpful for
--   all users if developers make good use of this function as it helps
--   improve the Accentuate.us language models by retraining them.
--   
--   <pre>
--   feedback "ht" (Just "en")
--            "Bon, la f sa apre demen pito, l la w mwen andy."
--   </pre>
--   
--   This example submits the *correct* input text (all diacritics in their
--   proper places) to the Accentuate.us servers to be queued for language
--   model retraining.
feedback :: Lang -> Maybe Locale -> Text -> IO (Either ByteString AUSResponse)
instance Show Param
instance Show LangsStatus
instance Eq LangsStatus
instance Show AUSResponse
instance JSON AUSResponse
