-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Organized and simple web page scaffold for blaze and lucid
--   
@package webpage
@version 0.0.3.1

module Web.Page.Types

-- | Generic layout for a web page. We keep the data type purely parametric
--   to allow for record-syntax overloading / reassignment, like this: .
--   
--   <pre>
--   page :: WebPage (Html ()) T.Text
--   </pre>
--   
--   <pre>
--   page' = page {pageTitle = "foo!"}
--   </pre>
data WebPage markup attr
WebPage :: attr -> markup -> markup -> markup -> markup -> markup -> markup -> markup -> WebPage markup attr

-- | Page title
pageTitle :: WebPage markup attr -> attr

-- | Favicon tags
favicon :: WebPage markup attr -> markup

-- | <tt>&lt;meta&gt;</tt> tags
metaVars :: WebPage markup attr -> markup

-- | JavaScript to include at the top of the page
initScripts :: WebPage markup attr -> markup

-- | JavaScript to include before <tt>&lt;style&gt;</tt> tags
beforeStylesScripts :: WebPage markup attr -> markup

-- | Styles
styles :: WebPage markup attr -> markup

-- | JavaScript to include after <tt>&lt;style&gt;</tt> tags - ie:
--   <a>Modernizr</a>
afterStylesScripts :: WebPage markup attr -> markup

-- | JavaScript to include at the base of <tt>&lt;body&gt;</tt>
bodyScripts :: WebPage markup attr -> markup
emptyPage :: (Monoid m, Monoid a) => WebPage m a
instance (Show markup, Show attr) => Show (WebPage markup attr)
instance (Monoid m, Monoid a) => Default (WebPage m a)

module Web.Page.Lucid

-- | Generic page template implemented in Lucid.
template :: Monad m => WebPage (HtmlT m ()) Text -> HtmlT m () -> HtmlT m ()

module Web.Page.Blaze

-- | You should really be using Lucid...
template :: WebPage Html Text -> Html -> Html

module Web.Page.Hastache

-- | We choose to not interpolate the <tt>WebPage</tt> data type as a JSON
--   Hastache template value because I don't want the portions of
--   <tt>WebPage</tt> visible by <tt>content</tt>.
template :: WebPage Text Text -> Text -> Text
