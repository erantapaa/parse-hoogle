-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A package exposing a helper function for generating smart constructors.
--   
@package smartconstructor
@version 0.2.0.0


-- | This module exposes a <a>makeSmartCtor</a> function which
--   automatically creates smart constructors for custom newtype'd Haskell
--   types. See <a>http://wiki.haskell.org/Smart_constructors</a> for a
--   more in-depth discussion of smart constructors in Haskell.
--   
--   Smart constructors are useful for imposing additional checks on
--   values; given e.g.
--   
--   <pre>
--   import SmartConstructor
--   
--   newtype Positive = Positive Int
--   newtype NonEmptyList a = NonEmptyList [a]
--   newtype Interval = Interval (Integer, Integer)
--   </pre>
--   
--   You can use <a>makeSmartCtor</a> to generate smart constructors as
--   follows:
--   
--   <pre>
--   -- Defines 'makePositive :: Int -&gt; Maybe Positive'
--   makeSmartCtor defaultOptions ''Positive [|(&gt; 0)|]
--   
--   -- Defines 'makeNonEmptyList :: [a] -&gt; Maybe (NonEmptyList a)
--   makeSmartCtor defaultOptions ''NonEmptyList [|not . null|]
--   </pre>
--   
--   Notice how the third argument defines a predicate; the generated
--   functions apply this predicate to the given value: if it yields true,
--   the smart constructor call evaluates to a <a>Just</a> value. If the
--   predicate yields false, the smart constructor evaluates to
--   <a>Nothing</a>.
--   
--   By default, the name for the smart constructor is derived from the
--   type name. A custom name can be specified by modifying the
--   <a>ctorName</a> field of the defaultOptions:
--   
--   <pre>
--   -- Defines 'createIV :: (Integer, Integer) -&gt; Maybe Interval
--   makeSmartCtor defaultOptions{ ctorName = "createIV" } ''Interval [|uncurry (&lt;=)|]
--   </pre>
module SmartConstructor

-- | Values of the <a>SmartCtorOptions</a> type can be passed to
--   <a>makeSmartCtor</a> in order to customize the generated constructor
--   functions. At this point, only the name of the function can be
--   changed.
data SmartCtorOptions
SmartCtorOptions :: String -> SmartCtorOptions

-- | The desired name for the smart constructor function. An empty string
--   will make <a>makeSmartCtor</a> derive the function name from the type
--   by prepending <tt>make</tt> to the type name.
ctorName :: SmartCtorOptions -> String

-- | The default smart constructor generation options; the smart
--   constructor function will be named after the type, e.g.
--   
--   <pre>
--   makeSmartCtor defaultOptions ''Foo [|const True|]
--   </pre>
--   
--   defines a function <tt>makeFoo</tt>.
defaultOptions :: SmartCtorOptions

-- | The <a>makeSmartCtor</a> function creates a smart constructor for the
--   given type, using the given predicate.
makeSmartCtor :: SmartCtorOptions -> Name -> Q Exp -> Q [Dec]
