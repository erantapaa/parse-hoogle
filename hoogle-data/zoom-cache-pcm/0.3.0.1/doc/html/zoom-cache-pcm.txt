-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Library for zoom-cache PCM audio codecs
--   
--   zoom-cache-pcm is a fairly simple data file format for storing and
--   summarizing streams of PCM audio. See the zoom-cache package for
--   general information about zoom-cache files.
--   
--   This library provides codecs for use with the zoom-cache package,
--   allowing you to build applications which read and write zoom-cache-pcm
--   files. Tools for encoding and dumping zoom-cache-pcm files are in the
--   package zoom-cache-sndfile.
--   
--   When developing applications that read or write zoom-cache-pcm files,
--   it should be sufficient to import only the module
--   <a>Data.ZoomCache.PCM</a>.
@package zoom-cache-pcm
@version 0.3.0.1

module Data.ZoomCache.PCM.Types
data PCM a
PCM :: !a -> PCM a
unPCM :: PCM a -> !a
class (Ord a, Real a, ZoomReadable (PCM a), ZoomWritable (PCM a)) => ZoomPCM a
pcmFromRaw :: ZoomPCM a => a -> Builder
pcmMin :: ZoomPCM a => SummaryData (PCM a) -> a
pcmMax :: ZoomPCM a => SummaryData (PCM a) -> a
pcmAvg :: ZoomPCM a => SummaryData (PCM a) -> Double
pcmRMS :: ZoomPCM a => SummaryData (PCM a) -> Double
pcmWorkSO :: ZoomPCM a => SummaryWork (PCM a) -> SampleOffset
pcmWorkLast :: ZoomPCM a => SummaryWork (PCM a) -> a
pcmWorkMin :: ZoomPCM a => SummaryWork (PCM a) -> a
pcmWorkMax :: ZoomPCM a => SummaryWork (PCM a) -> a
pcmWorkSum :: ZoomPCM a => SummaryWork (PCM a) -> Double
pcmWorkSumSq :: ZoomPCM a => SummaryWork (PCM a) -> Double
pcmMkSummary :: ZoomPCM a => a -> a -> Double -> Double -> SummaryData (PCM a)
pcmMkSummaryWork :: ZoomPCM a => SampleOffset -> a -> a -> a -> Double -> Double -> SummaryWork (PCM a)
instance Typeable1 PCM

module Data.ZoomCache.PCM.Internal
readSummaryPCM :: (Functor m, Monad m, ZoomPCM a) => Iteratee ByteString m (SummaryData (PCM a))
fromSummaryPCM :: ZoomPCM a => SummaryData (PCM a) -> Builder
initSummaryPCMBounded :: (Bounded a, ZoomPCM a) => SampleOffset -> SummaryWork (PCM a)
mkSummaryPCM :: ZoomPCM a => SampleOffsetDiff -> SummaryWork (PCM a) -> SummaryData (PCM a)
appendSummaryPCM :: ZoomPCM a => SampleOffsetDiff -> SummaryData (PCM a) -> SampleOffsetDiff -> SummaryData (PCM a) -> SummaryData (PCM a)
updateSummaryPCM :: ZoomPCM a => SampleOffset -> PCM a -> SummaryWork (PCM a) -> SummaryWork (PCM a)
deltaDecodePCM :: ZoomPCM a => [PCM a] -> [PCM a]
deltaEncodePCM :: ZoomPCM a => SummaryWork (PCM a) -> PCM a -> PCM a


-- | Default codec implementation for PCM Audio of type Float and Double.
--   This module implements the interfaces documented in
--   <a>Data.ZoomCache.Codec</a>.
--   
--   The table below describes the encoding of SummaryData for PCM.Float.
--   
--   <pre>
--   | ...                                                           |   -35
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   | Min (float)                                                   | 36-39
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   | Max (float)                                                   | 40-43
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   | Mean [DC Bias] (float)                                        | 44-47
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   | RMS (float)                                                   | 48-51
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   </pre>
--   
--   The table below describes the encoding of SummaryData for PCM.Double.
--   
--   <pre>
--   | ...                                                           |   -35
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   | Min (double)                                                  | 36-39
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   |                                                               | 40-43
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   | Max (double)                                                  | 44-47
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   |                                                               | 48-51
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   | Mean [DC Bias] (double)                                       | 52-55
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   |                                                               | 56-59
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   | RMS (double)                                                  | 60-63
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   |                                                               | 64-67
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   </pre>
--   
--   Field encoding formats:
--   
--   <tt>float</tt>: big-endian IEEE 754-2008 binary32 (IEEE 754-1985
--   single) <tt>double</tt>: big-endian IEEE 754-2008 binary64 (IEEE
--   754-1985 double)
module Data.ZoomCache.PCM.IEEE754

-- | Summaries of a subsequence of values of type <tt>a</tt>. In the
--   default instances for <a>Int</a> and <a>Double</a>, this is a record
--   containing values such as the maximum, minimum and mean of the
--   subsequence.

-- | Intermediate calculations
instance ZoomPCM Double
instance ZoomWritable (PCM Double)
instance ZoomWrite (SampleOffset, PCM Double)
instance ZoomWrite (PCM Double)
instance ZoomReadable (PCM Double)
instance ZoomPCM Float
instance ZoomWritable (PCM Float)
instance ZoomWrite (SampleOffset, PCM Float)
instance ZoomWrite (PCM Float)
instance ZoomReadable (PCM Float)


-- | Default codec implementation for PCM Audio of type Int. This module
--   implements the interfaces documented in <a>Data.ZoomCache.Codec</a>.
--   
--   The table below describes the encoding of SummaryData for 'PCM Int16':
--   
--   <pre>
--   | ...                                                           |   -35
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   | Min (int16)                     | Max (int16)                 | 36-39
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   | Mean [DC Bias] (double)                                       | 40-43
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   |                                                               | 44-47
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   | RMS (double)                                                  | 48-51
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   |                                                               | 52-55
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   </pre>
--   
--   The table below describes the encoding of SummaryData for 'PCM Int'
--   and 'PCM Int32':
--   
--   <pre>
--   | ...                                                           |   -35
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   | Min (int32)                                                   | 36-39
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   | Max (int32)                                                   | 40-43
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   | Mean [DC Bias] (double)                                       | 44-47
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   |                                                               | 48-51
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   | RMS (double)                                                  | 52-55
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   |                                                               | 56-59
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   </pre>
--   
--   The table below describes the encoding of SummaryData for 'PCM Int64':
--   
--   <pre>
--   | ...                                                           |   -35
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   | Min (int64)                                                   | 36-39
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   |                                                               | 40-43
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   | Max (int64)                                                   | 44-47
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   |                                                               | 48-51
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   | Mean [DC Bias] (double)                                       | 52-55
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   |                                                               | 56-59
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   | RMS (double)                                                  | 60-63
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   |                                                               | 64-67
--   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
--   </pre>
--   
--   Field encoding formats:
--   
--   <tt>int32</tt>: 32bit big endian
--   
--   <tt>int64</tt>: 64bit big endian
--   
--   <tt>double</tt>: big-endian IEEE 754-2008 binary64 (IEEE 754-1985
--   double)
module Data.ZoomCache.PCM.Int

-- | Summaries of a subsequence of values of type <tt>a</tt>. In the
--   default instances for <a>Int</a> and <a>Double</a>, this is a record
--   containing values such as the maximum, minimum and mean of the
--   subsequence.

-- | Intermediate calculations
instance ZoomPCM Int64
instance ZoomWritable (PCM Int64)
instance ZoomWrite (SampleOffset, PCM Int64)
instance ZoomWrite (PCM Int64)
instance ZoomReadable (PCM Int64)
instance ZoomPCM Int32
instance ZoomWritable (PCM Int32)
instance ZoomWrite (SampleOffset, PCM Int32)
instance ZoomWrite (PCM Int32)
instance ZoomReadable (PCM Int32)
instance ZoomPCM Int16
instance ZoomWritable (PCM Int16)
instance ZoomWrite (SampleOffset, PCM Int16)
instance ZoomWrite (PCM Int16)
instance ZoomReadable (PCM Int16)
instance ZoomPCM Int8
instance ZoomWritable (PCM Int8)
instance ZoomWrite (SampleOffset, PCM Int8)
instance ZoomWrite (PCM Int8)
instance ZoomReadable (PCM Int8)
instance ZoomPCM Int
instance ZoomWritable (PCM Int)
instance ZoomWrite (SampleOffset, PCM Int)
instance ZoomWrite (PCM Int)
instance ZoomReadable (PCM Int)


-- | ZoomCache PCM enumeratee conversions
module Data.ZoomCache.PCM.Enumeratee
enumPCMDouble :: (Functor m, MonadIO m) => Enumeratee [Offset Block] [(TimeStamp, PCM Double)] m a
enumListPCMDouble :: (Functor m, MonadIO m) => Enumeratee [Offset Block] [(TimeStamp, [PCM Double])] m a
enumSummaryPCMDouble :: (Functor m, MonadIO m) => Int -> Enumeratee [Offset Block] [Summary (PCM Double)] m a

-- | Read the summary of an entire track.
wholeTrackSummaryPCMDouble :: (Functor m, MonadIO m) => [IdentifyCodec] -> TrackNo -> Iteratee (Offset ByteString) m (Summary (PCM Double))
enumSummaryListPCMDouble :: (Functor m, MonadIO m) => Int -> Enumeratee [Offset Block] [[Summary (PCM Double)]] m a

-- | Read the summary of an entire track.
wholeTrackSummaryListPCMDouble :: (Functor m, MonadIO m) => [IdentifyCodec] -> TrackNo -> Iteratee (Offset ByteString) m [Summary (PCM Double)]

module Data.ZoomCache.PCM
data PCM a
PCM :: !a -> PCM a
unPCM :: PCM a -> !a
class (Ord a, Real a, ZoomReadable (PCM a), ZoomWritable (PCM a)) => ZoomPCM a
pcmFromRaw :: ZoomPCM a => a -> Builder
pcmMin :: ZoomPCM a => SummaryData (PCM a) -> a
pcmMax :: ZoomPCM a => SummaryData (PCM a) -> a
pcmAvg :: ZoomPCM a => SummaryData (PCM a) -> Double
pcmRMS :: ZoomPCM a => SummaryData (PCM a) -> Double
pcmWorkSO :: ZoomPCM a => SummaryWork (PCM a) -> SampleOffset
pcmWorkLast :: ZoomPCM a => SummaryWork (PCM a) -> a
pcmWorkMin :: ZoomPCM a => SummaryWork (PCM a) -> a
pcmWorkMax :: ZoomPCM a => SummaryWork (PCM a) -> a
pcmWorkSum :: ZoomPCM a => SummaryWork (PCM a) -> Double
pcmWorkSumSq :: ZoomPCM a => SummaryWork (PCM a) -> Double
pcmMkSummary :: ZoomPCM a => a -> a -> Double -> Double -> SummaryData (PCM a)
pcmMkSummaryWork :: ZoomPCM a => SampleOffset -> a -> a -> a -> Double -> Double -> SummaryWork (PCM a)
pcmIdentifiers :: [ByteString -> Maybe Codec]
enumPCMDouble :: (Functor m, MonadIO m) => Enumeratee [Offset Block] [(TimeStamp, PCM Double)] m a
enumListPCMDouble :: (Functor m, MonadIO m) => Enumeratee [Offset Block] [(TimeStamp, [PCM Double])] m a
enumSummaryPCMDouble :: (Functor m, MonadIO m) => Int -> Enumeratee [Offset Block] [Summary (PCM Double)] m a

-- | Read the summary of an entire track.
wholeTrackSummaryPCMDouble :: (Functor m, MonadIO m) => [IdentifyCodec] -> TrackNo -> Iteratee (Offset ByteString) m (Summary (PCM Double))
enumSummaryListPCMDouble :: (Functor m, MonadIO m) => Int -> Enumeratee [Offset Block] [[Summary (PCM Double)]] m a

-- | Read the summary of an entire track.
wholeTrackSummaryListPCMDouble :: (Functor m, MonadIO m) => [IdentifyCodec] -> TrackNo -> Iteratee (Offset ByteString) m [Summary (PCM Double)]
