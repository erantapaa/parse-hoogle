-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Pattern predicates using TH
--   
@package is
@version 0.2


-- | Generate predicates from constructor names or from quoted patterns.
--   
--   You must enable the <tt>TemplateHaskell</tt> extension to use this
--   module.
module Data.Generics.Is
is :: Name -> Q Exp
isNot :: Name -> Q Exp
isP :: Q Pat -> Q Exp
isNotP :: Q Pat -> Q Exp

-- | Generate predicates of the form <tt>isC</tt>
--   
--   <pre>
--   &gt;&gt;&gt; $(makePredicates ''E)
--   
--   &gt;&gt;&gt; isPlus (Plus (Lit 1) (Lit 2))
--   True
--   </pre>
makePredicates :: Name -> Q [Dec]

-- | Generate predicates of the form <tt>isNotC</tt>
--   
--   <pre>
--   &gt;&gt;&gt; $(makePredicatesNot ''E)
--   
--   &gt;&gt;&gt; isNotAnd (Showable True)
--   True
--   </pre>
makePredicatesNot :: Name -> Q [Dec]

-- | Generate predicates of both forms, <tt>isC</tt> and <tt>isNotC</tt>
--   
--   <pre>
--   $(makePredicatesAll ''E) â‰¡ $(makePredicates ''E) ; $(makePredicatesNot ''E)
--   </pre>
makePredicatesAll :: Name -> Q [Dec]
