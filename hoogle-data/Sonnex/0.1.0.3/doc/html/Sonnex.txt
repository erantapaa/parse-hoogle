-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Sonnex is an alternative to Soundex for french language
--   
@package Sonnex
@version 0.1.0.3


-- | This package computes Sonnex codes for french words or phrases. It is
--   an alternative to the Soundex algorithm for french language.
--   
--   <h1>Characters of the Sonnex code</h1>
--   
--   The Sonnex code contains the following characters:
--   
--   <ul>
--   <li>1 ← un, ein, in, ain</li>
--   <li>2 ← en, an</li>
--   <li>3 ← on</li>
--   <li>a ← a, à, â</li>
--   <li>b ← b, bb</li>
--   <li>C ← ch</li>
--   <li>d ← d, dd</li>
--   <li>e ← e, eu</li>
--   <li>E ← ê, é, è, ai, ei</li>
--   <li>f ← f, ff, ph</li>
--   <li>g ← gu</li>
--   <li>i ← î, i, ille</li>
--   <li>j ← j, ge</li>
--   <li>k ← k, c, qu, ck</li>
--   <li>l ← l, ll</li>
--   <li>m ← m, mm</li>
--   <li>n ← n, nn</li>
--   <li>o ← o, ô</li>
--   <li>p ← p, pp</li>
--   <li>r ← r, rr</li>
--   <li>s ← s, ss</li>
--   <li>t ← t, tt</li>
--   <li>u ← u, ù, û</li>
--   <li>v ← v, w</li>
--   <li>z ← z, s</li>
--   <li>U ← ou</li>
--   </ul>
--   
--   The apostroph is ignored, every other character not understood by the
--   Sonnex algorthim is copied without changes.
--   
--   <h1>Examples</h1>
--   
--   Here are a few examples of sonnex results:
--   
--   <pre>
--   &gt;&gt;&gt; sonnex "champ"
--   C2
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; sonnex "chant"
--   C2
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; sonnex "boulot"
--   bUlo
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; sonnex "bouleau"
--   bUlo
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; sonnex "compte"
--   k3t
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; sonnex "comte"
--   k3t
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; sonnex "conte"
--   k3t
--   </pre>
module Text.Sonnex

-- | Compute a Sonnex code for a french word.
--   
--   The string must contain only one word. Each character should be
--   considered as being vocal, not silent
--   
--   <pre>
--   length (sonnex w) &lt;= length w
--   </pre>
sonnex :: String -> String

-- | Compute a Sonnex code for a french phrase.
--   
--   It applies the sonnex function to each word in the phrase. Since it
--   uses the words/unwords couple, superfluous space character are
--   removed.
sonnexPhrase :: String -> String
