-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Fast computation of Fibonacci numbers.
--   
--   Fast computation of Fibonacci numbers. Use version <tt>0.1.*</tt> if
--   you prefer the Fibonacci sequence to start with one instead of zero.
--   Version <tt>0.2.*</tt> adds correct handling of negative arguments and
--   changes the implementation to satisfy <tt>fib 0 = 0</tt>. See
--   <a>http://en.wikipedia.org/wiki/Fibonacci_number#Matrix_form</a> for a
--   description of the employed method.
@package fibonacci
@version 0.2.0.1


-- | Fast computation of Fibonacci numbers. Use version <tt>0.1.*</tt> if
--   you prefer the Fibonacci sequence to start with one instead of zero.
--   Version <tt>0.2.*</tt> adds correct handling of negative arguments and
--   changes the implementation to satisfy <tt>fib 0 = 0</tt>.
--   
--   See <a>http://en.wikipedia.org/wiki/Fibonacci_number#Matrix_form</a>
--   for a description of the employed method.
module Data.Numbers.Fibonacci

-- | Computes Fibonacci numbers. Yields the same results as
--   
--   <pre>
--   fib 0         = 0
--   fib 1         = 1
--   fib n | n &gt; 1 = fib (n-2) + fib (n-1)
--         | n &lt; 0 = (-1)^(1-n) * fib (-n)
--   </pre>
--   
--   but more efficiently.
--   
--   Examples:
--   
--   <pre>
--   ghci&gt; map fib [0..9]
--   [0,1,1,2,3,5,8,13,21,34]
--   ghci&gt; map (fib . negate) [0..9]
--   [0,1,-1,2,-3,5,-8,13,-21,34]
--   ghci&gt; length . show $ fib 10000000
--   2089877
--   </pre>
fib :: (Integral int, Num num) => int -> num
