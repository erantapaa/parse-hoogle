-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Request and Response types for Eval.so's API
--   
--   You are not likely to find this useful unless you are building a
--   library for accessing Eval.so's new API, or working on the
--   <a>Cruncher</a> backend.
@package cruncher-types
@version 1.1.0


-- | Handles incoming requests (usually from our Yesod frontend, but could
--   be from anywhere).
module Evalso.Cruncher.Request

-- | Describes an incoming request to the system. Proper use of this will
--   normally lead to some kind of a <a>IO</a> <tt>SandboxResult</tt>.
data Request
Request :: String -> Text -> Maybe (Map String Text) -> Bool -> Maybe Text -> Request
language :: Request -> String
code :: Request -> Text
inputFiles :: Request -> Maybe (Map String Text)
compileOnly :: Request -> Bool
stdin :: Request -> Maybe Text
instance FromJSON Request
instance Eq Request
instance Show Request


-- | Contains data types/constructors for individual sandbox runs. For
--   example, the compile step will produce a <a>SandboxResult</a>, which
--   is defined in this module. The execution/evaluation step will also
--   produce a <a>SandboxResult</a>.
module Evalso.Cruncher.SandboxResult

-- | Describes the result we get back after performing an evaluation (or
--   compilation). This is almost always wrapped in <a>IO</a>.
data SandboxResult
SandboxResult :: Text -> Text -> Int -> Int -> Map String Text -> SandboxResult

-- | Standard output stream
stdout :: SandboxResult -> Text

-- | Standard error stream
stderr :: SandboxResult -> Text

-- | How long the process took
wallTime :: SandboxResult -> Int

-- | The exit code returned by the process
exitCode :: SandboxResult -> Int

-- | Base64-encoded output files
outputFiles :: SandboxResult -> Map String Text
instance FromJSON SandboxResult
instance ToJSON SandboxResult
instance Eq SandboxResult
instance Show SandboxResult


-- | The highest level of a response that Cruncher deals with. Contains
--   only the final result of a sandbox run, including compilation and
--   execution.
module Evalso.Cruncher.FinalResult

-- | The final result for a given request.
--   
--   This data type also handles error handling, in the form of types.
data FinalResult
FinalResult :: Maybe SandboxResult -> Maybe SandboxResult -> FinalResult

-- | The compilation result, if any
compile :: FinalResult -> Maybe SandboxResult

-- | The execution result, if any
run :: FinalResult -> Maybe SandboxResult
NoSuchLanguage :: FinalResult
SELinuxNotEnforcing :: FinalResult
instance ToJSON FinalResult
instance Eq FinalResult
instance Show FinalResult
