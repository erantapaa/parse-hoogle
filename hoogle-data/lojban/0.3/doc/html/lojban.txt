-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Useful utilities for the Lojban language
--   
--   Some utilities such as querying Jbovlaste XML exports for gismu,
--   gloss, rafsi, etc. and lujvo-decomposition. More stuff to come.
@package lojban
@version 0.3

module Language.Lojban.Camxes.Parse
parse :: String -> Either ParseError LojbanTree
type LojbanTree = Tree Expr
type Expr = Either Type Value
type Type = String
type Value = String

module Language.Lojban.CLL

-- | Queries the CLL page on jbotcan.org using Google.
cll :: String -> IO (Maybe [(String, String)])

module Language.Lojban.Lujvo

-- | The rafsis of a lujvo. (Empty list for invalid parse.)
rafsis :: String -> [String]

-- | Fix clusters in lojbanic words, consonants, vowels, hyphens, etc.
--   Might not be accurate sometimes.
fixClusters :: String -> String
instance Show Rafsi

module Language.Lojban.Jbovlaste
data JboDB

-- | An opaque data type on which accessors can be used.
data JboValsi
data JboValsiType
CmavoType :: JboValsiType
GismuType :: JboValsiType
LujvoType :: JboValsiType
Fu'ivlaType :: JboValsiType

-- | Generate a database from the Jbovlaste XML export file.
genDB :: FilePath -> IO JboDB

-- | Generate a database from the Jbovlaste XML export.
genDBString :: String -> JboDB

-- | Read in a database from file.
readDB :: FilePath -> IO JboDB

-- | Find valsi(s) by a predicate.
findValsi :: JboDB -> (JboValsi -> Bool) -> Maybe JboValsi

-- | Filter valsi(s) by a predicate.
filterValsi :: JboDB -> (JboValsi -> Bool) -> [JboValsi]

-- | Find valsi(s) by word or gloss or rafsi.
valsi :: JboDB -> String -> [JboValsi]

-- | Find valsi(s) by definition substring.
defSub :: JboDB -> String -> [JboValsi]

-- | Find valsi(s) by definition wild card string.
defWildCard :: JboDB -> String -> [JboValsi]

-- | Get the word of a valsi.
valsiWord :: JboValsi -> String

-- | Get the gloss(es) of a valsi.
valsiGloss :: JboValsi -> [String]

-- | Get the definition of a valsi.
valsiDef :: JboValsi -> String

-- | Get any rafsis of a valsi.
valsiRafsis :: JboValsi -> [String]

-- | Get the notes of a valsi.
valsiNotes :: JboValsi -> String

-- | Get the selma'o of a cmavo (Nothing for non-cmavo).
valsiSelma'o :: JboValsi -> Maybe String

-- | Get the selrafsis of a lujvo (empty list for non-lujvo).
valsiSelrafsis :: JboValsi -> [JboValsi]

-- | Get the type of a valsi.
valsiType :: JboValsi -> JboValsiType
showValsi :: JboValsi -> String
showType :: JboValsi -> [Char]
instance Show JboValsi
instance Read JboValsi
instance Eq JboValsiType
instance Show JboValsiType
instance Read JboValsiType
instance Ord JboValsiType
instance Read JboEntry
instance Show JboEntry
instance Read JboDB
instance Show JboDB
instance Ord JboValsi
instance Eq JboValsi

module Language.Lojban.Util

-- | Return the selrafsis of a lujvo (string).
lujvoSelrafsis :: JboDB -> String -> Maybe [JboValsi]

-- | Returns all lujvos which contain the given selrafsi.
lujvosSelrafsi :: JboDB -> String -> [JboValsi]

-- | Returns all lujvos which contain any of the given selrafsis.
lujvosSelrafsis :: JboDB -> [String] -> [JboValsi]

-- | Returns all lujvos which contain all of the given selrafsis (in
--   order).
lujvosSelrafsis' :: JboDB -> [String] -> [JboValsi]

-- | Find a gismu valsi matching the given word.
findGismu :: JboDB -> String -> Maybe JboValsi

-- | Find a cmavo valsi matching the given word.
findCmavo :: JboDB -> String -> Maybe JboValsi

-- | Find a selrafsi matching the given rafsi.
findSelrafsi :: JboDB -> String -> Maybe JboValsi

-- | Returns all cmavo which belong to the given selma'o.
filterSelma'o :: JboDB -> String -> [JboValsi]

-- | Find valsi(s) by gloss, more detailed.
valsiByGloss :: JboDB -> String -> [JboValsi]

-- | Shows the grammar of a lojban utterance using jbofihe.
grammar :: String -> IO (Either String (String, String))

-- | Translates a lojban utterance to English using jbofihe.
translate :: String -> IO (Either String (String, String))

-- | Shows the type of a word using vlatai.
wordType :: String -> IO (Either String String)

-- | Tries to construct and rate lujvo from selfrasis, using jvocuhadju.
lujvoAndRate :: [String] -> IO (Either String [(Int, String)])

-- | Returns information about a selma'o, using mahotic.
selma'oInfo :: String -> IO (Either String String)

-- | Just checks with jbofihe if some lojban is grammatically valid.
isValidLojban :: String -> IO Bool

module Language.Lojban.Jbobau

-- | Creates a new jbobau handle.
newJbobau :: FilePath -> IO (Either String Jbobau)

-- | Returns a random, grammatical, lojbanic sentence.
jbobauLine :: Jbobau -> IO String
data Jbobau

module Language.Lojban.Mlismu

-- | Create a new mlismu handle.
newMlismu :: FilePath -> IO (Either String Mlismu)

-- | Is a fatci valid?
isValidFatci :: String -> IO Bool

-- | Add a new fatci.
addFatci :: Mlismu -> String -> IO Bool

-- | Add any valid fatci from a set of utterances.
readFatci :: Mlismu -> String -> IO ()

-- | Return a random bridi for a (maybe) given selbri.
randomBridi :: Mlismu -> Maybe String -> IO (Maybe String)

-- | Try to return a random bridi for one of the given selbri.
randomBridiRel :: Mlismu -> [String] -> IO (Maybe String)
data Mlismu
