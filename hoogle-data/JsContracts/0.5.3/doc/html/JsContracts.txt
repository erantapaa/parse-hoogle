-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Design-by-contract for JavaScript
--   
--   Design-by-contract for JavaScript
@package JsContracts
@version 0.5.3

module BrownPLT.JavaScript.Contracts.Interface
data Contract
FlatContract :: SourcePos -> ParsedExpression -> Contract
NamedContract :: SourcePos -> String -> Contract
FunctionContract :: SourcePos -> [Contract] -> (Maybe Contract) -> Contract -> Contract
ConstructorContract :: SourcePos -> String -> [Contract] -> Contract
FixedArrayContract :: SourcePos -> [Contract] -> Contract
ArrayContract :: SourcePos -> Contract -> Contract
ObjectContract :: SourcePos -> [(String, Contract)] -> Contract
contractPos :: Contract -> SourcePos
data InterfaceItem
InterfaceExport :: String -> SourcePos -> Contract -> InterfaceItem
InterfaceAlias :: String -> Contract -> InterfaceItem
InterfaceStatement :: ParsedStatement -> InterfaceItem
interfaceStatement :: InterfaceItem -> ParsedStatement

-- | always an object contract
InterfaceInstance :: String -> SourcePos -> Contract -> InterfaceItem

module BrownPLT.JavaScript.Contracts
data Contract
FlatContract :: SourcePos -> ParsedExpression -> Contract
NamedContract :: SourcePos -> String -> Contract
FunctionContract :: SourcePos -> [Contract] -> (Maybe Contract) -> Contract -> Contract
ConstructorContract :: SourcePos -> String -> [Contract] -> Contract
FixedArrayContract :: SourcePos -> [Contract] -> Contract
ArrayContract :: SourcePos -> Contract -> Contract
ObjectContract :: SourcePos -> [(String, Contract)] -> Contract
data InterfaceItem
InterfaceExport :: String -> SourcePos -> Contract -> InterfaceItem
InterfaceAlias :: String -> Contract -> InterfaceItem
InterfaceStatement :: ParsedStatement -> InterfaceItem
interfaceStatement :: InterfaceItem -> ParsedStatement

-- | always an object contract
InterfaceInstance :: String -> SourcePos -> Contract -> InterfaceItem
compile :: [ParsedStatement] -> [InterfaceItem] -> [ParsedStatement] -> ParsedStatement
compileFormatted :: String -> String -> String -> Bool -> [InterfaceItem] -> String
compileRelease :: String -> String -> String -> Bool -> [InterfaceItem] -> Maybe String -> String
parseInterface :: String -> IO [InterfaceItem]
getContractLibraryPath :: IO FilePath
