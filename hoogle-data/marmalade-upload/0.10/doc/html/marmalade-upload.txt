-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Upload packages to Marmalade
--   
--   Upload Emacs packages to the <a>Marmalade</a> ELPA archive.
@package marmalade-upload
@version 0.10


-- | Access to the API of Marmalade
module Web.Marmalade

-- | The Marmalade monad.
--   
--   This monad provides access to the Marmalade API.
data Marmalade a

-- | <tt><a>runMarmalade</a> userAgent auth actions</tt> runs
--   <tt>actions</tt>.
--   
--   <tt>userAgent</tt> is sent as <tt>User-Agent</tt> header to Marmalade,
--   and <tt>auth</tt> is the authentication information.
--   
--   Marmalade requires a token to access most of its API, however clients
--   can <a>login</a> with a username and a password to obtain their token.
runMarmalade :: Text -> Auth -> Marmalade a -> IO a

-- | <tt>'runMarmaladeWithManager userAgent auth manager actions'</tt> runs
--   <tt>actions</tt> with the given connection <tt>manager</tt>.
--   
--   Like <tt><a>runMarmalade</a></tt>, except that it lets you use your
--   own connection manager.
runMarmaladeWithManager :: Text -> Auth -> Manager -> Marmalade a -> IO a

-- | Errors thrown by Marmalade.
data MarmaladeError

-- | An invalid response from Marmalade, with a status and probably an
--   error message from Marmalade.
MarmaladeInvalidResponseStatus :: Status -> Text -> MarmaladeError

-- | Invalid response body
MarmaladeInvalidResponseBody :: ByteString -> MarmaladeError

-- | A bad request error from Marmalade.
--   
--   Marmalade raises this error for failed logins and for uploads of
--   invalid packages (e.g. files without a version header)
MarmaladeBadRequest :: Text -> MarmaladeError

-- | An invalid package file, with a corresponding error message.
MarmaladeInvalidPackage :: FilePath -> Text -> MarmaladeError

-- | The name of a user
newtype Username
Username :: Text -> Username

-- | An authentication token.
newtype Token
Token :: Text -> Token

-- | Authentication information for Marmalade.
data Auth

-- | Authentication with a username and an action that returns a password
--   to use
BasicAuth :: Username -> (Marmalade Text) -> Auth

-- | Authentication with a username and a login token
TokenAuth :: Username -> Token -> Auth

-- | <tt><a>login</a></tt> logs in to Marmalade to obtain the client's
--   access token.
--   
--   If the monad already uses token authentication this function is a
--   no-op and merely returns the stored token. Otherwise it sends a login
--   request to Marmalade to obtain the token and stores the token in the
--   monad.
login :: Marmalade (Username, Token)
newtype Message
Message :: Text -> Message
messageContents :: Message -> Text

-- | The result of an upload.
newtype Upload
Upload :: Text -> Upload

-- | The message from Marmalade
uploadMessage :: Upload -> Text

-- | <tt><a>uploadPackage</a> package</tt> uploads a <tt>package</tt> file
--   to Marmalade.
--   
--   Return the result of the upload, or throw an error if Marmalade
--   refused to accept the upload.
uploadPackage :: FilePath -> Marmalade Upload
instance Typeable MarmaladeError
instance Show Username
instance Eq Username
instance Show Token
instance Eq Token
instance Applicative Marmalade
instance Functor Marmalade
instance Monad Marmalade
instance MonadIO Marmalade
instance MonadThrow Marmalade
instance MonadCatch Marmalade
instance MonadState MarmaladeState Marmalade
instance FromJSON Upload
instance FromJSON Message
instance FromJSON Token
instance Exception MarmaladeError
instance Show MarmaladeError
