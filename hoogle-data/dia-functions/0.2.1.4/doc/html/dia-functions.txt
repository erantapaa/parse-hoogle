-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | An EDSL for teaching Haskell with diagrams - functions
--   
@package dia-functions
@version 0.2.1.4


-- | Display function graphs and arcs
module Graphics.Diagrams.FunctionGraphs

-- | The coordinate system.
coords :: Point -> Point -> Diagram

-- | Draw the given function graph with gray coordinate system.
withCoords :: Point -> Point -> Diagram -> Diagram

-- | Display a function defined on integer values.
displayDiscreteFun :: (Integral a, Real b) => Point -> Point -> (a -> b) -> Diagram

-- | Display a continuous function.
displayFun :: (RealFrac a, Real b) => Point -> Point -> (a -> b) -> Diagram

-- | Display an arc given by a function.
displayArc :: (Fractional a, Real b, Real c) => Point -> Point -> (Double, Double) -> (a -> (b, c)) -> Diagram

-- | Join points to form a continuous path with singularities.
joinPoints :: [Point] -> Diagram

module Graphics.Diagrams.Colors
toRGB :: String -> Maybe (Double, Double, Double)
colors :: [String]

-- | SVG color codes
colorMap :: Map String (Double, Double, Double)


-- | Strict evaluation of diagrams with time and size limit
module Graphics.Diagrams.Escape

-- | Strict evaluation of diagrams with time and size limit
escapeDiagram :: TimeLimit -> SizeLimit -> Diagram -> IO Diagram

-- | Error message extraction and numbering
numberErrors :: Diagram -> (Diagram, [(String, String)])


-- | Diagrams SVG backend
module Graphics.Diagrams.SVG
render :: Double -> Point -> Point -> TimeLimit -> SizeLimit -> String -> Diagram -> IO (Html, [(String, String)])
