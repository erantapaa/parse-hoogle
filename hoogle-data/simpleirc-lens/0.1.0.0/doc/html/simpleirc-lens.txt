-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Lenses for simpleirc types
--   
--   Provides lenses for types in the <a>simpleirc</a> package without
--   depending on <a>lens</a>.
@package simpleirc-lens
@version 0.1.0.0


-- | This module provides lenses for types in
--   <a>Network.SimpleIRC.Messages</a>.
module Network.SimpleIRC.Messages.Lens
nick :: Functor f => (Maybe ByteString -> f (Maybe ByteString)) -> IrcMessage -> f IrcMessage
user :: Functor f => (Maybe ByteString -> f (Maybe ByteString)) -> IrcMessage -> f IrcMessage
host :: Functor f => (Maybe ByteString -> f (Maybe ByteString)) -> IrcMessage -> f IrcMessage
server :: Functor f => (Maybe ByteString -> f (Maybe ByteString)) -> IrcMessage -> f IrcMessage
code :: Functor f => (ByteString -> f ByteString) -> IrcMessage -> f IrcMessage
msg :: Functor f => (ByteString -> f ByteString) -> IrcMessage -> f IrcMessage
chan :: Functor f => (Maybe ByteString -> f (Maybe ByteString)) -> IrcMessage -> f IrcMessage
origin :: Functor f => (Maybe ByteString -> f (Maybe ByteString)) -> IrcMessage -> f IrcMessage
other :: Functor f => (Maybe [ByteString] -> f (Maybe [ByteString])) -> IrcMessage -> f IrcMessage
raw :: Functor f => (ByteString -> f ByteString) -> IrcMessage -> f IrcMessage


-- | This module provides lenses for types in
--   <a>Network.SimpleIRC.Core</a>.
module Network.SimpleIRC.Core.Lens
addr :: Functor f => (String -> f String) -> IrcConfig -> f IrcConfig
port :: Functor f => (Int -> f Int) -> IrcConfig -> f IrcConfig
nick :: Functor f => (String -> f String) -> IrcConfig -> f IrcConfig
pass :: Functor f => (Maybe String -> f (Maybe String)) -> IrcConfig -> f IrcConfig
username :: Functor f => (String -> f String) -> IrcConfig -> f IrcConfig
realname :: Functor f => (String -> f String) -> IrcConfig -> f IrcConfig
channels :: Functor f => ([String] -> f [String]) -> IrcConfig -> f IrcConfig
events :: Functor f => ([IrcEvent] -> f [IrcEvent]) -> IrcConfig -> f IrcConfig
ctcpVersion :: Functor f => (String -> f String) -> IrcConfig -> f IrcConfig
ctcpTime :: Functor f => (IO String -> f (IO String)) -> IrcConfig -> f IrcConfig
ctcpPingTimeoutInterval :: Functor f => (Int -> f Int) -> IrcConfig -> f IrcConfig
