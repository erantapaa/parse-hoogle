-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A command line program for managing the bounds/versions of the dependencies in a cabal file.
--   
@package cabal-bounds
@version 0.9.4

module CabalBounds.VersionComp

-- | The component of a version number A.B.C -&gt; Major1.Major2.Minor
data VersionComp
Major1 :: VersionComp
Major2 :: VersionComp
Minor :: VersionComp
defaultLowerComp :: VersionComp
defaultUpperComp :: VersionComp
instance Typeable VersionComp
instance Data VersionComp
instance Eq VersionComp
instance Show VersionComp

module CabalBounds.Args
data Args
Drop :: Bool -> Bool -> [String] -> [String] -> [String] -> [String] -> [String] -> FilePath -> FilePath -> Args
upper :: Args -> Bool
library :: Args -> Bool
executable :: Args -> [String]
testSuite :: Args -> [String]
benchmark :: Args -> [String]
only :: Args -> [String]
ignore :: Args -> [String]
output :: Args -> FilePath
cabalFile :: Args -> FilePath
Update :: Bool -> Bool -> Maybe VersionComp -> Maybe VersionComp -> Bool -> [String] -> [String] -> [String] -> [String] -> [String] -> Bool -> FilePath -> FilePath -> String -> FilePath -> [FilePath] -> Args
lower :: Args -> Bool
upper :: Args -> Bool
lowerComp :: Args -> Maybe VersionComp
upperComp :: Args -> Maybe VersionComp
library :: Args -> Bool
executable :: Args -> [String]
testSuite :: Args -> [String]
benchmark :: Args -> [String]
only :: Args -> [String]
ignore :: Args -> [String]
missing :: Args -> Bool
output :: Args -> FilePath
fromFile :: Args -> FilePath
haskellPlatform :: Args -> String
cabalFile :: Args -> FilePath
setupConfigFile :: Args -> [FilePath]
Dump :: String -> [FilePath] -> Args
output :: Args -> String
cabalFiles :: Args -> [FilePath]
get :: IO Args
outputFile :: Args -> FilePath
defaultDrop :: Args
defaultUpdate :: Args
defaultDump :: Args
instance Typeable Args
instance Data Args
instance Show Args
instance Eq Args

module CabalBounds.Main
cabalBounds :: Args -> IO (Maybe Error)
instance Show ConfigStateFileErrorType
