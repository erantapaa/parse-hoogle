-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Specify time intervals in different units (secs, mins, hours, etc.)
--   
--   A sane and simple API that sits on top of the time library; it allows
--   the creation of time intervals and provides to manipulate time using
--   them.
@package tiempo
@version 0.0.1.0

module Tiempo
data TimeInterval

-- | converts the supplied <tt>TimeInterval</tt> to microseconds
toMicroSeconds :: TimeInterval -> Int

-- | converts the supplied <tt>TimeInterval</tt> to milliseconds
toMilliSeconds :: TimeInterval -> Double

-- | converts the supplied <tt>TimeInterval</tt> to seconds
toSeconds :: TimeInterval -> Double

-- | converts the supplied <tt>TimeInterval</tt> to minutes
toMinutes :: TimeInterval -> Double

-- | converts the supplied <tt>TimeInterval</tt> to hours
toHours :: TimeInterval -> Double

-- | converts the supplied <tt>TimeInterval</tt> to days
toDays :: TimeInterval -> Double

-- | converts the supplied <tt>TimeInterval</tt> to NominalDiffTime
toNominalDiffTime :: TimeInterval -> NominalDiffTime

-- | Adds <tt>TimeInterval</tt> to <tt>UTCTime</tt> returning a
--   <tt>UTCTime</tt> in the future
fromTime :: TimeInterval -> UTCTime -> UTCTime

-- | Adds <tt>TimeInterval</tt> to <tt>getCurrentTime</tt> returning a
--   <tt>UTCTime</tt> in the future
fromNow :: TimeInterval -> IO UTCTime

-- | Substracts <tt>TimeInterval</tt> from <tt>UTCTime</tt> returning a
--   <tt>UTCTime</tt> in the past
agoTime :: TimeInterval -> UTCTime -> UTCTime

-- | Substracts <tt>TimeInterval</tt> from <tt>getCurrentTime</tt>
--   returning a <tt>UTCTime</tt> in the past
ago :: TimeInterval -> IO UTCTime

-- | given a number, produces a <tt>TimeInterval</tt> of microseconds
microSeconds :: Int -> TimeInterval

-- | given a number, produces a <tt>TimeInterval</tt> of milliseconds
milliSeconds :: Int -> TimeInterval

-- | given a number, produces a <tt>TimeInterval</tt> of seconds
seconds :: Int -> TimeInterval

-- | given a number, produces a <tt>TimeInterval</tt> of minutes
minutes :: Int -> TimeInterval

-- | given a number, produces a <tt>TimeInterval</tt> of hours
hours :: Int -> TimeInterval

-- | given a number, produces a <tt>TimeInterval</tt> of days
days :: Int -> TimeInterval
instance Typeable TimeUnit
instance Typeable TimeInterval
instance Eq TimeUnit
instance Show TimeUnit
instance Generic TimeUnit
instance Eq TimeInterval
instance Show TimeInterval
instance Generic TimeInterval
instance Datatype D1TimeUnit
instance Constructor C1_0TimeUnit
instance Constructor C1_1TimeUnit
instance Constructor C1_2TimeUnit
instance Constructor C1_3TimeUnit
instance Constructor C1_4TimeUnit
instance Constructor C1_5TimeUnit
instance Datatype D1TimeInterval
instance Constructor C1_0TimeInterval
instance NFData TimeInterval
instance NFData TimeUnit

module Tiempo.Concurrent

-- | Like <tt>Control.Concurrent.threadDelay</tt> but accepts a
--   <tt>TimeInterval</tt> as an argument instead of an Int
threadDelay :: TimeInterval -> IO ()

-- | Like <tt>System.Timeout</tt> but accepts a <tt>TimeInterval</tt> as an
--   argument instead of an Int
timeout :: TimeInterval -> IO a -> IO (Maybe a)
