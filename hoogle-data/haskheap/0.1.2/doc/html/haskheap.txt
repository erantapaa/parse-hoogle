-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Haskell bindings to refheap.
--   
--   Haskell bindings to refheap.
@package haskheap
@version 0.1.2


-- | A library for interfacing with the refheap
--   (https:<i></i>www.refheap.com) API.
module Network.Haskheap

-- | Result of as successful request (either empty or a paste).
data Success
Paste :: Integer -> Maybe UTCTime -> PasteID -> Language -> Bool -> Maybe URI -> Maybe String -> Contents -> Success

-- | Lines in the paste.
getLines :: Success -> Integer

-- | Time the paste was created.
getDate :: Success -> Maybe UTCTime

-- | ID of the paste (may be numeric or hash or sorts).
getID :: Success -> PasteID

-- | The language of the paste.
getLanguage :: Success -> Language

-- | Whether or not the paste is Private. True is yes.
getPrivate :: Success -> Bool

-- | URL of the paste.
getURL :: Success -> Maybe URI

-- | User who created the paste. Nothing indicates anonymous.
getUser :: Success -> Maybe String

-- | Body of the paste.
getBody :: Success -> Contents

-- | A string was returned by the API that can't be represented as a paste.
Line :: String -> Success

-- | Operation was successful, but response is empty.
Empty :: Success

-- | A simple error box so I can parse refheap error messages into
--   something useful.
data Error
Error :: String -> Error

-- | Get a paste from refheap. Will return IO Nothing if the paste doesn't
--   exist.
getPaste :: PasteID -> IO (Either Error Success)

-- | Create a new paste.
createPaste :: Contents -> Bool -> Language -> Maybe Auth -> IO (Either Error Success)

-- | Delete a paste. If it fails for some reason, will return the error
--   message from refheap's API wrapped in Maybe, otherwise Nothing.
deletePaste :: PasteID -> Auth -> IO (Either Error Success)

-- | Fork a paste.
forkPaste :: PasteID -> Auth -> IO (Either Error Success)

-- | Edit a paste.
editPaste :: PasteID -> Contents -> Bool -> Language -> Auth -> IO (Either Error Success)

-- | Get the highlighted body of a paste. This does not include theme css,
--   just raw HTML.
getHighlightedPaste :: PasteID -> IO (Either Error Success)
instance Show Success
instance Show Error
instance FromJSON Success
instance FromJSON Error
