-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Amazon Direct Connect SDK.
--   
@package amazonka-directconnect
@version 0.3.6

module Network.AWS.DirectConnect.Types

-- | Version <tt>2012-10-25</tt> of the Amazon Direct Connect service.
data DirectConnect
data JSONError :: *
data VirtualInterface

-- | <a>VirtualInterface</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>viAmazonAddress</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>viAsn</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>viAuthKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>viConnectionId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>viCustomerAddress</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>viCustomerRouterConfig</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>viLocation</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>viOwnerAccount</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>viRouteFilterPrefixes</a> <tt>::</tt>
--   [<a>RouteFilterPrefix</a>]</li>
--   <li><a>viVirtualGatewayId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>viVirtualInterfaceId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>viVirtualInterfaceName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>viVirtualInterfaceState</a> <tt>::</tt> <a>Maybe</a>
--   <a>VirtualInterfaceState</a></li>
--   <li><a>viVirtualInterfaceType</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>viVlan</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   </ul>
virtualInterface :: VirtualInterface
viAmazonAddress :: Lens' VirtualInterface (Maybe Text)
viAsn :: Lens' VirtualInterface (Maybe Int)
viAuthKey :: Lens' VirtualInterface (Maybe Text)
viConnectionId :: Lens' VirtualInterface (Maybe Text)
viCustomerAddress :: Lens' VirtualInterface (Maybe Text)

-- | Information for generating the customer router configuration.
viCustomerRouterConfig :: Lens' VirtualInterface (Maybe Text)
viLocation :: Lens' VirtualInterface (Maybe Text)
viOwnerAccount :: Lens' VirtualInterface (Maybe Text)
viRouteFilterPrefixes :: Lens' VirtualInterface [RouteFilterPrefix]
viVirtualGatewayId :: Lens' VirtualInterface (Maybe Text)
viVirtualInterfaceId :: Lens' VirtualInterface (Maybe Text)
viVirtualInterfaceName :: Lens' VirtualInterface (Maybe Text)
viVirtualInterfaceState :: Lens' VirtualInterface (Maybe VirtualInterfaceState)
viVirtualInterfaceType :: Lens' VirtualInterface (Maybe Text)
viVlan :: Lens' VirtualInterface (Maybe Int)
data Location

-- | <a>Location</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lLocationCode</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lLocationName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
location :: Location

-- | The code used to indicate the AWS Direct Connect location.
lLocationCode :: Lens' Location (Maybe Text)

-- | The name of the AWS Direct Connect location. The name includes the
--   colocation partner name and the physical site of the lit building.
lLocationName :: Lens' Location (Maybe Text)
data Connections

-- | <a>Connections</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cConnections</a> <tt>::</tt> [<a>Connection</a>]</li>
--   </ul>
connections :: Connections

-- | A list of connections.
cConnections :: Lens' Connections [Connection]
data NewPrivateVirtualInterfaceAllocation

-- | <a>NewPrivateVirtualInterfaceAllocation</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>npviaAmazonAddress</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>npviaAsn</a> <tt>::</tt> <a>Int</a></li>
--   <li><a>npviaAuthKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>npviaCustomerAddress</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>npviaVirtualInterfaceName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>npviaVlan</a> <tt>::</tt> <a>Int</a></li>
--   </ul>
newPrivateVirtualInterfaceAllocation :: Text -> Int -> Int -> NewPrivateVirtualInterfaceAllocation
npviaAmazonAddress :: Lens' NewPrivateVirtualInterfaceAllocation (Maybe Text)
npviaAsn :: Lens' NewPrivateVirtualInterfaceAllocation Int
npviaAuthKey :: Lens' NewPrivateVirtualInterfaceAllocation (Maybe Text)
npviaCustomerAddress :: Lens' NewPrivateVirtualInterfaceAllocation (Maybe Text)
npviaVirtualInterfaceName :: Lens' NewPrivateVirtualInterfaceAllocation Text
npviaVlan :: Lens' NewPrivateVirtualInterfaceAllocation Int
data VirtualInterfaceState

-- | available
Available :: VirtualInterfaceState

-- | confirming
Confirming :: VirtualInterfaceState

-- | deleted
Deleted :: VirtualInterfaceState

-- | deleting
Deleting :: VirtualInterfaceState

-- | pending
Pending :: VirtualInterfaceState

-- | rejected
Rejected :: VirtualInterfaceState

-- | verifying
Verifying :: VirtualInterfaceState
data Connection

-- | <a>Connection</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cBandwidth</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cConnectionId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cConnectionName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cConnectionState</a> <tt>::</tt> <a>Maybe</a>
--   <a>ConnectionState</a></li>
--   <li><a>cLocation</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cOwnerAccount</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cPartnerName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cRegion</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cVlan</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   </ul>
connection :: Connection

-- | Bandwidth of the connection.
--   
--   Example: 1Gbps (for regular connections), or 500Mbps (for hosted
--   connections)
--   
--   Default: None
cBandwidth :: Lens' Connection (Maybe Text)
cConnectionId :: Lens' Connection (Maybe Text)
cConnectionName :: Lens' Connection (Maybe Text)
cConnectionState :: Lens' Connection (Maybe ConnectionState)
cLocation :: Lens' Connection (Maybe Text)
cOwnerAccount :: Lens' Connection (Maybe Text)
cPartnerName :: Lens' Connection (Maybe Text)
cRegion :: Lens' Connection (Maybe Text)
cVlan :: Lens' Connection (Maybe Int)
data NewPublicVirtualInterface

-- | <a>NewPublicVirtualInterface</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>npviAmazonAddress</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>npviAsn</a> <tt>::</tt> <a>Int</a></li>
--   <li><a>npviAuthKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>npviCustomerAddress</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>npviRouteFilterPrefixes</a> <tt>::</tt>
--   [<a>RouteFilterPrefix</a>]</li>
--   <li><a>npviVirtualInterfaceName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>npviVlan</a> <tt>::</tt> <a>Int</a></li>
--   </ul>
newPublicVirtualInterface :: Text -> Int -> Int -> Text -> Text -> NewPublicVirtualInterface
npviAmazonAddress :: Lens' NewPublicVirtualInterface Text
npviAsn :: Lens' NewPublicVirtualInterface Int
npviAuthKey :: Lens' NewPublicVirtualInterface (Maybe Text)
npviCustomerAddress :: Lens' NewPublicVirtualInterface Text
npviRouteFilterPrefixes :: Lens' NewPublicVirtualInterface [RouteFilterPrefix]
npviVirtualInterfaceName :: Lens' NewPublicVirtualInterface Text
npviVlan :: Lens' NewPublicVirtualInterface Int
data Interconnect

-- | <a>Interconnect</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>iBandwidth</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iInterconnectId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iInterconnectName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iInterconnectState</a> <tt>::</tt> <a>Maybe</a>
--   <a>InterconnectState</a></li>
--   <li><a>iLocation</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iRegion</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
interconnect :: Interconnect
iBandwidth :: Lens' Interconnect (Maybe Text)
iInterconnectId :: Lens' Interconnect (Maybe Text)
iInterconnectName :: Lens' Interconnect (Maybe Text)
iInterconnectState :: Lens' Interconnect (Maybe InterconnectState)
iLocation :: Lens' Interconnect (Maybe Text)
iRegion :: Lens' Interconnect (Maybe Text)
data InterconnectState

-- | available
ISAvailable :: InterconnectState

-- | deleted
ISDeleted :: InterconnectState

-- | deleting
ISDeleting :: InterconnectState

-- | down
ISDown :: InterconnectState

-- | pending
ISPending :: InterconnectState

-- | requested
ISRequested :: InterconnectState
data NewPrivateVirtualInterface

-- | <a>NewPrivateVirtualInterface</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>npvi1AmazonAddress</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>npvi1Asn</a> <tt>::</tt> <a>Int</a></li>
--   <li><a>npvi1AuthKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>npvi1CustomerAddress</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>npvi1VirtualGatewayId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>npvi1VirtualInterfaceName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>npvi1Vlan</a> <tt>::</tt> <a>Int</a></li>
--   </ul>
newPrivateVirtualInterface :: Text -> Int -> Int -> Text -> NewPrivateVirtualInterface
npvi1AmazonAddress :: Lens' NewPrivateVirtualInterface (Maybe Text)
npvi1Asn :: Lens' NewPrivateVirtualInterface Int
npvi1AuthKey :: Lens' NewPrivateVirtualInterface (Maybe Text)
npvi1CustomerAddress :: Lens' NewPrivateVirtualInterface (Maybe Text)
npvi1VirtualGatewayId :: Lens' NewPrivateVirtualInterface Text
npvi1VirtualInterfaceName :: Lens' NewPrivateVirtualInterface Text
npvi1Vlan :: Lens' NewPrivateVirtualInterface Int
data NewPublicVirtualInterfaceAllocation

-- | <a>NewPublicVirtualInterfaceAllocation</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>npvia1AmazonAddress</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>npvia1Asn</a> <tt>::</tt> <a>Int</a></li>
--   <li><a>npvia1AuthKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>npvia1CustomerAddress</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>npvia1RouteFilterPrefixes</a> <tt>::</tt>
--   [<a>RouteFilterPrefix</a>]</li>
--   <li><a>npvia1VirtualInterfaceName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>npvia1Vlan</a> <tt>::</tt> <a>Int</a></li>
--   </ul>
newPublicVirtualInterfaceAllocation :: Text -> Int -> Int -> Text -> Text -> NewPublicVirtualInterfaceAllocation
npvia1AmazonAddress :: Lens' NewPublicVirtualInterfaceAllocation Text
npvia1Asn :: Lens' NewPublicVirtualInterfaceAllocation Int
npvia1AuthKey :: Lens' NewPublicVirtualInterfaceAllocation (Maybe Text)
npvia1CustomerAddress :: Lens' NewPublicVirtualInterfaceAllocation Text
npvia1RouteFilterPrefixes :: Lens' NewPublicVirtualInterfaceAllocation [RouteFilterPrefix]
npvia1VirtualInterfaceName :: Lens' NewPublicVirtualInterfaceAllocation Text
npvia1Vlan :: Lens' NewPublicVirtualInterfaceAllocation Int
data ConnectionState

-- | available
CSAvailable :: ConnectionState

-- | deleted
CSDeleted :: ConnectionState

-- | deleting
CSDeleting :: ConnectionState

-- | down
CSDown :: ConnectionState

-- | ordering
CSOrdering :: ConnectionState

-- | pending
CSPending :: ConnectionState

-- | rejected
CSRejected :: ConnectionState

-- | requested
CSRequested :: ConnectionState
data VirtualGateway

-- | <a>VirtualGateway</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vgVirtualGatewayId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>vgVirtualGatewayState</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
virtualGateway :: VirtualGateway
vgVirtualGatewayId :: Lens' VirtualGateway (Maybe Text)
vgVirtualGatewayState :: Lens' VirtualGateway (Maybe Text)
data RouteFilterPrefix

-- | <a>RouteFilterPrefix</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rfpCidr</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
routeFilterPrefix :: RouteFilterPrefix

-- | CIDR notation for the advertised route. Multiple routes are separated
--   by commas.
--   
--   Example: 10.10.10.0<i>24,10.10.11.0</i>24
rfpCidr :: Lens' RouteFilterPrefix (Maybe Text)
instance Eq Location
instance Ord Location
instance Read Location
instance Show Location
instance Eq NewPrivateVirtualInterfaceAllocation
instance Ord NewPrivateVirtualInterfaceAllocation
instance Read NewPrivateVirtualInterfaceAllocation
instance Show NewPrivateVirtualInterfaceAllocation
instance Eq VirtualInterfaceState
instance Ord VirtualInterfaceState
instance Read VirtualInterfaceState
instance Show VirtualInterfaceState
instance Generic VirtualInterfaceState
instance Enum VirtualInterfaceState
instance Eq InterconnectState
instance Ord InterconnectState
instance Read InterconnectState
instance Show InterconnectState
instance Generic InterconnectState
instance Enum InterconnectState
instance Eq Interconnect
instance Read Interconnect
instance Show Interconnect
instance Eq NewPrivateVirtualInterface
instance Ord NewPrivateVirtualInterface
instance Read NewPrivateVirtualInterface
instance Show NewPrivateVirtualInterface
instance Eq ConnectionState
instance Ord ConnectionState
instance Read ConnectionState
instance Show ConnectionState
instance Generic ConnectionState
instance Enum ConnectionState
instance Eq Connection
instance Read Connection
instance Show Connection
instance Eq Connections
instance Read Connections
instance Show Connections
instance Monoid Connections
instance Semigroup Connections
instance Eq VirtualGateway
instance Ord VirtualGateway
instance Read VirtualGateway
instance Show VirtualGateway
instance Eq RouteFilterPrefix
instance Ord RouteFilterPrefix
instance Read RouteFilterPrefix
instance Show RouteFilterPrefix
instance Monoid RouteFilterPrefix
instance Eq NewPublicVirtualInterfaceAllocation
instance Read NewPublicVirtualInterfaceAllocation
instance Show NewPublicVirtualInterfaceAllocation
instance Eq NewPublicVirtualInterface
instance Read NewPublicVirtualInterface
instance Show NewPublicVirtualInterface
instance Eq VirtualInterface
instance Read VirtualInterface
instance Show VirtualInterface
instance Datatype D1VirtualInterfaceState
instance Constructor C1_0VirtualInterfaceState
instance Constructor C1_1VirtualInterfaceState
instance Constructor C1_2VirtualInterfaceState
instance Constructor C1_3VirtualInterfaceState
instance Constructor C1_4VirtualInterfaceState
instance Constructor C1_5VirtualInterfaceState
instance Constructor C1_6VirtualInterfaceState
instance Datatype D1InterconnectState
instance Constructor C1_0InterconnectState
instance Constructor C1_1InterconnectState
instance Constructor C1_2InterconnectState
instance Constructor C1_3InterconnectState
instance Constructor C1_4InterconnectState
instance Constructor C1_5InterconnectState
instance Datatype D1ConnectionState
instance Constructor C1_0ConnectionState
instance Constructor C1_1ConnectionState
instance Constructor C1_2ConnectionState
instance Constructor C1_3ConnectionState
instance Constructor C1_4ConnectionState
instance Constructor C1_5ConnectionState
instance Constructor C1_6ConnectionState
instance Constructor C1_7ConnectionState
instance ToJSON RouteFilterPrefix
instance FromJSON RouteFilterPrefix
instance ToJSON VirtualGateway
instance FromJSON VirtualGateway
instance ToJSON ConnectionState
instance FromJSON ConnectionState
instance ToQuery ConnectionState
instance ToHeader ConnectionState
instance ToByteString ConnectionState
instance ToText ConnectionState
instance FromText ConnectionState
instance Hashable ConnectionState
instance ToJSON NewPublicVirtualInterfaceAllocation
instance FromJSON NewPublicVirtualInterfaceAllocation
instance ToJSON NewPrivateVirtualInterface
instance FromJSON NewPrivateVirtualInterface
instance ToJSON InterconnectState
instance FromJSON InterconnectState
instance ToQuery InterconnectState
instance ToHeader InterconnectState
instance ToByteString InterconnectState
instance ToText InterconnectState
instance FromText InterconnectState
instance Hashable InterconnectState
instance ToJSON Interconnect
instance FromJSON Interconnect
instance ToJSON NewPublicVirtualInterface
instance FromJSON NewPublicVirtualInterface
instance ToJSON Connection
instance FromJSON Connection
instance ToJSON VirtualInterfaceState
instance FromJSON VirtualInterfaceState
instance ToQuery VirtualInterfaceState
instance ToHeader VirtualInterfaceState
instance ToByteString VirtualInterfaceState
instance ToText VirtualInterfaceState
instance FromText VirtualInterfaceState
instance Hashable VirtualInterfaceState
instance ToJSON NewPrivateVirtualInterfaceAllocation
instance FromJSON NewPrivateVirtualInterfaceAllocation
instance ToJSON Connections
instance FromJSON Connections
instance IsList Connections
instance ToJSON Location
instance FromJSON Location
instance ToJSON VirtualInterface
instance FromJSON VirtualInterface
instance AWSService DirectConnect


-- | Displays all virtual interfaces for an AWS account. Virtual interfaces
--   deleted fewer than 15 minutes before DescribeVirtualInterfaces is
--   called are also returned. If a connection ID is included then only
--   virtual interfaces associated with this connection will be returned.
--   If a virtual interface ID is included then only a single virtual
--   interface will be returned.
--   
--   A virtual interface (VLAN) transmits the traffic between the AWS
--   Direct Connect location and the customer.
--   
--   If a connection ID is provided, only virtual interfaces provisioned on
--   the specified connection will be returned. If a virtual interface ID
--   is provided, only this particular virtual interface will be returned.
--   
--   
--   <a>http://docs.aws.amazon.com/directconnect/latest/APIReference/API_DescribeVirtualInterfaces.html</a>
module Network.AWS.DirectConnect.DescribeVirtualInterfaces
data DescribeVirtualInterfaces

-- | <a>DescribeVirtualInterfaces</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dviConnectionId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dviVirtualInterfaceId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
describeVirtualInterfaces :: DescribeVirtualInterfaces
dviConnectionId :: Lens' DescribeVirtualInterfaces (Maybe Text)
dviVirtualInterfaceId :: Lens' DescribeVirtualInterfaces (Maybe Text)
data DescribeVirtualInterfacesResponse

-- | <a>DescribeVirtualInterfacesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvirVirtualInterfaces</a> <tt>::</tt>
--   [<a>VirtualInterface</a>]</li>
--   </ul>
describeVirtualInterfacesResponse :: DescribeVirtualInterfacesResponse

-- | A list of virtual interfaces.
dvirVirtualInterfaces :: Lens' DescribeVirtualInterfacesResponse [VirtualInterface]
instance Eq DescribeVirtualInterfaces
instance Ord DescribeVirtualInterfaces
instance Read DescribeVirtualInterfaces
instance Show DescribeVirtualInterfaces
instance Eq DescribeVirtualInterfacesResponse
instance Read DescribeVirtualInterfacesResponse
instance Show DescribeVirtualInterfacesResponse
instance Monoid DescribeVirtualInterfacesResponse
instance Semigroup DescribeVirtualInterfacesResponse
instance FromJSON DescribeVirtualInterfacesResponse
instance AWSRequest DescribeVirtualInterfaces
instance ToJSON DescribeVirtualInterfaces
instance ToHeaders DescribeVirtualInterfaces
instance ToQuery DescribeVirtualInterfaces
instance ToPath DescribeVirtualInterfaces
instance IsList DescribeVirtualInterfacesResponse


-- | Returns a list of virtual private gateways owned by the AWS account.
--   
--   You can create one or more AWS Direct Connect private virtual
--   interfaces linking to a virtual private gateway. A virtual private
--   gateway can be managed via Amazon Virtual Private Cloud (VPC) console
--   or the <a>EC2CreateVpnGateway</a> action.
--   
--   
--   <a>http://docs.aws.amazon.com/directconnect/latest/APIReference/API_DescribeVirtualGateways.html</a>
module Network.AWS.DirectConnect.DescribeVirtualGateways
data DescribeVirtualGateways

-- | <a>DescribeVirtualGateways</a> constructor.
describeVirtualGateways :: DescribeVirtualGateways
data DescribeVirtualGatewaysResponse

-- | <a>DescribeVirtualGatewaysResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvgrVirtualGateways</a> <tt>::</tt>
--   [<a>VirtualGateway</a>]</li>
--   </ul>
describeVirtualGatewaysResponse :: DescribeVirtualGatewaysResponse

-- | A list of virtual private gateways.
dvgrVirtualGateways :: Lens' DescribeVirtualGatewaysResponse [VirtualGateway]
instance Eq DescribeVirtualGateways
instance Ord DescribeVirtualGateways
instance Read DescribeVirtualGateways
instance Show DescribeVirtualGateways
instance Generic DescribeVirtualGateways
instance Eq DescribeVirtualGatewaysResponse
instance Read DescribeVirtualGatewaysResponse
instance Show DescribeVirtualGatewaysResponse
instance Monoid DescribeVirtualGatewaysResponse
instance Semigroup DescribeVirtualGatewaysResponse
instance Datatype D1DescribeVirtualGateways
instance Constructor C1_0DescribeVirtualGateways
instance FromJSON DescribeVirtualGatewaysResponse
instance AWSRequest DescribeVirtualGateways
instance ToJSON DescribeVirtualGateways
instance ToHeaders DescribeVirtualGateways
instance ToQuery DescribeVirtualGateways
instance ToPath DescribeVirtualGateways
instance IsList DescribeVirtualGatewaysResponse


-- | Returns the list of AWS Direct Connect locations in the current AWS
--   region. These are the locations that may be selected when calling
--   CreateConnection or CreateInterconnect.
--   
--   
--   <a>http://docs.aws.amazon.com/directconnect/latest/APIReference/API_DescribeLocations.html</a>
module Network.AWS.DirectConnect.DescribeLocations
data DescribeLocations

-- | <a>DescribeLocations</a> constructor.
describeLocations :: DescribeLocations
data DescribeLocationsResponse

-- | <a>DescribeLocationsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dlrLocations</a> <tt>::</tt> [<a>Location</a>]</li>
--   </ul>
describeLocationsResponse :: DescribeLocationsResponse
dlrLocations :: Lens' DescribeLocationsResponse [Location]
instance Eq DescribeLocations
instance Ord DescribeLocations
instance Read DescribeLocations
instance Show DescribeLocations
instance Generic DescribeLocations
instance Eq DescribeLocationsResponse
instance Read DescribeLocationsResponse
instance Show DescribeLocationsResponse
instance Monoid DescribeLocationsResponse
instance Semigroup DescribeLocationsResponse
instance Datatype D1DescribeLocations
instance Constructor C1_0DescribeLocations
instance FromJSON DescribeLocationsResponse
instance AWSRequest DescribeLocations
instance ToJSON DescribeLocations
instance ToHeaders DescribeLocations
instance ToQuery DescribeLocations
instance ToPath DescribeLocations
instance IsList DescribeLocationsResponse


-- | Returns a list of interconnects owned by the AWS account.
--   
--   If an interconnect ID is provided, it will only return this particular
--   interconnect.
--   
--   
--   <a>http://docs.aws.amazon.com/directconnect/latest/APIReference/API_DescribeInterconnects.html</a>
module Network.AWS.DirectConnect.DescribeInterconnects
data DescribeInterconnects

-- | <a>DescribeInterconnects</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>diInterconnectId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
describeInterconnects :: DescribeInterconnects
diInterconnectId :: Lens' DescribeInterconnects (Maybe Text)
data DescribeInterconnectsResponse

-- | <a>DescribeInterconnectsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dirInterconnects</a> <tt>::</tt> [<a>Interconnect</a>]</li>
--   </ul>
describeInterconnectsResponse :: DescribeInterconnectsResponse

-- | A list of interconnects.
dirInterconnects :: Lens' DescribeInterconnectsResponse [Interconnect]
instance Eq DescribeInterconnects
instance Ord DescribeInterconnects
instance Read DescribeInterconnects
instance Show DescribeInterconnects
instance Monoid DescribeInterconnects
instance Eq DescribeInterconnectsResponse
instance Read DescribeInterconnectsResponse
instance Show DescribeInterconnectsResponse
instance Monoid DescribeInterconnectsResponse
instance Semigroup DescribeInterconnectsResponse
instance FromJSON DescribeInterconnectsResponse
instance AWSRequest DescribeInterconnects
instance ToJSON DescribeInterconnects
instance ToHeaders DescribeInterconnects
instance ToQuery DescribeInterconnects
instance ToPath DescribeInterconnects
instance IsList DescribeInterconnectsResponse


-- | Return a list of connections that have been provisioned on the given
--   interconnect.
--   
--   
--   <a>http://docs.aws.amazon.com/directconnect/latest/APIReference/API_DescribeConnectionsOnInterconnect.html</a>
module Network.AWS.DirectConnect.DescribeConnectionsOnInterconnect
data DescribeConnectionsOnInterconnect

-- | <a>DescribeConnectionsOnInterconnect</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dcoiInterconnectId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
describeConnectionsOnInterconnect :: Text -> DescribeConnectionsOnInterconnect

-- | ID of the interconnect on which a list of connection is provisioned.
--   
--   Example: dxcon-abc123
--   
--   Default: None
dcoiInterconnectId :: Lens' DescribeConnectionsOnInterconnect Text
data DescribeConnectionsOnInterconnectResponse

-- | <a>DescribeConnectionsOnInterconnectResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dcoirConnections</a> <tt>::</tt> [<a>Connection</a>]</li>
--   </ul>
describeConnectionsOnInterconnectResponse :: DescribeConnectionsOnInterconnectResponse

-- | A list of connections.
dcoirConnections :: Lens' DescribeConnectionsOnInterconnectResponse [Connection]
instance Eq DescribeConnectionsOnInterconnect
instance Ord DescribeConnectionsOnInterconnect
instance Read DescribeConnectionsOnInterconnect
instance Show DescribeConnectionsOnInterconnect
instance Monoid DescribeConnectionsOnInterconnect
instance IsString DescribeConnectionsOnInterconnect
instance Eq DescribeConnectionsOnInterconnectResponse
instance Read DescribeConnectionsOnInterconnectResponse
instance Show DescribeConnectionsOnInterconnectResponse
instance Monoid DescribeConnectionsOnInterconnectResponse
instance Semigroup DescribeConnectionsOnInterconnectResponse
instance FromJSON DescribeConnectionsOnInterconnectResponse
instance AWSRequest DescribeConnectionsOnInterconnect
instance ToJSON DescribeConnectionsOnInterconnect
instance ToHeaders DescribeConnectionsOnInterconnect
instance ToQuery DescribeConnectionsOnInterconnect
instance ToPath DescribeConnectionsOnInterconnect
instance IsList DescribeConnectionsOnInterconnectResponse


-- | Displays all connections in this region.
--   
--   If a connection ID is provided, the call returns only that particular
--   connection.
--   
--   
--   <a>http://docs.aws.amazon.com/directconnect/latest/APIReference/API_DescribeConnections.html</a>
module Network.AWS.DirectConnect.DescribeConnections
data DescribeConnections

-- | <a>DescribeConnections</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dc1ConnectionId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
describeConnections :: DescribeConnections
dc1ConnectionId :: Lens' DescribeConnections (Maybe Text)
data DescribeConnectionsResponse

-- | <a>DescribeConnectionsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dcrConnections</a> <tt>::</tt> [<a>Connection</a>]</li>
--   </ul>
describeConnectionsResponse :: DescribeConnectionsResponse

-- | A list of connections.
dcrConnections :: Lens' DescribeConnectionsResponse [Connection]
instance Eq DescribeConnections
instance Ord DescribeConnections
instance Read DescribeConnections
instance Show DescribeConnections
instance Monoid DescribeConnections
instance Eq DescribeConnectionsResponse
instance Read DescribeConnectionsResponse
instance Show DescribeConnectionsResponse
instance Monoid DescribeConnectionsResponse
instance Semigroup DescribeConnectionsResponse
instance FromJSON DescribeConnectionsResponse
instance AWSRequest DescribeConnections
instance ToJSON DescribeConnections
instance ToHeaders DescribeConnections
instance ToQuery DescribeConnections
instance ToPath DescribeConnections
instance IsList DescribeConnectionsResponse


-- | Deletes a virtual interface.
--   
--   
--   <a>http://docs.aws.amazon.com/directconnect/latest/APIReference/API_DeleteVirtualInterface.html</a>
module Network.AWS.DirectConnect.DeleteVirtualInterface
data DeleteVirtualInterface

-- | <a>DeleteVirtualInterface</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvi1VirtualInterfaceId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteVirtualInterface :: Text -> DeleteVirtualInterface
dvi1VirtualInterfaceId :: Lens' DeleteVirtualInterface Text
data DeleteVirtualInterfaceResponse

-- | <a>DeleteVirtualInterfaceResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvirVirtualInterfaceState</a> <tt>::</tt> <a>Maybe</a>
--   <a>VirtualInterfaceState</a></li>
--   </ul>
deleteVirtualInterfaceResponse :: DeleteVirtualInterfaceResponse
dvirVirtualInterfaceState :: Lens' DeleteVirtualInterfaceResponse (Maybe VirtualInterfaceState)
instance Eq DeleteVirtualInterface
instance Ord DeleteVirtualInterface
instance Read DeleteVirtualInterface
instance Show DeleteVirtualInterface
instance Monoid DeleteVirtualInterface
instance IsString DeleteVirtualInterface
instance Eq DeleteVirtualInterfaceResponse
instance Read DeleteVirtualInterfaceResponse
instance Show DeleteVirtualInterfaceResponse
instance FromJSON DeleteVirtualInterfaceResponse
instance AWSRequest DeleteVirtualInterface
instance ToJSON DeleteVirtualInterface
instance ToHeaders DeleteVirtualInterface
instance ToQuery DeleteVirtualInterface
instance ToPath DeleteVirtualInterface


-- | Deletes the specified interconnect.
--   
--   
--   <a>http://docs.aws.amazon.com/directconnect/latest/APIReference/API_DeleteInterconnect.html</a>
module Network.AWS.DirectConnect.DeleteInterconnect
data DeleteInterconnect

-- | <a>DeleteInterconnect</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>di1InterconnectId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteInterconnect :: Text -> DeleteInterconnect
di1InterconnectId :: Lens' DeleteInterconnect Text
data DeleteInterconnectResponse

-- | <a>DeleteInterconnectResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dirInterconnectState</a> <tt>::</tt> <a>Maybe</a>
--   <a>InterconnectState</a></li>
--   </ul>
deleteInterconnectResponse :: DeleteInterconnectResponse
dirInterconnectState :: Lens' DeleteInterconnectResponse (Maybe InterconnectState)
instance Eq DeleteInterconnect
instance Ord DeleteInterconnect
instance Read DeleteInterconnect
instance Show DeleteInterconnect
instance Monoid DeleteInterconnect
instance IsString DeleteInterconnect
instance Eq DeleteInterconnectResponse
instance Read DeleteInterconnectResponse
instance Show DeleteInterconnectResponse
instance FromJSON DeleteInterconnectResponse
instance AWSRequest DeleteInterconnect
instance ToJSON DeleteInterconnect
instance ToHeaders DeleteInterconnect
instance ToQuery DeleteInterconnect
instance ToPath DeleteInterconnect


-- | Deletes the connection.
--   
--   Deleting a connection only stops the AWS Direct Connect port hour and
--   data transfer charges. You need to cancel separately with the
--   providers any services or charges for cross-connects or network
--   circuits that connect you to the AWS Direct Connect location.
--   
--   
--   <a>http://docs.aws.amazon.com/directconnect/latest/APIReference/API_DeleteConnection.html</a>
module Network.AWS.DirectConnect.DeleteConnection
data DeleteConnection

-- | <a>DeleteConnection</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dcConnectionId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteConnection :: Text -> DeleteConnection
dcConnectionId :: Lens' DeleteConnection Text
data DeleteConnectionResponse

-- | <a>DeleteConnectionResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dcrBandwidth</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dcrConnectionId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dcrConnectionName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dcrConnectionState</a> <tt>::</tt> <a>Maybe</a>
--   <a>ConnectionState</a></li>
--   <li><a>dcrLocation</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dcrOwnerAccount</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dcrPartnerName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dcrRegion</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dcrVlan</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   </ul>
deleteConnectionResponse :: DeleteConnectionResponse

-- | Bandwidth of the connection.
--   
--   Example: 1Gbps (for regular connections), or 500Mbps (for hosted
--   connections)
--   
--   Default: None
dcrBandwidth :: Lens' DeleteConnectionResponse (Maybe Text)
dcrConnectionId :: Lens' DeleteConnectionResponse (Maybe Text)
dcrConnectionName :: Lens' DeleteConnectionResponse (Maybe Text)
dcrConnectionState :: Lens' DeleteConnectionResponse (Maybe ConnectionState)
dcrLocation :: Lens' DeleteConnectionResponse (Maybe Text)
dcrOwnerAccount :: Lens' DeleteConnectionResponse (Maybe Text)
dcrPartnerName :: Lens' DeleteConnectionResponse (Maybe Text)
dcrRegion :: Lens' DeleteConnectionResponse (Maybe Text)
dcrVlan :: Lens' DeleteConnectionResponse (Maybe Int)
instance Eq DeleteConnection
instance Ord DeleteConnection
instance Read DeleteConnection
instance Show DeleteConnection
instance Monoid DeleteConnection
instance IsString DeleteConnection
instance Eq DeleteConnectionResponse
instance Read DeleteConnectionResponse
instance Show DeleteConnectionResponse
instance FromJSON DeleteConnectionResponse
instance AWSRequest DeleteConnection
instance ToJSON DeleteConnection
instance ToHeaders DeleteConnection
instance ToQuery DeleteConnection
instance ToPath DeleteConnection


-- | Creates a new public virtual interface. A virtual interface is the
--   VLAN that transports AWS Direct Connect traffic. A public virtual
--   interface supports sending traffic to public services of AWS such as
--   Amazon Simple Storage Service (Amazon S3).
--   
--   
--   <a>http://docs.aws.amazon.com/directconnect/latest/APIReference/API_CreatePublicVirtualInterface.html</a>
module Network.AWS.DirectConnect.CreatePublicVirtualInterface
data CreatePublicVirtualInterface

-- | <a>CreatePublicVirtualInterface</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cpviConnectionId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cpviNewPublicVirtualInterface</a> <tt>::</tt>
--   <a>NewPublicVirtualInterface</a></li>
--   </ul>
createPublicVirtualInterface :: Text -> NewPublicVirtualInterface -> CreatePublicVirtualInterface
cpviConnectionId :: Lens' CreatePublicVirtualInterface Text

-- | Detailed information for the public virtual interface to be created.
--   
--   Default: None
cpviNewPublicVirtualInterface :: Lens' CreatePublicVirtualInterface NewPublicVirtualInterface
data CreatePublicVirtualInterfaceResponse

-- | <a>CreatePublicVirtualInterfaceResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cpvirAmazonAddress</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cpvirAsn</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>cpvirAuthKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cpvirConnectionId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cpvirCustomerAddress</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cpvirCustomerRouterConfig</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cpvirLocation</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cpvirOwnerAccount</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cpvirRouteFilterPrefixes</a> <tt>::</tt>
--   [<a>RouteFilterPrefix</a>]</li>
--   <li><a>cpvirVirtualGatewayId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cpvirVirtualInterfaceId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cpvirVirtualInterfaceName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cpvirVirtualInterfaceState</a> <tt>::</tt> <a>Maybe</a>
--   <a>VirtualInterfaceState</a></li>
--   <li><a>cpvirVirtualInterfaceType</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cpvirVlan</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   </ul>
createPublicVirtualInterfaceResponse :: CreatePublicVirtualInterfaceResponse
cpvirAmazonAddress :: Lens' CreatePublicVirtualInterfaceResponse (Maybe Text)
cpvirAsn :: Lens' CreatePublicVirtualInterfaceResponse (Maybe Int)
cpvirAuthKey :: Lens' CreatePublicVirtualInterfaceResponse (Maybe Text)
cpvirConnectionId :: Lens' CreatePublicVirtualInterfaceResponse (Maybe Text)
cpvirCustomerAddress :: Lens' CreatePublicVirtualInterfaceResponse (Maybe Text)

-- | Information for generating the customer router configuration.
cpvirCustomerRouterConfig :: Lens' CreatePublicVirtualInterfaceResponse (Maybe Text)
cpvirLocation :: Lens' CreatePublicVirtualInterfaceResponse (Maybe Text)
cpvirOwnerAccount :: Lens' CreatePublicVirtualInterfaceResponse (Maybe Text)
cpvirRouteFilterPrefixes :: Lens' CreatePublicVirtualInterfaceResponse [RouteFilterPrefix]
cpvirVirtualGatewayId :: Lens' CreatePublicVirtualInterfaceResponse (Maybe Text)
cpvirVirtualInterfaceId :: Lens' CreatePublicVirtualInterfaceResponse (Maybe Text)
cpvirVirtualInterfaceName :: Lens' CreatePublicVirtualInterfaceResponse (Maybe Text)
cpvirVirtualInterfaceState :: Lens' CreatePublicVirtualInterfaceResponse (Maybe VirtualInterfaceState)
cpvirVirtualInterfaceType :: Lens' CreatePublicVirtualInterfaceResponse (Maybe Text)
cpvirVlan :: Lens' CreatePublicVirtualInterfaceResponse (Maybe Int)
instance Eq CreatePublicVirtualInterface
instance Read CreatePublicVirtualInterface
instance Show CreatePublicVirtualInterface
instance Eq CreatePublicVirtualInterfaceResponse
instance Read CreatePublicVirtualInterfaceResponse
instance Show CreatePublicVirtualInterfaceResponse
instance FromJSON CreatePublicVirtualInterfaceResponse
instance AWSRequest CreatePublicVirtualInterface
instance ToJSON CreatePublicVirtualInterface
instance ToHeaders CreatePublicVirtualInterface
instance ToQuery CreatePublicVirtualInterface
instance ToPath CreatePublicVirtualInterface


-- | Creates a new private virtual interface. A virtual interface is the
--   VLAN that transports AWS Direct Connect traffic. A private virtual
--   interface supports sending traffic to a single virtual private cloud
--   (VPC).
--   
--   
--   <a>http://docs.aws.amazon.com/directconnect/latest/APIReference/API_CreatePrivateVirtualInterface.html</a>
module Network.AWS.DirectConnect.CreatePrivateVirtualInterface
data CreatePrivateVirtualInterface

-- | <a>CreatePrivateVirtualInterface</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cpvi1ConnectionId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cpvi1NewPrivateVirtualInterface</a> <tt>::</tt>
--   <a>NewPrivateVirtualInterface</a></li>
--   </ul>
createPrivateVirtualInterface :: Text -> NewPrivateVirtualInterface -> CreatePrivateVirtualInterface
cpvi1ConnectionId :: Lens' CreatePrivateVirtualInterface Text

-- | Detailed information for the private virtual interface to be created.
--   
--   Default: None
cpvi1NewPrivateVirtualInterface :: Lens' CreatePrivateVirtualInterface NewPrivateVirtualInterface
data CreatePrivateVirtualInterfaceResponse

-- | <a>CreatePrivateVirtualInterfaceResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cpvir2AmazonAddress</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cpvir2Asn</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>cpvir2AuthKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cpvir2ConnectionId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cpvir2CustomerAddress</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cpvir2CustomerRouterConfig</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cpvir2Location</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cpvir2OwnerAccount</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cpvir2RouteFilterPrefixes</a> <tt>::</tt>
--   [<a>RouteFilterPrefix</a>]</li>
--   <li><a>cpvir2VirtualGatewayId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cpvir2VirtualInterfaceId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cpvir2VirtualInterfaceName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cpvir2VirtualInterfaceState</a> <tt>::</tt> <a>Maybe</a>
--   <a>VirtualInterfaceState</a></li>
--   <li><a>cpvir2VirtualInterfaceType</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cpvir2Vlan</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   </ul>
createPrivateVirtualInterfaceResponse :: CreatePrivateVirtualInterfaceResponse
cpvir2AmazonAddress :: Lens' CreatePrivateVirtualInterfaceResponse (Maybe Text)
cpvir2Asn :: Lens' CreatePrivateVirtualInterfaceResponse (Maybe Int)
cpvir2AuthKey :: Lens' CreatePrivateVirtualInterfaceResponse (Maybe Text)
cpvir2ConnectionId :: Lens' CreatePrivateVirtualInterfaceResponse (Maybe Text)
cpvir2CustomerAddress :: Lens' CreatePrivateVirtualInterfaceResponse (Maybe Text)

-- | Information for generating the customer router configuration.
cpvir2CustomerRouterConfig :: Lens' CreatePrivateVirtualInterfaceResponse (Maybe Text)
cpvir2Location :: Lens' CreatePrivateVirtualInterfaceResponse (Maybe Text)
cpvir2OwnerAccount :: Lens' CreatePrivateVirtualInterfaceResponse (Maybe Text)
cpvir2RouteFilterPrefixes :: Lens' CreatePrivateVirtualInterfaceResponse [RouteFilterPrefix]
cpvir2VirtualGatewayId :: Lens' CreatePrivateVirtualInterfaceResponse (Maybe Text)
cpvir2VirtualInterfaceId :: Lens' CreatePrivateVirtualInterfaceResponse (Maybe Text)
cpvir2VirtualInterfaceName :: Lens' CreatePrivateVirtualInterfaceResponse (Maybe Text)
cpvir2VirtualInterfaceState :: Lens' CreatePrivateVirtualInterfaceResponse (Maybe VirtualInterfaceState)
cpvir2VirtualInterfaceType :: Lens' CreatePrivateVirtualInterfaceResponse (Maybe Text)
cpvir2Vlan :: Lens' CreatePrivateVirtualInterfaceResponse (Maybe Int)
instance Eq CreatePrivateVirtualInterface
instance Read CreatePrivateVirtualInterface
instance Show CreatePrivateVirtualInterface
instance Eq CreatePrivateVirtualInterfaceResponse
instance Read CreatePrivateVirtualInterfaceResponse
instance Show CreatePrivateVirtualInterfaceResponse
instance FromJSON CreatePrivateVirtualInterfaceResponse
instance AWSRequest CreatePrivateVirtualInterface
instance ToJSON CreatePrivateVirtualInterface
instance ToHeaders CreatePrivateVirtualInterface
instance ToQuery CreatePrivateVirtualInterface
instance ToPath CreatePrivateVirtualInterface


-- | Creates a new interconnect between a AWS Direct Connect partner's
--   network and a specific AWS Direct Connect location.
--   
--   An interconnect is a connection which is capable of hosting other
--   connections. The AWS Direct Connect partner can use an interconnect to
--   provide sub-1Gbps AWS Direct Connect service to tier 2 customers who
--   do not have their own connections. Like a standard connection, an
--   interconnect links the AWS Direct Connect partner's network to an AWS
--   Direct Connect location over a standard 1 Gbps or 10 Gbps Ethernet
--   fiber-optic cable. One end is connected to the partner's router, the
--   other to an AWS Direct Connect router.
--   
--   For each end customer, the AWS Direct Connect partner provisions a
--   connection on their interconnect by calling
--   AllocateConnectionOnInterconnect. The end customer can then connect to
--   AWS resources by creating a virtual interface on their connection,
--   using the VLAN assigned to them by the AWS Direct Connect partner.
--   
--   
--   <a>http://docs.aws.amazon.com/directconnect/latest/APIReference/API_CreateInterconnect.html</a>
module Network.AWS.DirectConnect.CreateInterconnect
data CreateInterconnect

-- | <a>CreateInterconnect</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ciBandwidth</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ciInterconnectName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ciLocation</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createInterconnect :: Text -> Text -> Text -> CreateInterconnect

-- | The port bandwidth
--   
--   Example: 1Gbps
--   
--   Default: None
--   
--   Available values: 1Gbps,10Gbps
ciBandwidth :: Lens' CreateInterconnect Text

-- | The name of the interconnect.
--   
--   Example: "<i>1G Interconnect to AWS</i>"
--   
--   Default: None
ciInterconnectName :: Lens' CreateInterconnect Text

-- | Where the interconnect is located
--   
--   Example: EqSV5
--   
--   Default: None
ciLocation :: Lens' CreateInterconnect Text
data CreateInterconnectResponse

-- | <a>CreateInterconnectResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cirBandwidth</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cirInterconnectId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cirInterconnectName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cirInterconnectState</a> <tt>::</tt> <a>Maybe</a>
--   <a>InterconnectState</a></li>
--   <li><a>cirLocation</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cirRegion</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
createInterconnectResponse :: CreateInterconnectResponse
cirBandwidth :: Lens' CreateInterconnectResponse (Maybe Text)
cirInterconnectId :: Lens' CreateInterconnectResponse (Maybe Text)
cirInterconnectName :: Lens' CreateInterconnectResponse (Maybe Text)
cirInterconnectState :: Lens' CreateInterconnectResponse (Maybe InterconnectState)
cirLocation :: Lens' CreateInterconnectResponse (Maybe Text)
cirRegion :: Lens' CreateInterconnectResponse (Maybe Text)
instance Eq CreateInterconnect
instance Ord CreateInterconnect
instance Read CreateInterconnect
instance Show CreateInterconnect
instance Eq CreateInterconnectResponse
instance Read CreateInterconnectResponse
instance Show CreateInterconnectResponse
instance FromJSON CreateInterconnectResponse
instance AWSRequest CreateInterconnect
instance ToJSON CreateInterconnect
instance ToHeaders CreateInterconnect
instance ToQuery CreateInterconnect
instance ToPath CreateInterconnect


-- | Creates a new connection between the customer network and a specific
--   AWS Direct Connect location.
--   
--   A connection links your internal network to an AWS Direct Connect
--   location over a standard 1 gigabit or 10 gigabit Ethernet fiber-optic
--   cable. One end of the cable is connected to your router, the other to
--   an AWS Direct Connect router. An AWS Direct Connect location provides
--   access to Amazon Web Services in the region it is associated with. You
--   can establish connections with AWS Direct Connect locations in
--   multiple regions, but a connection in one region does not provide
--   connectivity to other regions.
--   
--   
--   <a>http://docs.aws.amazon.com/directconnect/latest/APIReference/API_CreateConnection.html</a>
module Network.AWS.DirectConnect.CreateConnection
data CreateConnection

-- | <a>CreateConnection</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ccBandwidth</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ccConnectionName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ccLocation</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createConnection :: Text -> Text -> Text -> CreateConnection
ccBandwidth :: Lens' CreateConnection Text
ccConnectionName :: Lens' CreateConnection Text
ccLocation :: Lens' CreateConnection Text
data CreateConnectionResponse

-- | <a>CreateConnectionResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ccrBandwidth</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ccrConnectionId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ccrConnectionName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ccrConnectionState</a> <tt>::</tt> <a>Maybe</a>
--   <a>ConnectionState</a></li>
--   <li><a>ccrLocation</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ccrOwnerAccount</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ccrPartnerName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ccrRegion</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ccrVlan</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   </ul>
createConnectionResponse :: CreateConnectionResponse

-- | Bandwidth of the connection.
--   
--   Example: 1Gbps (for regular connections), or 500Mbps (for hosted
--   connections)
--   
--   Default: None
ccrBandwidth :: Lens' CreateConnectionResponse (Maybe Text)
ccrConnectionId :: Lens' CreateConnectionResponse (Maybe Text)
ccrConnectionName :: Lens' CreateConnectionResponse (Maybe Text)
ccrConnectionState :: Lens' CreateConnectionResponse (Maybe ConnectionState)
ccrLocation :: Lens' CreateConnectionResponse (Maybe Text)
ccrOwnerAccount :: Lens' CreateConnectionResponse (Maybe Text)
ccrPartnerName :: Lens' CreateConnectionResponse (Maybe Text)
ccrRegion :: Lens' CreateConnectionResponse (Maybe Text)
ccrVlan :: Lens' CreateConnectionResponse (Maybe Int)
instance Eq CreateConnection
instance Ord CreateConnection
instance Read CreateConnection
instance Show CreateConnection
instance Eq CreateConnectionResponse
instance Read CreateConnectionResponse
instance Show CreateConnectionResponse
instance FromJSON CreateConnectionResponse
instance AWSRequest CreateConnection
instance ToJSON CreateConnection
instance ToHeaders CreateConnection
instance ToQuery CreateConnection
instance ToPath CreateConnection


-- | Accept ownership of a public virtual interface created by another
--   customer.
--   
--   After the virtual interface owner calls this function, the specified
--   virtual interface will be created and made available for handling
--   traffic.
--   
--   
--   <a>http://docs.aws.amazon.com/directconnect/latest/APIReference/API_ConfirmPublicVirtualInterface.html</a>
module Network.AWS.DirectConnect.ConfirmPublicVirtualInterface
data ConfirmPublicVirtualInterface

-- | <a>ConfirmPublicVirtualInterface</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cpvi1VirtualInterfaceId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
confirmPublicVirtualInterface :: Text -> ConfirmPublicVirtualInterface
cpvi1VirtualInterfaceId :: Lens' ConfirmPublicVirtualInterface Text
data ConfirmPublicVirtualInterfaceResponse

-- | <a>ConfirmPublicVirtualInterfaceResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cpvir3VirtualInterfaceState</a> <tt>::</tt> <a>Maybe</a>
--   <a>VirtualInterfaceState</a></li>
--   </ul>
confirmPublicVirtualInterfaceResponse :: ConfirmPublicVirtualInterfaceResponse
cpvir3VirtualInterfaceState :: Lens' ConfirmPublicVirtualInterfaceResponse (Maybe VirtualInterfaceState)
instance Eq ConfirmPublicVirtualInterface
instance Ord ConfirmPublicVirtualInterface
instance Read ConfirmPublicVirtualInterface
instance Show ConfirmPublicVirtualInterface
instance Monoid ConfirmPublicVirtualInterface
instance IsString ConfirmPublicVirtualInterface
instance Eq ConfirmPublicVirtualInterfaceResponse
instance Read ConfirmPublicVirtualInterfaceResponse
instance Show ConfirmPublicVirtualInterfaceResponse
instance FromJSON ConfirmPublicVirtualInterfaceResponse
instance AWSRequest ConfirmPublicVirtualInterface
instance ToJSON ConfirmPublicVirtualInterface
instance ToHeaders ConfirmPublicVirtualInterface
instance ToQuery ConfirmPublicVirtualInterface
instance ToPath ConfirmPublicVirtualInterface


-- | Accept ownership of a private virtual interface created by another
--   customer.
--   
--   After the virtual interface owner calls this function, the virtual
--   interface will be created and attached to the given virtual private
--   gateway, and will be available for handling traffic.
--   
--   
--   <a>http://docs.aws.amazon.com/directconnect/latest/APIReference/API_ConfirmPrivateVirtualInterface.html</a>
module Network.AWS.DirectConnect.ConfirmPrivateVirtualInterface
data ConfirmPrivateVirtualInterface

-- | <a>ConfirmPrivateVirtualInterface</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cpviVirtualGatewayId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cpviVirtualInterfaceId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
confirmPrivateVirtualInterface :: Text -> Text -> ConfirmPrivateVirtualInterface

-- | ID of the virtual private gateway that will be attached to the virtual
--   interface.
--   
--   A virtual private gateway can be managed via the Amazon Virtual
--   Private Cloud (VPC) console or the <a>EC2 CreateVpnGateway</a> action.
--   
--   Default: None
cpviVirtualGatewayId :: Lens' ConfirmPrivateVirtualInterface Text
cpviVirtualInterfaceId :: Lens' ConfirmPrivateVirtualInterface Text
data ConfirmPrivateVirtualInterfaceResponse

-- | <a>ConfirmPrivateVirtualInterfaceResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cpvir1VirtualInterfaceState</a> <tt>::</tt> <a>Maybe</a>
--   <a>VirtualInterfaceState</a></li>
--   </ul>
confirmPrivateVirtualInterfaceResponse :: ConfirmPrivateVirtualInterfaceResponse
cpvir1VirtualInterfaceState :: Lens' ConfirmPrivateVirtualInterfaceResponse (Maybe VirtualInterfaceState)
instance Eq ConfirmPrivateVirtualInterface
instance Ord ConfirmPrivateVirtualInterface
instance Read ConfirmPrivateVirtualInterface
instance Show ConfirmPrivateVirtualInterface
instance Eq ConfirmPrivateVirtualInterfaceResponse
instance Read ConfirmPrivateVirtualInterfaceResponse
instance Show ConfirmPrivateVirtualInterfaceResponse
instance FromJSON ConfirmPrivateVirtualInterfaceResponse
instance AWSRequest ConfirmPrivateVirtualInterface
instance ToJSON ConfirmPrivateVirtualInterface
instance ToHeaders ConfirmPrivateVirtualInterface
instance ToQuery ConfirmPrivateVirtualInterface
instance ToPath ConfirmPrivateVirtualInterface


-- | Confirm the creation of a hosted connection on an interconnect.
--   
--   Upon creation, the hosted connection is initially in the
--   <a>Ordering</a> state, and will remain in this state until the owner
--   calls ConfirmConnection to confirm creation of the hosted connection.
--   
--   
--   <a>http://docs.aws.amazon.com/directconnect/latest/APIReference/API_ConfirmConnection.html</a>
module Network.AWS.DirectConnect.ConfirmConnection
data ConfirmConnection

-- | <a>ConfirmConnection</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ccConnectionId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
confirmConnection :: Text -> ConfirmConnection
ccConnectionId :: Lens' ConfirmConnection Text
data ConfirmConnectionResponse

-- | <a>ConfirmConnectionResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ccr1ConnectionState</a> <tt>::</tt> <a>Maybe</a>
--   <a>ConnectionState</a></li>
--   </ul>
confirmConnectionResponse :: ConfirmConnectionResponse
ccr1ConnectionState :: Lens' ConfirmConnectionResponse (Maybe ConnectionState)
instance Eq ConfirmConnection
instance Ord ConfirmConnection
instance Read ConfirmConnection
instance Show ConfirmConnection
instance Monoid ConfirmConnection
instance IsString ConfirmConnection
instance Eq ConfirmConnectionResponse
instance Read ConfirmConnectionResponse
instance Show ConfirmConnectionResponse
instance FromJSON ConfirmConnectionResponse
instance AWSRequest ConfirmConnection
instance ToJSON ConfirmConnection
instance ToHeaders ConfirmConnection
instance ToQuery ConfirmConnection
instance ToPath ConfirmConnection


-- | Provisions a public virtual interface to be owned by a different
--   customer.
--   
--   The owner of a connection calls this function to provision a public
--   virtual interface which will be owned by another AWS customer.
--   
--   Virtual interfaces created using this function must be confirmed by
--   the virtual interface owner by calling ConfirmPublicVirtualInterface.
--   Until this step has been completed, the virtual interface will be in
--   <a>Confirming</a> state, and will not be available for handling
--   traffic.
--   
--   
--   <a>http://docs.aws.amazon.com/directconnect/latest/APIReference/API_AllocatePublicVirtualInterface.html</a>
module Network.AWS.DirectConnect.AllocatePublicVirtualInterface
data AllocatePublicVirtualInterface

-- | <a>AllocatePublicVirtualInterface</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>apvi1ConnectionId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>apvi1NewPublicVirtualInterfaceAllocation</a> <tt>::</tt>
--   <a>NewPublicVirtualInterfaceAllocation</a></li>
--   <li><a>apvi1OwnerAccount</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
allocatePublicVirtualInterface :: Text -> Text -> NewPublicVirtualInterfaceAllocation -> AllocatePublicVirtualInterface

-- | The connection ID on which the public virtual interface is
--   provisioned.
--   
--   Default: None
apvi1ConnectionId :: Lens' AllocatePublicVirtualInterface Text

-- | Detailed information for the public virtual interface to be
--   provisioned.
--   
--   Default: None
apvi1NewPublicVirtualInterfaceAllocation :: Lens' AllocatePublicVirtualInterface NewPublicVirtualInterfaceAllocation

-- | The AWS account that will own the new public virtual interface.
--   
--   Default: None
apvi1OwnerAccount :: Lens' AllocatePublicVirtualInterface Text
data AllocatePublicVirtualInterfaceResponse

-- | <a>AllocatePublicVirtualInterfaceResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>apvir1AmazonAddress</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>apvir1Asn</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>apvir1AuthKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>apvir1ConnectionId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>apvir1CustomerAddress</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>apvir1CustomerRouterConfig</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>apvir1Location</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>apvir1OwnerAccount</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>apvir1RouteFilterPrefixes</a> <tt>::</tt>
--   [<a>RouteFilterPrefix</a>]</li>
--   <li><a>apvir1VirtualGatewayId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>apvir1VirtualInterfaceId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>apvir1VirtualInterfaceName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>apvir1VirtualInterfaceState</a> <tt>::</tt> <a>Maybe</a>
--   <a>VirtualInterfaceState</a></li>
--   <li><a>apvir1VirtualInterfaceType</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>apvir1Vlan</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   </ul>
allocatePublicVirtualInterfaceResponse :: AllocatePublicVirtualInterfaceResponse
apvir1AmazonAddress :: Lens' AllocatePublicVirtualInterfaceResponse (Maybe Text)
apvir1Asn :: Lens' AllocatePublicVirtualInterfaceResponse (Maybe Int)
apvir1AuthKey :: Lens' AllocatePublicVirtualInterfaceResponse (Maybe Text)
apvir1ConnectionId :: Lens' AllocatePublicVirtualInterfaceResponse (Maybe Text)
apvir1CustomerAddress :: Lens' AllocatePublicVirtualInterfaceResponse (Maybe Text)

-- | Information for generating the customer router configuration.
apvir1CustomerRouterConfig :: Lens' AllocatePublicVirtualInterfaceResponse (Maybe Text)
apvir1Location :: Lens' AllocatePublicVirtualInterfaceResponse (Maybe Text)
apvir1OwnerAccount :: Lens' AllocatePublicVirtualInterfaceResponse (Maybe Text)
apvir1RouteFilterPrefixes :: Lens' AllocatePublicVirtualInterfaceResponse [RouteFilterPrefix]
apvir1VirtualGatewayId :: Lens' AllocatePublicVirtualInterfaceResponse (Maybe Text)
apvir1VirtualInterfaceId :: Lens' AllocatePublicVirtualInterfaceResponse (Maybe Text)
apvir1VirtualInterfaceName :: Lens' AllocatePublicVirtualInterfaceResponse (Maybe Text)
apvir1VirtualInterfaceState :: Lens' AllocatePublicVirtualInterfaceResponse (Maybe VirtualInterfaceState)
apvir1VirtualInterfaceType :: Lens' AllocatePublicVirtualInterfaceResponse (Maybe Text)
apvir1Vlan :: Lens' AllocatePublicVirtualInterfaceResponse (Maybe Int)
instance Eq AllocatePublicVirtualInterface
instance Read AllocatePublicVirtualInterface
instance Show AllocatePublicVirtualInterface
instance Eq AllocatePublicVirtualInterfaceResponse
instance Read AllocatePublicVirtualInterfaceResponse
instance Show AllocatePublicVirtualInterfaceResponse
instance FromJSON AllocatePublicVirtualInterfaceResponse
instance AWSRequest AllocatePublicVirtualInterface
instance ToJSON AllocatePublicVirtualInterface
instance ToHeaders AllocatePublicVirtualInterface
instance ToQuery AllocatePublicVirtualInterface
instance ToPath AllocatePublicVirtualInterface


-- | Provisions a private virtual interface to be owned by a different
--   customer.
--   
--   The owner of a connection calls this function to provision a private
--   virtual interface which will be owned by another AWS customer.
--   
--   Virtual interfaces created using this function must be confirmed by
--   the virtual interface owner by calling ConfirmPrivateVirtualInterface.
--   Until this step has been completed, the virtual interface will be in
--   <a>Confirming</a> state, and will not be available for handling
--   traffic.
--   
--   
--   <a>http://docs.aws.amazon.com/directconnect/latest/APIReference/API_AllocatePrivateVirtualInterface.html</a>
module Network.AWS.DirectConnect.AllocatePrivateVirtualInterface
data AllocatePrivateVirtualInterface

-- | <a>AllocatePrivateVirtualInterface</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>apviConnectionId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>apviNewPrivateVirtualInterfaceAllocation</a> <tt>::</tt>
--   <a>NewPrivateVirtualInterfaceAllocation</a></li>
--   <li><a>apviOwnerAccount</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
allocatePrivateVirtualInterface :: Text -> Text -> NewPrivateVirtualInterfaceAllocation -> AllocatePrivateVirtualInterface

-- | The connection ID on which the private virtual interface is
--   provisioned.
--   
--   Default: None
apviConnectionId :: Lens' AllocatePrivateVirtualInterface Text

-- | Detailed information for the private virtual interface to be
--   provisioned.
--   
--   Default: None
apviNewPrivateVirtualInterfaceAllocation :: Lens' AllocatePrivateVirtualInterface NewPrivateVirtualInterfaceAllocation

-- | The AWS account that will own the new private virtual interface.
--   
--   Default: None
apviOwnerAccount :: Lens' AllocatePrivateVirtualInterface Text
data AllocatePrivateVirtualInterfaceResponse

-- | <a>AllocatePrivateVirtualInterfaceResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>apvirAmazonAddress</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>apvirAsn</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>apvirAuthKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>apvirConnectionId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>apvirCustomerAddress</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>apvirCustomerRouterConfig</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>apvirLocation</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>apvirOwnerAccount</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>apvirRouteFilterPrefixes</a> <tt>::</tt>
--   [<a>RouteFilterPrefix</a>]</li>
--   <li><a>apvirVirtualGatewayId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>apvirVirtualInterfaceId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>apvirVirtualInterfaceName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>apvirVirtualInterfaceState</a> <tt>::</tt> <a>Maybe</a>
--   <a>VirtualInterfaceState</a></li>
--   <li><a>apvirVirtualInterfaceType</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>apvirVlan</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   </ul>
allocatePrivateVirtualInterfaceResponse :: AllocatePrivateVirtualInterfaceResponse
apvirAmazonAddress :: Lens' AllocatePrivateVirtualInterfaceResponse (Maybe Text)
apvirAsn :: Lens' AllocatePrivateVirtualInterfaceResponse (Maybe Int)
apvirAuthKey :: Lens' AllocatePrivateVirtualInterfaceResponse (Maybe Text)
apvirConnectionId :: Lens' AllocatePrivateVirtualInterfaceResponse (Maybe Text)
apvirCustomerAddress :: Lens' AllocatePrivateVirtualInterfaceResponse (Maybe Text)

-- | Information for generating the customer router configuration.
apvirCustomerRouterConfig :: Lens' AllocatePrivateVirtualInterfaceResponse (Maybe Text)
apvirLocation :: Lens' AllocatePrivateVirtualInterfaceResponse (Maybe Text)
apvirOwnerAccount :: Lens' AllocatePrivateVirtualInterfaceResponse (Maybe Text)
apvirRouteFilterPrefixes :: Lens' AllocatePrivateVirtualInterfaceResponse [RouteFilterPrefix]
apvirVirtualGatewayId :: Lens' AllocatePrivateVirtualInterfaceResponse (Maybe Text)
apvirVirtualInterfaceId :: Lens' AllocatePrivateVirtualInterfaceResponse (Maybe Text)
apvirVirtualInterfaceName :: Lens' AllocatePrivateVirtualInterfaceResponse (Maybe Text)
apvirVirtualInterfaceState :: Lens' AllocatePrivateVirtualInterfaceResponse (Maybe VirtualInterfaceState)
apvirVirtualInterfaceType :: Lens' AllocatePrivateVirtualInterfaceResponse (Maybe Text)
apvirVlan :: Lens' AllocatePrivateVirtualInterfaceResponse (Maybe Int)
instance Eq AllocatePrivateVirtualInterface
instance Read AllocatePrivateVirtualInterface
instance Show AllocatePrivateVirtualInterface
instance Eq AllocatePrivateVirtualInterfaceResponse
instance Read AllocatePrivateVirtualInterfaceResponse
instance Show AllocatePrivateVirtualInterfaceResponse
instance FromJSON AllocatePrivateVirtualInterfaceResponse
instance AWSRequest AllocatePrivateVirtualInterface
instance ToJSON AllocatePrivateVirtualInterface
instance ToHeaders AllocatePrivateVirtualInterface
instance ToQuery AllocatePrivateVirtualInterface
instance ToPath AllocatePrivateVirtualInterface


-- | Creates a hosted connection on an interconnect.
--   
--   Allocates a VLAN number and a specified amount of bandwidth for use by
--   a hosted connection on the given interconnect.
--   
--   
--   <a>http://docs.aws.amazon.com/directconnect/latest/APIReference/API_AllocateConnectionOnInterconnect.html</a>
module Network.AWS.DirectConnect.AllocateConnectionOnInterconnect
data AllocateConnectionOnInterconnect

-- | <a>AllocateConnectionOnInterconnect</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>acoiBandwidth</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>acoiConnectionName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>acoiInterconnectId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>acoiOwnerAccount</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>acoiVlan</a> <tt>::</tt> <a>Int</a></li>
--   </ul>
allocateConnectionOnInterconnect :: Text -> Text -> Text -> Text -> Int -> AllocateConnectionOnInterconnect

-- | Bandwidth of the connection.
--   
--   Example: "<i>500Mbps</i>"
--   
--   Default: None
acoiBandwidth :: Lens' AllocateConnectionOnInterconnect Text

-- | Name of the provisioned connection.
--   
--   Example: "<i>500M Connection to AWS</i>"
--   
--   Default: None
acoiConnectionName :: Lens' AllocateConnectionOnInterconnect Text

-- | ID of the interconnect on which the connection will be provisioned.
--   
--   Example: dxcon-456abc78
--   
--   Default: None
acoiInterconnectId :: Lens' AllocateConnectionOnInterconnect Text

-- | Numeric account Id of the customer for whom the connection will be
--   provisioned.
--   
--   Example: 123443215678
--   
--   Default: None
acoiOwnerAccount :: Lens' AllocateConnectionOnInterconnect Text

-- | The dedicated VLAN provisioned to the connection.
--   
--   Example: 101
--   
--   Default: None
acoiVlan :: Lens' AllocateConnectionOnInterconnect Int
data AllocateConnectionOnInterconnectResponse

-- | <a>AllocateConnectionOnInterconnectResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>acoirBandwidth</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>acoirConnectionId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>acoirConnectionName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>acoirConnectionState</a> <tt>::</tt> <a>Maybe</a>
--   <a>ConnectionState</a></li>
--   <li><a>acoirLocation</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>acoirOwnerAccount</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>acoirPartnerName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>acoirRegion</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>acoirVlan</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   </ul>
allocateConnectionOnInterconnectResponse :: AllocateConnectionOnInterconnectResponse

-- | Bandwidth of the connection.
--   
--   Example: 1Gbps (for regular connections), or 500Mbps (for hosted
--   connections)
--   
--   Default: None
acoirBandwidth :: Lens' AllocateConnectionOnInterconnectResponse (Maybe Text)
acoirConnectionId :: Lens' AllocateConnectionOnInterconnectResponse (Maybe Text)
acoirConnectionName :: Lens' AllocateConnectionOnInterconnectResponse (Maybe Text)
acoirConnectionState :: Lens' AllocateConnectionOnInterconnectResponse (Maybe ConnectionState)
acoirLocation :: Lens' AllocateConnectionOnInterconnectResponse (Maybe Text)
acoirOwnerAccount :: Lens' AllocateConnectionOnInterconnectResponse (Maybe Text)
acoirPartnerName :: Lens' AllocateConnectionOnInterconnectResponse (Maybe Text)
acoirRegion :: Lens' AllocateConnectionOnInterconnectResponse (Maybe Text)
acoirVlan :: Lens' AllocateConnectionOnInterconnectResponse (Maybe Int)
instance Eq AllocateConnectionOnInterconnect
instance Ord AllocateConnectionOnInterconnect
instance Read AllocateConnectionOnInterconnect
instance Show AllocateConnectionOnInterconnect
instance Eq AllocateConnectionOnInterconnectResponse
instance Read AllocateConnectionOnInterconnectResponse
instance Show AllocateConnectionOnInterconnectResponse
instance FromJSON AllocateConnectionOnInterconnectResponse
instance AWSRequest AllocateConnectionOnInterconnect
instance ToJSON AllocateConnectionOnInterconnect
instance ToHeaders AllocateConnectionOnInterconnect
instance ToQuery AllocateConnectionOnInterconnect
instance ToPath AllocateConnectionOnInterconnect


-- | AWS Direct Connect links your internal network to an AWS Direct
--   Connect location over a standard 1 gigabit or 10 gigabit Ethernet
--   fiber-optic cable. One end of the cable is connected to your router,
--   the other to an AWS Direct Connect router. With this connection in
--   place, you can create virtual interfaces directly to the AWS cloud and
--   Amazon Virtual Private Cloud, bypassing Internet service providers in
--   your network path.
module Network.AWS.DirectConnect
