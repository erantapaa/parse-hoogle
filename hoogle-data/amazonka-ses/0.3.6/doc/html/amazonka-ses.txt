-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Amazon Simple Email Service SDK.
--   
@package amazonka-ses
@version 0.3.6

module Network.AWS.SES.Types

-- | Version <tt>2010-12-01</tt> of the Amazon Simple Email Service
--   service.
data SES
data RESTError :: *
ns :: Text
data Destination

-- | <a>Destination</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dBccAddresses</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>dCcAddresses</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>dToAddresses</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
destination :: Destination

-- | The BCC: field(s) of the message.
dBccAddresses :: Lens' Destination [Text]

-- | The CC: field(s) of the message.
dCcAddresses :: Lens' Destination [Text]

-- | The To: field(s) of the message.
dToAddresses :: Lens' Destination [Text]
data IdentityDkimAttributes

-- | <a>IdentityDkimAttributes</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>idaDkimEnabled</a> <tt>::</tt> <a>Bool</a></li>
--   <li><a>idaDkimTokens</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>idaDkimVerificationStatus</a> <tt>::</tt>
--   <a>VerificationStatus</a></li>
--   </ul>
identityDkimAttributes :: Bool -> VerificationStatus -> IdentityDkimAttributes

-- | True if DKIM signing is enabled for email sent from the identity;
--   false otherwise.
idaDkimEnabled :: Lens' IdentityDkimAttributes Bool

-- | A set of character strings that represent the domain's identity. Using
--   these tokens, you will need to create DNS CNAME records that point to
--   DKIM public keys hosted by Amazon SES. Amazon Web Services will
--   eventually detect that you have updated your DNS records; this
--   detection process may take up to 72 hours. Upon successful detection,
--   Amazon SES will be able to DKIM-sign email originating from that
--   domain. (This only applies to domain identities, not email address
--   identities.)
--   
--   For more information about creating DNS records using DKIM tokens, go
--   to the <a>Amazon SES Developer Guide</a>.
idaDkimTokens :: Lens' IdentityDkimAttributes [Text]

-- | Describes whether Amazon SES has successfully verified the DKIM DNS
--   records (tokens) published in the domain name's DNS. (This only
--   applies to domain identities, not email address identities.)
idaDkimVerificationStatus :: Lens' IdentityDkimAttributes VerificationStatus
data Body

-- | <a>Body</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>bHtml</a> <tt>::</tt> <a>Maybe</a> <a>Content</a></li>
--   <li><a>bText</a> <tt>::</tt> <a>Maybe</a> <a>Content</a></li>
--   </ul>
body :: Body

-- | The content of the message, in HTML format. Use this for email clients
--   that can process HTML. You can include clickable links, formatted
--   text, and much more in an HTML message.
bHtml :: Lens' Body (Maybe Content)

-- | The content of the message, in text format. Use this for text-based
--   email clients, or clients on high-latency networks (such as mobile
--   devices).
bText :: Lens' Body (Maybe Content)
data IdentityVerificationAttributes

-- | <a>IdentityVerificationAttributes</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ivaVerificationStatus</a> <tt>::</tt>
--   <a>VerificationStatus</a></li>
--   <li><a>ivaVerificationToken</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
identityVerificationAttributes :: VerificationStatus -> IdentityVerificationAttributes

-- | The verification status of the identity: <a>Pending</a>,
--   <a>Success</a>, <a>Failed</a>, or <a>TemporaryFailure</a>.
ivaVerificationStatus :: Lens' IdentityVerificationAttributes VerificationStatus

-- | The verification token for a domain identity. Null for email address
--   identities.
ivaVerificationToken :: Lens' IdentityVerificationAttributes (Maybe Text)
data SendDataPoint

-- | <a>SendDataPoint</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sdpBounces</a> <tt>::</tt> <a>Maybe</a> <a>Integer</a></li>
--   <li><a>sdpComplaints</a> <tt>::</tt> <a>Maybe</a> <a>Integer</a></li>
--   <li><a>sdpDeliveryAttempts</a> <tt>::</tt> <a>Maybe</a>
--   <a>Integer</a></li>
--   <li><a>sdpRejects</a> <tt>::</tt> <a>Maybe</a> <a>Integer</a></li>
--   <li><a>sdpTimestamp</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   </ul>
sendDataPoint :: SendDataPoint

-- | Number of emails that have bounced.
sdpBounces :: Lens' SendDataPoint (Maybe Integer)

-- | Number of unwanted emails that were rejected by recipients.
sdpComplaints :: Lens' SendDataPoint (Maybe Integer)

-- | Number of emails that have been enqueued for sending.
sdpDeliveryAttempts :: Lens' SendDataPoint (Maybe Integer)

-- | Number of emails rejected by Amazon SES.
sdpRejects :: Lens' SendDataPoint (Maybe Integer)

-- | Time of the data point.
sdpTimestamp :: Lens' SendDataPoint (Maybe UTCTime)
data IdentityType

-- | Domain
ITDomain :: IdentityType

-- | EmailAddress
ITEmailAddress :: IdentityType
data Content

-- | <a>Content</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cCharset</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cData</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
content :: Text -> Content

-- | The character set of the content.
cCharset :: Lens' Content (Maybe Text)

-- | The textual data of the content.
cData :: Lens' Content Text
data IdentityNotificationAttributes

-- | <a>IdentityNotificationAttributes</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>inaBounceTopic</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>inaComplaintTopic</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>inaDeliveryTopic</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>inaForwardingEnabled</a> <tt>::</tt> <a>Bool</a></li>
--   </ul>
identityNotificationAttributes :: Text -> Text -> Text -> Bool -> IdentityNotificationAttributes

-- | The Amazon Resource Name (ARN) of the Amazon SNS topic where Amazon
--   SES will publish bounce notifications.
inaBounceTopic :: Lens' IdentityNotificationAttributes Text

-- | The Amazon Resource Name (ARN) of the Amazon SNS topic where Amazon
--   SES will publish complaint notifications.
inaComplaintTopic :: Lens' IdentityNotificationAttributes Text

-- | The Amazon Resource Name (ARN) of the Amazon SNS topic where Amazon
--   SES will publish delivery notifications.
inaDeliveryTopic :: Lens' IdentityNotificationAttributes Text

-- | Describes whether Amazon SES will forward bounce and complaint
--   notifications as email. <tt>true</tt> indicates that Amazon SES will
--   forward bounce and complaint notifications as email, while
--   <tt>false</tt> indicates that bounce and complaint notifications will
--   be published only to the specified bounce and complaint Amazon SNS
--   topics.
inaForwardingEnabled :: Lens' IdentityNotificationAttributes Bool
data RawMessage

-- | <a>RawMessage</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rmData</a> <tt>::</tt> <a>Base64</a></li>
--   </ul>
rawMessage :: Base64 -> RawMessage

-- | The raw data of the message. The client must ensure that the message
--   format complies with Internet email standards regarding email header
--   fields, MIME types, MIME encoding, and base64 encoding (if necessary).
--   
--   The To:, CC:, and BCC: headers in the raw message can contain a group
--   list.
--   
--   For more information, go to the <a>Amazon SES Developer Guide</a>.
rmData :: Lens' RawMessage Base64
data NotificationType

-- | Bounce
Bounce :: NotificationType

-- | Complaint
Complaint :: NotificationType

-- | Delivery
Delivery :: NotificationType
data VerificationStatus

-- | Failed
Failed :: VerificationStatus

-- | NotStarted
NotStarted :: VerificationStatus

-- | Pending
Pending :: VerificationStatus

-- | Success
Success :: VerificationStatus

-- | TemporaryFailure
TemporaryFailure :: VerificationStatus
data Message

-- | <a>Message</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>mBody</a> <tt>::</tt> <a>Body</a></li>
--   <li><a>mSubject</a> <tt>::</tt> <a>Content</a></li>
--   </ul>
message :: Content -> Body -> Message

-- | The message body.
mBody :: Lens' Message Body

-- | The subject of the message: A short summary of the content, which will
--   appear in the recipient's inbox.
mSubject :: Lens' Message Content
instance Eq Destination
instance Ord Destination
instance Read Destination
instance Show Destination
instance Eq SendDataPoint
instance Ord SendDataPoint
instance Read SendDataPoint
instance Show SendDataPoint
instance Eq IdentityType
instance Ord IdentityType
instance Read IdentityType
instance Show IdentityType
instance Generic IdentityType
instance Enum IdentityType
instance Eq Content
instance Ord Content
instance Read Content
instance Show Content
instance Eq Body
instance Read Body
instance Show Body
instance Eq IdentityNotificationAttributes
instance Ord IdentityNotificationAttributes
instance Read IdentityNotificationAttributes
instance Show IdentityNotificationAttributes
instance Eq RawMessage
instance Read RawMessage
instance Show RawMessage
instance Eq NotificationType
instance Ord NotificationType
instance Read NotificationType
instance Show NotificationType
instance Generic NotificationType
instance Enum NotificationType
instance Eq VerificationStatus
instance Ord VerificationStatus
instance Read VerificationStatus
instance Show VerificationStatus
instance Generic VerificationStatus
instance Enum VerificationStatus
instance Eq IdentityVerificationAttributes
instance Read IdentityVerificationAttributes
instance Show IdentityVerificationAttributes
instance Eq IdentityDkimAttributes
instance Read IdentityDkimAttributes
instance Show IdentityDkimAttributes
instance Eq Message
instance Read Message
instance Show Message
instance Datatype D1IdentityType
instance Constructor C1_0IdentityType
instance Constructor C1_1IdentityType
instance Datatype D1NotificationType
instance Constructor C1_0NotificationType
instance Constructor C1_1NotificationType
instance Constructor C1_2NotificationType
instance Datatype D1VerificationStatus
instance Constructor C1_0VerificationStatus
instance Constructor C1_1VerificationStatus
instance Constructor C1_2VerificationStatus
instance Constructor C1_3VerificationStatus
instance Constructor C1_4VerificationStatus
instance ToQuery Message
instance FromXML Message
instance FromXML VerificationStatus
instance ToQuery VerificationStatus
instance ToHeader VerificationStatus
instance ToByteString VerificationStatus
instance ToText VerificationStatus
instance FromText VerificationStatus
instance Hashable VerificationStatus
instance FromXML NotificationType
instance ToQuery NotificationType
instance ToHeader NotificationType
instance ToByteString NotificationType
instance ToText NotificationType
instance FromText NotificationType
instance Hashable NotificationType
instance ToQuery RawMessage
instance FromXML RawMessage
instance ToQuery IdentityNotificationAttributes
instance FromXML IdentityNotificationAttributes
instance ToQuery Content
instance FromXML Content
instance FromXML IdentityType
instance ToQuery IdentityType
instance ToHeader IdentityType
instance ToByteString IdentityType
instance ToText IdentityType
instance FromText IdentityType
instance Hashable IdentityType
instance ToQuery SendDataPoint
instance FromXML SendDataPoint
instance ToQuery IdentityVerificationAttributes
instance FromXML IdentityVerificationAttributes
instance ToQuery Body
instance FromXML Body
instance ToQuery IdentityDkimAttributes
instance FromXML IdentityDkimAttributes
instance ToQuery Destination
instance FromXML Destination
instance AWSService SES


-- | Returns a set of DKIM tokens for a domain. DKIM <i>tokens</i> are
--   character strings that represent your domain's identity. Using these
--   tokens, you will need to create DNS CNAME records that point to DKIM
--   public keys hosted by Amazon SES. Amazon Web Services will eventually
--   detect that you have updated your DNS records; this detection process
--   may take up to 72 hours. Upon successful detection, Amazon SES will be
--   able to DKIM-sign email originating from that domain.
--   
--   This action is throttled at one request per second.
--   
--   To enable or disable Easy DKIM signing for a domain, use the
--   <tt>SetIdentityDkimEnabled</tt> action.
--   
--   For more information about creating DNS records using DKIM tokens, go
--   to the <a>Amazon SES Developer Guide</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/ses/latest/APIReference/API_VerifyDomainDkim.html</a>
module Network.AWS.SES.VerifyDomainDkim
data VerifyDomainDkim

-- | <a>VerifyDomainDkim</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vddDomain</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
verifyDomainDkim :: Text -> VerifyDomainDkim

-- | The name of the domain to be verified for Easy DKIM signing.
vddDomain :: Lens' VerifyDomainDkim Text
data VerifyDomainDkimResponse

-- | <a>VerifyDomainDkimResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vddrDkimTokens</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
verifyDomainDkimResponse :: VerifyDomainDkimResponse

-- | A set of character strings that represent the domain's identity. If
--   the identity is an email address, the tokens represent the domain of
--   that address.
--   
--   Using these tokens, you will need to create DNS CNAME records that
--   point to DKIM public keys hosted by Amazon SES. Amazon Web Services
--   will eventually detect that you have updated your DNS records; this
--   detection process may take up to 72 hours. Upon successful detection,
--   Amazon SES will be able to DKIM-sign emails originating from that
--   domain.
--   
--   For more information about creating DNS records using DKIM tokens, go
--   to the <a>Amazon SES Developer Guide</a>.
vddrDkimTokens :: Lens' VerifyDomainDkimResponse [Text]
instance Eq VerifyDomainDkim
instance Ord VerifyDomainDkim
instance Read VerifyDomainDkim
instance Show VerifyDomainDkim
instance Monoid VerifyDomainDkim
instance IsString VerifyDomainDkim
instance Eq VerifyDomainDkimResponse
instance Ord VerifyDomainDkimResponse
instance Read VerifyDomainDkimResponse
instance Show VerifyDomainDkimResponse
instance Monoid VerifyDomainDkimResponse
instance Semigroup VerifyDomainDkimResponse
instance FromXML VerifyDomainDkimResponse
instance AWSRequest VerifyDomainDkim
instance ToHeaders VerifyDomainDkim
instance ToQuery VerifyDomainDkim
instance ToPath VerifyDomainDkim
instance IsList VerifyDomainDkimResponse


-- | Verifies a domain.
--   
--   This action is throttled at one request per second.
--   
--   
--   <a>http://docs.aws.amazon.com/ses/latest/APIReference/API_VerifyDomainIdentity.html</a>
module Network.AWS.SES.VerifyDomainIdentity
data VerifyDomainIdentity

-- | <a>VerifyDomainIdentity</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vdiDomain</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
verifyDomainIdentity :: Text -> VerifyDomainIdentity

-- | The domain to be verified.
vdiDomain :: Lens' VerifyDomainIdentity Text
data VerifyDomainIdentityResponse

-- | <a>VerifyDomainIdentityResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vdirVerificationToken</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
verifyDomainIdentityResponse :: Text -> VerifyDomainIdentityResponse

-- | A TXT record that must be placed in the DNS settings for the domain,
--   in order to complete domain verification.
vdirVerificationToken :: Lens' VerifyDomainIdentityResponse Text
instance Eq VerifyDomainIdentity
instance Ord VerifyDomainIdentity
instance Read VerifyDomainIdentity
instance Show VerifyDomainIdentity
instance Monoid VerifyDomainIdentity
instance IsString VerifyDomainIdentity
instance Eq VerifyDomainIdentityResponse
instance Ord VerifyDomainIdentityResponse
instance Read VerifyDomainIdentityResponse
instance Show VerifyDomainIdentityResponse
instance Monoid VerifyDomainIdentityResponse
instance IsString VerifyDomainIdentityResponse
instance FromXML VerifyDomainIdentityResponse
instance AWSRequest VerifyDomainIdentity
instance ToHeaders VerifyDomainIdentity
instance ToQuery VerifyDomainIdentity
instance ToPath VerifyDomainIdentity


-- | Verifies an email address. This action causes a confirmation email
--   message to be sent to the specified address.
--   
--   The VerifyEmailAddress action is deprecated as of the May 15, 2012
--   release of Domain Verification. The VerifyEmailIdentity action is now
--   preferred. This action is throttled at one request per second.
--   
--   
--   <a>http://docs.aws.amazon.com/ses/latest/APIReference/API_VerifyEmailAddress.html</a>
module Network.AWS.SES.VerifyEmailAddress
data VerifyEmailAddress

-- | <a>VerifyEmailAddress</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>veaEmailAddress</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
verifyEmailAddress :: Text -> VerifyEmailAddress

-- | The email address to be verified.
veaEmailAddress :: Lens' VerifyEmailAddress Text
data VerifyEmailAddressResponse

-- | <a>VerifyEmailAddressResponse</a> constructor.
verifyEmailAddressResponse :: VerifyEmailAddressResponse
instance Eq VerifyEmailAddress
instance Ord VerifyEmailAddress
instance Read VerifyEmailAddress
instance Show VerifyEmailAddress
instance Monoid VerifyEmailAddress
instance IsString VerifyEmailAddress
instance Eq VerifyEmailAddressResponse
instance Ord VerifyEmailAddressResponse
instance Read VerifyEmailAddressResponse
instance Show VerifyEmailAddressResponse
instance Generic VerifyEmailAddressResponse
instance Datatype D1VerifyEmailAddressResponse
instance Constructor C1_0VerifyEmailAddressResponse
instance AWSRequest VerifyEmailAddress
instance ToHeaders VerifyEmailAddress
instance ToQuery VerifyEmailAddress
instance ToPath VerifyEmailAddress


-- | Verifies an email address. This action causes a confirmation email
--   message to be sent to the specified address.
--   
--   This action is throttled at one request per second.
--   
--   
--   <a>http://docs.aws.amazon.com/ses/latest/APIReference/API_VerifyEmailIdentity.html</a>
module Network.AWS.SES.VerifyEmailIdentity
data VerifyEmailIdentity

-- | <a>VerifyEmailIdentity</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>veiEmailAddress</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
verifyEmailIdentity :: Text -> VerifyEmailIdentity

-- | The email address to be verified.
veiEmailAddress :: Lens' VerifyEmailIdentity Text
data VerifyEmailIdentityResponse

-- | <a>VerifyEmailIdentityResponse</a> constructor.
verifyEmailIdentityResponse :: VerifyEmailIdentityResponse
instance Eq VerifyEmailIdentity
instance Ord VerifyEmailIdentity
instance Read VerifyEmailIdentity
instance Show VerifyEmailIdentity
instance Monoid VerifyEmailIdentity
instance IsString VerifyEmailIdentity
instance Eq VerifyEmailIdentityResponse
instance Ord VerifyEmailIdentityResponse
instance Read VerifyEmailIdentityResponse
instance Show VerifyEmailIdentityResponse
instance Generic VerifyEmailIdentityResponse
instance Datatype D1VerifyEmailIdentityResponse
instance Constructor C1_0VerifyEmailIdentityResponse
instance AWSRequest VerifyEmailIdentity
instance ToHeaders VerifyEmailIdentity
instance ToQuery VerifyEmailIdentity
instance ToPath VerifyEmailIdentity


-- | Given an identity (email address or domain), sets the Amazon Simple
--   Notification Service (Amazon SNS) topic to which Amazon SES will
--   publish bounce, complaint, and/or delivery notifications for emails
--   sent with that identity as the <tt>Source</tt>.
--   
--   Unless feedback forwarding is enabled, you must specify Amazon SNS
--   topics for bounce and complaint notifications. For more information,
--   see <tt>SetIdentityFeedbackForwardingEnabled</tt>. This action is
--   throttled at one request per second.
--   
--   For more information about feedback notification, see the <a>Amazon
--   SESDeveloper Guide</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/ses/latest/APIReference/API_SetIdentityNotificationTopic.html</a>
module Network.AWS.SES.SetIdentityNotificationTopic
data SetIdentityNotificationTopic

-- | <a>SetIdentityNotificationTopic</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sintIdentity</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>sintNotificationType</a> <tt>::</tt>
--   <a>NotificationType</a></li>
--   <li><a>sintSnsTopic</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
setIdentityNotificationTopic :: Text -> NotificationType -> SetIdentityNotificationTopic

-- | The identity for which the Amazon SNS topic will be set. Examples:
--   'user@example.com', 'example.com'.
sintIdentity :: Lens' SetIdentityNotificationTopic Text

-- | The type of notifications that will be published to the specified
--   Amazon SNS topic.
sintNotificationType :: Lens' SetIdentityNotificationTopic NotificationType

-- | The Amazon Resource Name (ARN) of the Amazon SNS topic. If the
--   parameter is omitted from the request or a null value is passed,
--   <tt>SnsTopic</tt> is cleared and publishing is disabled.
sintSnsTopic :: Lens' SetIdentityNotificationTopic (Maybe Text)
data SetIdentityNotificationTopicResponse

-- | <a>SetIdentityNotificationTopicResponse</a> constructor.
setIdentityNotificationTopicResponse :: SetIdentityNotificationTopicResponse
instance Eq SetIdentityNotificationTopic
instance Read SetIdentityNotificationTopic
instance Show SetIdentityNotificationTopic
instance Eq SetIdentityNotificationTopicResponse
instance Ord SetIdentityNotificationTopicResponse
instance Read SetIdentityNotificationTopicResponse
instance Show SetIdentityNotificationTopicResponse
instance Generic SetIdentityNotificationTopicResponse
instance Datatype D1SetIdentityNotificationTopicResponse
instance Constructor C1_0SetIdentityNotificationTopicResponse
instance AWSRequest SetIdentityNotificationTopic
instance ToHeaders SetIdentityNotificationTopic
instance ToQuery SetIdentityNotificationTopic
instance ToPath SetIdentityNotificationTopic


-- | Given an identity (email address or domain), enables or disables
--   whether Amazon SES forwards bounce and complaint notifications as
--   email. Feedback forwarding can only be disabled when Amazon Simple
--   Notification Service (Amazon SNS) topics are specified for both
--   bounces and complaints.
--   
--   Feedback forwarding does not apply to delivery notifications. Delivery
--   notifications are only available through Amazon SNS. This action is
--   throttled at one request per second.
--   
--   For more information about using notifications with Amazon SES, see
--   the <a>Amazon SES Developer Guide</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/ses/latest/APIReference/API_SetIdentityFeedbackForwardingEnabled.html</a>
module Network.AWS.SES.SetIdentityFeedbackForwardingEnabled
data SetIdentityFeedbackForwardingEnabled

-- | <a>SetIdentityFeedbackForwardingEnabled</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>siffeForwardingEnabled</a> <tt>::</tt> <a>Bool</a></li>
--   <li><a>siffeIdentity</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
setIdentityFeedbackForwardingEnabled :: Text -> Bool -> SetIdentityFeedbackForwardingEnabled

-- | Sets whether Amazon SES will forward bounce and complaint
--   notifications as email. <tt>true</tt> specifies that Amazon SES will
--   forward bounce and complaint notifications as email, in addition to
--   any Amazon SNS topic publishing otherwise specified. <tt>false</tt>
--   specifies that Amazon SES will publish bounce and complaint
--   notifications only through Amazon SNS. This value can only be set to
--   <tt>false</tt> when Amazon SNS topics are set for both <a>Bounce</a>
--   and <a>Complaint</a> notification types.
siffeForwardingEnabled :: Lens' SetIdentityFeedbackForwardingEnabled Bool

-- | The identity for which to set bounce and complaint notification
--   forwarding. Examples: 'user@example.com', 'example.com'.
siffeIdentity :: Lens' SetIdentityFeedbackForwardingEnabled Text
data SetIdentityFeedbackForwardingEnabledResponse

-- | <a>SetIdentityFeedbackForwardingEnabledResponse</a> constructor.
setIdentityFeedbackForwardingEnabledResponse :: SetIdentityFeedbackForwardingEnabledResponse
instance Eq SetIdentityFeedbackForwardingEnabled
instance Ord SetIdentityFeedbackForwardingEnabled
instance Read SetIdentityFeedbackForwardingEnabled
instance Show SetIdentityFeedbackForwardingEnabled
instance Eq SetIdentityFeedbackForwardingEnabledResponse
instance Ord SetIdentityFeedbackForwardingEnabledResponse
instance Read SetIdentityFeedbackForwardingEnabledResponse
instance Show SetIdentityFeedbackForwardingEnabledResponse
instance Generic SetIdentityFeedbackForwardingEnabledResponse
instance Datatype D1SetIdentityFeedbackForwardingEnabledResponse
instance Constructor C1_0SetIdentityFeedbackForwardingEnabledResponse
instance AWSRequest SetIdentityFeedbackForwardingEnabled
instance ToHeaders SetIdentityFeedbackForwardingEnabled
instance ToQuery SetIdentityFeedbackForwardingEnabled
instance ToPath SetIdentityFeedbackForwardingEnabled


-- | Enables or disables Easy DKIM signing of email sent from an identity:
--   
--   If Easy DKIM signing is enabled for a domain name identity (e.g.,
--   'example.com'), then Amazon SES will DKIM-sign all email sent by
--   addresses under that domain name (e.g., 'user@example.com'). If Easy
--   DKIM signing is enabled for an email address, then Amazon SES will
--   DKIM-sign all email sent by that email address. For email addresses
--   (e.g., 'user@example.com'), you can only enable Easy DKIM signing if
--   the corresponding domain (e.g., 'example.com') has been set up for
--   Easy DKIM using the AWS Console or the <tt>VerifyDomainDkim</tt>
--   action.
--   
--   This action is throttled at one request per second.
--   
--   For more information about Easy DKIM signing, go to the <a>Amazon SES
--   DeveloperGuide</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/ses/latest/APIReference/API_SetIdentityDkimEnabled.html</a>
module Network.AWS.SES.SetIdentityDkimEnabled
data SetIdentityDkimEnabled

-- | <a>SetIdentityDkimEnabled</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sideDkimEnabled</a> <tt>::</tt> <a>Bool</a></li>
--   <li><a>sideIdentity</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
setIdentityDkimEnabled :: Text -> Bool -> SetIdentityDkimEnabled

-- | Sets whether DKIM signing is enabled for an identity. Set to
--   <tt>true</tt> to enable DKIM signing for this identity; <tt>false</tt>
--   to disable it.
sideDkimEnabled :: Lens' SetIdentityDkimEnabled Bool

-- | The identity for which DKIM signing should be enabled or disabled.
sideIdentity :: Lens' SetIdentityDkimEnabled Text
data SetIdentityDkimEnabledResponse

-- | <a>SetIdentityDkimEnabledResponse</a> constructor.
setIdentityDkimEnabledResponse :: SetIdentityDkimEnabledResponse
instance Eq SetIdentityDkimEnabled
instance Ord SetIdentityDkimEnabled
instance Read SetIdentityDkimEnabled
instance Show SetIdentityDkimEnabled
instance Eq SetIdentityDkimEnabledResponse
instance Ord SetIdentityDkimEnabledResponse
instance Read SetIdentityDkimEnabledResponse
instance Show SetIdentityDkimEnabledResponse
instance Generic SetIdentityDkimEnabledResponse
instance Datatype D1SetIdentityDkimEnabledResponse
instance Constructor C1_0SetIdentityDkimEnabledResponse
instance AWSRequest SetIdentityDkimEnabled
instance ToHeaders SetIdentityDkimEnabled
instance ToQuery SetIdentityDkimEnabled
instance ToPath SetIdentityDkimEnabled


-- | Sends an email message, with header and content specified by the
--   client. The <a>SendRawEmail</a> action is useful for sending multipart
--   MIME emails. The raw text of the message must comply with Internet
--   email standards; otherwise, the message cannot be sent.
--   
--   You can only send email from verified email addresses and domains. If
--   your account is still in the Amazon SES sandbox, you must also verify
--   every recipient email address except for the recipients provided by
--   the Amazon SES mailbox simulator. For more information, go to the
--   <a>Amazon SES Developer Guide</a>. The total size of the message
--   cannot exceed 10 MB. This includes any attachments that are part of
--   the message.
--   
--   Amazon SES has a limit on the total number of recipients per message:
--   The combined number of To:, CC: and BCC: email addresses cannot exceed
--   50. If you need to send an email message to a larger audience, you can
--   divide your recipient list into groups of 50 or fewer, and then call
--   Amazon SES repeatedly to send the message to each group.
--   
--   The To:, CC:, and BCC: headers in the raw message can contain a group
--   list. Note that each recipient in a group list counts towards the
--   50-recipient limit.
--   
--   For every message that you send, the total number of recipients (To:,
--   CC: and BCC:) is counted against your <i>sending quota</i> - the
--   maximum number of emails you can send in a 24-hour period. For
--   information about your sending quota, go to the <a>Amazon SES
--   Developer Guide</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/ses/latest/APIReference/API_SendRawEmail.html</a>
module Network.AWS.SES.SendRawEmail
data SendRawEmail

-- | <a>SendRawEmail</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sreDestinations</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>sreRawMessage</a> <tt>::</tt> <a>RawMessage</a></li>
--   <li><a>sreSource</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
sendRawEmail :: RawMessage -> SendRawEmail

-- | A list of destinations for the message, consisting of To:, CC:, and
--   BCC: addresses.
sreDestinations :: Lens' SendRawEmail [Text]

-- | The raw text of the message. The client is responsible for ensuring
--   the following:
--   
--   Message must contain a header and a body, separated by a blank line.
--   All required header fields must be present. Each part of a multipart
--   MIME message must be formatted properly. MIME content types must be
--   among those supported by Amazon SES. For more information, go to the
--   <a>Amazon SES Developer Guide</a>. Content must be base64-encoded, if
--   MIME requires it.
sreRawMessage :: Lens' SendRawEmail RawMessage

-- | The identity's email address. If you do not provide a value for this
--   parameter, you must specify a <a>From</a> address in the raw text of
--   the message. (You can also specify both.)
--   
--   By default, the string must be 7-bit ASCII. If the text must contain
--   any other characters, then you must use MIME encoded-word syntax (RFC
--   2047) instead of a literal string. MIME encoded-word syntax uses the
--   following form: '=?charset?encoding?encoded-text?='. For more
--   information, see <a>RFC 2047</a>.
--   
--   If you specify the <tt>Source</tt> parameter and have feedback
--   forwarding enabled, then bounces and complaints will be sent to this
--   email address. This takes precedence over any <i>Return-Path</i>
--   header that you might include in the raw text of the message.
sreSource :: Lens' SendRawEmail (Maybe Text)
data SendRawEmailResponse

-- | <a>SendRawEmailResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>srerMessageId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
sendRawEmailResponse :: Text -> SendRawEmailResponse

-- | The unique message identifier returned from the <a>SendRawEmail</a>
--   action.
srerMessageId :: Lens' SendRawEmailResponse Text
instance Eq SendRawEmail
instance Read SendRawEmail
instance Show SendRawEmail
instance Eq SendRawEmailResponse
instance Ord SendRawEmailResponse
instance Read SendRawEmailResponse
instance Show SendRawEmailResponse
instance Monoid SendRawEmailResponse
instance IsString SendRawEmailResponse
instance FromXML SendRawEmailResponse
instance AWSRequest SendRawEmail
instance ToHeaders SendRawEmail
instance ToQuery SendRawEmail
instance ToPath SendRawEmail


-- | Composes an email message based on input data, and then immediately
--   queues the message for sending.
--   
--   You can only send email from verified email addresses and domains. If
--   your account is still in the Amazon SES sandbox, you must also verify
--   every recipient email address except for the recipients provided by
--   the Amazon SES mailbox simulator. For more information, go to the
--   <a>Amazon SES Developer Guide</a>. The total size of the message
--   cannot exceed 10 MB.
--   
--   Amazon SES has a limit on the total number of recipients per message:
--   The combined number of To:, CC: and BCC: email addresses cannot exceed
--   50. If you need to send an email message to a larger audience, you can
--   divide your recipient list into groups of 50 or fewer, and then call
--   Amazon SES repeatedly to send the message to each group.
--   
--   For every message that you send, the total number of recipients (To:,
--   CC: and BCC:) is counted against your <i>sending quota</i> - the
--   maximum number of emails you can send in a 24-hour period. For
--   information about your sending quota, go to the <a>Amazon SES
--   Developer Guide</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/ses/latest/APIReference/API_SendEmail.html</a>
module Network.AWS.SES.SendEmail
data SendEmail

-- | <a>SendEmail</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>seDestination</a> <tt>::</tt> <a>Destination</a></li>
--   <li><a>seMessage</a> <tt>::</tt> <a>Message</a></li>
--   <li><a>seReplyToAddresses</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>seReturnPath</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>seSource</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
sendEmail :: Text -> Destination -> Message -> SendEmail

-- | The destination for this email, composed of To:, CC:, and BCC: fields.
seDestination :: Lens' SendEmail Destination

-- | The message to be sent.
seMessage :: Lens' SendEmail Message

-- | The reply-to email address(es) for the message. If the recipient
--   replies to the message, each reply-to address will receive the reply.
seReplyToAddresses :: Lens' SendEmail [Text]

-- | The email address to which bounces and complaints are to be forwarded
--   when feedback forwarding is enabled. If the message cannot be
--   delivered to the recipient, then an error message will be returned
--   from the recipient's ISP; this message will then be forwarded to the
--   email address specified by the <tt>ReturnPath</tt> parameter. The
--   <tt>ReturnPath</tt> parameter is never overwritten. This email address
--   must be either individually verified with Amazon SES, or from a domain
--   that has been verified with Amazon SES.
seReturnPath :: Lens' SendEmail (Maybe Text)

-- | The identity's email address.
--   
--   By default, the string must be 7-bit ASCII. If the text must contain
--   any other characters, then you must use MIME encoded-word syntax (RFC
--   2047) instead of a literal string. MIME encoded-word syntax uses the
--   following form: '=?charset?encoding?encoded-text?='. For more
--   information, see <a>RFC 2047</a>.
seSource :: Lens' SendEmail Text
data SendEmailResponse

-- | <a>SendEmailResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>serMessageId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
sendEmailResponse :: Text -> SendEmailResponse

-- | The unique message identifier returned from the <a>SendEmail</a>
--   action.
serMessageId :: Lens' SendEmailResponse Text
instance Eq SendEmail
instance Read SendEmail
instance Show SendEmail
instance Eq SendEmailResponse
instance Ord SendEmailResponse
instance Read SendEmailResponse
instance Show SendEmailResponse
instance Monoid SendEmailResponse
instance IsString SendEmailResponse
instance FromXML SendEmailResponse
instance AWSRequest SendEmail
instance ToHeaders SendEmail
instance ToQuery SendEmail
instance ToPath SendEmail


-- | Returns a list containing all of the email addresses that have been
--   verified.
--   
--   The ListVerifiedEmailAddresses action is deprecated as of the May 15,
--   2012 release of Domain Verification. The ListIdentities action is now
--   preferred. This action is throttled at one request per second.
--   
--   
--   <a>http://docs.aws.amazon.com/ses/latest/APIReference/API_ListVerifiedEmailAddresses.html</a>
module Network.AWS.SES.ListVerifiedEmailAddresses
data ListVerifiedEmailAddresses

-- | <a>ListVerifiedEmailAddresses</a> constructor.
listVerifiedEmailAddresses :: ListVerifiedEmailAddresses
data ListVerifiedEmailAddressesResponse

-- | <a>ListVerifiedEmailAddressesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lvearVerifiedEmailAddresses</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
listVerifiedEmailAddressesResponse :: ListVerifiedEmailAddressesResponse

-- | A list of email addresses that have been verified.
lvearVerifiedEmailAddresses :: Lens' ListVerifiedEmailAddressesResponse [Text]
instance Eq ListVerifiedEmailAddresses
instance Ord ListVerifiedEmailAddresses
instance Read ListVerifiedEmailAddresses
instance Show ListVerifiedEmailAddresses
instance Generic ListVerifiedEmailAddresses
instance Eq ListVerifiedEmailAddressesResponse
instance Ord ListVerifiedEmailAddressesResponse
instance Read ListVerifiedEmailAddressesResponse
instance Show ListVerifiedEmailAddressesResponse
instance Monoid ListVerifiedEmailAddressesResponse
instance Semigroup ListVerifiedEmailAddressesResponse
instance Datatype D1ListVerifiedEmailAddresses
instance Constructor C1_0ListVerifiedEmailAddresses
instance FromXML ListVerifiedEmailAddressesResponse
instance AWSRequest ListVerifiedEmailAddresses
instance ToHeaders ListVerifiedEmailAddresses
instance ToQuery ListVerifiedEmailAddresses
instance ToPath ListVerifiedEmailAddresses
instance IsList ListVerifiedEmailAddressesResponse


-- | Returns a list containing all of the identities (email addresses and
--   domains) for a specific AWS Account, regardless of verification
--   status.
--   
--   This action is throttled at one request per second.
--   
--   
--   <a>http://docs.aws.amazon.com/ses/latest/APIReference/API_ListIdentities.html</a>
module Network.AWS.SES.ListIdentities
data ListIdentities

-- | <a>ListIdentities</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>liIdentityType</a> <tt>::</tt> <a>Maybe</a>
--   <a>IdentityType</a></li>
--   <li><a>liMaxItems</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>liNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listIdentities :: ListIdentities

-- | The type of the identities to list. Possible values are
--   <a>EmailAddress</a> and <a>Domain</a>. If this parameter is omitted,
--   then all identities will be listed.
liIdentityType :: Lens' ListIdentities (Maybe IdentityType)

-- | The maximum number of identities per page. Possible values are 1-1000
--   inclusive.
liMaxItems :: Lens' ListIdentities (Maybe Int)

-- | The token to use for pagination.
liNextToken :: Lens' ListIdentities (Maybe Text)
data ListIdentitiesResponse

-- | <a>ListIdentitiesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lirIdentities</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>lirNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listIdentitiesResponse :: ListIdentitiesResponse

-- | A list of identities.
lirIdentities :: Lens' ListIdentitiesResponse [Text]

-- | The token used for pagination.
lirNextToken :: Lens' ListIdentitiesResponse (Maybe Text)
instance Eq ListIdentities
instance Read ListIdentities
instance Show ListIdentities
instance Eq ListIdentitiesResponse
instance Ord ListIdentitiesResponse
instance Read ListIdentitiesResponse
instance Show ListIdentitiesResponse
instance AWSPager ListIdentities
instance FromXML ListIdentitiesResponse
instance AWSRequest ListIdentities
instance ToHeaders ListIdentities
instance ToQuery ListIdentities
instance ToPath ListIdentities


-- | Returns the user's sending statistics. The result is a list of data
--   points, representing the last two weeks of sending activity.
--   
--   Each data point in the list contains statistics for a 15-minute
--   interval.
--   
--   This action is throttled at one request per second.
--   
--   
--   <a>http://docs.aws.amazon.com/ses/latest/APIReference/API_GetSendStatistics.html</a>
module Network.AWS.SES.GetSendStatistics
data GetSendStatistics

-- | <a>GetSendStatistics</a> constructor.
getSendStatistics :: GetSendStatistics
data GetSendStatisticsResponse

-- | <a>GetSendStatisticsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gssrSendDataPoints</a> <tt>::</tt> [<a>SendDataPoint</a>]</li>
--   </ul>
getSendStatisticsResponse :: GetSendStatisticsResponse

-- | A list of data points, each of which represents 15 minutes of
--   activity.
gssrSendDataPoints :: Lens' GetSendStatisticsResponse [SendDataPoint]
instance Eq GetSendStatistics
instance Ord GetSendStatistics
instance Read GetSendStatistics
instance Show GetSendStatistics
instance Generic GetSendStatistics
instance Eq GetSendStatisticsResponse
instance Read GetSendStatisticsResponse
instance Show GetSendStatisticsResponse
instance Monoid GetSendStatisticsResponse
instance Semigroup GetSendStatisticsResponse
instance Datatype D1GetSendStatistics
instance Constructor C1_0GetSendStatistics
instance FromXML GetSendStatisticsResponse
instance AWSRequest GetSendStatistics
instance ToHeaders GetSendStatistics
instance ToQuery GetSendStatistics
instance ToPath GetSendStatistics
instance IsList GetSendStatisticsResponse


-- | Returns the user's current sending limits.
--   
--   This action is throttled at one request per second.
--   
--   
--   <a>http://docs.aws.amazon.com/ses/latest/APIReference/API_GetSendQuota.html</a>
module Network.AWS.SES.GetSendQuota
data GetSendQuota

-- | <a>GetSendQuota</a> constructor.
getSendQuota :: GetSendQuota
data GetSendQuotaResponse

-- | <a>GetSendQuotaResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gsqrMax24HourSend</a> <tt>::</tt> <a>Maybe</a>
--   <a>Double</a></li>
--   <li><a>gsqrMaxSendRate</a> <tt>::</tt> <a>Maybe</a> <a>Double</a></li>
--   <li><a>gsqrSentLast24Hours</a> <tt>::</tt> <a>Maybe</a>
--   <a>Double</a></li>
--   </ul>
getSendQuotaResponse :: GetSendQuotaResponse

-- | The maximum number of emails the user is allowed to send in a 24-hour
--   interval. A value of -1 signifies an unlimited quota.
gsqrMax24HourSend :: Lens' GetSendQuotaResponse (Maybe Double)

-- | The maximum number of emails that Amazon SES can accept from the
--   user's account per second.
--   
--   The rate at which Amazon SES accepts the user's messages might be less
--   than the maximum send rate.
gsqrMaxSendRate :: Lens' GetSendQuotaResponse (Maybe Double)

-- | The number of emails sent during the previous 24 hours.
gsqrSentLast24Hours :: Lens' GetSendQuotaResponse (Maybe Double)
instance Eq GetSendQuota
instance Ord GetSendQuota
instance Read GetSendQuota
instance Show GetSendQuota
instance Generic GetSendQuota
instance Eq GetSendQuotaResponse
instance Ord GetSendQuotaResponse
instance Read GetSendQuotaResponse
instance Show GetSendQuotaResponse
instance Datatype D1GetSendQuota
instance Constructor C1_0GetSendQuota
instance FromXML GetSendQuotaResponse
instance AWSRequest GetSendQuota
instance ToHeaders GetSendQuota
instance ToQuery GetSendQuota
instance ToPath GetSendQuota


-- | Given a list of identities (email addresses and/or domains), returns
--   the verification status and (for domain identities) the verification
--   token for each identity.
--   
--   This action is throttled at one request per second and can only get
--   verification attributes for up to 100 identities at a time.
--   
--   
--   <a>http://docs.aws.amazon.com/ses/latest/APIReference/API_GetIdentityVerificationAttributes.html</a>
module Network.AWS.SES.GetIdentityVerificationAttributes
data GetIdentityVerificationAttributes

-- | <a>GetIdentityVerificationAttributes</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>givaIdentities</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
getIdentityVerificationAttributes :: GetIdentityVerificationAttributes

-- | A list of identities.
givaIdentities :: Lens' GetIdentityVerificationAttributes [Text]
data GetIdentityVerificationAttributesResponse

-- | <a>GetIdentityVerificationAttributesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>givarVerificationAttributes</a> <tt>::</tt> <a>HashMap</a>
--   <a>Text</a> <a>IdentityVerificationAttributes</a></li>
--   </ul>
getIdentityVerificationAttributesResponse :: GetIdentityVerificationAttributesResponse

-- | A map of Identities to IdentityVerificationAttributes objects.
givarVerificationAttributes :: Lens' GetIdentityVerificationAttributesResponse (HashMap Text IdentityVerificationAttributes)
instance Eq GetIdentityVerificationAttributes
instance Ord GetIdentityVerificationAttributes
instance Read GetIdentityVerificationAttributes
instance Show GetIdentityVerificationAttributes
instance Monoid GetIdentityVerificationAttributes
instance Semigroup GetIdentityVerificationAttributes
instance Eq GetIdentityVerificationAttributesResponse
instance Read GetIdentityVerificationAttributesResponse
instance Show GetIdentityVerificationAttributesResponse
instance Monoid GetIdentityVerificationAttributesResponse
instance Semigroup GetIdentityVerificationAttributesResponse
instance FromXML GetIdentityVerificationAttributesResponse
instance AWSRequest GetIdentityVerificationAttributes
instance ToHeaders GetIdentityVerificationAttributes
instance ToQuery GetIdentityVerificationAttributes
instance ToPath GetIdentityVerificationAttributes
instance IsList GetIdentityVerificationAttributes

module Network.AWS.SES.Waiters
identityExists :: Wait GetIdentityVerificationAttributes


-- | Given a list of verified identities (email addresses and/or domains),
--   returns a structure describing identity notification attributes.
--   
--   This action is throttled at one request per second and can only get
--   notification attributes for up to 100 identities at a time.
--   
--   For more information about using notifications with Amazon SES, see
--   the <a>Amazon SES Developer Guide</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/ses/latest/APIReference/API_GetIdentityNotificationAttributes.html</a>
module Network.AWS.SES.GetIdentityNotificationAttributes
data GetIdentityNotificationAttributes

-- | <a>GetIdentityNotificationAttributes</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ginaIdentities</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
getIdentityNotificationAttributes :: GetIdentityNotificationAttributes

-- | A list of one or more identities.
ginaIdentities :: Lens' GetIdentityNotificationAttributes [Text]
data GetIdentityNotificationAttributesResponse

-- | <a>GetIdentityNotificationAttributesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ginarNotificationAttributes</a> <tt>::</tt> <a>HashMap</a>
--   <a>Text</a> <a>IdentityNotificationAttributes</a></li>
--   </ul>
getIdentityNotificationAttributesResponse :: GetIdentityNotificationAttributesResponse

-- | A map of Identity to IdentityNotificationAttributes.
ginarNotificationAttributes :: Lens' GetIdentityNotificationAttributesResponse (HashMap Text IdentityNotificationAttributes)
instance Eq GetIdentityNotificationAttributes
instance Ord GetIdentityNotificationAttributes
instance Read GetIdentityNotificationAttributes
instance Show GetIdentityNotificationAttributes
instance Monoid GetIdentityNotificationAttributes
instance Semigroup GetIdentityNotificationAttributes
instance Eq GetIdentityNotificationAttributesResponse
instance Read GetIdentityNotificationAttributesResponse
instance Show GetIdentityNotificationAttributesResponse
instance Monoid GetIdentityNotificationAttributesResponse
instance Semigroup GetIdentityNotificationAttributesResponse
instance FromXML GetIdentityNotificationAttributesResponse
instance AWSRequest GetIdentityNotificationAttributes
instance ToHeaders GetIdentityNotificationAttributes
instance ToQuery GetIdentityNotificationAttributes
instance ToPath GetIdentityNotificationAttributes
instance IsList GetIdentityNotificationAttributes


-- | Returns the current status of Easy DKIM signing for an entity. For
--   domain name identities, this action also returns the DKIM tokens that
--   are required for Easy DKIM signing, and whether Amazon SES has
--   successfully verified that these tokens have been published.
--   
--   This action takes a list of identities as input and returns the
--   following information for each:
--   
--   Whether Easy DKIM signing is enabled or disabled. A set of DKIM tokens
--   that represent the identity. If the identity is an email address, the
--   tokens represent the domain of that address. Whether Amazon SES has
--   successfully verified the DKIM tokens published in the domain's DNS.
--   This information is only returned for domain name identities, not for
--   email addresses. This action is throttled at one request per second
--   and can only get DKIM attributes for up to 100 identities at a time.
--   
--   For more information about creating DNS records using DKIM tokens, go
--   to the <a>Amazon SES Developer Guide</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/ses/latest/APIReference/API_GetIdentityDkimAttributes.html</a>
module Network.AWS.SES.GetIdentityDkimAttributes
data GetIdentityDkimAttributes

-- | <a>GetIdentityDkimAttributes</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gidaIdentities</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
getIdentityDkimAttributes :: GetIdentityDkimAttributes

-- | A list of one or more verified identities - email addresses, domains,
--   or both.
gidaIdentities :: Lens' GetIdentityDkimAttributes [Text]
data GetIdentityDkimAttributesResponse

-- | <a>GetIdentityDkimAttributesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gidarDkimAttributes</a> <tt>::</tt> <a>HashMap</a> <a>Text</a>
--   <a>IdentityDkimAttributes</a></li>
--   </ul>
getIdentityDkimAttributesResponse :: GetIdentityDkimAttributesResponse

-- | The DKIM attributes for an email address or a domain.
gidarDkimAttributes :: Lens' GetIdentityDkimAttributesResponse (HashMap Text IdentityDkimAttributes)
instance Eq GetIdentityDkimAttributes
instance Ord GetIdentityDkimAttributes
instance Read GetIdentityDkimAttributes
instance Show GetIdentityDkimAttributes
instance Monoid GetIdentityDkimAttributes
instance Semigroup GetIdentityDkimAttributes
instance Eq GetIdentityDkimAttributesResponse
instance Read GetIdentityDkimAttributesResponse
instance Show GetIdentityDkimAttributesResponse
instance Monoid GetIdentityDkimAttributesResponse
instance Semigroup GetIdentityDkimAttributesResponse
instance FromXML GetIdentityDkimAttributesResponse
instance AWSRequest GetIdentityDkimAttributes
instance ToHeaders GetIdentityDkimAttributes
instance ToQuery GetIdentityDkimAttributes
instance ToPath GetIdentityDkimAttributes
instance IsList GetIdentityDkimAttributes


-- | Deletes the specified email address from the list of verified
--   addresses.
--   
--   The DeleteVerifiedEmailAddress action is deprecated as of the May 15,
--   2012 release of Domain Verification. The DeleteIdentity action is now
--   preferred. This action is throttled at one request per second.
--   
--   
--   <a>http://docs.aws.amazon.com/ses/latest/APIReference/API_DeleteVerifiedEmailAddress.html</a>
module Network.AWS.SES.DeleteVerifiedEmailAddress
data DeleteVerifiedEmailAddress

-- | <a>DeleteVerifiedEmailAddress</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dveaEmailAddress</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteVerifiedEmailAddress :: Text -> DeleteVerifiedEmailAddress

-- | An email address to be removed from the list of verified addresses.
dveaEmailAddress :: Lens' DeleteVerifiedEmailAddress Text
data DeleteVerifiedEmailAddressResponse

-- | <a>DeleteVerifiedEmailAddressResponse</a> constructor.
deleteVerifiedEmailAddressResponse :: DeleteVerifiedEmailAddressResponse
instance Eq DeleteVerifiedEmailAddress
instance Ord DeleteVerifiedEmailAddress
instance Read DeleteVerifiedEmailAddress
instance Show DeleteVerifiedEmailAddress
instance Monoid DeleteVerifiedEmailAddress
instance IsString DeleteVerifiedEmailAddress
instance Eq DeleteVerifiedEmailAddressResponse
instance Ord DeleteVerifiedEmailAddressResponse
instance Read DeleteVerifiedEmailAddressResponse
instance Show DeleteVerifiedEmailAddressResponse
instance Generic DeleteVerifiedEmailAddressResponse
instance Datatype D1DeleteVerifiedEmailAddressResponse
instance Constructor C1_0DeleteVerifiedEmailAddressResponse
instance AWSRequest DeleteVerifiedEmailAddress
instance ToHeaders DeleteVerifiedEmailAddress
instance ToQuery DeleteVerifiedEmailAddress
instance ToPath DeleteVerifiedEmailAddress


-- | Deletes the specified identity (email address or domain) from the list
--   of verified identities.
--   
--   This action is throttled at one request per second.
--   
--   
--   <a>http://docs.aws.amazon.com/ses/latest/APIReference/API_DeleteIdentity.html</a>
module Network.AWS.SES.DeleteIdentity
data DeleteIdentity

-- | <a>DeleteIdentity</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>diIdentity</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteIdentity :: Text -> DeleteIdentity

-- | The identity to be removed from the list of identities for the AWS
--   Account.
diIdentity :: Lens' DeleteIdentity Text
data DeleteIdentityResponse

-- | <a>DeleteIdentityResponse</a> constructor.
deleteIdentityResponse :: DeleteIdentityResponse
instance Eq DeleteIdentity
instance Ord DeleteIdentity
instance Read DeleteIdentity
instance Show DeleteIdentity
instance Monoid DeleteIdentity
instance IsString DeleteIdentity
instance Eq DeleteIdentityResponse
instance Ord DeleteIdentityResponse
instance Read DeleteIdentityResponse
instance Show DeleteIdentityResponse
instance Generic DeleteIdentityResponse
instance Datatype D1DeleteIdentityResponse
instance Constructor C1_0DeleteIdentityResponse
instance AWSRequest DeleteIdentity
instance ToHeaders DeleteIdentity
instance ToQuery DeleteIdentity
instance ToPath DeleteIdentity


-- | Amazon Simple Email Service (Amazon SES) is a cost-effective
--   outbound-only email-sending service built on the reliable and scalable
--   infrastructure that Amazon.com has developed to serve its own customer
--   base. With Amazon SES, you can send transactional email, marketing
--   messages, or any other type of high-quality content and you only pay
--   for what you use. Along with high deliverability, Amazon SES provides
--   easy, real-time access to your sending statistics and built-in
--   notifications for bounces, complaints, and deliveries to help you
--   fine-tune your email-sending strategy.
module Network.AWS.SES
