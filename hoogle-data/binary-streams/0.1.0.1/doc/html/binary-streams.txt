-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | data serialization/deserialization io-streams library
--   
@package binary-streams
@version 0.1.0.1

module System.IO.Streams.Binary

-- | Read an instance of <a>Binary</a> from an <a>InputStream</a>, throwing
--   a <a>DecodeException</a> if the decoding fails.
--   
--   <a>binaryFromStream</a> consumes only as much input as necessary: any
--   unconsumed input is pushed back onto the <a>InputStream</a>.
binaryFromStream :: Binary a => InputStream ByteString -> IO (Maybe a)

-- | Transform an <a>InputStream</a> over byte strings to an
--   <a>InputStream</a> yielding values of type a, throwing a
--   <a>DecodeException</a> if the decoding fails.
binaryInputStream :: Binary a => InputStream ByteString -> IO (InputStream a)

-- | Write an instance of <a>Binary</a> to an <a>InputStream</a>.
binaryToStream :: Binary a => OutputStream ByteString -> Maybe a -> IO ()

-- | Transform an <a>OutputStream</a> accepting byte strings to an
--   <a>OutputStream</a> accepting values of type a.
binaryOutputStream :: Binary a => OutputStream ByteString -> IO (OutputStream a)

-- | An Exception raised when decoding fails.
data DecodeException
DecodeException :: ByteOffset -> String -> DecodeException
instance Typeable DecodeException
instance Exception DecodeException
instance Show DecodeException
