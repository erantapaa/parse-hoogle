-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | DSL for IRC bots
--   
--   Irc is a monadic DSL and library for writing Irc bots. It conveniently
--   utilizes 'do' notation in the style similar to Shake
@package Irc
@version 0.1.0.2


-- | Irc is a monadic DSL and library for writing Irc bots. It conveniently
--   utilizes 'do' notation in the style of <a>Shake</a>
module Irc
type Behavior = BehaviorM ()
data BehaviorM a

-- | The Config struct represents the Irc configuration
data Config
Config :: String -> Integer -> String -> String -> Config
server :: Config -> String
port :: Config -> Integer
chan :: Config -> String
nick :: Config -> String

-- | Set up actions to run on start and end, and run the main loop. as an
--   example:
--   
--   <pre>
--   main :: IO ()
--   main = mainWithConfigAndBehavior (Config
--                                    "irc.freenode.org"
--                                    6667
--                                    "#yunbot-testing"
--                                    "yunbot") $ do
--           "!echo " |! return . drop 6
--           "!reverse " |! return . reverse . drop 9
--   </pre>
mainWithConfigAndBehavior :: Config -> Behavior -> IO ()

-- | (|!) is a infix API to add a rule to a Behavior monad
--   
--   <pre>
--   &gt;&gt;&gt; "pattern1" |! return &gt;&gt; "pattern2" |! return
--   ["pattern1","pattern2"]
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; "pattern1" |! return &gt;&gt; "pattern2" |! return &gt;&gt; "pattern3" |! return
--   ["pattern1","pattern2","pattern3"]
--   </pre>
(|!) :: Behavior -> (String -> IO String) -> Behavior
