-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A simple checker for stress testing monadic code
--   
@package fuzzcheck
@version 0.1.1


-- | Please see the README at:
--   
--   <a>https://github.com/jwiegley/fuzzcheck/blob/master/README.md</a>
module Test.FuzzCheck
newtype Fuzz a
Fuzz :: (Compose Gen (Product (Const [String]) Identity) a) -> Fuzz a
data FuzzException
FuzzException :: String -> FuzzException
arg :: Show a => a -> Fuzz a
gen :: Show a => Gen a -> Fuzz a
rand :: (Arbitrary a, Show a) => Fuzz a
branch :: (MonadIO m, MonadBaseControl IO m) => [m a] -> m a
jumble :: (MonadIO m, MonadBaseControl IO m) => [m a] -> m [a]
(?>) :: (MonadIO m, MonadBaseControl IO m) => String -> Fuzz (m a) -> m a
fuzzCheck' :: (MonadIO m, MonadBaseControl IO m) => m a -> Int -> m () -> m ()
fuzzCheck :: (MonadIO m, MonadBaseControl IO m) => m a -> m ()
instance Typeable FuzzException
instance Functor Fuzz
instance Eq FuzzException
instance Show FuzzException
instance Exception FuzzException
instance Applicative Fuzz
