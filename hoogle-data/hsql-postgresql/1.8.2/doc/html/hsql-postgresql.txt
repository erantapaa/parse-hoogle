-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A Haskell Interface to PostgreSQL via the PQ library.
--   
--   PostgreSQL driver for HSQL.
@package hsql-postgresql
@version 1.8.2


-- | SQL queries.
module DB.HSQL.PG.Sql

-- | retrieval of the names of all tables
sqlAllTableNames :: String

-- | retrieval of the field defs for a table name
sqlAllFieldDefsForTableName :: SqlBind t => t -> String

module DB.HSQL.PG.Status
type ConnStatusType = Word32
type ExecStatusType = Word32
connectionOk :: ConnStatusType
pgTuplesOk :: ExecStatusType
pgCommandOk :: ExecStatusType
pgFatalError :: ExecStatusType

module DB.HSQL.PG.Type
type Oid = Word32
mkSqlType :: Oid -> Int -> SqlType


-- | Interface to the functions of the the foreign code environment.
module DB.HSQL.PG.Functions
type PGconn = Ptr ()
type PGresult = Ptr ()
strlen :: CString -> IO Int

-- | Refer to PostgreSQL manual, chapter 30, `libpq - C library' (e.g.
--   http:<i></i>www.postgresql.org<i>docs</i>8.3<i>interactive</i>libpq.html)
pqSetdbLogin :: CString -> CString -> CString -> CString -> CString -> CString -> CString -> IO PGconn
pqStatus :: PGconn -> IO ConnStatusType
pqErrorMessage :: PGconn -> IO CString
pqFinish :: PGconn -> IO ()
pqExec :: PGconn -> CString -> IO PGresult
pqResultStatus :: PGresult -> IO ExecStatusType
pqResStatus :: ExecStatusType -> IO CString
pqResultErrorMessage :: PGresult -> IO CString
pgNFields :: PGresult -> IO Int
pqNTuples :: PGresult -> IO Int
pgFName :: PGresult -> Int -> IO CString
pqFType :: PGresult -> Int -> IO Oid
pqFMod :: PGresult -> Int -> IO Int
pqFNumber :: PGresult -> CString -> IO Int
pqGetvalue :: PGresult -> Int -> Int -> IO CString
pqGetisnull :: PGresult -> Int -> Int -> IO Int


module DB.HSQL.PG.Core
execute :: PGconn -> String -> IO ()
query :: Connection -> PGconn -> String -> IO Statement
fetch :: MVar Int -> Int -> IO Bool
getColValue :: PGresult -> MVar Int -> Int -> Int -> ColDef -> (ColDef -> CString -> Int -> IO a) -> IO a

-- | Convert string by newCString, if provided, else return of nullPtr
newCStringElseNullPtr :: Maybe String -> IO CString


module Database.HSQL.PostgreSQL

-- | Makes a new connection to the database server
connect :: String -> String -> String -> String -> IO Connection

-- | Makes a new connection to the database server, with specification of
--   port, options &amp; tty
connectWithOptions :: String -> Maybe String -> Maybe String -> Maybe String -> String -> String -> String -> IO Connection
