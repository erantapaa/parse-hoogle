-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Generic Data.Binary derivation using GHC generics.
--   
--   Generic Data.Binary derivation using GHC generics.
@package generic-binary
@version 1.0.1

module Data.Binary.Generic
encode :: (Generic a, GBinary (Rep a)) => a -> ByteString
decode :: (Generic a, GBinary (Rep a)) => ByteString -> a
put :: (Generic a, GBinary (Rep a)) => a -> Put
get :: (Generic b, GBinary (Rep b)) => Get b
instance Binary a => GBinary (K1 i a)
instance GBinary a => GBinary (M1 S s a)
instance GBinary a => GBinary (M1 C c a)
instance GBinary a => GBinary (M1 D c a)
instance (GBinary a, GBinary b) => GBinary (a :+: b)
instance (GBinary a, GBinary b) => GBinary (a :*: b)
instance GBinary U1
