-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Atomic bit operations on memory locations
for low-level synchronization
--   
--   Atomic operations including CAS (compare-and-swap), fetch &amp; add
--   and variants suitable for low-level shared-memory synchronization.
--   
--   The implementation is using GCC's builtin atomic operations (available
--   in GCC &gt;= 4) in C wrappers called through the FFI. See these links
--   for background:
--   
--   <ul>
--   <li>GCC manual:
--   <a>http://gcc.gnu.org/onlinedocs/gcc/Atomic-Builtins.html</a></li>
--   <li>GCC wiki: <a>http://gcc.gnu.org/wiki/Atomic</a></li>
--   </ul>
--   
--   <i>Portability</i>: This package is primarily developed on a Linux
--   system, but should work wherever GCC &gt;= 4 is available. It has been
--   confirmed as working on OSX. On Windows, it should work with Cygwin
--   but currently fails for vanilla Haskell-Platform 2010.1.0.0 as it
--   still packages GCC 3.x. An installer for updated versions of GCC is
--   available at <a>http://www.mingw.org/</a> and should make this package
--   work in connection with Haskell-Platform. Feedback on compatibility
--   would be appreciated.
--   
--   <i>Testing:</i> The following commands can be used to compile and run
--   the test suite:
--   
--   <pre>
--   cabal unpack bits-atomic &amp;&amp; cd bits-atomic-* # if not yet locally available
--   cabal configure -ftest
--   cabal build
--   cabal test
--   </pre>
--   
--   <i>Recent changes</i>:
--   
--   <ul>
--   <li>0.1.3: Documentation updates, especially on portability. No
--   functional changes.</li>
--   <li>0.1.2: Avoid using System.FilePath in Setup.hs to fix build
--   failure on hackage</li>
--   </ul>
@package bits-atomic
@version 0.1.3


-- | Atomic bit operations, using GCC's built-in atomic operations in small
--   C wrapper functions called through the FFI. See
--   <a>http://gcc.gnu.org/wiki/Atomic</a> and
--   <a>http://gcc.gnu.org/onlinedocs/gcc/Atomic-Builtins.html</a> for more
--   detail.
module Data.Bits.Atomic

-- | Atomic bit operations on a memory location.
--   
--   Instances: <a>Word</a>, <a>Word8</a>, <a>Word16</a>, <a>Word32</a>,
--   <a>Word64</a>, <a>Int</a>, <a>Int8</a>, <a>Int16</a>, <a>Int32</a>,
--   <a>Int64</a>.
class Bits x => AtomicBits x
fetchAndAdd :: AtomicBits x => Ptr x -> x -> IO x
fetchAndSub :: AtomicBits x => Ptr x -> x -> IO x
fetchAndOr :: AtomicBits x => Ptr x -> x -> IO x
fetchAndAnd :: AtomicBits x => Ptr x -> x -> IO x
fetchAndXor :: AtomicBits x => Ptr x -> x -> IO x
fetchAndNand :: AtomicBits x => Ptr x -> x -> IO x
addAndFetch :: AtomicBits x => Ptr x -> x -> IO x
subAndFetch :: AtomicBits x => Ptr x -> x -> IO x
orAndFetch :: AtomicBits x => Ptr x -> x -> IO x
andAndFetch :: AtomicBits x => Ptr x -> x -> IO x
xorAndFetch :: AtomicBits x => Ptr x -> x -> IO x
nandAndFetch :: AtomicBits x => Ptr x -> x -> IO x
compareAndSwapBool :: AtomicBits x => Ptr x -> x -> x -> IO Bool
compareAndSwap :: AtomicBits x => Ptr x -> x -> x -> IO x
lockTestAndSet :: AtomicBits x => Ptr x -> IO x
lockRelease :: AtomicBits x => Ptr x -> IO ()

-- | A full memory barrier.
memoryBarrier :: IO ()
instance AtomicBits Int64
instance AtomicBits Int32
instance AtomicBits Int16
instance AtomicBits Int8
instance AtomicBits Int
instance AtomicBits Word
instance AtomicBits Word64
instance AtomicBits Word32
instance AtomicBits Word16
instance AtomicBits Word8
