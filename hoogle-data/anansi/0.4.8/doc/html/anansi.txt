-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Simple literate programming preprocessor
--   
@package anansi
@version 0.4.8

module Anansi

-- | Run Anansi with the provided looms. Loom names are namespaced by their
--   package name, such as <tt>"anansi.noweb"</tt> or
--   <tt>"anansi-hscolour.html"</tt>. If your looms aren't available on
--   Hackage, a Java-style name such as <tt>"com.mycompany.myformat"</tt>
--   is a good alternative.
defaultMain :: Map Text Loom -> IO ()

-- | Parse a set of files into a <a>Document</a>. If a parse failure
--   occurs, a <a>ParseError</a> will be returned instead.
parse :: Monad m => (FilePath -> m ByteString) -> FilePath -> m (Either ParseError Document)

-- | Write a <a>Document</a> to files. Paths passed to the file writer are
--   pulled directly from the document, so if you need to process them
--   further, that logic must be placed in the writer computation.
--   
--   In most cases, users will want to write <tt>#line</tt> pragmas to
--   tangled source, so error messages will refer back to the original
--   input files. Haddock does not handle these pragmas properly, so
--   disable them when the tangled sources will be processed into API
--   documentation.
tangle :: Monad m => (FilePath -> ByteString -> m ()) -> Bool -> Document -> m ()

-- | Write a document to some sort of document markup. This will typically
--   be rendered into documentation by external tools, such as LaTeX or a
--   web browser.
--   
--   This writes a <a>ByteString</a> rather than <a>Text</a> so that looms
--   have full control over character encoding.
weave :: Loom -> Document -> ByteString
data Document
documentBlocks :: Document -> [Block]

-- | A map of <tt>:option</tt> commands found in the document. If the same
--   option is specified multiple times, the most recent will be used.
documentOptions :: Document -> Map Text Text

-- | The last <tt>:loom</tt> command given, if any. A document does not
--   require a loom name if it's just going to be tangled, or will be woven
--   by the user calling <a>weave</a>. Documents woven by
--   <tt>defaultMain</tt> do require a loom name.
documentLoomName :: Document -> Maybe Text
data Block
BlockText :: Text -> Block
BlockFile :: Text -> [Content] -> Block
BlockDefine :: Text -> [Content] -> Block
data Content
ContentText :: Position -> Text -> Content

-- | A macro reference within a content block. The first <a>Text</a> is any
--   indentation found before the first <tt>'|'</tt>, and the second is the
--   name of the macro.
ContentMacro :: Position -> Text -> Text -> Content
data Position
positionFile :: Position -> FilePath
positionLine :: Position -> Integer
data ParseError
parseErrorPosition :: ParseError -> Position
parseErrorMessage :: ParseError -> Text

-- | A loom contains all the logic required to convert a <a>Document</a>
--   into markup suitable for processing with an external documentation
--   tool.
--   
--   Within a loom, use <a>ask</a> to retrieve the <a>LoomOptions</a>, and
--   <a>tell</a> to append data to the output.
type Loom = Document -> LoomM ()
data LoomM a

-- | A set of processed <tt>:option</tt> commands related to looms. Looms
--   are always free to check options manually, but this simplifies common
--   cases.
data LoomOptions
loomOptionTabSize :: LoomOptions -> Integer

-- | <pre>
--   looms = Data.Map.fromList
--       [ ("anansi.debug", <a>loomDebug</a>)
--       , ("anansi.html", <a>loomHTML</a>)
--       , ("anansi.latex", <a>loomLaTeX</a>)
--       , ("anansi.markdown", <a>loomMarkdown</a>)
--       , ("anansi.noweb", <a>loomNoWeb</a>)
--       ]
--    
--   </pre>
looms :: Map Text Loom

-- | Just <a>show</a> each block. This is useful for seeing exactly what
--   your document is being parsed to.
loomDebug :: Loom

-- | Generate simple, <tt>&lt;pre&gt;</tt>-based HTML. Users who would like
--   to weave specialized HTML to fit with their existing templates are
--   encouraged to copy this loom and modify it as needed.
loomHTML :: Loom

-- | Generate simple, <tt>alltt</tt>-based LaTeX. Users who would like to
--   weave specialized LaTeX to fit with their existing templates are
--   encouraged to copy this loom and modify it as needed.
loomLaTeX :: Loom

-- | Generate Markdown. Modified from LaTeX.hs.
loomMarkdown :: Loom

-- | Generate LaTeX markup, emulating the behavior of NoWeb. This is useful
--   for porting existing NoWeb-based projects to Anansi without having to
--   rewrite the styling.
loomNoWeb :: Loom
