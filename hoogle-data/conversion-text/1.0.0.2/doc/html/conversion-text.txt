-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | "Conversion" instances for the "text" library
--   
@package conversion-text
@version 1.0.0.2


-- | This module exports orphan <a>Conversion</a> instances for the types
--   of the "text" library.
--   
--   It is meant to be used in combination with the <a>"conversion"</a>
--   library. E.g.:
--   
--   <pre>
--   import Conversion
--   import Conversion.Text
--   </pre>
--   
--   This module exports the following instances:
--   
--   <ul>
--   <li><pre>instance Alternative f =&gt; Conversion
--   Data.ByteString.Builder.Builder (f Data.Text.Lazy.Builder)</pre></li>
--   <li><pre>instance Alternative f =&gt; Conversion
--   Data.ByteString.Builder.Builder (f Data.Text.Lazy.Text)</pre></li>
--   <li><pre>instance Alternative f =&gt; Conversion
--   Data.ByteString.Builder.Builder (f Data.Text.Text)</pre></li>
--   <li><pre>instance Alternative f =&gt; Conversion
--   Data.ByteString.ByteString (f Data.Text.Lazy.Builder)</pre></li>
--   <li><pre>instance Alternative f =&gt; Conversion
--   Data.ByteString.ByteString (f Data.Text.Lazy.Text)</pre></li>
--   <li><pre>instance Alternative f =&gt; Conversion
--   Data.ByteString.ByteString (f Data.Text.Text)</pre></li>
--   <li><pre>instance Alternative f =&gt; Conversion
--   Data.ByteString.Lazy.ByteString (f Data.Text.Lazy.Builder)</pre></li>
--   <li><pre>instance Alternative f =&gt; Conversion
--   Data.ByteString.Lazy.ByteString (f Data.Text.Lazy.Text)</pre></li>
--   <li><pre>instance Alternative f =&gt; Conversion
--   Data.ByteString.Lazy.ByteString (f Data.Text.Text)</pre></li>
--   <li><pre>instance Conversion Char Data.Text.Lazy.Builder</pre></li>
--   <li><pre>instance Conversion Char Data.Text.Lazy.Text</pre></li>
--   <li><pre>instance Conversion Char Data.Text.Text</pre></li>
--   <li><pre>instance Conversion Data.ByteString.ByteString (Either
--   Data.Text.Encoding.Error.UnicodeException
--   Data.Text.Lazy.Text)</pre></li>
--   <li><pre>instance Conversion Data.ByteString.ByteString (Either
--   Data.Text.Encoding.Error.UnicodeException Data.Text.Text)</pre></li>
--   <li><pre>instance Conversion Data.ByteString.Lazy.ByteString (Either
--   Data.Text.Encoding.Error.UnicodeException
--   Data.Text.Lazy.Text)</pre></li>
--   <li><pre>instance Conversion Data.ByteString.Lazy.ByteString (Either
--   Data.Text.Encoding.Error.UnicodeException Data.Text.Text)</pre></li>
--   <li><pre>instance Conversion Data.Text.Lazy.Builder
--   Data.ByteString.Builder.Builder</pre></li>
--   <li><pre>instance Conversion Data.Text.Lazy.Builder
--   Data.ByteString.ByteString</pre></li>
--   <li><pre>instance Conversion Data.Text.Lazy.Builder
--   Data.ByteString.Lazy.ByteString</pre></li>
--   <li><pre>instance Conversion Data.Text.Lazy.Builder
--   Data.Text.Lazy.Text</pre></li>
--   <li><pre>instance Conversion Data.Text.Lazy.Builder
--   Data.Text.Text</pre></li>
--   <li><pre>instance Conversion Data.Text.Lazy.Builder String</pre></li>
--   <li><pre>instance Conversion Data.Text.Lazy.Text
--   Data.ByteString.Builder.Builder</pre></li>
--   <li><pre>instance Conversion Data.Text.Lazy.Text
--   Data.ByteString.ByteString</pre></li>
--   <li><pre>instance Conversion Data.Text.Lazy.Text
--   Data.ByteString.Lazy.ByteString</pre></li>
--   <li><pre>instance Conversion Data.Text.Lazy.Text
--   Data.Text.Lazy.Builder</pre></li>
--   <li><pre>instance Conversion Data.Text.Lazy.Text
--   Data.Text.Text</pre></li>
--   <li><pre>instance Conversion Data.Text.Lazy.Text String</pre></li>
--   <li><pre>instance Conversion Data.Text.Text
--   Data.ByteString.Builder.Builder</pre></li>
--   <li><pre>instance Conversion Data.Text.Text
--   Data.ByteString.ByteString</pre></li>
--   <li><pre>instance Conversion Data.Text.Text
--   Data.ByteString.Lazy.ByteString</pre></li>
--   <li><pre>instance Conversion Data.Text.Text
--   Data.Text.Lazy.Builder</pre></li>
--   <li><pre>instance Conversion Data.Text.Text
--   Data.Text.Lazy.Text</pre></li>
--   <li><pre>instance Conversion Data.Text.Text String</pre></li>
--   <li><pre>instance Conversion String Data.Text.Lazy.Builder</pre></li>
--   <li><pre>instance Conversion String Data.Text.Lazy.Text</pre></li>
--   <li><pre>instance Conversion String Data.Text.Text</pre></li>
--   </ul>
module Conversion.Text
instance Conversion Char Builder
instance Conversion Char Text
instance Conversion Char Text
instance Conversion String Builder
instance Conversion String Text
instance Conversion String Text
instance Alternative f => Conversion Builder (f Builder)
instance Alternative f => Conversion Builder (f Text)
instance Alternative f => Conversion Builder (f Text)
instance Alternative f => Conversion ByteString (f Builder)
instance Alternative f => Conversion ByteString (f Text)
instance Alternative f => Conversion ByteString (f Text)
instance Conversion ByteString (Either UnicodeException Text)
instance Conversion ByteString (Either UnicodeException Text)
instance Alternative f => Conversion ByteString (f Builder)
instance Alternative f => Conversion ByteString (f Text)
instance Alternative f => Conversion ByteString (f Text)
instance Conversion ByteString (Either UnicodeException Text)
instance Conversion ByteString (Either UnicodeException Text)
instance Conversion Builder Builder
instance Conversion Builder ByteString
instance Conversion Builder ByteString
instance Conversion Builder Text
instance Conversion Builder Text
instance Conversion Builder String
instance Conversion Text Builder
instance Conversion Text ByteString
instance Conversion Text ByteString
instance Conversion Text Builder
instance Conversion Text Text
instance Conversion Text String
instance Conversion Text Builder
instance Conversion Text ByteString
instance Conversion Text ByteString
instance Conversion Text Builder
instance Conversion Text Text
instance Conversion Text String
