-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Highlight source code using Pygments
--   
--   Highlight source code using Pygments <a>http://pygments.org</a>. This
--   package depends on Pygments and its accompanying <tt>pygmentize</tt>
--   script.
@package hpygments
@version 0.1.3

module Text.Highlighting.Pygments.Formatters
type FormatterAlias = String
data Formatter
getAllFormatters :: IO [Formatter]

-- | Similar to the <tt>get_formatter_by_name()</tt> function in Pygments
getFormatterByName :: FormatterAlias -> IO (Maybe Formatter)
formatterName :: Formatter -> String
formatterAliases :: Formatter -> [FormatterAlias]
htmlFormatter :: Formatter
terminalFormatter :: Formatter
instance FromJSON Formatter
instance ToJSON Formatter
instance Eq Formatter
instance Ord Formatter
instance Show Formatter

module Text.Highlighting.Pygments.Lexers
type LexerAlias = String
data Lexer
getAllLexers :: IO [Lexer]

-- | Similar to the <tt>get_lexer_by_name()</tt> function in Pygments
getLexerByName :: LexerAlias -> IO (Maybe Lexer)
lexerName :: Lexer -> String
lexerAliases :: Lexer -> [LexerAlias]
lexerFileTypes :: Lexer -> [String]
lexerMimeTypes :: Lexer -> [String]
haskellLexer :: Lexer
literateHaskellLexer :: Lexer

-- | No highlighting
textLexer :: Lexer
instance FromJSON Lexer
instance ToJSON Lexer
instance Eq Lexer
instance Ord Lexer
instance Show Lexer


-- | This library uses the <tt>pygmentize</tt> script that comes with
--   Pygments to highlight code in many languages. For documentation on the
--   various lexers, formatters, and options, see the Pygments
--   documentation <a>http://pygments.org/docs/</a>.
module Text.Highlighting.Pygments

-- | Highlight code robustly. This function is more robust than the
--   lower-level <a>pygmentize</a> function since this library forbids the
--   construction of invalid <a>Lexer</a> and <a>Formatter</a> values.
--   Invalid <a>Options</a> may still cause this function to raise an
--   exception.
highlight :: Lexer -> Formatter -> Options -> String -> IO String

-- | Highlight code (less robustly) using the <tt>pygmentize</tt> script
--   that comes with Pygments. Invalid values for <a>LexerAlias</a>,
--   <a>FormatterAlias</a>, or <a>Options</a> will cause this function to
--   raise an exception.
pygmentize :: LexerAlias -> FormatterAlias -> Options -> String -> IO String

-- | The lexer/formatter option <tt>(key, value)</tt> is passed to the
--   <tt>pygmentize</tt> script via the command-line flag <tt>-P
--   key=value</tt>.
--   
--   Examples:
--   
--   <pre>
--   [("hl_lines", "16,23,42"), ("encoding", "utf-8"), ("anchorlines", "True")]
--   </pre>
type Option = (String, String)
type Options = [Option]
