-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A binding for the OpenCV computer vision library
--   
--   Initial version with very limited bindings to OpenCV 2.0. (See:
--   <a>http://opencv.willowgarage.com/wiki/Welcome</a>)
--   
--   For a functional interface to this library, see the package
--   <a>cv-combinators</a>.
--   
--   Online module documentation, if not build below, can be found at
--   <a>http://www.ee.bgu.ac.il/~noamle/</a>.
--   
--   <i>Installation</i>
--   
--   You must install OpenCV (development packages) prior to installing
--   this package. Currently only tested on Ubuntu Linux, but should work
--   on most linux distributions. For OpenCV installation on other *nix
--   platforms, see
--   <a>http://sourceforge.net/projects/opencvlibrary/files/opencv-unix/2.0/</a>
--   
--   On <i>Ubuntu</i> systems, the appropriate version of OpenCV can be
--   installed by:
--   
--   <pre>
--   sudo apt-get install libcv-dev libhighgui-dev libcvaux-dev
--   </pre>
--   
--   You should then have libcv4 and libhighgui4 installed automatically
--   too.
@package HOpenCV
@version 0.1.2.4

module AI.CV.OpenCV.CxCore
toFromIntegral :: (RealFrac c, Integral b, Integral a, Num b1) => (b1 -> c) -> a -> b
toFromIntegral2 :: (Integral a, Num b, Integral a1, Num b1, RealFrac a2, Integral b2) => (b -> b1 -> a2) -> a -> a1 -> b2
data CvSize
CvSize :: CInt -> CInt -> CvSize
sizeWidth :: CvSize -> CInt
sizeHeight :: CvSize -> CInt
liftCvSize :: (RealFrac c, Num b) => (b -> c) -> CvSize -> CvSize
liftCvSize2 :: (Num b, Num b1, RealFrac a) => (b -> b1 -> a) -> CvSize -> CvSize -> CvSize
data CvRect
CvRect :: CInt -> CInt -> CInt -> CInt -> CvRect
rectX :: CvRect -> CInt
rectY :: CvRect -> CInt
rectWidth :: CvRect -> CInt
rectHeight :: CvRect -> CInt
liftCvRect :: (RealFrac c, Num b) => (b -> c) -> CvRect -> CvRect
liftCvRect2 :: (Num b, Num b1, RealFrac a) => (b -> b1 -> a) -> CvRect -> CvRect -> CvRect
class IplArrayType a
data CvArr
data IplImage
data CvMemStorage
data CvSeq a
fromArr :: IplArrayType a => Ptr a -> Ptr CvArr
newtype Depth
Depth :: CInt -> Depth
unDepth :: Depth -> CInt
iplDepth1u :: Depth
iplDepth8u :: Depth
iplDepth8s :: Depth
iplDepth16u :: Depth
iplDepth16s :: Depth
iplDepth32s :: Depth
validDepths :: [Depth]
iplDepth32f :: Depth
iplDepth64f :: Depth
depthsLookupList :: [(CInt, Depth)]
numToDepth :: CInt -> Maybe Depth
c_cvCreateMemStorage :: CInt -> IO (Ptr CvMemStorage)
cvCreateMemStorage :: CInt -> IO (Ptr CvMemStorage)
cvReleaseMemStorage :: Ptr CvMemStorage -> IO ()
cp_release_mem_storage :: FunPtr (Ptr CvMemStorage -> IO ())
createMemStorageF :: CInt -> IO (ForeignPtr CvMemStorage)
c_cvCreateImage :: CInt -> CInt -> CInt -> CInt -> IO (Ptr IplImage)
cvCreateImage :: CvSize -> CInt -> Depth -> IO (Ptr IplImage)
cvReleaseImage :: Ptr IplImage -> IO ()
cp_release_image :: FunPtr (Ptr IplImage -> IO ())
createImageF :: CvSize -> CInt -> Depth -> IO (ForeignPtr IplImage)
c_cvCloneImage :: Ptr IplImage -> IO (Ptr IplImage)
cvCloneImage :: Ptr IplImage -> IO (Ptr IplImage)
cloneImageF :: Ptr IplImage -> IO (ForeignPtr IplImage)
c_get_size :: Ptr CvArr -> Ptr CvSize -> IO ()
c_cvCopy :: Ptr CvArr -> Ptr CvArr -> Ptr CvArr -> IO ()
cvCopy :: IplArrayType a => Ptr a -> Ptr a -> IO ()
cvGetSize :: IplArrayType a => Ptr a -> CvSize
c_get_depth :: Ptr IplImage -> IO CInt
getDepth :: Ptr IplImage -> IO Depth
c_get_nChannels :: Ptr IplImage -> IO CInt
getNumChannels :: Integral a => Ptr IplImage -> IO a
cvConvertScale :: Ptr CvArr -> Ptr CvArr -> CDouble -> CDouble -> IO ()
cvFree :: Ptr a -> IO ()
c_cvLoad :: CString -> Ptr CvMemStorage -> CString -> Ptr CString -> IO (Ptr a)
cvLoad :: String -> Ptr CvMemStorage -> Maybe String -> IO (Ptr a, Maybe String)
cvGetSeqElem :: Ptr (CvSeq a) -> CInt -> IO (Ptr a)
seqNumElems :: Ptr (CvSeq a) -> IO CInt
seqToPList :: Ptr (CvSeq a) -> IO [Ptr a]
seqToList :: Storable a => Ptr (CvSeq a) -> IO [a]
c_cvRectangle :: Ptr CvArr -> CInt -> CInt -> CInt -> CInt -> IO ()
cvRectangle :: IplArrayType a => Ptr a -> CvRect -> IO ()

-- | Debugging function to print some of the internal details of an
--   IplImage structure
c_debug_print_image_header :: Ptr IplImage -> IO ()
instance Show CvSize
instance Eq CvSize
instance Show CvRect
instance Eq CvRect
instance Eq Depth
instance Show Depth
instance IplArrayType IplImage
instance IplArrayType CvArr
instance VectorSpace CvRect
instance AdditiveGroup CvRect
instance Storable CvRect
instance VectorSpace CvSize
instance AdditiveGroup CvSize
instance Storable CvSize

module AI.CV.OpenCV.HighGui
c_cvConvertImage :: Ptr CvArr -> Ptr CvArr -> CInt -> IO ()
cvConvertImage :: (IplArrayType a, IplArrayType a1) => Ptr a -> Ptr a1 -> CInt -> IO ()
data CvCapture
c_cvCreateCameraCapture :: CInt -> IO (Ptr CvCapture)
cvCreateCameraCapture :: CInt -> IO (Ptr CvCapture)
c_cvCreateFileCapture :: CString -> IO (Ptr CvCapture)
cvCreateFileCapture :: String -> IO (Ptr CvCapture)
cvReleaseCapture :: Ptr CvCapture -> IO ()
cp_release_capture :: FunPtr (Ptr CvCapture -> IO ())
createCameraCaptureF :: CInt -> IO (ForeignPtr CvCapture)
c_cvQueryFrame :: Ptr CvCapture -> IO (Ptr IplImage)
cvQueryFrame :: Ptr CvCapture -> IO (Ptr IplImage)
c_newWindow :: CInt -> CInt -> IO ()
newWindow :: CInt -> Bool -> IO ()
delWindow :: CInt -> IO ()
showImage :: CInt -> Ptr IplImage -> IO ()
waitKey :: CInt -> IO CInt
cvNamedWindow :: CString -> CInt -> IO CInt
type AutoSize = Bool
titledWindow :: String -> AutoSize -> IO Int
fromToInteger :: (Integral a, Num b) => a -> b
newtype LoadImageColor
LoadImageColor :: CInt -> LoadImageColor
unLoadImageColor :: LoadImageColor -> CInt
loadImageColor :: LoadImageColor
loadImageGrayscale :: LoadImageColor
loadImageUnchanged :: LoadImageColor
c_cvLoadImage :: CString -> CInt -> IO (Ptr IplImage)
cvLoadImage :: String -> LoadImageColor -> IO (Ptr IplImage)
c_cvSaveImage :: CString -> Ptr CvArr -> IO CInt
cvSaveImage :: String -> Ptr IplImage -> IO CInt

module AI.CV.OpenCV.Types
type PImage = Ptr IplImage
type PCapture = Ptr CvCapture
type FPImage = ForeignPtr IplImage
type FPCapture = ForeignPtr CvCapture

module AI.CV.OpenCV.CV
c_cvCanny :: Ptr CvArr -> Ptr CvArr -> CDouble -> CDouble -> CInt -> IO ()
cvCanny :: (IplArrayType i1, IplArrayType i2) => Ptr i1 -> Ptr i2 -> CDouble -> CDouble -> CInt -> IO ()
data InterpolationMethod
CV_INTER_NN :: InterpolationMethod
CV_INTER_LINEAR :: InterpolationMethod
CV_INTER_CUBIC :: InterpolationMethod
CV_INTER_AREA :: InterpolationMethod
c_cvResize :: Ptr CvArr -> Ptr CvArr -> CInt -> IO ()
cvResize :: (IplArrayType i1, IplArrayType i2) => Ptr i1 -> Ptr i2 -> InterpolationMethod -> IO ()
c_dilate :: Ptr CvArr -> Ptr CvArr -> CInt -> IO ()
cvDilate :: (IplArrayType i1, IplArrayType i2) => Ptr i1 -> Ptr i2 -> CInt -> IO ()
c_cvPyrDown :: Ptr CvArr -> Ptr CvArr -> CInt -> IO ()
constCvGaussian5x5 :: CInt
cvPyrDown :: (IplArrayType i1, IplArrayType i2) => Ptr i1 -> Ptr i2 -> IO ()
data CvHaarClassifierCascade
newtype HaarDetectFlag
HaarDetectFlag :: CInt -> HaarDetectFlag
unHaarDetectFlag :: HaarDetectFlag -> CInt
cvHaarFlagNone :: HaarDetectFlag
cvHaarDoCannyPruning :: HaarDetectFlag
cvHaarScaleImage :: HaarDetectFlag
cvHaarFindBiggestObject :: HaarDetectFlag
cvHaarDoRoughSearch :: HaarDetectFlag
combineHaarFlags :: [HaarDetectFlag] -> HaarDetectFlag
c_cvHaarDetectObjects :: Ptr CvArr -> Ptr CvHaarClassifierCascade -> Ptr CvMemStorage -> CDouble -> CInt -> CInt -> CInt -> CInt -> IO (Ptr (CvSeq CvRect))
cvHaarDetectObjects :: IplArrayType i => Ptr i -> Ptr CvHaarClassifierCascade -> Ptr CvMemStorage -> CDouble -> CInt -> HaarDetectFlag -> CvSize -> IO (Ptr (CvSeq CvRect))
instance Enum InterpolationMethod
instance Eq InterpolationMethod
instance Eq HaarDetectFlag
instance Show HaarDetectFlag
