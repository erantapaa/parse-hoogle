-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Writing and calling ACL2 from Haskell.
--   
@package acl2
@version 0.0.1


-- | A DSL for ACL2.
module Language.ACL2
data Expr
Obj :: [Expr] -> Expr
Lit :: String -> Expr
check :: [Expr] -> IO Bool
check' :: [Expr] -> IO (Bool, String)
mutualRecursion :: [Expr] -> Expr
defun :: String -> [String] -> Expr -> Expr
defun' :: String -> [String] -> Expr -> Expr -> Expr
defconst :: String -> Expr -> Expr
defthm :: String -> Expr -> Expr
thm :: Expr -> Expr
call :: String -> [Expr] -> Expr
obj :: [Expr] -> Expr
quote :: Expr -> Expr
consp :: Expr -> Expr
cons :: Expr -> Expr -> Expr
car :: Expr -> Expr
cdr :: Expr -> Expr
nth :: Expr -> Expr -> Expr
len :: Expr -> Expr
take' :: Expr -> Expr -> Expr
nthcdr :: Expr -> Expr -> Expr
updateNth :: Expr -> Expr -> Expr -> Expr
append :: Expr -> Expr -> Expr
let' :: [(String, Expr)] -> Expr -> Expr
if' :: Expr -> Expr -> Expr -> Expr
case' :: Expr -> [(Expr, Expr)] -> Expr -> Expr
assoc :: Expr -> Expr -> Expr
var :: String -> Expr
list :: [Expr] -> Expr
lit :: String -> Expr
string :: String -> Expr
nil :: Expr
t :: Expr
zp :: Expr -> Expr
zip' :: Expr -> Expr
undefined' :: Expr
equal :: Expr -> Expr -> Expr
not' :: Expr -> Expr
and' :: Expr -> Expr -> Expr
or' :: Expr -> Expr -> Expr
implies :: Expr -> Expr -> Expr
goodbye :: Expr
integerp :: Expr -> Expr
mod' :: Expr -> Expr -> Expr
(<.) :: Expr -> Expr -> Expr
(>.) :: Expr -> Expr -> Expr
(<=.) :: Expr -> Expr -> Expr
(>=.) :: Expr -> Expr -> Expr
instance Eq Expr
instance Ord Expr
instance Num Expr
instance Show Expr
instance Show SExpr
