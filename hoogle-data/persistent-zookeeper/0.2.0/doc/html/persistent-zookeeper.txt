-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Backend for persistent library using Zookeeper.
--   
@package persistent-zookeeper
@version 0.2.0

module Database.Persist.Zookeeper

-- | Information required to connect to a Zookeeper server
data ZookeeperConf
ZookeeperConf :: String -> Timeout -> Int -> NominalDiffTime -> Int -> ZookeeperConf
zCoord :: ZookeeperConf -> String
zTimeout :: ZookeeperConf -> Timeout
zNumStripes :: ZookeeperConf -> Int
zIdleTime :: ZookeeperConf -> NominalDiffTime
zMaxResources :: ZookeeperConf -> Int
type Connection = Pool Zookeeper
type Action = ReaderT Zookeeper
execZookeeper :: (Read a, Show a, Monad m, MonadIO m) => (Zookeeper -> IO (Either ZKError a)) -> Action m a

-- | Run a connection reader function against a Zookeeper configuration
withZookeeperPool :: (Monad m, MonadIO m) => ZookeeperConf -> (Connection -> m a) -> m a
runZookeeperPool :: MonadBaseControl IO m => Action m b -> Connection -> m b
defaultZookeeperConf :: ZookeeperConf
defaultZookeeperSettings :: MkPersistSettings
deleteRecursive :: (Monad m, MonadIO m) => String -> Action m ()
dummyFromFilts :: [Filter v] -> Maybe v
data OrNull
OrNullYes :: OrNull
OrNullNo :: OrNull
filterClauseHelper :: PersistEntity val => Bool -> OrNull -> val -> [Filter val] -> (Bool, Text, [PersistValue])
filterClause :: PersistEntity val => val -> [Filter val] -> (Bool, Text, [PersistValue])
addIdx :: [[String]] -> [(String, Int)]
delIdx :: [(String, Int)] -> [[String]]
dropIdx :: Int -> [[String]] -> [[String]]
takeIdx :: Int -> [[String]] -> [[String]]
sortIdx' :: Ord a => Bool -> [(String, a)] -> [[(String, a)]]
sortIdx :: Ord a => Bool -> [[(String, a)]] -> [[(String, a)]]
fstIdx :: Ord a => [[(String, a)]] -> [[String]]
selectOptParser' :: (PersistStore backend, MonadIO m, PersistEntity val, backend ~ PersistEntityBackend val) => [[String]] -> [SelectOpt val] -> ReaderT backend m [[String]]
selectOptParser :: (PersistStore backend, MonadIO m, PersistEntity val, backend ~ PersistEntityBackend val) => [String] -> [SelectOpt val] -> ReaderT backend m [String]
