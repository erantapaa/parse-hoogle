-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Sqlite3 backend for the groundhog library
--   
--   It depends on direct-sqlite library which includes Sqlite C sources,
--   so there are no system dependencies.
@package groundhog-sqlite
@version 0.7.0.1

module Database.Groundhog.Sqlite
withSqlitePool :: (MonadBaseControl IO m, MonadIO m) => String -> Int -> (Pool Sqlite -> m a) -> m a
withSqliteConn :: (MonadBaseControl IO m, MonadIO m) => String -> (Sqlite -> m a) -> m a
createSqlitePool :: MonadIO m => String -> Int -> m (Pool Sqlite)

-- | Runs action within connection. It can handle a simple connection, a
--   pool of them, etc.
runDbConn :: (MonadBaseControl IO m, MonadIO m, ConnectionManager cm conn) => DbPersist conn (NoLoggingT m) a -> cm -> m a
data Sqlite
Sqlite :: Database -> (IORef (HashMap ByteString Statement)) -> Sqlite
instance Eq Affinity
instance Show Affinity
instance SingleConnectionManager Sqlite Sqlite
instance ConnectionManager (Pool Sqlite) Sqlite
instance ConnectionManager Sqlite Sqlite
instance Savepoint Sqlite
instance (MonadBaseControl IO m, MonadIO m, MonadLogger m) => SchemaAnalyzer (DbPersist Sqlite m)
instance (MonadBaseControl IO m, MonadIO m, MonadLogger m) => PersistBackend (DbPersist Sqlite m)
instance SqlDb Sqlite
instance DbDescriptor Sqlite
