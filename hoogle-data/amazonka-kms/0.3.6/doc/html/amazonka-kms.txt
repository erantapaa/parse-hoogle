-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Amazon Key Management Service SDK.
--   
@package amazonka-kms
@version 0.3.6

module Network.AWS.KMS.Types

-- | Version <tt>2014-11-01</tt> of the Amazon Key Management Service
--   service.
data KMS
data JSONError :: *
data KeyUsageType

-- | ENCRYPT_DECRYPT
EncryptDecrypt :: KeyUsageType
data KeyMetadata

-- | <a>KeyMetadata</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>kmAWSAccountId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>kmArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>kmCreationDate</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>kmDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>kmEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>kmKeyId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>kmKeyUsage</a> <tt>::</tt> <a>Maybe</a>
--   <a>KeyUsageType</a></li>
--   </ul>
keyMetadata :: Text -> KeyMetadata

-- | Account ID number.
kmAWSAccountId :: Lens' KeyMetadata (Maybe Text)

-- | Key ARN (Amazon Resource Name).
kmArn :: Lens' KeyMetadata (Maybe Text)

-- | Date the key was created.
kmCreationDate :: Lens' KeyMetadata (Maybe UTCTime)

-- | The description of the key.
kmDescription :: Lens' KeyMetadata (Maybe Text)

-- | Value that specifies whether the key is enabled.
kmEnabled :: Lens' KeyMetadata (Maybe Bool)

-- | Unique identifier for the key.
kmKeyId :: Lens' KeyMetadata Text

-- | A value that specifies what operation(s) the key can perform.
kmKeyUsage :: Lens' KeyMetadata (Maybe KeyUsageType)
data DataKeySpec

-- | AES_128
AES128 :: DataKeySpec

-- | AES_256
AES256 :: DataKeySpec
data GrantConstraints

-- | <a>GrantConstraints</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gcEncryptionContextEquals</a> <tt>::</tt> <a>HashMap</a>
--   <a>Text</a> <a>Text</a></li>
--   <li><a>gcEncryptionContextSubset</a> <tt>::</tt> <a>HashMap</a>
--   <a>Text</a> <a>Text</a></li>
--   </ul>
grantConstraints :: GrantConstraints

-- | The constraint contains additional key/value pairs that serve to
--   further limit the grant.
gcEncryptionContextEquals :: Lens' GrantConstraints (HashMap Text Text)

-- | The constraint equals the full encryption context.
gcEncryptionContextSubset :: Lens' GrantConstraints (HashMap Text Text)
data AliasListEntry

-- | <a>AliasListEntry</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>aleAliasArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>aleAliasName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>aleTargetKeyId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
aliasListEntry :: AliasListEntry

-- | String that contains the key ARN.
aleAliasArn :: Lens' AliasListEntry (Maybe Text)

-- | String that contains the alias.
aleAliasName :: Lens' AliasListEntry (Maybe Text)

-- | String that contains the key identifier pointed to by the alias.
aleTargetKeyId :: Lens' AliasListEntry (Maybe Text)
data GrantListEntry

-- | <a>GrantListEntry</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gleConstraints</a> <tt>::</tt> <a>Maybe</a>
--   <a>GrantConstraints</a></li>
--   <li><a>gleGrantId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gleGranteePrincipal</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>gleIssuingAccount</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gleOperations</a> <tt>::</tt> [<a>GrantOperation</a>]</li>
--   <li><a>gleRetiringPrincipal</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
grantListEntry :: GrantListEntry

-- | Specifies the conditions under which the actions specified by the
--   <tt>Operations</tt> parameter are allowed.
gleConstraints :: Lens' GrantListEntry (Maybe GrantConstraints)

-- | Unique grant identifier.
gleGrantId :: Lens' GrantListEntry (Maybe Text)

-- | The principal that receives the grant permission.
gleGranteePrincipal :: Lens' GrantListEntry (Maybe Text)

-- | The account under which the grant was issued.
gleIssuingAccount :: Lens' GrantListEntry (Maybe Text)

-- | List of operations permitted by the grant. This can be any combination
--   of one or more of the following values: Decrypt Encrypt
--   GenerateDataKey GenerateDataKeyWithoutPlaintext ReEncryptFrom
--   ReEncryptTo CreateGrant
gleOperations :: Lens' GrantListEntry [GrantOperation]

-- | The principal that can retire the account.
gleRetiringPrincipal :: Lens' GrantListEntry (Maybe Text)
data GrantOperation

-- | CreateGrant
GOCreateGrant :: GrantOperation

-- | Decrypt
GODecrypt :: GrantOperation

-- | Encrypt
GOEncrypt :: GrantOperation

-- | GenerateDataKey
GOGenerateDataKey :: GrantOperation

-- | GenerateDataKeyWithoutPlaintext
GOGenerateDataKeyWithoutPlaintext :: GrantOperation

-- | ReEncryptFrom
GOReEncryptFrom :: GrantOperation

-- | ReEncryptTo
GOReEncryptTo :: GrantOperation

-- | RetireGrant
GORetireGrant :: GrantOperation
data KeyListEntry

-- | <a>KeyListEntry</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>kleKeyArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>kleKeyId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
keyListEntry :: KeyListEntry

-- | ARN of the key.
kleKeyArn :: Lens' KeyListEntry (Maybe Text)

-- | Unique identifier of the key.
kleKeyId :: Lens' KeyListEntry (Maybe Text)
instance Eq KeyUsageType
instance Ord KeyUsageType
instance Read KeyUsageType
instance Show KeyUsageType
instance Generic KeyUsageType
instance Enum KeyUsageType
instance Eq KeyMetadata
instance Read KeyMetadata
instance Show KeyMetadata
instance Eq DataKeySpec
instance Ord DataKeySpec
instance Read DataKeySpec
instance Show DataKeySpec
instance Generic DataKeySpec
instance Enum DataKeySpec
instance Eq GrantConstraints
instance Read GrantConstraints
instance Show GrantConstraints
instance Eq AliasListEntry
instance Ord AliasListEntry
instance Read AliasListEntry
instance Show AliasListEntry
instance Eq GrantOperation
instance Ord GrantOperation
instance Read GrantOperation
instance Show GrantOperation
instance Generic GrantOperation
instance Enum GrantOperation
instance Eq GrantListEntry
instance Read GrantListEntry
instance Show GrantListEntry
instance Eq KeyListEntry
instance Ord KeyListEntry
instance Read KeyListEntry
instance Show KeyListEntry
instance Datatype D1KeyUsageType
instance Constructor C1_0KeyUsageType
instance Datatype D1DataKeySpec
instance Constructor C1_0DataKeySpec
instance Constructor C1_1DataKeySpec
instance Datatype D1GrantOperation
instance Constructor C1_0GrantOperation
instance Constructor C1_1GrantOperation
instance Constructor C1_2GrantOperation
instance Constructor C1_3GrantOperation
instance Constructor C1_4GrantOperation
instance Constructor C1_5GrantOperation
instance Constructor C1_6GrantOperation
instance Constructor C1_7GrantOperation
instance ToJSON KeyListEntry
instance FromJSON KeyListEntry
instance ToJSON GrantOperation
instance FromJSON GrantOperation
instance ToQuery GrantOperation
instance ToHeader GrantOperation
instance ToByteString GrantOperation
instance ToText GrantOperation
instance FromText GrantOperation
instance Hashable GrantOperation
instance ToJSON GrantListEntry
instance FromJSON GrantListEntry
instance ToJSON AliasListEntry
instance FromJSON AliasListEntry
instance ToJSON GrantConstraints
instance FromJSON GrantConstraints
instance ToJSON DataKeySpec
instance FromJSON DataKeySpec
instance ToQuery DataKeySpec
instance ToHeader DataKeySpec
instance ToByteString DataKeySpec
instance ToText DataKeySpec
instance FromText DataKeySpec
instance Hashable DataKeySpec
instance ToJSON KeyMetadata
instance FromJSON KeyMetadata
instance ToJSON KeyUsageType
instance FromJSON KeyUsageType
instance ToQuery KeyUsageType
instance ToHeader KeyUsageType
instance ToByteString KeyUsageType
instance ToText KeyUsageType
instance FromText KeyUsageType
instance Hashable KeyUsageType
instance AWSService KMS


-- | Updates an alias to associate it with a different key.
--   
--   An alias name can contain only alphanumeric characters, forward
--   slashes (/), underscores (_), and dashes (-). An alias must start with
--   the word "alias" followed by a forward slash (alias/). An alias that
--   begins with "aws" after the forward slash (alias/aws...) is reserved
--   by Amazon Web Services (AWS).
--   
--   An alias is not a property of a key. Therefore, an alias can be
--   associated with and disassociated from an existing key without
--   changing the properties of the key.
--   
--   Note that you cannot create or update an alias that represents a key
--   in another account.
--   
--   
--   <a>http://docs.aws.amazon.com/kms/latest/APIReference/API_UpdateAlias.html</a>
module Network.AWS.KMS.UpdateAlias
data UpdateAlias

-- | <a>UpdateAlias</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uaAliasName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>uaTargetKeyId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
updateAlias :: Text -> Text -> UpdateAlias

-- | String that contains the name of the alias to be modifed. The name
--   must start with the word "alias" followed by a forward slash (alias/).
--   Aliases that begin with "alias/AWS" are reserved.
uaAliasName :: Lens' UpdateAlias Text

-- | Unique identifier of the customer master key to be associated with the
--   alias. This value can be a globally unique identifier or the fully
--   specified ARN of a key. Key ARN Example -
--   arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012
--   Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012
uaTargetKeyId :: Lens' UpdateAlias Text
data UpdateAliasResponse

-- | <a>UpdateAliasResponse</a> constructor.
updateAliasResponse :: UpdateAliasResponse
instance Eq UpdateAlias
instance Ord UpdateAlias
instance Read UpdateAlias
instance Show UpdateAlias
instance Eq UpdateAliasResponse
instance Ord UpdateAliasResponse
instance Read UpdateAliasResponse
instance Show UpdateAliasResponse
instance Generic UpdateAliasResponse
instance Datatype D1UpdateAliasResponse
instance Constructor C1_0UpdateAliasResponse
instance AWSRequest UpdateAlias
instance ToJSON UpdateAlias
instance ToHeaders UpdateAlias
instance ToQuery UpdateAlias
instance ToPath UpdateAlias


-- | Updates the description of a key.
--   
--   
--   <a>http://docs.aws.amazon.com/kms/latest/APIReference/API_UpdateKeyDescription.html</a>
module Network.AWS.KMS.UpdateKeyDescription
data UpdateKeyDescription

-- | <a>UpdateKeyDescription</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ukdDescription</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ukdKeyId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
updateKeyDescription :: Text -> Text -> UpdateKeyDescription

-- | New description for the key.
ukdDescription :: Lens' UpdateKeyDescription Text

-- | A unique identifier for the customer master key. This value can be a
--   globally unique identifier or the fully specified ARN to a key. Key
--   ARN Example -
--   arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012
--   Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012
ukdKeyId :: Lens' UpdateKeyDescription Text
data UpdateKeyDescriptionResponse

-- | <a>UpdateKeyDescriptionResponse</a> constructor.
updateKeyDescriptionResponse :: UpdateKeyDescriptionResponse
instance Eq UpdateKeyDescription
instance Ord UpdateKeyDescription
instance Read UpdateKeyDescription
instance Show UpdateKeyDescription
instance Eq UpdateKeyDescriptionResponse
instance Ord UpdateKeyDescriptionResponse
instance Read UpdateKeyDescriptionResponse
instance Show UpdateKeyDescriptionResponse
instance Generic UpdateKeyDescriptionResponse
instance Datatype D1UpdateKeyDescriptionResponse
instance Constructor C1_0UpdateKeyDescriptionResponse
instance AWSRequest UpdateKeyDescription
instance ToJSON UpdateKeyDescription
instance ToHeaders UpdateKeyDescription
instance ToQuery UpdateKeyDescription
instance ToPath UpdateKeyDescription


-- | Revokes a grant. You can revoke a grant to actively deny operations
--   that depend on it.
--   
--   
--   <a>http://docs.aws.amazon.com/kms/latest/APIReference/API_RevokeGrant.html</a>
module Network.AWS.KMS.RevokeGrant
data RevokeGrant

-- | <a>RevokeGrant</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rg1GrantId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rg1KeyId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
revokeGrant :: Text -> Text -> RevokeGrant

-- | Identifier of the grant to be revoked.
rg1GrantId :: Lens' RevokeGrant Text

-- | A unique identifier for the customer master key associated with the
--   grant. This value can be a globally unique identifier or the fully
--   specified ARN to a key. Key ARN Example -
--   arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012
--   Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012
rg1KeyId :: Lens' RevokeGrant Text
data RevokeGrantResponse

-- | <a>RevokeGrantResponse</a> constructor.
revokeGrantResponse :: RevokeGrantResponse
instance Eq RevokeGrant
instance Ord RevokeGrant
instance Read RevokeGrant
instance Show RevokeGrant
instance Eq RevokeGrantResponse
instance Ord RevokeGrantResponse
instance Read RevokeGrantResponse
instance Show RevokeGrantResponse
instance Generic RevokeGrantResponse
instance Datatype D1RevokeGrantResponse
instance Constructor C1_0RevokeGrantResponse
instance AWSRequest RevokeGrant
instance ToJSON RevokeGrant
instance ToHeaders RevokeGrant
instance ToQuery RevokeGrant
instance ToPath RevokeGrant


-- | Retires a grant. You can retire a grant when you're done using it to
--   clean up. You should revoke a grant when you intend to actively deny
--   operations that depend on it. The following are permitted to call this
--   API: The account that created the grant The
--   <tt>RetiringPrincipal</tt>, if present The <tt>GranteePrincipal</tt>,
--   if <a>RetireGrant</a> is a grantee operation The grant to retire must
--   be identified by its grant token or by a combination of the key ARN
--   and the grant ID. A grant token is a unique variable-length
--   base64-encoded string. A grant ID is a 64 character unique identifier
--   of a grant. Both are returned by the <tt>CreateGrant</tt> function.
--   
--   
--   <a>http://docs.aws.amazon.com/kms/latest/APIReference/API_RetireGrant.html</a>
module Network.AWS.KMS.RetireGrant
data RetireGrant

-- | <a>RetireGrant</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rgGrantId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rgGrantToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rgKeyId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
retireGrant :: RetireGrant

-- | Unique identifier of the grant to be retired. The grant ID is returned
--   by the <tt>CreateGrant</tt> function. Grant ID Example -
--   0123456789012345678901234567890123456789012345678901234567890123
rgGrantId :: Lens' RetireGrant (Maybe Text)

-- | Token that identifies the grant to be retired.
rgGrantToken :: Lens' RetireGrant (Maybe Text)

-- | A unique identifier for the customer master key associated with the
--   grant. This value can be a globally unique identifier or a fully
--   specified ARN of the key. Key ARN Example -
--   arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012
--   Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012
rgKeyId :: Lens' RetireGrant (Maybe Text)
data RetireGrantResponse

-- | <a>RetireGrantResponse</a> constructor.
retireGrantResponse :: RetireGrantResponse
instance Eq RetireGrant
instance Ord RetireGrant
instance Read RetireGrant
instance Show RetireGrant
instance Eq RetireGrantResponse
instance Ord RetireGrantResponse
instance Read RetireGrantResponse
instance Show RetireGrantResponse
instance Generic RetireGrantResponse
instance Datatype D1RetireGrantResponse
instance Constructor C1_0RetireGrantResponse
instance AWSRequest RetireGrant
instance ToJSON RetireGrant
instance ToHeaders RetireGrant
instance ToQuery RetireGrant
instance ToPath RetireGrant


-- | Encrypts data on the server side with a new customer master key
--   without exposing the plaintext of the data on the client side. The
--   data is first decrypted and then encrypted. This operation can also be
--   used to change the encryption context of a ciphertext.
--   
--   Unlike other actions, <a>ReEncrypt</a> is authorized twice - once as
--   <tt>ReEncryptFrom</tt> on the source key and once as
--   <tt>ReEncryptTo</tt> on the destination key. We therefore recommend
--   that you include the '"action":"kms:ReEncrypt*"' statement in your key
--   policies to permit re-encryption from or to the key. The statement is
--   included automatically when you authorize use of the key through the
--   console but must be included manually when you set a policy by using
--   the <tt>PutKeyPolicy</tt> function.
--   
--   
--   <a>http://docs.aws.amazon.com/kms/latest/APIReference/API_ReEncrypt.html</a>
module Network.AWS.KMS.ReEncrypt
data ReEncrypt

-- | <a>ReEncrypt</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>reCiphertextBlob</a> <tt>::</tt> <a>Base64</a></li>
--   <li><a>reDestinationEncryptionContext</a> <tt>::</tt> <a>HashMap</a>
--   <a>Text</a> <a>Text</a></li>
--   <li><a>reDestinationKeyId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>reGrantTokens</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>reSourceEncryptionContext</a> <tt>::</tt> <a>HashMap</a>
--   <a>Text</a> <a>Text</a></li>
--   </ul>
reEncrypt :: Base64 -> Text -> ReEncrypt

-- | Ciphertext of the data to re-encrypt.
reCiphertextBlob :: Lens' ReEncrypt Base64

-- | Encryption context to be used when the data is re-encrypted.
reDestinationEncryptionContext :: Lens' ReEncrypt (HashMap Text Text)

-- | A unique identifier for the customer master key used to re-encrypt the
--   data. This value can be a globally unique identifier, a fully
--   specified ARN to either an alias or a key, or an alias name prefixed
--   by "alias/". Key ARN Example -
--   arn:aws:kms:us-east-1:123456789012:key<i>12345678-1234-1234-1234-123456789012
--   Alias ARN Example -
--   arn:aws:kms:us-east-1:123456789012:alias</i>MyAliasName Globally
--   Unique Key ID Example - 12345678-1234-1234-1234-123456789012 Alias
--   Name Example - alias/MyAliasName
reDestinationKeyId :: Lens' ReEncrypt Text

-- | For more information, see <a>Grant Tokens</a>.
reGrantTokens :: Lens' ReEncrypt [Text]

-- | Encryption context used to encrypt and decrypt the data specified in
--   the <tt>CiphertextBlob</tt> parameter.
reSourceEncryptionContext :: Lens' ReEncrypt (HashMap Text Text)
data ReEncryptResponse

-- | <a>ReEncryptResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rerCiphertextBlob</a> <tt>::</tt> <a>Maybe</a>
--   <a>Base64</a></li>
--   <li><a>rerKeyId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rerSourceKeyId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
reEncryptResponse :: ReEncryptResponse

-- | The re-encrypted data. If you are using the CLI, the value is Base64
--   encoded. Otherwise, it is not encoded.
rerCiphertextBlob :: Lens' ReEncryptResponse (Maybe Base64)

-- | Unique identifier of the key used to re-encrypt the data.
rerKeyId :: Lens' ReEncryptResponse (Maybe Text)

-- | Unique identifier of the key used to originally encrypt the data.
rerSourceKeyId :: Lens' ReEncryptResponse (Maybe Text)
instance Eq ReEncrypt
instance Read ReEncrypt
instance Show ReEncrypt
instance Eq ReEncryptResponse
instance Read ReEncryptResponse
instance Show ReEncryptResponse
instance FromJSON ReEncryptResponse
instance AWSRequest ReEncrypt
instance ToJSON ReEncrypt
instance ToHeaders ReEncrypt
instance ToQuery ReEncrypt
instance ToPath ReEncrypt


-- | Attaches a policy to the specified key.
--   
--   
--   <a>http://docs.aws.amazon.com/kms/latest/APIReference/API_PutKeyPolicy.html</a>
module Network.AWS.KMS.PutKeyPolicy
data PutKeyPolicy

-- | <a>PutKeyPolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pkpKeyId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>pkpPolicy</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>pkpPolicyName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
putKeyPolicy :: Text -> Text -> Text -> PutKeyPolicy

-- | A unique identifier for the customer master key. This value can be a
--   globally unique identifier or the fully specified ARN to a key. Key
--   ARN Example -
--   arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012
--   Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012
pkpKeyId :: Lens' PutKeyPolicy Text

-- | The policy, in JSON format, to be attached to the key.
pkpPolicy :: Lens' PutKeyPolicy Text

-- | Name of the policy to be attached. Currently, the only supported name
--   is "default".
pkpPolicyName :: Lens' PutKeyPolicy Text
data PutKeyPolicyResponse

-- | <a>PutKeyPolicyResponse</a> constructor.
putKeyPolicyResponse :: PutKeyPolicyResponse
instance Eq PutKeyPolicy
instance Ord PutKeyPolicy
instance Read PutKeyPolicy
instance Show PutKeyPolicy
instance Eq PutKeyPolicyResponse
instance Ord PutKeyPolicyResponse
instance Read PutKeyPolicyResponse
instance Show PutKeyPolicyResponse
instance Generic PutKeyPolicyResponse
instance Datatype D1PutKeyPolicyResponse
instance Constructor C1_0PutKeyPolicyResponse
instance AWSRequest PutKeyPolicy
instance ToJSON PutKeyPolicy
instance ToHeaders PutKeyPolicy
instance ToQuery PutKeyPolicy
instance ToPath PutKeyPolicy


-- | Lists the customer master keys.
--   
--   
--   <a>http://docs.aws.amazon.com/kms/latest/APIReference/API_ListKeys.html</a>
module Network.AWS.KMS.ListKeys
data ListKeys

-- | <a>ListKeys</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lkLimit</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>lkMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listKeys :: ListKeys

-- | Specify this parameter only when paginating results to indicate the
--   maximum number of keys you want listed in the response. If there are
--   additional keys beyond the maximum you specify, the <tt>Truncated</tt>
--   response element will be set to 'true.'
lkLimit :: Lens' ListKeys (Maybe Natural)

-- | Use this parameter only when paginating results, and only in a
--   subsequent request after you've received a response where the results
--   are truncated. Set it to the value of the <tt>NextMarker</tt> in the
--   response you just received.
lkMarker :: Lens' ListKeys (Maybe Text)
data ListKeysResponse

-- | <a>ListKeysResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lkrKeys</a> <tt>::</tt> [<a>KeyListEntry</a>]</li>
--   <li><a>lkrNextMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lkrTruncated</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   </ul>
listKeysResponse :: ListKeysResponse

-- | A list of keys.
lkrKeys :: Lens' ListKeysResponse [KeyListEntry]

-- | If <tt>Truncated</tt> is true, this value is present and contains the
--   value to use for the <tt>Marker</tt> request parameter in a subsequent
--   pagination request.
lkrNextMarker :: Lens' ListKeysResponse (Maybe Text)

-- | A flag that indicates whether there are more items in the list. If
--   your results were truncated, you can make a subsequent pagination
--   request using the <tt>Marker</tt> request parameter to retrieve more
--   keys in the list.
lkrTruncated :: Lens' ListKeysResponse (Maybe Bool)
instance Eq ListKeys
instance Ord ListKeys
instance Read ListKeys
instance Show ListKeys
instance Eq ListKeysResponse
instance Read ListKeysResponse
instance Show ListKeysResponse
instance FromJSON ListKeysResponse
instance AWSRequest ListKeys
instance ToJSON ListKeys
instance ToHeaders ListKeys
instance ToQuery ListKeys
instance ToPath ListKeys


-- | Retrieves a list of policies attached to a key.
--   
--   
--   <a>http://docs.aws.amazon.com/kms/latest/APIReference/API_ListKeyPolicies.html</a>
module Network.AWS.KMS.ListKeyPolicies
data ListKeyPolicies

-- | <a>ListKeyPolicies</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lkpKeyId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>lkpLimit</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>lkpMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listKeyPolicies :: Text -> ListKeyPolicies

-- | A unique identifier for the customer master key. This value can be a
--   globally unique identifier, a fully specified ARN to either an alias
--   or a key, or an alias name prefixed by "alias/". Key ARN Example -
--   arn:aws:kms:us-east-1:123456789012:key<i>12345678-1234-1234-1234-123456789012
--   Alias ARN Example -
--   arn:aws:kms:us-east-1:123456789012:alias</i>MyAliasName Globally
--   Unique Key ID Example - 12345678-1234-1234-1234-123456789012 Alias
--   Name Example - alias/MyAliasName
lkpKeyId :: Lens' ListKeyPolicies Text

-- | Specify this parameter only when paginating results to indicate the
--   maximum number of policies you want listed in the response. If there
--   are additional policies beyond the maximum you specify, the
--   <tt>Truncated</tt> response element will be set to 'true.'
lkpLimit :: Lens' ListKeyPolicies (Maybe Natural)

-- | Use this parameter only when paginating results, and only in a
--   subsequent request after you've received a response where the results
--   are truncated. Set it to the value of the <tt>NextMarker</tt> in the
--   response you just received.
lkpMarker :: Lens' ListKeyPolicies (Maybe Text)
data ListKeyPoliciesResponse

-- | <a>ListKeyPoliciesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lkprNextMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lkprPolicyNames</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>lkprTruncated</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   </ul>
listKeyPoliciesResponse :: ListKeyPoliciesResponse

-- | If <tt>Truncated</tt> is true, this value is present and contains the
--   value to use for the <tt>Marker</tt> request parameter in a subsequent
--   pagination request.
lkprNextMarker :: Lens' ListKeyPoliciesResponse (Maybe Text)

-- | A list of policy names. Currently, there is only one policy and it is
--   named <a>Default</a>.
lkprPolicyNames :: Lens' ListKeyPoliciesResponse [Text]

-- | A flag that indicates whether there are more items in the list. If
--   your results were truncated, you can make a subsequent pagination
--   request using the <tt>Marker</tt> request parameter to retrieve more
--   policies in the list.
lkprTruncated :: Lens' ListKeyPoliciesResponse (Maybe Bool)
instance Eq ListKeyPolicies
instance Ord ListKeyPolicies
instance Read ListKeyPolicies
instance Show ListKeyPolicies
instance Eq ListKeyPoliciesResponse
instance Ord ListKeyPoliciesResponse
instance Read ListKeyPoliciesResponse
instance Show ListKeyPoliciesResponse
instance FromJSON ListKeyPoliciesResponse
instance AWSRequest ListKeyPolicies
instance ToJSON ListKeyPolicies
instance ToHeaders ListKeyPolicies
instance ToQuery ListKeyPolicies
instance ToPath ListKeyPolicies


-- | List the grants for a specified key.
--   
--   
--   <a>http://docs.aws.amazon.com/kms/latest/APIReference/API_ListGrants.html</a>
module Network.AWS.KMS.ListGrants
data ListGrants

-- | <a>ListGrants</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lgKeyId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>lgLimit</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>lgMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listGrants :: Text -> ListGrants

-- | A unique identifier for the customer master key. This value can be a
--   globally unique identifier or the fully specified ARN to a key. Key
--   ARN Example -
--   arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012
--   Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012
lgKeyId :: Lens' ListGrants Text

-- | Specify this parameter only when paginating results to indicate the
--   maximum number of grants you want listed in the response. If there are
--   additional grants beyond the maximum you specify, the
--   <tt>Truncated</tt> response element will be set to 'true.'
lgLimit :: Lens' ListGrants (Maybe Natural)

-- | Use this parameter only when paginating results, and only in a
--   subsequent request after you've received a response where the results
--   are truncated. Set it to the value of the <tt>NextMarker</tt> in the
--   response you just received.
lgMarker :: Lens' ListGrants (Maybe Text)
data ListGrantsResponse

-- | <a>ListGrantsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lgrGrants</a> <tt>::</tt> [<a>GrantListEntry</a>]</li>
--   <li><a>lgrNextMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lgrTruncated</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   </ul>
listGrantsResponse :: ListGrantsResponse

-- | A list of grants.
lgrGrants :: Lens' ListGrantsResponse [GrantListEntry]

-- | If <tt>Truncated</tt> is true, this value is present and contains the
--   value to use for the <tt>Marker</tt> request parameter in a subsequent
--   pagination request.
lgrNextMarker :: Lens' ListGrantsResponse (Maybe Text)

-- | A flag that indicates whether there are more items in the list. If
--   your results were truncated, you can make a subsequent pagination
--   request using the <tt>Marker</tt> request parameter to retrieve more
--   grants in the list.
lgrTruncated :: Lens' ListGrantsResponse (Maybe Bool)
instance Eq ListGrants
instance Ord ListGrants
instance Read ListGrants
instance Show ListGrants
instance Eq ListGrantsResponse
instance Read ListGrantsResponse
instance Show ListGrantsResponse
instance FromJSON ListGrantsResponse
instance AWSRequest ListGrants
instance ToJSON ListGrants
instance ToHeaders ListGrants
instance ToQuery ListGrants
instance ToPath ListGrants


-- | Lists all of the key aliases in the account.
--   
--   
--   <a>http://docs.aws.amazon.com/kms/latest/APIReference/API_ListAliases.html</a>
module Network.AWS.KMS.ListAliases
data ListAliases

-- | <a>ListAliases</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>laLimit</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>laMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listAliases :: ListAliases

-- | Specify this parameter when paginating results to indicate the maximum
--   number of aliases you want in each response. If there are additional
--   aliases beyond the maximum you specify, the <tt>Truncated</tt>
--   response element will be set to 'true.'
laLimit :: Lens' ListAliases (Maybe Natural)

-- | Use this parameter when paginating results, and only in a subsequent
--   request after you've received a response where the results are
--   truncated. Set it to the value of the <tt>NextMarker</tt> element in
--   the response you just received.
laMarker :: Lens' ListAliases (Maybe Text)
data ListAliasesResponse

-- | <a>ListAliasesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>larAliases</a> <tt>::</tt> [<a>AliasListEntry</a>]</li>
--   <li><a>larNextMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>larTruncated</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   </ul>
listAliasesResponse :: ListAliasesResponse

-- | A list of key aliases in the user's account.
larAliases :: Lens' ListAliasesResponse [AliasListEntry]

-- | If <tt>Truncated</tt> is true, this value is present and contains the
--   value to use for the <tt>Marker</tt> request parameter in a subsequent
--   pagination request.
larNextMarker :: Lens' ListAliasesResponse (Maybe Text)

-- | A flag that indicates whether there are more items in the list. If
--   your results were truncated, you can make a subsequent pagination
--   request using the <tt>Marker</tt> request parameter to retrieve more
--   aliases in the list.
larTruncated :: Lens' ListAliasesResponse (Maybe Bool)
instance Eq ListAliases
instance Ord ListAliases
instance Read ListAliases
instance Show ListAliases
instance Eq ListAliasesResponse
instance Read ListAliasesResponse
instance Show ListAliasesResponse
instance FromJSON ListAliasesResponse
instance AWSRequest ListAliases
instance ToJSON ListAliases
instance ToHeaders ListAliases
instance ToQuery ListAliases
instance ToPath ListAliases


-- | Retrieves a Boolean value that indicates whether key rotation is
--   enabled for the specified key.
--   
--   
--   <a>http://docs.aws.amazon.com/kms/latest/APIReference/API_GetKeyRotationStatus.html</a>
module Network.AWS.KMS.GetKeyRotationStatus
data GetKeyRotationStatus

-- | <a>GetKeyRotationStatus</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gkrsKeyId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getKeyRotationStatus :: Text -> GetKeyRotationStatus

-- | A unique identifier for the customer master key. This value can be a
--   globally unique identifier or the fully specified ARN to a key. Key
--   ARN Example -
--   arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012
--   Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012
gkrsKeyId :: Lens' GetKeyRotationStatus Text
data GetKeyRotationStatusResponse

-- | <a>GetKeyRotationStatusResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gkrsrKeyRotationEnabled</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   </ul>
getKeyRotationStatusResponse :: GetKeyRotationStatusResponse

-- | A Boolean value that specifies whether key rotation is enabled.
gkrsrKeyRotationEnabled :: Lens' GetKeyRotationStatusResponse (Maybe Bool)
instance Eq GetKeyRotationStatus
instance Ord GetKeyRotationStatus
instance Read GetKeyRotationStatus
instance Show GetKeyRotationStatus
instance Monoid GetKeyRotationStatus
instance IsString GetKeyRotationStatus
instance Eq GetKeyRotationStatusResponse
instance Ord GetKeyRotationStatusResponse
instance Read GetKeyRotationStatusResponse
instance Show GetKeyRotationStatusResponse
instance FromJSON GetKeyRotationStatusResponse
instance AWSRequest GetKeyRotationStatus
instance ToJSON GetKeyRotationStatus
instance ToHeaders GetKeyRotationStatus
instance ToQuery GetKeyRotationStatus
instance ToPath GetKeyRotationStatus


-- | Retrieves a policy attached to the specified key.
--   
--   
--   <a>http://docs.aws.amazon.com/kms/latest/APIReference/API_GetKeyPolicy.html</a>
module Network.AWS.KMS.GetKeyPolicy
data GetKeyPolicy

-- | <a>GetKeyPolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gkpKeyId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>gkpPolicyName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getKeyPolicy :: Text -> Text -> GetKeyPolicy

-- | A unique identifier for the customer master key. This value can be a
--   globally unique identifier or the fully specified ARN to a key. Key
--   ARN Example -
--   arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012
--   Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012
gkpKeyId :: Lens' GetKeyPolicy Text

-- | String that contains the name of the policy. Currently, this must be
--   "default". Policy names can be discovered by calling
--   <tt>ListKeyPolicies</tt>.
gkpPolicyName :: Lens' GetKeyPolicy Text
data GetKeyPolicyResponse

-- | <a>GetKeyPolicyResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gkprPolicy</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
getKeyPolicyResponse :: GetKeyPolicyResponse

-- | A policy document in JSON format.
gkprPolicy :: Lens' GetKeyPolicyResponse (Maybe Text)
instance Eq GetKeyPolicy
instance Ord GetKeyPolicy
instance Read GetKeyPolicy
instance Show GetKeyPolicy
instance Eq GetKeyPolicyResponse
instance Ord GetKeyPolicyResponse
instance Read GetKeyPolicyResponse
instance Show GetKeyPolicyResponse
instance Monoid GetKeyPolicyResponse
instance FromJSON GetKeyPolicyResponse
instance AWSRequest GetKeyPolicy
instance ToJSON GetKeyPolicy
instance ToHeaders GetKeyPolicy
instance ToQuery GetKeyPolicy
instance ToPath GetKeyPolicy


-- | Generates an unpredictable byte string.
--   
--   
--   <a>http://docs.aws.amazon.com/kms/latest/APIReference/API_GenerateRandom.html</a>
module Network.AWS.KMS.GenerateRandom
data GenerateRandom

-- | <a>GenerateRandom</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>grNumberOfBytes</a> <tt>::</tt> <a>Maybe</a>
--   <a>Natural</a></li>
--   </ul>
generateRandom :: GenerateRandom

-- | Integer that contains the number of bytes to generate. Common values
--   are 128, 256, 512, 1024 and so on. The current limit is 1024 bytes.
grNumberOfBytes :: Lens' GenerateRandom (Maybe Natural)
data GenerateRandomResponse

-- | <a>GenerateRandomResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>grrPlaintext</a> <tt>::</tt> <a>Maybe</a> <a>Base64</a></li>
--   </ul>
generateRandomResponse :: GenerateRandomResponse

-- | Plaintext that contains the unpredictable byte string.
grrPlaintext :: Lens' GenerateRandomResponse (Maybe Base64)
instance Eq GenerateRandom
instance Ord GenerateRandom
instance Read GenerateRandom
instance Show GenerateRandom
instance Eq GenerateRandomResponse
instance Read GenerateRandomResponse
instance Show GenerateRandomResponse
instance FromJSON GenerateRandomResponse
instance AWSRequest GenerateRandom
instance ToJSON GenerateRandom
instance ToHeaders GenerateRandom
instance ToQuery GenerateRandom
instance ToPath GenerateRandom


-- | Returns a data key encrypted by a customer master key without the
--   plaintext copy of that key. Otherwise, this API functions exactly like
--   <tt>GenerateDataKey</tt>. You can use this API to, for example,
--   satisfy an audit requirement that an encrypted key be made available
--   without exposing the plaintext copy of that key.
--   
--   
--   <a>http://docs.aws.amazon.com/kms/latest/APIReference/API_GenerateDataKeyWithoutPlaintext.html</a>
module Network.AWS.KMS.GenerateDataKeyWithoutPlaintext
data GenerateDataKeyWithoutPlaintext

-- | <a>GenerateDataKeyWithoutPlaintext</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gdkwpEncryptionContext</a> <tt>::</tt> <a>HashMap</a>
--   <a>Text</a> <a>Text</a></li>
--   <li><a>gdkwpGrantTokens</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>gdkwpKeyId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>gdkwpKeySpec</a> <tt>::</tt> <a>Maybe</a>
--   <a>DataKeySpec</a></li>
--   <li><a>gdkwpNumberOfBytes</a> <tt>::</tt> <a>Maybe</a>
--   <a>Natural</a></li>
--   </ul>
generateDataKeyWithoutPlaintext :: Text -> GenerateDataKeyWithoutPlaintext

-- | Name:value pair that contains additional data to be authenticated
--   during the encryption and decryption processes.
gdkwpEncryptionContext :: Lens' GenerateDataKeyWithoutPlaintext (HashMap Text Text)

-- | For more information, see <a>Grant Tokens</a>.
gdkwpGrantTokens :: Lens' GenerateDataKeyWithoutPlaintext [Text]

-- | A unique identifier for the customer master key. This value can be a
--   globally unique identifier, a fully specified ARN to either an alias
--   or a key, or an alias name prefixed by "alias/". Key ARN Example -
--   arn:aws:kms:us-east-1:123456789012:key<i>12345678-1234-1234-1234-123456789012
--   Alias ARN Example -
--   arn:aws:kms:us-east-1:123456789012:alias</i>MyAliasName Globally
--   Unique Key ID Example - 12345678-1234-1234-1234-123456789012 Alias
--   Name Example - alias/MyAliasName
gdkwpKeyId :: Lens' GenerateDataKeyWithoutPlaintext Text

-- | Value that identifies the encryption algorithm and key size. Currently
--   this can be AES_128 or AES_256.
gdkwpKeySpec :: Lens' GenerateDataKeyWithoutPlaintext (Maybe DataKeySpec)

-- | Integer that contains the number of bytes to generate. Common values
--   are 128, 256, 512, 1024 and so on. We recommend that you use the
--   <tt>KeySpec</tt> parameter instead.
gdkwpNumberOfBytes :: Lens' GenerateDataKeyWithoutPlaintext (Maybe Natural)
data GenerateDataKeyWithoutPlaintextResponse

-- | <a>GenerateDataKeyWithoutPlaintextResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gdkwprCiphertextBlob</a> <tt>::</tt> <a>Maybe</a>
--   <a>Base64</a></li>
--   <li><a>gdkwprKeyId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
generateDataKeyWithoutPlaintextResponse :: GenerateDataKeyWithoutPlaintextResponse

-- | Ciphertext that contains the wrapped data key. You must store the blob
--   and encryption context so that the key can be used in a future decrypt
--   operation.
--   
--   If you are using the CLI, the value is Base64 encoded. Otherwise, it
--   is not encoded.
gdkwprCiphertextBlob :: Lens' GenerateDataKeyWithoutPlaintextResponse (Maybe Base64)

-- | System generated unique identifier of the key to be used to decrypt
--   the encrypted copy of the data key.
gdkwprKeyId :: Lens' GenerateDataKeyWithoutPlaintextResponse (Maybe Text)
instance Eq GenerateDataKeyWithoutPlaintext
instance Read GenerateDataKeyWithoutPlaintext
instance Show GenerateDataKeyWithoutPlaintext
instance Eq GenerateDataKeyWithoutPlaintextResponse
instance Read GenerateDataKeyWithoutPlaintextResponse
instance Show GenerateDataKeyWithoutPlaintextResponse
instance FromJSON GenerateDataKeyWithoutPlaintextResponse
instance AWSRequest GenerateDataKeyWithoutPlaintext
instance ToJSON GenerateDataKeyWithoutPlaintext
instance ToHeaders GenerateDataKeyWithoutPlaintext
instance ToQuery GenerateDataKeyWithoutPlaintext
instance ToPath GenerateDataKeyWithoutPlaintext


-- | Generates a data key that you can use in your application to locally
--   encrypt data. This call returns a plaintext version of the key in the
--   <tt>Plaintext</tt> field of the response object and an encrypted copy
--   of the key in the <tt>CiphertextBlob</tt> field. The key is encrypted
--   by using the master key specified by the <tt>KeyId</tt> field. To
--   decrypt the encrypted key, pass it to the <tt>Decrypt</tt> API.
--   
--   We recommend that you use the following pattern to locally encrypt
--   data: call the <a>GenerateDataKey</a> API, use the key returned in the
--   <tt>Plaintext</tt> response field to locally encrypt data, and then
--   erase the plaintext data key from memory. Store the encrypted data key
--   (contained in the <tt>CiphertextBlob</tt> field) alongside of the
--   locally encrypted data.
--   
--   You should not call the <tt>Encrypt</tt> function to re-encrypt your
--   data keys within a region. <a>GenerateDataKey</a> always returns the
--   data key encrypted and tied to the customer master key that will be
--   used to decrypt it. There is no need to decrypt it twice. If you
--   decide to use the optional <tt>EncryptionContext</tt> parameter, you
--   must also store the context in full or at least store enough
--   information along with the encrypted data to be able to reconstruct
--   the context when submitting the ciphertext to the <tt>Decrypt</tt>
--   API. It is a good practice to choose a context that you can
--   reconstruct on the fly to better secure the ciphertext. For more
--   information about how this parameter is used, see <a>Encryption
--   Context</a>.
--   
--   To decrypt data, pass the encrypted data key to the <tt>Decrypt</tt>
--   API. <tt>Decrypt</tt> uses the associated master key to decrypt the
--   encrypted data key and returns it as plaintext. Use the plaintext data
--   key to locally decrypt your data and then erase the key from memory.
--   You must specify the encryption context, if any, that you specified
--   when you generated the key. The encryption context is logged by
--   CloudTrail, and you can use this log to help track the use of
--   particular data.
--   
--   
--   <a>http://docs.aws.amazon.com/kms/latest/APIReference/API_GenerateDataKey.html</a>
module Network.AWS.KMS.GenerateDataKey
data GenerateDataKey

-- | <a>GenerateDataKey</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gdkEncryptionContext</a> <tt>::</tt> <a>HashMap</a> <a>Text</a>
--   <a>Text</a></li>
--   <li><a>gdkGrantTokens</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>gdkKeyId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>gdkKeySpec</a> <tt>::</tt> <a>Maybe</a> <a>DataKeySpec</a></li>
--   <li><a>gdkNumberOfBytes</a> <tt>::</tt> <a>Maybe</a>
--   <a>Natural</a></li>
--   </ul>
generateDataKey :: Text -> GenerateDataKey

-- | Name/value pair that contains additional data to be authenticated
--   during the encryption and decryption processes that use the key. This
--   value is logged by AWS CloudTrail to provide context around the data
--   encrypted by the key.
gdkEncryptionContext :: Lens' GenerateDataKey (HashMap Text Text)

-- | For more information, see <a>Grant Tokens</a>.
gdkGrantTokens :: Lens' GenerateDataKey [Text]

-- | A unique identifier for the customer master key. This value can be a
--   globally unique identifier, a fully specified ARN to either an alias
--   or a key, or an alias name prefixed by "alias/". Key ARN Example -
--   arn:aws:kms:us-east-1:123456789012:key<i>12345678-1234-1234-1234-123456789012
--   Alias ARN Example -
--   arn:aws:kms:us-east-1:123456789012:alias</i>MyAliasName Globally
--   Unique Key ID Example - 12345678-1234-1234-1234-123456789012 Alias
--   Name Example - alias/MyAliasName
gdkKeyId :: Lens' GenerateDataKey Text

-- | Value that identifies the encryption algorithm and key size to
--   generate a data key for. Currently this can be AES_128 or AES_256.
gdkKeySpec :: Lens' GenerateDataKey (Maybe DataKeySpec)

-- | Integer that contains the number of bytes to generate. Common values
--   are 128, 256, 512, and 1024. 1024 is the current limit. We recommend
--   that you use the <tt>KeySpec</tt> parameter instead.
gdkNumberOfBytes :: Lens' GenerateDataKey (Maybe Natural)
data GenerateDataKeyResponse

-- | <a>GenerateDataKeyResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gdkrCiphertextBlob</a> <tt>::</tt> <a>Maybe</a>
--   <a>Base64</a></li>
--   <li><a>gdkrKeyId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gdkrPlaintext</a> <tt>::</tt> <a>Maybe</a> <a>Base64</a></li>
--   </ul>
generateDataKeyResponse :: GenerateDataKeyResponse

-- | Ciphertext that contains the encrypted data key. You must store the
--   blob and enough information to reconstruct the encryption context so
--   that the data encrypted by using the key can later be decrypted. You
--   must provide both the ciphertext blob and the encryption context to
--   the <tt>Decrypt</tt> API to recover the plaintext data key and decrypt
--   the object.
--   
--   If you are using the CLI, the value is Base64 encoded. Otherwise, it
--   is not encoded.
gdkrCiphertextBlob :: Lens' GenerateDataKeyResponse (Maybe Base64)

-- | System generated unique identifier of the key to be used to decrypt
--   the encrypted copy of the data key.
gdkrKeyId :: Lens' GenerateDataKeyResponse (Maybe Text)

-- | Plaintext that contains the data key. Use this for encryption and
--   decryption and then remove it from memory as soon as possible.
gdkrPlaintext :: Lens' GenerateDataKeyResponse (Maybe Base64)
instance Eq GenerateDataKey
instance Read GenerateDataKey
instance Show GenerateDataKey
instance Eq GenerateDataKeyResponse
instance Read GenerateDataKeyResponse
instance Show GenerateDataKeyResponse
instance FromJSON GenerateDataKeyResponse
instance AWSRequest GenerateDataKey
instance ToJSON GenerateDataKey
instance ToHeaders GenerateDataKey
instance ToQuery GenerateDataKey
instance ToPath GenerateDataKey


-- | Encrypts plaintext into ciphertext by using a customer master key. The
--   <a>Encrypt</a> function has two primary use cases: You can encrypt up
--   to 4 KB of arbitrary data such as an RSA key, a database password, or
--   other sensitive customer information. If you are moving encrypted data
--   from one region to another, you can use this API to encrypt in the new
--   region the plaintext data key that was used to encrypt the data in the
--   original region. This provides you with an encrypted copy of the data
--   key that can be decrypted in the new region and used there to decrypt
--   the encrypted data.
--   
--   Unless you are moving encrypted data from one region to another, you
--   don't use this function to encrypt a generated data key within a
--   region. You retrieve data keys already encrypted by calling the
--   <tt>GenerateDataKey</tt> or <tt>GenerateDataKeyWithoutPlaintext</tt>
--   function. Data keys don't need to be encrypted again by calling
--   <a>Encrypt</a>.
--   
--   If you want to encrypt data locally in your application, you can use
--   the <tt>GenerateDataKey</tt> function to return a plaintext data
--   encryption key and a copy of the key encrypted under the customer
--   master key (CMK) of your choosing.
--   
--   
--   <a>http://docs.aws.amazon.com/kms/latest/APIReference/API_Encrypt.html</a>
module Network.AWS.KMS.Encrypt
data Encrypt

-- | <a>Encrypt</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>eEncryptionContext</a> <tt>::</tt> <a>HashMap</a> <a>Text</a>
--   <a>Text</a></li>
--   <li><a>eGrantTokens</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>eKeyId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ePlaintext</a> <tt>::</tt> <a>Base64</a></li>
--   </ul>
encrypt :: Text -> Base64 -> Encrypt

-- | Name/value pair that specifies the encryption context to be used for
--   authenticated encryption. If used here, the same value must be
--   supplied to the <tt>Decrypt</tt> API or decryption will fail. For more
--   information, see <a>EncryptionContext</a>.
eEncryptionContext :: Lens' Encrypt (HashMap Text Text)

-- | For more information, see <a>Grant Tokens</a>.
eGrantTokens :: Lens' Encrypt [Text]

-- | A unique identifier for the customer master key. This value can be a
--   globally unique identifier, a fully specified ARN to either an alias
--   or a key, or an alias name prefixed by "alias/". Key ARN Example -
--   arn:aws:kms:us-east-1:123456789012:key<i>12345678-1234-1234-1234-123456789012
--   Alias ARN Example -
--   arn:aws:kms:us-east-1:123456789012:alias</i>MyAliasName Globally
--   Unique Key ID Example - 12345678-1234-1234-1234-123456789012 Alias
--   Name Example - alias/MyAliasName
eKeyId :: Lens' Encrypt Text

-- | Data to be encrypted.
ePlaintext :: Lens' Encrypt Base64
data EncryptResponse

-- | <a>EncryptResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>erCiphertextBlob</a> <tt>::</tt> <a>Maybe</a>
--   <a>Base64</a></li>
--   <li><a>erKeyId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
encryptResponse :: EncryptResponse

-- | The encrypted plaintext. If you are using the CLI, the value is Base64
--   encoded. Otherwise, it is not encoded.
erCiphertextBlob :: Lens' EncryptResponse (Maybe Base64)

-- | The ID of the key used during encryption.
erKeyId :: Lens' EncryptResponse (Maybe Text)
instance Eq Encrypt
instance Read Encrypt
instance Show Encrypt
instance Eq EncryptResponse
instance Read EncryptResponse
instance Show EncryptResponse
instance FromJSON EncryptResponse
instance AWSRequest Encrypt
instance ToJSON Encrypt
instance ToHeaders Encrypt
instance ToQuery Encrypt
instance ToPath Encrypt


-- | Enables rotation of the specified customer master key.
--   
--   
--   <a>http://docs.aws.amazon.com/kms/latest/APIReference/API_EnableKeyRotation.html</a>
module Network.AWS.KMS.EnableKeyRotation
data EnableKeyRotation

-- | <a>EnableKeyRotation</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ekrKeyId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
enableKeyRotation :: Text -> EnableKeyRotation

-- | A unique identifier for the customer master key. This value can be a
--   globally unique identifier or the fully specified ARN to a key. Key
--   ARN Example -
--   arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012
--   Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012
ekrKeyId :: Lens' EnableKeyRotation Text
data EnableKeyRotationResponse

-- | <a>EnableKeyRotationResponse</a> constructor.
enableKeyRotationResponse :: EnableKeyRotationResponse
instance Eq EnableKeyRotation
instance Ord EnableKeyRotation
instance Read EnableKeyRotation
instance Show EnableKeyRotation
instance Monoid EnableKeyRotation
instance IsString EnableKeyRotation
instance Eq EnableKeyRotationResponse
instance Ord EnableKeyRotationResponse
instance Read EnableKeyRotationResponse
instance Show EnableKeyRotationResponse
instance Generic EnableKeyRotationResponse
instance Datatype D1EnableKeyRotationResponse
instance Constructor C1_0EnableKeyRotationResponse
instance AWSRequest EnableKeyRotation
instance ToJSON EnableKeyRotation
instance ToHeaders EnableKeyRotation
instance ToQuery EnableKeyRotation
instance ToPath EnableKeyRotation


-- | Marks a key as enabled, thereby permitting its use. You can have up to
--   25 enabled keys at one time.
--   
--   
--   <a>http://docs.aws.amazon.com/kms/latest/APIReference/API_EnableKey.html</a>
module Network.AWS.KMS.EnableKey
data EnableKey

-- | <a>EnableKey</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ekKeyId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
enableKey :: Text -> EnableKey

-- | A unique identifier for the customer master key. This value can be a
--   globally unique identifier or the fully specified ARN to a key. Key
--   ARN Example -
--   arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012
--   Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012
ekKeyId :: Lens' EnableKey Text
data EnableKeyResponse

-- | <a>EnableKeyResponse</a> constructor.
enableKeyResponse :: EnableKeyResponse
instance Eq EnableKey
instance Ord EnableKey
instance Read EnableKey
instance Show EnableKey
instance Monoid EnableKey
instance IsString EnableKey
instance Eq EnableKeyResponse
instance Ord EnableKeyResponse
instance Read EnableKeyResponse
instance Show EnableKeyResponse
instance Generic EnableKeyResponse
instance Datatype D1EnableKeyResponse
instance Constructor C1_0EnableKeyResponse
instance AWSRequest EnableKey
instance ToJSON EnableKey
instance ToHeaders EnableKey
instance ToQuery EnableKey
instance ToPath EnableKey


-- | Disables rotation of the specified key.
--   
--   
--   <a>http://docs.aws.amazon.com/kms/latest/APIReference/API_DisableKeyRotation.html</a>
module Network.AWS.KMS.DisableKeyRotation
data DisableKeyRotation

-- | <a>DisableKeyRotation</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dkrKeyId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
disableKeyRotation :: Text -> DisableKeyRotation

-- | A unique identifier for the customer master key. This value can be a
--   globally unique identifier or the fully specified ARN to a key. Key
--   ARN Example -
--   arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012
--   Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012
dkrKeyId :: Lens' DisableKeyRotation Text
data DisableKeyRotationResponse

-- | <a>DisableKeyRotationResponse</a> constructor.
disableKeyRotationResponse :: DisableKeyRotationResponse
instance Eq DisableKeyRotation
instance Ord DisableKeyRotation
instance Read DisableKeyRotation
instance Show DisableKeyRotation
instance Monoid DisableKeyRotation
instance IsString DisableKeyRotation
instance Eq DisableKeyRotationResponse
instance Ord DisableKeyRotationResponse
instance Read DisableKeyRotationResponse
instance Show DisableKeyRotationResponse
instance Generic DisableKeyRotationResponse
instance Datatype D1DisableKeyRotationResponse
instance Constructor C1_0DisableKeyRotationResponse
instance AWSRequest DisableKeyRotation
instance ToJSON DisableKeyRotation
instance ToHeaders DisableKeyRotation
instance ToQuery DisableKeyRotation
instance ToPath DisableKeyRotation


-- | Marks a key as disabled, thereby preventing its use.
--   
--   
--   <a>http://docs.aws.amazon.com/kms/latest/APIReference/API_DisableKey.html</a>
module Network.AWS.KMS.DisableKey
data DisableKey

-- | <a>DisableKey</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dkKeyId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
disableKey :: Text -> DisableKey

-- | A unique identifier for the customer master key. This value can be a
--   globally unique identifier or the fully specified ARN to a key. Key
--   ARN Example -
--   arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012
--   Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012
dkKeyId :: Lens' DisableKey Text
data DisableKeyResponse

-- | <a>DisableKeyResponse</a> constructor.
disableKeyResponse :: DisableKeyResponse
instance Eq DisableKey
instance Ord DisableKey
instance Read DisableKey
instance Show DisableKey
instance Monoid DisableKey
instance IsString DisableKey
instance Eq DisableKeyResponse
instance Ord DisableKeyResponse
instance Read DisableKeyResponse
instance Show DisableKeyResponse
instance Generic DisableKeyResponse
instance Datatype D1DisableKeyResponse
instance Constructor C1_0DisableKeyResponse
instance AWSRequest DisableKey
instance ToJSON DisableKey
instance ToHeaders DisableKey
instance ToQuery DisableKey
instance ToPath DisableKey


-- | Provides detailed information about the specified customer master key.
--   
--   
--   <a>http://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html</a>
module Network.AWS.KMS.DescribeKey
data DescribeKey

-- | <a>DescribeKey</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dk1KeyId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
describeKey :: Text -> DescribeKey

-- | A unique identifier for the customer master key. This value can be a
--   globally unique identifier, a fully specified ARN to either an alias
--   or a key, or an alias name prefixed by "alias/". Key ARN Example -
--   arn:aws:kms:us-east-1:123456789012:key<i>12345678-1234-1234-1234-123456789012
--   Alias ARN Example -
--   arn:aws:kms:us-east-1:123456789012:alias</i>MyAliasName Globally
--   Unique Key ID Example - 12345678-1234-1234-1234-123456789012 Alias
--   Name Example - alias/MyAliasName
dk1KeyId :: Lens' DescribeKey Text
data DescribeKeyResponse

-- | <a>DescribeKeyResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dkrKeyMetadata</a> <tt>::</tt> <a>Maybe</a>
--   <a>KeyMetadata</a></li>
--   </ul>
describeKeyResponse :: DescribeKeyResponse

-- | Metadata associated with the key.
dkrKeyMetadata :: Lens' DescribeKeyResponse (Maybe KeyMetadata)
instance Eq DescribeKey
instance Ord DescribeKey
instance Read DescribeKey
instance Show DescribeKey
instance Monoid DescribeKey
instance IsString DescribeKey
instance Eq DescribeKeyResponse
instance Read DescribeKeyResponse
instance Show DescribeKeyResponse
instance FromJSON DescribeKeyResponse
instance AWSRequest DescribeKey
instance ToJSON DescribeKey
instance ToHeaders DescribeKey
instance ToQuery DescribeKey
instance ToPath DescribeKey


-- | Deletes the specified alias. To associate an alias with a different
--   key, call <tt>UpdateAlias</tt>.
--   
--   
--   <a>http://docs.aws.amazon.com/kms/latest/APIReference/API_DeleteAlias.html</a>
module Network.AWS.KMS.DeleteAlias
data DeleteAlias

-- | <a>DeleteAlias</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>daAliasName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteAlias :: Text -> DeleteAlias

-- | The alias to be deleted. The name must start with the word "alias"
--   followed by a forward slash (alias<i>). Aliases that begin with
--   "alias</i>AWS" are reserved.
daAliasName :: Lens' DeleteAlias Text
data DeleteAliasResponse

-- | <a>DeleteAliasResponse</a> constructor.
deleteAliasResponse :: DeleteAliasResponse
instance Eq DeleteAlias
instance Ord DeleteAlias
instance Read DeleteAlias
instance Show DeleteAlias
instance Monoid DeleteAlias
instance IsString DeleteAlias
instance Eq DeleteAliasResponse
instance Ord DeleteAliasResponse
instance Read DeleteAliasResponse
instance Show DeleteAliasResponse
instance Generic DeleteAliasResponse
instance Datatype D1DeleteAliasResponse
instance Constructor C1_0DeleteAliasResponse
instance AWSRequest DeleteAlias
instance ToJSON DeleteAlias
instance ToHeaders DeleteAlias
instance ToQuery DeleteAlias
instance ToPath DeleteAlias


-- | Decrypts ciphertext. Ciphertext is plaintext that has been previously
--   encrypted by using any of the following functions:
--   <tt>GenerateDataKey</tt> <tt>GenerateDataKeyWithoutPlaintext</tt>
--   <tt>Encrypt</tt>
--   
--   Note that if a caller has been granted access permissions to all keys
--   (through, for example, IAM user policies that grant <a>Decrypt</a>
--   permission on all resources), then ciphertext encrypted by using keys
--   in other accounts where the key grants access to the caller can be
--   decrypted. To remedy this, we recommend that you do not grant
--   <a>Decrypt</a> access in an IAM user policy. Instead grant
--   <a>Decrypt</a> access only in key policies. If you must grant
--   <a>Decrypt</a> access in an IAM user policy, you should scope the
--   resource to specific keys or to specific trusted accounts.
--   
--   
--   <a>http://docs.aws.amazon.com/kms/latest/APIReference/API_Decrypt.html</a>
module Network.AWS.KMS.Decrypt
data Decrypt

-- | <a>Decrypt</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dCiphertextBlob</a> <tt>::</tt> <a>Base64</a></li>
--   <li><a>dEncryptionContext</a> <tt>::</tt> <a>HashMap</a> <a>Text</a>
--   <a>Text</a></li>
--   <li><a>dGrantTokens</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
decrypt :: Base64 -> Decrypt

-- | Ciphertext to be decrypted. The blob includes metadata.
dCiphertextBlob :: Lens' Decrypt Base64

-- | The encryption context. If this was specified in the <tt>Encrypt</tt>
--   function, it must be specified here or the decryption operation will
--   fail. For more information, see <a>Encryption Context</a>.
dEncryptionContext :: Lens' Decrypt (HashMap Text Text)

-- | For more information, see <a>Grant Tokens</a>.
dGrantTokens :: Lens' Decrypt [Text]
data DecryptResponse

-- | <a>DecryptResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>drKeyId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>drPlaintext</a> <tt>::</tt> <a>Maybe</a> <a>Base64</a></li>
--   </ul>
decryptResponse :: DecryptResponse

-- | ARN of the key used to perform the decryption. This value is returned
--   if no errors are encountered during the operation.
drKeyId :: Lens' DecryptResponse (Maybe Text)

-- | Decrypted plaintext data. This value may not be returned if the
--   customer master key is not available or if you didn't have permission
--   to use it.
drPlaintext :: Lens' DecryptResponse (Maybe Base64)
instance Eq Decrypt
instance Read Decrypt
instance Show Decrypt
instance Eq DecryptResponse
instance Read DecryptResponse
instance Show DecryptResponse
instance FromJSON DecryptResponse
instance AWSRequest Decrypt
instance ToJSON Decrypt
instance ToHeaders Decrypt
instance ToQuery Decrypt
instance ToPath Decrypt


-- | Creates a customer master key. Customer master keys can be used to
--   encrypt small amounts of data (less than 4K) directly, but they are
--   most commonly used to encrypt or envelope data keys that are then used
--   to encrypt customer data. For more information about data keys, see
--   <tt>GenerateDataKey</tt> and <tt>GenerateDataKeyWithoutPlaintext</tt>.
--   
--   
--   <a>http://docs.aws.amazon.com/kms/latest/APIReference/API_CreateKey.html</a>
module Network.AWS.KMS.CreateKey
data CreateKey

-- | <a>CreateKey</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ckDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ckKeyUsage</a> <tt>::</tt> <a>Maybe</a>
--   <a>KeyUsageType</a></li>
--   <li><a>ckPolicy</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
createKey :: CreateKey

-- | Description of the key. We recommend that you choose a description
--   that helps your customer decide whether the key is appropriate for a
--   task.
ckDescription :: Lens' CreateKey (Maybe Text)

-- | Specifies the intended use of the key. Currently this defaults to
--   ENCRYPT/DECRYPT, and only symmetric encryption and decryption are
--   supported.
ckKeyUsage :: Lens' CreateKey (Maybe KeyUsageType)

-- | Policy to be attached to the key. This is required and delegates back
--   to the account. The key is the root of trust.
ckPolicy :: Lens' CreateKey (Maybe Text)
data CreateKeyResponse

-- | <a>CreateKeyResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ckrKeyMetadata</a> <tt>::</tt> <a>Maybe</a>
--   <a>KeyMetadata</a></li>
--   </ul>
createKeyResponse :: CreateKeyResponse

-- | Metadata associated with the key.
ckrKeyMetadata :: Lens' CreateKeyResponse (Maybe KeyMetadata)
instance Eq CreateKey
instance Read CreateKey
instance Show CreateKey
instance Eq CreateKeyResponse
instance Read CreateKeyResponse
instance Show CreateKeyResponse
instance FromJSON CreateKeyResponse
instance AWSRequest CreateKey
instance ToJSON CreateKey
instance ToHeaders CreateKey
instance ToQuery CreateKey
instance ToPath CreateKey


-- | Adds a grant to a key to specify who can access the key and under what
--   conditions. Grants are alternate permission mechanisms to key
--   policies. For more information about grants, see <a>Grants</a> in the
--   developer guide. If a grant is absent, access to the key is evaluated
--   based on IAM policies attached to the user. <tt>ListGrants</tt>
--   <tt>RetireGrant</tt> <tt>RevokeGrant</tt>
--   
--   
--   <a>http://docs.aws.amazon.com/kms/latest/APIReference/API_CreateGrant.html</a>
module Network.AWS.KMS.CreateGrant
data CreateGrant

-- | <a>CreateGrant</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cgConstraints</a> <tt>::</tt> <a>Maybe</a>
--   <a>GrantConstraints</a></li>
--   <li><a>cgGrantTokens</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>cgGranteePrincipal</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cgKeyId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cgOperations</a> <tt>::</tt> [<a>GrantOperation</a>]</li>
--   <li><a>cgRetiringPrincipal</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
createGrant :: Text -> Text -> CreateGrant

-- | Specifies the conditions under which the actions specified by the
--   <tt>Operations</tt> parameter are allowed.
cgConstraints :: Lens' CreateGrant (Maybe GrantConstraints)

-- | For more information, see <a>Grant Tokens</a>.
cgGrantTokens :: Lens' CreateGrant [Text]

-- | Principal given permission by the grant to use the key identified by
--   the <tt>keyId</tt> parameter.
cgGranteePrincipal :: Lens' CreateGrant Text

-- | A unique identifier for the customer master key. This value can be a
--   globally unique identifier or the fully specified ARN to a key. Key
--   ARN Example -
--   arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012
--   Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012
cgKeyId :: Lens' CreateGrant Text

-- | List of operations permitted by the grant. This can be any combination
--   of one or more of the following values: Decrypt Encrypt
--   GenerateDataKey GenerateDataKeyWithoutPlaintext ReEncryptFrom
--   ReEncryptTo CreateGrant RetireGrant
cgOperations :: Lens' CreateGrant [GrantOperation]

-- | Principal given permission to retire the grant. For more information,
--   see <tt>RetireGrant</tt>.
cgRetiringPrincipal :: Lens' CreateGrant (Maybe Text)
data CreateGrantResponse

-- | <a>CreateGrantResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cgrGrantId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cgrGrantToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
createGrantResponse :: CreateGrantResponse

-- | Unique grant identifier. You can use the <i>GrantId</i> value to
--   revoke a grant.
cgrGrantId :: Lens' CreateGrantResponse (Maybe Text)

-- | For more information, see <a>Grant Tokens</a>.
cgrGrantToken :: Lens' CreateGrantResponse (Maybe Text)
instance Eq CreateGrant
instance Read CreateGrant
instance Show CreateGrant
instance Eq CreateGrantResponse
instance Ord CreateGrantResponse
instance Read CreateGrantResponse
instance Show CreateGrantResponse
instance FromJSON CreateGrantResponse
instance AWSRequest CreateGrant
instance ToJSON CreateGrant
instance ToHeaders CreateGrant
instance ToQuery CreateGrant
instance ToPath CreateGrant


-- | Creates a display name for a customer master key. An alias can be used
--   to identify a key and should be unique. The console enforces a
--   one-to-one mapping between the alias and a key. An alias name can
--   contain only alphanumeric characters, forward slashes (/), underscores
--   (_), and dashes (-). An alias must start with the word "alias"
--   followed by a forward slash (alias/). An alias that begins with "aws"
--   after the forward slash (alias/aws...) is reserved by Amazon Web
--   Services (AWS).
--   
--   To associate an alias with a different key, call <tt>UpdateAlias</tt>.
--   
--   Note that you cannot create or update an alias that represents a key
--   in another account.
--   
--   
--   <a>http://docs.aws.amazon.com/kms/latest/APIReference/API_CreateAlias.html</a>
module Network.AWS.KMS.CreateAlias
data CreateAlias

-- | <a>CreateAlias</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>caAliasName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>caTargetKeyId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createAlias :: Text -> Text -> CreateAlias

-- | String that contains the display name. The name must start with the
--   word "alias" followed by a forward slash (alias/). Aliases that begin
--   with "alias/AWS" are reserved.
caAliasName :: Lens' CreateAlias Text

-- | An identifier of the key for which you are creating the alias. This
--   value cannot be another alias but can be a globally unique identifier
--   or a fully specified ARN to a key. Key ARN Example -
--   arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012
--   Globally Unique Key ID Example - 12345678-1234-1234-1234-123456789012
caTargetKeyId :: Lens' CreateAlias Text
data CreateAliasResponse

-- | <a>CreateAliasResponse</a> constructor.
createAliasResponse :: CreateAliasResponse
instance Eq CreateAlias
instance Ord CreateAlias
instance Read CreateAlias
instance Show CreateAlias
instance Eq CreateAliasResponse
instance Ord CreateAliasResponse
instance Read CreateAliasResponse
instance Show CreateAliasResponse
instance Generic CreateAliasResponse
instance Datatype D1CreateAliasResponse
instance Constructor C1_0CreateAliasResponse
instance AWSRequest CreateAlias
instance ToJSON CreateAlias
instance ToHeaders CreateAlias
instance ToQuery CreateAlias
instance ToPath CreateAlias


-- | Amazon Key Management Service (KMS) is a managed service that makes it
--   easy for you to create and control the encryption keys used to encrypt
--   your data, and uses Hardware Security Modules (HSMs) to protect the
--   security of your keys. Amazon Key Management Service is integrated
--   with other Amazon services including Amazon EBS, Amazon S3, and Amazon
--   Redshift. Amazon Key Management Service is also integrated with Amazon
--   CloudTrail to provide you with logs of all key usage to help meet your
--   regulatory and compliance needs.
module Network.AWS.KMS
