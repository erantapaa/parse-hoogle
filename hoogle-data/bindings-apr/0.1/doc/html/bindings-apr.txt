-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Low level bindings to Apache Portable Runtime (APR)
--   
--   Bindings to APR: <a>http://apr.apache.org/</a>
@package bindings-apr
@version 0.1

module Bindings.APR.Version
c'APR_MAJOR_VERSION :: (Num a) => a
c'APR_MINOR_VERSION :: (Num a) => a
c'APR_PATCH_VERSION :: (Num a) => a
c'APR_VERSION_AT_LEAST :: CInt -> CInt -> CInt -> IO CInt
c'APR_VERSION_STRING :: Ptr (CChar)
data C'apr_version_t
C'apr_version_t :: CInt -> CInt -> CInt -> CInt -> C'apr_version_t
c'apr_version_t'major :: C'apr_version_t -> CInt
c'apr_version_t'minor :: C'apr_version_t -> CInt
c'apr_version_t'patch :: C'apr_version_t -> CInt
c'apr_version_t'is_dev :: C'apr_version_t -> CInt
c'apr_version :: Ptr C'apr_version_t -> IO ()
c'apr_version_string :: IO (Ptr CChar)
p'apr_version :: FunPtr (Ptr C'apr_version_t -> IO ())
p'apr_version_string :: FunPtr (IO (Ptr CChar))
instance Eq C'apr_version_t
instance Show C'apr_version_t
instance Storable C'apr_version_t

module Bindings.APR.Want
data C'iovec
C'iovec :: Ptr CChar -> CSize -> C'iovec
c'iovec'iov_base :: C'iovec -> Ptr CChar
c'iovec'iov_len :: C'iovec -> CSize
instance Eq C'iovec
instance Show C'iovec
instance Storable C'iovec

module Bindings.APR.File.Types
data C'apr_file_t
C'apr_file_t :: C'apr_file_t

module Bindings.APR
c'APR_HAS_INLINE :: (Num a) => a
c'APR_HAVE_ARPA_INET_H :: (Num a) => a
c'APR_HAVE_CONIO_H :: (Num a) => a
c'APR_HAVE_CRYPT_H :: (Num a) => a
c'APR_HAVE_CTYPE_H :: (Num a) => a
c'APR_HAVE_DIRENT_H :: (Num a) => a
c'APR_HAVE_ERRNO_H :: (Num a) => a
c'APR_HAVE_FCNTL_H :: (Num a) => a
c'APR_HAVE_IO_H :: (Num a) => a
c'APR_HAVE_LIMITS_H :: (Num a) => a
c'APR_HAVE_NETDB_H :: (Num a) => a
c'APR_HAVE_NETINET_IN_H :: (Num a) => a
c'APR_HAVE_NETINET_SCTP_H :: (Num a) => a
c'APR_HAVE_NETINET_SCTP_UIO_H :: (Num a) => a
c'APR_HAVE_NETINET_TCP_H :: (Num a) => a
c'APR_HAVE_PTHREAD_H :: (Num a) => a
c'APR_HAVE_SEMAPHORE_H :: (Num a) => a
c'APR_HAVE_SIGNAL_H :: (Num a) => a
c'APR_HAVE_STDARG_H :: (Num a) => a
c'APR_HAVE_STDINT_H :: (Num a) => a
c'APR_HAVE_STDIO_H :: (Num a) => a
c'APR_HAVE_STDLIB_H :: (Num a) => a
c'APR_HAVE_STRING_H :: (Num a) => a
c'APR_HAVE_STRINGS_H :: (Num a) => a
c'APR_HAVE_SYS_IOCTL_H :: (Num a) => a
c'APR_HAVE_SYS_SENDFILE_H :: (Num a) => a
c'APR_HAVE_SYS_SIGNAL_H :: (Num a) => a
c'APR_HAVE_SYS_SOCKET_H :: (Num a) => a
c'APR_HAVE_SYS_SOCKIO_H :: (Num a) => a
c'APR_HAVE_SYS_SYSLIMITS_H :: (Num a) => a
c'APR_HAVE_SYS_TIME_H :: (Num a) => a
c'APR_HAVE_SYS_TYPES_H :: (Num a) => a
c'APR_HAVE_SYS_UIO_H :: (Num a) => a
c'APR_HAVE_SYS_UN_H :: (Num a) => a
c'APR_HAVE_SYS_WAIT_H :: (Num a) => a
c'APR_HAVE_TIME_H :: (Num a) => a
c'APR_HAVE_UNISTD_H :: (Num a) => a
c'APR_HAVE_WINDOWS_H :: (Num a) => a
c'APR_HAVE_WINSOCK2_H :: (Num a) => a
c'APR_HAVE_SHMEM_MMAP_TMP :: (Num a) => a
c'APR_HAVE_SHMEM_MMAP_SHM :: (Num a) => a
c'APR_HAVE_SHMEM_MMAP_ZERO :: (Num a) => a
c'APR_HAVE_SHMEM_SHMGET_ANON :: (Num a) => a
c'APR_HAVE_SHMEM_SHMGET :: (Num a) => a
c'APR_HAVE_SHMEM_MMAP_ANON :: (Num a) => a
c'APR_HAVE_SHMEM_BEOS :: (Num a) => a
c'APR_USE_SHMEM_MMAP_TMP :: (Num a) => a
c'APR_USE_SHMEM_MMAP_SHM :: (Num a) => a
c'APR_USE_SHMEM_MMAP_ZERO :: (Num a) => a
c'APR_USE_SHMEM_SHMGET_ANON :: (Num a) => a
c'APR_USE_SHMEM_SHMGET :: (Num a) => a
c'APR_USE_SHMEM_MMAP_ANON :: (Num a) => a
c'APR_USE_SHMEM_BEOS :: (Num a) => a
c'APR_USE_FLOCK_SERIALIZE :: (Num a) => a
c'APR_USE_SYSVSEM_SERIALIZE :: (Num a) => a
c'APR_USE_POSIXSEM_SERIALIZE :: (Num a) => a
c'APR_USE_FCNTL_SERIALIZE :: (Num a) => a
c'APR_USE_PROC_PTHREAD_SERIALIZE :: (Num a) => a
c'APR_USE_PTHREAD_SERIALIZE :: (Num a) => a
c'APR_HAS_FLOCK_SERIALIZE :: (Num a) => a
c'APR_HAS_SYSVSEM_SERIALIZE :: (Num a) => a
c'APR_HAS_POSIXSEM_SERIALIZE :: (Num a) => a
c'APR_HAS_FCNTL_SERIALIZE :: (Num a) => a
c'APR_HAS_PROC_PTHREAD_SERIALIZE :: (Num a) => a
c'APR_PROCESS_LOCK_IS_GLOBAL :: (Num a) => a
c'APR_HAVE_CORKABLE_TCP :: (Num a) => a
c'APR_HAVE_GETRLIMIT :: (Num a) => a
c'APR_HAVE_IN_ADDR :: (Num a) => a
c'APR_HAVE_INET_ADDR :: (Num a) => a
c'APR_HAVE_INET_NETWORK :: (Num a) => a
c'APR_HAVE_IPV6 :: (Num a) => a
c'APR_HAVE_MEMMOVE :: (Num a) => a
c'APR_HAVE_SETRLIMIT :: (Num a) => a
c'APR_HAVE_SIGACTION :: (Num a) => a
c'APR_HAVE_SIGSUSPEND :: (Num a) => a
c'APR_HAVE_SIGWAIT :: (Num a) => a
c'APR_HAVE_SA_STORAGE :: (Num a) => a
c'APR_HAVE_STRCASECMP :: (Num a) => a
c'APR_HAVE_STRDUP :: (Num a) => a
c'APR_HAVE_STRICMP :: (Num a) => a
c'APR_HAVE_STRNCASECMP :: (Num a) => a
c'APR_HAVE_STRNICMP :: (Num a) => a
c'APR_HAVE_STRSTR :: (Num a) => a
c'APR_HAVE_MEMCHR :: (Num a) => a
c'APR_HAVE_STRUCT_RLIMIT :: (Num a) => a
c'APR_HAVE_UNION_SEMUN :: (Num a) => a
c'APR_HAVE_SCTP :: (Num a) => a
c'APR_HAVE_IOVEC :: (Num a) => a
c'APR_HAS_SHARED_MEMORY :: (Num a) => a
c'APR_HAS_THREADS :: (Num a) => a
c'APR_HAS_SENDFILE :: (Num a) => a
c'APR_HAS_MMAP :: (Num a) => a
c'APR_HAS_FORK :: (Num a) => a
c'APR_HAS_RANDOM :: (Num a) => a
c'APR_HAS_OTHER_CHILD :: (Num a) => a
c'APR_HAS_DSO :: (Num a) => a
c'APR_HAS_SO_ACCEPTFILTER :: (Num a) => a
c'APR_HAS_UNICODE_FS :: (Num a) => a
c'APR_HAS_PROC_INVOKED :: (Num a) => a
c'APR_HAS_USER :: (Num a) => a
c'APR_HAS_LARGE_FILES :: (Num a) => a
c'APR_HAS_XTHREAD_FILES :: (Num a) => a
c'APR_HAS_OS_UUID :: (Num a) => a
c'APR_PROCATTR_USER_SET_REQUIRES_PASSWORD :: (Num a) => a
c'APR_FILES_AS_SOCKETS :: (Num a) => a
c'APR_CHARSET_EBCDIC :: (Num a) => a
c'APR_TCP_NOPUSH_FLAG :: (Num a) => a
c'APR_TCP_NODELAY_INHERITED :: (Num a) => a
c'APR_O_NONBLOCK_INHERITED :: (Num a) => a
type C'apr_byte_t = CUChar
type C'apr_int16_t = Int16
type C'apr_uint16_t = Word16
type C'apr_int32_t = CInt
type C'apr_uint32_t = CUInt
type C'apr_int64_t = Int64
type C'apr_uint64_t = Word64
type C'apr_size_t = CUInt
type C'apr_ssize_t = CInt
type C'apr_off_t = Int64
type C'apr_socklen_t = CUInt
type C'apr_ino_t = CUInt
type C'apr_uintptr_t = CUInt
c'APR_SIZEOF_VOIDP :: (Num a) => a
c'APR_IS_BIGENDIAN :: (Num a) => a
c'APR_INT16_MIN :: (Num a) => a
c'APR_INT16_MAX :: (Num a) => a
c'APR_UINT16_MAX :: (Num a) => a
c'APR_INT32_MIN :: (Num a) => a
c'APR_INT32_MAX :: (Num a) => a
c'APR_UINT32_MAX :: (Num a) => a
c'APR_INT64_MIN :: (Num a) => a
c'APR_INT64_MAX :: (Num a) => a
c'APR_UINT64_MAX :: (Num a) => a
c'APR_SIZE_MAX :: (Num a) => a
c'APR_SSIZE_T_FMT :: Ptr (CChar)
c'APR_SIZE_T_FMT :: Ptr (CChar)
c'APR_OFF_T_FMT :: Ptr (CChar)
c'APR_PID_T_FMT :: Ptr (CChar)
c'APR_INT64_T_FMT :: Ptr (CChar)
c'APR_UINT64_T_FMT :: Ptr (CChar)
c'APR_UINT64_T_HEX_FMT :: Ptr (CChar)
c'APR_PROC_MUTEX_IS_GLOBAL :: (Num a) => a
c'APR_EOL_STR :: Ptr (CChar)
data C'apr_wait_t
C'apr_wait_t :: C'apr_wait_t
c'APR_PATH_MAX :: (Num a) => a
c'APR_DSOPATH :: Ptr (CChar)

module Bindings.APR.Allocator.Types
data C'apr_allocator_t
C'apr_allocator_t :: C'apr_allocator_t
data C'apr_memnode_t
C'apr_memnode_t :: Ptr C'apr_memnode_t -> Ptr (Ptr C'apr_memnode_t) -> C'apr_uint32_t -> C'apr_uint32_t -> Ptr CChar -> Ptr CChar -> C'apr_memnode_t
c'apr_memnode_t'next :: C'apr_memnode_t -> Ptr C'apr_memnode_t
c'apr_memnode_t'ref :: C'apr_memnode_t -> Ptr (Ptr C'apr_memnode_t)
c'apr_memnode_t'index :: C'apr_memnode_t -> C'apr_uint32_t
c'apr_memnode_t'free_index :: C'apr_memnode_t -> C'apr_uint32_t
c'apr_memnode_t'first_avail :: C'apr_memnode_t -> Ptr CChar
c'apr_memnode_t'endp :: C'apr_memnode_t -> Ptr CChar
instance Eq C'apr_memnode_t
instance Show C'apr_memnode_t
instance Storable C'apr_memnode_t

module Bindings.APR.ErrNo
type C'apr_status_t = CInt
c'apr_strerror :: C'apr_status_t -> Ptr CChar -> C'apr_size_t -> IO (Ptr CChar)
p'apr_strerror :: FunPtr (C'apr_status_t -> Ptr CChar -> C'apr_size_t -> IO (Ptr CChar))
c'APR_OS_START_ERROR :: (Num a) => a
c'APR_OS_ERRSPACE_SIZE :: (Num a) => a
c'APR_UTIL_ERRSPACE_SIZE :: (Num a) => a
c'APR_OS_START_STATUS :: (Num a) => a
c'APR_UTIL_START_STATUS :: (Num a) => a
c'APR_OS_START_USERERR :: (Num a) => a
c'APR_OS_START_USEERR :: (Num a) => a
c'APR_OS_START_CANONERR :: (Num a) => a
c'APR_OS_START_EAIERR :: (Num a) => a
c'APR_OS_START_SYSERR :: (Num a) => a
c'APR_SUCCESS :: (Num a) => a
c'APR_ENOSTAT :: (Num a) => a
c'APR_ENOPOOL :: (Num a) => a
c'APR_EBADDATE :: (Num a) => a
c'APR_EINVALSOCK :: (Num a) => a
c'APR_ENOPROC :: (Num a) => a
c'APR_ENOTIME :: (Num a) => a
c'APR_ENODIR :: (Num a) => a
c'APR_ENOLOCK :: (Num a) => a
c'APR_ENOPOLL :: (Num a) => a
c'APR_ENOSOCKET :: (Num a) => a
c'APR_ENOTHREAD :: (Num a) => a
c'APR_ENOTHDKEY :: (Num a) => a
c'APR_EGENERAL :: (Num a) => a
c'APR_ENOSHMAVAIL :: (Num a) => a
c'APR_EBADIP :: (Num a) => a
c'APR_EBADMASK :: (Num a) => a
c'APR_EDSOOPEN :: (Num a) => a
c'APR_EABSOLUTE :: (Num a) => a
c'APR_ERELATIVE :: (Num a) => a
c'APR_EINCOMPLETE :: (Num a) => a
c'APR_EABOVEROOT :: (Num a) => a
c'APR_EBADPATH :: (Num a) => a
c'APR_EPATHWILD :: (Num a) => a
c'APR_ESYMNOTFOUND :: (Num a) => a
c'APR_EPROC_UNKNOWN :: (Num a) => a
c'APR_ENOTENOUGHENTROPY :: (Num a) => a
c'APR_STATUS_IS_ENOSTAT :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_ENOPOOL :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_EBADDATE :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_EINVALSOCK :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_ENOPROC :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_ENOTIME :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_ENODIR :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_ENOLOCK :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_ENOSOCKET :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_ENOTHREAD :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_ENOTHDKEY :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_EGENERAL :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_ENOSHMAVAIL :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_EBADIP :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_EBADMASK :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_EDSOOPEN :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_EABSOLUTE :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_ERELATIVE :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_EINCOMPLETE :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_EABOVEROOT :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_EBADPATH :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_EPATHWILD :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_ESYMNOTFOUND :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_EPROC_UNKNOWN :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_ENOTENOUGHENTROPY :: C'apr_status_t -> IO CInt
c'APR_INCHILD :: (Num a) => a
c'APR_INPARENT :: (Num a) => a
c'APR_DETACH :: (Num a) => a
c'APR_NOTDETACH :: (Num a) => a
c'APR_CHILD_DONE :: (Num a) => a
c'APR_CHILD_NOTDONE :: (Num a) => a
c'APR_TIMEUP :: (Num a) => a
c'APR_INCOMPLETE :: (Num a) => a
c'APR_BADCH :: (Num a) => a
c'APR_BADARG :: (Num a) => a
c'APR_EOF :: (Num a) => a
c'APR_NOTFOUND :: (Num a) => a
c'APR_ANONYMOUS :: (Num a) => a
c'APR_FILEBASED :: (Num a) => a
c'APR_KEYBASED :: (Num a) => a
c'APR_EINIT :: (Num a) => a
c'APR_ENOTIMPL :: (Num a) => a
c'APR_EMISMATCH :: (Num a) => a
c'APR_EBUSY :: (Num a) => a
c'APR_STATUS_IS_INCHILD :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_INPARENT :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_DETACH :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_NOTDETACH :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_CHILD_DONE :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_CHILD_NOTDONE :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_TIMEUP :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_INCOMPLETE :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_BADCH :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_BADARG :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_EOF :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_NOTFOUND :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_ANONYMOUS :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_FILEBASED :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_KEYBASED :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_EINIT :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_ENOTIMPL :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_EMISMATCH :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_EBUSY :: C'apr_status_t -> IO CInt
c'APR_EACCES :: (Num a) => a
c'APR_EEXIST :: (Num a) => a
c'APR_ENAMETOOLONG :: (Num a) => a
c'APR_ENOENT :: (Num a) => a
c'APR_ENOTDIR :: (Num a) => a
c'APR_ENOSPC :: (Num a) => a
c'APR_ENOMEM :: (Num a) => a
c'APR_EMFILE :: (Num a) => a
c'APR_ENFILE :: (Num a) => a
c'APR_EBADF :: (Num a) => a
c'APR_EINVAL :: (Num a) => a
c'APR_ESPIPE :: (Num a) => a
c'APR_EAGAIN :: (Num a) => a
c'APR_EINTR :: (Num a) => a
c'APR_ENOTSOCK :: (Num a) => a
c'APR_ECONNREFUSED :: (Num a) => a
c'APR_EINPROGRESS :: (Num a) => a
c'APR_ECONNABORTED :: (Num a) => a
c'APR_ECONNRESET :: (Num a) => a
c'APR_ETIMEDOUT :: (Num a) => a
c'APR_EHOSTUNREACH :: (Num a) => a
c'APR_ENETUNREACH :: (Num a) => a
c'APR_EFTYPE :: (Num a) => a
c'APR_EPIPE :: (Num a) => a
c'APR_EXDEV :: (Num a) => a
c'APR_ENOTEMPTY :: (Num a) => a
c'APR_EAFNOSUPPORT :: (Num a) => a
c'APR_STATUS_IS_EACCES :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_EEXIST :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_ENAMETOOLONG :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_ENOENT :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_ENOTDIR :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_ENOSPC :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_ENOMEM :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_EMFILE :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_ENFILE :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_EBADF :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_EINVAL :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_ESPIPE :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_EAGAIN :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_EINTR :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_ENOTSOCK :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_ECONNREFUSED :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_EINPROGRESS :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_ECONNABORTED :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_ECONNRESET :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_ETIMEDOUT :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_TIMEDUP :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_EHOSTUNREACH :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_ENETUNREACH :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_EFTYPE :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_EPIPE :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_EXDEV :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_ENOTEMPTY :: C'apr_status_t -> IO CInt
c'APR_STATUS_IS_EAFNOSUPPORT :: C'apr_status_t -> IO CInt

module Bindings.APR.Pools
data C'apr_pool_t
C'apr_pool_t :: C'apr_pool_t
c'APR_POOL_DEBUG :: (Num a) => a
type C'apr_abortfunc_t = FunPtr (CInt -> IO CInt)
mk'apr_abortfunc_t :: (CInt -> IO CInt) -> IO C'apr_abortfunc_t
c'apr_pool_initialize :: IO C'apr_status_t
c'apr_pool_terminate :: IO ()
mK'apr_abortfunc_t :: C'apr_abortfunc_t -> (CInt -> IO CInt)
p'apr_pool_initialize :: FunPtr (IO C'apr_status_t)
p'apr_pool_terminate :: FunPtr (IO ())
c'apr_pool_create_ex :: Ptr (Ptr C'apr_pool_t) -> Ptr C'apr_pool_t -> C'apr_abortfunc_t -> Ptr C'apr_allocator_t -> IO C'apr_status_t
c'apr_pool_create_core_ex :: Ptr (Ptr C'apr_pool_t) -> C'apr_abortfunc_t -> Ptr C'apr_allocator_t -> IO C'apr_status_t
c'apr_pool_create_unmanaged_ex :: Ptr (Ptr C'apr_pool_t) -> C'apr_abortfunc_t -> Ptr C'apr_allocator_t -> IO C'apr_status_t
p'apr_pool_create_ex :: FunPtr (Ptr (Ptr C'apr_pool_t) -> Ptr C'apr_pool_t -> C'apr_abortfunc_t -> Ptr C'apr_allocator_t -> IO C'apr_status_t)
p'apr_pool_create_core_ex :: FunPtr (Ptr (Ptr C'apr_pool_t) -> C'apr_abortfunc_t -> Ptr C'apr_allocator_t -> IO C'apr_status_t)
p'apr_pool_create_unmanaged_ex :: FunPtr (Ptr (Ptr C'apr_pool_t) -> C'apr_abortfunc_t -> Ptr C'apr_allocator_t -> IO C'apr_status_t)
c'apr_pool_create :: Ptr (Ptr C'apr_pool_t) -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_pool_create_core :: Ptr (Ptr C'apr_pool_t) -> IO C'apr_status_t
c'apr_pool_create_unmanaged :: Ptr (Ptr C'apr_pool_t) -> IO C'apr_status_t
c'apr_pool_allocator_get :: Ptr C'apr_pool_t -> IO (Ptr C'apr_allocator_t)
p'apr_pool_allocator_get :: FunPtr (Ptr C'apr_pool_t -> IO (Ptr C'apr_allocator_t))
c'apr_pool_clear :: Ptr C'apr_pool_t -> IO ()
p'apr_pool_clear :: FunPtr (Ptr C'apr_pool_t -> IO ())
c'apr_pool_destroy :: Ptr C'apr_pool_t -> IO ()
p'apr_pool_destroy :: FunPtr (Ptr C'apr_pool_t -> IO ())
c'apr_palloc :: Ptr C'apr_pool_t -> C'apr_size_t -> IO (Ptr ())
p'apr_palloc :: FunPtr (Ptr C'apr_pool_t -> C'apr_size_t -> IO (Ptr ()))
c'apr_pcalloc :: Ptr C'apr_pool_t -> C'apr_size_t -> IO (Ptr ())
c'apr_pool_abort_set :: C'apr_abortfunc_t -> Ptr C'apr_pool_t -> IO ()
c'apr_pool_abort_get :: Ptr C'apr_pool_t -> IO C'apr_abortfunc_t
c'apr_pool_parent_get :: Ptr C'apr_pool_t -> IO (Ptr C'apr_pool_t)
p'apr_pool_abort_set :: FunPtr (C'apr_abortfunc_t -> Ptr C'apr_pool_t -> IO ())
c'apr_pool_is_ancestor :: Ptr C'apr_pool_t -> Ptr C'apr_pool_t -> IO CInt
p'apr_pool_abort_get :: FunPtr (Ptr C'apr_pool_t -> IO C'apr_abortfunc_t)
c'apr_pool_tag :: Ptr C'apr_pool_t -> Ptr CChar -> IO ()
p'apr_pool_parent_get :: FunPtr (Ptr C'apr_pool_t -> IO (Ptr C'apr_pool_t))
p'apr_pool_is_ancestor :: FunPtr (Ptr C'apr_pool_t -> Ptr C'apr_pool_t -> IO CInt)
p'apr_pool_tag :: FunPtr (Ptr C'apr_pool_t -> Ptr CChar -> IO ())
c'apr_pool_userdata_set :: Ptr () -> Ptr CChar -> FunPtr (Ptr () -> IO C'apr_status_t) -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_pool_userdata_setn :: Ptr () -> Ptr CChar -> FunPtr (Ptr () -> IO C'apr_status_t) -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_pool_userdata_get :: Ptr (Ptr ()) -> Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_pool_userdata_set :: FunPtr (Ptr () -> Ptr CChar -> FunPtr (Ptr () -> IO C'apr_status_t) -> Ptr C'apr_pool_t -> IO C'apr_status_t)
p'apr_pool_userdata_setn :: FunPtr (Ptr () -> Ptr CChar -> FunPtr (Ptr () -> IO C'apr_status_t) -> Ptr C'apr_pool_t -> IO C'apr_status_t)
p'apr_pool_userdata_get :: FunPtr (Ptr (Ptr ()) -> Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_pool_cleanup_register :: Ptr C'apr_pool_t -> Ptr () -> FunPtr (Ptr () -> IO C'apr_status_t) -> FunPtr (Ptr () -> IO C'apr_status_t) -> IO ()
c'apr_pool_pre_cleanup_register :: Ptr C'apr_pool_t -> Ptr () -> FunPtr (Ptr () -> IO C'apr_status_t) -> IO ()
c'apr_pool_cleanup_kill :: Ptr C'apr_pool_t -> Ptr () -> FunPtr (Ptr () -> IO C'apr_status_t) -> IO ()
p'apr_pool_cleanup_register :: FunPtr (Ptr C'apr_pool_t -> Ptr () -> FunPtr (Ptr () -> IO C'apr_status_t) -> FunPtr (Ptr () -> IO C'apr_status_t) -> IO ())
p'apr_pool_pre_cleanup_register :: FunPtr (Ptr C'apr_pool_t -> Ptr () -> FunPtr (Ptr () -> IO C'apr_status_t) -> IO ())
c'apr_pool_child_cleanup_set :: Ptr C'apr_pool_t -> Ptr () -> FunPtr (Ptr () -> IO C'apr_status_t) -> FunPtr (Ptr () -> IO C'apr_status_t) -> IO ()
p'apr_pool_cleanup_kill :: FunPtr (Ptr C'apr_pool_t -> Ptr () -> FunPtr (Ptr () -> IO C'apr_status_t) -> IO ())
c'apr_pool_cleanup_run :: Ptr C'apr_pool_t -> Ptr () -> FunPtr (Ptr () -> IO C'apr_status_t) -> IO C'apr_status_t
c'apr_pool_cleanup_null :: Ptr () -> IO C'apr_status_t
p'apr_pool_child_cleanup_set :: FunPtr (Ptr C'apr_pool_t -> Ptr () -> FunPtr (Ptr () -> IO C'apr_status_t) -> FunPtr (Ptr () -> IO C'apr_status_t) -> IO ())
c'apr_pool_cleanup_for_exec :: Ptr () -> IO ()
p'apr_pool_cleanup_run :: FunPtr (Ptr C'apr_pool_t -> Ptr () -> FunPtr (Ptr () -> IO C'apr_status_t) -> IO C'apr_status_t)
p'apr_pool_cleanup_null :: FunPtr (Ptr () -> IO C'apr_status_t)
p'apr_pool_cleanup_for_exec :: FunPtr (Ptr () -> IO ())
c'apr_pool_join :: Ptr C'apr_pool_t -> Ptr C'apr_pool_t -> IO ()
c'apr_pool_lock :: Ptr C'apr_pool_t -> CInt -> IO ()

module Bindings.APR.Atomic
c'apr_atomic_init :: Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_atomic_read32 :: Ptr C'apr_uint32_t -> IO C'apr_uint32_t
p'apr_atomic_init :: FunPtr (Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_atomic_set32 :: Ptr C'apr_uint32_t -> C'apr_uint32_t -> IO ()
p'apr_atomic_read32 :: FunPtr (Ptr C'apr_uint32_t -> IO C'apr_uint32_t)
c'apr_atomic_add32 :: Ptr C'apr_uint32_t -> C'apr_uint32_t -> IO C'apr_uint32_t
c'apr_atomic_sub32 :: Ptr C'apr_uint32_t -> C'apr_uint32_t -> IO ()
p'apr_atomic_set32 :: FunPtr (Ptr C'apr_uint32_t -> C'apr_uint32_t -> IO ())
c'apr_atomic_inc32 :: Ptr C'apr_uint32_t -> IO C'apr_uint32_t
p'apr_atomic_add32 :: FunPtr (Ptr C'apr_uint32_t -> C'apr_uint32_t -> IO C'apr_uint32_t)
c'apr_atomic_dec32 :: Ptr C'apr_uint32_t -> IO CInt
p'apr_atomic_sub32 :: FunPtr (Ptr C'apr_uint32_t -> C'apr_uint32_t -> IO ())
p'apr_atomic_inc32 :: FunPtr (Ptr C'apr_uint32_t -> IO C'apr_uint32_t)
c'apr_atomic_cas32 :: Ptr C'apr_uint32_t -> C'apr_uint32_t -> C'apr_uint32_t -> IO C'apr_uint32_t
p'apr_atomic_dec32 :: FunPtr (Ptr C'apr_uint32_t -> IO CInt)
c'apr_atomic_xchg32 :: Ptr C'apr_uint32_t -> C'apr_uint32_t -> IO C'apr_uint32_t
p'apr_atomic_cas32 :: FunPtr (Ptr C'apr_uint32_t -> C'apr_uint32_t -> C'apr_uint32_t -> IO C'apr_uint32_t)
c'apr_atomic_casptr :: Ptr (Ptr ()) -> Ptr () -> Ptr () -> IO (Ptr ())
p'apr_atomic_xchg32 :: FunPtr (Ptr C'apr_uint32_t -> C'apr_uint32_t -> IO C'apr_uint32_t)
c'apr_atomic_xchgptr :: Ptr (Ptr ()) -> Ptr () -> IO (Ptr ())
p'apr_atomic_casptr :: FunPtr (Ptr (Ptr ()) -> Ptr () -> Ptr () -> IO (Ptr ()))
p'apr_atomic_xchgptr :: FunPtr (Ptr (Ptr ()) -> Ptr () -> IO (Ptr ()))

module Bindings.APR.Env
c'apr_env_get :: Ptr (Ptr CChar) -> Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_env_set :: Ptr CChar -> Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_env_delete :: Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_env_get :: FunPtr (Ptr (Ptr CChar) -> Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t)
p'apr_env_set :: FunPtr (Ptr CChar -> Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t)
p'apr_env_delete :: FunPtr (Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t)

module Bindings.APR.User
type C'apr_uid_t = CUInt
type C'apr_gid_t = CUInt
c'apr_uid_current :: Ptr C'apr_uid_t -> Ptr C'apr_gid_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_uid_name_get :: Ptr (Ptr CChar) -> C'apr_uid_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_uid_current :: FunPtr (Ptr C'apr_uid_t -> Ptr C'apr_gid_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_uid_get :: Ptr C'apr_uid_t -> Ptr C'apr_gid_t -> Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_uid_homepath_get :: Ptr (Ptr CChar) -> Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_uid_name_get :: FunPtr (Ptr (Ptr CChar) -> C'apr_uid_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_uid_compare :: C'apr_uid_t -> C'apr_uid_t -> IO C'apr_status_t
p'apr_uid_get :: FunPtr (Ptr C'apr_uid_t -> Ptr C'apr_gid_t -> Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t)
p'apr_uid_homepath_get :: FunPtr (Ptr (Ptr CChar) -> Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_gid_name_get :: Ptr (Ptr CChar) -> C'apr_gid_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_gid_get :: Ptr C'apr_gid_t -> Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_gid_compare :: C'apr_gid_t -> C'apr_gid_t -> IO C'apr_status_t
p'apr_gid_name_get :: FunPtr (Ptr (Ptr CChar) -> C'apr_gid_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
p'apr_gid_get :: FunPtr (Ptr C'apr_gid_t -> Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t)

module Bindings.APR.GetOpt
data C'apr_getopt_err_fn_t
C'apr_getopt_err_fn_t :: C'apr_getopt_err_fn_t
data C'apr_getopt_t
C'apr_getopt_t :: Ptr C'apr_pool_t -> Ptr C'apr_getopt_err_fn_t -> Ptr () -> CInt -> CInt -> CInt -> CInt -> Ptr (Ptr CChar) -> Ptr CChar -> CInt -> CInt -> CInt -> C'apr_getopt_t
c'apr_getopt_t'cont :: C'apr_getopt_t -> Ptr C'apr_pool_t
c'apr_getopt_t'errfn :: C'apr_getopt_t -> Ptr C'apr_getopt_err_fn_t
c'apr_getopt_t'errarg :: C'apr_getopt_t -> Ptr ()
c'apr_getopt_t'ind :: C'apr_getopt_t -> CInt
c'apr_getopt_t'opt :: C'apr_getopt_t -> CInt
c'apr_getopt_t'reset :: C'apr_getopt_t -> CInt
c'apr_getopt_t'argc :: C'apr_getopt_t -> CInt
c'apr_getopt_t'argv :: C'apr_getopt_t -> Ptr (Ptr CChar)
c'apr_getopt_t'place :: C'apr_getopt_t -> Ptr CChar
c'apr_getopt_t'interleave :: C'apr_getopt_t -> CInt
c'apr_getopt_t'skip_start :: C'apr_getopt_t -> CInt
c'apr_getopt_t'skip_end :: C'apr_getopt_t -> CInt
data C'apr_getopt_option_t
C'apr_getopt_option_t :: Ptr CChar -> CInt -> CInt -> Ptr CChar -> C'apr_getopt_option_t
c'apr_getopt_option_t'name :: C'apr_getopt_option_t -> Ptr CChar
c'apr_getopt_option_t'optch :: C'apr_getopt_option_t -> CInt
c'apr_getopt_option_t'has_arg :: C'apr_getopt_option_t -> CInt
c'apr_getopt_option_t'description :: C'apr_getopt_option_t -> Ptr CChar
c'apr_getopt_init :: Ptr (Ptr C'apr_getopt_t) -> Ptr C'apr_pool_t -> CInt -> Ptr (Ptr CChar) -> IO C'apr_status_t
c'apr_getopt :: Ptr C'apr_getopt_t -> Ptr CChar -> Ptr CChar -> Ptr (Ptr CChar) -> IO C'apr_status_t
c'apr_getopt_long :: Ptr C'apr_getopt_t -> Ptr C'apr_getopt_option_t -> Ptr CInt -> Ptr (Ptr CChar) -> IO C'apr_status_t
p'apr_getopt_init :: FunPtr (Ptr (Ptr C'apr_getopt_t) -> Ptr C'apr_pool_t -> CInt -> Ptr (Ptr CChar) -> IO C'apr_status_t)
p'apr_getopt :: FunPtr (Ptr C'apr_getopt_t -> Ptr CChar -> Ptr CChar -> Ptr (Ptr CChar) -> IO C'apr_status_t)
p'apr_getopt_long :: FunPtr (Ptr C'apr_getopt_t -> Ptr C'apr_getopt_option_t -> Ptr CInt -> Ptr (Ptr CChar) -> IO C'apr_status_t)
instance Eq C'apr_getopt_option_t
instance Show C'apr_getopt_option_t
instance Eq C'apr_getopt_t
instance Show C'apr_getopt_t
instance Storable C'apr_getopt_option_t
instance Storable C'apr_getopt_t

module Bindings.APR.Proc.Mutex
type C'apr_lockmech_e = CUInt
c'APR_LOCK_FCNTL :: (Num a) => a
c'APR_LOCK_FLOCK :: (Num a) => a
c'APR_LOCK_SYSVSEM :: (Num a) => a
c'APR_LOCK_PROC_PTHREAD :: (Num a) => a
c'APR_LOCK_POSIXSEM :: (Num a) => a
c'APR_LOCK_DEFAULT :: (Num a) => a
data C'apr_proc_mutex_t
C'apr_proc_mutex_t :: C'apr_proc_mutex_t
c'apr_proc_mutex_create :: Ptr (Ptr C'apr_proc_mutex_t) -> Ptr CChar -> C'apr_lockmech_e -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_proc_mutex_child_init :: Ptr (Ptr C'apr_proc_mutex_t) -> Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_proc_mutex_lock :: Ptr C'apr_proc_mutex_t -> IO C'apr_status_t
p'apr_proc_mutex_create :: FunPtr (Ptr (Ptr C'apr_proc_mutex_t) -> Ptr CChar -> C'apr_lockmech_e -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_proc_mutex_trylock :: Ptr C'apr_proc_mutex_t -> IO C'apr_status_t
p'apr_proc_mutex_child_init :: FunPtr (Ptr (Ptr C'apr_proc_mutex_t) -> Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_proc_mutex_unlock :: Ptr C'apr_proc_mutex_t -> IO C'apr_status_t
p'apr_proc_mutex_lock :: FunPtr (Ptr C'apr_proc_mutex_t -> IO C'apr_status_t)
c'apr_proc_mutex_destroy :: Ptr C'apr_proc_mutex_t -> IO C'apr_status_t
p'apr_proc_mutex_trylock :: FunPtr (Ptr C'apr_proc_mutex_t -> IO C'apr_status_t)
c'apr_proc_mutex_cleanup :: Ptr () -> IO C'apr_status_t
p'apr_proc_mutex_unlock :: FunPtr (Ptr C'apr_proc_mutex_t -> IO C'apr_status_t)
c'apr_proc_mutex_lockfile :: Ptr C'apr_proc_mutex_t -> IO (Ptr CChar)
p'apr_proc_mutex_destroy :: FunPtr (Ptr C'apr_proc_mutex_t -> IO C'apr_status_t)
p'apr_proc_mutex_cleanup :: FunPtr (Ptr () -> IO C'apr_status_t)
c'apr_proc_mutex_name :: Ptr C'apr_proc_mutex_t -> IO (Ptr CChar)
c'apr_proc_mutex_defname :: IO (Ptr CChar)
p'apr_proc_mutex_lockfile :: FunPtr (Ptr C'apr_proc_mutex_t -> IO (Ptr CChar))
p'apr_proc_mutex_name :: FunPtr (Ptr C'apr_proc_mutex_t -> IO (Ptr CChar))
p'apr_proc_mutex_defname :: FunPtr (IO (Ptr CChar))
c'apr_proc_mutex_pool_get :: Ptr C'apr_proc_mutex_t -> IO (Ptr C'apr_pool_t)
p'apr_proc_mutex_pool_get :: FunPtr (Ptr C'apr_proc_mutex_t -> IO (Ptr C'apr_pool_t))

module Bindings.APR.Global.Mutex
data C'apr_global_mutex_t
C'apr_global_mutex_t :: C'apr_global_mutex_t
c'apr_global_mutex_create :: Ptr (Ptr C'apr_global_mutex_t) -> Ptr CChar -> C'apr_lockmech_e -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_global_mutex_child_init :: Ptr (Ptr C'apr_global_mutex_t) -> Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_global_mutex_lock :: Ptr C'apr_global_mutex_t -> IO C'apr_status_t
c'apr_global_mutex_trylock :: Ptr C'apr_global_mutex_t -> IO C'apr_status_t
c'apr_global_mutex_unlock :: Ptr C'apr_global_mutex_t -> IO C'apr_status_t
c'apr_global_mutex_destroy :: Ptr C'apr_global_mutex_t -> IO C'apr_status_t
c'apr_global_mutex_pool_get :: Ptr C'apr_global_mutex_t -> IO (Ptr C'apr_pool_t)

module Bindings.APR.Thread.Mutex
data C'apr_thread_mutex_t
C'apr_thread_mutex_t :: C'apr_thread_mutex_t
c'APR_THREAD_MUTEX_DEFAULT :: (Num a) => a
c'APR_THREAD_MUTEX_NESTED :: (Num a) => a
c'APR_THREAD_MUTEX_UNNESTED :: (Num a) => a
c'apr_thread_mutex_create :: Ptr C'apr_thread_mutex_t -> CUInt -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_thread_mutex_lock :: Ptr C'apr_thread_mutex_t -> IO C'apr_status_t
c'apr_thread_mutex_trylock :: Ptr C'apr_thread_mutex_t -> IO C'apr_status_t
p'apr_thread_mutex_create :: FunPtr (Ptr C'apr_thread_mutex_t -> CUInt -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_thread_mutex_unlock :: Ptr C'apr_thread_mutex_t -> IO C'apr_status_t
p'apr_thread_mutex_lock :: FunPtr (Ptr C'apr_thread_mutex_t -> IO C'apr_status_t)
c'apr_thread_mutex_destroy :: Ptr C'apr_thread_mutex_t -> IO C'apr_status_t
p'apr_thread_mutex_trylock :: FunPtr (Ptr C'apr_thread_mutex_t -> IO C'apr_status_t)
p'apr_thread_mutex_unlock :: FunPtr (Ptr C'apr_thread_mutex_t -> IO C'apr_status_t)
c'apr_thread_mutex_pool_get :: Ptr C'apr_thread_mutex_t -> IO (Ptr C'apr_pool_t)
p'apr_thread_mutex_destroy :: FunPtr (Ptr C'apr_thread_mutex_t -> IO C'apr_status_t)
p'apr_thread_mutex_pool_get :: FunPtr (Ptr C'apr_thread_mutex_t -> IO (Ptr C'apr_pool_t))

module Bindings.APR.Thread.RWLock
data C'apr_thread_rwlock_t
C'apr_thread_rwlock_t :: C'apr_thread_rwlock_t
c'apr_thread_rwlock_create :: Ptr (Ptr C'apr_thread_rwlock_t) -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_thread_rwlock_rdlock :: Ptr C'apr_thread_rwlock_t -> IO C'apr_status_t
c'apr_thread_rwlock_tryrdlock :: Ptr C'apr_thread_rwlock_t -> IO C'apr_status_t
p'apr_thread_rwlock_create :: FunPtr (Ptr (Ptr C'apr_thread_rwlock_t) -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_thread_rwlock_wrlock :: Ptr C'apr_thread_rwlock_t -> IO C'apr_status_t
p'apr_thread_rwlock_rdlock :: FunPtr (Ptr C'apr_thread_rwlock_t -> IO C'apr_status_t)
c'apr_thread_rwlock_trywrlock :: Ptr C'apr_thread_rwlock_t -> IO C'apr_status_t
p'apr_thread_rwlock_tryrdlock :: FunPtr (Ptr C'apr_thread_rwlock_t -> IO C'apr_status_t)
c'apr_thread_rwlock_destroy :: Ptr C'apr_thread_rwlock_t -> IO C'apr_status_t
p'apr_thread_rwlock_wrlock :: FunPtr (Ptr C'apr_thread_rwlock_t -> IO C'apr_status_t)
p'apr_thread_rwlock_trywrlock :: FunPtr (Ptr C'apr_thread_rwlock_t -> IO C'apr_status_t)
c'apr_thread_rwlock_pool_get :: Ptr C'apr_thread_rwlock_t -> IO (Ptr C'apr_pool_t)
p'apr_thread_rwlock_destroy :: FunPtr (Ptr C'apr_thread_rwlock_t -> IO C'apr_status_t)
p'apr_thread_rwlock_pool_get :: FunPtr (Ptr C'apr_thread_rwlock_t -> IO (Ptr C'apr_pool_t))

module Bindings.APR.DSO
data C'apr_dso_handle_t
C'apr_dso_handle_t :: C'apr_dso_handle_t
type C'apr_dso_handle_sym_t = Ptr ()
c'apr_dso_load :: Ptr (Ptr C'apr_dso_handle_t) -> Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_dso_unload :: Ptr C'apr_dso_handle_t -> IO C'apr_status_t
c'apr_dso_sym :: Ptr C'apr_dso_handle_sym_t -> Ptr C'apr_dso_handle_t -> Ptr CChar -> IO C'apr_status_t
p'apr_dso_load :: FunPtr (Ptr (Ptr C'apr_dso_handle_t) -> Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t)
p'apr_dso_unload :: FunPtr (Ptr C'apr_dso_handle_t -> IO C'apr_status_t)
c'apr_dso_error :: Ptr C'apr_dso_handle_t -> Ptr CChar -> C'apr_size_t -> IO (Ptr CChar)
p'apr_dso_sym :: FunPtr (Ptr C'apr_dso_handle_sym_t -> Ptr C'apr_dso_handle_t -> Ptr CChar -> IO C'apr_status_t)
p'apr_dso_error :: FunPtr (Ptr C'apr_dso_handle_t -> Ptr CChar -> C'apr_size_t -> IO (Ptr CChar))

module Bindings.APR.Time
p'apr_month_snames :: Ptr (Ptr (Ptr CChar))
p'apr_day_snames :: Ptr (Ptr (Ptr CChar))
type C'apr_time_t = Int64
c'APR_TIME_T_FMT :: Ptr (CChar)
type C'apr_interval_time_t = Int64
type C'apr_short_interval_time_t = CInt
c'APR_USEC_PER_SEC :: (Num a) => a
c'apr_time_sec :: C'apr_time_t -> IO C'apr_time_t
c'apr_time_usec :: C'apr_time_t -> IO C'apr_time_t
c'apr_time_msec :: C'apr_time_t -> IO C'apr_time_t
c'apr_time_as_msec :: C'apr_time_t -> IO C'apr_time_t
c'apr_time_from_sec :: C'apr_time_t -> IO C'apr_time_t
c'apr_time_make :: C'apr_time_t -> C'apr_time_t -> IO C'apr_time_t
c'apr_time_now :: IO C'apr_time_t
p'apr_time_now :: FunPtr (IO C'apr_time_t)
data C'apr_time_exp_t
C'apr_time_exp_t :: C'apr_int32_t -> C'apr_int32_t -> C'apr_int32_t -> C'apr_int32_t -> C'apr_int32_t -> C'apr_int32_t -> C'apr_int32_t -> C'apr_int32_t -> C'apr_int32_t -> C'apr_int32_t -> C'apr_int32_t -> C'apr_time_exp_t
c'apr_time_exp_t'tm_usec :: C'apr_time_exp_t -> C'apr_int32_t
c'apr_time_exp_t'tm_sec :: C'apr_time_exp_t -> C'apr_int32_t
c'apr_time_exp_t'tm_min :: C'apr_time_exp_t -> C'apr_int32_t
c'apr_time_exp_t'tm_hour :: C'apr_time_exp_t -> C'apr_int32_t
c'apr_time_exp_t'tm_mday :: C'apr_time_exp_t -> C'apr_int32_t
c'apr_time_exp_t'tm_mon :: C'apr_time_exp_t -> C'apr_int32_t
c'apr_time_exp_t'tm_year :: C'apr_time_exp_t -> C'apr_int32_t
c'apr_time_exp_t'tm_wday :: C'apr_time_exp_t -> C'apr_int32_t
c'apr_time_exp_t'tm_yday :: C'apr_time_exp_t -> C'apr_int32_t
c'apr_time_exp_t'tm_isdst :: C'apr_time_exp_t -> C'apr_int32_t
c'apr_time_exp_t'tm_gmtoff :: C'apr_time_exp_t -> C'apr_int32_t
c'apr_time_ansi_put :: Ptr C'apr_time_t -> CTime -> IO C'apr_status_t
p'apr_time_ansi_put :: FunPtr (Ptr C'apr_time_t -> CTime -> IO C'apr_status_t)
c'apr_time_exp_tz :: Ptr C'apr_time_exp_t -> C'apr_time_t -> C'apr_int32_t -> IO C'apr_status_t
c'apr_time_exp_gmt :: Ptr C'apr_time_exp_t -> C'apr_time_t -> IO C'apr_status_t
c'apr_time_exp_lt :: Ptr C'apr_time_exp_t -> C'apr_time_t -> IO C'apr_status_t
p'apr_time_exp_tz :: FunPtr (Ptr C'apr_time_exp_t -> C'apr_time_t -> C'apr_int32_t -> IO C'apr_status_t)
c'apr_time_exp_get :: Ptr C'apr_time_t -> Ptr C'apr_time_exp_t -> IO C'apr_status_t
p'apr_time_exp_gmt :: FunPtr (Ptr C'apr_time_exp_t -> C'apr_time_t -> IO C'apr_status_t)
c'apr_time_exp_gmt_get :: Ptr C'apr_time_t -> Ptr C'apr_time_exp_t -> IO C'apr_status_t
p'apr_time_exp_lt :: FunPtr (Ptr C'apr_time_exp_t -> C'apr_time_t -> IO C'apr_status_t)
p'apr_time_exp_get :: FunPtr (Ptr C'apr_time_t -> Ptr C'apr_time_exp_t -> IO C'apr_status_t)
c'apr_sleep :: C'apr_interval_time_t -> IO ()
p'apr_time_exp_gmt_get :: FunPtr (Ptr C'apr_time_t -> Ptr C'apr_time_exp_t -> IO C'apr_status_t)
p'apr_sleep :: FunPtr (C'apr_interval_time_t -> IO ())
c'APR_RFC822_DATE_LEN :: (Num a) => a
c'apr_rfc822_date :: Ptr CChar -> C'apr_time_t -> IO C'apr_status_t
p'apr_rfc822_date :: FunPtr (Ptr CChar -> C'apr_time_t -> IO C'apr_status_t)
c'APR_CTIME_LEN :: (Num a) => a
c'apr_ctime :: Ptr CChar -> C'apr_time_t -> IO C'apr_status_t
p'apr_ctime :: FunPtr (Ptr CChar -> C'apr_time_t -> IO C'apr_status_t)
c'apr_strftime :: Ptr CChar -> Ptr C'apr_size_t -> C'apr_size_t -> Ptr CChar -> Ptr C'apr_time_exp_t -> IO C'apr_status_t
c'apr_time_clock_hires :: Ptr C'apr_pool_t -> IO ()
p'apr_strftime :: FunPtr (Ptr CChar -> Ptr C'apr_size_t -> C'apr_size_t -> Ptr CChar -> Ptr C'apr_time_exp_t -> IO C'apr_status_t)
p'apr_time_clock_hires :: FunPtr (Ptr C'apr_pool_t -> IO ())
instance Eq C'apr_time_exp_t
instance Show C'apr_time_exp_t
instance Storable C'apr_time_exp_t

module Bindings.APR.Thread.Cond
data C'apr_thread_cond_t
C'apr_thread_cond_t :: C'apr_thread_cond_t
c'apr_thread_cond_create :: Ptr (Ptr C'apr_thread_cond_t) -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_thread_cond_wait :: Ptr C'apr_thread_cond_t -> Ptr C'apr_thread_mutex_t -> IO C'apr_status_t
p'apr_thread_cond_create :: FunPtr (Ptr (Ptr C'apr_thread_cond_t) -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_thread_cond_timedwait :: Ptr C'apr_thread_cond_t -> Ptr C'apr_thread_mutex_t -> C'apr_interval_time_t -> IO C'apr_status_t
c'apr_thread_cond_signal :: Ptr C'apr_thread_cond_t -> IO C'apr_status_t
p'apr_thread_cond_wait :: FunPtr (Ptr C'apr_thread_cond_t -> Ptr C'apr_thread_mutex_t -> IO C'apr_status_t)
c'apr_thread_cond_broadcast :: Ptr C'apr_thread_cond_t -> IO C'apr_status_t
p'apr_thread_cond_timedwait :: FunPtr (Ptr C'apr_thread_cond_t -> Ptr C'apr_thread_mutex_t -> C'apr_interval_time_t -> IO C'apr_status_t)
c'apr_thread_cond_destroy :: Ptr C'apr_thread_cond_t -> IO C'apr_status_t
p'apr_thread_cond_signal :: FunPtr (Ptr C'apr_thread_cond_t -> IO C'apr_status_t)
p'apr_thread_cond_broadcast :: FunPtr (Ptr C'apr_thread_cond_t -> IO C'apr_status_t)
c'apr_thread_cond_pool_get :: Ptr C'apr_thread_cond_t -> IO (Ptr C'apr_pool_t)
p'apr_thread_cond_destroy :: FunPtr (Ptr C'apr_thread_cond_t -> IO C'apr_status_t)
p'apr_thread_cond_pool_get :: FunPtr (Ptr C'apr_thread_cond_t -> IO (Ptr C'apr_pool_t))

module Bindings.APR.Tables
data C'apr_table_t
C'apr_table_t :: C'apr_table_t
data C'apr_array_header_t
C'apr_array_header_t :: Ptr C'apr_pool_t -> CInt -> CInt -> CInt -> Ptr CChar -> C'apr_array_header_t
c'apr_array_header_t'pool :: C'apr_array_header_t -> Ptr C'apr_pool_t
c'apr_array_header_t'elt_size :: C'apr_array_header_t -> CInt
c'apr_array_header_t'nelts :: C'apr_array_header_t -> CInt
c'apr_array_header_t'nalloc :: C'apr_array_header_t -> CInt
c'apr_array_header_t'elts :: C'apr_array_header_t -> Ptr CChar
data C'apr_table_entry_t
C'apr_table_entry_t :: Ptr CChar -> Ptr CChar -> C'apr_uint32_t -> C'apr_table_entry_t
c'apr_table_entry_t'key :: C'apr_table_entry_t -> Ptr CChar
c'apr_table_entry_t'val :: C'apr_table_entry_t -> Ptr CChar
c'apr_table_entry_t'key_checksum :: C'apr_table_entry_t -> C'apr_uint32_t
c'apr_table_elts :: Ptr C'apr_table_t -> IO (Ptr C'apr_array_header_t)
c'apr_is_empty_table :: Ptr C'apr_table_t -> IO CInt
p'apr_table_elts :: FunPtr (Ptr C'apr_table_t -> IO (Ptr C'apr_array_header_t))
c'apr_is_empty_array :: Ptr C'apr_array_header_t -> IO CInt
p'apr_is_empty_table :: FunPtr (Ptr C'apr_table_t -> IO CInt)
p'apr_is_empty_array :: FunPtr (Ptr C'apr_array_header_t -> IO CInt)
c'apr_array_make :: Ptr C'apr_pool_t -> CInt -> CInt -> IO (Ptr C'apr_array_header_t)
c'apr_array_push :: Ptr C'apr_array_header_t -> IO (Ptr ())
p'apr_array_make :: FunPtr (Ptr C'apr_pool_t -> CInt -> CInt -> IO (Ptr C'apr_array_header_t))
p'apr_array_push :: FunPtr (Ptr C'apr_array_header_t -> IO (Ptr ()))
c'apr_array_pop :: Ptr C'apr_array_header_t -> IO (Ptr ())
c'apr_array_clear :: Ptr C'apr_array_header_t -> IO ()
p'apr_array_pop :: FunPtr (Ptr C'apr_array_header_t -> IO (Ptr ()))
c'apr_array_cat :: Ptr C'apr_array_header_t -> Ptr C'apr_array_header_t -> IO ()
p'apr_array_clear :: FunPtr (Ptr C'apr_array_header_t -> IO ())
c'apr_array_copy :: Ptr C'apr_pool_t -> Ptr C'apr_array_header_t -> IO (Ptr C'apr_array_header_t)
p'apr_array_cat :: FunPtr (Ptr C'apr_array_header_t -> Ptr C'apr_array_header_t -> IO ())
c'apr_array_copy_hdr :: Ptr C'apr_pool_t -> Ptr C'apr_array_header_t -> IO (Ptr C'apr_array_header_t)
p'apr_array_copy :: FunPtr (Ptr C'apr_pool_t -> Ptr C'apr_array_header_t -> IO (Ptr C'apr_array_header_t))
c'apr_array_append :: Ptr C'apr_pool_t -> Ptr C'apr_array_header_t -> Ptr C'apr_array_header_t -> IO (Ptr C'apr_array_header_t)
c'apr_array_pstrcat :: Ptr C'apr_pool_t -> Ptr C'apr_array_header_t -> CChar -> IO (Ptr CChar)
p'apr_array_copy_hdr :: FunPtr (Ptr C'apr_pool_t -> Ptr C'apr_array_header_t -> IO (Ptr C'apr_array_header_t))
p'apr_array_append :: FunPtr (Ptr C'apr_pool_t -> Ptr C'apr_array_header_t -> Ptr C'apr_array_header_t -> IO (Ptr C'apr_array_header_t))
c'apr_table_make :: Ptr C'apr_pool_t -> CInt -> IO (Ptr C'apr_table_t)
p'apr_array_pstrcat :: FunPtr (Ptr C'apr_pool_t -> Ptr C'apr_array_header_t -> CChar -> IO (Ptr CChar))
c'apr_table_copy :: Ptr C'apr_pool_t -> Ptr C'apr_table_t -> IO (Ptr C'apr_table_t)
p'apr_table_make :: FunPtr (Ptr C'apr_pool_t -> CInt -> IO (Ptr C'apr_table_t))
c'apr_table_clone :: Ptr C'apr_pool_t -> Ptr C'apr_table_t -> IO (Ptr C'apr_table_t)
c'apr_table_clear :: Ptr C'apr_table_t -> IO ()
p'apr_table_copy :: FunPtr (Ptr C'apr_pool_t -> Ptr C'apr_table_t -> IO (Ptr C'apr_table_t))
c'apr_table_get :: Ptr C'apr_table_t -> Ptr CChar -> IO (Ptr CChar)
p'apr_table_clone :: FunPtr (Ptr C'apr_pool_t -> Ptr C'apr_table_t -> IO (Ptr C'apr_table_t))
p'apr_table_clear :: FunPtr (Ptr C'apr_table_t -> IO ())
c'apr_table_set :: Ptr C'apr_table_t -> Ptr CChar -> Ptr CChar -> IO ()
c'apr_table_setn :: Ptr C'apr_table_t -> Ptr CChar -> Ptr CChar -> IO ()
p'apr_table_get :: FunPtr (Ptr C'apr_table_t -> Ptr CChar -> IO (Ptr CChar))
c'apr_table_unset :: Ptr C'apr_table_t -> Ptr CChar -> Ptr CChar -> IO ()
p'apr_table_set :: FunPtr (Ptr C'apr_table_t -> Ptr CChar -> Ptr CChar -> IO ())
c'apr_table_merge :: Ptr C'apr_table_t -> Ptr CChar -> Ptr CChar -> IO ()
p'apr_table_setn :: FunPtr (Ptr C'apr_table_t -> Ptr CChar -> Ptr CChar -> IO ())
c'apr_table_mergen :: Ptr C'apr_table_t -> Ptr CChar -> Ptr CChar -> IO ()
p'apr_table_unset :: FunPtr (Ptr C'apr_table_t -> Ptr CChar -> Ptr CChar -> IO ())
c'apr_table_add :: Ptr C'apr_table_t -> Ptr CChar -> Ptr CChar -> IO ()
p'apr_table_merge :: FunPtr (Ptr C'apr_table_t -> Ptr CChar -> Ptr CChar -> IO ())
c'apr_table_addn :: Ptr C'apr_table_t -> Ptr CChar -> Ptr CChar -> IO ()
p'apr_table_mergen :: FunPtr (Ptr C'apr_table_t -> Ptr CChar -> Ptr CChar -> IO ())
p'apr_table_add :: FunPtr (Ptr C'apr_table_t -> Ptr CChar -> Ptr CChar -> IO ())
c'apr_table_overlay :: Ptr C'apr_pool_t -> Ptr C'apr_table_t -> Ptr C'apr_table_t -> IO (Ptr C'apr_table_t)
p'apr_table_addn :: FunPtr (Ptr C'apr_table_t -> Ptr CChar -> Ptr CChar -> IO ())
type C'apr_table_do_callback_fn_t = FunPtr (Ptr () -> Ptr CChar -> Ptr CChar -> IO CInt)
p'apr_table_overlay :: FunPtr (Ptr C'apr_pool_t -> Ptr C'apr_table_t -> Ptr C'apr_table_t -> IO (Ptr C'apr_table_t))
mk'apr_table_do_callback_fn_t :: (Ptr () -> Ptr CChar -> Ptr CChar -> IO CInt) -> IO C'apr_table_do_callback_fn_t
mK'apr_table_do_callback_fn_t :: C'apr_table_do_callback_fn_t -> (Ptr () -> Ptr CChar -> Ptr CChar -> IO CInt)
c'APR_OVERLAP_TABLES_SET :: (Num a) => a
c'APR_OVERLAP_TABLES_MERGE :: (Num a) => a
c'apr_table_overlap :: Ptr C'apr_table_t -> Ptr C'apr_table_t -> CUInt -> IO ()
c'apr_table_compress :: Ptr C'apr_table_t -> CUInt -> IO ()
p'apr_table_overlap :: FunPtr (Ptr C'apr_table_t -> Ptr C'apr_table_t -> CUInt -> IO ())
p'apr_table_compress :: FunPtr (Ptr C'apr_table_t -> CUInt -> IO ())
instance Eq C'apr_table_entry_t
instance Show C'apr_table_entry_t
instance Eq C'apr_array_header_t
instance Show C'apr_array_header_t
instance Storable C'apr_table_entry_t
instance Storable C'apr_array_header_t

module Bindings.APR.File.Info
type C'apr_filetype_e = CUInt
c'APR_NOFILE :: (Num a) => a
c'APR_REG :: (Num a) => a
c'APR_DIR :: (Num a) => a
c'APR_CHR :: (Num a) => a
c'APR_BLK :: (Num a) => a
c'APR_PIPE :: (Num a) => a
c'APR_LNK :: (Num a) => a
c'APR_SOCK :: (Num a) => a
c'APR_UNKFILE :: (Num a) => a
c'APR_FPROT_USETID :: (Num a) => a
c'APR_FPROT_UREAD :: (Num a) => a
c'APR_FPROT_UWRITE :: (Num a) => a
c'APR_FPROT_UEXECUTE :: (Num a) => a
c'APR_FPROT_GSETID :: (Num a) => a
c'APR_FPROT_GREAD :: (Num a) => a
c'APR_FPROT_GWRITE :: (Num a) => a
c'APR_FPROT_GEXECUTE :: (Num a) => a
c'APR_FPROT_WSTICKY :: (Num a) => a
c'APR_FPROT_WREAD :: (Num a) => a
c'APR_FPROT_WWRITE :: (Num a) => a
c'APR_FPROT_WEXECUTE :: (Num a) => a
c'APR_FPROT_OS_DEFAULT :: (Num a) => a
c'APR_FPROT_FILE_SOURCE_PERMS :: (Num a) => a
c'APR_USETID :: (Num a) => a
c'APR_UREAD :: (Num a) => a
c'APR_UWRITE :: (Num a) => a
c'APR_UEXECUTE :: (Num a) => a
c'APR_GSETID :: (Num a) => a
c'APR_GREAD :: (Num a) => a
c'APR_GWRITE :: (Num a) => a
c'APR_GEXECUTE :: (Num a) => a
c'APR_WSTICKY :: (Num a) => a
c'APR_WREAD :: (Num a) => a
c'APR_WWRITE :: (Num a) => a
c'APR_WEXECUTE :: (Num a) => a
c'APR_OS_DEFAULT :: (Num a) => a
c'APR_FILE_SOURCE_PERMS :: (Num a) => a
data C'apr_dir_t
C'apr_dir_t :: C'apr_dir_t
type C'apr_fileperms_t = CInt
type C'apr_dev_t = Word64
c'APR_FINFO_LINK :: (Num a) => a
c'APR_FINFO_MTIME :: (Num a) => a
c'APR_FINFO_CTIME :: (Num a) => a
c'APR_FINFO_ATIME :: (Num a) => a
c'APR_FINFO_SIZE :: (Num a) => a
c'APR_FINFO_CSIZE :: (Num a) => a
c'APR_FINFO_DEV :: (Num a) => a
c'APR_FINFO_INODE :: (Num a) => a
c'APR_FINFO_TYPE :: (Num a) => a
c'APR_FINFO_USER :: (Num a) => a
c'APR_FINFO_GROUP :: (Num a) => a
c'APR_FINFO_UPROT :: (Num a) => a
c'APR_FINFO_GPROT :: (Num a) => a
c'APR_FINFO_WPROT :: (Num a) => a
c'APR_FINFO_ICASE :: (Num a) => a
c'APR_FINFO_NAME :: (Num a) => a
c'APR_FINFO_MIN :: (Num a) => a
c'APR_FINFO_IDENT :: (Num a) => a
c'APR_FINFO_OWNER :: (Num a) => a
c'APR_FINFO_PROT :: (Num a) => a
c'APR_FINFO_NORM :: (Num a) => a
c'APR_FINFO_DIRENT :: (Num a) => a
data C'apr_finfo_t
C'apr_finfo_t :: Ptr C'apr_pool_t -> C'apr_int32_t -> C'apr_fileperms_t -> C'apr_filetype_e -> C'apr_uid_t -> C'apr_gid_t -> C'apr_ino_t -> C'apr_dev_t -> C'apr_int32_t -> C'apr_off_t -> C'apr_off_t -> C'apr_time_t -> C'apr_time_t -> C'apr_time_t -> Ptr CChar -> Ptr CChar -> Ptr C'apr_file_t -> C'apr_finfo_t
c'apr_finfo_t'pool :: C'apr_finfo_t -> Ptr C'apr_pool_t
c'apr_finfo_t'valid :: C'apr_finfo_t -> C'apr_int32_t
c'apr_finfo_t'protection :: C'apr_finfo_t -> C'apr_fileperms_t
c'apr_finfo_t'filetype :: C'apr_finfo_t -> C'apr_filetype_e
c'apr_finfo_t'user :: C'apr_finfo_t -> C'apr_uid_t
c'apr_finfo_t'group :: C'apr_finfo_t -> C'apr_gid_t
c'apr_finfo_t'inode :: C'apr_finfo_t -> C'apr_ino_t
c'apr_finfo_t'device :: C'apr_finfo_t -> C'apr_dev_t
c'apr_finfo_t'nlink :: C'apr_finfo_t -> C'apr_int32_t
c'apr_finfo_t'size :: C'apr_finfo_t -> C'apr_off_t
c'apr_finfo_t'csize :: C'apr_finfo_t -> C'apr_off_t
c'apr_finfo_t'atime :: C'apr_finfo_t -> C'apr_time_t
c'apr_finfo_t'mtime :: C'apr_finfo_t -> C'apr_time_t
c'apr_finfo_t'ctime :: C'apr_finfo_t -> C'apr_time_t
c'apr_finfo_t'fname :: C'apr_finfo_t -> Ptr CChar
c'apr_finfo_t'name :: C'apr_finfo_t -> Ptr CChar
c'apr_finfo_t'filehand :: C'apr_finfo_t -> Ptr C'apr_file_t
c'apr_stat :: Ptr C'apr_finfo_t -> Ptr CChar -> C'apr_int32_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_dir_open :: Ptr (Ptr C'apr_dir_t) -> Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_dir_close :: Ptr C'apr_dir_t -> IO C'apr_status_t
p'apr_stat :: FunPtr (Ptr C'apr_finfo_t -> Ptr CChar -> C'apr_int32_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_dir_read :: Ptr C'apr_finfo_t -> C'apr_int32_t -> Ptr C'apr_dir_t -> IO C'apr_status_t
p'apr_dir_open :: FunPtr (Ptr (Ptr C'apr_dir_t) -> Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_dir_rewind :: Ptr C'apr_dir_t -> IO C'apr_status_t
p'apr_dir_close :: FunPtr (Ptr C'apr_dir_t -> IO C'apr_status_t)
p'apr_dir_read :: FunPtr (Ptr C'apr_finfo_t -> C'apr_int32_t -> Ptr C'apr_dir_t -> IO C'apr_status_t)
p'apr_dir_rewind :: FunPtr (Ptr C'apr_dir_t -> IO C'apr_status_t)
c'APR_FILEPATH_NOTABOVEROOT :: (Num a) => a
c'APR_FILEPATH_SECUREROOTTEST :: (Num a) => a
c'APR_FILEPATH_SECUREROOT :: (Num a) => a
c'APR_FILEPATH_NOTRELATIVE :: (Num a) => a
c'APR_FILEPATH_NOTABSOLUTE :: (Num a) => a
c'APR_FILEPATH_NATIVE :: (Num a) => a
c'APR_FILEPATH_TRUENAME :: (Num a) => a
c'apr_filepath_root :: Ptr (Ptr CChar) -> Ptr (Ptr CChar) -> C'apr_int32_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_filepath_merge :: Ptr (Ptr CChar) -> Ptr CChar -> Ptr CChar -> C'apr_int32_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_filepath_list_split :: Ptr (Ptr C'apr_array_header_t) -> Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_filepath_root :: FunPtr (Ptr (Ptr CChar) -> Ptr (Ptr CChar) -> C'apr_int32_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_filepath_list_merge :: Ptr (Ptr CChar) -> Ptr C'apr_array_header_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_filepath_merge :: FunPtr (Ptr (Ptr CChar) -> Ptr CChar -> Ptr CChar -> C'apr_int32_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_filepath_get :: Ptr (Ptr CChar) -> C'apr_int32_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_filepath_list_split :: FunPtr (Ptr (Ptr C'apr_array_header_t) -> Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_filepath_set :: Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_filepath_list_merge :: FunPtr (Ptr (Ptr CChar) -> Ptr C'apr_array_header_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
p'apr_filepath_get :: FunPtr (Ptr (Ptr CChar) -> C'apr_int32_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
p'apr_filepath_set :: FunPtr (Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'APR_FILEPATH_ENCODING_UNKNOWN :: (Num a) => a
c'APR_FILEPATH_ENCODING_LOCALE :: (Num a) => a
c'APR_FILEPATH_ENCODING_UTF8 :: (Num a) => a
c'apr_filepath_encoding :: Ptr CInt -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_filepath_encoding :: FunPtr (Ptr CInt -> Ptr C'apr_pool_t -> IO C'apr_status_t)
instance Eq C'apr_finfo_t
instance Show C'apr_finfo_t
instance Storable C'apr_finfo_t

module Bindings.APR.File.IO
c'APR_FOPEN_READ :: (Num a) => a
c'APR_FOPEN_WRITE :: (Num a) => a
c'APR_FOPEN_CREATE :: (Num a) => a
c'APR_FOPEN_APPEND :: (Num a) => a
c'APR_FOPEN_TRUNCATE :: (Num a) => a
c'APR_FOPEN_BINARY :: (Num a) => a
c'APR_FOPEN_EXCL :: (Num a) => a
c'APR_FOPEN_BUFFERED :: (Num a) => a
c'APR_FOPEN_DELONCLOSE :: (Num a) => a
c'APR_FOPEN_XTHREAD :: (Num a) => a
c'APR_FOPEN_SHARELOCK :: (Num a) => a
c'APR_FOPEN_NOCLEANUP :: (Num a) => a
c'APR_FOPEN_SENDFILE_ENABLED :: (Num a) => a
c'APR_FOPEN_LARGEFILE :: (Num a) => a
c'APR_FOPEN_SPARSE :: (Num a) => a
c'APR_READ :: (Num a) => a
c'APR_WRITE :: (Num a) => a
c'APR_CREATE :: (Num a) => a
c'APR_APPEND :: (Num a) => a
c'APR_TRUNCATE :: (Num a) => a
c'APR_BINARY :: (Num a) => a
c'APR_EXCL :: (Num a) => a
c'APR_BUFFERED :: (Num a) => a
c'APR_DELONCLOSE :: (Num a) => a
c'APR_XTHREAD :: (Num a) => a
c'APR_SHARELOCK :: (Num a) => a
c'APR_FILE_NOCLEANUP :: (Num a) => a
c'APR_SENDFILE_ENABLED :: (Num a) => a
c'APR_LARGEFILE :: (Num a) => a
c'APR_SET :: (Num a) => a
c'APR_CUR :: (Num a) => a
c'APR_END :: (Num a) => a
c'APR_FILE_ATTR_READONLY :: (Num a) => a
c'APR_FILE_ATTR_EXECUTABLE :: (Num a) => a
c'APR_FILE_ATTR_HIDDEN :: (Num a) => a
c'APR_MAX_IOVEC_SIZE :: (Num a) => a
type C'apr_fileattrs_t = CUInt
type C'apr_seek_where_t = CInt
c'APR_FLOCK_SHARED :: (Num a) => a
c'APR_FLOCK_EXCLUSIVE :: (Num a) => a
c'APR_FLOCK_TYPEMASK :: (Num a) => a
c'APR_FLOCK_NONBLOCK :: (Num a) => a
c'apr_file_open :: Ptr (Ptr C'apr_file_t) -> Ptr CChar -> C'apr_int32_t -> C'apr_fileperms_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_file_close :: Ptr C'apr_file_t -> IO C'apr_status_t
c'apr_file_remove :: Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_file_open :: FunPtr (Ptr (Ptr C'apr_file_t) -> Ptr CChar -> C'apr_int32_t -> C'apr_fileperms_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
p'apr_file_close :: FunPtr (Ptr C'apr_file_t -> IO C'apr_status_t)
c'apr_file_rename :: Ptr CChar -> Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_file_remove :: FunPtr (Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_file_copy :: Ptr CChar -> Ptr CChar -> C'apr_fileperms_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_file_rename :: FunPtr (Ptr CChar -> Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_file_append :: Ptr CChar -> Ptr CChar -> C'apr_fileperms_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_file_eof :: Ptr C'apr_file_t -> IO C'apr_status_t
p'apr_file_copy :: FunPtr (Ptr CChar -> Ptr CChar -> C'apr_fileperms_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
p'apr_file_append :: FunPtr (Ptr CChar -> Ptr CChar -> C'apr_fileperms_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
p'apr_file_eof :: FunPtr (Ptr C'apr_file_t -> IO C'apr_status_t)
c'apr_file_open_stderr :: Ptr (Ptr C'apr_file_t) -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_file_open_stdout :: Ptr (Ptr C'apr_file_t) -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_file_open_stdin :: Ptr (Ptr C'apr_file_t) -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_file_open_stderr :: FunPtr (Ptr (Ptr C'apr_file_t) -> Ptr C'apr_pool_t -> IO C'apr_status_t)
p'apr_file_open_stdout :: FunPtr (Ptr (Ptr C'apr_file_t) -> Ptr C'apr_pool_t -> IO C'apr_status_t)
p'apr_file_open_stdin :: FunPtr (Ptr (Ptr C'apr_file_t) -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_file_open_flags_stderr :: Ptr (Ptr C'apr_file_t) -> C'apr_int32_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_file_open_flags_stdout :: Ptr (Ptr C'apr_file_t) -> C'apr_int32_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_file_open_flags_stdin :: Ptr (Ptr C'apr_file_t) -> C'apr_int32_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_file_open_flags_stderr :: FunPtr (Ptr (Ptr C'apr_file_t) -> C'apr_int32_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
p'apr_file_open_flags_stdout :: FunPtr (Ptr (Ptr C'apr_file_t) -> C'apr_int32_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_file_read :: Ptr C'apr_file_t -> Ptr () -> Ptr C'apr_size_t -> IO C'apr_status_t
p'apr_file_open_flags_stdin :: FunPtr (Ptr (Ptr C'apr_file_t) -> C'apr_int32_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_file_write :: Ptr C'apr_file_t -> Ptr () -> Ptr C'apr_size_t -> IO C'apr_status_t
p'apr_file_read :: FunPtr (Ptr C'apr_file_t -> Ptr () -> Ptr C'apr_size_t -> IO C'apr_status_t)
c'apr_file_writev :: Ptr C'apr_file_t -> Ptr C'iovec -> C'apr_size_t -> Ptr C'apr_size_t -> IO C'apr_status_t
p'apr_file_write :: FunPtr (Ptr C'apr_file_t -> Ptr () -> Ptr C'apr_size_t -> IO C'apr_status_t)
c'apr_file_read_full :: Ptr C'apr_file_t -> Ptr () -> C'apr_size_t -> Ptr C'apr_size_t -> IO C'apr_status_t
c'apr_file_write_full :: Ptr C'apr_file_t -> Ptr () -> C'apr_size_t -> Ptr C'apr_size_t -> IO C'apr_status_t
p'apr_file_writev :: FunPtr (Ptr C'apr_file_t -> Ptr C'iovec -> C'apr_size_t -> Ptr C'apr_size_t -> IO C'apr_status_t)
c'apr_file_writev_full :: Ptr C'apr_file_t -> Ptr C'iovec -> C'apr_size_t -> Ptr C'apr_size_t -> IO C'apr_status_t
p'apr_file_read_full :: FunPtr (Ptr C'apr_file_t -> Ptr () -> C'apr_size_t -> Ptr C'apr_size_t -> IO C'apr_status_t)
p'apr_file_write_full :: FunPtr (Ptr C'apr_file_t -> Ptr () -> C'apr_size_t -> Ptr C'apr_size_t -> IO C'apr_status_t)
c'apr_file_putc :: CChar -> Ptr C'apr_file_t -> IO C'apr_status_t
p'apr_file_writev_full :: FunPtr (Ptr C'apr_file_t -> Ptr C'iovec -> C'apr_size_t -> Ptr C'apr_size_t -> IO C'apr_status_t)
c'apr_file_getc :: CChar -> Ptr C'apr_file_t -> IO C'apr_status_t
c'apr_file_ungetc :: CChar -> Ptr C'apr_file_t -> IO C'apr_status_t
p'apr_file_putc :: FunPtr (CChar -> Ptr C'apr_file_t -> IO C'apr_status_t)
p'apr_file_getc :: FunPtr (CChar -> Ptr C'apr_file_t -> IO C'apr_status_t)
c'apr_file_gets :: Ptr CChar -> CInt -> Ptr C'apr_file_t -> IO C'apr_status_t
c'apr_file_puts :: Ptr CChar -> Ptr C'apr_file_t -> IO C'apr_status_t
p'apr_file_ungetc :: FunPtr (CChar -> Ptr C'apr_file_t -> IO C'apr_status_t)
c'apr_file_flush :: Ptr C'apr_file_t -> IO C'apr_status_t
p'apr_file_gets :: FunPtr (Ptr CChar -> CInt -> Ptr C'apr_file_t -> IO C'apr_status_t)
p'apr_file_puts :: FunPtr (Ptr CChar -> Ptr C'apr_file_t -> IO C'apr_status_t)
c'apr_file_dup :: Ptr (Ptr C'apr_file_t) -> Ptr C'apr_file_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_file_flush :: FunPtr (Ptr C'apr_file_t -> IO C'apr_status_t)
c'apr_file_dup2 :: Ptr C'apr_file_t -> Ptr C'apr_file_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_file_setaside :: Ptr (Ptr C'apr_file_t) -> Ptr C'apr_file_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_file_dup :: FunPtr (Ptr (Ptr C'apr_file_t) -> Ptr C'apr_file_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_file_buffer_set :: Ptr C'apr_file_t -> Ptr CChar -> C'apr_size_t -> IO C'apr_status_t
p'apr_file_dup2 :: FunPtr (Ptr C'apr_file_t -> Ptr C'apr_file_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_file_buffer_size_get :: Ptr C'apr_size_t -> IO C'apr_size_t
p'apr_file_setaside :: FunPtr (Ptr (Ptr C'apr_file_t) -> Ptr C'apr_file_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
p'apr_file_buffer_set :: FunPtr (Ptr C'apr_file_t -> Ptr CChar -> C'apr_size_t -> IO C'apr_status_t)
c'apr_file_seek :: Ptr C'apr_file_t -> C'apr_seek_where_t -> Ptr C'apr_off_t -> IO C'apr_status_t
p'apr_file_buffer_size_get :: FunPtr (Ptr C'apr_size_t -> IO C'apr_size_t)
c'apr_file_pipe_create :: Ptr (Ptr C'apr_file_t) -> Ptr (Ptr C'apr_file_t) -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_file_seek :: FunPtr (Ptr C'apr_file_t -> C'apr_seek_where_t -> Ptr C'apr_off_t -> IO C'apr_status_t)
c'apr_file_pipe_create_ex :: Ptr (Ptr C'apr_file_t) -> Ptr (Ptr C'apr_file_t) -> C'apr_int32_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_file_namedpipe_create :: Ptr CChar -> C'apr_fileperms_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_file_pipe_create :: FunPtr (Ptr (Ptr C'apr_file_t) -> Ptr (Ptr C'apr_file_t) -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_file_pipe_timeout_get :: Ptr C'apr_file_t -> Ptr C'apr_interval_time_t -> IO C'apr_status_t
p'apr_file_pipe_create_ex :: FunPtr (Ptr (Ptr C'apr_file_t) -> Ptr (Ptr C'apr_file_t) -> C'apr_int32_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_file_pipe_timeout_set :: Ptr C'apr_file_t -> C'apr_interval_time_t -> IO C'apr_status_t
p'apr_file_namedpipe_create :: FunPtr (Ptr CChar -> C'apr_fileperms_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_file_lock :: Ptr C'apr_file_t -> CInt -> IO C'apr_status_t
p'apr_file_pipe_timeout_get :: FunPtr (Ptr C'apr_file_t -> Ptr C'apr_interval_time_t -> IO C'apr_status_t)
c'apr_file_unlock :: Ptr C'apr_file_t -> IO C'apr_status_t
p'apr_file_pipe_timeout_set :: FunPtr (Ptr C'apr_file_t -> C'apr_interval_time_t -> IO C'apr_status_t)
p'apr_file_lock :: FunPtr (Ptr C'apr_file_t -> CInt -> IO C'apr_status_t)
c'apr_file_name_get :: Ptr (Ptr CChar) -> Ptr C'apr_file_t -> IO C'apr_status_t
p'apr_file_unlock :: FunPtr (Ptr C'apr_file_t -> IO C'apr_status_t)
c'apr_file_data_get :: Ptr (Ptr ()) -> Ptr CChar -> Ptr C'apr_file_t -> IO C'apr_status_t
p'apr_file_name_get :: FunPtr (Ptr (Ptr CChar) -> Ptr C'apr_file_t -> IO C'apr_status_t)
c'apr_file_data_set :: Ptr C'apr_file_t -> Ptr () -> Ptr CChar -> FunPtr (Ptr () -> IO C'apr_status_t) -> IO C'apr_status_t
p'apr_file_data_get :: FunPtr (Ptr (Ptr ()) -> Ptr CChar -> Ptr C'apr_file_t -> IO C'apr_status_t)
c'apr_file_perms_set :: Ptr CChar -> C'apr_fileperms_t -> IO C'apr_status_t
p'apr_file_data_set :: FunPtr (Ptr C'apr_file_t -> Ptr () -> Ptr CChar -> FunPtr (Ptr () -> IO C'apr_status_t) -> IO C'apr_status_t)
c'apr_file_attrs_set :: Ptr CChar -> C'apr_fileattrs_t -> C'apr_fileattrs_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_file_perms_set :: FunPtr (Ptr CChar -> C'apr_fileperms_t -> IO C'apr_status_t)
c'apr_file_mtime_set :: Ptr CChar -> C'apr_time_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_dir_make :: Ptr CChar -> C'apr_fileperms_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_file_attrs_set :: FunPtr (Ptr CChar -> C'apr_fileattrs_t -> C'apr_fileattrs_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_dir_make_recursive :: Ptr CChar -> C'apr_fileperms_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_file_mtime_set :: FunPtr (Ptr CChar -> C'apr_time_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_dir_remove :: Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_dir_make :: FunPtr (Ptr CChar -> C'apr_fileperms_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_file_info_get :: Ptr C'apr_finfo_t -> C'apr_int32_t -> Ptr C'apr_file_t -> IO C'apr_status_t
p'apr_dir_make_recursive :: FunPtr (Ptr CChar -> C'apr_fileperms_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_file_trunc :: Ptr C'apr_file_t -> C'apr_off_t -> IO C'apr_status_t
p'apr_dir_remove :: FunPtr (Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_file_flags_get :: Ptr C'apr_file_t -> IO C'apr_int32_t
p'apr_file_info_get :: FunPtr (Ptr C'apr_finfo_t -> C'apr_int32_t -> Ptr C'apr_file_t -> IO C'apr_status_t)
p'apr_file_trunc :: FunPtr (Ptr C'apr_file_t -> C'apr_off_t -> IO C'apr_status_t)
c'apr_file_pool_get :: Ptr C'apr_file_t -> IO (Ptr C'apr_pool_t)
p'apr_file_flags_get :: FunPtr (Ptr C'apr_file_t -> IO C'apr_int32_t)
c'apr_file_inherit_set :: Ptr C'apr_file_t -> IO C'apr_status_t
c'apr_file_inherit_unset :: Ptr C'apr_file_t -> IO C'apr_status_t
p'apr_file_pool_get :: FunPtr (Ptr C'apr_file_t -> IO (Ptr C'apr_pool_t))
p'apr_file_inherit_set :: FunPtr (Ptr C'apr_file_t -> IO C'apr_status_t)
p'apr_file_inherit_unset :: FunPtr (Ptr C'apr_file_t -> IO C'apr_status_t)

module Bindings.APR.FNMatch
c'APR_FNM_NOMATCH :: (Num a) => a
c'APR_FNM_NOESCAPE :: (Num a) => a
c'APR_FNM_PATHNAME :: (Num a) => a
c'APR_FNM_PERIOD :: (Num a) => a
c'APR_FNM_CASE_BLIND :: (Num a) => a
c'apr_fnmatch :: Ptr CChar -> Ptr CChar -> CInt -> IO C'apr_status_t
c'apr_fnmatch_test :: Ptr CChar -> IO CInt
p'apr_fnmatch :: FunPtr (Ptr CChar -> Ptr CChar -> CInt -> IO C'apr_status_t)
c'apr_match_glob :: Ptr CChar -> Ptr (Ptr C'apr_array_header_t) -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_fnmatch_test :: FunPtr (Ptr CChar -> IO CInt)
p'apr_match_glob :: FunPtr (Ptr CChar -> Ptr (Ptr C'apr_array_header_t) -> Ptr C'apr_pool_t -> IO C'apr_status_t)

module Bindings.APR.General
c'FALSE :: (Num a) => a
c'TRUE :: (Num a) => a
c'APR_ASCII_BLANK :: (Num a) => a
c'APR_ASCII_CR :: (Num a) => a
c'APR_ASCII_LF :: (Num a) => a
c'APR_ASCII_TAB :: (Num a) => a
type C'apr_signum_t = CInt
c'strcasecmp :: Ptr CChar -> Ptr CChar -> IO CInt
c'strncasecmp :: Ptr CChar -> Ptr CChar -> CSize -> IO CInt
c'APR_ALIGN :: C'apr_uint64_t -> C'apr_uint64_t -> IO C'apr_uint64_t
c'APR_ALIGN_DEFAULT :: C'apr_uint64_t -> IO C'apr_uint64_t
c'memmove :: Ptr () -> Ptr () -> CSize -> IO (Ptr ())
c'memchr :: Ptr () -> CInt -> CSize -> IO (Ptr ())
c'apr_initialize :: IO C'apr_status_t
c'apr_app_initialize :: Ptr CInt -> Ptr (Ptr (Ptr CChar)) -> Ptr (Ptr (Ptr CChar)) -> IO C'apr_status_t
c'apr_terminate :: IO ()
p'apr_initialize :: FunPtr (IO C'apr_status_t)
c'apr_terminate2 :: IO ()
p'apr_app_initialize :: FunPtr (Ptr CInt -> Ptr (Ptr (Ptr CChar)) -> Ptr (Ptr (Ptr CChar)) -> IO C'apr_status_t)
p'apr_terminate :: FunPtr (IO ())
p'apr_terminate2 :: FunPtr (IO ())
c'apr_generate_random_bytes :: Ptr CUChar -> C'apr_size_t -> IO C'apr_status_t
p'apr_generate_random_bytes :: FunPtr (Ptr CUChar -> C'apr_size_t -> IO C'apr_status_t)

module Bindings.APR.Hash
c'APR_HASH_KEY_STRING :: (Num a) => a
data C'apr_hash_t
C'apr_hash_t :: C'apr_hash_t
data C'apr_hash_index_t
C'apr_hash_index_t :: C'apr_hash_index_t
type C'apr_hashfunc_t = FunPtr (Ptr CChar -> Ptr C'apr_ssize_t -> IO CUInt)
mk'apr_hashfunc_t :: (Ptr CChar -> Ptr C'apr_ssize_t -> IO CUInt) -> IO C'apr_hashfunc_t
c'apr_hashfunc_default :: Ptr CChar -> Ptr C'apr_ssize_t -> IO CUInt
c'apr_hash_make :: Ptr C'apr_pool_t -> IO (Ptr C'apr_hash_t)
mK'apr_hashfunc_t :: C'apr_hashfunc_t -> (Ptr CChar -> Ptr C'apr_ssize_t -> IO CUInt)
p'apr_hashfunc_default :: FunPtr (Ptr CChar -> Ptr C'apr_ssize_t -> IO CUInt)
c'apr_hash_make_custom :: Ptr C'apr_hash_t -> C'apr_hashfunc_t -> IO (Ptr C'apr_hash_t)
p'apr_hash_make :: FunPtr (Ptr C'apr_pool_t -> IO (Ptr C'apr_hash_t))
c'apr_hash_copy :: Ptr C'apr_pool_t -> Ptr C'apr_hash_t -> IO (Ptr C'apr_hash_t)
c'apr_hash_set :: Ptr C'apr_hash_t -> Ptr () -> C'apr_ssize_t -> Ptr () -> IO ()
p'apr_hash_make_custom :: FunPtr (Ptr C'apr_hash_t -> C'apr_hashfunc_t -> IO (Ptr C'apr_hash_t))
c'apr_hash_get :: Ptr C'apr_hash_t -> Ptr () -> C'apr_ssize_t -> IO (Ptr ())
p'apr_hash_copy :: FunPtr (Ptr C'apr_pool_t -> Ptr C'apr_hash_t -> IO (Ptr C'apr_hash_t))
c'apr_hash_first :: Ptr C'apr_pool_t -> Ptr C'apr_hash_t -> IO (Ptr C'apr_hash_index_t)
p'apr_hash_set :: FunPtr (Ptr C'apr_hash_t -> Ptr () -> C'apr_ssize_t -> Ptr () -> IO ())
c'apr_hash_next :: Ptr C'apr_hash_index_t -> IO (Ptr C'apr_hash_index_t)
p'apr_hash_get :: FunPtr (Ptr C'apr_hash_t -> Ptr () -> C'apr_ssize_t -> IO (Ptr ()))
p'apr_hash_first :: FunPtr (Ptr C'apr_pool_t -> Ptr C'apr_hash_t -> IO (Ptr C'apr_hash_index_t))
c'apr_hash_this :: Ptr C'apr_hash_index_t -> Ptr (Ptr ()) -> Ptr C'apr_ssize_t -> Ptr (Ptr ()) -> IO ()
c'apr_hash_count :: Ptr C'apr_hash_t -> IO CUInt
p'apr_hash_next :: FunPtr (Ptr C'apr_hash_index_t -> IO (Ptr C'apr_hash_index_t))
c'apr_hash_clear :: Ptr C'apr_hash_t -> IO ()
p'apr_hash_this :: FunPtr (Ptr C'apr_hash_index_t -> Ptr (Ptr ()) -> Ptr C'apr_ssize_t -> Ptr (Ptr ()) -> IO ())
p'apr_hash_count :: FunPtr (Ptr C'apr_hash_t -> IO CUInt)
c'apr_hash_overlay :: Ptr C'apr_pool_t -> Ptr C'apr_hash_t -> Ptr C'apr_hash_t -> IO (Ptr C'apr_hash_t)
p'apr_hash_clear :: FunPtr (Ptr C'apr_hash_t -> IO ())
c'apr_hash_merge :: Ptr C'apr_pool_t -> Ptr C'apr_hash_t -> Ptr C'apr_hash_t -> FunPtr (Ptr C'apr_pool_t -> Ptr () -> C'apr_ssize_t -> Ptr () -> Ptr () -> Ptr () -> IO (Ptr ())) -> Ptr () -> IO (Ptr C'apr_hash_t)
p'apr_hash_overlay :: FunPtr (Ptr C'apr_pool_t -> Ptr C'apr_hash_t -> Ptr C'apr_hash_t -> IO (Ptr C'apr_hash_t))
c'apr_hash_pool_get :: Ptr C'apr_hash_t -> IO (Ptr C'apr_pool_t)
p'apr_hash_merge :: FunPtr (Ptr C'apr_pool_t -> Ptr C'apr_hash_t -> Ptr C'apr_hash_t -> FunPtr (Ptr C'apr_pool_t -> Ptr () -> C'apr_ssize_t -> Ptr () -> Ptr () -> Ptr () -> IO (Ptr ())) -> Ptr () -> IO (Ptr C'apr_hash_t))
p'apr_hash_pool_get :: FunPtr (Ptr C'apr_hash_t -> IO (Ptr C'apr_pool_t))

module Bindings.APR.Lib
c'HUGE_STRING_LEN :: (Num a) => a
data C'apr_vformatter_buff_t
C'apr_vformatter_buff_t :: Ptr CChar -> Ptr CChar -> C'apr_vformatter_buff_t
c'apr_vformatter_buff_t'curpos :: C'apr_vformatter_buff_t -> Ptr CChar
c'apr_vformatter_buff_t'endpos :: C'apr_vformatter_buff_t -> Ptr CChar
c'apr_filepath_name_get :: Ptr CChar -> IO (Ptr CChar)
c'apr_killpg :: CPid -> CInt -> IO CInt
p'apr_filepath_name_get :: FunPtr (Ptr CChar -> IO (Ptr CChar))
c'apr_password_get :: Ptr CChar -> Ptr CChar -> Ptr C'apr_size_t -> IO C'apr_status_t
c'apr_isalnum :: CInt -> IO CInt
p'apr_password_get :: FunPtr (Ptr CChar -> Ptr CChar -> Ptr C'apr_size_t -> IO C'apr_status_t)
c'apr_isalpha :: CInt -> IO CInt
c'apr_isdigit :: CInt -> IO CInt
c'apr_isgraph :: CInt -> IO CInt
c'apr_islower :: CInt -> IO CInt
c'apr_isascii :: CInt -> IO CInt
c'apr_isprint :: CInt -> IO CInt
c'apr_ispunct :: CInt -> IO CInt
c'apr_isspace :: CInt -> IO CInt
c'apr_isupper :: CInt -> IO CInt
c'apr_isxdigit :: CInt -> IO CInt
c'apr_tolower :: CInt -> IO CInt
c'apr_toupper :: CInt -> IO CInt
instance Eq C'apr_vformatter_buff_t
instance Show C'apr_vformatter_buff_t
instance Storable C'apr_vformatter_buff_t

module Bindings.APR.MMap
c'APR_MMAP_READ :: (Num a) => a
c'APR_MMAP_WRITE :: (Num a) => a
data C'apr_mmap_t
C'apr_mmap_t :: Ptr C'apr_pool_t -> Ptr () -> C'apr_size_t -> Ptr C'apr_mmap_t -> Ptr C'apr_mmap_t -> C'apr_mmap_t
c'apr_mmap_t'cntxt :: C'apr_mmap_t -> Ptr C'apr_pool_t
c'apr_mmap_t'mm :: C'apr_mmap_t -> Ptr ()
c'apr_mmap_t'size :: C'apr_mmap_t -> C'apr_size_t
c'apr_mmap_t'link'next :: C'apr_mmap_t -> Ptr C'apr_mmap_t
c'apr_mmap_t'link'prev :: C'apr_mmap_t -> Ptr C'apr_mmap_t
c'APR_MMAP_THRESHOLD :: (Num a) => a
c'APR_MMAP_LIMIT :: (Num a) => a
c'APR_MMAP_CANDIDATE :: C'apr_off_t -> IO CInt
c'apr_mmap_create :: Ptr (Ptr C'apr_mmap_t) -> Ptr C'apr_file_t -> C'apr_off_t -> C'apr_size_t -> C'apr_int32_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_mmap_dup :: Ptr (Ptr C'apr_mmap_t) -> Ptr C'apr_mmap_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_mmap_delete :: Ptr C'apr_mmap_t -> IO C'apr_status_t
p'apr_mmap_create :: FunPtr (Ptr (Ptr C'apr_mmap_t) -> Ptr C'apr_file_t -> C'apr_off_t -> C'apr_size_t -> C'apr_int32_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_mmap_offset :: Ptr (Ptr ()) -> Ptr C'apr_mmap_t -> C'apr_off_t -> IO C'apr_status_t
p'apr_mmap_dup :: FunPtr (Ptr (Ptr C'apr_mmap_t) -> Ptr C'apr_mmap_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
p'apr_mmap_delete :: FunPtr (Ptr C'apr_mmap_t -> IO C'apr_status_t)
p'apr_mmap_offset :: FunPtr (Ptr (Ptr ()) -> Ptr C'apr_mmap_t -> C'apr_off_t -> IO C'apr_status_t)
instance Eq C'apr_mmap_t
instance Show C'apr_mmap_t
instance Storable C'apr_mmap_t

module Bindings.APR.Network.IO
c'APR_MAX_SECS_TO_LINGER :: (Num a) => a
c'APRMAXHOSTLEN :: (Num a) => a
c'APR_ANYADDR :: Ptr (CChar)
c'APR_SO_LINGER :: (Num a) => a
c'APR_SO_KEEPALIVE :: (Num a) => a
c'APR_SO_DEBUG :: (Num a) => a
c'APR_SO_NONBLOCK :: (Num a) => a
c'APR_SO_REUSEADDR :: (Num a) => a
c'APR_SO_SNDBUF :: (Num a) => a
c'APR_SO_RCVBUF :: (Num a) => a
c'APR_SO_DISCONNECTED :: (Num a) => a
c'APR_TCP_NODELAY :: (Num a) => a
c'APR_TCP_NOPUSH :: (Num a) => a
c'APR_RESET_NODELAY :: (Num a) => a
c'APR_INCOMPLETE_READ :: (Num a) => a
c'APR_INCOMPLETE_WRITE :: (Num a) => a
c'APR_IPV6_V6ONLY :: (Num a) => a
c'APR_TCP_DEFER_ACCEPT :: (Num a) => a
type C'apr_shutdown_how_e = CUInt
c'APR_IPV4_ADDR_OK :: (Num a) => a
c'APR_IPV6_ADDR_OK :: (Num a) => a
c'APR_INADDR_NONE :: (Num a) => a
c'APR_INET :: (Num a) => a
c'APR_UNSPEC :: (Num a) => a
c'APR_INET6 :: (Num a) => a
c'APR_PROTO_TCP :: (Num a) => a
c'APR_PROTO_UDP :: (Num a) => a
c'APR_PROTO_SCTP :: (Num a) => a
type C'apr_interface_e = CUInt
c'APR_LOCAL :: (Num a) => a
c'APR_REMOTE :: (Num a) => a
data C'apr_socket_t
C'apr_socket_t :: C'apr_socket_t
data C'apr_hdtr_t
C'apr_hdtr_t :: Ptr C'iovec -> CInt -> Ptr C'iovec -> CInt -> C'apr_hdtr_t
c'apr_hdtr_t'headers :: C'apr_hdtr_t -> Ptr C'iovec
c'apr_hdtr_t'numheaders :: C'apr_hdtr_t -> CInt
c'apr_hdtr_t'trailers :: C'apr_hdtr_t -> Ptr C'iovec
c'apr_hdtr_t'numtrailers :: C'apr_hdtr_t -> CInt
data C'apr_ipsubnet_t
C'apr_ipsubnet_t :: C'apr_ipsubnet_t
type C'apr_port_t = Word16
data C'apr_sockaddr_t
C'apr_sockaddr_t :: Ptr C'apr_pool_t -> Ptr CChar -> Ptr CChar -> C'apr_port_t -> C'apr_int32_t -> C'apr_socklen_t -> CInt -> CInt -> Ptr () -> Ptr C'apr_sockaddr_t -> C'apr_sockaddr_t
c'apr_sockaddr_t'pool :: C'apr_sockaddr_t -> Ptr C'apr_pool_t
c'apr_sockaddr_t'hostname :: C'apr_sockaddr_t -> Ptr CChar
c'apr_sockaddr_t'servname :: C'apr_sockaddr_t -> Ptr CChar
c'apr_sockaddr_t'port :: C'apr_sockaddr_t -> C'apr_port_t
c'apr_sockaddr_t'family :: C'apr_sockaddr_t -> C'apr_int32_t
c'apr_sockaddr_t'salen :: C'apr_sockaddr_t -> C'apr_socklen_t
c'apr_sockaddr_t'ipaddr_len :: C'apr_sockaddr_t -> CInt
c'apr_sockaddr_t'addr_str_len :: C'apr_sockaddr_t -> CInt
c'apr_sockaddr_t'ipaddr_ptr :: C'apr_sockaddr_t -> Ptr ()
c'apr_sockaddr_t'next :: C'apr_sockaddr_t -> Ptr C'apr_sockaddr_t
c'APR_SENDFILE_DISCONNECT_SOCKET :: (Num a) => a
c'apr_socket_create :: Ptr (Ptr C'apr_socket_t) -> CInt -> CInt -> CInt -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_socket_shutdown :: Ptr C'apr_socket_t -> C'apr_shutdown_how_e -> IO C'apr_status_t
c'apr_socket_close :: Ptr C'apr_socket_t -> IO C'apr_status_t
p'apr_socket_create :: FunPtr (Ptr (Ptr C'apr_socket_t) -> CInt -> CInt -> CInt -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_socket_bind :: Ptr C'apr_socket_t -> Ptr C'apr_sockaddr_t -> IO C'apr_status_t
p'apr_socket_shutdown :: FunPtr (Ptr C'apr_socket_t -> C'apr_shutdown_how_e -> IO C'apr_status_t)
p'apr_socket_close :: FunPtr (Ptr C'apr_socket_t -> IO C'apr_status_t)
c'apr_socket_listen :: Ptr C'apr_status_t -> C'apr_int32_t -> IO C'apr_status_t
p'apr_socket_bind :: FunPtr (Ptr C'apr_socket_t -> Ptr C'apr_sockaddr_t -> IO C'apr_status_t)
c'apr_socket_accept :: Ptr (Ptr C'apr_socket_t) -> Ptr C'apr_socket_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_socket_connect :: Ptr C'apr_socket_t -> Ptr C'apr_sockaddr_t -> IO C'apr_status_t
p'apr_socket_listen :: FunPtr (Ptr C'apr_status_t -> C'apr_int32_t -> IO C'apr_status_t)
p'apr_socket_accept :: FunPtr (Ptr (Ptr C'apr_socket_t) -> Ptr C'apr_socket_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_sockaddr_info_get :: Ptr (Ptr C'apr_sockaddr_t) -> Ptr CChar -> C'apr_int32_t -> C'apr_port_t -> C'apr_int32_t -> Ptr C'apr_port_t -> IO C'apr_status_t
p'apr_socket_connect :: FunPtr (Ptr C'apr_socket_t -> Ptr C'apr_sockaddr_t -> IO C'apr_status_t)
c'apr_getnameinfo :: Ptr (Ptr CChar) -> Ptr C'apr_sockaddr_t -> C'apr_int32_t -> IO C'apr_status_t
c'apr_parse_addr_port :: Ptr (Ptr CChar) -> Ptr (Ptr CChar) -> Ptr C'apr_port_t -> Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_sockaddr_info_get :: FunPtr (Ptr (Ptr C'apr_sockaddr_t) -> Ptr CChar -> C'apr_int32_t -> C'apr_port_t -> C'apr_int32_t -> Ptr C'apr_port_t -> IO C'apr_status_t)
c'apr_gethostname :: Ptr CChar -> CInt -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_getnameinfo :: FunPtr (Ptr (Ptr CChar) -> Ptr C'apr_sockaddr_t -> C'apr_int32_t -> IO C'apr_status_t)
c'apr_socket_data_get :: Ptr (Ptr ()) -> Ptr CChar -> Ptr C'apr_socket_t -> IO C'apr_status_t
p'apr_parse_addr_port :: FunPtr (Ptr (Ptr CChar) -> Ptr (Ptr CChar) -> Ptr C'apr_port_t -> Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t)
p'apr_gethostname :: FunPtr (Ptr CChar -> CInt -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_socket_data_set :: Ptr C'apr_socket_t -> Ptr () -> Ptr CChar -> FunPtr (Ptr () -> IO C'apr_status_t) -> IO C'apr_status_t
c'apr_socket_send :: Ptr C'apr_socket_t -> Ptr CChar -> Ptr C'apr_size_t -> IO C'apr_status_t
p'apr_socket_data_get :: FunPtr (Ptr (Ptr ()) -> Ptr CChar -> Ptr C'apr_socket_t -> IO C'apr_status_t)
c'apr_socket_sendv :: Ptr C'apr_socket_t -> Ptr C'iovec -> C'apr_int32_t -> Ptr C'apr_size_t -> IO C'apr_status_t
p'apr_socket_data_set :: FunPtr (Ptr C'apr_socket_t -> Ptr () -> Ptr CChar -> FunPtr (Ptr () -> IO C'apr_status_t) -> IO C'apr_status_t)
p'apr_socket_send :: FunPtr (Ptr C'apr_socket_t -> Ptr CChar -> Ptr C'apr_size_t -> IO C'apr_status_t)
c'apr_socket_sendto :: Ptr C'apr_socket_t -> Ptr C'apr_sockaddr_t -> C'apr_int32_t -> Ptr CChar -> Ptr C'apr_size_t -> IO C'apr_status_t
p'apr_socket_sendv :: FunPtr (Ptr C'apr_socket_t -> Ptr C'iovec -> C'apr_int32_t -> Ptr C'apr_size_t -> IO C'apr_status_t)
c'apr_socket_recvfrom :: Ptr C'apr_sockaddr_t -> Ptr C'apr_socket_t -> C'apr_int32_t -> Ptr CChar -> Ptr C'apr_size_t -> IO C'apr_status_t
p'apr_socket_sendto :: FunPtr (Ptr C'apr_socket_t -> Ptr C'apr_sockaddr_t -> C'apr_int32_t -> Ptr CChar -> Ptr C'apr_size_t -> IO C'apr_status_t)
p'apr_socket_recvfrom :: FunPtr (Ptr C'apr_sockaddr_t -> Ptr C'apr_socket_t -> C'apr_int32_t -> Ptr CChar -> Ptr C'apr_size_t -> IO C'apr_status_t)
c'apr_socket_sendfile :: Ptr C'apr_socket_t -> Ptr C'apr_file_t -> Ptr C'apr_hdtr_t -> Ptr C'apr_off_t -> Ptr C'apr_size_t -> C'apr_int32_t -> IO C'apr_status_t
p'apr_socket_sendfile :: FunPtr (Ptr C'apr_socket_t -> Ptr C'apr_file_t -> Ptr C'apr_hdtr_t -> Ptr C'apr_off_t -> Ptr C'apr_size_t -> C'apr_int32_t -> IO C'apr_status_t)
c'apr_socket_recv :: Ptr C'apr_socket_t -> Ptr CChar -> Ptr C'apr_size_t -> IO C'apr_status_t
c'apr_socket_opt_set :: Ptr C'apr_socket_t -> C'apr_int32_t -> C'apr_int32_t -> IO C'apr_status_t
c'apr_socket_timeout_set :: Ptr C'apr_socket_t -> C'apr_interval_time_t -> IO C'apr_status_t
p'apr_socket_recv :: FunPtr (Ptr C'apr_socket_t -> Ptr CChar -> Ptr C'apr_size_t -> IO C'apr_status_t)
c'apr_socket_opt_get :: Ptr C'apr_socket_t -> C'apr_int32_t -> C'apr_int32_t -> IO C'apr_status_t
p'apr_socket_opt_set :: FunPtr (Ptr C'apr_socket_t -> C'apr_int32_t -> C'apr_int32_t -> IO C'apr_status_t)
c'apr_socket_timeout_get :: Ptr C'apr_socket_t -> Ptr C'apr_interval_time_t -> IO C'apr_status_t
p'apr_socket_timeout_set :: FunPtr (Ptr C'apr_socket_t -> C'apr_interval_time_t -> IO C'apr_status_t)
c'apr_socket_atmark :: Ptr C'apr_socket_t -> Ptr CInt -> IO C'apr_status_t
p'apr_socket_opt_get :: FunPtr (Ptr C'apr_socket_t -> C'apr_int32_t -> C'apr_int32_t -> IO C'apr_status_t)
p'apr_socket_timeout_get :: FunPtr (Ptr C'apr_socket_t -> Ptr C'apr_interval_time_t -> IO C'apr_status_t)
c'apr_socket_addr_get :: Ptr (Ptr C'apr_socket_t) -> C'apr_interface_e -> Ptr C'apr_socket_t -> IO C'apr_status_t
c'apr_sockaddr_ip_get :: Ptr (Ptr CChar) -> Ptr C'apr_sockaddr_t -> IO C'apr_status_t
p'apr_socket_atmark :: FunPtr (Ptr C'apr_socket_t -> Ptr CInt -> IO C'apr_status_t)
c'apr_sockaddr_ip_getbuf :: Ptr CChar -> C'apr_size_t -> Ptr C'apr_sockaddr_t -> IO C'apr_status_t
p'apr_socket_addr_get :: FunPtr (Ptr (Ptr C'apr_socket_t) -> C'apr_interface_e -> Ptr C'apr_socket_t -> IO C'apr_status_t)
c'apr_sockaddr_equal :: Ptr C'apr_sockaddr_t -> Ptr C'apr_sockaddr_t -> IO CInt
p'apr_sockaddr_ip_get :: FunPtr (Ptr (Ptr CChar) -> Ptr C'apr_sockaddr_t -> IO C'apr_status_t)
c'apr_socket_type_get :: Ptr C'apr_socket_t -> Ptr CInt -> IO C'apr_status_t
p'apr_sockaddr_ip_getbuf :: FunPtr (Ptr CChar -> C'apr_size_t -> Ptr C'apr_sockaddr_t -> IO C'apr_status_t)
c'apr_getservbyname :: Ptr C'apr_sockaddr_t -> Ptr CChar -> IO C'apr_status_t
p'apr_sockaddr_equal :: FunPtr (Ptr C'apr_sockaddr_t -> Ptr C'apr_sockaddr_t -> IO CInt)
p'apr_socket_type_get :: FunPtr (Ptr C'apr_socket_t -> Ptr CInt -> IO C'apr_status_t)
c'apr_ipsubnet_create :: Ptr (Ptr C'apr_ipsubnet_t) -> Ptr CChar -> Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_ipsubnet_test :: Ptr C'apr_ipsubnet_t -> Ptr C'apr_sockaddr_t -> IO CInt
p'apr_getservbyname :: FunPtr (Ptr C'apr_sockaddr_t -> Ptr CChar -> IO C'apr_status_t)
p'apr_ipsubnet_create :: FunPtr (Ptr (Ptr C'apr_ipsubnet_t) -> Ptr CChar -> Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t)
p'apr_ipsubnet_test :: FunPtr (Ptr C'apr_ipsubnet_t -> Ptr C'apr_sockaddr_t -> IO CInt)
c'apr_socket_protocol_get :: Ptr C'apr_socket_t -> Ptr CInt -> IO C'apr_status_t
c'apr_socket_pool_get :: Ptr C'apr_socket_t -> IO (Ptr C'apr_pool_t)
p'apr_socket_protocol_get :: FunPtr (Ptr C'apr_socket_t -> Ptr CInt -> IO C'apr_status_t)
c'apr_socket_inherit_set :: Ptr C'apr_socket_t -> IO C'apr_status_t
c'apr_socket_inherit_unset :: Ptr C'apr_socket_t -> IO C'apr_status_t
p'apr_socket_pool_get :: FunPtr (Ptr C'apr_socket_t -> IO (Ptr C'apr_pool_t))
p'apr_socket_inherit_set :: FunPtr (Ptr C'apr_socket_t -> IO C'apr_status_t)
p'apr_socket_inherit_unset :: FunPtr (Ptr C'apr_socket_t -> IO C'apr_status_t)
c'apr_mcast_join :: Ptr C'apr_socket_t -> Ptr C'apr_sockaddr_t -> Ptr C'apr_sockaddr_t -> Ptr C'apr_sockaddr_t -> IO C'apr_status_t
c'apr_mcast_leave :: Ptr C'apr_socket_t -> Ptr C'apr_sockaddr_t -> Ptr C'apr_sockaddr_t -> Ptr C'apr_sockaddr_t -> IO C'apr_status_t
c'apr_mcast_hops :: Ptr C'apr_socket_t -> C'apr_byte_t -> IO C'apr_status_t
p'apr_mcast_join :: FunPtr (Ptr C'apr_socket_t -> Ptr C'apr_sockaddr_t -> Ptr C'apr_sockaddr_t -> Ptr C'apr_sockaddr_t -> IO C'apr_status_t)
c'apr_mcast_loopback :: Ptr C'apr_socket_t -> C'apr_byte_t -> IO C'apr_status_t
p'apr_mcast_leave :: FunPtr (Ptr C'apr_socket_t -> Ptr C'apr_sockaddr_t -> Ptr C'apr_sockaddr_t -> Ptr C'apr_sockaddr_t -> IO C'apr_status_t)
c'apr_mcast_interface :: Ptr C'apr_socket_t -> Ptr C'apr_sockaddr_t -> IO C'apr_status_t
p'apr_mcast_hops :: FunPtr (Ptr C'apr_socket_t -> C'apr_byte_t -> IO C'apr_status_t)
p'apr_mcast_loopback :: FunPtr (Ptr C'apr_socket_t -> C'apr_byte_t -> IO C'apr_status_t)
p'apr_mcast_interface :: FunPtr (Ptr C'apr_socket_t -> Ptr C'apr_sockaddr_t -> IO C'apr_status_t)
instance Eq C'apr_sockaddr_t
instance Show C'apr_sockaddr_t
instance Eq C'apr_hdtr_t
instance Show C'apr_hdtr_t
instance Storable C'apr_sockaddr_t
instance Storable C'apr_hdtr_t

module Bindings.APR.Support
c'apr_wait_for_io_or_timeout :: Ptr C'apr_file_t -> Ptr C'apr_socket_t -> CInt -> IO C'apr_status_t
p'apr_wait_for_io_or_timeout :: FunPtr (Ptr C'apr_file_t -> Ptr C'apr_socket_t -> CInt -> IO C'apr_status_t)

module Bindings.APR.Poll
c'APR_POLLIN :: (Num a) => a
c'APR_POLLPRI :: (Num a) => a
c'APR_POLLOUT :: (Num a) => a
c'APR_POLLERR :: (Num a) => a
c'APR_POLLHUP :: (Num a) => a
c'APR_POLLNVAL :: (Num a) => a
c'APR_POLLSET_THREADSAFE :: (Num a) => a
c'APR_POLLSET_NOCOPY :: (Num a) => a
type C'apr_datatype_e = CUInt
c'APR_NO_DESC :: (Num a) => a
c'APR_POLL_SOCKET :: (Num a) => a
c'APR_POLL_FILE :: (Num a) => a
c'APR_POLL_LASTDESC :: (Num a) => a
data C'apr_descriptor
C'apr_descriptor :: Ptr C'apr_file_t -> Ptr C'apr_socket_t -> C'apr_descriptor
c'apr_descriptor'f :: C'apr_descriptor -> Ptr C'apr_file_t
c'apr_descriptor's :: C'apr_descriptor -> Ptr C'apr_socket_t
data C'apr_pollfd_t
C'apr_pollfd_t :: Ptr C'apr_pool_t -> C'apr_datatype_e -> C'apr_int16_t -> C'apr_int16_t -> C'apr_descriptor -> Ptr () -> C'apr_pollfd_t
c'apr_pollfd_t'p :: C'apr_pollfd_t -> Ptr C'apr_pool_t
c'apr_pollfd_t'desc_type :: C'apr_pollfd_t -> C'apr_datatype_e
c'apr_pollfd_t'reqevents :: C'apr_pollfd_t -> C'apr_int16_t
c'apr_pollfd_t'rtnevents :: C'apr_pollfd_t -> C'apr_int16_t
c'apr_pollfd_t'desc :: C'apr_pollfd_t -> C'apr_descriptor
c'apr_pollfd_t'client_data :: C'apr_pollfd_t -> Ptr ()
u'apr_descriptor'f :: C'apr_descriptor -> Ptr C'apr_file_t -> IO C'apr_descriptor
data C'apr_pollset_t
C'apr_pollset_t :: C'apr_pollset_t
c'apr_pollset_create :: Ptr (Ptr C'apr_pollset_t) -> C'apr_uint32_t -> Ptr C'apr_pool_t -> C'apr_uint32_t -> IO C'apr_status_t
c'apr_pollset_destroy :: Ptr C'apr_pollset_t -> IO C'apr_status_t
c'apr_pollset_add :: Ptr C'apr_pollset_t -> Ptr C'apr_pollfd_t -> IO C'apr_status_t
p'apr_pollset_create :: FunPtr (Ptr (Ptr C'apr_pollset_t) -> C'apr_uint32_t -> Ptr C'apr_pool_t -> C'apr_uint32_t -> IO C'apr_status_t)
p'apr_pollset_destroy :: FunPtr (Ptr C'apr_pollset_t -> IO C'apr_status_t)
c'apr_pollset_remove :: Ptr C'apr_pollset_t -> Ptr C'apr_pollfd_t -> IO C'apr_status_t
u'apr_descriptor's :: C'apr_descriptor -> Ptr C'apr_socket_t -> IO C'apr_descriptor
p'apr_pollset_add :: FunPtr (Ptr C'apr_pollset_t -> Ptr C'apr_pollfd_t -> IO C'apr_status_t)
c'apr_pollset_poll :: Ptr C'apr_pollset_t -> C'apr_interval_time_t -> Ptr C'apr_int32_t -> Ptr (Ptr C'apr_pollfd_t) -> IO C'apr_status_t
p'apr_pollset_remove :: FunPtr (Ptr C'apr_pollset_t -> Ptr C'apr_pollfd_t -> IO C'apr_status_t)
c'apr_poll :: Ptr C'apr_pollfd_t -> C'apr_int32_t -> Ptr C'apr_int32_t -> C'apr_interval_time_t -> IO C'apr_status_t
p'apr_pollset_poll :: FunPtr (Ptr C'apr_pollset_t -> C'apr_interval_time_t -> Ptr C'apr_int32_t -> Ptr (Ptr C'apr_pollfd_t) -> IO C'apr_status_t)
data C'apr_pollcb_t
C'apr_pollcb_t :: C'apr_pollcb_t
p'apr_poll :: FunPtr (Ptr C'apr_pollfd_t -> C'apr_int32_t -> Ptr C'apr_int32_t -> C'apr_interval_time_t -> IO C'apr_status_t)
c'apr_pollcb_create :: Ptr (Ptr C'apr_pollcb_t) -> C'apr_uint32_t -> Ptr C'apr_pool_t -> C'apr_uint32_t -> IO C'apr_status_t
c'apr_pollcb_add :: Ptr C'apr_pollcb_t -> Ptr C'apr_pollfd_t -> IO C'apr_status_t
c'apr_pollcb_remove :: Ptr C'apr_pollcb_t -> Ptr C'apr_pollfd_t -> IO C'apr_status_t
p'apr_pollcb_create :: FunPtr (Ptr (Ptr C'apr_pollcb_t) -> C'apr_uint32_t -> Ptr C'apr_pool_t -> C'apr_uint32_t -> IO C'apr_status_t)
p'apr_pollcb_add :: FunPtr (Ptr C'apr_pollcb_t -> Ptr C'apr_pollfd_t -> IO C'apr_status_t)
type C'apr_pollcb_cb_t = FunPtr (Ptr () -> Ptr C'apr_pollfd_t -> IO C'apr_status_t)
p'apr_pollcb_remove :: FunPtr (Ptr C'apr_pollcb_t -> Ptr C'apr_pollfd_t -> IO C'apr_status_t)
mk'apr_pollcb_cb_t :: (Ptr () -> Ptr C'apr_pollfd_t -> IO C'apr_status_t) -> IO C'apr_pollcb_cb_t
c'apr_pollcb_poll :: Ptr C'apr_pollcb_t -> C'apr_interval_time_t -> C'apr_pollcb_cb_t -> Ptr () -> IO C'apr_status_t
mK'apr_pollcb_cb_t :: C'apr_pollcb_cb_t -> (Ptr () -> Ptr C'apr_pollfd_t -> IO C'apr_status_t)
p'apr_pollcb_poll :: FunPtr (Ptr C'apr_pollcb_t -> C'apr_interval_time_t -> C'apr_pollcb_cb_t -> Ptr () -> IO C'apr_status_t)
instance Eq C'apr_pollfd_t
instance Show C'apr_pollfd_t
instance Eq C'apr_descriptor
instance Show C'apr_descriptor
instance Storable C'apr_pollfd_t
instance Storable C'apr_descriptor

module Bindings.APR.Shm
data C'apr_shm_t
C'apr_shm_t :: C'apr_shm_t
c'apr_shm_create :: Ptr (Ptr C'apr_shm_t) -> C'apr_size_t -> Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_shm_remove :: Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_shm_destroy :: Ptr C'apr_shm_t -> IO C'apr_status_t
p'apr_shm_create :: FunPtr (Ptr (Ptr C'apr_shm_t) -> C'apr_size_t -> Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t)
p'apr_shm_remove :: FunPtr (Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_shm_attach :: Ptr (Ptr C'apr_shm_t) -> Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_shm_detach :: Ptr C'apr_shm_t -> IO C'apr_status_t
p'apr_shm_destroy :: FunPtr (Ptr C'apr_shm_t -> IO C'apr_status_t)
c'apr_shm_baseaddr_get :: Ptr C'apr_shm_t -> IO (Ptr ())
p'apr_shm_attach :: FunPtr (Ptr (Ptr C'apr_shm_t) -> Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_shm_size_get :: Ptr C'apr_shm_t -> IO C'apr_size_t
p'apr_shm_detach :: FunPtr (Ptr C'apr_shm_t -> IO C'apr_status_t)
p'apr_shm_baseaddr_get :: FunPtr (Ptr C'apr_shm_t -> IO (Ptr ()))
c'apr_shm_pool_get :: Ptr C'apr_shm_t -> IO (Ptr C'apr_pool_t)
p'apr_shm_size_get :: FunPtr (Ptr C'apr_shm_t -> IO C'apr_size_t)
p'apr_shm_pool_get :: FunPtr (Ptr C'apr_shm_t -> IO (Ptr C'apr_pool_t))

module Bindings.APR.Thread.Proc
type C'apr_cmdtype_e = CUInt
c'APR_SHELLCMD :: (Num a) => a
c'APR_PROGRAM :: (Num a) => a
c'APR_PROGRAM_ENV :: (Num a) => a
c'APR_PROGRAM_PATH :: (Num a) => a
c'APR_SHELLCMD_ENV :: (Num a) => a
type C'apr_wait_how_e = CUInt
c'APR_WAIT :: (Num a) => a
c'APR_NOWAIT :: (Num a) => a
type C'apr_exit_why_e = CUInt
c'APR_PROC_EXIT :: (Num a) => a
c'APR_PROC_SIGNAL :: (Num a) => a
c'APR_PROC_SIGNAL_CORE :: (Num a) => a
c'APR_PROC_CHECK_EXIT :: Ptr C'apr_exit_why_e -> IO CInt
c'APR_PROC_CHECK_SIGNALED :: Ptr C'apr_exit_why_e -> IO CInt
c'APR_PROC_CHECK_CORE_DUMP :: Ptr C'apr_exit_why_e -> IO CInt
c'APR_NO_PIPE :: (Num a) => a
c'APR_FULL_BLOCK :: (Num a) => a
c'APR_FULL_NONBLOCK :: (Num a) => a
c'APR_PARENT_BLOCK :: (Num a) => a
c'APR_CHILD_BLOCK :: (Num a) => a
c'APR_NO_FILE :: (Num a) => a
c'APR_READ_BLOCK :: (Num a) => a
c'APR_WRITE_BLOCK :: (Num a) => a
c'APR_LIMIT_CPU :: (Num a) => a
c'APR_LIMIT_MEM :: (Num a) => a
c'APR_LIMIT_NPROC :: (Num a) => a
c'APR_LIMIT_NOFILE :: (Num a) => a
c'APR_OC_REASON_DEATH :: (Num a) => a
c'APR_OC_REASON_UNWRITABLE :: (Num a) => a
c'APR_OC_REASON_RESTART :: (Num a) => a
c'APR_OC_REASON_UNREGISTER :: (Num a) => a
c'APR_OC_REASON_LOST :: (Num a) => a
c'APR_OC_REASON_RUNNING :: (Num a) => a
data C'apr_proc_t
C'apr_proc_t :: CPid -> Ptr C'apr_file_t -> Ptr C'apr_file_t -> Ptr C'apr_file_t -> C'apr_proc_t
c'apr_proc_t'pid :: C'apr_proc_t -> CPid
c'apr_proc_t'in :: C'apr_proc_t -> Ptr C'apr_file_t
c'apr_proc_t'out :: C'apr_proc_t -> Ptr C'apr_file_t
c'apr_proc_t'err :: C'apr_proc_t -> Ptr C'apr_file_t
type C'apr_child_errfn_t = FunPtr (Ptr C'apr_pool_t -> C'apr_status_t -> Ptr CChar -> IO ())
mk'apr_child_errfn_t :: (Ptr C'apr_pool_t -> C'apr_status_t -> Ptr CChar -> IO ()) -> IO C'apr_child_errfn_t
data C'apr_thread_t
C'apr_thread_t :: C'apr_thread_t
data C'apr_threadattr_t
C'apr_threadattr_t :: C'apr_threadattr_t
mK'apr_child_errfn_t :: C'apr_child_errfn_t -> (Ptr C'apr_pool_t -> C'apr_status_t -> Ptr CChar -> IO ())
data C'apr_procattr_t
C'apr_procattr_t :: C'apr_procattr_t
data C'apr_thread_once_t
C'apr_thread_once_t :: C'apr_thread_once_t
data C'apr_threadkey_t
C'apr_threadkey_t :: C'apr_threadkey_t
data C'apr_other_child_rec_t
C'apr_other_child_rec_t :: C'apr_other_child_rec_t
type C'apr_thread_start_t = FunPtr (Ptr C'apr_thread_t -> Ptr () -> IO (Ptr ()))
mk'apr_thread_start_t :: (Ptr C'apr_thread_t -> Ptr () -> IO (Ptr ())) -> IO C'apr_thread_start_t
type C'apr_kill_conditions_e = CUInt
mK'apr_thread_start_t :: C'apr_thread_start_t -> (Ptr C'apr_thread_t -> Ptr () -> IO (Ptr ()))
c'APR_KILL_NEVER :: (Num a) => a
c'APR_KILL_ALWAYS :: (Num a) => a
c'APR_KILL_AFTER_TIMEOUT :: (Num a) => a
c'APR_JUST_WAIT :: (Num a) => a
c'APR_KILL_ONLY_ONCE :: (Num a) => a
c'apr_threadattr_create :: Ptr (Ptr C'apr_threadattr_t) -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_threadattr_detach_set :: Ptr C'apr_threadattr_t -> C'apr_int32_t -> IO C'apr_status_t
c'apr_threadattr_detach_get :: Ptr C'apr_threadattr_t -> IO C'apr_status_t
p'apr_threadattr_create :: FunPtr (Ptr (Ptr C'apr_threadattr_t) -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_threadattr_stacksize_set :: Ptr C'apr_threadattr_t -> C'apr_size_t -> IO C'apr_status_t
p'apr_threadattr_detach_set :: FunPtr (Ptr C'apr_threadattr_t -> C'apr_int32_t -> IO C'apr_status_t)
p'apr_threadattr_detach_get :: FunPtr (Ptr C'apr_threadattr_t -> IO C'apr_status_t)
c'apr_threadattr_guardsize_set :: Ptr C'apr_threadattr_t -> C'apr_size_t -> IO C'apr_status_t
p'apr_threadattr_stacksize_set :: FunPtr (Ptr C'apr_threadattr_t -> C'apr_size_t -> IO C'apr_status_t)
p'apr_threadattr_guardsize_set :: FunPtr (Ptr C'apr_threadattr_t -> C'apr_size_t -> IO C'apr_status_t)
c'apr_thread_create :: Ptr (Ptr C'apr_thread_t) -> Ptr C'apr_threadattr_t -> C'apr_thread_start_t -> Ptr () -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_thread_exit :: Ptr C'apr_thread_t -> C'apr_status_t -> IO C'apr_status_t
c'apr_thread_join :: Ptr C'apr_status_t -> Ptr C'apr_thread_t -> IO C'apr_status_t
p'apr_thread_create :: FunPtr (Ptr (Ptr C'apr_thread_t) -> Ptr C'apr_threadattr_t -> C'apr_thread_start_t -> Ptr () -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_thread_yield :: IO ()
p'apr_thread_exit :: FunPtr (Ptr C'apr_thread_t -> C'apr_status_t -> IO C'apr_status_t)
p'apr_thread_join :: FunPtr (Ptr C'apr_status_t -> Ptr C'apr_thread_t -> IO C'apr_status_t)
p'apr_thread_yield :: FunPtr (IO ())
c'apr_thread_once_init :: Ptr (Ptr C'apr_thread_once_t) -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_thread_once :: Ptr C'apr_thread_once_t -> FunPtr (IO ()) -> IO C'apr_status_t
p'apr_thread_once_init :: FunPtr (Ptr (Ptr C'apr_thread_once_t) -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_thread_detach :: Ptr C'apr_thread_t -> IO C'apr_status_t
p'apr_thread_once :: FunPtr (Ptr C'apr_thread_once_t -> FunPtr (IO ()) -> IO C'apr_status_t)
c'apr_thread_data_get :: Ptr (Ptr ()) -> Ptr CChar -> Ptr C'apr_thread_t -> IO C'apr_status_t
p'apr_thread_detach :: FunPtr (Ptr C'apr_thread_t -> IO C'apr_status_t)
c'apr_thread_data_set :: Ptr () -> Ptr CChar -> FunPtr (Ptr () -> IO C'apr_status_t) -> Ptr C'apr_thread_t -> IO C'apr_status_t
p'apr_thread_data_get :: FunPtr (Ptr (Ptr ()) -> Ptr CChar -> Ptr C'apr_thread_t -> IO C'apr_status_t)
c'apr_threadkey_private_create :: Ptr (Ptr C'apr_threadkey_t) -> FunPtr (Ptr () -> IO ()) -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_thread_data_set :: FunPtr (Ptr () -> Ptr CChar -> FunPtr (Ptr () -> IO C'apr_status_t) -> Ptr C'apr_thread_t -> IO C'apr_status_t)
c'apr_threadkey_private_get :: Ptr (Ptr ()) -> Ptr C'apr_threadkey_t -> IO C'apr_status_t
c'apr_threadkey_private_set :: Ptr () -> Ptr C'apr_threadkey_t -> IO C'apr_status_t
p'apr_threadkey_private_create :: FunPtr (Ptr (Ptr C'apr_threadkey_t) -> FunPtr (Ptr () -> IO ()) -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_threadkey_private_delete :: Ptr C'apr_threadkey_t -> Ptr C'apr_status_t
p'apr_threadkey_private_get :: FunPtr (Ptr (Ptr ()) -> Ptr C'apr_threadkey_t -> IO C'apr_status_t)
p'apr_threadkey_private_set :: FunPtr (Ptr () -> Ptr C'apr_threadkey_t -> IO C'apr_status_t)
p'apr_threadkey_private_delete :: FunPtr (Ptr C'apr_threadkey_t -> Ptr C'apr_status_t)
c'apr_threadkey_data_get :: Ptr (Ptr ()) -> Ptr CChar -> Ptr C'apr_threadkey_t -> IO C'apr_status_t
c'apr_threadkey_data_set :: Ptr () -> Ptr CChar -> FunPtr (Ptr () -> IO C'apr_status_t) -> Ptr C'apr_threadkey_t -> IO C'apr_status_t
p'apr_threadkey_data_get :: FunPtr (Ptr (Ptr ()) -> Ptr CChar -> Ptr C'apr_threadkey_t -> IO C'apr_status_t)
p'apr_threadkey_data_set :: FunPtr (Ptr () -> Ptr CChar -> FunPtr (Ptr () -> IO C'apr_status_t) -> Ptr C'apr_threadkey_t -> IO C'apr_status_t)
c'apr_procattr_create :: Ptr (Ptr C'apr_procattr_t) -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_procattr_io_set :: Ptr C'apr_procattr_t -> C'apr_int32_t -> C'apr_int32_t -> C'apr_int32_t -> IO C'apr_status_t
p'apr_procattr_create :: FunPtr (Ptr (Ptr C'apr_procattr_t) -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_procattr_child_in_set :: Ptr C'apr_procattr_t -> Ptr C'apr_file_t -> Ptr C'apr_file_t -> IO C'apr_status_t
c'apr_procattr_child_out_set :: Ptr C'apr_procattr_t -> Ptr C'apr_file_t -> Ptr C'apr_file_t -> IO C'apr_status_t
p'apr_procattr_io_set :: FunPtr (Ptr C'apr_procattr_t -> C'apr_int32_t -> C'apr_int32_t -> C'apr_int32_t -> IO C'apr_status_t)
c'apr_procattr_child_err_set :: Ptr C'apr_procattr_t -> Ptr C'apr_file_t -> Ptr C'apr_file_t -> IO C'apr_status_t
p'apr_procattr_child_in_set :: FunPtr (Ptr C'apr_procattr_t -> Ptr C'apr_file_t -> Ptr C'apr_file_t -> IO C'apr_status_t)
c'apr_procattr_dir_set :: Ptr C'apr_procattr_t -> Ptr CChar -> IO C'apr_status_t
p'apr_procattr_child_out_set :: FunPtr (Ptr C'apr_procattr_t -> Ptr C'apr_file_t -> Ptr C'apr_file_t -> IO C'apr_status_t)
c'apr_procattr_cmdtype_set :: Ptr C'apr_procattr_t -> C'apr_cmdtype_e -> IO C'apr_status_t
p'apr_procattr_child_err_set :: FunPtr (Ptr C'apr_procattr_t -> Ptr C'apr_file_t -> Ptr C'apr_file_t -> IO C'apr_status_t)
c'apr_procattr_detach_set :: Ptr C'apr_procattr_t -> C'apr_int32_t -> IO C'apr_status_t
p'apr_procattr_dir_set :: FunPtr (Ptr C'apr_procattr_t -> Ptr CChar -> IO C'apr_status_t)
p'apr_procattr_cmdtype_set :: FunPtr (Ptr C'apr_procattr_t -> C'apr_cmdtype_e -> IO C'apr_status_t)
p'apr_procattr_detach_set :: FunPtr (Ptr C'apr_procattr_t -> C'apr_int32_t -> IO C'apr_status_t)
c'apr_procattr_child_errfn_set :: Ptr C'apr_procattr_t -> C'apr_child_errfn_t -> IO C'apr_status_t
c'apr_procattr_error_check_set :: Ptr C'apr_procattr_t -> C'apr_int32_t -> IO C'apr_status_t
c'apr_procattr_addrspace_set :: Ptr C'apr_procattr_t -> C'apr_int32_t -> IO C'apr_status_t
p'apr_procattr_child_errfn_set :: FunPtr (Ptr C'apr_procattr_t -> C'apr_child_errfn_t -> IO C'apr_status_t)
c'apr_procattr_user_set :: Ptr C'apr_procattr_t -> Ptr CChar -> Ptr CChar -> IO C'apr_status_t
p'apr_procattr_error_check_set :: FunPtr (Ptr C'apr_procattr_t -> C'apr_int32_t -> IO C'apr_status_t)
c'apr_procattr_group_set :: Ptr C'apr_procattr_t -> Ptr CChar -> Ptr C'apr_status_t
p'apr_procattr_addrspace_set :: FunPtr (Ptr C'apr_procattr_t -> C'apr_int32_t -> IO C'apr_status_t)
p'apr_procattr_user_set :: FunPtr (Ptr C'apr_procattr_t -> Ptr CChar -> Ptr CChar -> IO C'apr_status_t)
p'apr_procattr_group_set :: FunPtr (Ptr C'apr_procattr_t -> Ptr CChar -> Ptr C'apr_status_t)
c'apr_proc_fork :: Ptr C'apr_proc_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_proc_fork :: FunPtr (Ptr C'apr_proc_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_proc_create :: Ptr C'apr_proc_t -> Ptr CChar -> Ptr (Ptr CChar) -> Ptr (Ptr CChar) -> Ptr C'apr_procattr_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_proc_wait :: Ptr C'apr_proc_t -> Ptr CInt -> Ptr C'apr_exit_why_e -> C'apr_wait_how_e -> IO C'apr_status_t
c'apr_proc_wait_all_procs :: Ptr C'apr_proc_t -> Ptr CInt -> Ptr C'apr_exit_why_e -> C'apr_wait_how_e -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_proc_create :: FunPtr (Ptr C'apr_proc_t -> Ptr CChar -> Ptr (Ptr CChar) -> Ptr (Ptr CChar) -> Ptr C'apr_procattr_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
p'apr_proc_wait :: FunPtr (Ptr C'apr_proc_t -> Ptr CInt -> Ptr C'apr_exit_why_e -> C'apr_wait_how_e -> IO C'apr_status_t)
p'apr_proc_wait_all_procs :: FunPtr (Ptr C'apr_proc_t -> Ptr CInt -> Ptr C'apr_exit_why_e -> C'apr_wait_how_e -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'APR_PROC_DETACH_FOREGROUND :: (Num a) => a
c'APR_PROC_DETACH_DAEMONIZE :: (Num a) => a
c'apr_proc_detach :: CInt -> IO C'apr_status_t
c'apr_proc_other_child_register :: Ptr C'apr_proc_t -> FunPtr (CInt -> Ptr () -> CInt -> IO ()) -> Ptr () -> Ptr C'apr_file_t -> Ptr C'apr_pool_t -> IO ()
c'apr_proc_other_child_unregister :: Ptr () -> IO ()
p'apr_proc_detach :: FunPtr (CInt -> IO C'apr_status_t)
c'apr_proc_other_child_alert :: Ptr C'apr_proc_t -> CInt -> CInt -> IO C'apr_status_t
p'apr_proc_other_child_register :: FunPtr (Ptr C'apr_proc_t -> FunPtr (CInt -> Ptr () -> CInt -> IO ()) -> Ptr () -> Ptr C'apr_file_t -> Ptr C'apr_pool_t -> IO ())
p'apr_proc_other_child_unregister :: FunPtr (Ptr () -> IO ())
c'apr_proc_other_child_refresh :: Ptr C'apr_other_child_rec_t -> CInt -> IO ()
c'apr_proc_other_child_refresh_all :: CInt -> IO ()
p'apr_proc_other_child_alert :: FunPtr (Ptr C'apr_proc_t -> CInt -> CInt -> IO C'apr_status_t)
c'apr_proc_kill :: Ptr C'apr_proc_t -> CInt -> IO C'apr_status_t
p'apr_proc_other_child_refresh :: FunPtr (Ptr C'apr_other_child_rec_t -> CInt -> IO ())
p'apr_proc_other_child_refresh_all :: FunPtr (CInt -> IO ())
c'apr_pool_note_subprocess :: Ptr C'apr_pool_t -> Ptr C'apr_pool_t -> C'apr_kill_conditions_e -> IO ()
p'apr_proc_kill :: FunPtr (Ptr C'apr_proc_t -> CInt -> IO C'apr_status_t)
p'apr_pool_note_subprocess :: FunPtr (Ptr C'apr_pool_t -> Ptr C'apr_pool_t -> C'apr_kill_conditions_e -> IO ())
c'apr_setup_signal_thread :: IO C'apr_status_t
c'apr_signal_thread :: FunPtr (CInt -> IO CInt) -> IO C'apr_status_t
p'apr_setup_signal_thread :: FunPtr (IO C'apr_status_t)
p'apr_signal_thread :: FunPtr (FunPtr (CInt -> IO CInt) -> IO C'apr_status_t)
c'apr_thread_pool_get :: Ptr C'apr_thread_t -> IO (Ptr C'apr_pool_t)
p'apr_thread_pool_get :: FunPtr (Ptr C'apr_thread_t -> IO (Ptr C'apr_pool_t))
instance Eq C'apr_proc_t
instance Show C'apr_proc_t
instance Storable C'apr_proc_t

module Bindings.APR.Portable
data C'apr_os_file_t
C'apr_os_file_t :: C'apr_os_file_t
data C'apr_os_dir_t
C'apr_os_dir_t :: C'apr_os_dir_t
data C'apr_os_sock_t
C'apr_os_sock_t :: C'apr_os_sock_t
data C'apr_os_proc_mutex_t
C'apr_os_proc_mutex_t :: C'apr_os_proc_mutex_t
data C'apr_os_thread_t
C'apr_os_thread_t :: C'apr_os_thread_t
data C'apr_os_proc_t
C'apr_os_proc_t :: C'apr_os_proc_t
data C'apr_os_threadkey_t
C'apr_os_threadkey_t :: C'apr_os_threadkey_t
data C'apr_os_imp_time_t
C'apr_os_imp_time_t :: C'apr_os_imp_time_t
data C'apr_os_exp_time_t
C'apr_os_exp_time_t :: C'apr_os_exp_time_t
data C'apr_os_dso_handle_t
C'apr_os_dso_handle_t :: C'apr_os_dso_handle_t
data C'apr_os_shm_t
C'apr_os_shm_t :: C'apr_os_shm_t
data C'apr_os_sock_info_t
C'apr_os_sock_info_t :: Ptr C'apr_os_sock_t -> CInt -> CInt -> CInt -> C'apr_os_sock_info_t
c'apr_os_sock_info_t'os_sock :: C'apr_os_sock_info_t -> Ptr C'apr_os_sock_t
c'apr_os_sock_info_t'family :: C'apr_os_sock_info_t -> CInt
c'apr_os_sock_info_t'type :: C'apr_os_sock_info_t -> CInt
c'apr_os_sock_info_t'protocol :: C'apr_os_sock_info_t -> CInt
data C'apr_os_global_mutex_t
C'apr_os_global_mutex_t :: C'apr_os_global_mutex_t
c'apr_os_global_mutex_get :: Ptr C'apr_os_global_mutex_t -> Ptr C'apr_global_mutex_t -> IO C'apr_status_t
c'apr_os_file_get :: Ptr C'apr_os_file_t -> Ptr C'apr_file_t -> IO C'apr_status_t
c'apr_os_dir_get :: Ptr (Ptr C'apr_os_dir_t) -> Ptr C'apr_dir_t -> IO C'apr_status_t
c'apr_os_sock_get :: Ptr C'apr_os_sock_t -> Ptr C'apr_socket_t -> IO C'apr_status_t
p'apr_os_file_get :: FunPtr (Ptr C'apr_os_file_t -> Ptr C'apr_file_t -> IO C'apr_status_t)
c'apr_os_proc_mutex_get :: Ptr C'apr_os_proc_mutex_t -> Ptr C'apr_proc_mutex_t -> IO C'apr_status_t
p'apr_os_dir_get :: FunPtr (Ptr (Ptr C'apr_os_dir_t) -> Ptr C'apr_dir_t -> IO C'apr_status_t)
p'apr_os_sock_get :: FunPtr (Ptr C'apr_os_sock_t -> Ptr C'apr_socket_t -> IO C'apr_status_t)
c'apr_os_exp_time_get :: Ptr (Ptr C'apr_os_exp_time_t) -> Ptr C'apr_time_exp_t -> Ptr C'apr_status_t
c'apr_os_imp_time_get :: Ptr (Ptr C'apr_os_imp_time_t) -> Ptr C'apr_time_t -> Ptr C'apr_status_t
p'apr_os_proc_mutex_get :: FunPtr (Ptr C'apr_os_proc_mutex_t -> Ptr C'apr_proc_mutex_t -> IO C'apr_status_t)
c'apr_os_shm_get :: Ptr C'apr_os_shm_t -> Ptr C'apr_shm_t -> IO C'apr_status_t
p'apr_os_exp_time_get :: FunPtr (Ptr (Ptr C'apr_os_exp_time_t) -> Ptr C'apr_time_exp_t -> Ptr C'apr_status_t)
p'apr_os_imp_time_get :: FunPtr (Ptr (Ptr C'apr_os_imp_time_t) -> Ptr C'apr_time_t -> Ptr C'apr_status_t)
p'apr_os_shm_get :: FunPtr (Ptr C'apr_os_shm_t -> Ptr C'apr_shm_t -> IO C'apr_status_t)
c'apr_os_thread_get :: Ptr (Ptr C'apr_os_thread_t) -> Ptr C'apr_thread_t -> IO C'apr_status_t
c'apr_os_threadkey_get :: Ptr C'apr_os_threadkey_t -> Ptr C'apr_threadkey_t -> IO C'apr_status_t
p'apr_os_thread_get :: FunPtr (Ptr (Ptr C'apr_os_thread_t) -> Ptr C'apr_thread_t -> IO C'apr_status_t)
c'apr_os_thread_put :: Ptr (Ptr C'apr_thread_t) -> Ptr C'apr_os_thread_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_os_threadkey_get :: FunPtr (Ptr C'apr_os_threadkey_t -> Ptr C'apr_threadkey_t -> IO C'apr_status_t)
c'apr_os_threadkey_put :: Ptr (Ptr C'apr_threadkey_t) -> Ptr C'apr_os_threadkey_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_os_thread_put :: FunPtr (Ptr (Ptr C'apr_thread_t) -> Ptr C'apr_os_thread_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
p'apr_os_threadkey_put :: FunPtr (Ptr (Ptr C'apr_threadkey_t) -> Ptr C'apr_os_threadkey_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_os_file_put :: Ptr (Ptr C'apr_file_t) -> Ptr C'apr_os_file_t -> C'apr_int32_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_os_pipe_put :: Ptr (Ptr C'apr_file_t) -> Ptr C'apr_os_file_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_os_pipe_put_ex :: Ptr (Ptr C'apr_file_t) -> Ptr C'apr_os_file_t -> CInt -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_os_file_put :: FunPtr (Ptr (Ptr C'apr_file_t) -> Ptr C'apr_os_file_t -> C'apr_int32_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_os_dir_put :: Ptr (Ptr C'apr_dir_t) -> Ptr C'apr_os_dir_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_os_pipe_put :: FunPtr (Ptr (Ptr C'apr_file_t) -> Ptr C'apr_os_file_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_os_sock_put :: Ptr (Ptr C'apr_socket_t) -> Ptr C'apr_os_sock_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_os_pipe_put_ex :: FunPtr (Ptr (Ptr C'apr_file_t) -> Ptr C'apr_os_file_t -> CInt -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_os_sock_make :: Ptr (Ptr C'apr_socket_t) -> Ptr C'apr_os_sock_info_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_os_dir_put :: FunPtr (Ptr (Ptr C'apr_dir_t) -> Ptr C'apr_os_dir_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
p'apr_os_sock_put :: FunPtr (Ptr (Ptr C'apr_socket_t) -> Ptr C'apr_os_sock_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_os_proc_mutex_put :: Ptr (Ptr C'apr_proc_mutex_t) -> Ptr C'apr_os_proc_mutex_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_os_imp_time_put :: Ptr C'apr_time_t -> Ptr (Ptr C'apr_os_imp_time_t) -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_os_sock_make :: FunPtr (Ptr (Ptr C'apr_socket_t) -> Ptr C'apr_os_sock_info_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_os_exp_time_put :: Ptr C'apr_time_exp_t -> Ptr (Ptr C'apr_os_exp_time_t) -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_os_proc_mutex_put :: FunPtr (Ptr (Ptr C'apr_proc_mutex_t) -> Ptr C'apr_os_proc_mutex_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_os_shm_put :: Ptr (Ptr C'apr_shm_t) -> Ptr C'apr_os_shm_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_os_imp_time_put :: FunPtr (Ptr C'apr_time_t -> Ptr (Ptr C'apr_os_imp_time_t) -> Ptr C'apr_pool_t -> IO C'apr_status_t)
p'apr_os_exp_time_put :: FunPtr (Ptr C'apr_time_exp_t -> Ptr (Ptr C'apr_os_exp_time_t) -> Ptr C'apr_pool_t -> IO C'apr_status_t)
p'apr_os_shm_put :: FunPtr (Ptr (Ptr C'apr_shm_t) -> Ptr C'apr_os_shm_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_os_dso_handle_put :: Ptr (Ptr C'apr_dso_handle_t) -> Ptr C'apr_os_dso_handle_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_os_dso_handle_get :: Ptr (Ptr C'apr_os_dso_handle_t) -> Ptr C'apr_dso_handle_t -> IO C'apr_status_t
p'apr_os_dso_handle_put :: FunPtr (Ptr (Ptr C'apr_dso_handle_t) -> Ptr C'apr_os_dso_handle_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_os_uuid_get :: Ptr CUChar -> IO C'apr_status_t
p'apr_os_dso_handle_get :: FunPtr (Ptr (Ptr C'apr_os_dso_handle_t) -> Ptr C'apr_dso_handle_t -> IO C'apr_status_t)
p'apr_os_uuid_get :: FunPtr (Ptr CUChar -> IO C'apr_status_t)
c'apr_os_default_encoding :: Ptr C'apr_pool_t -> IO (Ptr CChar)
c'apr_os_locale_encoding :: Ptr C'apr_pool_t -> IO (Ptr CChar)
p'apr_os_default_encoding :: FunPtr (Ptr C'apr_pool_t -> IO (Ptr CChar))
p'apr_os_locale_encoding :: FunPtr (Ptr C'apr_pool_t -> IO (Ptr CChar))
instance Eq C'apr_os_sock_info_t
instance Show C'apr_os_sock_info_t
instance Storable C'apr_os_sock_info_t

module Bindings.APR.Random
data C'apr_crypto_hash_t
C'apr_crypto_hash_t :: C'apr_crypto_hash_t
type C'apr_crypto_hash_init_t = FunPtr (Ptr C'apr_crypto_hash_t -> IO ())
type C'apr_crypto_hash_add_t = FunPtr (Ptr C'apr_crypto_hash_t -> Ptr () -> C'apr_size_t -> IO ())
mk'apr_crypto_hash_init_t :: (Ptr C'apr_crypto_hash_t -> IO ()) -> IO C'apr_crypto_hash_init_t
type C'apr_crypto_hash_finish_t = FunPtr (Ptr C'apr_crypto_hash_t -> Ptr CUChar -> IO ())
mk'apr_crypto_hash_add_t :: (Ptr C'apr_crypto_hash_t -> Ptr () -> C'apr_size_t -> IO ()) -> IO C'apr_crypto_hash_add_t
mK'apr_crypto_hash_init_t :: C'apr_crypto_hash_init_t -> (Ptr C'apr_crypto_hash_t -> IO ())
mk'apr_crypto_hash_finish_t :: (Ptr C'apr_crypto_hash_t -> Ptr CUChar -> IO ()) -> IO C'apr_crypto_hash_finish_t
c'apr_crypto_sha256_new :: Ptr C'apr_pool_t -> IO (Ptr C'apr_crypto_hash_t)
mK'apr_crypto_hash_add_t :: C'apr_crypto_hash_add_t -> (Ptr C'apr_crypto_hash_t -> Ptr () -> C'apr_size_t -> IO ())
mK'apr_crypto_hash_finish_t :: C'apr_crypto_hash_finish_t -> (Ptr C'apr_crypto_hash_t -> Ptr CUChar -> IO ())
data C'apr_random_t
C'apr_random_t :: C'apr_random_t
p'apr_crypto_sha256_new :: FunPtr (Ptr C'apr_pool_t -> IO (Ptr C'apr_crypto_hash_t))
c'apr_random_init :: Ptr C'apr_random_t -> Ptr C'apr_pool_t -> Ptr C'apr_crypto_hash_t -> Ptr C'apr_crypto_hash_t -> Ptr C'apr_crypto_hash_t -> IO ()
c'apr_random_standard_new :: Ptr C'apr_pool_t -> IO (Ptr C'apr_random_t)
c'apr_random_add_entropy :: Ptr C'apr_random_t -> Ptr () -> C'apr_size_t -> IO ()
p'apr_random_init :: FunPtr (Ptr C'apr_random_t -> Ptr C'apr_pool_t -> Ptr C'apr_crypto_hash_t -> Ptr C'apr_crypto_hash_t -> Ptr C'apr_crypto_hash_t -> IO ())
p'apr_random_standard_new :: FunPtr (Ptr C'apr_pool_t -> IO (Ptr C'apr_random_t))
c'apr_random_insecure_bytes :: Ptr C'apr_random_t -> Ptr () -> C'apr_size_t -> IO C'apr_status_t
p'apr_random_add_entropy :: FunPtr (Ptr C'apr_random_t -> Ptr () -> C'apr_size_t -> IO ())
c'apr_random_secure_bytes :: Ptr C'apr_random_t -> Ptr () -> C'apr_size_t -> IO C'apr_status_t
c'apr_random_barrier :: Ptr C'apr_random_t -> IO ()
p'apr_random_insecure_bytes :: FunPtr (Ptr C'apr_random_t -> Ptr () -> C'apr_size_t -> IO C'apr_status_t)
c'apr_random_secure_ready :: Ptr C'apr_random_t -> IO C'apr_status_t
p'apr_random_secure_bytes :: FunPtr (Ptr C'apr_random_t -> Ptr () -> C'apr_size_t -> IO C'apr_status_t)
p'apr_random_barrier :: FunPtr (Ptr C'apr_random_t -> IO ())
c'apr_random_insecure_ready :: Ptr C'apr_random_t -> IO C'apr_status_t
c'apr_random_after_fork :: Ptr C'apr_proc_t -> IO ()
p'apr_random_secure_ready :: FunPtr (Ptr C'apr_random_t -> IO C'apr_status_t)
p'apr_random_insecure_ready :: FunPtr (Ptr C'apr_random_t -> IO C'apr_status_t)
p'apr_random_after_fork :: FunPtr (Ptr C'apr_proc_t -> IO ())

module Bindings.APR.Signal
type C'apr_sigfunc_t = FunPtr (CInt -> IO ())
mk'apr_sigfunc_t :: (CInt -> IO ()) -> IO C'apr_sigfunc_t
c'apr_signal :: CInt -> C'apr_sigfunc_t -> IO C'apr_sigfunc_t
mK'apr_sigfunc_t :: C'apr_sigfunc_t -> (CInt -> IO ())
c'apr_signal_description_get :: CInt -> IO (Ptr CChar)
c'apr_signal_init :: Ptr C'apr_pool_t -> IO ()
c'apr_signal_block :: CInt -> IO C'apr_status_t
p'apr_signal_description_get :: FunPtr (CInt -> IO (Ptr CChar))
c'apr_signal_unblock :: CInt -> IO C'apr_status_t
p'apr_signal_init :: FunPtr (Ptr C'apr_pool_t -> IO ())
p'apr_signal_block :: FunPtr (CInt -> IO C'apr_status_t)
p'apr_signal_unblock :: FunPtr (CInt -> IO C'apr_status_t)

module Bindings.APR.Strings
c'apr_strnatcmp :: Ptr CChar -> Ptr CChar -> IO CInt
c'apr_strnatcasecmp :: Ptr CChar -> Ptr CChar -> IO CInt
p'apr_strnatcmp :: FunPtr (Ptr CChar -> Ptr CChar -> IO CInt)
c'apr_pstrdup :: Ptr C'apr_pool_t -> Ptr CChar -> IO (Ptr CChar)
p'apr_strnatcasecmp :: FunPtr (Ptr CChar -> Ptr CChar -> IO CInt)
c'apr_pstrmemdup :: Ptr C'apr_pool_t -> Ptr CChar -> C'apr_size_t -> IO (Ptr CChar)
p'apr_pstrdup :: FunPtr (Ptr C'apr_pool_t -> Ptr CChar -> IO (Ptr CChar))
c'apr_pstrndup :: Ptr C'apr_pool_t -> Ptr CChar -> C'apr_size_t -> IO (Ptr CChar)
c'apr_pmemdup :: Ptr C'apr_pool_t -> Ptr () -> C'apr_size_t -> IO (Ptr ())
p'apr_pstrmemdup :: FunPtr (Ptr C'apr_pool_t -> Ptr CChar -> C'apr_size_t -> IO (Ptr CChar))
p'apr_pstrndup :: FunPtr (Ptr C'apr_pool_t -> Ptr CChar -> C'apr_size_t -> IO (Ptr CChar))
p'apr_pmemdup :: FunPtr (Ptr C'apr_pool_t -> Ptr () -> C'apr_size_t -> IO (Ptr ()))
c'apr_pstrcatv :: Ptr C'apr_pool_t -> Ptr C'iovec -> C'apr_size_t -> Ptr C'apr_size_t -> IO (Ptr CChar)
p'apr_pstrcatv :: FunPtr (Ptr C'apr_pool_t -> Ptr C'iovec -> C'apr_size_t -> Ptr C'apr_size_t -> IO (Ptr CChar))
c'apr_cpystrn :: Ptr CChar -> Ptr CChar -> C'apr_size_t -> IO (Ptr CChar)
c'apr_collapse_spaces :: Ptr CChar -> Ptr CChar -> IO (Ptr CChar)
p'apr_cpystrn :: FunPtr (Ptr CChar -> Ptr CChar -> C'apr_size_t -> IO (Ptr CChar))
c'apr_tokenize_to_argv :: Ptr CChar -> Ptr (Ptr (Ptr CChar)) -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_collapse_spaces :: FunPtr (Ptr CChar -> Ptr CChar -> IO (Ptr CChar))
c'apr_strtok :: Ptr CChar -> Ptr CChar -> Ptr (Ptr CChar) -> IO (Ptr CChar)
p'apr_tokenize_to_argv :: FunPtr (Ptr CChar -> Ptr (Ptr (Ptr CChar)) -> Ptr C'apr_pool_t -> IO C'apr_status_t)
p'apr_strtok :: FunPtr (Ptr CChar -> Ptr CChar -> Ptr (Ptr CChar) -> IO (Ptr CChar))
c'apr_itoa :: Ptr C'apr_pool_t -> CInt -> IO (Ptr CChar)
c'apr_ltoa :: Ptr C'apr_pool_t -> CLong -> IO (Ptr CChar)
c'apr_off_t_toa :: Ptr C'apr_pool_t -> C'apr_off_t -> IO (Ptr CChar)
p'apr_itoa :: FunPtr (Ptr C'apr_pool_t -> CInt -> IO (Ptr CChar))
p'apr_ltoa :: FunPtr (Ptr C'apr_pool_t -> CLong -> IO (Ptr CChar))
c'apr_strtoff :: Ptr C'apr_off_t -> Ptr CChar -> Ptr (Ptr CChar) -> CInt -> IO C'apr_status_t
c'apr_strtoi64 :: Ptr CChar -> Ptr (Ptr CChar) -> CInt -> IO C'apr_int64_t
p'apr_off_t_toa :: FunPtr (Ptr C'apr_pool_t -> C'apr_off_t -> IO (Ptr CChar))
c'apr_atoi64 :: Ptr CChar -> IO C'apr_int64_t
p'apr_strtoff :: FunPtr (Ptr C'apr_off_t -> Ptr CChar -> Ptr (Ptr CChar) -> CInt -> IO C'apr_status_t)
c'apr_strfsize :: C'apr_off_t -> Ptr CChar -> IO (Ptr CChar)
p'apr_strtoi64 :: FunPtr (Ptr CChar -> Ptr (Ptr CChar) -> CInt -> IO C'apr_int64_t)
p'apr_atoi64 :: FunPtr (Ptr CChar -> IO C'apr_int64_t)
p'apr_strfsize :: FunPtr (C'apr_off_t -> Ptr CChar -> IO (Ptr CChar))
