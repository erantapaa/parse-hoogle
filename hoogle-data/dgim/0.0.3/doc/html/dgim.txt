-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Implementation of DGIM algorithm
--   
@package dgim
@version 0.0.3

module Data.Stream.Algorithms.DGIM.Internal

-- | The core data structure which contains the current state as well as
--   the parameters needed for operation.
data DGIM a
DGIM :: !(a -> Bool) -> ![Bucket] -> !Integer -> !Integer -> !Integer -> DGIM a
dgimPredicate :: DGIM a -> !(a -> Bool)
dgimBuckets :: DGIM a -> ![Bucket]
dgimMaxSameBucket :: DGIM a -> !Integer
dgimCliff :: DGIM a -> !Integer
dgimCurrentIdx :: DGIM a -> !Integer

-- | Create a new DGIM structure given: - Required accuracy - Size of the
--   stream to operate on - Predicate to determine if an element should be
--   counted
mkDGIM :: (RealFrac a, Eq b) => a -> Integer -> (b -> Bool) -> DGIM b

-- | Insert an element into the stream
insert :: a -> DGIM a -> DGIM a

-- | Insert an element which does not count
insert_ :: DGIM a -> DGIM a

-- | Query how many elements have been counted since a time-stamp
querySince :: DGIM a -> Integer -> Integer

-- | Query how many elements have been counted in the remembered suffix of
--   the stream
queryAll :: DGIM a -> Integer

-- | Query how many elements in the given number of recent entries have
--   been counted.
queryLen :: DGIM a -> Integer -> Integer
instance Show Bucket
instance Show (DGIM a)

module Data.Stream.Algorithms.DGIM

-- | The core data structure which contains the current state as well as
--   the parameters needed for operation.
data DGIM a

-- | Create a new DGIM structure given: - Required accuracy - Size of the
--   stream to operate on - Predicate to determine if an element should be
--   counted
mkDGIM :: (RealFrac a, Eq b) => a -> Integer -> (b -> Bool) -> DGIM b

-- | Insert an element into the stream
insert :: a -> DGIM a -> DGIM a

-- | Insert an element which does not count
insert_ :: DGIM a -> DGIM a

-- | Query how many elements have been counted since a time-stamp
querySince :: DGIM a -> Integer -> Integer

-- | Query how many elements have been counted in the remembered suffix of
--   the stream
queryAll :: DGIM a -> Integer

-- | Query how many elements in the given number of recent entries have
--   been counted.
queryLen :: DGIM a -> Integer -> Integer
