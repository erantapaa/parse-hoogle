-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


@package streaming-histogram
@version 0.1.0.0

module Numeric.StreamingHistogram.Internal
shrink :: [(Double, Int)] -> [(Double, Int)]


-- | A very inefficient implementation of lossy online histograms based on
--   the following paper:
--   
--   <ul>
--   <li>A Streaming Parallel Decision Tree Algorithm by Ben-Haim and
--   Tom-Tov:
--   <a>http://www.jmlr.org/papers/volume11/ben-haim10a/ben-haim10a.pdf</a></li>
--   </ul>
--   
--   <b>NB</b> This library is very experimental and inefficient. Numerical
--   stability has not been tested (yet).
module Numeric.StreamingHistogram

-- | Creates an empty histogram to be updated with <a>update</a>
empty :: Int -> Hist

-- | Adds a single <tt>value</tt> to the histogram.
update :: Double -> Hist -> Hist
data Hist
Hist :: Int -> Map Double Int -> Hist
nBins :: Hist -> Int
histData :: Hist -> Map Double Int

-- | Merges two histograms. Returns Nothing if they don't have the same
--   number of values. TODO: Use more efficient algorithm.
merge :: Hist -> Hist -> Maybe Hist

-- | Estimates how many points lie in the interval [-infinity, b].
sum :: Double -> Hist -> Double
instance Show Hist
instance Eq Hist
