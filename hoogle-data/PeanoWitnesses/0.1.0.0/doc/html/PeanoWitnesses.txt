-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | GADT type witnesses for Peano-style natural numbers.
--   
@package PeanoWitnesses
@version 0.1.0.0


-- | This module defines GADT type witnesses for Peano-style natural
--   numbers.
module Data.Numeric.Witness.Peano
data Zero
data Succ n

-- | Natural numbers paired with type-level natural numbers. These terms
--   act as witnesses of a particular natural.
data Natural n
Zero :: Natural Zero
Succ :: Natural n -> Natural (Succ n)

-- | Given a context expecting a particular natural, we can manufacture it
--   from the aether.
class ReifyNatural n
reifyNatural :: ReifyNatural n => Natural n

-- | Type level less-than-or-equal test.

-- | This constraint is a more succinct way of requiring that <tt>a</tt> be
--   less than or equal to <tt>b</tt>.
type (<=) a b = LessThanOrEqual a b ~ True

-- | Type level less-than test.

-- | This constraint is a more succinct way of requiring that <tt>a</tt> be
--   less than <tt>b</tt>.
type (<) a b = LessThan a b ~ True

-- | Type level addition.

-- | Type level subtraction.

-- | Addition of naturals at the term and type levels simultaneously.
plus :: Natural a -> Natural b -> Natural (a + b)

-- | Subtraction of naturals at the term and type level simultaneously.
--   Note that it is statically prohibited to subtract a number larger than
--   the number from which it is being subtracted.
minus :: b <= a => Natural a -> Natural b -> Natural (a - b)
instance Show (Natural n)
instance ReifyNatural n => ReifyNatural (Succ n)
instance ReifyNatural Zero
