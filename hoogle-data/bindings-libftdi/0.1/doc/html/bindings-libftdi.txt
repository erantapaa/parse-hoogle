-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Low level bindings to libftdi.
--   
--   <a>Project description</a>
@package bindings-libftdi
@version 0.1


-- | <a>http://libusb.sourceforge.net/api-1.0/group__dev.html</a>
module Bindings.Libftdi
c'FTDI_DEFAULT_EEPROM_SIZE :: (Num a) => a
type C'ftdi_chip_type = CUInt
type C'ftdi_parity_type = CUInt
type C'ftdi_stopbits_type = CUInt
type C'ftdi_bits_type = CUInt
type C'ftdi_break_type = CUInt
type C'ftdi_mpsse_mode = CUInt
type C'ftdi_interface = CUInt
c'MPSSE_WRITE_NEG :: (Num a) => a
c'MPSSE_BITMODE :: (Num a) => a
c'MPSSE_READ_NEG :: (Num a) => a
c'MPSSE_LSB :: (Num a) => a
c'MPSSE_DO_WRITE :: (Num a) => a
c'MPSSE_DO_READ :: (Num a) => a
c'MPSSE_WRITE_TMS :: (Num a) => a
c'SET_BITS_LOW :: (Num a) => a
c'SET_BITS_HIGH :: (Num a) => a
c'GET_BITS_LOW :: (Num a) => a
c'GET_BITS_HIGH :: (Num a) => a
c'LOOPBACK_START :: (Num a) => a
c'LOOPBACK_END :: (Num a) => a
c'TCK_DIVISOR :: (Num a) => a
c'SEND_IMMEDIATE :: (Num a) => a
c'WAIT_ON_HIGH :: (Num a) => a
c'WAIT_ON_LOW :: (Num a) => a
c'READ_SHORT :: (Num a) => a
c'READ_EXTENDED :: (Num a) => a
c'WRITE_SHORT :: (Num a) => a
c'WRITE_EXTENDED :: (Num a) => a
c'SIO_RESET :: (Num a) => a
c'SIO_MODEM_CTRL :: (Num a) => a
c'SIO_SET_FLOW_CTRL :: (Num a) => a
c'SIO_SET_BAUD_RATE :: (Num a) => a
c'SIO_SET_DATA :: (Num a) => a
c'FTDI_DEVICE_OUT_REQTYPE :: (Num a) => a
c'FTDI_DEVICE_IN_REQTYPE :: (Num a) => a
c'SIO_RESET_REQUEST :: (Num a) => a
c'SIO_SET_BAUDRATE_REQUEST :: (Num a) => a
c'SIO_SET_DATA_REQUEST :: (Num a) => a
c'SIO_SET_FLOW_CTRL_REQUEST :: (Num a) => a
c'SIO_SET_MODEM_CTRL_REQUEST :: (Num a) => a
c'SIO_POLL_MODEM_STATUS_REQUEST :: (Num a) => a
c'SIO_SET_EVENT_CHAR_REQUEST :: (Num a) => a
c'SIO_SET_ERROR_CHAR_REQUEST :: (Num a) => a
c'SIO_SET_LATENCY_TIMER_REQUEST :: (Num a) => a
c'SIO_GET_LATENCY_TIMER_REQUEST :: (Num a) => a
c'SIO_SET_BITMODE_REQUEST :: (Num a) => a
c'SIO_READ_PINS_REQUEST :: (Num a) => a
c'SIO_READ_EEPROM_REQUEST :: (Num a) => a
c'SIO_WRITE_EEPROM_REQUEST :: (Num a) => a
c'SIO_ERASE_EEPROM_REQUEST :: (Num a) => a
c'SIO_RESET_SIO :: (Num a) => a
c'SIO_RESET_PURGE_RX :: (Num a) => a
c'SIO_RESET_PURGE_TX :: (Num a) => a
c'SIO_DISABLE_FLOW_CTRL :: (Num a) => a
c'SIO_RTS_CTS_HS :: (Num a) => a
c'SIO_DTR_DSR_HS :: (Num a) => a
c'SIO_XON_XOFF_HS :: (Num a) => a
c'SIO_SET_DTR_MASK :: (Num a) => a
c'SIO_SET_DTR_HIGH :: (Num a) => a
c'SIO_SET_DTR_LOW :: (Num a) => a
c'SIO_SET_RTS_MASK :: (Num a) => a
c'SIO_SET_RTS_HIGH :: (Num a) => a
c'SIO_SET_RTS_LOW :: (Num a) => a
c'FTDI_URB_USERCONTEXT_COOKIE :: Ptr a
data C'usb_dev_handle
C'usb_dev_handle :: C'usb_dev_handle
data C'ftdi_context
C'ftdi_context :: Ptr C'usb_dev_handle -> CInt -> CInt -> C'ftdi_chip_type -> CInt -> CUChar -> Ptr CUChar -> CUInt -> CUInt -> CUInt -> CUInt -> CInt -> CUChar -> CInt -> Ptr CChar -> Ptr CChar -> CUInt -> C'ftdi_context
c'ftdi_context'usb_dev :: C'ftdi_context -> Ptr C'usb_dev_handle
c'ftdi_context'usb_read_timeout :: C'ftdi_context -> CInt
c'ftdi_context'usb_write_timeout :: C'ftdi_context -> CInt
c'ftdi_context'type :: C'ftdi_context -> C'ftdi_chip_type
c'ftdi_context'baudrate :: C'ftdi_context -> CInt
c'ftdi_context'bitbang_enabled :: C'ftdi_context -> CUChar
c'ftdi_context'readbuffer :: C'ftdi_context -> Ptr CUChar
c'ftdi_context'readbuffer_offset :: C'ftdi_context -> CUInt
c'ftdi_context'readbuffer_remaining :: C'ftdi_context -> CUInt
c'ftdi_context'readbuffer_chunksize :: C'ftdi_context -> CUInt
c'ftdi_context'writebuffer_chunksize :: C'ftdi_context -> CUInt
c'ftdi_context'in_ep :: C'ftdi_context -> CInt
c'ftdi_context'bitbang_mode :: C'ftdi_context -> CUChar
c'ftdi_context'eeprom_size :: C'ftdi_context -> CInt
c'ftdi_context'error_str :: C'ftdi_context -> Ptr CChar
c'ftdi_context'async_usb_buffer :: C'ftdi_context -> Ptr CChar
c'ftdi_context'async_usb_buffer_size :: C'ftdi_context -> CUInt
data C'usb_device
C'usb_device :: C'usb_device
data C'ftdi_device_list
C'ftdi_device_list :: Ptr C'ftdi_device_list -> Ptr C'usb_device -> C'ftdi_device_list
c'ftdi_device_list'next :: C'ftdi_device_list -> Ptr C'ftdi_device_list
c'ftdi_device_list'dev :: C'ftdi_device_list -> Ptr C'usb_device
data C'ftdi_eeprom
C'ftdi_eeprom :: CInt -> CInt -> CInt -> CInt -> CInt -> CInt -> CInt -> CInt -> CInt -> CInt -> CInt -> CInt -> Ptr CChar -> Ptr CChar -> Ptr CChar -> CInt -> C'ftdi_eeprom
c'ftdi_eeprom'vendor_id :: C'ftdi_eeprom -> CInt
c'ftdi_eeprom'product_id :: C'ftdi_eeprom -> CInt
c'ftdi_eeprom'self_powered :: C'ftdi_eeprom -> CInt
c'ftdi_eeprom'remote_wakeup :: C'ftdi_eeprom -> CInt
c'ftdi_eeprom'BM_type_chip :: C'ftdi_eeprom -> CInt
c'ftdi_eeprom'in_is_isochronous :: C'ftdi_eeprom -> CInt
c'ftdi_eeprom'out_is_isochronous :: C'ftdi_eeprom -> CInt
c'ftdi_eeprom'suspend_pull_downs :: C'ftdi_eeprom -> CInt
c'ftdi_eeprom'use_serial :: C'ftdi_eeprom -> CInt
c'ftdi_eeprom'change_usb_version :: C'ftdi_eeprom -> CInt
c'ftdi_eeprom'usb_version :: C'ftdi_eeprom -> CInt
c'ftdi_eeprom'max_power :: C'ftdi_eeprom -> CInt
c'ftdi_eeprom'manufacturer :: C'ftdi_eeprom -> Ptr CChar
c'ftdi_eeprom'product :: C'ftdi_eeprom -> Ptr CChar
c'ftdi_eeprom'serial :: C'ftdi_eeprom -> Ptr CChar
c'ftdi_eeprom'size :: C'ftdi_eeprom -> CInt
c'ftdi_init :: Ptr C'ftdi_context -> IO CInt
c'ftdi_new :: IO (Ptr C'ftdi_context)
p'ftdi_init :: FunPtr (Ptr C'ftdi_context -> IO CInt)
c'ftdi_set_interface :: Ptr C'ftdi_context -> C'ftdi_interface -> IO CInt
c'ftdi_deinit :: Ptr C'ftdi_context -> IO ()
p'ftdi_new :: FunPtr (IO (Ptr C'ftdi_context))
c'ftdi_free :: Ptr C'ftdi_context -> IO ()
p'ftdi_set_interface :: FunPtr (Ptr C'ftdi_context -> C'ftdi_interface -> IO CInt)
p'ftdi_deinit :: FunPtr (Ptr C'ftdi_context -> IO ())
c'ftdi_set_usbdev :: Ptr C'ftdi_context -> Ptr C'usb_dev_handle -> IO ()
p'ftdi_free :: FunPtr (Ptr C'ftdi_context -> IO ())
c'ftdi_usb_find_all :: Ptr C'ftdi_context -> Ptr (Ptr C'ftdi_device_list) -> CInt -> CInt -> IO CInt
c'ftdi_list_free :: Ptr (Ptr C'ftdi_device_list) -> IO ()
p'ftdi_set_usbdev :: FunPtr (Ptr C'ftdi_context -> Ptr C'usb_dev_handle -> IO ())
c'ftdi_list_free2 :: Ptr C'ftdi_device_list -> IO ()
p'ftdi_usb_find_all :: FunPtr (Ptr C'ftdi_context -> Ptr (Ptr C'ftdi_device_list) -> CInt -> CInt -> IO CInt)
p'ftdi_list_free :: FunPtr (Ptr (Ptr C'ftdi_device_list) -> IO ())
c'ftdi_usb_get_strings :: Ptr C'ftdi_context -> Ptr C'usb_device -> Ptr CChar -> CInt -> Ptr CChar -> CInt -> Ptr CChar -> CInt -> IO CInt
p'ftdi_list_free2 :: FunPtr (Ptr C'ftdi_device_list -> IO ())
c'ftdi_usb_open :: Ptr C'ftdi_context -> CInt -> CInt -> IO CInt
c'ftdi_usb_open_desc :: Ptr C'ftdi_context -> CInt -> CInt -> Ptr CChar -> Ptr CChar -> IO CInt
p'ftdi_usb_get_strings :: FunPtr (Ptr C'ftdi_context -> Ptr C'usb_device -> Ptr CChar -> CInt -> Ptr CChar -> CInt -> Ptr CChar -> CInt -> IO CInt)
c'ftdi_usb_open_dev :: Ptr C'ftdi_context -> Ptr C'usb_device -> IO CInt
p'ftdi_usb_open :: FunPtr (Ptr C'ftdi_context -> CInt -> CInt -> IO CInt)
c'ftdi_usb_close :: Ptr C'ftdi_context -> IO CInt
p'ftdi_usb_open_desc :: FunPtr (Ptr C'ftdi_context -> CInt -> CInt -> Ptr CChar -> Ptr CChar -> IO CInt)
c'ftdi_usb_reset :: Ptr C'ftdi_context -> IO CInt
p'ftdi_usb_open_dev :: FunPtr (Ptr C'ftdi_context -> Ptr C'usb_device -> IO CInt)
c'ftdi_usb_purge_rx_buffer :: Ptr C'ftdi_context -> IO CInt
p'ftdi_usb_close :: FunPtr (Ptr C'ftdi_context -> IO CInt)
c'ftdi_usb_purge_tx_buffer :: Ptr C'ftdi_context -> IO CInt
p'ftdi_usb_reset :: FunPtr (Ptr C'ftdi_context -> IO CInt)
c'ftdi_usb_purge_buffers :: Ptr C'ftdi_context -> IO CInt
p'ftdi_usb_purge_rx_buffer :: FunPtr (Ptr C'ftdi_context -> IO CInt)
c'ftdi_set_baudrate :: Ptr C'ftdi_context -> CInt -> IO CInt
p'ftdi_usb_purge_tx_buffer :: FunPtr (Ptr C'ftdi_context -> IO CInt)
p'ftdi_usb_purge_buffers :: FunPtr (Ptr C'ftdi_context -> IO CInt)
c'ftdi_set_line_property :: Ptr C'ftdi_context -> C'ftdi_bits_type -> C'ftdi_stopbits_type -> C'ftdi_parity_type -> IO CInt
p'ftdi_set_baudrate :: FunPtr (Ptr C'ftdi_context -> CInt -> IO CInt)
c'ftdi_set_line_property2 :: Ptr C'ftdi_context -> C'ftdi_bits_type -> C'ftdi_stopbits_type -> C'ftdi_parity_type -> C'ftdi_break_type -> IO CInt
c'ftdi_read_data :: Ptr C'ftdi_context -> Ptr CUChar -> CInt -> IO CInt
p'ftdi_set_line_property :: FunPtr (Ptr C'ftdi_context -> C'ftdi_bits_type -> C'ftdi_stopbits_type -> C'ftdi_parity_type -> IO CInt)
c'ftdi_read_data_set_chunksize :: Ptr C'ftdi_context -> CUInt -> IO CInt
p'ftdi_set_line_property2 :: FunPtr (Ptr C'ftdi_context -> C'ftdi_bits_type -> C'ftdi_stopbits_type -> C'ftdi_parity_type -> C'ftdi_break_type -> IO CInt)
c'ftdi_read_data_get_chunksize :: Ptr C'ftdi_context -> Ptr CUInt -> IO CInt
p'ftdi_read_data :: FunPtr (Ptr C'ftdi_context -> Ptr CUChar -> CInt -> IO CInt)
p'ftdi_read_data_set_chunksize :: FunPtr (Ptr C'ftdi_context -> CUInt -> IO CInt)
c'ftdi_write_data :: Ptr C'ftdi_context -> Ptr CUChar -> CUInt -> IO CInt
c'ftdi_write_data_set_chunksize :: Ptr C'ftdi_context -> CUInt -> IO CInt
p'ftdi_read_data_get_chunksize :: FunPtr (Ptr C'ftdi_context -> Ptr CUInt -> IO CInt)
c'ftdi_write_data_get_chunksize :: Ptr C'ftdi_context -> Ptr CUInt -> IO CInt
p'ftdi_write_data :: FunPtr (Ptr C'ftdi_context -> Ptr CUChar -> CUInt -> IO CInt)
p'ftdi_write_data_set_chunksize :: FunPtr (Ptr C'ftdi_context -> CUInt -> IO CInt)
c'ftdi_write_data_async :: Ptr C'ftdi_context -> Ptr CUChar -> CInt -> IO CInt
c'ftdi_async_complete :: Ptr C'ftdi_context -> CInt -> IO ()
p'ftdi_write_data_get_chunksize :: FunPtr (Ptr C'ftdi_context -> Ptr CUInt -> IO CInt)
c'ftdi_enable_bitbang :: Ptr C'ftdi_context -> CUChar -> IO CInt
p'ftdi_write_data_async :: FunPtr (Ptr C'ftdi_context -> Ptr CUChar -> CInt -> IO CInt)
c'ftdi_disable_bitbang :: Ptr C'ftdi_context -> IO CInt
p'ftdi_async_complete :: FunPtr (Ptr C'ftdi_context -> CInt -> IO ())
p'ftdi_enable_bitbang :: FunPtr (Ptr C'ftdi_context -> CUChar -> IO CInt)
c'ftdi_set_bitmode :: Ptr C'ftdi_context -> CUChar -> CUChar -> IO CInt
p'ftdi_disable_bitbang :: FunPtr (Ptr C'ftdi_context -> IO CInt)
c'ftdi_read_pins :: Ptr C'ftdi_context -> CUChar -> IO CInt
c'ftdi_set_latency_timer :: Ptr C'ftdi_context -> CUChar -> IO CInt
p'ftdi_set_bitmode :: FunPtr (Ptr C'ftdi_context -> CUChar -> CUChar -> IO CInt)
c'ftdi_get_latency_timer :: Ptr C'ftdi_context -> Ptr CUChar -> IO CInt
p'ftdi_read_pins :: FunPtr (Ptr C'ftdi_context -> CUChar -> IO CInt)
c'ftdi_poll_modem_status :: Ptr C'ftdi_context -> Ptr CShort -> IO CInt
p'ftdi_set_latency_timer :: FunPtr (Ptr C'ftdi_context -> CUChar -> IO CInt)
c'ftdi_setflowctrl :: Ptr C'ftdi_context -> CInt -> IO CInt
p'ftdi_get_latency_timer :: FunPtr (Ptr C'ftdi_context -> Ptr CUChar -> IO CInt)
c'ftdi_setdtr_rts :: Ptr C'ftdi_context -> CInt -> CInt -> IO CInt
p'ftdi_poll_modem_status :: FunPtr (Ptr C'ftdi_context -> Ptr CShort -> IO CInt)
c'ftdi_setdtr :: Ptr C'ftdi_context -> CInt -> IO CInt
p'ftdi_setflowctrl :: FunPtr (Ptr C'ftdi_context -> CInt -> IO CInt)
c'ftdi_setrts :: Ptr C'ftdi_context -> CInt -> IO CInt
p'ftdi_setdtr_rts :: FunPtr (Ptr C'ftdi_context -> CInt -> CInt -> IO CInt)
p'ftdi_setdtr :: FunPtr (Ptr C'ftdi_context -> CInt -> IO CInt)
c'ftdi_set_event_char :: Ptr C'ftdi_context -> CUChar -> CUChar -> IO CInt
p'ftdi_setrts :: FunPtr (Ptr C'ftdi_context -> CInt -> IO CInt)
c'ftdi_set_error_char :: Ptr C'ftdi_context -> CUChar -> CUChar -> IO CInt
c'ftdi_eeprom_setsize :: Ptr C'ftdi_context -> Ptr C'ftdi_eeprom -> CInt -> IO ()
p'ftdi_set_event_char :: FunPtr (Ptr C'ftdi_context -> CUChar -> CUChar -> IO CInt)
c'ftdi_eeprom_initdefaults :: Ptr C'ftdi_eeprom -> IO ()
p'ftdi_set_error_char :: FunPtr (Ptr C'ftdi_context -> CUChar -> CUChar -> IO CInt)
c'ftdi_eeprom_build :: Ptr C'ftdi_eeprom -> Ptr CUChar -> IO CInt
p'ftdi_eeprom_setsize :: FunPtr (Ptr C'ftdi_context -> Ptr C'ftdi_eeprom -> CInt -> IO ())
p'ftdi_eeprom_initdefaults :: FunPtr (Ptr C'ftdi_eeprom -> IO ())
c'ftdi_eeprom_decode :: Ptr C'ftdi_eeprom -> Ptr CUChar -> CInt -> IO CInt
c'ftdi_read_eeprom :: Ptr C'ftdi_context -> Ptr CUChar -> IO CInt
p'ftdi_eeprom_build :: FunPtr (Ptr C'ftdi_eeprom -> Ptr CUChar -> IO CInt)
c'ftdi_read_chipid :: Ptr C'ftdi_context -> Ptr CUInt -> IO CInt
p'ftdi_eeprom_decode :: FunPtr (Ptr C'ftdi_eeprom -> Ptr CUChar -> CInt -> IO CInt)
c'ftdi_read_eeprom_getsize :: Ptr C'ftdi_context -> Ptr CUChar -> CInt -> IO CInt
p'ftdi_read_eeprom :: FunPtr (Ptr C'ftdi_context -> Ptr CUChar -> IO CInt)
c'ftdi_write_eeprom :: Ptr C'ftdi_context -> Ptr CUChar -> IO CInt
p'ftdi_read_chipid :: FunPtr (Ptr C'ftdi_context -> Ptr CUInt -> IO CInt)
c'ftdi_erase_eeprom :: Ptr C'ftdi_context -> IO CInt
p'ftdi_read_eeprom_getsize :: FunPtr (Ptr C'ftdi_context -> Ptr CUChar -> CInt -> IO CInt)
c'ftdi_get_error_string :: Ptr C'ftdi_context -> IO (Ptr CChar)
p'ftdi_write_eeprom :: FunPtr (Ptr C'ftdi_context -> Ptr CUChar -> IO CInt)
p'ftdi_erase_eeprom :: FunPtr (Ptr C'ftdi_context -> IO CInt)
p'ftdi_get_error_string :: FunPtr (Ptr C'ftdi_context -> IO (Ptr CChar))
instance Eq C'ftdi_eeprom
instance Show C'ftdi_eeprom
instance Eq C'ftdi_device_list
instance Show C'ftdi_device_list
instance Eq C'ftdi_context
instance Show C'ftdi_context
instance Storable C'ftdi_eeprom
instance Storable C'ftdi_device_list
instance Storable C'ftdi_context
