-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Simply interfacing the parallel port on linux
--   
--   This is a simple library that lets you read and write pins on the
--   parallel port. It is mainly intended for controlling and regulating
--   hardware.
@package parport
@version 0.0.0


-- | Interfacing the parallel port (currently only implemented for linux).
--   This library is supposed to be thread-safe.
module System.Hardware.Parport

-- | The type of a claimed parallel port. Internally it holds an
--   <a>MVar</a> for threading.
data PP

-- | Description of the data-direction for the pins of the data register
data DD
Input :: DD
Output :: DD

-- | <tt>claim "/dev/parport0"</tt> claims the parallel port exclusively
--   and returns a handle.
claim :: String -> IO PP

-- | Release a previously claimed parport.
release :: PP -> IO ()

-- | <tt>writePin pp i b</tt> sets or clears pin i on pp, depending on the
--   value of b.
writePin :: PP -> Int -> Bool -> IO ()

-- | <tt>writePins pp l</tt> is equal to <tt>sequence (map ((i, b) -&gt;
--   writePin pp i b) l)</tt> but it is faster.
writePins :: PP -> [(Int, Bool)] -> IO ()

-- | <tt>readPin pp i</tt> reads the value of pin i on pp and returns it in
--   the IO monad.
readPin :: PP -> Int -> IO Bool

-- | <tt>readPins pp l</tt> is equal to <tt>sequence (map (readPin pp)
--   l)</tt> but it is faster.
readPins :: PP -> [Int] -> IO [Bool]

-- | Set the data direction of the data pins (pin 2-9). On my system, i get
--   an error "bad address". Please mail your experiences to me.
dataDirection :: PP -> DD -> IO ()

-- | Run a simple test. View the source for an application example.
test :: IO ()
instance Eq Reg
instance Ord Reg
instance Ix Reg
