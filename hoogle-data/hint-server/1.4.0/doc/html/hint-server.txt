-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A server process that runs hint.
--   
--   This library provides a server process (implemented using eprocess)
--   that can receive and run actions in the Interpreter monad.
@package hint-server
@version 1.4.0


-- | This module provides a server process (implemented using eprocess)
--   that can receive and run actions in the Interpreter monad.
module Language.Haskell.Interpreter.Server

-- | The server handle. It's returned on process creation and should be
--   used afterwards to send messages to it
data ServerHandle

-- | Starts the server. Usage: <tt> handle &lt;- start </tt>
start :: IO ServerHandle

-- | Stops the server. Usage: <tt> stop serverhandle </tt>
stop :: ServerHandle -> IO ()

-- | Runs the action. Usage: <tt> result &lt;- runIn serverhandle action
--   </tt>
runIn :: ServerHandle -> InterpreterT IO a -> IO (Either InterpreterError a)

-- | Asynchronically runs an action and returns the <i>MVar</i> that will
--   be filled with the result when it's there. Usage: <tt> mvar &lt;-
--   asyncRunIn serverhandle action </tt>
asyncRunIn :: ServerHandle -> InterpreterT IO a -> IO (MVar (Either InterpreterError a))

-- | Runs all the pending actions (those that where run using
--   <a>asyncRunIn</a>. Usage: <tt> flush serverhandle </tt>
flush :: ServerHandle -> IO (Either InterpreterError ())
instance MonadInterpreter m => MonadInterpreter (ReceiverT r m)
