-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | SIMD-oriented Fast Mersenne Twister(SFMT) binding.
--   
@package sfmt
@version 0.1.1

module System.Random.SFMT
data Gen s
initializeFromSeed :: PrimMonad m => Int -> m (Gen (PrimState m))
create :: PrimMonad m => m (Gen (PrimState m))
initialize :: (PrimMonad m, Foldable f) => f Word -> m (Gen (PrimState m))
initializeFromByteString :: PrimMonad m => ByteString -> m (Gen (PrimState m))
withSystemRandom :: PrimBase m => (Gen (PrimState m) -> m a) -> IO a
createSystemRandom :: IO GenIO
type GenIO = Gen (PrimState IO)
type GenST s = Gen (PrimState (ST s))
asGenIO :: (GenIO -> IO a) -> GenIO -> IO a
asGenST :: (GenST s -> ST s a) -> GenST s -> ST s a
class Variate a
uniform :: (Variate a, PrimMonad m) => Gen (PrimState m) -> m a
uniformR :: (Variate a, PrimMonad m) => (a, a) -> Gen (PrimState m) -> m a
data Seed
unsafeFromSeed :: Seed -> ByteString
unsafeToSeed :: ByteString -> Seed
save :: PrimMonad m => Gen (PrimState m) -> m Seed
restore :: PrimMonad m => Seed -> m (Gen (PrimState m))
instance Show Seed
instance (Variate a, Variate b, Variate c, Variate d) => Variate (a, b, c, d)
instance (Variate a, Variate b, Variate c) => Variate (a, b, c)
instance (Variate a, Variate b) => Variate (a, b)
instance Variate Int64
instance Variate Int32
instance Variate Int16
instance Variate Int8
instance Variate Int
instance Variate Word64
instance Variate Word32
instance Variate Word16
instance Variate Word8
instance Variate Word
instance Variate Double
instance Variate Float
instance Variate Bool
instance Show (Gen s)
