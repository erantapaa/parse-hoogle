-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | IRC client extension for Manatee.
--   
--   manatee-ircclient is IRC client extension for Manatee (Haskell/Gtk+
--   Integrated Live Environment)
@package manatee-ircclient
@version 0.0.2

module Manatee.Extension.IrcClient.Smile

-- | The size of smile.
smileSize :: Int

-- | Replace smile string with pixbuf, and return insert offset of pixbuf.
smileMessage :: ByteString -> Map String Pixbuf -> IO (ByteString, [(Int, Pixbuf)])

-- | Create smile pixbufs.
createSmilePixbufs :: IO (Map String Pixbuf)

module Manatee.Extension.IrcClient.PageMode

-- | Irc
ircMode :: PageMode

module Manatee.Extension.IrcClient.HighlightNick
type NickColor = (Int, Int, Int)

-- | Background color.
backgroundColor :: NickColor

-- | Returns the luminance of color. Luminance is a value of 0.299 red +
--   0.587 green + 0.114 blue and is always between 0 and 255.
colorLuminance :: NickColor -> Int

-- | Returns the inverted color.
invertColor :: NickColor -> NickColor

-- | Get unique color of nick.
nickColor :: ByteString -> NickColor

-- | Convert nick color to color.
nickColorToColor :: NickColor -> Color

module Manatee.Extension.IrcClient.Types
type Server = String
type Channel = String
type Port = Int
type Nick = String
type Password = String

-- | Temporary user name for test.
tempUser :: ByteString

-- | Temporary real name for test.
tempRealname :: ByteString

-- | Default user nick.
defaultNick :: String

-- | Default server.
defaultServer :: String

-- | Default port.
defaultPort :: Int

-- | Default channel
defaultChannel :: String

-- | Enable join message.
enableJoinMessage :: Bool

-- | Enable quit message.
enableQuitMessage :: Bool

-- | Target language to translate.
targetLanguage :: Language

-- | Source language.
sourceLanguage :: Language

-- | Show line number.
showLineNumber :: Bool

-- | Time stamp position.
timeStampPosition :: TextWindowType

-- | The prompt string.
promptStr :: String

-- | The column limit to wrap irc message.
wrapColumn :: Int

-- | The default time stamp : [00:00:00]
defaultTimeStamp :: String

-- | Server message color.
serverMsgColor :: Color

-- | Self message color.
selfMsgColor :: Color

-- | Other message color.
otherMsgColor :: Color

-- | Join message color.
joinMsgColor :: Color

-- | Quit message color.
quitMsgColor :: Color

-- | Part message color.
partMsgColor :: Color

-- | Action message color.
actionMsgColor :: Color

-- | Url color.
urlColor :: Color

module Manatee.Extension.IrcClient.DBus
data IrcDaemonMember
Join :: IrcDaemonMember
Part :: IrcDaemonMember
SendMessage :: IrcDaemonMember
data IrcDaemonSignalArgs
JoinArgs :: Server -> Port -> Channel -> Nick -> ProcessID -> IrcDaemonSignalArgs
PartArgs :: Server -> Channel -> ProcessID -> IrcDaemonSignalArgs
SendMessageArgs :: Server -> ByteString -> IrcDaemonSignalArgs
data IrcClientMember
ReceivePrivate :: IrcClientMember
ReceiveJoin :: IrcClientMember
ReceiveTopicReply :: IrcClientMember
ReceiveTopicWhoTime :: IrcClientMember
ReceiveChannelUrl :: IrcClientMember
ReceiveNames :: IrcClientMember
ReceiveQuit :: IrcClientMember
ReceivePart :: IrcClientMember
DaemonProcessStartup :: IrcClientMember
data IrcClientSignalArgs
ReceivePrivateArgs :: NickName -> CommandArg -> IrcClientSignalArgs
ReceiveJoinArgs :: NickName -> UserName -> HostName -> IrcClientSignalArgs
ReceiveTopicReplyArgs :: CommandArg -> IrcClientSignalArgs
ReceiveTopicWhoTimeArgs :: NickName -> Integer -> IrcClientSignalArgs
ReceiveChannelUrlArgs :: ByteString -> IrcClientSignalArgs
ReceiveNamesArgs :: ByteString -> IrcClientSignalArgs
ReceiveQuitArgs :: NickName -> UserName -> HostName -> CommandArg -> IrcClientSignalArgs
ReceivePartArgs :: NickName -> UserName -> HostName -> CommandArg -> IrcClientSignalArgs
DaemonProcessStartupArgs :: IrcClientSignalArgs

-- | Irc daemon bus name.
ircDaemonBusName :: Text
ircDaemonInterfaceName :: Text

-- | The daemon path name.
ircDaemonPathName :: Text

-- | Check daemon signal argument. Return False if mismatch.
--   
--   Unpack daemon signal from Variant list. unpackIrcDaemonSignalArgs_ ::
--   IrcDaemonMember -&gt; [Variant] -&gt; Maybe IrcDaemonSignalArgs
--   
--   Pack daemon signal argument to Variant list. packIrcDaemonSignalArgs
--   :: IrcDaemonSignalArgs -&gt; [Variant]
--   
--   Check client signal argument. Return False if mismatch.
--   
--   Unpack client signal from Variant list. unpackIrcClientSignalArgs_ ::
--   IrcClientMember -&gt; [Variant] -&gt; Maybe IrcClientSignalArgs
--   
--   Pack client signal argument to Variant list. packIrcClientSignalArgs
--   :: IrcClientSignalArgs -&gt; [Variant]
--   
--   Build daemon signal. If signal argument not match daemon member name.
mkIrcDaemonSignal :: Client -> IrcDaemonMember -> IrcDaemonSignalArgs -> IO ()

-- | Build daemon match rule.
mkIrcDaemonMatchRule :: Client -> (IrcDaemonMember, IrcDaemonSignalArgs -> IO ()) -> IO ()

-- | Build daemon match rule list.
mkIrcDaemonMatchRules :: Client -> [(IrcDaemonMember, IrcDaemonSignalArgs -> IO ())] -> IO ()

-- | Pick IrcDaemonSignalArgs.
pickIrcDaemonSignalArgs :: IrcDaemonMember -> Signal -> IrcDaemonSignalArgs

-- | Unpack daemon signal from Variant list. Report error if mismatch.
--   
--   Pick IrcClientSignalArgs.
pickIrcClientSignalArgs :: IrcClientMember -> Signal -> IrcClientSignalArgs

-- | Unpack client signal from Variant list. Report error if mismatch.
--   
--   Build render signal. If signal argument not match render member name.
mkIrcClientSignal :: Client -> ProcessID -> IrcClientMember -> IrcClientSignalArgs -> IO ()

-- | Build render process match rule for catch signal.
mkIrcClientMatchRule :: Client -> (IrcClientMember, IrcClientSignalArgs -> IO ()) -> IO ()

-- | Build irc client match rule for catch signal.
mkIrcClientMatchRules :: Client -> [(IrcClientMember, IrcClientSignalArgs -> IO ())] -> IO ()
instance Variable Integer
instance Show IrcClientSignalArgs
instance Eq IrcClientSignalArgs
instance Ord IrcClientSignalArgs
instance Show IrcClientMember
instance Eq IrcClientMember
instance Ord IrcClientMember
instance Show IrcDaemonSignalArgs
instance Eq IrcDaemonSignalArgs
instance Ord IrcDaemonSignalArgs
instance Show IrcDaemonMember
instance Eq IrcDaemonMember
instance Ord IrcDaemonMember

module Manatee.Extension.IrcClient.Daemon
type HasConnected = Bool
type IrcConnect = Map Server (MVar Handle, Map Channel [ProcessID])
data IrcStatus
IrcStatus :: TVar IrcConnect -> Client -> MVar String -> IrcStatus
ircConnect :: IrcStatus -> TVar IrcConnect
ircClient :: IrcStatus -> Client
ircExitSignal :: IrcStatus -> MVar String

-- | Initial status.
ircInitStatus :: IO IrcStatus

-- | Send irc message.
ircSendMessage :: IrcStatus -> IrcDaemonSignalArgs -> IO ()

-- | Part channel.
ircPart :: IrcStatus -> IrcDaemonSignalArgs -> IO ()

-- | Join channel.
ircJoin :: IrcStatus -> IrcDaemonSignalArgs -> IO ()

-- | Listen server message.
ircListenServerMessage :: IrcStatus -> (Server, Handle) -> IO ()

-- | Flush message to socket.
write :: Handle -> ByteString -> IO ()

module Manatee.Extension.IrcClient.IrcBuffer
data IrcBuffer
IrcBuffer :: Server -> Port -> Channel -> Client -> PageId -> PageMode -> SourceBuffer -> TextMark -> TextMark -> TVar (Maybe TextMark) -> TextTag -> TextTag -> TextTag -> TextTag -> TextTag -> TextTag -> TextTag -> TextTag -> TextTag -> TextTag -> TVar (Map Int (String, Color)) -> TVar Nick -> TVar (Set NickName) -> TVar (Map NickName TextTag) -> TVar Language -> TChan IrcBufferSignal -> Map String Pixbuf -> IrcBuffer
ircBufferServer :: IrcBuffer -> Server
ircBufferPort :: IrcBuffer -> Port
ircBufferChannel :: IrcBuffer -> Channel
ircBufferClient :: IrcBuffer -> Client
ircBufferPageId :: IrcBuffer -> PageId
ircBufferMode :: IrcBuffer -> PageMode
ircBufferBuffer :: IrcBuffer -> SourceBuffer
ircBufferInsertMark :: IrcBuffer -> TextMark
ircBufferPromptMark :: IrcBuffer -> TextMark
ircBufferScrollMark :: IrcBuffer -> TVar (Maybe TextMark)
ircBufferEditableTag :: IrcBuffer -> TextTag
ircBufferMessageTag :: IrcBuffer -> TextTag
ircBufferServerColorTag :: IrcBuffer -> TextTag
ircBufferSelfColorTag :: IrcBuffer -> TextTag
ircBufferOtherColorTag :: IrcBuffer -> TextTag
ircBufferJoinColorTag :: IrcBuffer -> TextTag
ircBufferQuitColorTag :: IrcBuffer -> TextTag
ircBufferPartColorTag :: IrcBuffer -> TextTag
ircBufferActionColorTag :: IrcBuffer -> TextTag
ircBufferUrlColorTag :: IrcBuffer -> TextTag
ircBufferTimeStamp :: IrcBuffer -> TVar (Map Int (String, Color))
ircBufferNick :: IrcBuffer -> TVar Nick
ircBufferNickSet :: IrcBuffer -> TVar (Set NickName)
ircBufferNickColorMap :: IrcBuffer -> TVar (Map NickName TextTag)
ircBufferTranslateLanguage :: IrcBuffer -> TVar Language
ircBufferBroadcastChannel :: IrcBuffer -> TChan IrcBufferSignal
ircBufferSmilePixbufs :: IrcBuffer -> Map String Pixbuf
data IrcBufferSignal
SwitchTranslateLanguage :: IrcBufferSignal
BufferChanged :: IrcBufferSignal

-- | Create buffer new.
ircBufferNew :: String -> Client -> PageId -> IO IrcBuffer
ircParseInfo :: String -> (Nick, Server, Port, Channel)

-- | Receive private message.
ircBufferReceivePrivate :: IrcBuffer -> NickName -> CommandArg -> IO ()

-- | Receive quit message.
ircBufferReceiveQuit :: IrcBuffer -> NickName -> UserName -> HostName -> ByteString -> IO ()

-- | Receive part message.
ircBufferReceivePart :: IrcBuffer -> NickName -> UserName -> HostName -> ByteString -> IO ()

-- | Receive topic replay message.
ircBufferReceiveNames :: IrcBuffer -> ByteString -> IO ()

-- | Receive topic replay message.
ircBufferReceiveChannelUrl :: IrcBuffer -> ByteString -> IO ()

-- | Receive topic replay message.
ircBufferReceiveTopicReply :: IrcBuffer -> CommandArg -> IO ()

-- | Receive topic replay message.
ircBufferReceiveTopicWhoTime :: IrcBuffer -> NickName -> Integer -> IO ()

-- | Receive join message.
ircBufferReceiveJoin :: IrcBuffer -> NickName -> UserName -> HostName -> IO ()

-- | Receive irc message.
ircBufferReceiveMsg :: IrcBuffer -> ByteString -> Int -> TextTag -> IO ()

-- | Add nick to nick set.
ircBufferAddNick :: IrcBuffer -> NickName -> IO ()

-- | Update nick color to map.
ircBufferUpdateNickColor :: IrcBuffer -> NickName -> IO ()

-- | Create color tag.
ircBufferCreateColorTag :: (TextBufferClass buffer) => buffer -> Color -> IO TextTag

-- | Insert prompt string.
ircBufferInsertPromptStr :: (TextBufferClass buffer) => buffer -> IO ()

-- | Create insert mark.
ircBufferCreateInsertMark :: (TextBufferClass buffer) => buffer -> IO TextMark

-- | Create prompt mark.
ircBufferCreatePromptMark :: (TextBufferClass buffer) => buffer -> IO TextMark

-- | Indent message.
ircBufferIndentMessage :: ByteString -> ByteString -> (ByteString, Int)
instance Typeable IrcBuffer
instance Show IrcBufferSignal
instance Eq IrcBufferSignal
instance Ord IrcBufferSignal

module Manatee.Extension.IrcClient.IrcView
data IrcView
IrcView :: TVar PagePlugId -> ScrolledWindow -> SourceView -> IrcBuffer -> ViewChannel IrcBufferSignal -> IrcView
ircViewPlugId :: IrcView -> TVar PagePlugId
ircViewScrolledWindow :: IrcView -> ScrolledWindow
ircViewView :: IrcView -> SourceView
ircViewBuffer :: IrcView -> IrcBuffer
ircViewBroadcastChannel :: IrcView -> ViewChannel IrcBufferSignal

-- | Create new irc view.
ircViewNew :: IrcBuffer -> PagePlugId -> IO IrcView

-- | Listen broadcast channel for draw view synchronous.
ircViewListenChannel :: IrcView -> IO ()

-- | Swtich translate language.
ircViewSwitchTranslateLanguage :: IrcView -> IO ()

-- | Handle key action.
ircViewHandleKeyAction :: IrcView -> Text -> SerializedEvent -> IO ()

-- | Begin.
ircViewScrollToTop :: IrcView -> IO ()

-- | End.
ircViewScrollToBottom :: IrcView -> IO ()

-- | Scroll page vertically.
ircViewScrollVerticalPage :: Bool -> IrcView -> IO ()

-- | Scroll step vertically.
ircViewScrollVerticalStep :: Bool -> IrcView -> IO ()

-- | Send morse code.
ircViewSendMorse :: IrcView -> IO ()

-- | Send irc message.
ircViewSendMessage :: Bool -> IrcView -> IO ()

-- | Select all.
ircViewSelectAll :: IrcView -> IO ()

-- | Wrap delete action.
ircViewWrapDeleteAction :: IrcView -> IO Bool -> IO ()

-- | Delete lines.
ircViewDelLines :: IrcView -> IO ()

-- | Delete.
ircViewDelete :: IrcView -> IO ()

-- | Delete forward char.
ircViewDeleteForwardChar :: IrcView -> IO ()

-- | Backward char.
ircViewDeleteBackwardChar :: IrcView -> IO ()

-- | Forward word.
ircViewDeleteForwardWord :: IrcView -> IO ()

-- | Backward word.
ircViewDeleteBackwardWord :: IrcView -> IO ()

-- | Delete to line end.
ircViewDeleteToLineEnd :: IrcView -> IO ()

-- | Delete to line start.
ircViewDeleteToLineStart :: IrcView -> IO ()

-- | Cut.
ircViewCut :: IrcView -> IO Bool

-- | Copy.
ircViewCopy :: IrcView -> IO Bool

-- | Paste.
ircViewPaste :: IrcView -> IO Bool

-- | Forward line.
ircViewForwardLine :: IrcView -> IO ()

-- | Backward line.
ircViewBackwardLine :: IrcView -> IO ()

-- | Forward char.
ircViewForwardChar :: IrcView -> IO ()

-- | Backward char.
ircViewBackwardChar :: IrcView -> IO ()

-- | Forward word.
ircViewForwardWord :: IrcView -> IO ()

-- | Backward word.
ircViewBackwardWord :: IrcView -> IO ()

-- | Smart home.
ircViewSmartHome :: IrcView -> IO ()

-- | Smart end.
ircViewSmartEnd :: IrcView -> IO ()

-- | Set selection mark.
ircViewToggleSelectionMark :: IrcView -> IO ()

-- | Exchange selection mark.
ircViewExchangeSelectionMark :: IrcView -> IO ()

-- | Show selection mark.
ircViewApplySelectionMark :: IrcView -> IO ()

-- | Newline.
ircViewNewline :: IrcView -> IO ()

-- | Get text buffer.
ircViewGetTextBuffer :: IrcView -> IO TextBuffer

-- | Get source buffer.
ircViewGetSourceBuffer :: IrcView -> IO SourceBuffer

-- | Move to prompt position.
ircViewMoveToPrompt :: IrcView -> IO ()

-- | Clean input.
ircViewCleanInput :: IrcView -> IO ()

-- | Get input message.
ircViewGetInput :: IrcView -> IO ByteString

-- | Send message.
ircViewSend :: IrcView -> ByteString -> IO ()

-- | Open url around pointer.
ircViewOpenUrl :: IrcView -> IO ()

-- | Translate message around pointer.
ircViewTranslateMessage :: IrcView -> IO ()

-- | Translate morse code.
ircViewTranslateMorse :: IrcView -> IO ()

-- | Read message around pointer.
ircViewReadMessage :: IrcView -> IO ()

-- | Read irc message.
ircViewReadText :: IrcView -> String -> IO ()

-- | Get tooltip coordinate.
ircViewGetTooltipPoint :: IrcView -> IO Point

-- | Keymap.
ircViewKeymap :: Map Text (IrcView -> IO ())
instance Typeable IrcView
instance PageView IrcView
instance PageBuffer IrcBuffer

module Manatee.Extension.IrcClient
