-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Iron.IO message queueing client library
--   
--   A client library for communication with Iron.IO's message queueing
--   service
@package iron-mq
@version 0.1.1.0

module Network.IronMQ.Types
data Client
Client :: Text -> Text -> Text -> Text -> Client
token :: Client -> Text
projectID :: Client -> Text
server :: Client -> Text
apiVersion :: Client -> Text
data QueueSummary
QueueSummary :: Text -> Text -> Text -> QueueSummary
qsId :: QueueSummary -> Text
qsProjectId :: QueueSummary -> Text
qsName :: QueueSummary -> Text
data Subscriber
Subscriber :: Text -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Text -> Subscriber
sUrl :: Subscriber -> Text
sHeaders :: Subscriber -> Maybe Text
sRetriesRemaining :: Subscriber -> Maybe Int
sStatusCode :: Subscriber -> Maybe Int
sStatus :: Subscriber -> Maybe Text
sId :: Subscriber -> Maybe Text
data Queue
Queue :: Maybe Text -> Text -> Text -> Maybe Int -> Maybe Int -> Maybe [Subscriber] -> Maybe Int -> Maybe Text -> Maybe Int -> Queue
qId :: Queue -> Maybe Text
qProjectId :: Queue -> Text
qName :: Queue -> Text
qSize :: Queue -> Maybe Int
qTotalMessages :: Queue -> Maybe Int
qSubscribers :: Queue -> Maybe [Subscriber]
qRetries :: Queue -> Maybe Int
qPushType :: Queue -> Maybe Text
qRetriesDelay :: Queue -> Maybe Int
data QueueInfo
QueueInfo :: Int -> QueueInfo
qiSize :: QueueInfo -> Int
data PushStatus
PushStatus :: [Subscriber] -> PushStatus
psSubscribers :: PushStatus -> [Subscriber]
data Message
Message :: Maybe Text -> Text -> Maybe Int -> Maybe Int -> Message
mId :: Message -> Maybe Text
mBody :: Message -> Text
mTimeout :: Message -> Maybe Int
mReservedCount :: Message -> Maybe Int

-- | A default constructor for message
message :: Message
data MessageList
MessageList :: [Message] -> MessageList
messages :: MessageList -> [Message]
data IronResponse
IronResponse :: Maybe [Text] -> Text -> IronResponse
irIds :: IronResponse -> Maybe [Text]
irMsg :: IronResponse -> Text
data Alert
Alert :: Text -> Int -> Text -> Maybe Text -> Maybe Int -> Alert
aType :: Alert -> Text
aTrigger :: Alert -> Int
aQueue :: Alert -> Text
aDirection :: Alert -> Maybe Text
aSnooze :: Alert -> Maybe Int
instance Show Client
instance Show QueueSummary
instance Show Subscriber
instance Generic Subscriber
instance Show Queue
instance Show QueueInfo
instance Generic QueueInfo
instance Show PushStatus
instance Show Message
instance Show MessageList
instance Generic MessageList
instance Show IronResponse
instance Generic IronResponse
instance Show Alert
instance Generic Alert
instance Datatype D1Subscriber
instance Constructor C1_0Subscriber
instance Selector S1_0_0Subscriber
instance Selector S1_0_1Subscriber
instance Selector S1_0_2Subscriber
instance Selector S1_0_3Subscriber
instance Selector S1_0_4Subscriber
instance Selector S1_0_5Subscriber
instance Datatype D1QueueInfo
instance Constructor C1_0QueueInfo
instance Selector S1_0_0QueueInfo
instance Datatype D1MessageList
instance Constructor C1_0MessageList
instance Selector S1_0_0MessageList
instance Datatype D1IronResponse
instance Constructor C1_0IronResponse
instance Selector S1_0_0IronResponse
instance Selector S1_0_1IronResponse
instance Datatype D1Alert
instance Constructor C1_0Alert
instance Selector S1_0_0Alert
instance Selector S1_0_1Alert
instance Selector S1_0_2Alert
instance Selector S1_0_3Alert
instance Selector S1_0_4Alert
instance ToJSON Alert
instance FromJSON Alert
instance ToJSON IronResponse
instance FromJSON IronResponse
instance ToJSON MessageList
instance FromJSON MessageList
instance ToJSON Message
instance FromJSON Message
instance FromJSON PushStatus
instance FromJSON QueueInfo
instance FromJSON Queue
instance FromJSON Subscriber
instance FromJSON QueueSummary

module Network.IronMQ
type Url = Text
type Endpoint = Text
type Param = (Text, Text)
type QueueName = Text
type ID = Text

-- | Construct a base URL for HTTP requests from a client
baseurl :: Client -> Text

-- | An empty body for POST/PUT requests
emptyBody :: Payload

-- | Make a GET request to an endpoint using connection info from client
--   and query string set to parameters. Return the JSON results
getJSONWithOpts :: FromJSON a => Client -> Endpoint -> [Param] -> IO a

-- | Make a GET request to an endpoint using the connection info from
--   client. Return the JSON results.
getJSON :: FromJSON a => Client -> Endpoint -> IO a

-- | Make a POST a request to an endpoint using connection info from client
--   and the body provided. Return the JSON response.
postJSONWithBody :: (Postable a, FromJSON b) => Client -> Endpoint -> a -> IO b

-- | Make a POST request to an endpoint using the connection into from
--   client and an empty body. Returb the JSON response.
postJSON :: (ToJSON b, FromJSON b) => Client -> Endpoint -> IO b
deleteJSON :: FromJSON a => Client -> Endpoint -> IO a

-- | Get a list of queues available to the client
queues :: Client -> IO [QueueSummary]

-- | Get a queue from the client
getQueue :: Client -> QueueName -> IO Queue

-- | Get a list of messages on the queue (allowing specification of number
--   of messages and delay)
getMessages' :: Client -> QueueName -> Maybe Int -> Maybe Int -> IO MessageList

-- | Get a list of messages on a queue
getMessages :: Client -> QueueName -> IO MessageList

-- | Get a message by ID
getMessageById :: Client -> QueueName -> ID -> IO Message

-- | Get the push status of a message
getMessagePushStatus :: Client -> QueueName -> ID -> IO PushStatus

-- | Post messages to a queue
postMessages :: Client -> QueueName -> [Message] -> IO IronResponse

-- | Clear all messages from a queue
clear :: Client -> QueueName -> IO IronResponse

-- | Delete a queue
deleteQueue :: Client -> QueueName -> IO IronResponse

-- | Delete a message from a queue
deleteMessage :: Client -> QueueName -> ID -> IO IronResponse

-- | Delete the message push status of a message
deleteMessagePushStatus :: Client -> QueueName -> ID -> IO IronResponse

-- | Remove alerts from a queue
deleteAlerts :: Client -> QueueName -> [ID] -> IO IronResponse

-- | Remove an alert from a queue
deleteAlert :: Client -> QueueName -> ID -> IO IronResponse
deleteSubscribers :: t -> t1 -> t2 -> t3

-- | Take a look at the next item on the queue
peek' :: Client -> QueueName -> Maybe Int -> IO MessageList
peek :: Client -> QueueName -> IO MessageList

-- | Touch a message on the queue
touch :: Client -> QueueName -> ID -> IO IronResponse

-- | Update a queues subscribers
update :: Client -> QueueName -> [Subscriber] -> IO IronResponse

-- | Add alerts to a queue
addAlerts :: Client -> QueueName -> [Alert] -> IO IronResponse

-- | Update alerts on a queue
updateAlerts :: Client -> QueueName -> [Alert] -> IO IronResponse

-- | Add subscribers to a queue
addSubscribers :: Client -> QueueName -> [Subscriber] -> IO IronResponse
data Client
Client :: Text -> Text -> Text -> Text -> Client
token :: Client -> Text
projectID :: Client -> Text
server :: Client -> Text
apiVersion :: Client -> Text

-- | A default constructor for message
message :: Message
