-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A global lock implemented without unsafePerformIO
--   
--   This library provides a single global lock. You can use it, for
--   example, to protect a thread-unsafe C library.
--   
--   The implementation does not use <tt>unsafePerformIO</tt>. It should be
--   safe against GHC bugs such as
--   <a>http://hackage.haskell.org/trac/ghc/ticket/5558</a>.
--   
--   You can use this library as-is, or as a template for including a
--   similar lock in your own Haskell project.
--   
--   This library requires that the C compiler invoked by Cabal is GCC 4.1
--   or newer.
@package global-lock
@version 0.1


-- | Internals of global locking.
--   
--   Use with caution!
module System.GlobalLock.Internal

-- | Get the single <tt><a>MVar</a></tt> used for global locking.
get :: IO (MVar ())


-- | Provides a single global lock for <tt><a>IO</a></tt> actions.
module System.GlobalLock

-- | Take the global lock for the duration of an <tt><a>IO</a></tt> action.
--   
--   Two actions executed via <tt><a>lock</a></tt> will never run
--   simultaneously.
lock :: IO a -> IO a
