-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Sparklines for Haskell
--   
--   Sparklines implementation of smooth and bar graphs
@package hsparklines
@version 0.1.0


-- | Created : 2008-02-26 Version : 0.1
--   
--   Sparklines implementation in Haskell. Sparklines are mini graphs
--   inspired by Edward Tufte.
--   
--   <pre>
--   dp :: [Float]
--   dp = [24,21,32.3,24,15,34,43,55,57,72,74,75,73,72,55,44]
--   
--   make barSpark dp &gt;&gt;= savePngFile "bar_spark.png"
--   </pre>
module Graphics.Rendering.HSparklines
data SparkOptions
SmoothOptions :: Int -> Int -> (Int, Int) -> Color -> Color -> Color -> Color -> Bool -> Bool -> Bool -> SparkOptions

-- | step size
step :: SparkOptions -> Int

-- | graph height (pixels)
height :: SparkOptions -> Int

-- | data point limits
limits :: SparkOptions -> (Int, Int)

-- | background color
bgColor :: SparkOptions -> Color

-- | color of minimum datapoint
minColor :: SparkOptions -> Color

-- | color of maximum datapoint
maxColor :: SparkOptions -> Color

-- | color of last datapoint
lastColor :: SparkOptions -> Color

-- | display minimum marker
minMarker :: SparkOptions -> Bool

-- | display maximum marker
maxMarker :: SparkOptions -> Bool

-- | display last marker
lastMarker :: SparkOptions -> Bool
BarOptions :: Int -> Int -> (Int, Int) -> Color -> Color -> Color -> Color -> Bool -> Bool -> Bool -> SparkOptions

-- | step size
step :: SparkOptions -> Int

-- | graph height (pixels)
height :: SparkOptions -> Int

-- | data point limits
limits :: SparkOptions -> (Int, Int)

-- | background color
bgColor :: SparkOptions -> Color

-- | color of minimum datapoint
minColor :: SparkOptions -> Color

-- | color of maximum datapoint
maxColor :: SparkOptions -> Color

-- | color of last datapoint
lastColor :: SparkOptions -> Color

-- | display minimum marker
minMarker :: SparkOptions -> Bool

-- | display maximum marker
maxMarker :: SparkOptions -> Bool

-- | display last marker
lastMarker :: SparkOptions -> Bool
rgb :: Int -> Int -> Int -> Color
make :: SparkOptions -> [Float] -> IO Image
smoothSpark :: SparkOptions
barSpark :: SparkOptions

-- | Save an image as a PNG file.
savePngFile :: FilePath -> Image -> IO ()
encodePngAsDataUrl :: Image -> IO String
instance Show SparkOptions
