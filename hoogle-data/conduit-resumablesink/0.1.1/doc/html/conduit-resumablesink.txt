-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Allows conduit to resume sinks to feed multiple sources into it.
--   
--   <tt>conduit-resumablesink</tt> is a solution to the problem where you
--   have a <tt>conduit</tt> sink and you want to feed multiple sources
--   into it as each source is exhausted. This is essentially the opposite
--   of the ResumableSource functionality supplied with conduit.
@package conduit-resumablesink
@version 0.1.1

module Data.Conduit.ResumableSink
data ResumableSink m i r
ResumableSink :: (Sink i m r) -> ResumableSink m i r

-- | Connects a new source to a resumable sink. The result will be Right an
--   updated ResumableSink or Left result if the Sink completes.
connectResumeSink :: Monad m => Source m i -> ResumableSink m i r -> m (Either r (ResumableSink m i r))

-- | Converts a sink into a ResumableSink that can be used with ++$$
newResumableSink :: Monad m => Sink i m r -> ResumableSink m i r

-- | Closes a ResumableSink and gets the final result.
closeResumableSink :: Monad m => ResumableSink m i r -> m r

-- | Connects a source and a sink. The result will be Right a ResumableSink
--   or Left result if the Sink completes.
(+$$) :: Monad m => Source m i -> Sink i m r -> m (Either r (ResumableSink m i r))

-- | Connects a new source to a resumable sink. The result will be Right an
--   updated ResumableSink or Left result if the Sink completes.
(++$$) :: Monad m => Source m i -> ResumableSink m i r -> m (Either r (ResumableSink m i r))

-- | Attaches a source to a resumable sink, finishing the sink and
--   returning a result.
(-++$$) :: Monad m => Source m i -> ResumableSink m i r -> m r
