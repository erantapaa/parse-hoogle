-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A networked event handling framework for hooking
into other programs.
--   
--   Pup-Events is a networking enabled event handling framework. This
--   package contains the Client component. In order for the client to be
--   useful it needs events and associated handlers, which you write. You
--   then call the <a>client</a> function, passing in the required
--   functions for the client to work properly. properly.
@package Pup-Events-Client
@version 1.1.4


-- | The Clients module in the PupEvents framework is used by the main
--   application code to send events to the server. Its main function,
--   <a>client</a> returns a pair of <a>PQueues</a> that the application
--   uses to send and receive events (written following the specification
--   defined in the Events module).
module PupEventsClient

-- | The client function is the main entry point for the client code. It
--   creates a socket, spawns two processes (<a>sendEvents</a> and
--   <a>recvEvents</a>) to handle outgoing and incoming events, and returns
--   the queues used to communicate with those processes.
client :: Maybe [Char] -> Int -> String -> (a -> Int) -> (t -> t -> String) -> [ParsecT [Char] () Identity a] -> IO (PQueue t, PQueue a, IO ())
sendEvents :: Handle -> PQueue t -> (t -> t -> String) -> IO ()
recvEvents :: Handle -> PQueue a -> (a -> Int) -> [ParsecT [Char] () Identity a] -> IO ()
