-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Haskell source splitter driven by special comments.
--   
--   The <a>modsplit</a> program takes a (most likely auto-generated)
--   single-module Haskell source file containing specifically formatted
--   comments and splits it into several modules according to the
--   directives contained in the special comments.
--   
--   This program has its roots in HSFFIG, and the format of these comments
--   is described here:
--   
--   
--   <a>http://www.haskell.org/haskellwiki/HSFFIG/Tutorial#Splitting_large_modules</a>
--   
--   This program is intended to post-process the output of programs
--   generating Haskell code rather than to deal with handwritten code.
--   
--   Special comment values are exported by this package in order to
--   simplify writing of programs that use the splitter. See the
--   documentation for the <a>Data.SplitBounds</a> module.
@package modsplit
@version 0.2.1


-- | Defines string literals for module split boundaries.
module Data.SplitBounds

-- | A special comment to mark the start of a section to uncomment when
--   splitting.
splitOpen :: String

-- | A special comment to mark the end of a section to uncomment when
--   splitting.
splitClose :: String

-- | A special comment to mark the start of a module to be created by the
--   splitter. It should be followed immediately by a forward slash and a
--   name of the module to create (with dots). Thus,
--   
--   <pre>
--   splitBegin ++ "/" ++ "Data.Foo"
--   </pre>
--   
--   results in creation of a file "Data/Foo.hs" relatively to the current
--   directory.
splitBegin :: String

-- | A special comment to mark the end of a module to be created by the
--   splitter.
splitEnd :: String

-- | A generic version of <a>words</a>: breaks a list by any predicate.
parts :: (a -> Bool) -> [a] -> [[a]]
