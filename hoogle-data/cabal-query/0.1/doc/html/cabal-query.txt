-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Helpers for quering .cabal files or hackageDB's 00-index.tar
--   
--   This package was written to assist you at finding a set of packages,
--   which satisfy your needs. At the moment it doesn't have a standalone
--   executable, but you can do the queries from your Haskell code.
@package cabal-query
@version 0.1


-- | This package uses <a>Data.Generics.PlateData</a>, so
--   
--   <ul>
--   <li>when Cabal package format changes, we don't have to rewrite
--   anything</li>
--   <li>all queries are statically typed</li>
--   <li>as a disadvantage, we may suffer some performance loss when doing
--   very complex queries, anyway most of processing goes while we read
--   package descriptions, not querying them</li>
--   </ul>
--   
--   Example of enduser querying code:
--   
--   <pre>
--   module Main where
--   
--   import qualified Data.ByteString.Lazy as B
--   import System.Environment
--   import Distribution.Query
--   import Distribution.Compiler
--   import Distribution.License
--   import Distribution.ModuleName hiding (main)
--   import Distribution.Package
--   import Distribution.PackageDescription
--   import Distribution.Version
--   import Distribution.Text
--   import Language.Haskell.Extension
--   
--   main = (head `fmap` getArgs) &gt;&gt;=
--           B.readFile &gt;&gt;=
--           mapM_ (putStrLn . show . (x -&gt; (display $ package x, display $ license x))) .
--           queryIndex (Not (Id (== GPL)) :&amp; Not (Id (== BSD3)))
--   </pre>
--   
--   You can query any field of <a>PackageDescription</a> no matter how
--   deep it is. You don't need to provide any type signature for
--   comparison functions, which are wrapped in <a>Id</a>, as long as you
--   use data constructors for which type can be inferred.
--   
--   See <a>PackageDescription</a> fields for details.
module Distribution.Query

-- | Queries .cabal files.
queryFiles :: Query -> [ByteString] -> [PackageDescription]

-- | Queries an index file, which is commonly located at
--   <a>~/.cabal/packages/hackage.haskell.org/00-index.tar</a> in POSIX
--   systems.
queryIndex :: Query -> ByteString -> [PackageDescription]

-- | Heterogenous query tree. Example of constructed query:
--   
--   <pre>
--   Not (Id (== GPL)) :&amp; Not (Id (== BSD3))
--   </pre>
--   
--   <a>Id</a> takes comparison function as its argument. Commonly this
--   must be a partially applied (<a>/=</a>) or (<a>==</a>). Data instance
--   is required for <a>PackageDescription</a> traversal. All appropriate
--   instances are generated automagically, so you don't have to bother as
--   long as Cabal doesn't change its package description format.
data Query
(:&) :: Query -> Query -> Query
(:|) :: Query -> Query -> Query
Not :: Query -> Query
Id :: (a -> Bool) -> Query
