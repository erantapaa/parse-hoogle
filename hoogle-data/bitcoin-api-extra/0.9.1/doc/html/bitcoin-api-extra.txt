-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Higher level constructs on top of the bitcoin-api package
--   
@package bitcoin-api-extra
@version 0.9.1

module Control.Bitcoin.Api.Transaction

-- | Watches incoming transactions and yields new transactions as soon as
--   they are are inside a block. This is modelled as a Conduit
--   <a>Source</a>, which means that you can easily apply your own
--   mutators, filters, etcetera.
--   
--   Keep in mind that calling this function launches a background thread
--   which pools the Bitcoin daemon, and stops as soon as the Conduit Sink
--   is closed.
watch :: Client -> Maybe Integer -> Source IO Transaction
