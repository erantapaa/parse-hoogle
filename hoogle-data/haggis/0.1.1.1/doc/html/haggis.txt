-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A static site generator with blogging/comments support
--   
--   Haggis is a static site generator with support for blogging. Haggis
--   has very few restrictions on how you manage your content, and supports
--   any markup format that pandoc does.
@package haggis
@version 0.1.1.1

module Text.Haggis.Utils
renderHtml :: [Node] -> ByteString
mapAccum :: Ord a => [(a, b)] -> Map a [b]
pandocToHtml :: Pandoc -> [Node]

module Text.Haggis.Types
data HaggisConfig
HaggisConfig :: String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe FilePath -> SiteTemplates -> HaggisConfig

-- | Path to where the files are hosted, e.g: <i>foo, </i>, <i>foo</i>bar/,
--   defaults to /
sitePath :: HaggisConfig -> String

-- | Default author, so you don't have to put an author in every post's
--   metadata.
defaultAuthor :: HaggisConfig -> Maybe String

-- | Hostname where the blog is hosted, used for generating RSS feed links.
--   E.g. blog.example.com
siteHost :: HaggisConfig -> Maybe String
rssTitle :: HaggisConfig -> Maybe String
rssDescription :: HaggisConfig -> Maybe String

-- | Sqlite3 file name, for comments.
sqlite3File :: HaggisConfig -> Maybe FilePath
siteTemplates :: HaggisConfig -> SiteTemplates
data SiteTemplates
SiteTemplates :: [Node] -> [Node] -> [Node] -> [Node] -> [Node] -> SiteTemplates
root :: SiteTemplates -> [Node]
single :: SiteTemplates -> [Node]
multiple :: SiteTemplates -> [Node]
tagsTemplate :: SiteTemplates -> [Node]
archivesTemplate :: SiteTemplates -> [Node]
data Page
Page :: String -> Maybe String -> [String] -> Maybe Day -> FilePath -> [Comment] -> [Node] -> Page
pageTitle :: Page -> String
pageAuthor :: Page -> Maybe String
pageTags :: Page -> [String]
pageDate :: Page -> Maybe Day
pagePath :: Page -> FilePath
pageComments :: Page -> [Comment]
pageContent :: Page -> [Node]
data MultiPage
MultiPage :: [Page] -> MultiPageType -> MultiPage
singlePages :: MultiPage -> [Page]
multiPageType :: MultiPage -> MultiPageType
data MultiPageType
Tag :: String -> MultiPageType
DirIndex :: FilePath -> MultiPageType
Archive :: Integer -> (Maybe Int) -> MultiPageType
mpTypeToPath :: MultiPageType -> FilePath
mpTypeToTitle :: MultiPageType -> String
data Comment
Comment :: String -> Maybe String -> Maybe String -> String -> UTCTime -> Comment
commenterName :: Comment -> String
commenterUrl :: Comment -> Maybe String
commenterEmail :: Comment -> Maybe String
commentPayload :: Comment -> String
commentTime :: Comment -> UTCTime
instance Show SiteTemplates
instance Eq MultiPageType
instance Ord MultiPageType
instance Show MultiPageType
instance Show HaggisConfig
instance Show Comment
instance Show Page
instance Show MultiPage

module Text.Haggis.Parse
data ParseException
ParseException :: String -> ParseException
supported :: FileInfo -> Bool
parseDate :: String -> Maybe Day
readTemplate :: FilePath -> IO [Node]
parseHtmlString :: String -> [Node]
parsePage :: FilePath -> FilePath -> [Comment] -> IO Page
dieOnParseError :: Show e => String -> Either e a -> a
keyValueParser :: Parser [(String, String)]
instance Typeable ParseException
instance Show ParseException
instance Exception ParseException

module Text.Haggis.Config
parseConfig :: FilePath -> SiteTemplates -> IO HaggisConfig
rootUri :: HaggisConfig -> Maybe URI
readTemplates :: FilePath -> IO SiteTemplates

module Text.Haggis.RSS
generateRSS :: HaggisConfig -> [Page] -> FilePath -> IO ()

module Text.Haggis.Comments
getComments :: HaggisConfig -> IO (FilePath -> [Comment])
commentsEnabled :: HaggisConfig -> Bool
data CommentException
CommentException :: String -> CommentException
instance Typeable CommentException
instance Show CommentException
instance Exception CommentException


-- | Contains binding utility functions.
module Text.Haggis.Binders
bindPage :: HaggisConfig -> Page -> [Node] -> [Node]
bindTag :: HaggisConfig -> String -> [Node] -> [Node]
bindSpecial :: HaggisConfig -> [MultiPage] -> [Node] -> [Node]
bindComment :: Comment -> [Node] -> [Node]

module Text.Haggis
buildSite :: FilePath -> FilePath -> IO ()
