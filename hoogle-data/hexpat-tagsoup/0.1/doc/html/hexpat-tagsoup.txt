-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Parse (possibly malformed) HTML to hexpat tree
--   
--   An integration of the <i>tagsoup</i> and <i>hexpat</i> packages,
--   allowing HTML to be parsed to a hexpat tree, tolerant of errors.
--   
--   The real work is done by Neil Mitchell's <i>tagsoup</i> package.
--   
--   darcs repo: <tt>http:<i></i>code.haskell.org<i>hexpat-tagsoup</i></tt>
@package hexpat-tagsoup
@version 0.1


-- | An integration of the <i>tagsoup</i> and <i>hexpat</i> packages,
--   allowing HTML to be parsed to a hexpat tree, tolerant of errors.
--   
--   The real work is done by Neil Mitchell's <i>tagsoup</i> package.
module Text.XML.Expat.TagSoup

-- | Parse tags using TagSoup, invoke canonicalizeTags to convert them all
--   to lower case, automatically self-close tags like <tt>img</tt> and
--   <tt>input</tt>, then convert to a hexpat tree.
parseTags :: (StringLike s, GenericXMLString text) => s -> UNode text

-- | Variant that accepts options.
parseTagsOptions :: (StringLike s, GenericXMLString text) => ParseOptions s -> s -> UNode text

-- | These options control how <tt>parseTags</tt> works.
data ParseOptions str :: * -> *
ParseOptions :: Bool -> Bool -> ((str, Bool) -> [Tag str]) -> ((str, Bool) -> (str, [Tag str])) -> Bool -> ParseOptions str

-- | Should <a>TagPosition</a> values be given before some items
--   (default=False,fast=False)
optTagPosition :: ParseOptions str -> Bool

-- | Should <a>TagWarning</a> values be given (default=False,fast=False)
optTagWarning :: ParseOptions str -> Bool

-- | How to lookup an entity (Bool = has ending <tt>';'</tt>)
optEntityData :: ParseOptions str -> (str, Bool) -> [Tag str]

-- | How to lookup an entity in an attribute (Bool = has ending
--   <tt>';'</tt>?)
optEntityAttrib :: ParseOptions str -> (str, Bool) -> (str, [Tag str])

-- | Require no adjacent <a>TagText</a> values (default=True,fast=False)
optTagTextMerge :: ParseOptions str -> Bool

-- | The default parse options value, described in <a>ParseOptions</a>.
parseOptions :: StringLike str => ParseOptions str

-- | A <a>ParseOptions</a> structure optimised for speed, following the
--   fast options.
parseOptionsFast :: StringLike str => ParseOptions str
