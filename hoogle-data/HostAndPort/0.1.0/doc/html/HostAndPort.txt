-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Parser host and port pairs like localhost:22
--   
@package HostAndPort
@version 0.1.0

module Network.HostAndPort

-- | This function will validate ipv4 address and return True if string is
--   valie adress
isIPv4Address :: String -> Bool

-- | Function validates ipv6 address
isIPv6Address :: String -> Bool

-- | This function will parse it's argument and return either <a>String</a>
--   (<a>Left</a>) with info about error or (Host, <a>Maybe</a> Port) tuple
--   (<a>Right</a>).
--   
--   Examples:
--   
--   <pre>
--   &gt;&gt;&gt; hostAndPort "localhost"
--   Right ("localhost",Nothing)
--   
--   &gt;&gt;&gt; hostAndPort "[::1]:3030"
--   Right ("::1",Just "3030")
--   </pre>
hostAndPort :: String -> Either String (String, Maybe String)

-- | Function will parse argument and return Maybe (Host, Maybe Port)
--   
--   Examples:
--   
--   <pre>
--   &gt;&gt;&gt; maybeHostAndPort "192.168.10.12"
--   Just ("192.168.10.12",Nothing)
--   
--   &gt;&gt;&gt; maybeHostAndPort "192.168.10.12:7272"
--   Just ("192.168.10.12",Just "7272")
--   </pre>
maybeHostAndPort :: String -> Maybe (String, Maybe String)

-- | Function will take default port and connection string and returns Just
--   (Host, Port) for valid input and Nothing for invalid.
--   
--   Examples:
--   
--   <pre>
--   &gt;&gt;&gt; defaultHostAndPort "22" "my.server.com"
--   Just ("my.server.com","22")
--   
--   &gt;&gt;&gt; defaultHostAndPort "22" "my.otherserver.com:54022"
--   Just ("my.otherserver.com","54022")
--   
--   &gt;&gt;&gt; defaultHostAndPort "22" "porttobig.com:500022"
--   Nothing
--   </pre>
defaultHostAndPort :: String -> String -> Maybe (String, String)
