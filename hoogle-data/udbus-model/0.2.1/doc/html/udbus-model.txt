-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Model API for udbus introspection and definitions
--   
--   Model API for udbus introspection and definitions
@package udbus-model
@version 0.2.1


-- | Model parsing for introspections and definition of DBus interfaces.
module Network.DBus.Model

-- | The whole XML model
data Model
Model :: [Interface] -> String -> Maybe String -> Model
interfaces :: Model -> [Interface]
nodeName :: Model -> String
nodeXmlns :: Model -> Maybe String

-- | An DBus XML interface containing methods, signals and properties
data Interface
Interface :: String -> [Method] -> [Signal] -> [Property] -> [Enumeration] -> [Flags] -> [Struct] -> Interface
interfaceName :: Interface -> String
interfaceMethods :: Interface -> [Method]
interfaceSignals :: Interface -> [Signal]
interfaceProperties :: Interface -> [Property]
interfaceEnums :: Interface -> [Enumeration]

-- | List of list of flag
interfaceFlagss :: Interface -> [Flags]
interfaceStructs :: Interface -> [Struct]

-- | DBus Enumeration (Telepathy extension)
data Enumeration
Enumeration :: String -> Type -> [EnumValue] -> Enumeration
enumName :: Enumeration -> String
enumType :: Enumeration -> Type
enumValues :: Enumeration -> [EnumValue]

-- | DBus Enumeration value
data EnumValue
EnumValue :: String -> String -> EnumValue
enumSuffix :: EnumValue -> String
enumValue :: EnumValue -> String

-- | DBus Flags (Telepathy extension)
data Flags
Flags :: String -> String -> Type -> [Flag] -> Maybe Doc -> Flags
flagsName :: Flags -> String
flagsValuePrefix :: Flags -> String
flagsType :: Flags -> Type
flagsFlags :: Flags -> [Flag]
flagsDoc :: Flags -> Maybe Doc
data Flag
Flag :: String -> String -> Maybe Doc -> Flag
flagSuffix :: Flag -> String
flagValue :: Flag -> String
flagDoc :: Flag -> Maybe Doc

-- | DBus Struct (Telepathy extension)
data Struct
Struct :: String -> [Member] -> Struct
structName :: Struct -> String
structMembers :: Struct -> [Member]

-- | DBus Struct Member
data Member
Member :: String -> Type -> Maybe String -> Maybe Doc -> Member
memberName :: Member -> String
memberType :: Member -> Type
memberRawType :: Member -> Maybe String
memberDoc :: Member -> Maybe Doc

-- | Represent a DBus Method
data Method
Method :: String -> [Annotation] -> [Arg] -> [Arg] -> Maybe Doc -> Method
methodName :: Method -> String
methodAnnotations :: Method -> [Annotation]
methodParamsIn :: Method -> [Arg]
methodParamsOut :: Method -> [Arg]
methodDoc :: Method -> Maybe Doc

-- | Represent a DBus Method's Annotation
data Annotation
Annotation :: String -> String -> Annotation
annotationName :: Annotation -> String
annotationValue :: Annotation -> String

-- | Represent a DBus Signal
data Signal
Signal :: String -> [Arg] -> Maybe Doc -> Signal
signalName :: Signal -> String
signalParams :: Signal -> [Arg]
signalDoc :: Signal -> Maybe Doc

-- | Represent a DBus Property
data Property
Property :: String -> Type -> Access -> Maybe String -> Property
propertyName :: Property -> String
propertyType :: Property -> Type
propertyAccess :: Property -> Access
propertyRawType :: Property -> Maybe String

-- | Represent a DBus Arg (Parameter)
data Arg
Arg :: String -> Type -> Maybe Doc -> Arg
argName :: Arg -> String
argType :: Arg -> Type
argDoc :: Arg -> Maybe Doc

-- | Property access type
data Access
Read :: Access
Write :: Access
ReadWrite :: Access
type Doc = String
fromXML :: String -> Maybe Model
