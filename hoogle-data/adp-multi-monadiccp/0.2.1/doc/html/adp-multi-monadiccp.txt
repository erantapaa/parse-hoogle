-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Subword construction in adp-multi using monadiccp
--   
--   This is an experimental subword construction algorithm for the
--   adp-multi package. It uses the constraint programming framework
--   monadiccp with the constraint solver OvertonFD. It is slower than the
--   built-in algorithm in adp-multi and serves research purposes. Use it
--   by importing ADP.Multi.Constraint.All instead of
--   ADP.Multi.Rewriting.All in your grammar files.
@package adp-multi-monadiccp
@version 0.2.1

module ADP.Multi.Constraint.ConstraintSolver
constructSubwords1 :: SubwordConstructionAlgorithm Dim1
constructSubwords2 :: SubwordConstructionAlgorithm Dim2


-- | Use this set of combinators instead of ADP.Multi.Rewriting.Combinators
--   to use a constraint solver for constructing the subword ranges.
--   
--   Note: This is experimental and slow.
module ADP.Multi.Constraint.Combinators
instance Rewritable Dim2 a b
instance Rewritable Dim1 a b


-- | Convenience module to import the specific rewriting function model and
--   combinator implementation known as <i>constraint solver</i>.
module ADP.Multi.Constraint.All
