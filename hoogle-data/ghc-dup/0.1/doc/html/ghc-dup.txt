-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Explicitly prevent sharing
--   
--   This package provides two new operations, <a>GHC.Dup.dup</a> and
--   <a>GHC.Dup.deepDup</a>, that allow the programmer to prevent the
--   result of two evaluations of the same expression to be shared.
--   
--   See <a>http://arxiv.org/abs/1207.2017</a> for more background.
--   
--   <i>This is still experimental software and can likely cause your
--   program to crash.</i>
--   
--   The work on this package has been supported by the Deutsche Telekom
--   Stiftung (<a>http://telekom-stiftung.de</a>).
@package ghc-dup
@version 0.1


-- | This module provides two new operations, <a>dup</a> and
--   <a>deepDup</a>, that allow you to prevent the result of two
--   evaluations of the same expression to be shared.
module GHC.Dup

-- | The Box datatype allows you to control the time of evaluations of
--   <a>dup</a> or <a>deepDup</a>, by pattern-matching on the result.
data Box a
Box :: a -> Box a

-- | Dup copies a the parameter and returns it. The copy is shallow, i.e.
--   referenced thunks are still shared between the parameter and its copy.
dup :: a -> Box a

-- | This copies the parameter and changes all references therein so that
--   when they are evaluated, they are copied again. This ensures that
--   everything put on the heap by a function that wraps all is parameters
--   in <a>deepDup</a> can be freed after the evaluation.
deepDup :: a -> Box a
