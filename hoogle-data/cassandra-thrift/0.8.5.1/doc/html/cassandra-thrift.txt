-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | thrift bindings to the cassandra database
--   
--   The Cassandra (v.0.8.5) database bindings, generated using the Thrift
--   (v.0.6.*) compliler, Released under the Apache 2.0 license.
@package cassandra-thrift
@version 0.8.5.1

module Database.Cassandra.Thrift.Cassandra_Types
data ConsistencyLevel
ONE :: ConsistencyLevel
QUORUM :: ConsistencyLevel
LOCAL_QUORUM :: ConsistencyLevel
EACH_QUORUM :: ConsistencyLevel
ALL :: ConsistencyLevel
ANY :: ConsistencyLevel
TWO :: ConsistencyLevel
THREE :: ConsistencyLevel
data IndexOperator
EQ :: IndexOperator
GTE :: IndexOperator
GT :: IndexOperator
LTE :: IndexOperator
LT :: IndexOperator
data IndexType
KEYS :: IndexType
data Compression
GZIP :: Compression
NONE :: Compression
data CqlResultType
ROWS :: CqlResultType
VOID :: CqlResultType
INT :: CqlResultType
data Column
Column :: Maybe ByteString -> Maybe ByteString -> Maybe Int64 -> Maybe Int32 -> Column
f_Column_name :: Column -> Maybe ByteString
f_Column_value :: Column -> Maybe ByteString
f_Column_timestamp :: Column -> Maybe Int64
f_Column_ttl :: Column -> Maybe Int32
write_Column :: (Protocol a, Transport t) => a t -> Column -> IO ()
read_Column_fields :: (Protocol a, Transport t) => a t -> Column -> IO Column
read_Column :: (Protocol a, Transport t) => a t -> IO Column
data SuperColumn
SuperColumn :: Maybe ByteString -> Maybe [Column] -> SuperColumn
f_SuperColumn_name :: SuperColumn -> Maybe ByteString
f_SuperColumn_columns :: SuperColumn -> Maybe [Column]
write_SuperColumn :: (Protocol a, Transport t) => a t -> SuperColumn -> IO ()
read_SuperColumn_fields :: (Protocol a, Transport t) => a t -> SuperColumn -> IO SuperColumn
read_SuperColumn :: (Protocol a, Transport t) => a t -> IO SuperColumn
data CounterColumn
CounterColumn :: Maybe ByteString -> Maybe Int64 -> CounterColumn
f_CounterColumn_name :: CounterColumn -> Maybe ByteString
f_CounterColumn_value :: CounterColumn -> Maybe Int64
write_CounterColumn :: (Protocol a, Transport t) => a t -> CounterColumn -> IO ()
read_CounterColumn_fields :: (Protocol a, Transport t) => a t -> CounterColumn -> IO CounterColumn
read_CounterColumn :: (Protocol a, Transport t) => a t -> IO CounterColumn
data CounterSuperColumn
CounterSuperColumn :: Maybe ByteString -> Maybe [CounterColumn] -> CounterSuperColumn
f_CounterSuperColumn_name :: CounterSuperColumn -> Maybe ByteString
f_CounterSuperColumn_columns :: CounterSuperColumn -> Maybe [CounterColumn]
write_CounterSuperColumn :: (Protocol a, Transport t) => a t -> CounterSuperColumn -> IO ()
read_CounterSuperColumn_fields :: (Protocol a, Transport t) => a t -> CounterSuperColumn -> IO CounterSuperColumn
read_CounterSuperColumn :: (Protocol a, Transport t) => a t -> IO CounterSuperColumn
data ColumnOrSuperColumn
ColumnOrSuperColumn :: Maybe Column -> Maybe SuperColumn -> Maybe CounterColumn -> Maybe CounterSuperColumn -> ColumnOrSuperColumn
f_ColumnOrSuperColumn_column :: ColumnOrSuperColumn -> Maybe Column
f_ColumnOrSuperColumn_super_column :: ColumnOrSuperColumn -> Maybe SuperColumn
f_ColumnOrSuperColumn_counter_column :: ColumnOrSuperColumn -> Maybe CounterColumn
f_ColumnOrSuperColumn_counter_super_column :: ColumnOrSuperColumn -> Maybe CounterSuperColumn
write_ColumnOrSuperColumn :: (Protocol a, Transport t) => a t -> ColumnOrSuperColumn -> IO ()
read_ColumnOrSuperColumn_fields :: (Protocol a, Transport t) => a t -> ColumnOrSuperColumn -> IO ColumnOrSuperColumn
read_ColumnOrSuperColumn :: (Protocol a, Transport t) => a t -> IO ColumnOrSuperColumn
data NotFoundException
NotFoundException :: NotFoundException
write_NotFoundException :: (Protocol a, Transport t1) => a t1 -> t -> IO ()
read_NotFoundException_fields :: (Protocol a, Transport t) => a t -> b -> IO b
read_NotFoundException :: (Protocol a, Transport t) => a t -> IO NotFoundException
data InvalidRequestException
InvalidRequestException :: Maybe String -> InvalidRequestException
f_InvalidRequestException_why :: InvalidRequestException -> Maybe String
write_InvalidRequestException :: (Protocol a, Transport t) => a t -> InvalidRequestException -> IO ()
read_InvalidRequestException_fields :: (Protocol a, Transport t) => a t -> InvalidRequestException -> IO InvalidRequestException
read_InvalidRequestException :: (Protocol a, Transport t) => a t -> IO InvalidRequestException
data UnavailableException
UnavailableException :: UnavailableException
write_UnavailableException :: (Protocol a, Transport t1) => a t1 -> t -> IO ()
read_UnavailableException_fields :: (Protocol a, Transport t) => a t -> b -> IO b
read_UnavailableException :: (Protocol a, Transport t) => a t -> IO UnavailableException
data TimedOutException
TimedOutException :: TimedOutException
write_TimedOutException :: (Protocol a, Transport t1) => a t1 -> t -> IO ()
read_TimedOutException_fields :: (Protocol a, Transport t) => a t -> b -> IO b
read_TimedOutException :: (Protocol a, Transport t) => a t -> IO TimedOutException
data AuthenticationException
AuthenticationException :: Maybe String -> AuthenticationException
f_AuthenticationException_why :: AuthenticationException -> Maybe String
write_AuthenticationException :: (Protocol a, Transport t) => a t -> AuthenticationException -> IO ()
read_AuthenticationException_fields :: (Protocol a, Transport t) => a t -> AuthenticationException -> IO AuthenticationException
read_AuthenticationException :: (Protocol a, Transport t) => a t -> IO AuthenticationException
data AuthorizationException
AuthorizationException :: Maybe String -> AuthorizationException
f_AuthorizationException_why :: AuthorizationException -> Maybe String
write_AuthorizationException :: (Protocol a, Transport t) => a t -> AuthorizationException -> IO ()
read_AuthorizationException_fields :: (Protocol a, Transport t) => a t -> AuthorizationException -> IO AuthorizationException
read_AuthorizationException :: (Protocol a, Transport t) => a t -> IO AuthorizationException
data SchemaDisagreementException
SchemaDisagreementException :: SchemaDisagreementException
write_SchemaDisagreementException :: (Protocol a, Transport t1) => a t1 -> t -> IO ()
read_SchemaDisagreementException_fields :: (Protocol a, Transport t) => a t -> b -> IO b
read_SchemaDisagreementException :: (Protocol a, Transport t) => a t -> IO SchemaDisagreementException
data ColumnParent
ColumnParent :: Maybe String -> Maybe ByteString -> ColumnParent
f_ColumnParent_column_family :: ColumnParent -> Maybe String
f_ColumnParent_super_column :: ColumnParent -> Maybe ByteString
write_ColumnParent :: (Protocol a, Transport t) => a t -> ColumnParent -> IO ()
read_ColumnParent_fields :: (Protocol a, Transport t) => a t -> ColumnParent -> IO ColumnParent
read_ColumnParent :: (Protocol a, Transport t) => a t -> IO ColumnParent
data ColumnPath
ColumnPath :: Maybe String -> Maybe ByteString -> Maybe ByteString -> ColumnPath
f_ColumnPath_column_family :: ColumnPath -> Maybe String
f_ColumnPath_super_column :: ColumnPath -> Maybe ByteString
f_ColumnPath_column :: ColumnPath -> Maybe ByteString
write_ColumnPath :: (Protocol a, Transport t) => a t -> ColumnPath -> IO ()
read_ColumnPath_fields :: (Protocol a, Transport t) => a t -> ColumnPath -> IO ColumnPath
read_ColumnPath :: (Protocol a, Transport t) => a t -> IO ColumnPath
data SliceRange
SliceRange :: Maybe ByteString -> Maybe ByteString -> Maybe Bool -> Maybe Int32 -> SliceRange
f_SliceRange_start :: SliceRange -> Maybe ByteString
f_SliceRange_finish :: SliceRange -> Maybe ByteString
f_SliceRange_reversed :: SliceRange -> Maybe Bool
f_SliceRange_count :: SliceRange -> Maybe Int32
write_SliceRange :: (Protocol a, Transport t) => a t -> SliceRange -> IO ()
read_SliceRange_fields :: (Protocol a, Transport t) => a t -> SliceRange -> IO SliceRange
read_SliceRange :: (Protocol a, Transport t) => a t -> IO SliceRange
data SlicePredicate
SlicePredicate :: Maybe [ByteString] -> Maybe SliceRange -> SlicePredicate
f_SlicePredicate_column_names :: SlicePredicate -> Maybe [ByteString]
f_SlicePredicate_slice_range :: SlicePredicate -> Maybe SliceRange
write_SlicePredicate :: (Protocol a, Transport t) => a t -> SlicePredicate -> IO ()
read_SlicePredicate_fields :: (Protocol a, Transport t) => a t -> SlicePredicate -> IO SlicePredicate
read_SlicePredicate :: (Protocol a, Transport t) => a t -> IO SlicePredicate
data IndexExpression
IndexExpression :: Maybe ByteString -> Maybe IndexOperator -> Maybe ByteString -> IndexExpression
f_IndexExpression_column_name :: IndexExpression -> Maybe ByteString
f_IndexExpression_op :: IndexExpression -> Maybe IndexOperator
f_IndexExpression_value :: IndexExpression -> Maybe ByteString
write_IndexExpression :: (Protocol a, Transport t) => a t -> IndexExpression -> IO ()
read_IndexExpression_fields :: (Protocol a, Transport t) => a t -> IndexExpression -> IO IndexExpression
read_IndexExpression :: (Protocol a, Transport t) => a t -> IO IndexExpression
data IndexClause
IndexClause :: Maybe [IndexExpression] -> Maybe ByteString -> Maybe Int32 -> IndexClause
f_IndexClause_expressions :: IndexClause -> Maybe [IndexExpression]
f_IndexClause_start_key :: IndexClause -> Maybe ByteString
f_IndexClause_count :: IndexClause -> Maybe Int32
write_IndexClause :: (Protocol a, Transport t) => a t -> IndexClause -> IO ()
read_IndexClause_fields :: (Protocol a, Transport t) => a t -> IndexClause -> IO IndexClause
read_IndexClause :: (Protocol a, Transport t) => a t -> IO IndexClause
data KeyRange
KeyRange :: Maybe ByteString -> Maybe ByteString -> Maybe String -> Maybe String -> Maybe Int32 -> KeyRange
f_KeyRange_start_key :: KeyRange -> Maybe ByteString
f_KeyRange_end_key :: KeyRange -> Maybe ByteString
f_KeyRange_start_token :: KeyRange -> Maybe String
f_KeyRange_end_token :: KeyRange -> Maybe String
f_KeyRange_count :: KeyRange -> Maybe Int32
write_KeyRange :: (Protocol a, Transport t) => a t -> KeyRange -> IO ()
read_KeyRange_fields :: (Protocol a, Transport t) => a t -> KeyRange -> IO KeyRange
read_KeyRange :: (Protocol a, Transport t) => a t -> IO KeyRange
data KeySlice
KeySlice :: Maybe ByteString -> Maybe [ColumnOrSuperColumn] -> KeySlice
f_KeySlice_key :: KeySlice -> Maybe ByteString
f_KeySlice_columns :: KeySlice -> Maybe [ColumnOrSuperColumn]
write_KeySlice :: (Protocol a, Transport t) => a t -> KeySlice -> IO ()
read_KeySlice_fields :: (Protocol a, Transport t) => a t -> KeySlice -> IO KeySlice
read_KeySlice :: (Protocol a, Transport t) => a t -> IO KeySlice
data KeyCount
KeyCount :: Maybe ByteString -> Maybe Int32 -> KeyCount
f_KeyCount_key :: KeyCount -> Maybe ByteString
f_KeyCount_count :: KeyCount -> Maybe Int32
write_KeyCount :: (Protocol a, Transport t) => a t -> KeyCount -> IO ()
read_KeyCount_fields :: (Protocol a, Transport t) => a t -> KeyCount -> IO KeyCount
read_KeyCount :: (Protocol a, Transport t) => a t -> IO KeyCount
data Deletion
Deletion :: Maybe Int64 -> Maybe ByteString -> Maybe SlicePredicate -> Deletion
f_Deletion_timestamp :: Deletion -> Maybe Int64
f_Deletion_super_column :: Deletion -> Maybe ByteString
f_Deletion_predicate :: Deletion -> Maybe SlicePredicate
write_Deletion :: (Protocol a, Transport t) => a t -> Deletion -> IO ()
read_Deletion_fields :: (Protocol a, Transport t) => a t -> Deletion -> IO Deletion
read_Deletion :: (Protocol a, Transport t) => a t -> IO Deletion
data Mutation
Mutation :: Maybe ColumnOrSuperColumn -> Maybe Deletion -> Mutation
f_Mutation_column_or_supercolumn :: Mutation -> Maybe ColumnOrSuperColumn
f_Mutation_deletion :: Mutation -> Maybe Deletion
write_Mutation :: (Protocol a, Transport t) => a t -> Mutation -> IO ()
read_Mutation_fields :: (Protocol a, Transport t) => a t -> Mutation -> IO Mutation
read_Mutation :: (Protocol a, Transport t) => a t -> IO Mutation
data TokenRange
TokenRange :: Maybe String -> Maybe String -> Maybe [String] -> TokenRange
f_TokenRange_start_token :: TokenRange -> Maybe String
f_TokenRange_end_token :: TokenRange -> Maybe String
f_TokenRange_endpoints :: TokenRange -> Maybe [String]
write_TokenRange :: (Protocol a, Transport t) => a t -> TokenRange -> IO ()
read_TokenRange_fields :: (Protocol a, Transport t) => a t -> TokenRange -> IO TokenRange
read_TokenRange :: (Protocol a, Transport t) => a t -> IO TokenRange
data AuthenticationRequest
AuthenticationRequest :: Maybe (Map String String) -> AuthenticationRequest
f_AuthenticationRequest_credentials :: AuthenticationRequest -> Maybe (Map String String)
write_AuthenticationRequest :: (Protocol a, Transport t) => a t -> AuthenticationRequest -> IO ()
read_AuthenticationRequest_fields :: (Protocol a, Transport t) => a t -> AuthenticationRequest -> IO AuthenticationRequest
read_AuthenticationRequest :: (Protocol a, Transport t) => a t -> IO AuthenticationRequest
data ColumnDef
ColumnDef :: Maybe ByteString -> Maybe String -> Maybe IndexType -> Maybe String -> ColumnDef
f_ColumnDef_name :: ColumnDef -> Maybe ByteString
f_ColumnDef_validation_class :: ColumnDef -> Maybe String
f_ColumnDef_index_type :: ColumnDef -> Maybe IndexType
f_ColumnDef_index_name :: ColumnDef -> Maybe String
write_ColumnDef :: (Protocol a, Transport t) => a t -> ColumnDef -> IO ()
read_ColumnDef_fields :: (Protocol a, Transport t) => a t -> ColumnDef -> IO ColumnDef
read_ColumnDef :: (Protocol a, Transport t) => a t -> IO ColumnDef
data CfDef
CfDef :: Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe Double -> Maybe Double -> Maybe Double -> Maybe [ColumnDef] -> Maybe Int32 -> Maybe String -> Maybe Int32 -> Maybe Int32 -> Maybe Int32 -> Maybe Int32 -> Maybe Int32 -> Maybe Int32 -> Maybe Int32 -> Maybe Double -> Maybe Bool -> Maybe Double -> Maybe String -> Maybe String -> Maybe ByteString -> CfDef
f_CfDef_keyspace :: CfDef -> Maybe String
f_CfDef_name :: CfDef -> Maybe String
f_CfDef_column_type :: CfDef -> Maybe String
f_CfDef_comparator_type :: CfDef -> Maybe String
f_CfDef_subcomparator_type :: CfDef -> Maybe String
f_CfDef_comment :: CfDef -> Maybe String
f_CfDef_row_cache_size :: CfDef -> Maybe Double
f_CfDef_key_cache_size :: CfDef -> Maybe Double
f_CfDef_read_repair_chance :: CfDef -> Maybe Double
f_CfDef_column_metadata :: CfDef -> Maybe [ColumnDef]
f_CfDef_gc_grace_seconds :: CfDef -> Maybe Int32
f_CfDef_default_validation_class :: CfDef -> Maybe String
f_CfDef_id :: CfDef -> Maybe Int32
f_CfDef_min_compaction_threshold :: CfDef -> Maybe Int32
f_CfDef_max_compaction_threshold :: CfDef -> Maybe Int32
f_CfDef_row_cache_save_period_in_seconds :: CfDef -> Maybe Int32
f_CfDef_key_cache_save_period_in_seconds :: CfDef -> Maybe Int32
f_CfDef_memtable_flush_after_mins :: CfDef -> Maybe Int32
f_CfDef_memtable_throughput_in_mb :: CfDef -> Maybe Int32
f_CfDef_memtable_operations_in_millions :: CfDef -> Maybe Double
f_CfDef_replicate_on_write :: CfDef -> Maybe Bool
f_CfDef_merge_shards_chance :: CfDef -> Maybe Double
f_CfDef_key_validation_class :: CfDef -> Maybe String
f_CfDef_row_cache_provider :: CfDef -> Maybe String
f_CfDef_key_alias :: CfDef -> Maybe ByteString
write_CfDef :: (Protocol a, Transport t) => a t -> CfDef -> IO ()
read_CfDef_fields :: (Protocol a, Transport t) => a t -> CfDef -> IO CfDef
read_CfDef :: (Protocol a, Transport t) => a t -> IO CfDef
data KsDef
KsDef :: Maybe String -> Maybe String -> Maybe (Map String String) -> Maybe Int32 -> Maybe [CfDef] -> Maybe Bool -> KsDef
f_KsDef_name :: KsDef -> Maybe String
f_KsDef_strategy_class :: KsDef -> Maybe String
f_KsDef_strategy_options :: KsDef -> Maybe (Map String String)
f_KsDef_replication_factor :: KsDef -> Maybe Int32
f_KsDef_cf_defs :: KsDef -> Maybe [CfDef]
f_KsDef_durable_writes :: KsDef -> Maybe Bool
write_KsDef :: (Protocol a, Transport t) => a t -> KsDef -> IO ()
read_KsDef_fields :: (Protocol a, Transport t) => a t -> KsDef -> IO KsDef
read_KsDef :: (Protocol a, Transport t) => a t -> IO KsDef
data CqlRow
CqlRow :: Maybe ByteString -> Maybe [Column] -> CqlRow
f_CqlRow_key :: CqlRow -> Maybe ByteString
f_CqlRow_columns :: CqlRow -> Maybe [Column]
write_CqlRow :: (Protocol a, Transport t) => a t -> CqlRow -> IO ()
read_CqlRow_fields :: (Protocol a, Transport t) => a t -> CqlRow -> IO CqlRow
read_CqlRow :: (Protocol a, Transport t) => a t -> IO CqlRow
data CqlResult
CqlResult :: Maybe CqlResultType -> Maybe [CqlRow] -> Maybe Int32 -> CqlResult
f_CqlResult_type :: CqlResult -> Maybe CqlResultType
f_CqlResult_rows :: CqlResult -> Maybe [CqlRow]
f_CqlResult_num :: CqlResult -> Maybe Int32
write_CqlResult :: (Protocol a, Transport t) => a t -> CqlResult -> IO ()
read_CqlResult_fields :: (Protocol a, Transport t) => a t -> CqlResult -> IO CqlResult
read_CqlResult :: (Protocol a, Transport t) => a t -> IO CqlResult
instance Typeable ConsistencyLevel
instance Typeable IndexOperator
instance Typeable IndexType
instance Typeable Compression
instance Typeable CqlResultType
instance Typeable Column
instance Typeable SuperColumn
instance Typeable CounterColumn
instance Typeable CounterSuperColumn
instance Typeable ColumnOrSuperColumn
instance Typeable NotFoundException
instance Typeable InvalidRequestException
instance Typeable UnavailableException
instance Typeable TimedOutException
instance Typeable AuthenticationException
instance Typeable AuthorizationException
instance Typeable SchemaDisagreementException
instance Typeable ColumnParent
instance Typeable ColumnPath
instance Typeable SliceRange
instance Typeable SlicePredicate
instance Typeable IndexExpression
instance Typeable IndexClause
instance Typeable KeyRange
instance Typeable KeySlice
instance Typeable KeyCount
instance Typeable Deletion
instance Typeable Mutation
instance Typeable TokenRange
instance Typeable AuthenticationRequest
instance Typeable ColumnDef
instance Typeable CfDef
instance Typeable KsDef
instance Typeable CqlRow
instance Typeable CqlResult
instance Show ConsistencyLevel
instance Eq ConsistencyLevel
instance Ord ConsistencyLevel
instance Show IndexOperator
instance Eq IndexOperator
instance Ord IndexOperator
instance Show IndexType
instance Eq IndexType
instance Ord IndexType
instance Show Compression
instance Eq Compression
instance Ord Compression
instance Show CqlResultType
instance Eq CqlResultType
instance Ord CqlResultType
instance Show Column
instance Eq Column
instance Ord Column
instance Show SuperColumn
instance Eq SuperColumn
instance Ord SuperColumn
instance Show CounterColumn
instance Eq CounterColumn
instance Ord CounterColumn
instance Show CounterSuperColumn
instance Eq CounterSuperColumn
instance Ord CounterSuperColumn
instance Show ColumnOrSuperColumn
instance Eq ColumnOrSuperColumn
instance Ord ColumnOrSuperColumn
instance Show NotFoundException
instance Eq NotFoundException
instance Ord NotFoundException
instance Show InvalidRequestException
instance Eq InvalidRequestException
instance Ord InvalidRequestException
instance Show UnavailableException
instance Eq UnavailableException
instance Ord UnavailableException
instance Show TimedOutException
instance Eq TimedOutException
instance Ord TimedOutException
instance Show AuthenticationException
instance Eq AuthenticationException
instance Ord AuthenticationException
instance Show AuthorizationException
instance Eq AuthorizationException
instance Ord AuthorizationException
instance Show SchemaDisagreementException
instance Eq SchemaDisagreementException
instance Ord SchemaDisagreementException
instance Show ColumnParent
instance Eq ColumnParent
instance Ord ColumnParent
instance Show ColumnPath
instance Eq ColumnPath
instance Ord ColumnPath
instance Show SliceRange
instance Eq SliceRange
instance Ord SliceRange
instance Show SlicePredicate
instance Eq SlicePredicate
instance Ord SlicePredicate
instance Show IndexExpression
instance Eq IndexExpression
instance Ord IndexExpression
instance Show IndexClause
instance Eq IndexClause
instance Ord IndexClause
instance Show KeyRange
instance Eq KeyRange
instance Ord KeyRange
instance Show KeySlice
instance Eq KeySlice
instance Ord KeySlice
instance Show KeyCount
instance Eq KeyCount
instance Ord KeyCount
instance Show Deletion
instance Eq Deletion
instance Ord Deletion
instance Show Mutation
instance Eq Mutation
instance Ord Mutation
instance Show TokenRange
instance Eq TokenRange
instance Ord TokenRange
instance Show AuthenticationRequest
instance Eq AuthenticationRequest
instance Ord AuthenticationRequest
instance Show ColumnDef
instance Eq ColumnDef
instance Ord ColumnDef
instance Show CfDef
instance Eq CfDef
instance Ord CfDef
instance Show KsDef
instance Eq KsDef
instance Ord KsDef
instance Show CqlRow
instance Eq CqlRow
instance Ord CqlRow
instance Show CqlResult
instance Eq CqlResult
instance Ord CqlResult
instance Exception SchemaDisagreementException
instance Exception AuthorizationException
instance Exception AuthenticationException
instance Exception TimedOutException
instance Exception UnavailableException
instance Exception InvalidRequestException
instance Exception NotFoundException
instance Enum CqlResultType
instance Enum Compression
instance Enum IndexType
instance Enum IndexOperator
instance Enum ConsistencyLevel

module Database.Cassandra.Thrift.Cassandra_Iface
class Cassandra_Iface a
login :: Cassandra_Iface a => a -> Maybe AuthenticationRequest -> IO ()
set_keyspace :: Cassandra_Iface a => a -> Maybe String -> IO ()
get :: Cassandra_Iface a => a -> Maybe ByteString -> Maybe ColumnPath -> Maybe ConsistencyLevel -> IO ColumnOrSuperColumn
get_slice :: Cassandra_Iface a => a -> Maybe ByteString -> Maybe ColumnParent -> Maybe SlicePredicate -> Maybe ConsistencyLevel -> IO [ColumnOrSuperColumn]
get_count :: Cassandra_Iface a => a -> Maybe ByteString -> Maybe ColumnParent -> Maybe SlicePredicate -> Maybe ConsistencyLevel -> IO Int32
multiget_slice :: Cassandra_Iface a => a -> Maybe [ByteString] -> Maybe ColumnParent -> Maybe SlicePredicate -> Maybe ConsistencyLevel -> IO (Map ByteString [ColumnOrSuperColumn])
multiget_count :: Cassandra_Iface a => a -> Maybe [ByteString] -> Maybe ColumnParent -> Maybe SlicePredicate -> Maybe ConsistencyLevel -> IO (Map ByteString Int32)
get_range_slices :: Cassandra_Iface a => a -> Maybe ColumnParent -> Maybe SlicePredicate -> Maybe KeyRange -> Maybe ConsistencyLevel -> IO [KeySlice]
get_indexed_slices :: Cassandra_Iface a => a -> Maybe ColumnParent -> Maybe IndexClause -> Maybe SlicePredicate -> Maybe ConsistencyLevel -> IO [KeySlice]
insert :: Cassandra_Iface a => a -> Maybe ByteString -> Maybe ColumnParent -> Maybe Column -> Maybe ConsistencyLevel -> IO ()
add :: Cassandra_Iface a => a -> Maybe ByteString -> Maybe ColumnParent -> Maybe CounterColumn -> Maybe ConsistencyLevel -> IO ()
remove :: Cassandra_Iface a => a -> Maybe ByteString -> Maybe ColumnPath -> Maybe Int64 -> Maybe ConsistencyLevel -> IO ()
remove_counter :: Cassandra_Iface a => a -> Maybe ByteString -> Maybe ColumnPath -> Maybe ConsistencyLevel -> IO ()
batch_mutate :: Cassandra_Iface a => a -> Maybe (Map ByteString (Map String [Mutation])) -> Maybe ConsistencyLevel -> IO ()
truncate :: Cassandra_Iface a => a -> Maybe String -> IO ()
describe_schema_versions :: Cassandra_Iface a => a -> IO (Map String [String])
describe_keyspaces :: Cassandra_Iface a => a -> IO [KsDef]
describe_cluster_name :: Cassandra_Iface a => a -> IO String
describe_version :: Cassandra_Iface a => a -> IO String
describe_ring :: Cassandra_Iface a => a -> Maybe String -> IO [TokenRange]
describe_partitioner :: Cassandra_Iface a => a -> IO String
describe_snitch :: Cassandra_Iface a => a -> IO String
describe_keyspace :: Cassandra_Iface a => a -> Maybe String -> IO KsDef
describe_splits :: Cassandra_Iface a => a -> Maybe String -> Maybe String -> Maybe String -> Maybe Int32 -> IO [String]
system_add_column_family :: Cassandra_Iface a => a -> Maybe CfDef -> IO String
system_drop_column_family :: Cassandra_Iface a => a -> Maybe String -> IO String
system_add_keyspace :: Cassandra_Iface a => a -> Maybe KsDef -> IO String
system_drop_keyspace :: Cassandra_Iface a => a -> Maybe String -> IO String
system_update_keyspace :: Cassandra_Iface a => a -> Maybe KsDef -> IO String
system_update_column_family :: Cassandra_Iface a => a -> Maybe CfDef -> IO String
execute_cql_query :: Cassandra_Iface a => a -> Maybe ByteString -> Maybe Compression -> IO CqlResult

module Database.Cassandra.Thrift.Cassandra_Consts
vERSION :: String

module Database.Cassandra.Thrift.Cassandra
data Login_args
Login_args :: Maybe AuthenticationRequest -> Login_args
f_Login_args_auth_request :: Login_args -> Maybe AuthenticationRequest
write_Login_args :: (Protocol a, Transport t) => a t -> Login_args -> IO ()
read_Login_args_fields :: (Protocol a, Transport t) => a t -> Login_args -> IO Login_args
read_Login_args :: (Protocol a, Transport t) => a t -> IO Login_args
data Login_result
Login_result :: Maybe AuthenticationException -> Maybe AuthorizationException -> Login_result
f_Login_result_authnx :: Login_result -> Maybe AuthenticationException
f_Login_result_authzx :: Login_result -> Maybe AuthorizationException
write_Login_result :: (Protocol a, Transport t) => a t -> Login_result -> IO ()
read_Login_result_fields :: (Protocol a, Transport t) => a t -> Login_result -> IO Login_result
read_Login_result :: (Protocol a, Transport t) => a t -> IO Login_result
data Set_keyspace_args
Set_keyspace_args :: Maybe String -> Set_keyspace_args
f_Set_keyspace_args_keyspace :: Set_keyspace_args -> Maybe String
write_Set_keyspace_args :: (Protocol a, Transport t) => a t -> Set_keyspace_args -> IO ()
read_Set_keyspace_args_fields :: (Protocol a, Transport t) => a t -> Set_keyspace_args -> IO Set_keyspace_args
read_Set_keyspace_args :: (Protocol a, Transport t) => a t -> IO Set_keyspace_args
data Set_keyspace_result
Set_keyspace_result :: Maybe InvalidRequestException -> Set_keyspace_result
f_Set_keyspace_result_ire :: Set_keyspace_result -> Maybe InvalidRequestException
write_Set_keyspace_result :: (Protocol a, Transport t) => a t -> Set_keyspace_result -> IO ()
read_Set_keyspace_result_fields :: (Protocol a, Transport t) => a t -> Set_keyspace_result -> IO Set_keyspace_result
read_Set_keyspace_result :: (Protocol a, Transport t) => a t -> IO Set_keyspace_result
data Get_args
Get_args :: Maybe ByteString -> Maybe ColumnPath -> Maybe ConsistencyLevel -> Get_args
f_Get_args_key :: Get_args -> Maybe ByteString
f_Get_args_column_path :: Get_args -> Maybe ColumnPath
f_Get_args_consistency_level :: Get_args -> Maybe ConsistencyLevel
write_Get_args :: (Protocol a, Transport t) => a t -> Get_args -> IO ()
read_Get_args_fields :: (Protocol a, Transport t) => a t -> Get_args -> IO Get_args
read_Get_args :: (Protocol a, Transport t) => a t -> IO Get_args
data Get_result
Get_result :: Maybe ColumnOrSuperColumn -> Maybe InvalidRequestException -> Maybe NotFoundException -> Maybe UnavailableException -> Maybe TimedOutException -> Get_result
f_Get_result_success :: Get_result -> Maybe ColumnOrSuperColumn
f_Get_result_ire :: Get_result -> Maybe InvalidRequestException
f_Get_result_nfe :: Get_result -> Maybe NotFoundException
f_Get_result_ue :: Get_result -> Maybe UnavailableException
f_Get_result_te :: Get_result -> Maybe TimedOutException
write_Get_result :: (Protocol a, Transport t) => a t -> Get_result -> IO ()
read_Get_result_fields :: (Protocol a, Transport t) => a t -> Get_result -> IO Get_result
read_Get_result :: (Protocol a, Transport t) => a t -> IO Get_result
data Get_slice_args
Get_slice_args :: Maybe ByteString -> Maybe ColumnParent -> Maybe SlicePredicate -> Maybe ConsistencyLevel -> Get_slice_args
f_Get_slice_args_key :: Get_slice_args -> Maybe ByteString
f_Get_slice_args_column_parent :: Get_slice_args -> Maybe ColumnParent
f_Get_slice_args_predicate :: Get_slice_args -> Maybe SlicePredicate
f_Get_slice_args_consistency_level :: Get_slice_args -> Maybe ConsistencyLevel
write_Get_slice_args :: (Protocol a, Transport t) => a t -> Get_slice_args -> IO ()
read_Get_slice_args_fields :: (Protocol a, Transport t) => a t -> Get_slice_args -> IO Get_slice_args
read_Get_slice_args :: (Protocol a, Transport t) => a t -> IO Get_slice_args
data Get_slice_result
Get_slice_result :: Maybe [ColumnOrSuperColumn] -> Maybe InvalidRequestException -> Maybe UnavailableException -> Maybe TimedOutException -> Get_slice_result
f_Get_slice_result_success :: Get_slice_result -> Maybe [ColumnOrSuperColumn]
f_Get_slice_result_ire :: Get_slice_result -> Maybe InvalidRequestException
f_Get_slice_result_ue :: Get_slice_result -> Maybe UnavailableException
f_Get_slice_result_te :: Get_slice_result -> Maybe TimedOutException
write_Get_slice_result :: (Protocol a, Transport t) => a t -> Get_slice_result -> IO ()
read_Get_slice_result_fields :: (Protocol a, Transport t) => a t -> Get_slice_result -> IO Get_slice_result
read_Get_slice_result :: (Protocol a, Transport t) => a t -> IO Get_slice_result
data Get_count_args
Get_count_args :: Maybe ByteString -> Maybe ColumnParent -> Maybe SlicePredicate -> Maybe ConsistencyLevel -> Get_count_args
f_Get_count_args_key :: Get_count_args -> Maybe ByteString
f_Get_count_args_column_parent :: Get_count_args -> Maybe ColumnParent
f_Get_count_args_predicate :: Get_count_args -> Maybe SlicePredicate
f_Get_count_args_consistency_level :: Get_count_args -> Maybe ConsistencyLevel
write_Get_count_args :: (Protocol a, Transport t) => a t -> Get_count_args -> IO ()
read_Get_count_args_fields :: (Protocol a, Transport t) => a t -> Get_count_args -> IO Get_count_args
read_Get_count_args :: (Protocol a, Transport t) => a t -> IO Get_count_args
data Get_count_result
Get_count_result :: Maybe Int32 -> Maybe InvalidRequestException -> Maybe UnavailableException -> Maybe TimedOutException -> Get_count_result
f_Get_count_result_success :: Get_count_result -> Maybe Int32
f_Get_count_result_ire :: Get_count_result -> Maybe InvalidRequestException
f_Get_count_result_ue :: Get_count_result -> Maybe UnavailableException
f_Get_count_result_te :: Get_count_result -> Maybe TimedOutException
write_Get_count_result :: (Protocol a, Transport t) => a t -> Get_count_result -> IO ()
read_Get_count_result_fields :: (Protocol a, Transport t) => a t -> Get_count_result -> IO Get_count_result
read_Get_count_result :: (Protocol a, Transport t) => a t -> IO Get_count_result
data Multiget_slice_args
Multiget_slice_args :: Maybe [ByteString] -> Maybe ColumnParent -> Maybe SlicePredicate -> Maybe ConsistencyLevel -> Multiget_slice_args
f_Multiget_slice_args_keys :: Multiget_slice_args -> Maybe [ByteString]
f_Multiget_slice_args_column_parent :: Multiget_slice_args -> Maybe ColumnParent
f_Multiget_slice_args_predicate :: Multiget_slice_args -> Maybe SlicePredicate
f_Multiget_slice_args_consistency_level :: Multiget_slice_args -> Maybe ConsistencyLevel
write_Multiget_slice_args :: (Protocol a, Transport t) => a t -> Multiget_slice_args -> IO ()
read_Multiget_slice_args_fields :: (Protocol a, Transport t) => a t -> Multiget_slice_args -> IO Multiget_slice_args
read_Multiget_slice_args :: (Protocol a, Transport t) => a t -> IO Multiget_slice_args
data Multiget_slice_result
Multiget_slice_result :: Maybe (Map ByteString [ColumnOrSuperColumn]) -> Maybe InvalidRequestException -> Maybe UnavailableException -> Maybe TimedOutException -> Multiget_slice_result
f_Multiget_slice_result_success :: Multiget_slice_result -> Maybe (Map ByteString [ColumnOrSuperColumn])
f_Multiget_slice_result_ire :: Multiget_slice_result -> Maybe InvalidRequestException
f_Multiget_slice_result_ue :: Multiget_slice_result -> Maybe UnavailableException
f_Multiget_slice_result_te :: Multiget_slice_result -> Maybe TimedOutException
write_Multiget_slice_result :: (Protocol a, Transport t) => a t -> Multiget_slice_result -> IO ()
read_Multiget_slice_result_fields :: (Protocol a, Transport t) => a t -> Multiget_slice_result -> IO Multiget_slice_result
read_Multiget_slice_result :: (Protocol a, Transport t) => a t -> IO Multiget_slice_result
data Multiget_count_args
Multiget_count_args :: Maybe [ByteString] -> Maybe ColumnParent -> Maybe SlicePredicate -> Maybe ConsistencyLevel -> Multiget_count_args
f_Multiget_count_args_keys :: Multiget_count_args -> Maybe [ByteString]
f_Multiget_count_args_column_parent :: Multiget_count_args -> Maybe ColumnParent
f_Multiget_count_args_predicate :: Multiget_count_args -> Maybe SlicePredicate
f_Multiget_count_args_consistency_level :: Multiget_count_args -> Maybe ConsistencyLevel
write_Multiget_count_args :: (Protocol a, Transport t) => a t -> Multiget_count_args -> IO ()
read_Multiget_count_args_fields :: (Protocol a, Transport t) => a t -> Multiget_count_args -> IO Multiget_count_args
read_Multiget_count_args :: (Protocol a, Transport t) => a t -> IO Multiget_count_args
data Multiget_count_result
Multiget_count_result :: Maybe (Map ByteString Int32) -> Maybe InvalidRequestException -> Maybe UnavailableException -> Maybe TimedOutException -> Multiget_count_result
f_Multiget_count_result_success :: Multiget_count_result -> Maybe (Map ByteString Int32)
f_Multiget_count_result_ire :: Multiget_count_result -> Maybe InvalidRequestException
f_Multiget_count_result_ue :: Multiget_count_result -> Maybe UnavailableException
f_Multiget_count_result_te :: Multiget_count_result -> Maybe TimedOutException
write_Multiget_count_result :: (Protocol a, Transport t) => a t -> Multiget_count_result -> IO ()
read_Multiget_count_result_fields :: (Protocol a, Transport t) => a t -> Multiget_count_result -> IO Multiget_count_result
read_Multiget_count_result :: (Protocol a, Transport t) => a t -> IO Multiget_count_result
data Get_range_slices_args
Get_range_slices_args :: Maybe ColumnParent -> Maybe SlicePredicate -> Maybe KeyRange -> Maybe ConsistencyLevel -> Get_range_slices_args
f_Get_range_slices_args_column_parent :: Get_range_slices_args -> Maybe ColumnParent
f_Get_range_slices_args_predicate :: Get_range_slices_args -> Maybe SlicePredicate
f_Get_range_slices_args_range :: Get_range_slices_args -> Maybe KeyRange
f_Get_range_slices_args_consistency_level :: Get_range_slices_args -> Maybe ConsistencyLevel
write_Get_range_slices_args :: (Protocol a, Transport t) => a t -> Get_range_slices_args -> IO ()
read_Get_range_slices_args_fields :: (Protocol a, Transport t) => a t -> Get_range_slices_args -> IO Get_range_slices_args
read_Get_range_slices_args :: (Protocol a, Transport t) => a t -> IO Get_range_slices_args
data Get_range_slices_result
Get_range_slices_result :: Maybe [KeySlice] -> Maybe InvalidRequestException -> Maybe UnavailableException -> Maybe TimedOutException -> Get_range_slices_result
f_Get_range_slices_result_success :: Get_range_slices_result -> Maybe [KeySlice]
f_Get_range_slices_result_ire :: Get_range_slices_result -> Maybe InvalidRequestException
f_Get_range_slices_result_ue :: Get_range_slices_result -> Maybe UnavailableException
f_Get_range_slices_result_te :: Get_range_slices_result -> Maybe TimedOutException
write_Get_range_slices_result :: (Protocol a, Transport t) => a t -> Get_range_slices_result -> IO ()
read_Get_range_slices_result_fields :: (Protocol a, Transport t) => a t -> Get_range_slices_result -> IO Get_range_slices_result
read_Get_range_slices_result :: (Protocol a, Transport t) => a t -> IO Get_range_slices_result
data Get_indexed_slices_args
Get_indexed_slices_args :: Maybe ColumnParent -> Maybe IndexClause -> Maybe SlicePredicate -> Maybe ConsistencyLevel -> Get_indexed_slices_args
f_Get_indexed_slices_args_column_parent :: Get_indexed_slices_args -> Maybe ColumnParent
f_Get_indexed_slices_args_index_clause :: Get_indexed_slices_args -> Maybe IndexClause
f_Get_indexed_slices_args_column_predicate :: Get_indexed_slices_args -> Maybe SlicePredicate
f_Get_indexed_slices_args_consistency_level :: Get_indexed_slices_args -> Maybe ConsistencyLevel
write_Get_indexed_slices_args :: (Protocol a, Transport t) => a t -> Get_indexed_slices_args -> IO ()
read_Get_indexed_slices_args_fields :: (Protocol a, Transport t) => a t -> Get_indexed_slices_args -> IO Get_indexed_slices_args
read_Get_indexed_slices_args :: (Protocol a, Transport t) => a t -> IO Get_indexed_slices_args
data Get_indexed_slices_result
Get_indexed_slices_result :: Maybe [KeySlice] -> Maybe InvalidRequestException -> Maybe UnavailableException -> Maybe TimedOutException -> Get_indexed_slices_result
f_Get_indexed_slices_result_success :: Get_indexed_slices_result -> Maybe [KeySlice]
f_Get_indexed_slices_result_ire :: Get_indexed_slices_result -> Maybe InvalidRequestException
f_Get_indexed_slices_result_ue :: Get_indexed_slices_result -> Maybe UnavailableException
f_Get_indexed_slices_result_te :: Get_indexed_slices_result -> Maybe TimedOutException
write_Get_indexed_slices_result :: (Protocol a, Transport t) => a t -> Get_indexed_slices_result -> IO ()
read_Get_indexed_slices_result_fields :: (Protocol a, Transport t) => a t -> Get_indexed_slices_result -> IO Get_indexed_slices_result
read_Get_indexed_slices_result :: (Protocol a, Transport t) => a t -> IO Get_indexed_slices_result
data Insert_args
Insert_args :: Maybe ByteString -> Maybe ColumnParent -> Maybe Column -> Maybe ConsistencyLevel -> Insert_args
f_Insert_args_key :: Insert_args -> Maybe ByteString
f_Insert_args_column_parent :: Insert_args -> Maybe ColumnParent
f_Insert_args_column :: Insert_args -> Maybe Column
f_Insert_args_consistency_level :: Insert_args -> Maybe ConsistencyLevel
write_Insert_args :: (Protocol a, Transport t) => a t -> Insert_args -> IO ()
read_Insert_args_fields :: (Protocol a, Transport t) => a t -> Insert_args -> IO Insert_args
read_Insert_args :: (Protocol a, Transport t) => a t -> IO Insert_args
data Insert_result
Insert_result :: Maybe InvalidRequestException -> Maybe UnavailableException -> Maybe TimedOutException -> Insert_result
f_Insert_result_ire :: Insert_result -> Maybe InvalidRequestException
f_Insert_result_ue :: Insert_result -> Maybe UnavailableException
f_Insert_result_te :: Insert_result -> Maybe TimedOutException
write_Insert_result :: (Protocol a, Transport t) => a t -> Insert_result -> IO ()
read_Insert_result_fields :: (Protocol a, Transport t) => a t -> Insert_result -> IO Insert_result
read_Insert_result :: (Protocol a, Transport t) => a t -> IO Insert_result
data Add_args
Add_args :: Maybe ByteString -> Maybe ColumnParent -> Maybe CounterColumn -> Maybe ConsistencyLevel -> Add_args
f_Add_args_key :: Add_args -> Maybe ByteString
f_Add_args_column_parent :: Add_args -> Maybe ColumnParent
f_Add_args_column :: Add_args -> Maybe CounterColumn
f_Add_args_consistency_level :: Add_args -> Maybe ConsistencyLevel
write_Add_args :: (Protocol a, Transport t) => a t -> Add_args -> IO ()
read_Add_args_fields :: (Protocol a, Transport t) => a t -> Add_args -> IO Add_args
read_Add_args :: (Protocol a, Transport t) => a t -> IO Add_args
data Add_result
Add_result :: Maybe InvalidRequestException -> Maybe UnavailableException -> Maybe TimedOutException -> Add_result
f_Add_result_ire :: Add_result -> Maybe InvalidRequestException
f_Add_result_ue :: Add_result -> Maybe UnavailableException
f_Add_result_te :: Add_result -> Maybe TimedOutException
write_Add_result :: (Protocol a, Transport t) => a t -> Add_result -> IO ()
read_Add_result_fields :: (Protocol a, Transport t) => a t -> Add_result -> IO Add_result
read_Add_result :: (Protocol a, Transport t) => a t -> IO Add_result
data Remove_args
Remove_args :: Maybe ByteString -> Maybe ColumnPath -> Maybe Int64 -> Maybe ConsistencyLevel -> Remove_args
f_Remove_args_key :: Remove_args -> Maybe ByteString
f_Remove_args_column_path :: Remove_args -> Maybe ColumnPath
f_Remove_args_timestamp :: Remove_args -> Maybe Int64
f_Remove_args_consistency_level :: Remove_args -> Maybe ConsistencyLevel
write_Remove_args :: (Protocol a, Transport t) => a t -> Remove_args -> IO ()
read_Remove_args_fields :: (Protocol a, Transport t) => a t -> Remove_args -> IO Remove_args
read_Remove_args :: (Protocol a, Transport t) => a t -> IO Remove_args
data Remove_result
Remove_result :: Maybe InvalidRequestException -> Maybe UnavailableException -> Maybe TimedOutException -> Remove_result
f_Remove_result_ire :: Remove_result -> Maybe InvalidRequestException
f_Remove_result_ue :: Remove_result -> Maybe UnavailableException
f_Remove_result_te :: Remove_result -> Maybe TimedOutException
write_Remove_result :: (Protocol a, Transport t) => a t -> Remove_result -> IO ()
read_Remove_result_fields :: (Protocol a, Transport t) => a t -> Remove_result -> IO Remove_result
read_Remove_result :: (Protocol a, Transport t) => a t -> IO Remove_result
data Remove_counter_args
Remove_counter_args :: Maybe ByteString -> Maybe ColumnPath -> Maybe ConsistencyLevel -> Remove_counter_args
f_Remove_counter_args_key :: Remove_counter_args -> Maybe ByteString
f_Remove_counter_args_path :: Remove_counter_args -> Maybe ColumnPath
f_Remove_counter_args_consistency_level :: Remove_counter_args -> Maybe ConsistencyLevel
write_Remove_counter_args :: (Protocol a, Transport t) => a t -> Remove_counter_args -> IO ()
read_Remove_counter_args_fields :: (Protocol a, Transport t) => a t -> Remove_counter_args -> IO Remove_counter_args
read_Remove_counter_args :: (Protocol a, Transport t) => a t -> IO Remove_counter_args
data Remove_counter_result
Remove_counter_result :: Maybe InvalidRequestException -> Maybe UnavailableException -> Maybe TimedOutException -> Remove_counter_result
f_Remove_counter_result_ire :: Remove_counter_result -> Maybe InvalidRequestException
f_Remove_counter_result_ue :: Remove_counter_result -> Maybe UnavailableException
f_Remove_counter_result_te :: Remove_counter_result -> Maybe TimedOutException
write_Remove_counter_result :: (Protocol a, Transport t) => a t -> Remove_counter_result -> IO ()
read_Remove_counter_result_fields :: (Protocol a, Transport t) => a t -> Remove_counter_result -> IO Remove_counter_result
read_Remove_counter_result :: (Protocol a, Transport t) => a t -> IO Remove_counter_result
data Batch_mutate_args
Batch_mutate_args :: Maybe (Map ByteString (Map String [Mutation])) -> Maybe ConsistencyLevel -> Batch_mutate_args
f_Batch_mutate_args_mutation_map :: Batch_mutate_args -> Maybe (Map ByteString (Map String [Mutation]))
f_Batch_mutate_args_consistency_level :: Batch_mutate_args -> Maybe ConsistencyLevel
write_Batch_mutate_args :: (Protocol a, Transport t) => a t -> Batch_mutate_args -> IO ()
read_Batch_mutate_args_fields :: (Protocol a, Transport t) => a t -> Batch_mutate_args -> IO Batch_mutate_args
read_Batch_mutate_args :: (Protocol a, Transport t) => a t -> IO Batch_mutate_args
data Batch_mutate_result
Batch_mutate_result :: Maybe InvalidRequestException -> Maybe UnavailableException -> Maybe TimedOutException -> Batch_mutate_result
f_Batch_mutate_result_ire :: Batch_mutate_result -> Maybe InvalidRequestException
f_Batch_mutate_result_ue :: Batch_mutate_result -> Maybe UnavailableException
f_Batch_mutate_result_te :: Batch_mutate_result -> Maybe TimedOutException
write_Batch_mutate_result :: (Protocol a, Transport t) => a t -> Batch_mutate_result -> IO ()
read_Batch_mutate_result_fields :: (Protocol a, Transport t) => a t -> Batch_mutate_result -> IO Batch_mutate_result
read_Batch_mutate_result :: (Protocol a, Transport t) => a t -> IO Batch_mutate_result
data Truncate_args
Truncate_args :: Maybe String -> Truncate_args
f_Truncate_args_cfname :: Truncate_args -> Maybe String
write_Truncate_args :: (Protocol a, Transport t) => a t -> Truncate_args -> IO ()
read_Truncate_args_fields :: (Protocol a, Transport t) => a t -> Truncate_args -> IO Truncate_args
read_Truncate_args :: (Protocol a, Transport t) => a t -> IO Truncate_args
data Truncate_result
Truncate_result :: Maybe InvalidRequestException -> Maybe UnavailableException -> Truncate_result
f_Truncate_result_ire :: Truncate_result -> Maybe InvalidRequestException
f_Truncate_result_ue :: Truncate_result -> Maybe UnavailableException
write_Truncate_result :: (Protocol a, Transport t) => a t -> Truncate_result -> IO ()
read_Truncate_result_fields :: (Protocol a, Transport t) => a t -> Truncate_result -> IO Truncate_result
read_Truncate_result :: (Protocol a, Transport t) => a t -> IO Truncate_result
data Describe_schema_versions_args
Describe_schema_versions_args :: Describe_schema_versions_args
write_Describe_schema_versions_args :: (Protocol a, Transport t1) => a t1 -> t -> IO ()
read_Describe_schema_versions_args_fields :: (Protocol a, Transport t) => a t -> b -> IO b
read_Describe_schema_versions_args :: (Protocol a, Transport t) => a t -> IO Describe_schema_versions_args
data Describe_schema_versions_result
Describe_schema_versions_result :: Maybe (Map String [String]) -> Maybe InvalidRequestException -> Describe_schema_versions_result
f_Describe_schema_versions_result_success :: Describe_schema_versions_result -> Maybe (Map String [String])
f_Describe_schema_versions_result_ire :: Describe_schema_versions_result -> Maybe InvalidRequestException
write_Describe_schema_versions_result :: (Protocol a, Transport t) => a t -> Describe_schema_versions_result -> IO ()
read_Describe_schema_versions_result_fields :: (Protocol a, Transport t) => a t -> Describe_schema_versions_result -> IO Describe_schema_versions_result
read_Describe_schema_versions_result :: (Protocol a, Transport t) => a t -> IO Describe_schema_versions_result
data Describe_keyspaces_args
Describe_keyspaces_args :: Describe_keyspaces_args
write_Describe_keyspaces_args :: (Protocol a, Transport t1) => a t1 -> t -> IO ()
read_Describe_keyspaces_args_fields :: (Protocol a, Transport t) => a t -> b -> IO b
read_Describe_keyspaces_args :: (Protocol a, Transport t) => a t -> IO Describe_keyspaces_args
data Describe_keyspaces_result
Describe_keyspaces_result :: Maybe [KsDef] -> Maybe InvalidRequestException -> Describe_keyspaces_result
f_Describe_keyspaces_result_success :: Describe_keyspaces_result -> Maybe [KsDef]
f_Describe_keyspaces_result_ire :: Describe_keyspaces_result -> Maybe InvalidRequestException
write_Describe_keyspaces_result :: (Protocol a, Transport t) => a t -> Describe_keyspaces_result -> IO ()
read_Describe_keyspaces_result_fields :: (Protocol a, Transport t) => a t -> Describe_keyspaces_result -> IO Describe_keyspaces_result
read_Describe_keyspaces_result :: (Protocol a, Transport t) => a t -> IO Describe_keyspaces_result
data Describe_cluster_name_args
Describe_cluster_name_args :: Describe_cluster_name_args
write_Describe_cluster_name_args :: (Protocol a, Transport t1) => a t1 -> t -> IO ()
read_Describe_cluster_name_args_fields :: (Protocol a, Transport t) => a t -> b -> IO b
read_Describe_cluster_name_args :: (Protocol a, Transport t) => a t -> IO Describe_cluster_name_args
data Describe_cluster_name_result
Describe_cluster_name_result :: Maybe String -> Describe_cluster_name_result
f_Describe_cluster_name_result_success :: Describe_cluster_name_result -> Maybe String
write_Describe_cluster_name_result :: (Protocol a, Transport t) => a t -> Describe_cluster_name_result -> IO ()
read_Describe_cluster_name_result_fields :: (Protocol a, Transport t) => a t -> Describe_cluster_name_result -> IO Describe_cluster_name_result
read_Describe_cluster_name_result :: (Protocol a, Transport t) => a t -> IO Describe_cluster_name_result
data Describe_version_args
Describe_version_args :: Describe_version_args
write_Describe_version_args :: (Protocol a, Transport t1) => a t1 -> t -> IO ()
read_Describe_version_args_fields :: (Protocol a, Transport t) => a t -> b -> IO b
read_Describe_version_args :: (Protocol a, Transport t) => a t -> IO Describe_version_args
data Describe_version_result
Describe_version_result :: Maybe String -> Describe_version_result
f_Describe_version_result_success :: Describe_version_result -> Maybe String
write_Describe_version_result :: (Protocol a, Transport t) => a t -> Describe_version_result -> IO ()
read_Describe_version_result_fields :: (Protocol a, Transport t) => a t -> Describe_version_result -> IO Describe_version_result
read_Describe_version_result :: (Protocol a, Transport t) => a t -> IO Describe_version_result
data Describe_ring_args
Describe_ring_args :: Maybe String -> Describe_ring_args
f_Describe_ring_args_keyspace :: Describe_ring_args -> Maybe String
write_Describe_ring_args :: (Protocol a, Transport t) => a t -> Describe_ring_args -> IO ()
read_Describe_ring_args_fields :: (Protocol a, Transport t) => a t -> Describe_ring_args -> IO Describe_ring_args
read_Describe_ring_args :: (Protocol a, Transport t) => a t -> IO Describe_ring_args
data Describe_ring_result
Describe_ring_result :: Maybe [TokenRange] -> Maybe InvalidRequestException -> Describe_ring_result
f_Describe_ring_result_success :: Describe_ring_result -> Maybe [TokenRange]
f_Describe_ring_result_ire :: Describe_ring_result -> Maybe InvalidRequestException
write_Describe_ring_result :: (Protocol a, Transport t) => a t -> Describe_ring_result -> IO ()
read_Describe_ring_result_fields :: (Protocol a, Transport t) => a t -> Describe_ring_result -> IO Describe_ring_result
read_Describe_ring_result :: (Protocol a, Transport t) => a t -> IO Describe_ring_result
data Describe_partitioner_args
Describe_partitioner_args :: Describe_partitioner_args
write_Describe_partitioner_args :: (Protocol a, Transport t1) => a t1 -> t -> IO ()
read_Describe_partitioner_args_fields :: (Protocol a, Transport t) => a t -> b -> IO b
read_Describe_partitioner_args :: (Protocol a, Transport t) => a t -> IO Describe_partitioner_args
data Describe_partitioner_result
Describe_partitioner_result :: Maybe String -> Describe_partitioner_result
f_Describe_partitioner_result_success :: Describe_partitioner_result -> Maybe String
write_Describe_partitioner_result :: (Protocol a, Transport t) => a t -> Describe_partitioner_result -> IO ()
read_Describe_partitioner_result_fields :: (Protocol a, Transport t) => a t -> Describe_partitioner_result -> IO Describe_partitioner_result
read_Describe_partitioner_result :: (Protocol a, Transport t) => a t -> IO Describe_partitioner_result
data Describe_snitch_args
Describe_snitch_args :: Describe_snitch_args
write_Describe_snitch_args :: (Protocol a, Transport t1) => a t1 -> t -> IO ()
read_Describe_snitch_args_fields :: (Protocol a, Transport t) => a t -> b -> IO b
read_Describe_snitch_args :: (Protocol a, Transport t) => a t -> IO Describe_snitch_args
data Describe_snitch_result
Describe_snitch_result :: Maybe String -> Describe_snitch_result
f_Describe_snitch_result_success :: Describe_snitch_result -> Maybe String
write_Describe_snitch_result :: (Protocol a, Transport t) => a t -> Describe_snitch_result -> IO ()
read_Describe_snitch_result_fields :: (Protocol a, Transport t) => a t -> Describe_snitch_result -> IO Describe_snitch_result
read_Describe_snitch_result :: (Protocol a, Transport t) => a t -> IO Describe_snitch_result
data Describe_keyspace_args
Describe_keyspace_args :: Maybe String -> Describe_keyspace_args
f_Describe_keyspace_args_keyspace :: Describe_keyspace_args -> Maybe String
write_Describe_keyspace_args :: (Protocol a, Transport t) => a t -> Describe_keyspace_args -> IO ()
read_Describe_keyspace_args_fields :: (Protocol a, Transport t) => a t -> Describe_keyspace_args -> IO Describe_keyspace_args
read_Describe_keyspace_args :: (Protocol a, Transport t) => a t -> IO Describe_keyspace_args
data Describe_keyspace_result
Describe_keyspace_result :: Maybe KsDef -> Maybe NotFoundException -> Maybe InvalidRequestException -> Describe_keyspace_result
f_Describe_keyspace_result_success :: Describe_keyspace_result -> Maybe KsDef
f_Describe_keyspace_result_nfe :: Describe_keyspace_result -> Maybe NotFoundException
f_Describe_keyspace_result_ire :: Describe_keyspace_result -> Maybe InvalidRequestException
write_Describe_keyspace_result :: (Protocol a, Transport t) => a t -> Describe_keyspace_result -> IO ()
read_Describe_keyspace_result_fields :: (Protocol a, Transport t) => a t -> Describe_keyspace_result -> IO Describe_keyspace_result
read_Describe_keyspace_result :: (Protocol a, Transport t) => a t -> IO Describe_keyspace_result
data Describe_splits_args
Describe_splits_args :: Maybe String -> Maybe String -> Maybe String -> Maybe Int32 -> Describe_splits_args
f_Describe_splits_args_cfName :: Describe_splits_args -> Maybe String
f_Describe_splits_args_start_token :: Describe_splits_args -> Maybe String
f_Describe_splits_args_end_token :: Describe_splits_args -> Maybe String
f_Describe_splits_args_keys_per_split :: Describe_splits_args -> Maybe Int32
write_Describe_splits_args :: (Protocol a, Transport t) => a t -> Describe_splits_args -> IO ()
read_Describe_splits_args_fields :: (Protocol a, Transport t) => a t -> Describe_splits_args -> IO Describe_splits_args
read_Describe_splits_args :: (Protocol a, Transport t) => a t -> IO Describe_splits_args
data Describe_splits_result
Describe_splits_result :: Maybe [String] -> Maybe InvalidRequestException -> Describe_splits_result
f_Describe_splits_result_success :: Describe_splits_result -> Maybe [String]
f_Describe_splits_result_ire :: Describe_splits_result -> Maybe InvalidRequestException
write_Describe_splits_result :: (Protocol a, Transport t) => a t -> Describe_splits_result -> IO ()
read_Describe_splits_result_fields :: (Protocol a, Transport t) => a t -> Describe_splits_result -> IO Describe_splits_result
read_Describe_splits_result :: (Protocol a, Transport t) => a t -> IO Describe_splits_result
data System_add_column_family_args
System_add_column_family_args :: Maybe CfDef -> System_add_column_family_args
f_System_add_column_family_args_cf_def :: System_add_column_family_args -> Maybe CfDef
write_System_add_column_family_args :: (Protocol a, Transport t) => a t -> System_add_column_family_args -> IO ()
read_System_add_column_family_args_fields :: (Protocol a, Transport t) => a t -> System_add_column_family_args -> IO System_add_column_family_args
read_System_add_column_family_args :: (Protocol a, Transport t) => a t -> IO System_add_column_family_args
data System_add_column_family_result
System_add_column_family_result :: Maybe String -> Maybe InvalidRequestException -> Maybe SchemaDisagreementException -> System_add_column_family_result
f_System_add_column_family_result_success :: System_add_column_family_result -> Maybe String
f_System_add_column_family_result_ire :: System_add_column_family_result -> Maybe InvalidRequestException
f_System_add_column_family_result_sde :: System_add_column_family_result -> Maybe SchemaDisagreementException
write_System_add_column_family_result :: (Protocol a, Transport t) => a t -> System_add_column_family_result -> IO ()
read_System_add_column_family_result_fields :: (Protocol a, Transport t) => a t -> System_add_column_family_result -> IO System_add_column_family_result
read_System_add_column_family_result :: (Protocol a, Transport t) => a t -> IO System_add_column_family_result
data System_drop_column_family_args
System_drop_column_family_args :: Maybe String -> System_drop_column_family_args
f_System_drop_column_family_args_column_family :: System_drop_column_family_args -> Maybe String
write_System_drop_column_family_args :: (Protocol a, Transport t) => a t -> System_drop_column_family_args -> IO ()
read_System_drop_column_family_args_fields :: (Protocol a, Transport t) => a t -> System_drop_column_family_args -> IO System_drop_column_family_args
read_System_drop_column_family_args :: (Protocol a, Transport t) => a t -> IO System_drop_column_family_args
data System_drop_column_family_result
System_drop_column_family_result :: Maybe String -> Maybe InvalidRequestException -> Maybe SchemaDisagreementException -> System_drop_column_family_result
f_System_drop_column_family_result_success :: System_drop_column_family_result -> Maybe String
f_System_drop_column_family_result_ire :: System_drop_column_family_result -> Maybe InvalidRequestException
f_System_drop_column_family_result_sde :: System_drop_column_family_result -> Maybe SchemaDisagreementException
write_System_drop_column_family_result :: (Protocol a, Transport t) => a t -> System_drop_column_family_result -> IO ()
read_System_drop_column_family_result_fields :: (Protocol a, Transport t) => a t -> System_drop_column_family_result -> IO System_drop_column_family_result
read_System_drop_column_family_result :: (Protocol a, Transport t) => a t -> IO System_drop_column_family_result
data System_add_keyspace_args
System_add_keyspace_args :: Maybe KsDef -> System_add_keyspace_args
f_System_add_keyspace_args_ks_def :: System_add_keyspace_args -> Maybe KsDef
write_System_add_keyspace_args :: (Protocol a, Transport t) => a t -> System_add_keyspace_args -> IO ()
read_System_add_keyspace_args_fields :: (Protocol a, Transport t) => a t -> System_add_keyspace_args -> IO System_add_keyspace_args
read_System_add_keyspace_args :: (Protocol a, Transport t) => a t -> IO System_add_keyspace_args
data System_add_keyspace_result
System_add_keyspace_result :: Maybe String -> Maybe InvalidRequestException -> Maybe SchemaDisagreementException -> System_add_keyspace_result
f_System_add_keyspace_result_success :: System_add_keyspace_result -> Maybe String
f_System_add_keyspace_result_ire :: System_add_keyspace_result -> Maybe InvalidRequestException
f_System_add_keyspace_result_sde :: System_add_keyspace_result -> Maybe SchemaDisagreementException
write_System_add_keyspace_result :: (Protocol a, Transport t) => a t -> System_add_keyspace_result -> IO ()
read_System_add_keyspace_result_fields :: (Protocol a, Transport t) => a t -> System_add_keyspace_result -> IO System_add_keyspace_result
read_System_add_keyspace_result :: (Protocol a, Transport t) => a t -> IO System_add_keyspace_result
data System_drop_keyspace_args
System_drop_keyspace_args :: Maybe String -> System_drop_keyspace_args
f_System_drop_keyspace_args_keyspace :: System_drop_keyspace_args -> Maybe String
write_System_drop_keyspace_args :: (Protocol a, Transport t) => a t -> System_drop_keyspace_args -> IO ()
read_System_drop_keyspace_args_fields :: (Protocol a, Transport t) => a t -> System_drop_keyspace_args -> IO System_drop_keyspace_args
read_System_drop_keyspace_args :: (Protocol a, Transport t) => a t -> IO System_drop_keyspace_args
data System_drop_keyspace_result
System_drop_keyspace_result :: Maybe String -> Maybe InvalidRequestException -> Maybe SchemaDisagreementException -> System_drop_keyspace_result
f_System_drop_keyspace_result_success :: System_drop_keyspace_result -> Maybe String
f_System_drop_keyspace_result_ire :: System_drop_keyspace_result -> Maybe InvalidRequestException
f_System_drop_keyspace_result_sde :: System_drop_keyspace_result -> Maybe SchemaDisagreementException
write_System_drop_keyspace_result :: (Protocol a, Transport t) => a t -> System_drop_keyspace_result -> IO ()
read_System_drop_keyspace_result_fields :: (Protocol a, Transport t) => a t -> System_drop_keyspace_result -> IO System_drop_keyspace_result
read_System_drop_keyspace_result :: (Protocol a, Transport t) => a t -> IO System_drop_keyspace_result
data System_update_keyspace_args
System_update_keyspace_args :: Maybe KsDef -> System_update_keyspace_args
f_System_update_keyspace_args_ks_def :: System_update_keyspace_args -> Maybe KsDef
write_System_update_keyspace_args :: (Protocol a, Transport t) => a t -> System_update_keyspace_args -> IO ()
read_System_update_keyspace_args_fields :: (Protocol a, Transport t) => a t -> System_update_keyspace_args -> IO System_update_keyspace_args
read_System_update_keyspace_args :: (Protocol a, Transport t) => a t -> IO System_update_keyspace_args
data System_update_keyspace_result
System_update_keyspace_result :: Maybe String -> Maybe InvalidRequestException -> Maybe SchemaDisagreementException -> System_update_keyspace_result
f_System_update_keyspace_result_success :: System_update_keyspace_result -> Maybe String
f_System_update_keyspace_result_ire :: System_update_keyspace_result -> Maybe InvalidRequestException
f_System_update_keyspace_result_sde :: System_update_keyspace_result -> Maybe SchemaDisagreementException
write_System_update_keyspace_result :: (Protocol a, Transport t) => a t -> System_update_keyspace_result -> IO ()
read_System_update_keyspace_result_fields :: (Protocol a, Transport t) => a t -> System_update_keyspace_result -> IO System_update_keyspace_result
read_System_update_keyspace_result :: (Protocol a, Transport t) => a t -> IO System_update_keyspace_result
data System_update_column_family_args
System_update_column_family_args :: Maybe CfDef -> System_update_column_family_args
f_System_update_column_family_args_cf_def :: System_update_column_family_args -> Maybe CfDef
write_System_update_column_family_args :: (Protocol a, Transport t) => a t -> System_update_column_family_args -> IO ()
read_System_update_column_family_args_fields :: (Protocol a, Transport t) => a t -> System_update_column_family_args -> IO System_update_column_family_args
read_System_update_column_family_args :: (Protocol a, Transport t) => a t -> IO System_update_column_family_args
data System_update_column_family_result
System_update_column_family_result :: Maybe String -> Maybe InvalidRequestException -> Maybe SchemaDisagreementException -> System_update_column_family_result
f_System_update_column_family_result_success :: System_update_column_family_result -> Maybe String
f_System_update_column_family_result_ire :: System_update_column_family_result -> Maybe InvalidRequestException
f_System_update_column_family_result_sde :: System_update_column_family_result -> Maybe SchemaDisagreementException
write_System_update_column_family_result :: (Protocol a, Transport t) => a t -> System_update_column_family_result -> IO ()
read_System_update_column_family_result_fields :: (Protocol a, Transport t) => a t -> System_update_column_family_result -> IO System_update_column_family_result
read_System_update_column_family_result :: (Protocol a, Transport t) => a t -> IO System_update_column_family_result
data Execute_cql_query_args
Execute_cql_query_args :: Maybe ByteString -> Maybe Compression -> Execute_cql_query_args
f_Execute_cql_query_args_query :: Execute_cql_query_args -> Maybe ByteString
f_Execute_cql_query_args_compression :: Execute_cql_query_args -> Maybe Compression
write_Execute_cql_query_args :: (Protocol a, Transport t) => a t -> Execute_cql_query_args -> IO ()
read_Execute_cql_query_args_fields :: (Protocol a, Transport t) => a t -> Execute_cql_query_args -> IO Execute_cql_query_args
read_Execute_cql_query_args :: (Protocol a, Transport t) => a t -> IO Execute_cql_query_args
data Execute_cql_query_result
Execute_cql_query_result :: Maybe CqlResult -> Maybe InvalidRequestException -> Maybe UnavailableException -> Maybe TimedOutException -> Maybe SchemaDisagreementException -> Execute_cql_query_result
f_Execute_cql_query_result_success :: Execute_cql_query_result -> Maybe CqlResult
f_Execute_cql_query_result_ire :: Execute_cql_query_result -> Maybe InvalidRequestException
f_Execute_cql_query_result_ue :: Execute_cql_query_result -> Maybe UnavailableException
f_Execute_cql_query_result_te :: Execute_cql_query_result -> Maybe TimedOutException
f_Execute_cql_query_result_sde :: Execute_cql_query_result -> Maybe SchemaDisagreementException
write_Execute_cql_query_result :: (Protocol a, Transport t) => a t -> Execute_cql_query_result -> IO ()
read_Execute_cql_query_result_fields :: (Protocol a, Transport t) => a t -> Execute_cql_query_result -> IO Execute_cql_query_result
read_Execute_cql_query_result :: (Protocol a, Transport t) => a t -> IO Execute_cql_query_result
process_login :: (Protocol a, Protocol a3, Transport t, Transport a2, Cassandra_Iface a1) => (Int32, a t, a3 a2, a1) -> IO ()
process_set_keyspace :: (Protocol a, Protocol a3, Transport t, Transport a2, Cassandra_Iface a1) => (Int32, a t, a3 a2, a1) -> IO ()
process_get :: (Protocol a, Protocol a3, Transport t, Transport a2, Cassandra_Iface a1) => (Int32, a t, a3 a2, a1) -> IO ()
process_get_slice :: (Protocol a, Protocol a3, Transport t, Transport a2, Cassandra_Iface a1) => (Int32, a t, a3 a2, a1) -> IO ()
process_get_count :: (Protocol a, Protocol a3, Transport t, Transport a2, Cassandra_Iface a1) => (Int32, a t, a3 a2, a1) -> IO ()
process_multiget_slice :: (Protocol a, Protocol a3, Transport t, Transport a2, Cassandra_Iface a1) => (Int32, a t, a3 a2, a1) -> IO ()
process_multiget_count :: (Protocol a, Protocol a3, Transport t, Transport a2, Cassandra_Iface a1) => (Int32, a t, a3 a2, a1) -> IO ()
process_get_range_slices :: (Protocol a, Protocol a3, Transport t, Transport a2, Cassandra_Iface a1) => (Int32, a t, a3 a2, a1) -> IO ()
process_get_indexed_slices :: (Protocol a, Protocol a3, Transport t, Transport a2, Cassandra_Iface a1) => (Int32, a t, a3 a2, a1) -> IO ()
process_insert :: (Protocol a, Protocol a3, Transport t, Transport a2, Cassandra_Iface a1) => (Int32, a t, a3 a2, a1) -> IO ()
process_add :: (Protocol a, Protocol a3, Transport t, Transport a2, Cassandra_Iface a1) => (Int32, a t, a3 a2, a1) -> IO ()
process_remove :: (Protocol a, Protocol a3, Transport t, Transport a2, Cassandra_Iface a1) => (Int32, a t, a3 a2, a1) -> IO ()
process_remove_counter :: (Protocol a, Protocol a3, Transport t, Transport a2, Cassandra_Iface a1) => (Int32, a t, a3 a2, a1) -> IO ()
process_batch_mutate :: (Protocol a, Protocol a3, Transport t, Transport a2, Cassandra_Iface a1) => (Int32, a t, a3 a2, a1) -> IO ()
process_truncate :: (Protocol a, Protocol a3, Transport t, Transport a2, Cassandra_Iface a1) => (Int32, a t, a3 a2, a1) -> IO ()
process_describe_schema_versions :: (Protocol a, Protocol a3, Transport t, Transport a2, Cassandra_Iface a1) => (Int32, a t, a3 a2, a1) -> IO ()
process_describe_keyspaces :: (Protocol a, Protocol a3, Transport t, Transport a2, Cassandra_Iface a1) => (Int32, a t, a3 a2, a1) -> IO ()
process_describe_cluster_name :: (Protocol a, Protocol a3, Transport t, Transport a2, Cassandra_Iface a1) => (Int32, a t, a3 a2, a1) -> IO ()
process_describe_version :: (Protocol a, Protocol a3, Transport t, Transport a2, Cassandra_Iface a1) => (Int32, a t, a3 a2, a1) -> IO ()
process_describe_ring :: (Protocol a, Protocol a3, Transport t, Transport a2, Cassandra_Iface a1) => (Int32, a t, a3 a2, a1) -> IO ()
process_describe_partitioner :: (Protocol a, Protocol a3, Transport t, Transport a2, Cassandra_Iface a1) => (Int32, a t, a3 a2, a1) -> IO ()
process_describe_snitch :: (Protocol a, Protocol a3, Transport t, Transport a2, Cassandra_Iface a1) => (Int32, a t, a3 a2, a1) -> IO ()
process_describe_keyspace :: (Protocol a, Protocol a3, Transport t, Transport a2, Cassandra_Iface a1) => (Int32, a t, a3 a2, a1) -> IO ()
process_describe_splits :: (Protocol a, Protocol a3, Transport t, Transport a2, Cassandra_Iface a1) => (Int32, a t, a3 a2, a1) -> IO ()
process_system_add_column_family :: (Protocol a, Protocol a3, Transport t, Transport a2, Cassandra_Iface a1) => (Int32, a t, a3 a2, a1) -> IO ()
process_system_drop_column_family :: (Protocol a, Protocol a3, Transport t, Transport a2, Cassandra_Iface a1) => (Int32, a t, a3 a2, a1) -> IO ()
process_system_add_keyspace :: (Protocol a, Protocol a3, Transport t, Transport a2, Cassandra_Iface a1) => (Int32, a t, a3 a2, a1) -> IO ()
process_system_drop_keyspace :: (Protocol a, Protocol a3, Transport t, Transport a2, Cassandra_Iface a1) => (Int32, a t, a3 a2, a1) -> IO ()
process_system_update_keyspace :: (Protocol a, Protocol a3, Transport t, Transport a2, Cassandra_Iface a1) => (Int32, a t, a3 a2, a1) -> IO ()
process_system_update_column_family :: (Protocol a, Protocol a3, Transport t, Transport a2, Cassandra_Iface a1) => (Int32, a t, a3 a2, a1) -> IO ()
process_execute_cql_query :: (Protocol a, Protocol a3, Transport t, Transport a2, Cassandra_Iface a1) => (Int32, a t, a3 a2, a1) -> IO ()
proc_ :: (Protocol a1, Protocol a3, Transport t1, Transport a2, Cassandra_Iface a) => a -> (a1 t1, a3 a2) -> ([Char], t, Int32) -> IO ()
process :: (Protocol a1, Protocol a3, Transport t, Transport a2, Cassandra_Iface a) => a -> (a1 t, a3 a2) -> IO Bool
instance Typeable Login_args
instance Typeable Login_result
instance Typeable Set_keyspace_args
instance Typeable Set_keyspace_result
instance Typeable Get_args
instance Typeable Get_result
instance Typeable Get_slice_args
instance Typeable Get_slice_result
instance Typeable Get_count_args
instance Typeable Get_count_result
instance Typeable Multiget_slice_args
instance Typeable Multiget_slice_result
instance Typeable Multiget_count_args
instance Typeable Multiget_count_result
instance Typeable Get_range_slices_args
instance Typeable Get_range_slices_result
instance Typeable Get_indexed_slices_args
instance Typeable Get_indexed_slices_result
instance Typeable Insert_args
instance Typeable Insert_result
instance Typeable Add_args
instance Typeable Add_result
instance Typeable Remove_args
instance Typeable Remove_result
instance Typeable Remove_counter_args
instance Typeable Remove_counter_result
instance Typeable Batch_mutate_args
instance Typeable Batch_mutate_result
instance Typeable Truncate_args
instance Typeable Truncate_result
instance Typeable Describe_schema_versions_args
instance Typeable Describe_schema_versions_result
instance Typeable Describe_keyspaces_args
instance Typeable Describe_keyspaces_result
instance Typeable Describe_cluster_name_args
instance Typeable Describe_cluster_name_result
instance Typeable Describe_version_args
instance Typeable Describe_version_result
instance Typeable Describe_ring_args
instance Typeable Describe_ring_result
instance Typeable Describe_partitioner_args
instance Typeable Describe_partitioner_result
instance Typeable Describe_snitch_args
instance Typeable Describe_snitch_result
instance Typeable Describe_keyspace_args
instance Typeable Describe_keyspace_result
instance Typeable Describe_splits_args
instance Typeable Describe_splits_result
instance Typeable System_add_column_family_args
instance Typeable System_add_column_family_result
instance Typeable System_drop_column_family_args
instance Typeable System_drop_column_family_result
instance Typeable System_add_keyspace_args
instance Typeable System_add_keyspace_result
instance Typeable System_drop_keyspace_args
instance Typeable System_drop_keyspace_result
instance Typeable System_update_keyspace_args
instance Typeable System_update_keyspace_result
instance Typeable System_update_column_family_args
instance Typeable System_update_column_family_result
instance Typeable Execute_cql_query_args
instance Typeable Execute_cql_query_result
instance Show Login_args
instance Eq Login_args
instance Ord Login_args
instance Show Login_result
instance Eq Login_result
instance Ord Login_result
instance Show Set_keyspace_args
instance Eq Set_keyspace_args
instance Ord Set_keyspace_args
instance Show Set_keyspace_result
instance Eq Set_keyspace_result
instance Ord Set_keyspace_result
instance Show Get_args
instance Eq Get_args
instance Ord Get_args
instance Show Get_result
instance Eq Get_result
instance Ord Get_result
instance Show Get_slice_args
instance Eq Get_slice_args
instance Ord Get_slice_args
instance Show Get_slice_result
instance Eq Get_slice_result
instance Ord Get_slice_result
instance Show Get_count_args
instance Eq Get_count_args
instance Ord Get_count_args
instance Show Get_count_result
instance Eq Get_count_result
instance Ord Get_count_result
instance Show Multiget_slice_args
instance Eq Multiget_slice_args
instance Ord Multiget_slice_args
instance Show Multiget_slice_result
instance Eq Multiget_slice_result
instance Ord Multiget_slice_result
instance Show Multiget_count_args
instance Eq Multiget_count_args
instance Ord Multiget_count_args
instance Show Multiget_count_result
instance Eq Multiget_count_result
instance Ord Multiget_count_result
instance Show Get_range_slices_args
instance Eq Get_range_slices_args
instance Ord Get_range_slices_args
instance Show Get_range_slices_result
instance Eq Get_range_slices_result
instance Ord Get_range_slices_result
instance Show Get_indexed_slices_args
instance Eq Get_indexed_slices_args
instance Ord Get_indexed_slices_args
instance Show Get_indexed_slices_result
instance Eq Get_indexed_slices_result
instance Ord Get_indexed_slices_result
instance Show Insert_args
instance Eq Insert_args
instance Ord Insert_args
instance Show Insert_result
instance Eq Insert_result
instance Ord Insert_result
instance Show Add_args
instance Eq Add_args
instance Ord Add_args
instance Show Add_result
instance Eq Add_result
instance Ord Add_result
instance Show Remove_args
instance Eq Remove_args
instance Ord Remove_args
instance Show Remove_result
instance Eq Remove_result
instance Ord Remove_result
instance Show Remove_counter_args
instance Eq Remove_counter_args
instance Ord Remove_counter_args
instance Show Remove_counter_result
instance Eq Remove_counter_result
instance Ord Remove_counter_result
instance Show Batch_mutate_args
instance Eq Batch_mutate_args
instance Ord Batch_mutate_args
instance Show Batch_mutate_result
instance Eq Batch_mutate_result
instance Ord Batch_mutate_result
instance Show Truncate_args
instance Eq Truncate_args
instance Ord Truncate_args
instance Show Truncate_result
instance Eq Truncate_result
instance Ord Truncate_result
instance Show Describe_schema_versions_args
instance Eq Describe_schema_versions_args
instance Ord Describe_schema_versions_args
instance Show Describe_schema_versions_result
instance Eq Describe_schema_versions_result
instance Ord Describe_schema_versions_result
instance Show Describe_keyspaces_args
instance Eq Describe_keyspaces_args
instance Ord Describe_keyspaces_args
instance Show Describe_keyspaces_result
instance Eq Describe_keyspaces_result
instance Ord Describe_keyspaces_result
instance Show Describe_cluster_name_args
instance Eq Describe_cluster_name_args
instance Ord Describe_cluster_name_args
instance Show Describe_cluster_name_result
instance Eq Describe_cluster_name_result
instance Ord Describe_cluster_name_result
instance Show Describe_version_args
instance Eq Describe_version_args
instance Ord Describe_version_args
instance Show Describe_version_result
instance Eq Describe_version_result
instance Ord Describe_version_result
instance Show Describe_ring_args
instance Eq Describe_ring_args
instance Ord Describe_ring_args
instance Show Describe_ring_result
instance Eq Describe_ring_result
instance Ord Describe_ring_result
instance Show Describe_partitioner_args
instance Eq Describe_partitioner_args
instance Ord Describe_partitioner_args
instance Show Describe_partitioner_result
instance Eq Describe_partitioner_result
instance Ord Describe_partitioner_result
instance Show Describe_snitch_args
instance Eq Describe_snitch_args
instance Ord Describe_snitch_args
instance Show Describe_snitch_result
instance Eq Describe_snitch_result
instance Ord Describe_snitch_result
instance Show Describe_keyspace_args
instance Eq Describe_keyspace_args
instance Ord Describe_keyspace_args
instance Show Describe_keyspace_result
instance Eq Describe_keyspace_result
instance Ord Describe_keyspace_result
instance Show Describe_splits_args
instance Eq Describe_splits_args
instance Ord Describe_splits_args
instance Show Describe_splits_result
instance Eq Describe_splits_result
instance Ord Describe_splits_result
instance Show System_add_column_family_args
instance Eq System_add_column_family_args
instance Ord System_add_column_family_args
instance Show System_add_column_family_result
instance Eq System_add_column_family_result
instance Ord System_add_column_family_result
instance Show System_drop_column_family_args
instance Eq System_drop_column_family_args
instance Ord System_drop_column_family_args
instance Show System_drop_column_family_result
instance Eq System_drop_column_family_result
instance Ord System_drop_column_family_result
instance Show System_add_keyspace_args
instance Eq System_add_keyspace_args
instance Ord System_add_keyspace_args
instance Show System_add_keyspace_result
instance Eq System_add_keyspace_result
instance Ord System_add_keyspace_result
instance Show System_drop_keyspace_args
instance Eq System_drop_keyspace_args
instance Ord System_drop_keyspace_args
instance Show System_drop_keyspace_result
instance Eq System_drop_keyspace_result
instance Ord System_drop_keyspace_result
instance Show System_update_keyspace_args
instance Eq System_update_keyspace_args
instance Ord System_update_keyspace_args
instance Show System_update_keyspace_result
instance Eq System_update_keyspace_result
instance Ord System_update_keyspace_result
instance Show System_update_column_family_args
instance Eq System_update_column_family_args
instance Ord System_update_column_family_args
instance Show System_update_column_family_result
instance Eq System_update_column_family_result
instance Ord System_update_column_family_result
instance Show Execute_cql_query_args
instance Eq Execute_cql_query_args
instance Ord Execute_cql_query_args
instance Show Execute_cql_query_result
instance Eq Execute_cql_query_result
instance Ord Execute_cql_query_result

module Database.Cassandra.Thrift.Cassandra_Client
login :: (Protocol a1, Protocol a2, Transport a, Transport t) => (a2 t, a1 a) -> AuthenticationRequest -> IO ()
set_keyspace :: (Protocol a1, Protocol a2, Transport a, Transport t) => (a2 t, a1 a) -> String -> IO ()
get :: (Protocol a1, Protocol a2, Transport a, Transport t) => (a2 t, a1 a) -> ByteString -> ColumnPath -> ConsistencyLevel -> IO ColumnOrSuperColumn
get_slice :: (Protocol a1, Protocol a2, Transport a, Transport t) => (a2 t, a1 a) -> ByteString -> ColumnParent -> SlicePredicate -> ConsistencyLevel -> IO [ColumnOrSuperColumn]
get_count :: (Protocol a1, Protocol a2, Transport a, Transport t) => (a2 t, a1 a) -> ByteString -> ColumnParent -> SlicePredicate -> ConsistencyLevel -> IO Int32
multiget_slice :: (Protocol a1, Protocol a2, Transport a, Transport t) => (a2 t, a1 a) -> [ByteString] -> ColumnParent -> SlicePredicate -> ConsistencyLevel -> IO (Map ByteString [ColumnOrSuperColumn])
multiget_count :: (Protocol a1, Protocol a2, Transport a, Transport t) => (a2 t, a1 a) -> [ByteString] -> ColumnParent -> SlicePredicate -> ConsistencyLevel -> IO (Map ByteString Int32)
get_range_slices :: (Protocol a1, Protocol a2, Transport a, Transport t) => (a2 t, a1 a) -> ColumnParent -> SlicePredicate -> KeyRange -> ConsistencyLevel -> IO [KeySlice]
get_indexed_slices :: (Protocol a1, Protocol a2, Transport a, Transport t) => (a2 t, a1 a) -> ColumnParent -> IndexClause -> SlicePredicate -> ConsistencyLevel -> IO [KeySlice]
insert :: (Protocol a1, Protocol a2, Transport a, Transport t) => (a2 t, a1 a) -> ByteString -> ColumnParent -> Column -> ConsistencyLevel -> IO ()
add :: (Protocol a1, Protocol a2, Transport a, Transport t) => (a2 t, a1 a) -> ByteString -> ColumnParent -> CounterColumn -> ConsistencyLevel -> IO ()
remove :: (Protocol a1, Protocol a2, Transport a, Transport t) => (a2 t, a1 a) -> ByteString -> ColumnPath -> Int64 -> ConsistencyLevel -> IO ()
remove_counter :: (Protocol a1, Protocol a2, Transport a, Transport t) => (a2 t, a1 a) -> ByteString -> ColumnPath -> ConsistencyLevel -> IO ()
batch_mutate :: (Protocol a1, Protocol a2, Transport a, Transport t) => (a2 t, a1 a) -> Map ByteString (Map String [Mutation]) -> ConsistencyLevel -> IO ()
truncate :: (Protocol a1, Protocol a2, Transport a, Transport t) => (a2 t, a1 a) -> String -> IO ()
describe_schema_versions :: (Protocol a1, Protocol a2, Transport a, Transport t) => (a2 t, a1 a) -> IO (Map String [String])
describe_keyspaces :: (Protocol a1, Protocol a2, Transport a, Transport t) => (a2 t, a1 a) -> IO [KsDef]
describe_cluster_name :: (Protocol a1, Protocol a2, Transport a, Transport t) => (a2 t, a1 a) -> IO String
describe_version :: (Protocol a1, Protocol a2, Transport a, Transport t) => (a2 t, a1 a) -> IO String
describe_ring :: (Protocol a1, Protocol a2, Transport a, Transport t) => (a2 t, a1 a) -> String -> IO [TokenRange]
describe_partitioner :: (Protocol a1, Protocol a2, Transport a, Transport t) => (a2 t, a1 a) -> IO String
describe_snitch :: (Protocol a1, Protocol a2, Transport a, Transport t) => (a2 t, a1 a) -> IO String
describe_keyspace :: (Protocol a1, Protocol a2, Transport a, Transport t) => (a2 t, a1 a) -> String -> IO KsDef
describe_splits :: (Protocol a1, Protocol a2, Transport a, Transport t) => (a2 t, a1 a) -> String -> String -> String -> Int32 -> IO [String]
system_add_column_family :: (Protocol a1, Protocol a2, Transport a, Transport t) => (a2 t, a1 a) -> CfDef -> IO String
system_drop_column_family :: (Protocol a1, Protocol a2, Transport a, Transport t) => (a2 t, a1 a) -> String -> IO String
system_add_keyspace :: (Protocol a1, Protocol a2, Transport a, Transport t) => (a2 t, a1 a) -> KsDef -> IO String
system_drop_keyspace :: (Protocol a1, Protocol a2, Transport a, Transport t) => (a2 t, a1 a) -> String -> IO String
system_update_keyspace :: (Protocol a1, Protocol a2, Transport a, Transport t) => (a2 t, a1 a) -> KsDef -> IO String
system_update_column_family :: (Protocol a1, Protocol a2, Transport a, Transport t) => (a2 t, a1 a) -> CfDef -> IO String
execute_cql_query :: (Protocol a1, Protocol a2, Transport a, Transport t) => (a2 t, a1 a) -> ByteString -> Compression -> IO CqlResult
