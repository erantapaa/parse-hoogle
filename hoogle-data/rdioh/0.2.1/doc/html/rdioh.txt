-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A Haskell wrapper for Rdio's API.
--   
--   This library implements methods for Rdio's API. It supports 2-legged
--   and 3-legged OAuth. See Rdio's API for reference:
--   http://developer.rdio.com/docs/read/rest/Methods
@package rdioh
@version 0.2.1

module Rdioh.Models
data AlbumExtra
AlbumIframeUrl :: AlbumExtra
AlbumIsCompilation :: AlbumExtra
AlbumLabel :: AlbumExtra
AlbumBigIcon :: AlbumExtra
AlbumReleaseDateISO :: AlbumExtra
data Album
Album :: String -> String -> String -> String -> String -> String -> Bool -> Bool -> Int -> String -> [String] -> String -> Bool -> Bool -> Bool -> String -> String -> String -> String -> String -> Int -> Maybe String -> Maybe Bool -> Maybe String -> Maybe String -> Maybe String -> Album
albumName :: Album -> String
albumIcon :: Album -> String
albumBaseIcon :: Album -> String
albumUrl :: Album -> String
albumArtist :: Album -> String
albumArtistUrl :: Album -> String
isExplicit :: Album -> Bool
isClean :: Album -> Bool
albumLength :: Album -> Int
albumArtistKey :: Album -> String
trackKeys :: Album -> [String]
price :: Album -> String
canStream :: Album -> Bool
canSample :: Album -> Bool
canTether :: Album -> Bool
albumShortUrl :: Album -> String
embedUrl :: Album -> String
displayDate :: Album -> String
albumKey :: Album -> String
releaseDate :: Album -> String
duration :: Album -> Int
iframeUrl :: Album -> Maybe String
isCompilation :: Album -> Maybe Bool
albumLabel :: Album -> Maybe String
albumBigIcon :: Album -> Maybe String
releaseDateISO :: Album -> Maybe String
data ArtistExtra
ArtistAlbumCount :: ArtistExtra
data Artist
Artist :: String -> String -> String -> Int -> String -> String -> Bool -> String -> Maybe String -> Maybe String -> Maybe Int -> Artist
artistName :: Artist -> String
artistKey :: Artist -> String
artistUrl :: Artist -> String
artistLength :: Artist -> Int
artistIcon :: Artist -> String
artistBaseIcon :: Artist -> String
hasRadio :: Artist -> Bool
artistShortUrl :: Artist -> String
radioKey :: Artist -> Maybe String
topSongsKey :: Artist -> Maybe String
artistAlbumCount :: Artist -> Maybe Int
data Label
Label :: String -> String -> String -> String -> Bool -> String -> Label
labelName :: Label -> String
labelKey :: Label -> String
labelUrl :: Label -> String
labelShortUrl :: Label -> String
labelHasRadio :: Label -> Bool
labelRadioKey :: Label -> String
data TrackExtra
IsInCollection :: TrackExtra
IsOnCompilation :: TrackExtra
Isrcs :: TrackExtra
TrackIframeUrl :: TrackExtra
PlayCount :: TrackExtra
TrackBigIcon :: TrackExtra
data Track
Track :: String -> String -> String -> String -> String -> String -> String -> Int -> Bool -> Bool -> String -> String -> Bool -> Bool -> Bool -> Bool -> Bool -> String -> String -> String -> String -> Int -> Maybe String -> Maybe String -> Maybe Bool -> Maybe Bool -> Maybe [String] -> Maybe String -> Maybe Int -> Maybe String -> Track
trackName :: Track -> String
trackArtist :: Track -> String
trackAlbum :: Track -> String
trackAlbumKey :: Track -> String
trackAlbumUrl :: Track -> String
trackArtistKey :: Track -> String
trackArtistUrl :: Track -> String
trackDuration :: Track -> Int
trackIsExplicit :: Track -> Bool
trackIsClean :: Track -> Bool
trackUrl :: Track -> String
trackBaseIcon :: Track -> String
trackCanDownload :: Track -> Bool
trackCanDownloadAlbumOnly :: Track -> Bool
trackCanStream :: Track -> Bool
trackCanTether :: Track -> Bool
trackCanSample :: Track -> Bool
trackPrice :: Track -> String
trackEmbedUrl :: Track -> String
trackKey :: Track -> String
trackIcon :: Track -> String
trackNum :: Track -> Int
trackAlbumArtist :: Track -> Maybe String
trackAlbumArtistKey :: Track -> Maybe String
isInCollection :: Track -> Maybe Bool
isOnCompilation :: Track -> Maybe Bool
isrcs :: Track -> Maybe [String]
trackIframeUrl :: Track -> Maybe String
playCount :: Track -> Maybe Int
trackBigIcon :: Track -> Maybe String
data Reason
Viewable :: Reason
UserPreference :: Reason
OrderedAlbum :: Reason
TooFewSongs :: Reason
data PlaylistExtra
PlIframeUrl :: PlaylistExtra
IsViewable :: PlaylistExtra
PlBigIcon :: PlaylistExtra
PlDescription :: PlaylistExtra
PlTracks :: PlaylistExtra
IsPublished :: PlaylistExtra
PlTrackKeys :: PlaylistExtra
ReasonNotViewable :: PlaylistExtra
data Playlist
Playlist :: String -> String -> String -> String -> String -> String -> String -> String -> String -> Maybe Int -> Maybe String -> Maybe String -> Maybe Int -> Maybe String -> Maybe Bool -> Maybe String -> Maybe String -> Maybe [Track] -> Maybe Bool -> Maybe [String] -> Maybe Reason -> Playlist
plName :: Playlist -> String
plUrl :: Playlist -> String
plOwner :: Playlist -> String
plOwnerUrl :: Playlist -> String
plOwnerKey :: Playlist -> String
plOwnerIcon :: Playlist -> String
plShortUrl :: Playlist -> String
plEmbedUrl :: Playlist -> String
plKey :: Playlist -> String
plLength :: Playlist -> Maybe Int
plIcon :: Playlist -> Maybe String
plBaseIcon :: Playlist -> Maybe String
lastUpdated :: Playlist -> Maybe Int
plIFrameUrl :: Playlist -> Maybe String
isViewable :: Playlist -> Maybe Bool
plBigIcon :: Playlist -> Maybe String
plDescription :: Playlist -> Maybe String
plTracks :: Playlist -> Maybe [Track]
isPublished :: Playlist -> Maybe Bool
plTrackKeys :: Playlist -> Maybe [String]
reasonNotViewable :: Playlist -> Maybe Reason
data Gender
Male :: Gender
Female :: Gender
data UserPlaylists
UserPlaylists :: [Playlist] -> [Playlist] -> [Playlist] -> UserPlaylists
upOwned :: UserPlaylists -> [Playlist]
upCollab :: UserPlaylists -> [Playlist]
upSubscribed :: UserPlaylists -> [Playlist]
data User
User :: String -> String -> String -> String -> String -> Int -> String -> Gender -> Maybe String -> Maybe Bool -> Maybe Int -> Maybe String -> Maybe String -> Maybe String -> Maybe Int -> Maybe Int -> Maybe String -> Maybe String -> Maybe Int -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe Bool -> Maybe Bool -> User
userKey :: User -> String
firstName :: User -> String
lastName :: User -> String
userIcon :: User -> String
userBaseIcon :: User -> String
libraryVersion :: User -> Int
userUrl :: User -> String
gender :: User -> Gender
followingUrl :: User -> Maybe String
isTrial :: User -> Maybe Bool
artistCount :: User -> Maybe Int
lastSongPlayed :: User -> Maybe String
heavyRotationKey :: User -> Maybe String
networkHeavyRotationKey :: User -> Maybe String
albumCount :: User -> Maybe Int
trackCount :: User -> Maybe Int
lastSongPlayTime :: User -> Maybe String
username :: User -> Maybe String
reviewCount :: User -> Maybe Int
collectionUrl :: User -> Maybe String
playlistsUrl :: User -> Maybe String
collectionKey :: User -> Maybe String
followersUrl :: User -> Maybe String
displayName :: User -> Maybe String
isUnlimited :: User -> Maybe Bool
isSubscriber :: User -> Maybe Bool
data UserExtra
FollowingUrl :: UserExtra
IsTrial :: UserExtra
ArtistCount :: UserExtra
LastSongPlayed :: UserExtra
HeavyRotationKey :: UserExtra
NetworkHeavyRotationKey :: UserExtra
AlbumCount :: UserExtra
TrackCount :: UserExtra
LastSongPlayTime :: UserExtra
Username :: UserExtra
ReviewCount :: UserExtra
CollectionUrl :: UserExtra
PlaylistsUrl :: UserExtra
CollectionKey :: UserExtra
FollowersUrl :: UserExtra
DisplayName :: UserExtra
IsUnlimited :: UserExtra
IsSubscriber :: UserExtra
data CollectionAlbum
CollectionAlbum :: String -> String -> String -> String -> String -> String -> Bool -> Bool -> Int -> String -> [String] -> String -> Bool -> Bool -> Bool -> String -> String -> String -> String -> String -> Int -> String -> String -> String -> String -> String -> [String] -> Maybe String -> Maybe Gender -> Maybe Bool -> Maybe String -> Maybe String -> Maybe [String] -> Maybe String -> CollectionAlbum
colName :: CollectionAlbum -> String
colIcon :: CollectionAlbum -> String
colBaseIcon :: CollectionAlbum -> String
colUrl :: CollectionAlbum -> String
colArtist :: CollectionAlbum -> String
colAlbumArtistUrl :: CollectionAlbum -> String
colIsExplicit :: CollectionAlbum -> Bool
colIsClean :: CollectionAlbum -> Bool
colLength :: CollectionAlbum -> Int
colAlbumArtistKey :: CollectionAlbum -> String
colTrackKeys :: CollectionAlbum -> [String]
colPrice :: CollectionAlbum -> String
colCanStream :: CollectionAlbum -> Bool
colCanSample :: CollectionAlbum -> Bool
colCanTether :: CollectionAlbum -> Bool
colShortUrl :: CollectionAlbum -> String
colEmbedUrl :: CollectionAlbum -> String
colDisplayDate :: CollectionAlbum -> String
colKey :: CollectionAlbum -> String
colReleaseDate :: CollectionAlbum -> String
colDuration :: CollectionAlbum -> Int
colUserKey :: CollectionAlbum -> String
colUserName :: CollectionAlbum -> String
colAlbumKey :: CollectionAlbum -> String
colAlbumUrl :: CollectionAlbum -> String
colCollectionUrl :: CollectionAlbum -> String
colItemTrackKeys :: CollectionAlbum -> [String]
colIframeUrl :: CollectionAlbum -> Maybe String
colUserGender :: CollectionAlbum -> Maybe Gender
colIsCompilation :: CollectionAlbum -> Maybe Bool
colLabel :: CollectionAlbum -> Maybe String
colReleaseDateISO :: CollectionAlbum -> Maybe String
colUpcs :: CollectionAlbum -> Maybe [String]
colBigIcon :: CollectionAlbum -> Maybe String
data CollectionArtist
CollectionArtist :: String -> String -> String -> Int -> String -> String -> Bool -> String -> String -> [String] -> String -> String -> String -> String -> String -> Maybe Int -> Maybe Int -> CollectionArtist
colArtistName :: CollectionArtist -> String
colArtistKey :: CollectionArtist -> String
colArtistUrl :: CollectionArtist -> String
colArtistLength :: CollectionArtist -> Int
colArtistIcon :: CollectionArtist -> String
colArtistBaseIcon :: CollectionArtist -> String
colArtistHasRadio :: CollectionArtist -> Bool
colArtistShortUrl :: CollectionArtist -> String
colArtistRadioKey :: CollectionArtist -> String
colArtistTopSongsKey :: CollectionArtist -> [String]
colArtistUserKey :: CollectionArtist -> String
colArtistUserName :: CollectionArtist -> String
colArtistArtistKey :: CollectionArtist -> String
colArtistArtistUrl :: CollectionArtist -> String
colArtistCollectionUrl :: CollectionArtist -> String
colCount :: CollectionArtist -> Maybe Int
colAlbumCount :: CollectionArtist -> Maybe Int
data LabelStation
LabelStation :: Int -> String -> String -> Bool -> [String] -> String -> String -> Int -> String -> String -> String -> Bool -> Maybe [String] -> LabelStation
lsCount :: LabelStation -> Int
lsLabelName :: LabelStation -> String
lsName :: LabelStation -> String
lsHasRadio :: LabelStation -> Bool
lsTracks :: LabelStation -> [String]
lsLabelUrl :: LabelStation -> String
lsShortUrl :: LabelStation -> String
lsLength :: LabelStation -> Int
lsUrl :: LabelStation -> String
lsKey :: LabelStation -> String
lsRadioKey :: LabelStation -> String
lsReloadOnRepeat :: LabelStation -> Bool
lsTrackKeys :: LabelStation -> Maybe [String]
data ArtistStation
ArtistStation :: String -> String -> String -> [String] -> String -> String -> Bool -> String -> Int -> String -> Bool -> String -> String -> String -> Int -> Maybe Int -> Maybe [String] -> ArtistStation
asRadioKey :: ArtistStation -> String
asTopSongsKey :: ArtistStation -> String
asBaseIcon :: ArtistStation -> String
asTracks :: ArtistStation -> [String]
asArtistUrl :: ArtistStation -> String
asKey :: ArtistStation -> String
asReloadOnRepeat :: ArtistStation -> Bool
asIcon :: ArtistStation -> String
asCount :: ArtistStation -> Int
asName :: ArtistStation -> String
asHasRadio :: ArtistStation -> Bool
asUrl :: ArtistStation -> String
asArtistName :: ArtistStation -> String
asShortUrl :: ArtistStation -> String
asLength :: ArtistStation -> Int
asAlbumCount :: ArtistStation -> Maybe Int
asTrackKeys :: ArtistStation -> Maybe [String]
data HeavyRotationStation
HeavyRotationStation :: String -> Int -> Int -> Bool -> Int -> String -> String -> String -> String -> Maybe [String] -> HeavyRotationStation
hrsKey :: HeavyRotationStation -> String
hrsLength :: HeavyRotationStation -> Int
hrsTracks :: HeavyRotationStation -> Int
hrsReloadOnRepeat :: HeavyRotationStation -> Bool
hrsCount :: HeavyRotationStation -> Int
hrsUser :: HeavyRotationStation -> String
hrsBaseIcon :: HeavyRotationStation -> String
hrsIcon :: HeavyRotationStation -> String
hrsName :: HeavyRotationStation -> String
hrsTrackKeys :: HeavyRotationStation -> Maybe [String]
data HeavyRotationUserStation
HeavyRotationUserStation :: String -> Int -> Int -> Bool -> Int -> String -> String -> String -> String -> Maybe [String] -> HeavyRotationUserStation
hrusKey :: HeavyRotationUserStation -> String
hrusLength :: HeavyRotationUserStation -> Int
hrusTracks :: HeavyRotationUserStation -> Int
hrusReloadOnRepeat :: HeavyRotationUserStation -> Bool
hrusCount :: HeavyRotationUserStation -> Int
hrusUser :: HeavyRotationUserStation -> String
hrusBaseIcon :: HeavyRotationUserStation -> String
hrusIcon :: HeavyRotationUserStation -> String
hrusName :: HeavyRotationUserStation -> String
hrusTrackKeys :: HeavyRotationUserStation -> Maybe [String]
data ArtistTopSongsStation
ArtistTopSongsStation :: String -> String -> String -> [String] -> String -> String -> Bool -> String -> Int -> String -> Bool -> String -> String -> String -> Int -> Maybe Int -> Maybe [String] -> ArtistTopSongsStation
atssRadioKey :: ArtistTopSongsStation -> String
atssTopSongsKey :: ArtistTopSongsStation -> String
atssBaseIcon :: ArtistTopSongsStation -> String
atssTracks :: ArtistTopSongsStation -> [String]
atssArtistUrl :: ArtistTopSongsStation -> String
atssKey :: ArtistTopSongsStation -> String
atssReloadOnRepeat :: ArtistTopSongsStation -> Bool
atssIcon :: ArtistTopSongsStation -> String
atssCount :: ArtistTopSongsStation -> Int
atssName :: ArtistTopSongsStation -> String
atssHasRadio :: ArtistTopSongsStation -> Bool
atssUrl :: ArtistTopSongsStation -> String
atssArtistName :: ArtistTopSongsStation -> String
atssShortUrl :: ArtistTopSongsStation -> String
atssLength :: ArtistTopSongsStation -> Int
atssAlbumCount :: ArtistTopSongsStation -> Maybe Int
atssTrackKeys :: ArtistTopSongsStation -> Maybe [String]
data UserCollectionStation
UserCollectionStation :: String -> Int -> [String] -> Bool -> Int -> String -> String -> String -> String -> String -> Maybe [String] -> UserCollectionStation
ucsKey :: UserCollectionStation -> String
ucsLength :: UserCollectionStation -> Int
ucsTracks :: UserCollectionStation -> [String]
ucsReloadOnRepeat :: UserCollectionStation -> Bool
ucsCount :: UserCollectionStation -> Int
ucsUser :: UserCollectionStation -> String
ucsBaseIcon :: UserCollectionStation -> String
ucsIcon :: UserCollectionStation -> String
ucsName :: UserCollectionStation -> String
ucsUrl :: UserCollectionStation -> String
ucsTrackKeys :: UserCollectionStation -> Maybe [String]
data RdioResponse v
RdioResponse :: String -> v -> RdioResponse v
rdioStatus :: RdioResponse v -> String
rdioResult :: RdioResponse v -> v
data SearchResults v
SearchResults :: [v] -> SearchResults v
results :: SearchResults v -> [v]
data PlaylistType
Owned :: PlaylistType
Collab :: PlaylistType
Subscribed :: PlaylistType
data CollaborationMode
NoCollaboration :: CollaborationMode
CollaborationWithAll :: CollaborationMode
CollaborationWithFollowed :: CollaborationMode
data Scope
UserScope :: Scope
FriendScope :: Scope
AllScope :: Scope
data Activity
Activity :: User -> [Update] -> Activity
activityUser :: Activity -> User
updates :: Activity -> [Update]
data UpdateType
UTrackAddedToCollection :: UpdateType
UTrackAddedToPlaylist :: UpdateType
UFriendAdded :: UpdateType
UUserJoined :: UpdateType
UCommentOnTrack :: UpdateType
UCommentOnAlbum :: UpdateType
UCommentOnArtist :: UpdateType
UCommentOnPlaylist :: UpdateType
UTrackAddedViaMatchCollection :: UpdateType
UUserSubscribed :: UpdateType
UTrackSynced :: UpdateType
data Update
Update :: User -> String -> UpdateType -> Update
owner :: Update -> User
date :: Update -> String
updateType :: Update -> UpdateType
data Timeframe
ThisWeek :: Timeframe
LastWeek :: Timeframe
TwoWeeks :: Timeframe
instance Show Album
instance Show Artist
instance Show Label
instance Show Track
instance Show Reason
instance Show Playlist
instance Show Gender
instance Show UserPlaylists
instance Show User
instance Show CollectionAlbum
instance Show CollectionArtist
instance Show LabelStation
instance Show ArtistStation
instance Show HeavyRotationStation
instance Show HeavyRotationUserStation
instance Show ArtistTopSongsStation
instance Show UserCollectionStation
instance Show v => Show (RdioResponse v)
instance Show v => Show (SearchResults v)
instance Show CollaborationMode
instance Show UpdateType
instance Show Update
instance Show Activity
instance Show Timeframe
instance FromJSON Update
instance FromJSON UpdateType
instance FromJSON Activity
instance Show Scope
instance Show PlaylistType
instance FromJSON a => FromJSON (SearchResults a)
instance FromJSON a => FromJSON (RdioResponse a)
instance FromJSON UserCollectionStation
instance FromJSON ArtistTopSongsStation
instance FromJSON HeavyRotationUserStation
instance FromJSON HeavyRotationStation
instance FromJSON ArtistStation
instance FromJSON LabelStation
instance FromJSON CollectionArtist
instance FromJSON CollectionAlbum
instance FromJSON User
instance Show UserExtra
instance FromJSON Gender
instance FromJSON UserPlaylists
instance FromJSON Playlist
instance Show PlaylistExtra
instance FromJSON Reason
instance FromJSON Track
instance Show TrackExtra
instance FromJSON Label
instance FromJSON Artist
instance Show ArtistExtra
instance FromJSON Album
instance Show AlbumExtra

module Rdioh.Util

-- | used internally to convert a list of parameters to a string that can
--   be passed via GET/POST
toParams :: [(String, String)] -> String

-- | used internally
(<+>) :: Param p => [(String, String)] -> (String, Maybe p) -> [(String, String)]

-- | used internally to easily convert different Rdio types to params for |
--   requests. You can use <tt>toParam</tt> to do this if you want.
class Param a
toParam :: Param a => a -> String
instance Param Timeframe
instance Param Scope
instance Param CollaborationMode
instance Param PlaylistType
instance Param [String]
instance Param String
instance Param Int
instance Param Bool

module Rdioh.Auth
reqUrl :: Request
accUrl :: Request
authUrl :: Token -> [Char]
srvUrl :: ByteString -> Request
app :: String -> String -> Application

-- | Takes: a key and a secret. Returns a two-legged auth token. You can
--   just use <tt>runRdio</tt> in most cases.
twoLegToken :: String -> String -> Token

-- | Takes: a key and a secret. Does three-legged auth and returns an auth
--   token. You can just use <tt>runRdioWithAuth</tt> in most cases.
threeLegToken :: MonadIO m => String -> String -> m Token

module Rdioh

-- | Takes: a key, a secret, a function to run.
runRdio :: String -> String -> Rdio a -> IO a

-- | Same as <tt>runRdio</tt>, but with 3-legged authentication i.e. the
--   user will | have to authorize your app.
runRdioWithAuth :: String -> String -> Rdio a -> IO a

-- | The <tt>Rdio</tt> monad...just a wrapper around a <tt>ReaderT</tt>
--   monad.
type Rdio a = ReaderT Token IO a

-- | used internally
mkExtras :: Show e => [e] -> (String, String)

-- | Send a arbitrary request to rdio's api. Return type should | be an
--   instance of <tt>FromJSON</tt>, and you need to specify the type.
--   Example:
--   
--   <pre>
--   result &lt;- (runRequest [("method", "getTopCharts"), ("type", "Artist")] :: Rdio (Either String [Artist]))
--   </pre>
runRequest :: (Show v, FromJSON v) => [(String, String)] -> Rdio (Either String v)

-- | Takes: [keys], [extras] (optional)
get :: (Show a, FromJSON a) => [String] -> [String] -> Rdio (Either String a)

-- | Takes: short code (everything after the http:<i></i>rd.io<i>x</i>),
--   [extras] (optional)
getObjectFromShortCode :: (Show a, FromJSON a) => String -> [String] -> Rdio (Either String a)

-- | Takes: url (everything after http:<i></i>rdio.com/), [extras]
--   (optional)
getObjectFromUrl :: (Show a, FromJSON a) => String -> [String] -> Rdio (Either String a)

-- | Takes: a UPC code, [extras] (optional)
getAlbumsByUPC :: Int -> [AlbumExtra] -> Rdio (Either String [Album])

-- | Takes: A key of an artist
getAlbumsForArtist :: String -> Rdio (Either String [Album])
getAlbumsForArtist' :: String -> Maybe Bool -> [AlbumExtra] -> Maybe Int -> Maybe Int -> Rdio (Either String [Album])

-- | Takes: a key of a label
getAlbumsForLabel :: String -> Rdio (Either String [Album])
getAlbumsForLabel' :: String -> [AlbumExtra] -> Maybe Int -> Maybe Int -> Rdio (Either String [Album])

-- | Takes: a key of a label
getArtistsForLabel :: String -> Rdio (Either String [Artist])
getArtistsForLabel' :: String -> [ArtistExtra] -> Maybe Int -> Maybe Int -> Rdio (Either String [Artist])

-- | Takes: an ISRC code, [extras] (optional)
getTracksByISRC :: String -> [TrackExtra] -> Rdio (Either String [Track])

-- | Takes: an artist key
getTracksForArtist :: String -> Rdio (Either String [Track])
getTracksForArtist' :: String -> Maybe Bool -> [TrackExtra] -> Maybe Int -> Maybe Int -> Rdio (Either String [Track])

-- | Takes: a query, a type ("Artist", "Album", "Track", "Playlist", or
--   "User") This method can return any of those types, so you need to
--   specify what you want returned. Example:
--   
--   <pre>
--   search "Radiohead" "Artist" :: Rdio (Either String [Artist])
--   </pre>
search :: (Show a, FromJSON a) => String -> String -> Rdio (Either String [a])
search' :: (Show a, FromJSON a) => String -> String -> Maybe Bool -> Maybe Int -> Maybe Int -> Rdio (Either String [a])

-- | Takes: a list of keys of tracks or playlists. *Requires
--   authentication*.
addToCollection :: [String] -> Rdio (Either String Object)

-- | Takes: an artist key. Requires authentication OR use
--   <tt>getAlbumsForArtistInCollection'</tt> and pass in a user key.
getAlbumsForArtistInCollection :: String -> Rdio (Either String [Album])
getAlbumsForArtistInCollection' :: String -> Maybe String -> [AlbumExtra] -> Maybe String -> Rdio (Either String [Album])

-- | Requires authentication OR use <tt>getAlbumsInCollection'</tt> and
--   pass in a user key.
getAlbumsInCollection :: Rdio (Either String [Album])
getAlbumsInCollection' :: Maybe String -> Maybe Int -> Maybe Int -> Maybe String -> Maybe String -> [AlbumExtra] -> Rdio (Either String [Album])

-- | Requires authentication OR use <tt>getArtistsInCollection'</tt> and
--   pass in a user key.
getArtistsInCollection :: Rdio (Either String [Artist])
getArtistsInCollection' :: Maybe String -> Maybe Int -> Maybe Int -> Maybe String -> Maybe String -> [ArtistExtra] -> Rdio (Either String [Artist])

-- | Requires authentication.
getOfflineTracks :: Rdio (Either String [Track])
getOfflineTracks' :: Maybe Int -> Maybe Int -> [TrackExtra] -> Rdio (Either String [Track])

-- | Takes: an album key. Requires authentication OR use
--   <tt>getTracksForAlbumInCollection'</tt> and pass in a user key.
getTracksForAlbumInCollection :: String -> Rdio (Either String [Track])
getTracksForAlbumInCollection' :: String -> Maybe String -> [TrackExtra] -> Rdio (Either String [Track])

-- | Takes: an artist key. Requires authentication OR use
--   <tt>getTracksForArtistInCollection'</tt> and pass in a user key.
getTracksForArtistInCollection :: String -> Rdio (Either String [Track])
getTracksForArtistInCollection' :: String -> Maybe String -> [TrackExtra] -> Rdio (Either String [Track])

-- | Requires authentication OR use <tt>getTracksInCollection'</tt> and
--   pass in a user key.
getTracksInCollection :: Rdio (Either String [Track])
getTracksInCollection' :: Maybe String -> Maybe Int -> Maybe Int -> Maybe String -> Maybe String -> [TrackExtra] -> Rdio (Either String [Track])

-- | Takes: a list of track or playlist keys. Requires authentication.
removeFromCollection :: [String] -> Rdio (Either String Bool)

-- | Takes: a list of track or playlist keys. Requires authentication.
setAvailableOffline :: [String] -> Bool -> Rdio (Either String Object)

-- | Takes: a playlist key, a list of track keys to add to the playlist,
--   [extras] (optional). Requires authentication.
addToPlaylist :: String -> [String] -> [PlaylistExtra] -> Rdio (Either String Playlist)

-- | Takes: a name, a description, a list of track keys to start the
--   playlist with, [extras] (optional). Requires authentication.
createPlaylist :: String -> String -> [String] -> [PlaylistExtra] -> Rdio (Either String Playlist)

-- | Takes: a playlist key. Requires authentication.
deletePlaylist :: String -> Rdio (Either String Bool)

-- | Requires authentication OR use <tt>getPlaylists'</tt> and pass in a
--   user key.
getPlaylists :: Rdio (Either String UserPlaylists)
getPlaylists' :: Maybe String -> [PlaylistExtra] -> Maybe Bool -> Rdio (Either String UserPlaylists)

-- | Requires authentication OR use <tt>getUserPlaylists'</tt> and pass in
--   a user key.
getUserPlaylists :: String -> Rdio (Either String [Playlist])
getUserPlaylists' :: String -> Maybe PlaylistType -> Maybe String -> Maybe Int -> Maybe Int -> [PlaylistExtra] -> Rdio (Either String [Playlist])

-- | Takes: - a playlist key
--   
--   <ul>
--   <li>the index of the first item to remove</li>
--   <li>number of tracks to remove</li>
--   <li>the keys of the tracks to remove (redundancy to prevent accidental
--   deletion)</li>
--   <li>[extras] (optional)</li>
--   </ul>
--   
--   Requires authentication.
removeFromPlaylist :: String -> Int -> Int -> Int -> [PlaylistExtra] -> Rdio (Either String Playlist)

-- | Takes: a playlist key, a boolean (true == collaborating, false == not
--   collaborating). Requires authentication.
setPlaylistCollaborating :: String -> Bool -> Rdio (Either String Bool)

-- | Takes: a playlist key, a collaboration mode. Requires authentication.
setPlaylistCollaborationMode :: String -> CollaborationMode -> Rdio (Either String Bool)

-- | Takes: a playlist key, a name, a description. Requires authentication.
setPlaylistFields :: String -> String -> String -> Rdio (Either String Bool)

-- | Takes: a playlist key, a list of track keys, [extras] (optional).
--   Requires authentication.
setPlaylistOrder :: String -> [String] -> [PlaylistExtra] -> Rdio (Either String Playlist)

-- | Takes: a user key. Requires authentication.
addFriend :: String -> Rdio (Either String Bool)

-- | Requires authentication.
currentUser :: [UserExtra] -> Rdio (Either String User)

-- | Takes: an email address, [extras] (optional).
findUserByEmail :: String -> [UserExtra] -> Rdio (Either String User)

-- | Takes: user name, [extras] (optional).
findUserByName :: String -> [UserExtra] -> Rdio (Either String User)

-- | Takes: a user key. Requires authentication.
removeFriend :: String -> Rdio (Either String Bool)

-- | Takes: a user key.
userFollowers :: String -> Rdio (Either String [User])
userFollowers' :: String -> Maybe Int -> Maybe Int -> [UserExtra] -> Maybe String -> Rdio (Either String [User])

-- | Takes: a user key.
userFollowing :: String -> Rdio (Either String [User])
userFollowing' :: String -> Maybe Int -> Maybe Int -> [UserExtra] -> Maybe String -> Rdio (Either String [User])

-- | Takes: a user key, a scope.
getActivityStream :: String -> Scope -> Rdio (Either String Activity)
getActivityStream' :: String -> Scope -> Maybe Int -> Maybe Int -> Rdio (Either String Activity)
getHeavyRotationArtists :: Rdio (Either String [Artist])
getHeavyRotationArtists' :: Maybe String -> Maybe Bool -> Maybe Int -> Maybe Int -> Maybe Int -> [ArtistExtra] -> Rdio (Either String [Artist])
getHeavyRotationAlbums :: Rdio (Either String [Album])
getHeavyRotationAlbums' :: Maybe String -> Maybe Bool -> Maybe Int -> Maybe Int -> Maybe Int -> [AlbumExtra] -> Rdio (Either String [Album])
getNewReleases :: Rdio (Either String [Album])
getNewReleases' :: Maybe Timeframe -> Maybe Int -> Maybe Int -> [AlbumExtra] -> Rdio (Either String [Album])
getTopChartArtists :: Rdio (Either String [Artist])
getTopChartArtists' :: Maybe Int -> Maybe Int -> [ArtistExtra] -> Rdio (Either String [Artist])
getTopChartAlbums :: Rdio (Either String [Album])
getTopChartAlbums' :: Maybe Int -> Maybe Int -> [AlbumExtra] -> Rdio (Either String [Album])
getTopChartTracks :: Rdio (Either String [Track])
getTopChartTracks' :: Maybe Int -> Maybe Int -> [TrackExtra] -> Rdio (Either String [Track])
getTopChartPlaylists :: Rdio (Either String [Playlist])
getTopChartPlaylists' :: Maybe Int -> Maybe Int -> [PlaylistExtra] -> Rdio (Either String [Playlist])

-- | Takes: the domain that the playback SWF will be embedded in
--   (optional).
getPlaybackToken :: Maybe String -> Rdio (Either String String)
