-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | BitTorrent file parser and generater
--   
--   BitTorrent file parser and generater
@package torrent
@version 10000.0.0


-- | <a>http://en.wikipedia.org/wiki/Tracker_scrape</a>
module Data.Torrent.Scrape
data ScrapeInfo
ScrapeInfo :: Integer -> Integer -> ScrapeInfo
scrapeSeeds :: ScrapeInfo -> Integer
scrapeLeechers :: ScrapeInfo -> Integer
parseScrapeInfo :: ByteString -> Maybe ScrapeInfo
scrapeUrl :: ByteString -> [String] -> Maybe String
instance Read ScrapeInfo
instance Show ScrapeInfo

module Data.Torrent
data Torrent
Torrent :: ByteString -> [ByteString] -> ByteString -> Maybe ByteString -> TorrentInfo -> Torrent
tAnnounce :: Torrent -> ByteString
tAnnounceList :: Torrent -> [ByteString]
tComment :: Torrent -> ByteString
tCreatedBy :: Torrent -> Maybe ByteString
tInfo :: Torrent -> TorrentInfo
data TorrentInfo
SingleFile :: Integer -> ByteString -> Integer -> ByteString -> TorrentInfo
tLength :: TorrentInfo -> Integer
tName :: TorrentInfo -> ByteString
tPieceLength :: TorrentInfo -> Integer
tPieces :: TorrentInfo -> ByteString
MultiFile :: [TorrentFile] -> ByteString -> Integer -> ByteString -> TorrentInfo
tFiles :: TorrentInfo -> [TorrentFile]
tName :: TorrentInfo -> ByteString
tPieceLength :: TorrentInfo -> Integer
tPieces :: TorrentInfo -> ByteString
data TorrentFile
TorrentFile :: Integer -> [ByteString] -> TorrentFile
fileLength :: TorrentFile -> Integer
filePath :: TorrentFile -> [ByteString]
readTorrent :: ByteString -> Either String Torrent
serializeTorrent :: Torrent -> BEncode

-- | Size of the files in the torrent.
torrentSize :: Torrent -> Integer
instance Typeable TorrentFile
instance Typeable TorrentInfo
instance Typeable Torrent
instance Show TorrentFile
instance Read TorrentFile
instance Data TorrentFile
instance Show TorrentInfo
instance Read TorrentInfo
instance Data TorrentInfo
instance Show Torrent
instance Read Torrent
instance Data Torrent
instance Binary Torrent
