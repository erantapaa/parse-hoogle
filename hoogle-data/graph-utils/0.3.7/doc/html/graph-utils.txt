-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A simple wrapper & quasi quoter for fgl.
--   
--   Simple Wrapper for generating Graph provided by Data.Graph.Inductive.
--   It also contains PageRank calculator.
@package graph-utils
@version 0.3.7

module Data.Graph.PageRank

-- | <a>pageRanks</a> calculate the PageRank for each node in the Graph
--   <tt>gr</tt>
pageRanks :: (Graph gr) => gr a b -> Double -> Double -> RankDic

-- | <a>RankDic</a> is the Map for holding PageRank data.
type RankDic = Map Node Double

module Data.Graph.EasyGrapher

-- | Quasi quoter for <a>EGGraph</a>
gr :: QuasiQuoter

-- | <a>buildGraph</a> converts EGGraph <tt>gr</tt> into the '(gr a ())'
buildGraph :: (DynGraph gr, Ord a) => EGGraph a -> gr a ()

-- | 'EGGraph a' is a list of 'EGTerm a'.
type EGGraph a = [EGTerm a]

-- | <a>EGTerm</a> is a vertex &amp; an edge.
data (Eq a, Ord a) => EGTerm a
(:=>) :: a -> a -> EGTerm a
EGVertex :: a -> EGTerm a

-- | <a>fromGr</a> converts 'gr :: (gr a ())' into 'EGGraph a'
fromGr :: (Graph gr, Ord a) => gr a () -> EGGraph a
