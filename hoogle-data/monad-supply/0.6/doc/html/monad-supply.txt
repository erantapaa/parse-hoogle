-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Stateful supply monad.
--   
@package monad-supply
@version 0.6


-- | Support for computations which consume values from a (possibly
--   infinite) supply. See
--   <a>http://www.haskell.org/haskellwiki/New_monads/MonadSupply</a> for
--   details.
module Control.Monad.Supply
class Monad m => MonadSupply s m | m -> s
supply :: MonadSupply s m => m s
peek :: MonadSupply s m => m s
exhausted :: MonadSupply s m => m Bool

-- | Supply monad transformer.
data SupplyT s m a

-- | Supply monad.
data Supply s a
evalSupplyT :: Monad m => SupplyT s m a -> [s] -> m a
evalSupply :: Supply s a -> [s] -> a
runSupplyT :: Monad m => SupplyT s m a -> [s] -> m (a, [s])
runSupply :: Supply s a -> [s] -> (a, [s])

-- | Get n supplies.
supplies :: MonadSupply s m => Int -> m [s]
instance Functor m => Functor (SupplyT s m)
instance (Monad m, Functor m) => Applicative (SupplyT s m)
instance Monad m => Monad (SupplyT s m)
instance MonadTrans (SupplyT s)
instance MonadIO m => MonadIO (SupplyT s m)
instance MonadFix m => MonadFix (SupplyT s m)
instance Functor (Supply s)
instance Applicative (Supply s)
instance Monad (Supply s)
instance MonadSupply s (Supply s)
instance MonadFix (Supply s)
instance Monoid a => Monoid (Supply s a)
instance (Monoid w, MonadSupply s m) => MonadSupply s (WriterT w m)
instance MonadSupply s m => MonadSupply s (ReaderT r m)
instance MonadSupply s m => MonadSupply s (StateT st m)
instance (Error e, MonadSupply s m) => MonadSupply s (ErrorT e m)
instance Monad m => MonadSupply s (SupplyT s m)
