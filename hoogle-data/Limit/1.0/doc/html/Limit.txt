-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Wrapper for data that can be unbounded
--   
--   Limit n is like Maybe n, with (Bounded n) in place of (Just n) and
--   Unbounded in place of Nothing. The only difference is that âˆ€n.
--   Unbounded &gt;= Bounded n, which makes Limit a good data type to deal
--   with numbers that can become unbounded.
@package Limit
@version 1.0

module Data.Limit
data Limit a
Bounded :: a -> Limit a
Unbounded :: Limit a
isBounded :: Limit a -> Bool
isUnbounded :: Limit a -> Bool
fromBounded :: Limit a -> a
fromLimit :: a -> Limit a -> a
instance Eq a => Eq (Limit a)
instance Read a => Read (Limit a)
instance Show a => Show (Limit a)
instance Monad Limit
instance Functor Limit
instance Ord a => Ord (Limit a)
