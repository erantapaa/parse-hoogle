-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Approximate randomization test
--   
--   Functions and utilities to perform paired and unpaired approximate
--   randomization tests (Noreen, 1989).
--   
--   The utilities can also draw histograms of the applications of the test
--   statistic to the randomized samples. For support for more file
--   formats, install the package with the <tt>-withCairo</tt> flag.
@package approx-rand-test
@version 0.2.0


-- | The more tests that are applied on a dataset, the more likely it
--   becomes that a Type I error occurs (rejecting the null hypothesis when
--   it is true). This module provides significance level corrections for
--   repeated tests.
--   
--   For more information, see:
--   
--   <ul>
--   <li><i>Bonferroni and Šidák corrections for multiple comparisons, H.
--   Abdi, 2007, in: N.J. Salkind (ed.), Encyclopedia of Measurement and
--   Statistics, Thousand Oaks, CA: Sage</i></li>
--   </ul>
module Statistics.Test.Correction

-- | Sidak correction: α* = 1 - (1 - α)^(1 / n), where α is the intended
--   significance level over all tests, n the number of tests, and α* the
--   corrected significance level.
sidak :: (Floating f, Integral i) => f -> i -> f

-- | Bonferroni correction: α* = α / n, where α is the intended
--   significance level over all tests, n the number of tests, and α* the
--   corrected significance level.
bonferroni :: (Fractional f, Integral i) => f -> i -> f


-- | This module provides functionality to perform approximate
--   randomization tests (Noreen, 1989).
module Statistics.Test.ApproxRand

-- | Options for randomization tests
data TestOptions
TestOptions :: TestType -> TestStatistic -> Int -> Double -> TestOptions

-- | Type of test (<a>OneTailed</a> or <a>TwoTailed</a>)
toTestType :: TestOptions -> TestType

-- | Test statistic
toTestStatistic :: TestOptions -> TestStatistic

-- | Number of shuffled samples to create
toIterations :: TestOptions -> Int

-- | he p-value at which to test (e.g. 0.05)
toPValue :: TestOptions -> Double

-- | The result of hypothesis testing.
data TestResult
TestResult :: Significance -> Double -> Sample -> TestResult

-- | Significance
trSignificance :: TestResult -> Significance

-- | Test statistic for the samples
trStat :: TestResult -> Double

-- | Test statistics for the randomized samples
trRandomizedStats :: TestResult -> Sample

-- | Significance.
data Significance

-- | The null hypothesis should be rejected
Significant :: Double -> Significance

-- | Data is compatible with the null hypothesis
NotSignificant :: Double -> Significance

-- | Computations with random numbers that can fail.
type RandWithError a = ErrorT String Rand a

-- | Apply an approximate randomization test.
--   
--   In approximate randomization tests, the values of two samples are
--   shuffled among those samples. A test statistic is calculated for the
--   original samples and the shuffled samples, to detect whether the
--   difference of the samples is extreme or not.
approxRandTest :: TestOptions -> Sample -> Sample -> Rand TestResult

-- | Generate a given number of shuffled samples, and calculate the test
--   statistic for each shuffle.
--   
--   This function does not require the samples to have an equal length.
approxRandStats :: TestStatistic -> Int -> Sample -> Sample -> Rand Sample

-- | Apply a pair-wise approximate randomization test.
--   
--   In pair-wise approximate randomization tests the data points at a
--   given index are swapped between samples with a probability of 0.5.
--   Since swapping is pairwise, the samples should have the same length.
approxRandPairTest :: TestOptions -> Sample -> Sample -> RandWithError TestResult

-- | Generate a given number of pairwise shuffled samples, and calculate
--   the test statistic for each shuffle.
--   
--   Since the data points at a given index are swapped (with a probability
--   of 0.5), the samples should have the same length.
approxRandPairStats :: TestStatistic -> Int -> Sample -> Sample -> RandWithError Sample

-- | A test stastic calculates the difference between two samples. See
--   <a>meanDifference</a> and <a>varianceRatio</a> for examples.
type TestStatistic = Sample -> Sample -> Double

-- | Calculates the difference mean of two samples (<i>mean(s1 - s2)</i>).
--   When the two samples do not have an equal length, the trailing
--   elements of the longer vector are ignored.
differenceMean :: TestStatistic

-- | Calculates the mean difference of two samples (<i>mean(s1) -
--   mean(s2)</i>).
meanDifference :: TestStatistic

-- | Calculate the ratio of sample variances (<i>var(s1) : var(s2)</i>).
varianceRatio :: TestStatistic
instance Eq Significance
instance Ord Significance
instance Show Significance
instance Eq TestResult
instance Ord TestResult
instance Show TestResult
