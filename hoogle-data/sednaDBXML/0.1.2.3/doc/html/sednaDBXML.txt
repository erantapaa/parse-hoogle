-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Sedna C API XML Binding
--   
--   Sedna native XML database bindings. http:<i></i>www.sedna.org/
@package sednaDBXML
@version 0.1.2.3

module Database.SednaDB.Internal.SpDefs
c'SEDNA_MAX_RESULT_SIZE :: Num a => a
type C'se_debug_info_type = CUInt
c'se_QueryTrace :: Num a => a
c'se_QueryDebug :: Num a => a
type C'sp_int32 = CInt
data C'msg_struct
C'msg_struct :: C'sp_int32 -> C'sp_int32 -> [CChar] -> C'msg_struct
c'msg_struct'instruction :: C'msg_struct -> C'sp_int32
c'msg_struct'length :: C'msg_struct -> C'sp_int32
c'msg_struct'body :: C'msg_struct -> [CChar]
p'msg_struct'instruction :: Ptr (C'msg_struct) -> Ptr (C'sp_int32)
p'msg_struct'length :: Ptr (C'msg_struct) -> Ptr (C'sp_int32)
p'msg_struct'body :: Ptr (C'msg_struct) -> Ptr (CChar)
instance Eq C'msg_struct
instance Show C'msg_struct
instance Storable C'msg_struct

module Database.SednaDB.SednaExceptions
data SednaAuthenticationFailedException
SednaAuthenticationFailedException :: SednaAuthenticationFailedException
data SednaBulkLoadFailedException
SednaBulkLoadFailedException :: SednaBulkLoadFailedException
data SednaOpenSessionFailedException
SednaOpenSessionFailedException :: SednaOpenSessionFailedException
data SednaCloseSessionFailedException
SednaCloseSessionFailedException :: SednaCloseSessionFailedException
data SednaCommitTransactionFailedException
SednaCommitTransactionFailedException :: SednaCommitTransactionFailedException
data SednaFailedException
SednaFailedException :: SednaFailedException
data SednaNextItemFailedException
SednaNextItemFailedException :: SednaNextItemFailedException
data SednaRollBackTransactionFailedException
SednaRollBackTransactionFailedException :: SednaRollBackTransactionFailedException
data SednaTransactionException
SednaTransactionException :: e -> SednaTransactionException
data SednaBeginTransactionFailedException
SednaBeginTransactionFailedException :: SednaBeginTransactionFailedException
data SednaException
SednaException :: e -> SednaException
data SednaQueryException
SednaQueryException :: e -> SednaQueryException
data SednaQueryFailedException
SednaQueryFailedException :: SednaQueryFailedException
data SednaUpdateFailedException
SednaUpdateFailedException :: SednaUpdateFailedException
instance Typeable SednaException
instance Typeable SednaFailedException
instance Typeable SednaBulkLoadFailedException
instance Typeable SednaNextItemFailedException
instance Typeable SednaConnectionException
instance Typeable SednaOpenSessionFailedException
instance Typeable SednaCloseSessionFailedException
instance Typeable SednaAuthenticationFailedException
instance Typeable SednaconnectionFailedException
instance Typeable SednaTransactionException
instance Typeable SednaBeginTransactionFailedException
instance Typeable SednaCommitTransactionFailedException
instance Typeable SednaRollBackTransactionFailedException
instance Typeable SednaQueryException
instance Typeable SednaQueryFailedException
instance Typeable SednaUpdateFailedException
instance Show SednaFailedException
instance Show SednaBulkLoadFailedException
instance Show SednaNextItemFailedException
instance Show SednaOpenSessionFailedException
instance Show SednaCloseSessionFailedException
instance Show SednaAuthenticationFailedException
instance Show SednaconnectionFailedException
instance Show SednaBeginTransactionFailedException
instance Show SednaCommitTransactionFailedException
instance Show SednaRollBackTransactionFailedException
instance Show SednaQueryFailedException
instance Show SednaUpdateFailedException
instance Exception SednaUpdateFailedException
instance Exception SednaQueryFailedException
instance Exception SednaQueryException
instance Show SednaQueryException
instance Exception SednaRollBackTransactionFailedException
instance Exception SednaCommitTransactionFailedException
instance Exception SednaBeginTransactionFailedException
instance Exception SednaTransactionException
instance Show SednaTransactionException
instance Exception SednaconnectionFailedException
instance Exception SednaAuthenticationFailedException
instance Exception SednaCloseSessionFailedException
instance Exception SednaOpenSessionFailedException
instance Exception SednaConnectionException
instance Show SednaConnectionException
instance Exception SednaNextItemFailedException
instance Exception SednaBulkLoadFailedException
instance Exception SednaFailedException
instance Exception SednaException
instance Show SednaException

module Database.SednaDB.Internal.SednaResponseCodes
data SednaResponseCode
OperationSucceeded :: SednaResponseCode
SessionOpen :: SednaResponseCode
SessionClosed :: SednaResponseCode
AuthenticationFailed :: SednaResponseCode
OpenSessionFailed :: SednaResponseCode
CloseSessionFailed :: SednaResponseCode
QuerySucceeded :: SednaResponseCode
QueryFailed :: SednaResponseCode
UpdateSucceeded :: SednaResponseCode
UpdateFailed :: SednaResponseCode
BulkLoadSucceeded :: SednaResponseCode
BulkLoadFailed :: SednaResponseCode
BeginTransactionSucceeded :: SednaResponseCode
BeginTransactionFailed :: SednaResponseCode
RollBackTansactionSucceeded :: SednaResponseCode
RollBackTransactionFailed :: SednaResponseCode
CommitTransactionSucceeded :: SednaResponseCode
CommitTransactionFailed :: SednaResponseCode
NextItemSucceeded :: SednaResponseCode
NextItemFailed :: SednaResponseCode
NoItem :: SednaResponseCode
ResultEnd :: SednaResponseCode
DataChunkLoaded :: SednaResponseCode
SednaError :: SednaResponseCode
TransactionActive :: SednaResponseCode
NoTransaction :: SednaResponseCode
ConnectionOK :: SednaResponseCode
ConnectionClosed :: SednaResponseCode
ConnectionFailed :: SednaResponseCode
SetAttributeSucceeded :: SednaResponseCode
GetAttributeSucceeded :: SednaResponseCode
ResetAttributeSucceeded :: SednaResponseCode
fromCConstant :: CInt -> SednaResponseCode
toCConstant :: Integral a => SednaResponseCode -> a
instance Eq SednaResponseCode
instance Show SednaResponseCode

module Database.SednaDB.Internal.SednaConnectionAttributes
newtype SednaConnectionAttr
SednaConnectionAttr :: CInt -> SednaConnectionAttr
sednaConnectionAttr :: SednaConnectionAttr -> CInt
newtype SednaConnAttrValue
SednaConnAttrValue :: CInt -> SednaConnAttrValue
sednaConnAttrValue :: SednaConnAttrValue -> CInt
attrAutoCommit :: SednaConnectionAttr
attrSessionDirectory :: SednaConnectionAttr
attrDebug :: SednaConnectionAttr
attrBoundarySpacePreserveWhileLoad :: SednaConnectionAttr
attrConcurrencyType :: SednaConnectionAttr
attrQueryExecTimeOut :: SednaConnectionAttr
autoCommitOff :: SednaConnAttrValue
attrLogAmount :: SednaConnectionAttr
autoCommitOn :: SednaConnAttrValue
attrMaxResultSize :: SednaConnectionAttr
readOnlyTransaction :: SednaConnAttrValue
updateTransaction :: SednaConnAttrValue
debugOn :: SednaConnAttrValue
debugOff :: SednaConnAttrValue
logLess :: SednaConnAttrValue
logFull :: SednaConnAttrValue
boundarySpacePreserveOn :: SednaConnAttrValue
boundarySpacePreserveOff :: SednaConnAttrValue
instance Eq SednaConnectionAttr
instance Ord SednaConnectionAttr
instance Show SednaConnectionAttr
instance Eq SednaConnAttrValue
instance Ord SednaConnAttrValue
instance Show SednaConnAttrValue

module Database.SednaDB.Internal.SednaCBindings
c'QUERY_EXECUTION_TIME :: Num a => a
c'BULK_LOAD_PORTION :: Num a => a
data C'conn_bulk_load
C'conn_bulk_load :: CChar -> [CChar] -> [CChar] -> C'conn_bulk_load
c'conn_bulk_load'bulk_load_started :: C'conn_bulk_load -> CChar
c'conn_bulk_load'doc_name :: C'conn_bulk_load -> [CChar]
c'conn_bulk_load'col_name :: C'conn_bulk_load -> [CChar]
type C'debug_handler_t = FunPtr (FunPtr (C'se_debug_info_type -> CString -> IO ()))
mk'debug_handler_t :: (FunPtr (C'se_debug_info_type -> CString -> IO ())) -> IO C'debug_handler_t
p'conn_bulk_load'bulk_load_started :: Ptr (C'conn_bulk_load) -> Ptr (CChar)
mK'debug_handler_t :: C'debug_handler_t -> (FunPtr (C'se_debug_info_type -> CString -> IO ()))
p'conn_bulk_load'doc_name :: Ptr (C'conn_bulk_load) -> Ptr (CChar)
p'conn_bulk_load'col_name :: Ptr (C'conn_bulk_load) -> Ptr (CChar)
data C'SednaConnection
C'SednaConnection :: [CChar] -> [CChar] -> [CChar] -> [CChar] -> [CChar] -> CInt -> CInt -> [CChar] -> [CChar] -> CChar -> CChar -> CChar -> CChar -> C'conn_bulk_load -> CInt -> CInt -> CInt -> CInt -> CInt -> [CChar] -> C'msg_struct -> C'debug_handler_t -> CChar -> CInt -> CInt -> C'SednaConnection
c'SednaConnection'url :: C'SednaConnection -> [CChar]
c'SednaConnection'db_name :: C'SednaConnection -> [CChar]
c'SednaConnection'login :: C'SednaConnection -> [CChar]
c'SednaConnection'password :: C'SednaConnection -> [CChar]
c'SednaConnection'session_directory :: C'SednaConnection -> [CChar]
c'SednaConnection'socket :: C'SednaConnection -> CInt
c'SednaConnection'last_error :: C'SednaConnection -> CInt
c'SednaConnection'last_error_msg :: C'SednaConnection -> [CChar]
c'SednaConnection'query_time :: C'SednaConnection -> [CChar]
c'SednaConnection'socket_keeps_data :: C'SednaConnection -> CChar
c'SednaConnection'first_next :: C'SednaConnection -> CChar
c'SednaConnection'result_end :: C'SednaConnection -> CChar
c'SednaConnection'in_query :: C'SednaConnection -> CChar
c'SednaConnection'cbl :: C'SednaConnection -> C'conn_bulk_load
c'SednaConnection'isInTransaction :: C'SednaConnection -> CInt
c'SednaConnection'isConnectionOk :: C'SednaConnection -> CInt
c'SednaConnection'autocommit :: C'SednaConnection -> CInt
c'SednaConnection'local_data_length :: C'SednaConnection -> CInt
c'SednaConnection'local_data_offset :: C'SednaConnection -> CInt
c'SednaConnection'local_data_buf :: C'SednaConnection -> [CChar]
c'SednaConnection'msg :: C'SednaConnection -> C'msg_struct
c'SednaConnection'debug_handler :: C'SednaConnection -> C'debug_handler_t
c'SednaConnection'boundary_space_preserve :: C'SednaConnection -> CChar
c'SednaConnection'query_timeout :: C'SednaConnection -> CInt
c'SednaConnection'max_result_size :: C'SednaConnection -> CInt
c'SEconnect :: Ptr C'SednaConnection -> CString -> CString -> CString -> CString -> IO CInt
c'SEclose :: Ptr C'SednaConnection -> IO CInt
p'SEconnect :: FunPtr (Ptr C'SednaConnection -> CString -> CString -> CString -> CString -> IO CInt)
p'SEclose :: FunPtr (Ptr C'SednaConnection -> IO CInt)
c'SEbegin :: Ptr C'SednaConnection -> IO CInt
c'SErollback :: Ptr C'SednaConnection -> IO CInt
c'SEcommit :: Ptr C'SednaConnection -> IO CInt
p'SEbegin :: FunPtr (Ptr C'SednaConnection -> IO CInt)
p'SErollback :: FunPtr (Ptr C'SednaConnection -> IO CInt)
p'SEcommit :: FunPtr (Ptr C'SednaConnection -> IO CInt)
c'SEexecuteLong :: Ptr C'SednaConnection -> CString -> IO CInt
c'SEexecute :: Ptr C'SednaConnection -> CString -> IO CInt
p'SEexecuteLong :: FunPtr (Ptr C'SednaConnection -> CString -> IO CInt)
p'SEexecute :: FunPtr (Ptr C'SednaConnection -> CString -> IO CInt)
c'SEgetData :: Ptr C'SednaConnection -> CString -> CInt -> IO CInt
c'SEloadData :: Ptr C'SednaConnection -> CString -> CInt -> CString -> CString -> IO CInt
c'SEendLoadData :: Ptr C'SednaConnection -> IO CInt
p'SEgetData :: FunPtr (Ptr C'SednaConnection -> CString -> CInt -> IO CInt)
p'SEloadData :: FunPtr (Ptr C'SednaConnection -> CString -> CInt -> CString -> CString -> IO CInt)
p'SEendLoadData :: FunPtr (Ptr C'SednaConnection -> IO CInt)
c'SEnext :: Ptr C'SednaConnection -> IO CInt
p'SEnext :: FunPtr (Ptr C'SednaConnection -> IO CInt)
c'SEgetLastErrorCode :: Ptr C'SednaConnection -> IO CInt
c'SEgetLastErrorMsg :: Ptr C'SednaConnection -> IO CString
p'SEgetLastErrorCode :: FunPtr (Ptr C'SednaConnection -> IO CInt)
p'SEgetLastErrorMsg :: FunPtr (Ptr C'SednaConnection -> IO CString)
p'SednaConnection'url :: Ptr (C'SednaConnection) -> Ptr (CChar)
c'SEconnectionStatus :: Ptr C'SednaConnection -> IO CInt
c'SEtransactionStatus :: Ptr C'SednaConnection -> IO CInt
p'SednaConnection'db_name :: Ptr (C'SednaConnection) -> Ptr (CChar)
p'SEconnectionStatus :: FunPtr (Ptr C'SednaConnection -> IO CInt)
p'SEtransactionStatus :: FunPtr (Ptr C'SednaConnection -> IO CInt)
p'SednaConnection'login :: Ptr (C'SednaConnection) -> Ptr (CChar)
c'SEshowTime :: Ptr C'SednaConnection -> IO CString
p'SednaConnection'password :: Ptr (C'SednaConnection) -> Ptr (CChar)
p'SEshowTime :: FunPtr (Ptr C'SednaConnection -> IO CString)
c'SEsetConnectionAttr :: Ptr C'SednaConnection -> CUInt -> Ptr () -> CInt -> IO CInt
p'SednaConnection'session_directory :: Ptr (C'SednaConnection) -> Ptr (CChar)
c'SEgetConnectionAttr :: Ptr C'SednaConnection -> CUInt -> Ptr () -> Ptr CInt -> IO CInt
p'SEsetConnectionAttr :: FunPtr (Ptr C'SednaConnection -> CUInt -> Ptr () -> CInt -> IO CInt)
p'SednaConnection'socket :: Ptr (C'SednaConnection) -> Ptr (CInt)
p'SEgetConnectionAttr :: FunPtr (Ptr C'SednaConnection -> CUInt -> Ptr () -> Ptr CInt -> IO CInt)
c'SEresetAllConnectionAttr :: Ptr C'SednaConnection -> IO CInt
p'SednaConnection'last_error :: Ptr (C'SednaConnection) -> Ptr (CInt)
p'SEresetAllConnectionAttr :: FunPtr (Ptr C'SednaConnection -> IO CInt)
p'SednaConnection'last_error_msg :: Ptr (C'SednaConnection) -> Ptr (CChar)
c'SEsetDebugHandler :: Ptr C'SednaConnection -> C'debug_handler_t -> Ptr ()
p'SednaConnection'query_time :: Ptr (C'SednaConnection) -> Ptr (CChar)
p'SEsetDebugHandler :: FunPtr (Ptr C'SednaConnection -> C'debug_handler_t -> Ptr ())
p'SednaConnection'socket_keeps_data :: Ptr (C'SednaConnection) -> Ptr (CChar)
p'SednaConnection'first_next :: Ptr (C'SednaConnection) -> Ptr (CChar)
p'SednaConnection'result_end :: Ptr (C'SednaConnection) -> Ptr (CChar)
p'SednaConnection'in_query :: Ptr (C'SednaConnection) -> Ptr (CChar)
p'SednaConnection'cbl :: Ptr (C'SednaConnection) -> Ptr (C'conn_bulk_load)
p'SednaConnection'isInTransaction :: Ptr (C'SednaConnection) -> Ptr (CInt)
p'SednaConnection'isConnectionOk :: Ptr (C'SednaConnection) -> Ptr (CInt)
p'SednaConnection'autocommit :: Ptr (C'SednaConnection) -> Ptr (CInt)
p'SednaConnection'local_data_length :: Ptr (C'SednaConnection) -> Ptr (CInt)
p'SednaConnection'local_data_offset :: Ptr (C'SednaConnection) -> Ptr (CInt)
p'SednaConnection'local_data_buf :: Ptr (C'SednaConnection) -> Ptr (CChar)
p'SednaConnection'msg :: Ptr (C'SednaConnection) -> Ptr (C'msg_struct)
p'SednaConnection'debug_handler :: Ptr (C'SednaConnection) -> Ptr (C'debug_handler_t)
p'SednaConnection'boundary_space_preserve :: Ptr (C'SednaConnection) -> Ptr (CChar)
p'SednaConnection'query_timeout :: Ptr (C'SednaConnection) -> Ptr (CInt)
p'SednaConnection'max_result_size :: Ptr (C'SednaConnection) -> Ptr (CInt)
instance Eq C'conn_bulk_load
instance Show C'conn_bulk_load
instance Eq C'SednaConnection
instance Show C'SednaConnection
instance Storable C'SednaConnection
instance Storable C'conn_bulk_load

module Database.SednaDB.SednaTypes
type SednaConnection = Ptr C'SednaConnection
type Transaction a = ReaderT TransactionEnv (ErrorT ErrorMsg IO) a
type QueryResult = String
type Query = String
getTransactionEnv :: Transaction TransactionEnv
data TransactionEnv
TransactionEnv :: SednaConnection -> Collection -> Document -> TransactionEnv
type Document = String
type Collection = String
runTransaction :: SednaConnection -> Document -> Collection -> Transaction QueryResult -> IO (Either ErrorMsg QueryResult)
type URL = String
type Password = String
type DBName = String
type UserName = String
instance Show TransactionEnv

module Database.SednaDB.SednaBindings
sednaBegin :: SednaConnection -> IO ()
sednaCloseConnection :: SednaConnection -> IO ()
sednaCommit :: SednaConnection -> IO ()
sednaConnect :: URL -> DBName -> UserName -> Password -> IO SednaConnection
sednaEndLoadData :: SednaConnection -> IO ()
sednaExecute :: SednaConnection -> Query -> IO ()
sednaExecuteLong :: SednaConnection -> Query -> IO ()
sednaGetConnectionAttr :: SednaConnection -> SednaConnectionAttr -> IO SednaConnAttrValue
sednaGetData :: SednaConnection -> Int -> IO (SednaResponseCode, ByteString)
sednaGetLastErrorCode :: SednaConnection -> IO SednaResponseCode
sednaGetLastErrorMsg :: SednaConnection -> IO String
sednaGetResultString :: SednaConnection -> IO QueryResult
sednaNext :: SednaConnection -> IO SednaResponseCode
sednaResetAllConnectionAttr :: SednaConnection -> IO ()
sednaRollBack :: SednaConnection -> IO ()
sednaSetConnectionAttr :: SednaConnection -> SednaConnAttrValue -> IO ()
sednaShowTime :: SednaConnection -> IO String
sednaTransactionStatus :: SednaConnection -> IO SednaResponseCode
sednaLoadFile :: FilePath -> SednaConnection -> Document -> Collection -> IO ()
sednaLoadData :: SednaConnection -> ByteString -> Document -> Collection -> IO ()
