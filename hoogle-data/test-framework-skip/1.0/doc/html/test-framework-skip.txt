-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Functions for conveniently marking some of the tests in a suite as being skipped.
--   
--   When tracking down a problem it can often be useful to temporarily
--   disable some or many of the tests in a suite so that one can focus on
--   the problematic tests. Rather than using a mess of comments, this
--   module provides a function <a>skip</a> (and a few variants) that
--   causses a test or an entire test suite to be skipped - specifically,
--   they will still show up in the suite as being <a>skipped</a>, but they
--   will not be run.
@package test-framework-skip
@version 1.0

module Test.Framework.Skip

-- | Causes the given test or test suite to be skipped, though it will
--   still show up as being <a>skipped</a> when the suite is run. If given
--   a test suite, <a>skip</a> recursively applies it itself to the child
--   tests and suites, all of which (except for the groups) will show up as
--   being <tt>skipped</tt> when the test suite is run.
skip :: Test -> Test

-- | Instead of using the <a>skip</a> function, you can change
--   <tt>testCase</tt> to <a>skipTestCase</a> to cause the test to be
--   skipped.
skipTestCase :: String -> a -> Test

-- | Instead of using the <a>skip</a> function, you can change
--   <tt>testGroup</tt> to <a>skipTestGroup</a> to cause the test suite to
--   be skipped.
skipTestGroup :: String -> [Test] -> Test

-- | Instead of using the <a>skip</a> function, you can change
--   <tt>testProperty</tt> to <a>skipTestProperty</a> to cause the test to
--   be skipped. (Note that this work regardless of whether you are using
--   QuickCheck or SmallCheck for this particular test.)
skipTestProperty :: String -> a -> Test
instance Typeable Skip
instance Testlike Skip Skip Skip
instance TestResultlike Skip Skip
instance Show Skip
