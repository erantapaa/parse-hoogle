-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Tools for using reStructuredText (RST) in a yesod application
--   
--   A subset of pandoc functionality useful for RST processing in yesod
--   applications
@package yesod-rst
@version 0.2.3


-- | This module provides the functionallity to use pandocs reader for
--   reStructuredText (RST) in Yesod. The code bases heavily on
--   yesod-markdown from Patrick Brisbin, which does the same thing for
--   Markdown.
module Yesod.RST
newtype RST
RST :: String -> RST

-- | Converts RST to sanitizied Html
rstToHtml :: RST -> Html

-- | Converts RST to unsanitizied Html
rstToHtmlTrusted :: RST -> Html

-- | Reads RST in from the specified file; returns the empty string if the
--   file does not exist
rstFromFile :: FilePath -> IO RST

-- | Parses Markdown into the intermediate Pandoc type
parseRST :: ParserState -> RST -> Pandoc

-- | Converts the intermediate Pandoc type to Html. Sanitizes HTML.
writePandoc :: WriterOptions -> Pandoc -> Html

-- | Skips the sanitization and its required conversion to Text
writePandocTrusted :: WriterOptions -> Pandoc -> Html

-- | Pandoc defaults, plus Html5, minus WrapText
yesodDefaultWriterOptions :: WriterOptions

-- | Pandoc defaults, plus Smart, plus ParseRaw
yesodDefaultParserState :: ParserState
rstField :: RenderMessage master FormMessage => Field sub master RST
instance Eq RST
instance Ord RST
instance Show RST
instance Read RST
instance PersistField RST
instance IsString RST
instance Monoid RST
instance ToField (Maybe RST) master
instance ToField RST master
