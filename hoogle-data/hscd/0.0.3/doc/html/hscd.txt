-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Command line client and library for SoundCloud.com
--   
--   A command line client and library to access SoundCloud.com.
--   
--   Supports fetching tracks and getting information about tracks, users,
--   sets, groups and SoundCloud apps.
@package hscd
@version 0.0.3


-- | Constants and URLs of the SoundCloud API resources
module Network.SoundCloud.Const

-- | HScD SoundCloud API client ID
clientId :: String

-- | Base URL of the SoundCloud API
apiURL :: String

-- | Base URL of the SoundCloud API (Secure)
apiURLS :: String

-- | Base URL for the authenticated user resources
apiMeURLS :: String

-- | URL for the authentication interface
authURLS :: String

-- | URL of the OAuth2 token handler
tokenURLS :: String

-- | Base URL for Tracks
tracksURL :: String

-- | Base URL for Users
usersURL :: String

-- | Base URL for Sets/Playlists
playlistsURL :: String

-- | Base URL for Groups
groupsURL :: String

-- | Base URL for Comments
commentsURL :: String

-- | URL of the authenticated user connections
meConnectionsURLS :: String

-- | URL of the authenticated user activities, AKA dashboard
meActivitiesURLS :: String

-- | Base URL for Applications
appsURLS :: String

-- | URL to the resource resolver
resolveURL :: String


-- | Minimal representation of an user used when embedding users
--   information on other resources information
module Network.SoundCloud.MiniUser

-- | Represents mini user JSON as a record
data JSON
JSON :: Int -> String -> String -> String -> Maybe String -> JSON
id :: JSON -> Int
username :: JSON -> String
uri :: JSON -> String
permalink_url :: JSON -> String
avatar_url :: JSON -> Maybe String

-- | Decode a <a>JSON</a> record from a valid miniuser JSON string
decodeJSON :: String -> Maybe JSON
instance Show JSON
instance Generic JSON
instance Datatype D1JSON
instance Constructor C1_0JSON
instance Selector S1_0_0JSON
instance Selector S1_0_1JSON
instance Selector S1_0_2JSON
instance Selector S1_0_3JSON
instance Selector S1_0_4JSON
instance ToJSON JSON
instance FromJSON JSON


-- | Represents SoundCloud comments
module Network.SoundCloud.Comment

-- | Represents comment's JSON as a record
data JSON
JSON :: Int -> String -> String -> Maybe Int -> JSON -> Int -> JSON
id :: JSON -> Int
created_at :: JSON -> String
body :: JSON -> String
timestamp :: JSON -> Maybe Int
user :: JSON -> JSON
track_id :: JSON -> Int

-- | Decode a comment's valid JSON string into a comment's <a>JSON</a>
--   record
decodeJSON :: String -> Maybe JSON

-- | Show a summary about a comment
showComment :: JSON -> String
instance Show JSON
instance Generic JSON
instance Datatype D1JSON
instance Constructor C1_0JSON
instance Selector S1_0_0JSON
instance Selector S1_0_1JSON
instance Selector S1_0_2JSON
instance Selector S1_0_3JSON
instance Selector S1_0_4JSON
instance Selector S1_0_5JSON
instance ToJSON JSON
instance FromJSON JSON


-- | General functions used by other modules
module Network.SoundCloud.Util

-- | Issue a <tt>GET</tt> HTTP request to the passed URL returning
--   <tt>Nothing</tt> if a response code different than 2XX is found.
scSimpleGet :: String -> IO (Maybe String)

-- | Issue a <tt>GET</tt> HTTP request to the passed URL recursing over
--   redirections
scRecursiveGet :: String -> IO (Maybe String)

-- | Given an URL as a first parameter, and a path as a second, issue a
--   <tt>GET</tt> request to the <tt>URL</tt> and save the response body to
--   a file at <tt>path</tt>.
scFetch :: String -> String -> IO ()

-- | Given an arbitrary resource URL, returns the type of the resource.
--   
--   The response can be one of:
--   
--   <ul>
--   <li><pre>track</pre></li>
--   <li><pre>user</pre></li>
--   <li><pre>set</pre></li>
--   <li><pre>group</pre></li>
--   <li><pre>comment</pre></li>
--   <li><pre>app</pre></li>
--   <li><pre>nothing</pre></li>
--   </ul>
scResourceType :: String -> String

-- | Get the API url of a resource given its public URL. In example, for a
--   public URL like:
--   
--   <a>http://soundcloud.com/user/track</a>
--   
--   It returns the API URL:
--   
--   <a>http://api.soundcloud.com/tracks/track_id.json?client_id=foo</a>
scResolve :: String -> IO String


-- | Represents SoundCloud applications as found at
--   <a>http://soundcloud.com/apps</a>
module Network.SoundCloud.App

-- | JSON representation of applications
data JSON
JSON :: Int -> String -> String -> String -> JSON
id :: JSON -> Int
permalink_url :: JSON -> String
external_url :: JSON -> String
creator :: JSON -> String

-- | Decode a valid JSON string into an application <a>JSON</a> record
decodeJSON :: String -> Maybe JSON

-- | Get an application <a>JSON</a> record given a public app URL as in
--   <a>http://soundcloud.com/apps/app_name</a>
getJSON :: String -> IO (Maybe JSON)

-- | Show general information about an application in the standard output
showInfo :: String -> IO ()
instance Show JSON
instance Generic JSON
instance Datatype D1JSON
instance Constructor C1_0JSON
instance Selector S1_0_0JSON
instance Selector S1_0_1JSON
instance Selector S1_0_2JSON
instance Selector S1_0_3JSON
instance ToJSON JSON
instance FromJSON JSON


-- | Represents Groups as in http:<i></i>soundcloud.com/groups
module Network.SoundCloud.Group

-- | Represents group's JSON as a record
data JSON
JSON :: Int -> String -> String -> String -> String -> String -> JSON -> JSON
id :: JSON -> Int
created_at :: JSON -> String
permalink_url :: JSON -> String
name :: JSON -> String
description :: JSON -> String
short_description :: JSON -> String
creator :: JSON -> JSON

-- | Decode a group's valid JSON string into a <a>JSON</a> record
decodeJSON :: String -> Maybe JSON

-- | Get a group record given a public URL as in
--   http:<i></i>soundcloud.com<i>groups</i>group_name
getJSON :: String -> IO (Maybe JSON)

-- | Show general information about a group in the standard output
showInfo :: String -> IO ()
instance Show JSON
instance Generic JSON
instance Datatype D1JSON
instance Constructor C1_0JSON
instance Selector S1_0_0JSON
instance Selector S1_0_1JSON
instance Selector S1_0_2JSON
instance Selector S1_0_3JSON
instance Selector S1_0_4JSON
instance Selector S1_0_5JSON
instance Selector S1_0_6JSON
instance ToJSON JSON
instance FromJSON JSON


-- | Implements tracks related types and functions
module Network.SoundCloud.Track

-- | Represent a track's JSON as a record
data JSON
JSON :: Int -> String -> JSON -> String -> String -> String -> String -> Maybe Int -> Maybe String -> Int -> String -> String -> Maybe Int -> Maybe Int -> Maybe Int -> Bool -> Bool -> String -> String -> Maybe Int -> Int -> Int -> Int -> Int -> String -> Int -> String -> JSON
id :: JSON -> Int
created_at :: JSON -> String
user :: JSON -> JSON
title :: JSON -> String
permalink_url :: JSON -> String
sharing :: JSON -> String
description :: JSON -> String
label_id :: JSON -> Maybe Int
label_name :: JSON -> Maybe String
duration :: JSON -> Int
genre :: JSON -> String
license :: JSON -> String
release_day :: JSON -> Maybe Int
release_month :: JSON -> Maybe Int
release_year :: JSON -> Maybe Int
streamable :: JSON -> Bool
downloadable :: JSON -> Bool
track_type :: JSON -> String
stream_url :: JSON -> String
bpm :: JSON -> Maybe Int
comment_count :: JSON -> Int
download_count :: JSON -> Int
playback_count :: JSON -> Int
favoritings_count :: JSON -> Int
original_format :: JSON -> String
original_content_size :: JSON -> Int
tag_list :: JSON -> String

-- | Simple record to parse download_url from a track's JSON
data DownloadJSON
DownloadJSON :: String -> DownloadJSON
download_url :: DownloadJSON -> String

-- | Decode a <a>JSON</a> record from a track valid JSON string
decodeJSON :: String -> Maybe JSON

-- | Get a <a>JSON</a> record given a track URL as in
--   <a>http://soundcloud.com/artist/track_title</a>
getJSON :: String -> IO (Maybe JSON)

-- | Decode a <a>DownloadJSON</a> record out of a track's JSON
decodeDownloadJSON :: String -> Maybe DownloadJSON

-- | Decode a <a>Network.SoundCloud.Comment</a> <tt>JSON</tt> list given a
--   track id
decodeComments :: String -> Maybe [JSON]

-- | Given the track id, get its comments as a list of
--   <a>Network.SoundCloud.Comment</a> <tt>JSON</tt>
getComments :: Int -> IO (Maybe [JSON])

-- | Fetch a downloadable track
fetch :: String -> String -> IO ()

-- | Show general information about the track at the given URL in the
--   standard output
showInfo :: String -> IO ()
instance Show JSON
instance Generic JSON
instance Show DownloadJSON
instance Generic DownloadJSON
instance Datatype D1JSON
instance Constructor C1_0JSON
instance Selector S1_0_0JSON
instance Selector S1_0_1JSON
instance Selector S1_0_2JSON
instance Selector S1_0_3JSON
instance Selector S1_0_4JSON
instance Selector S1_0_5JSON
instance Selector S1_0_6JSON
instance Selector S1_0_7JSON
instance Selector S1_0_8JSON
instance Selector S1_0_9JSON
instance Selector S1_0_10JSON
instance Selector S1_0_11JSON
instance Selector S1_0_12JSON
instance Selector S1_0_13JSON
instance Selector S1_0_14JSON
instance Selector S1_0_15JSON
instance Selector S1_0_16JSON
instance Selector S1_0_17JSON
instance Selector S1_0_18JSON
instance Selector S1_0_19JSON
instance Selector S1_0_20JSON
instance Selector S1_0_21JSON
instance Selector S1_0_22JSON
instance Selector S1_0_23JSON
instance Selector S1_0_24JSON
instance Selector S1_0_25JSON
instance Selector S1_0_26JSON
instance Datatype D1DownloadJSON
instance Constructor C1_0DownloadJSON
instance Selector S1_0_0DownloadJSON
instance ToJSON DownloadJSON
instance FromJSON DownloadJSON
instance ToJSON JSON
instance FromJSON JSON


-- | Representations for track sets
module Network.SoundCloud.Set

-- | Represents Set JSON as a record
data JSON
JSON :: Int -> String -> JSON -> String -> String -> String -> String -> Int -> String -> String -> Maybe Int -> Maybe Int -> Maybe Int -> Bool -> Maybe Bool -> String -> [JSON] -> JSON
id :: JSON -> Int
created_at :: JSON -> String
user :: JSON -> JSON
title :: JSON -> String
permalink_url :: JSON -> String
sharing :: JSON -> String
description :: JSON -> String
duration :: JSON -> Int
genre :: JSON -> String
license :: JSON -> String
release_day :: JSON -> Maybe Int
release_month :: JSON -> Maybe Int
release_year :: JSON -> Maybe Int
streamable :: JSON -> Bool
downloadable :: JSON -> Maybe Bool
playlist_type :: JSON -> String
tracks :: JSON -> [JSON]

-- | Decode a <a>JSON</a> record from a valid set JSON string
decodeJSON :: String -> Maybe JSON

-- | Get a set <a>JSON</a> record given it's public URL as in
--   <a>http://soundcloud.com/artist/set_title</a>
getJSON :: String -> IO (Maybe JSON)

-- | Get a string with a summary description of a track
showTrack :: JSON -> String

-- | Show general information about a set in the standard output
showInfo :: String -> IO ()
instance Show JSON
instance Generic JSON
instance Datatype D1JSON
instance Constructor C1_0JSON
instance Selector S1_0_0JSON
instance Selector S1_0_1JSON
instance Selector S1_0_2JSON
instance Selector S1_0_3JSON
instance Selector S1_0_4JSON
instance Selector S1_0_5JSON
instance Selector S1_0_6JSON
instance Selector S1_0_7JSON
instance Selector S1_0_8JSON
instance Selector S1_0_9JSON
instance Selector S1_0_10JSON
instance Selector S1_0_11JSON
instance Selector S1_0_12JSON
instance Selector S1_0_13JSON
instance Selector S1_0_14JSON
instance Selector S1_0_15JSON
instance Selector S1_0_16JSON
instance ToJSON JSON
instance FromJSON JSON


-- | Implements users related types and functions
module Network.SoundCloud.User

-- | Record representation of a user's JSON
data JSON
JSON :: Int -> String -> String -> String -> String -> String -> String -> String -> String -> Bool -> Int -> Int -> Int -> Int -> Int -> JSON
id :: JSON -> Int
uri :: JSON -> String
permalink_url :: JSON -> String
country :: JSON -> String
full_name :: JSON -> String
city :: JSON -> String
description :: JSON -> String
website :: JSON -> String
website_title :: JSON -> String
online :: JSON -> Bool
track_count :: JSON -> Int
playlist_count :: JSON -> Int
followers_count :: JSON -> Int
followings_count :: JSON -> Int
public_favorites_count :: JSON -> Int

-- | Decode a <a>JSON</a> record out of a user's valid JSON string
decodeJSON :: String -> Maybe JSON

-- | Get a <a>JSON</a> record given an user URL as in
--   <a>http://soundcloud.com/artist</a>
getJSON :: String -> IO (Maybe JSON)

-- | Show a summary of an user information in the standard output given the
--   user's URL
showInfo :: String -> IO ()
instance Show JSON
instance Generic JSON
instance Datatype D1JSON
instance Constructor C1_0JSON
instance Selector S1_0_0JSON
instance Selector S1_0_1JSON
instance Selector S1_0_2JSON
instance Selector S1_0_3JSON
instance Selector S1_0_4JSON
instance Selector S1_0_5JSON
instance Selector S1_0_6JSON
instance Selector S1_0_7JSON
instance Selector S1_0_8JSON
instance Selector S1_0_9JSON
instance Selector S1_0_10JSON
instance Selector S1_0_11JSON
instance Selector S1_0_12JSON
instance Selector S1_0_13JSON
instance Selector S1_0_14JSON
instance ToJSON JSON
instance FromJSON JSON


-- | The <tt>Network.SoundCloud</tt> module provides functions and types to
--   access the soundcloud.com public API.
--   
--   <i>Resource Modules</i>
--   
--   The library is composed by a set of modules implementing datatypes and
--   functions for the resources available through the API. Namely,
--   
--   <ul>
--   <li><a>Network.SoundCloud.App</a></li>
--   <li><a>Network.SoundCloud.Comment</a></li>
--   <li><a>Network.SoundCloud.Group</a></li>
--   <li><a>Network.SoundCloud.MiniUser</a></li>
--   <li><a>Network.SoundCloud.Set</a></li>
--   <li><a>Network.SoundCloud.Track</a></li>
--   <li><a>Network.SoundCloud.User</a></li>
--   </ul>
--   
--   Every resource module defines at least a <tt>JSON</tt> record and the
--   <tt>getJSON</tt> and <tt>decodeJSON</tt> functions.
--   
--   <i>Base Modules</i>
--   
--   The base modules provide values and functions that are to be used by
--   the rest of the modules in the library. The base modules are,
--   
--   <ul>
--   <li><a>Network.SoundCloud.Const</a></li>
--   <li><a>Network.SoundCloud.Util</a></li>
--   </ul>
--   
--   <i>API Documentation</i>
--   
--   Documentation of the SoundCloud's API can be found at
--   <a>http://developers.soundcloud.com/docs/</a>
module Network.SoundCloud

-- | Issue a <tt>GET</tt> HTTP request to the passed URL returning
--   <tt>Nothing</tt> if a response code different than 2XX is found.
scSimpleGet :: String -> IO (Maybe String)

-- | Issue a <tt>GET</tt> HTTP request to the passed URL recursing over
--   redirections
scRecursiveGet :: String -> IO (Maybe String)

-- | Given an URL as a first parameter, and a path as a second, issue a
--   <tt>GET</tt> request to the <tt>URL</tt> and save the response body to
--   a file at <tt>path</tt>.
scFetch :: String -> String -> IO ()

-- | Get the API url of a resource given its public URL. In example, for a
--   public URL like:
--   
--   <a>http://soundcloud.com/user/track</a>
--   
--   It returns the API URL:
--   
--   <a>http://api.soundcloud.com/tracks/track_id.json?client_id=foo</a>
scResolve :: String -> IO String

-- | Given an arbitrary resource URL, returns the type of the resource.
--   
--   The response can be one of:
--   
--   <ul>
--   <li><pre>track</pre></li>
--   <li><pre>user</pre></li>
--   <li><pre>set</pre></li>
--   <li><pre>group</pre></li>
--   <li><pre>comment</pre></li>
--   <li><pre>app</pre></li>
--   <li><pre>nothing</pre></li>
--   </ul>
scResourceType :: String -> String

-- | Show information about the resource pointed by the given API URL
scResourceShowInfo :: String -> IO ()

-- | Show information about a resource given its public URL
scShowInfo :: String -> IO ()
