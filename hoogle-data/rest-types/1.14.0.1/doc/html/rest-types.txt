-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Silk Rest Framework Types
--   
@package rest-types
@version 1.14.0.1

module Rest.Types.ShowUrl
class ShowUrl a
showUrl :: ShowUrl a => a -> String
instance ShowUrl Text
instance ShowUrl Text
instance ShowUrl UUID
instance ShowUrl Integer
instance ShowUrl Int
instance ShowUrl String

module Rest.Types.Range

-- | Data type for representing the requested range in list handlers.
data Range
Range :: Int -> Int -> Range
offset :: Range -> Int
count :: Range -> Int


-- | Module facilitating informative inspection of datatypes.
module Rest.Types.Info

-- | Type class representing information about the read/show function on a
--   data type.
class Typeable a => Info a where example _ = ""
describe :: Info a => proxy a -> String
example :: Info a => proxy a -> String
instance Info Integer
instance Info Int
instance Info Text
instance Info String

module Rest.Types.Void

-- | The <a>Void</a> type is used as the identifier for resources that
--   can't be routed to. It contains no values apart from bottom.
newtype Void
Void :: (forall a. a) -> Void
magic :: Void -> forall a. a
instance Typeable Void
instance Datatype D1Void
instance Generic Void
instance Read Void
instance Ord Void
instance Eq Void
instance Show Void
instance XmlPickler Void
instance JSONSchema Void
instance ToJSON Void
instance FromJSON Void

module Rest.Types.Error
data DataError
ParseError :: String -> DataError
PrintError :: String -> DataError
MissingField :: String -> DataError
UnsupportedFormat :: String -> DataError
newtype DomainReason a
DomainReason :: a -> DomainReason a
reason :: DomainReason a -> a
data Status a b
Failure :: a -> Status a b
Success :: b -> Status a b
fromEither :: Either a b -> Status a b
toEither :: Status a b -> Either a b
type Reason_ = Reason Void
data Reason a
UnsupportedRoute :: Reason a
UnsupportedMethod :: Reason a
UnsupportedVersion :: Reason a
IdentError :: DataError -> Reason a
HeaderError :: DataError -> Reason a
ParamError :: DataError -> Reason a
InputError :: DataError -> Reason a
OutputError :: DataError -> Reason a
NotFound :: Reason a
NotAllowed :: Reason a
AuthenticationFailed :: Reason a
Busy :: Reason a
Gone :: Reason a
CustomReason :: (DomainReason a) -> Reason a
data SomeReason
SomeReason :: Reason e -> SomeReason

-- | The response code that should be given for a type. This is currently
--   only used for errors.
class ToResponseCode a
toResponseCode :: ToResponseCode a => a -> Int
instance Typeable Status
instance Typeable Reason
instance Typeable SomeReason
instance Eq DataError
instance Generic DataError
instance Show DataError
instance Eq a => Eq (DomainReason a)
instance Generic (DomainReason a)
instance Functor DomainReason
instance Foldable DomainReason
instance Show a => Show (DomainReason a)
instance Traversable DomainReason
instance (Eq a, Eq b) => Eq (Status a b)
instance (Show a, Show b) => Show (Status a b)
instance Generic (Status a b)
instance Functor (Status a)
instance Foldable (Status a)
instance Traversable (Status a)
instance Eq a => Eq (Reason a)
instance Generic (Reason a)
instance Show a => Show (Reason a)
instance Functor Reason
instance Foldable Reason
instance Traversable Reason
instance Datatype D1DataError
instance Constructor C1_0DataError
instance Constructor C1_1DataError
instance Constructor C1_2DataError
instance Constructor C1_3DataError
instance Datatype D1DomainReason
instance Constructor C1_0DomainReason
instance Selector S1_0_0DomainReason
instance Datatype D1Status
instance Constructor C1_0Status
instance Constructor C1_1Status
instance Datatype D1Reason
instance Constructor C1_0Reason
instance Constructor C1_1Reason
instance Constructor C1_2Reason
instance Constructor C1_3Reason
instance Constructor C1_4Reason
instance Constructor C1_5Reason
instance Constructor C1_6Reason
instance Constructor C1_7Reason
instance Constructor C1_8Reason
instance Constructor C1_9Reason
instance Constructor C1_10Reason
instance Constructor C1_11Reason
instance Constructor C1_12Reason
instance Constructor C1_13Reason
instance ToResponseCode a => ToResponseCode (Reason a)
instance ToResponseCode Void
instance JSONSchema SomeReason
instance ToJSON SomeReason
instance XmlPickler SomeReason
instance JSONSchema e => JSONSchema (Reason e)
instance JSONSchema DataError
instance FromJSON e => FromJSON (Reason e)
instance ToJSON e => ToJSON (Reason e)
instance FromJSON DataError
instance ToJSON DataError
instance XmlPickler e => XmlPickler (Reason e)
instance XmlPickler DataError
instance Monad Reason
instance Applicative Reason
instance (JSONSchema a, JSONSchema b) => JSONSchema (Status a b)
instance (FromJSON a, FromJSON b) => FromJSON (Status a b)
instance (ToJSON a, ToJSON b) => ToJSON (Status a b)
instance (XmlPickler a, XmlPickler b) => XmlPickler (Status a b)
instance JSONSchema a => JSONSchema (DomainReason a)
instance FromJSON a => FromJSON (DomainReason a)
instance ToJSON a => ToJSON (DomainReason a)
instance XmlPickler a => XmlPickler (DomainReason a)

module Rest.Types.Method
data Method
GET :: Method
PUT :: Method
POST :: Method
DELETE :: Method
instance Show Method
instance Eq Method
instance Bounded Method
instance Enum Method
instance XmlPickler Method
instance JSONSchema Method
instance FromJSON Method
instance ToJSON Method

module Rest.Types.Container.Resource
data Resource
Resource :: String -> Method -> CaseInsensitiveKeyValues -> KeyValues -> String -> Resource
uri :: Resource -> String
method :: Resource -> Method
headers :: Resource -> CaseInsensitiveKeyValues
parameters :: Resource -> KeyValues
input :: Resource -> String
newtype Resources
Resources :: [Resource] -> Resources
type KeyValues = StringHashMap String Value
newtype Value
Value :: String -> Value
unValue :: Value -> String
instance Typeable Value
instance Typeable Resource
instance Typeable Resources
instance FromJSON Value
instance ToJSON Value
instance Show Value
instance Generic Resource
instance Show Resource
instance Generic Resources
instance Datatype D1Resource
instance Constructor C1_0Resource
instance Selector S1_0_0Resource
instance Selector S1_0_1Resource
instance Selector S1_0_2Resource
instance Selector S1_0_3Resource
instance Selector S1_0_4Resource
instance Datatype D1Resources
instance Constructor C1_0Resources
instance JSONSchema Resources
instance FromJSON Resources
instance ToJSON Resources
instance XmlPickler Resources
instance JSONSchema Resource
instance FromJSON Resource
instance ToJSON Resource
instance XmlPickler Resource
instance XmlPickler Value
instance JSONSchema Value

module Rest.Types.Container
data List a
List :: Int -> Int -> [a] -> List a
offset :: List a -> Int
count :: List a -> Int
items :: List a -> [a]
data SomeOutput
SomeOutput :: o -> SomeOutput
instance Typeable List
instance Typeable SomeOutput
instance Generic (List a)
instance Show a => Show (List a)
instance Datatype D1List
instance Constructor C1_0List
instance Selector S1_0_0List
instance Selector S1_0_1List
instance Selector S1_0_2List
instance JSONSchema SomeOutput
instance ToJSON SomeOutput
instance XmlPickler SomeOutput
instance JSONSchema a => JSONSchema (List a)
instance FromJSON a => FromJSON (List a)
instance ToJSON a => ToJSON (List a)
instance XmlPickler a => XmlPickler (List a)
