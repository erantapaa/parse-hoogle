-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Parse Nagios performance data.
--   
--   Provides an interface for parsing Nagios performance data formatted
--   according to the plugin development guidelines.
@package nagios-perfdata
@version 0.2.2

module Data.Nagios.Perfdata.Error
fmtParseError :: [String] -> String -> String
type ParserError = String

module Data.Nagios.Perfdata.Metric

-- | Encapsulates all the data in a check result that's relevant to metrics
--   (we throw away things like the state type of HARD/SOFT).
data Perfdata
Perfdata :: HostOrService -> Int64 -> String -> Maybe ByteString -> MetricList -> Perfdata
perfdataType :: Perfdata -> HostOrService
perfdataTimestamp :: Perfdata -> Int64
perfdataHostname :: Perfdata -> String
perfdataHostState :: Perfdata -> Maybe ByteString
perfdataMetrics :: Perfdata -> MetricList

-- | List of metrics by metric name.
type MetricList = [(String, Metric)]

-- | Encapsulates the data in a Nagios performance metric. A service can
--   have several of these.
data Metric
Metric :: MetricValue -> UOM -> Threshold -> Threshold -> Threshold -> Threshold -> Metric
metricValue :: Metric -> MetricValue
metricUOM :: Metric -> UOM
warnValue :: Metric -> Threshold
critValue :: Metric -> Threshold
minValue :: Metric -> Threshold
maxValue :: Metric -> Threshold

-- | Value of a performance metric. We may lose some data converting to
--   doubles here; this may change in the future.
data MetricValue
DoubleValue :: Double -> MetricValue
UnknownValue :: MetricValue

-- | The check type, either Service with associated ServiceData or Host.
data HostOrService
Service :: ServicePerfdata -> HostOrService
Host :: HostOrService

-- | The part of the check result that's specific to service checks, and
--   doesn't appear in host checks.
data ServicePerfdata
ServicePerfdata :: ByteString -> ReturnState -> ServicePerfdata
serviceDescription :: ServicePerfdata -> ByteString
serviceState :: ServicePerfdata -> ReturnState
uomFromString :: String -> UOM
parseReturnCode :: Integral a => a -> Maybe ReturnState
parseReturnState :: ByteString -> Maybe ReturnState

-- | Parse the component of the check output which contains the performance
--   metrics (HOSTPERFDATA or SERVICEPERFDATA).
parseMetricString :: ByteString -> Either ParserError MetricList

-- | Nagios unit of measurement. NullUnit is an empty string in the check
--   result; UnknownUOM indicates a failure to parse.
data UOM
Second :: UOM
Millisecond :: UOM
Microsecond :: UOM
Percent :: UOM
Byte :: UOM
Kilobyte :: UOM
Megabyte :: UOM
Gigabyte :: UOM
Terabyte :: UOM
Counter :: UOM
NullUnit :: UOM
UnknownUOM :: UOM
data ReturnState
OKState :: ReturnState
WarningState :: ReturnState
CriticalState :: ReturnState
UnknownState :: ReturnState

-- | Value of a min<i>max</i>warn/crit threshold, subject to the same
--   constraints as MetricValue.
data Threshold
DoubleThreshold :: Double -> Threshold
NoThreshold :: Threshold
perfdataServiceDescription :: Perfdata -> ByteString
metricValueDefault :: Metric -> Double -> Double
unknownMetricValue :: Metric -> Bool
isMetricBase :: Metric -> Bool
convertMetricToBase :: Metric -> Metric
convertPerfdataToBase :: Perfdata -> Perfdata
instance Show MetricValue
instance Eq MetricValue
instance Show Threshold
instance Eq UOM
instance Show Metric
instance Eq Prefix
instance Show ReturnState
instance Enum ReturnState
instance Show ServicePerfdata
instance Show HostOrService
instance Show Perfdata
instance Show Prefix
instance Show UOM

module Data.Nagios.Perfdata.GearmanResult

-- | Takes the output of a Nagios check formatted according to [0] and
--   reported by mod_gearman[1], and attempts to parse it into a Perfdata
--   object. This should be used, for example, for consuming perfdata from
--   mod_gearman check_result queues.
--   
--   <ul>
--   <li><i>0</i> :
--   https:/<i>nagios-plugins.org</i>doc/guidelines.html</li>
--   <li><i>1</i> :
--   https:/<i>labs.consol.de</i>nagios<i>mod-gearman</i></li>
--   </ul>
perfdataFromGearmanResult :: ByteString -> Either ParserError Perfdata

module Data.Nagios.Perfdata.Template

-- | Extract perfdata from a Nagios perfdata item formatted according to
--   the default template[0]. This is the format that is used in the
--   perfdata spool files and consumed by pnp4nagios.
--   
--   <ul>
--   <li><i>0</i> Default templates defined in the Nagios source
--   (xdata/xpddefault.h). Service perfdata:
--   "[SERVICEPERFDATA]t$TIMET$t$HOSTNAME$t$SERVICEDESC$t$SERVICEEXECUTIONTIME$t$SERVICELATENCY$t$SERVICEOUTPUT$t$SERVICEPERFDATA$"
--   Host perfdata:
--   "[HOSTPERFDATA]t$TIMET$t$HOSTNAME$t$HOSTEXECUTIONTIME$t$HOSTOUTPUT$t$HOSTPERFDATA$"</li>
--   </ul>
perfdataFromDefaultTemplate :: ByteString -> Either ParserError Perfdata
instance Show Item

module Data.Nagios.Perfdata

-- | Takes the output of a Nagios check formatted according to [0] and
--   reported by mod_gearman[1], and attempts to parse it into a Perfdata
--   object. This should be used, for example, for consuming perfdata from
--   mod_gearman check_result queues.
--   
--   <ul>
--   <li><i>0</i> :
--   https:/<i>nagios-plugins.org</i>doc/guidelines.html</li>
--   <li><i>1</i> :
--   https:/<i>labs.consol.de</i>nagios<i>mod-gearman</i></li>
--   </ul>
perfdataFromGearmanResult :: ByteString -> Either ParserError Perfdata

-- | Extract perfdata from a Nagios perfdata item formatted according to
--   the default template[0]. This is the format that is used in the
--   perfdata spool files and consumed by pnp4nagios.
--   
--   <ul>
--   <li><i>0</i> Default templates defined in the Nagios source
--   (xdata/xpddefault.h). Service perfdata:
--   "[SERVICEPERFDATA]t$TIMET$t$HOSTNAME$t$SERVICEDESC$t$SERVICEEXECUTIONTIME$t$SERVICELATENCY$t$SERVICEOUTPUT$t$SERVICEPERFDATA$"
--   Host perfdata:
--   "[HOSTPERFDATA]t$TIMET$t$HOSTNAME$t$HOSTEXECUTIONTIME$t$HOSTOUTPUT$t$HOSTPERFDATA$"</li>
--   </ul>
perfdataFromDefaultTemplate :: ByteString -> Either ParserError Perfdata

-- | Encapsulates all the data in a check result that's relevant to metrics
--   (we throw away things like the state type of HARD/SOFT).
data Perfdata
Perfdata :: HostOrService -> Int64 -> String -> Maybe ByteString -> MetricList -> Perfdata
perfdataType :: Perfdata -> HostOrService
perfdataTimestamp :: Perfdata -> Int64
perfdataHostname :: Perfdata -> String
perfdataHostState :: Perfdata -> Maybe ByteString
perfdataMetrics :: Perfdata -> MetricList

-- | List of metrics by metric name.
type MetricList = [(String, Metric)]

-- | Encapsulates the data in a Nagios performance metric. A service can
--   have several of these.
data Metric
Metric :: MetricValue -> UOM -> Threshold -> Threshold -> Threshold -> Threshold -> Metric
metricValue :: Metric -> MetricValue
metricUOM :: Metric -> UOM
warnValue :: Metric -> Threshold
critValue :: Metric -> Threshold
minValue :: Metric -> Threshold
maxValue :: Metric -> Threshold

-- | The check type, either Service with associated ServiceData or Host.
data HostOrService

-- | The part of the check result that's specific to service checks, and
--   doesn't appear in host checks.
data ServicePerfdata
type ParserError = String
perfdataServiceDescription :: Perfdata -> ByteString
metricValueDefault :: Metric -> Double -> Double
unknownMetricValue :: Metric -> Bool
