-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Haskell binding to Google's AJAX Language API for Translation and Detection
--   
--   Haskell binding to Google's AJAX Language API for Translation and
--   Detection.
@package translate
@version 2010.1.24

module Text.Language.Internals
data RStatus
RStatus :: Integer -> RStatus
responseStatus :: RStatus -> Integer
data RBad
RBad :: String -> RBad
responseDetails :: RBad -> String

-- | Perform a request using Network.Curl
curl :: String -> IO (Maybe String)

-- | Constructs a string with the given arguments ready to be sent to
--   Google's APIs
google_api :: String -> [(String, String)] -> String
(.) :: a -> (a -> b) -> b
(-) :: (a -> b) -> a -> b
join :: [a] -> [[a]] -> [a]

-- | Can be used to validate the URI sent to Google's API
escape_uri :: String -> String

-- | Escapes a special character with UTF-8.
escapeURIChar :: (Char -> Bool) -> Char -> String

-- | Can be used to make a string valid for use in a URI.
escapeURIString :: (Char -> Bool) -> String -> String
instance Typeable RBad
instance Typeable RStatus
instance Eq RBad
instance Show RBad
instance Data RBad
instance Eq RStatus
instance Show RStatus
instance Data RStatus

module Text.Language.Detect

-- | Returns a triple where the first component is the language code
--   associated with given text, the second is a boolean representing
--   whether or not the detection interval believes the language code is
--   reliable for the given text, and the third is a numeric value between
--   0-1.0 that represents the confidence level in the language code for
--   the given text.
detect :: String -> IO (Maybe (String, Bool, Double))

-- | Returns the language code associated with the given text
detectCode :: String -> IO (Maybe String)
instance Typeable RGood
instance Typeable RText
instance Eq RGood
instance Show RGood
instance Data RGood
instance Eq RText
instance Show RText
instance Data RText

module Text.Language.Translate
translate :: String -> String -> String -> IO (Maybe String)
instance Typeable RGood
instance Typeable RText
instance Eq RGood
instance Show RGood
instance Data RGood
instance Eq RText
instance Show RText
instance Data RText

module Text.Translate
translate :: String -> String -> String -> IO (Maybe String)
