-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Sentry http interface for Scotty web server.
--   
--   Utilities to log errors in Scotty actions using raven-haskell.
@package raven-haskell-scotty
@version 0.1.0.2


-- | Utilities to log errors in Scotty actions using raven-haskell.
--   
--   <pre>
--   import Web.Scotty
--   
--   import System.Log.Raven
--   import System.Log.Raven.Transport.HttpConduit (sendRecord)
--   import System.Log.Raven.Scotty
--   
--   main = do
--       raven &lt;- initRaven "https://â€¦" id sendRecord stderrFallback
--       let hereBeDragons = guardIO raven "my.logger" (Just "DragonsError") (Just "My.Inner.Dragons")
--   
--       scotty 8000 $ do
--           post "/some/action/" $ do
--               arg1 &lt;- param "arg1"
--               arg2 &lt;- param "arg2"
--               ds &lt;- hereBeDragons $ dragonsIO arg1 arg2
--               if null ds
--                   then text "no dragons"
--                   else do
--                       let msg = "dragons! run!"
--                       scottyHttpInterface &gt;&gt;= logError raven "Main.main" msg
--   </pre>
module System.Log.Raven.Scotty

-- | A liftIO alternative that logs unhandled exceptions. The function
--   itself is verbose in arguments and designed to be curried and reused.
guardIO :: SentryService -> String -> Maybe String -> Maybe String -> IO a -> ActionM a

-- | Log an error in an ActionM monad, collecting request data.
logError :: SentryService -> String -> String -> (SentryRecord -> SentryRecord) -> ActionM ()

-- | Collect request parameters for a HTTP sentry interface.
scottyHttpInterface :: ActionM (SentryRecord -> SentryRecord)
