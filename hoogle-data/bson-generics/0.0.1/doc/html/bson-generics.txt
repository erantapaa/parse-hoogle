-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Generics functionality for BSON
--   
--   This package offers easy conversion from and to BSON data type for
--   most of user defined data types.
@package bson-generics
@version 0.0.1

module Data.Bson.Generics
class FromBSON a
fromBSON :: FromBSON a => Document -> Maybe a
class ToBSON a
toBSON :: ToBSON a => a -> Document
instance (Val a, Selector s) => GenericFromBSON (M1 S s (K1 i a))
instance GenericFromBSON a => GenericFromBSON (M1 D c a)
instance (GenericFromBSON a, Constructor c) => GenericFromBSON (M1 C c a)
instance (GenericFromBSON a, GenericFromBSON b) => GenericFromBSON (a :+: b)
instance (GenericFromBSON a, GenericFromBSON b) => GenericFromBSON (a :*: b)
instance GenericFromBSON U1
instance ToBSON a => GenericToBSON (K1 i a)
instance (Val a, Selector s) => GenericToBSON (M1 S s (K1 i a))
instance (GenericToBSON a, Constructor c) => GenericToBSON (M1 C c a)
instance GenericToBSON a => GenericToBSON (D1 c a)
instance (GenericToBSON a, GenericToBSON b) => GenericToBSON (a :+: b)
instance (GenericToBSON a, GenericToBSON b) => GenericToBSON (a :*: b)
instance GenericToBSON U1
instance (FromBSON a, ToBSON a, Typeable a, Show a, Eq a) => Val a
