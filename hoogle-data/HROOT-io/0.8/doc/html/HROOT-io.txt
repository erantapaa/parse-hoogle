-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Haskell binding to ROOT IO modules
--   
--   HROOT is a haskell Foreign Function Interface (FFI) binding to ROOT.
--   ROOT(http:<i></i>root.cern.ch) is an object-oriented program and
--   library developed by CERN for physics data analysis.
@package HROOT-io
@version 0.8

module HROOT.IO.TFile.RawType
data RawTFile
newtype TFile
TFile :: (ForeignPtr RawTFile) -> TFile
instance Eq TFile
instance Ord TFile
instance Show TFile
instance FPtr TFile

module HROOT.IO.TFile.FFI
c_tfile_append :: (Ptr RawTFile) -> (Ptr RawTObject) -> CInt -> IO ()
c_tfile_addd :: (Ptr RawTFile) -> (Ptr RawTObject) -> CInt -> IO ()
c_tfile_appendkey :: (Ptr RawTFile) -> (Ptr RawTKey) -> IO CInt
c_tfile_close :: (Ptr RawTFile) -> CString -> IO ()
c_tfile_get :: (Ptr RawTFile) -> CString -> IO (Ptr RawTObject)
c_tfile_cd_tdirectory :: (Ptr RawTFile) -> CString -> IO CInt
c_tfile_setname :: (Ptr RawTFile) -> CString -> IO ()
c_tfile_setnametitle :: (Ptr RawTFile) -> CString -> CString -> IO ()
c_tfile_settitle :: (Ptr RawTFile) -> CString -> IO ()
c_tfile_draw :: (Ptr RawTFile) -> CString -> IO ()
c_tfile_findobject :: (Ptr RawTFile) -> CString -> IO (Ptr RawTObject)
c_tfile_getname :: (Ptr RawTFile) -> IO CString
c_tfile_isa :: (Ptr RawTFile) -> IO (Ptr RawTClass)
c_tfile_paint :: (Ptr RawTFile) -> CString -> IO ()
c_tfile_printobj :: (Ptr RawTFile) -> CString -> IO ()
c_tfile_saveas :: (Ptr RawTFile) -> CString -> CString -> IO ()
c_tfile_write :: (Ptr RawTFile) -> CString -> CInt -> CInt -> IO CInt
c_tfile_delete :: (Ptr RawTFile) -> IO ()
c_tfile_newtfile :: CString -> CString -> CString -> CInt -> IO (Ptr RawTFile)

module HROOT.IO.TDirectoryFile.RawType
data RawTDirectoryFile
newtype TDirectoryFile
TDirectoryFile :: (ForeignPtr RawTDirectoryFile) -> TDirectoryFile
instance Eq TDirectoryFile
instance Ord TDirectoryFile
instance Show TDirectoryFile
instance FPtr TDirectoryFile

module HROOT.IO.TDirectoryFile.Interface
class ITDirectory a => ITDirectoryFile a
upcastTDirectoryFile :: (FPtr a, ITDirectoryFile a) => a -> TDirectoryFile
downcastTDirectoryFile :: (FPtr a, ITDirectoryFile a) => TDirectoryFile -> a
instance Existable TDirectoryFile

module HROOT.IO.TFile.Interface
class ITDirectoryFile a => ITFile a
upcastTFile :: (FPtr a, ITFile a) => a -> TFile
downcastTFile :: (FPtr a, ITFile a) => TFile -> a
instance Existable TFile

module HROOT.IO.TFile.Cast
instance [incoherent] Castable TFile (Ptr RawTFile)
instance [incoherent] (ITFile a, FPtr a) => Castable a (Ptr RawTFile)

module HROOT.IO.TDirectoryFile.FFI
c_tdirectoryfile_append :: (Ptr RawTDirectoryFile) -> (Ptr RawTObject) -> CInt -> IO ()
c_tdirectoryfile_addd :: (Ptr RawTDirectoryFile) -> (Ptr RawTObject) -> CInt -> IO ()
c_tdirectoryfile_appendkey :: (Ptr RawTDirectoryFile) -> (Ptr RawTKey) -> IO CInt
c_tdirectoryfile_close :: (Ptr RawTDirectoryFile) -> CString -> IO ()
c_tdirectoryfile_get :: (Ptr RawTDirectoryFile) -> CString -> IO (Ptr RawTObject)
c_tdirectoryfile_cd_tdirectory :: (Ptr RawTDirectoryFile) -> CString -> IO CInt
c_tdirectoryfile_setname :: (Ptr RawTDirectoryFile) -> CString -> IO ()
c_tdirectoryfile_setnametitle :: (Ptr RawTDirectoryFile) -> CString -> CString -> IO ()
c_tdirectoryfile_settitle :: (Ptr RawTDirectoryFile) -> CString -> IO ()
c_tdirectoryfile_draw :: (Ptr RawTDirectoryFile) -> CString -> IO ()
c_tdirectoryfile_findobject :: (Ptr RawTDirectoryFile) -> CString -> IO (Ptr RawTObject)
c_tdirectoryfile_getname :: (Ptr RawTDirectoryFile) -> IO CString
c_tdirectoryfile_isa :: (Ptr RawTDirectoryFile) -> IO (Ptr RawTClass)
c_tdirectoryfile_paint :: (Ptr RawTDirectoryFile) -> CString -> IO ()
c_tdirectoryfile_printobj :: (Ptr RawTDirectoryFile) -> CString -> IO ()
c_tdirectoryfile_saveas :: (Ptr RawTDirectoryFile) -> CString -> CString -> IO ()
c_tdirectoryfile_write :: (Ptr RawTDirectoryFile) -> CString -> CInt -> CInt -> IO CInt
c_tdirectoryfile_delete :: (Ptr RawTDirectoryFile) -> IO ()

module HROOT.IO.TDirectoryFile.Cast
instance [incoherent] Castable TDirectoryFile (Ptr RawTDirectoryFile)
instance [incoherent] (ITDirectoryFile a, FPtr a) => Castable a (Ptr RawTDirectoryFile)

module HROOT.IO.TDirectoryFile.Implementation
instance [incoherent] FPtr (Exist TDirectoryFile)
instance [incoherent] IDeletable (Exist TDirectoryFile)
instance [incoherent] ITObject (Exist TDirectoryFile)
instance [incoherent] ITNamed (Exist TDirectoryFile)
instance [incoherent] ITDirectory (Exist TDirectoryFile)
instance [incoherent] ITDirectoryFile (Exist TDirectoryFile)
instance [incoherent] IDeletable TDirectoryFile
instance [incoherent] ITObject TDirectoryFile
instance [incoherent] ITNamed TDirectoryFile
instance [incoherent] ITDirectory TDirectoryFile
instance [incoherent] ITDirectoryFile TDirectoryFile

module HROOT.IO.TFile.Implementation
newTFile :: CString -> CString -> CString -> CInt -> IO TFile
instance [incoherent] FPtr (Exist TFile)
instance [incoherent] IDeletable (Exist TFile)
instance [incoherent] ITObject (Exist TFile)
instance [incoherent] ITNamed (Exist TFile)
instance [incoherent] ITDirectory (Exist TFile)
instance [incoherent] ITDirectoryFile (Exist TFile)
instance [incoherent] ITFile (Exist TFile)
instance [incoherent] IDeletable TFile
instance [incoherent] ITObject TFile
instance [incoherent] ITNamed TFile
instance [incoherent] ITDirectory TFile
instance [incoherent] ITDirectoryFile TFile
instance [incoherent] ITFile TFile

module HROOT.IO.TFile
newtype TFile
TFile :: (ForeignPtr RawTFile) -> TFile
class ITDirectoryFile a => ITFile a
upcastTFile :: (FPtr a, ITFile a) => a -> TFile
downcastTFile :: (FPtr a, ITFile a) => TFile -> a
newTFile :: CString -> CString -> CString -> CInt -> IO TFile

module HROOT.IO.TDirectoryFile
newtype TDirectoryFile
TDirectoryFile :: (ForeignPtr RawTDirectoryFile) -> TDirectoryFile
class ITDirectory a => ITDirectoryFile a
upcastTDirectoryFile :: (FPtr a, ITDirectoryFile a) => a -> TDirectoryFile
downcastTDirectoryFile :: (FPtr a, ITDirectoryFile a) => TDirectoryFile -> a

module HROOT.IO
