-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Monadically map objects to unique ints.
--   
--   Monadically map objects to unique ints.
@package monad-atom-simple
@version 0.0.2


-- | The Atom monad provides functions which convert objects to unique
--   atoms (represented as Ints). Example:
--   
--   <pre>
--   example = evalAtom $ do 
--     xs &lt;- mapM toAtom "abcabd"
--     zs &lt;- mapM fromAtom xs 
--     return $ zip zs xs
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; example
--   
--   &gt;&gt;&gt; [('a',0),('b',1),('c',2),('a',0),('b',1),('d',3)]
--   </pre>
module Control.Monad.Atom

-- | <tt>AtomTable</tt> holds the state necessary for converting to and
--   from <tt>Int</tt>s.
data AtomTable a

-- | <tt>Atom</tt> is a specialized state monad for converting to and from
--   <tt>Int</tt>s.
data Atom a r

-- | <tt>toAtom x</tt> converts <tt>x</tt> to a unique <tt>Int</tt> in the
--   <tt>Atom</tt> monad
toAtom :: Ord a => a -> Atom a Int

-- | <tt>fromAtom i</tt> converts the <tt>Int</tt> <tt>i</tt> to its
--   corresponding object in the Atom monad.
fromAtom :: Int -> Atom a a

-- | <tt>maybeToAtom x</tt> converts <tt>x</tt> to a unique <tt>Int</tt> in
--   the <tt>Atom</tt> monad only if <tt>x</tt> already has a corresponding
--   <tt>Int</tt>
maybeToAtom :: Ord a => a -> Atom a (Maybe Int)

-- | <tt>empty</tt> is the initial empty <tt>AtomTable</tt>
empty :: Ord a => AtomTable a

-- | <tt>evalAtom c</tt> runs computation c in the Atom monad with the
--   empty initial <tt>AtomTable</tt>.
evalAtom :: Ord a => Atom a t -> t

-- | <tt>runAtom c s</tt> runs computation c in the Atom monad with the
--   initial <tt>AtomTable</tt> s.
runAtom :: Ord a => Atom a t -> AtomTable a -> (t, AtomTable a)

-- | The mapping stored in the atom table
mapping :: Ord a => AtomTable a -> Map a Int
instance Generic (AtomTable a)
instance Functor (Atom a)
instance Monad (Atom a)
instance Datatype D1AtomTable
instance Constructor C1_0AtomTable
instance Selector S1_0_0AtomTable
instance Selector S1_0_1AtomTable
instance Selector S1_0_2AtomTable
