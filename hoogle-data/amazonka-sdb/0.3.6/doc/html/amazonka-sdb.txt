-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Amazon SimpleDB SDK.
--   
@package amazonka-sdb
@version 0.3.6

module Network.AWS.SDB.Types

-- | Version <tt>2009-04-15</tt> of the Amazon SimpleDB service.
data SDB
data RESTError :: *
ns :: Text
data Attribute

-- | <a>Attribute</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>aAlternateNameEncoding</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>aAlternateValueEncoding</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>aName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>aValue</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
attribute :: Text -> Text -> Attribute
aAlternateNameEncoding :: Lens' Attribute (Maybe Text)
aAlternateValueEncoding :: Lens' Attribute (Maybe Text)

-- | The name of the attribute.
aName :: Lens' Attribute Text

-- | The value of the attribute.
aValue :: Lens' Attribute Text
data DeletableItem

-- | <a>DeletableItem</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>diAttributes</a> <tt>::</tt> [<a>Attribute</a>]</li>
--   <li><a>diName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deletableItem :: Text -> DeletableItem
diAttributes :: Lens' DeletableItem [Attribute]
diName :: Lens' DeletableItem Text
data ReplaceableItem

-- | <a>ReplaceableItem</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>riAttributes</a> <tt>::</tt> [<a>ReplaceableAttribute</a>]</li>
--   <li><a>riName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
replaceableItem :: Text -> ReplaceableItem

-- | The list of attributes for a replaceable item.
riAttributes :: Lens' ReplaceableItem [ReplaceableAttribute]

-- | The name of the replaceable item.
riName :: Lens' ReplaceableItem Text
data UpdateCondition

-- | <a>UpdateCondition</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ucExists</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>ucName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ucValue</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
updateCondition :: UpdateCondition

-- | A value specifying whether or not the specified attribute must exist
--   with the specified value in order for the update condition to be
--   satisfied. Specify <tt>true</tt> if the attribute must exist for the
--   update condition to be satisfied. Specify <tt>false</tt> if the
--   attribute should not exist in order for the update condition to be
--   satisfied.
ucExists :: Lens' UpdateCondition (Maybe Bool)

-- | The name of the attribute involved in the condition.
ucName :: Lens' UpdateCondition (Maybe Text)

-- | The value of an attribute. This value can only be specified when the
--   <tt>Exists</tt> parameter is equal to <tt>true</tt>.
ucValue :: Lens' UpdateCondition (Maybe Text)
data ReplaceableAttribute

-- | <a>ReplaceableAttribute</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>raName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>raReplace</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>raValue</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
replaceableAttribute :: Text -> Text -> ReplaceableAttribute

-- | The name of the replaceable attribute.
raName :: Lens' ReplaceableAttribute Text

-- | A flag specifying whether or not to replace the attribute/value pair
--   or to add a new attribute/value pair. The default setting is
--   <tt>false</tt>.
raReplace :: Lens' ReplaceableAttribute (Maybe Bool)

-- | The value of the replaceable attribute.
raValue :: Lens' ReplaceableAttribute Text
data Item

-- | <a>Item</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>iAlternateNameEncoding</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>iAttributes</a> <tt>::</tt> [<a>Attribute</a>]</li>
--   <li><a>iName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
item :: Text -> Item
iAlternateNameEncoding :: Lens' Item (Maybe Text)

-- | A list of attributes.
iAttributes :: Lens' Item [Attribute]

-- | The name of the item.
iName :: Lens' Item Text
instance Eq Attribute
instance Ord Attribute
instance Read Attribute
instance Show Attribute
instance Eq DeletableItem
instance Read DeletableItem
instance Show DeletableItem
instance Eq UpdateCondition
instance Ord UpdateCondition
instance Read UpdateCondition
instance Show UpdateCondition
instance Eq ReplaceableAttribute
instance Ord ReplaceableAttribute
instance Read ReplaceableAttribute
instance Show ReplaceableAttribute
instance Eq ReplaceableItem
instance Read ReplaceableItem
instance Show ReplaceableItem
instance Eq Item
instance Read Item
instance Show Item
instance ToQuery Item
instance FromXML Item
instance ToQuery ReplaceableAttribute
instance FromXML ReplaceableAttribute
instance ToQuery UpdateCondition
instance FromXML UpdateCondition
instance ToQuery ReplaceableItem
instance FromXML ReplaceableItem
instance ToQuery DeletableItem
instance FromXML DeletableItem
instance ToQuery Attribute
instance FromXML Attribute
instance AWSService SDB


-- | The <a>Select</a> operation returns a set of attributes for
--   <tt>ItemNames</tt> that match the select expression. <a>Select</a> is
--   similar to the standard SQL SELECT statement.
--   
--   The total size of the response cannot exceed 1 MB in total size.
--   Amazon SimpleDB automatically adjusts the number of items returned per
--   page to enforce this limit. For example, if the client asks to
--   retrieve 2500 items, but each individual item is 10 kB in size, the
--   system returns 100 items and an appropriate <tt>NextToken</tt> so the
--   client can access the next page of results.
--   
--   For information on how to construct select expressions, see Using
--   Select to Create Amazon SimpleDB Queries in the Developer Guide.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonSimpleDB/latest/DeveloperGuide/SDB_API_Select.html</a>
module Network.AWS.SDB.Select
data Select

-- | <a>Select</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sConsistentRead</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>sNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>sSelectExpression</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
select :: Text -> Select

-- | Determines whether or not strong consistency should be enforced when
--   data is read from SimpleDB. If <tt>true</tt>, any data previously
--   written to SimpleDB will be returned. Otherwise, results will be
--   consistent eventually, and the client may not see data that was
--   written immediately before your read.
sConsistentRead :: Lens' Select (Maybe Bool)

-- | A string informing Amazon SimpleDB where to start the next list of
--   <tt>ItemNames</tt>.
sNextToken :: Lens' Select (Maybe Text)

-- | The expression used to query the domain.
sSelectExpression :: Lens' Select Text
data SelectResponse

-- | <a>SelectResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>srItems</a> <tt>::</tt> [<a>Item</a>]</li>
--   <li><a>srNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
selectResponse :: SelectResponse

-- | A list of items that match the select expression.
srItems :: Lens' SelectResponse [Item]

-- | An opaque token indicating that more items than
--   <tt>MaxNumberOfItems</tt> were matched, the response size exceeded 1
--   megabyte, or the execution time exceeded 5 seconds.
srNextToken :: Lens' SelectResponse (Maybe Text)
instance Eq Select
instance Ord Select
instance Read Select
instance Show Select
instance Eq SelectResponse
instance Read SelectResponse
instance Show SelectResponse
instance AWSPager Select
instance FromXML SelectResponse
instance AWSRequest Select
instance ToHeaders Select
instance ToQuery Select
instance ToPath Select


-- | The PutAttributes operation creates or replaces attributes in an item.
--   The client may specify new attributes using a combination of the
--   <a>Name</a> and <a>Value</a> parameters. The client specifies the
--   first attribute by the parameters 'Attribute.0.Name' and
--   'Attribute.0.Value', the second attribute by the parameters
--   'Attribute.1.Name' and 'Attribute.1.Value', and so on.
--   
--   Attributes are uniquely identified in an item by their name/value
--   combination. For example, a single item can have the attributes
--   '{"first_name", "first_value" }' and '{ "first_name", second_value"
--   }'. However, it cannot have two attribute instances where both the
--   <a>Name</a> and <a>Value</a> are the same.
--   
--   Optionally, the requestor can supply the <tt>Replace</tt> parameter
--   for each individual attribute. Setting this value to <tt>true</tt>
--   causes the new attribute value to replace the existing attribute
--   value(s). For example, if an item has the attributes '{ <tt>a</tt>,
--   '1' }', '{ <tt>b</tt>, '2'}' and '{ <tt>b</tt>, '3' }' and the
--   requestor calls <a>PutAttributes</a> using the attributes '{
--   <tt>b</tt>, '4' }' with the <tt>Replace</tt> parameter set to true,
--   the final attributes of the item are changed to '{ <tt>a</tt>,'1' }'
--   and '{ <tt>b</tt>, '4' }', which replaces the previous values of the
--   <tt>b</tt> attribute with the new value.
--   
--   You cannot specify an empty string as an attribute name.
--   
--   Because Amazon SimpleDB makes multiple copies of client data and uses
--   an eventual consistency update model, an immediate
--   <tt>GetAttributes</tt> or <tt>Select</tt> operation (read) immediately
--   after a <a>PutAttributes</a> or <tt>DeleteAttributes</tt> operation
--   (write) might not return the updated data.
--   
--   The following limitations are enforced for this operation: 256 total
--   attribute name-value pairs per item One billion attributes per domain
--   10 GB of total user data storage per domain
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonSimpleDB/latest/DeveloperGuide/SDB_API_PutAttributes.html</a>
module Network.AWS.SDB.PutAttributes
data PutAttributes

-- | <a>PutAttributes</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>paAttributes</a> <tt>::</tt> [<a>ReplaceableAttribute</a>]</li>
--   <li><a>paDomainName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>paExpected</a> <tt>::</tt> <a>Maybe</a>
--   <a>UpdateCondition</a></li>
--   <li><a>paItemName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
putAttributes :: Text -> Text -> PutAttributes

-- | The list of attributes.
paAttributes :: Lens' PutAttributes [ReplaceableAttribute]

-- | The name of the domain in which to perform the operation.
paDomainName :: Lens' PutAttributes Text

-- | The update condition which, if specified, determines whether the
--   specified attributes will be updated or not. The update condition must
--   be satisfied in order for this request to be processed and the
--   attributes to be updated.
paExpected :: Lens' PutAttributes (Maybe UpdateCondition)

-- | The name of the item.
paItemName :: Lens' PutAttributes Text
data PutAttributesResponse

-- | <a>PutAttributesResponse</a> constructor.
putAttributesResponse :: PutAttributesResponse
instance Eq PutAttributes
instance Read PutAttributes
instance Show PutAttributes
instance Eq PutAttributesResponse
instance Ord PutAttributesResponse
instance Read PutAttributesResponse
instance Show PutAttributesResponse
instance Generic PutAttributesResponse
instance Datatype D1PutAttributesResponse
instance Constructor C1_0PutAttributesResponse
instance AWSRequest PutAttributes
instance ToHeaders PutAttributes
instance ToQuery PutAttributes
instance ToPath PutAttributes


-- | The <a>ListDomains</a> operation lists all domains associated with the
--   Access Key ID. It returns domain names up to the limit set by
--   <a>MaxNumberOfDomains</a>. A <a>NextToken</a> is returned if there are
--   more than <tt>MaxNumberOfDomains</tt> domains. Calling
--   <a>ListDomains</a> successive times with the <tt>NextToken</tt>
--   provided by the operation returns up to <tt>MaxNumberOfDomains</tt>
--   more domain names with each successive operation call.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonSimpleDB/latest/DeveloperGuide/SDB_API_ListDomains.html</a>
module Network.AWS.SDB.ListDomains
data ListDomains

-- | <a>ListDomains</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ldMaxNumberOfDomains</a> <tt>::</tt> <a>Maybe</a>
--   <a>Int</a></li>
--   <li><a>ldNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listDomains :: ListDomains

-- | The maximum number of domain names you want returned. The range is 1
--   to 100. The default setting is 100.
ldMaxNumberOfDomains :: Lens' ListDomains (Maybe Int)

-- | A string informing Amazon SimpleDB where to start the next list of
--   domain names.
ldNextToken :: Lens' ListDomains (Maybe Text)
data ListDomainsResponse

-- | <a>ListDomainsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ldrDomainNames</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>ldrNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listDomainsResponse :: ListDomainsResponse

-- | A list of domain names that match the expression.
ldrDomainNames :: Lens' ListDomainsResponse [Text]

-- | An opaque token indicating that there are more domains than the
--   specified <tt>MaxNumberOfDomains</tt> still available.
ldrNextToken :: Lens' ListDomainsResponse (Maybe Text)
instance Eq ListDomains
instance Ord ListDomains
instance Read ListDomains
instance Show ListDomains
instance Eq ListDomainsResponse
instance Ord ListDomainsResponse
instance Read ListDomainsResponse
instance Show ListDomainsResponse
instance AWSPager ListDomains
instance FromXML ListDomainsResponse
instance AWSRequest ListDomains
instance ToHeaders ListDomains
instance ToQuery ListDomains
instance ToPath ListDomains


-- | Returns all of the attributes associated with the specified item.
--   Optionally, the attributes returned can be limited to one or more
--   attributes by specifying an attribute name parameter.
--   
--   If the item does not exist on the replica that was accessed for this
--   operation, an empty set is returned. The system does not return an
--   error as it cannot guarantee the item does not exist on other
--   replicas.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonSimpleDB/latest/DeveloperGuide/SDB_API_GetAttributes.html</a>
module Network.AWS.SDB.GetAttributes
data GetAttributes

-- | <a>GetAttributes</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gaAttributeNames</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>gaConsistentRead</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>gaDomainName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>gaItemName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getAttributes :: Text -> Text -> GetAttributes

-- | The names of the attributes.
gaAttributeNames :: Lens' GetAttributes [Text]

-- | Determines whether or not strong consistency should be enforced when
--   data is read from SimpleDB. If <tt>true</tt>, any data previously
--   written to SimpleDB will be returned. Otherwise, results will be
--   consistent eventually, and the client may not see data that was
--   written immediately before your read.
gaConsistentRead :: Lens' GetAttributes (Maybe Bool)

-- | The name of the domain in which to perform the operation.
gaDomainName :: Lens' GetAttributes Text

-- | The name of the item.
gaItemName :: Lens' GetAttributes Text
data GetAttributesResponse

-- | <a>GetAttributesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>garAttributes</a> <tt>::</tt> [<a>Attribute</a>]</li>
--   </ul>
getAttributesResponse :: GetAttributesResponse

-- | The list of attributes returned by the operation.
garAttributes :: Lens' GetAttributesResponse [Attribute]
instance Eq GetAttributes
instance Ord GetAttributes
instance Read GetAttributes
instance Show GetAttributes
instance Eq GetAttributesResponse
instance Read GetAttributesResponse
instance Show GetAttributesResponse
instance Monoid GetAttributesResponse
instance Semigroup GetAttributesResponse
instance FromXML GetAttributesResponse
instance AWSRequest GetAttributes
instance ToHeaders GetAttributes
instance ToQuery GetAttributes
instance ToPath GetAttributes


-- | Returns information about the domain, including when the domain was
--   created, the number of items and attributes in the domain, and the
--   size of the attribute names and values.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonSimpleDB/latest/DeveloperGuide/SDB_API_DomainMetadata.html</a>
module Network.AWS.SDB.DomainMetadata
data DomainMetadata

-- | <a>DomainMetadata</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dmDomainName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
domainMetadata :: Text -> DomainMetadata

-- | The name of the domain for which to display the metadata of.
dmDomainName :: Lens' DomainMetadata Text
data DomainMetadataResponse

-- | <a>DomainMetadataResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dmrAttributeNameCount</a> <tt>::</tt> <a>Maybe</a>
--   <a>Int</a></li>
--   <li><a>dmrAttributeNamesSizeBytes</a> <tt>::</tt> <a>Maybe</a>
--   <a>Integer</a></li>
--   <li><a>dmrAttributeValueCount</a> <tt>::</tt> <a>Maybe</a>
--   <a>Int</a></li>
--   <li><a>dmrAttributeValuesSizeBytes</a> <tt>::</tt> <a>Maybe</a>
--   <a>Integer</a></li>
--   <li><a>dmrItemCount</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>dmrItemNamesSizeBytes</a> <tt>::</tt> <a>Maybe</a>
--   <a>Integer</a></li>
--   <li><a>dmrTimestamp</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   </ul>
domainMetadataResponse :: DomainMetadataResponse

-- | The number of unique attribute names in the domain.
dmrAttributeNameCount :: Lens' DomainMetadataResponse (Maybe Int)

-- | The total size of all unique attribute names in the domain, in bytes.
dmrAttributeNamesSizeBytes :: Lens' DomainMetadataResponse (Maybe Integer)

-- | The number of all attribute name/value pairs in the domain.
dmrAttributeValueCount :: Lens' DomainMetadataResponse (Maybe Int)

-- | The total size of all attribute values in the domain, in bytes.
dmrAttributeValuesSizeBytes :: Lens' DomainMetadataResponse (Maybe Integer)

-- | The number of all items in the domain.
dmrItemCount :: Lens' DomainMetadataResponse (Maybe Int)

-- | The total size of all item names in the domain, in bytes.
dmrItemNamesSizeBytes :: Lens' DomainMetadataResponse (Maybe Integer)

-- | The data and time when metadata was calculated, in Epoch (UNIX)
--   seconds.
dmrTimestamp :: Lens' DomainMetadataResponse (Maybe Int)
instance Eq DomainMetadata
instance Ord DomainMetadata
instance Read DomainMetadata
instance Show DomainMetadata
instance Monoid DomainMetadata
instance IsString DomainMetadata
instance Eq DomainMetadataResponse
instance Ord DomainMetadataResponse
instance Read DomainMetadataResponse
instance Show DomainMetadataResponse
instance FromXML DomainMetadataResponse
instance AWSRequest DomainMetadata
instance ToHeaders DomainMetadata
instance ToQuery DomainMetadata
instance ToPath DomainMetadata


-- | The <a>DeleteDomain</a> operation deletes a domain. Any items (and
--   their attributes) in the domain are deleted as well. The
--   <a>DeleteDomain</a> operation might take 10 or more seconds to
--   complete.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonSimpleDB/latest/DeveloperGuide/SDB_API_DeleteDomain.html</a>
module Network.AWS.SDB.DeleteDomain
data DeleteDomain

-- | <a>DeleteDomain</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ddDomainName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteDomain :: Text -> DeleteDomain

-- | The name of the domain to delete.
ddDomainName :: Lens' DeleteDomain Text
data DeleteDomainResponse

-- | <a>DeleteDomainResponse</a> constructor.
deleteDomainResponse :: DeleteDomainResponse
instance Eq DeleteDomain
instance Ord DeleteDomain
instance Read DeleteDomain
instance Show DeleteDomain
instance Monoid DeleteDomain
instance IsString DeleteDomain
instance Eq DeleteDomainResponse
instance Ord DeleteDomainResponse
instance Read DeleteDomainResponse
instance Show DeleteDomainResponse
instance Generic DeleteDomainResponse
instance Datatype D1DeleteDomainResponse
instance Constructor C1_0DeleteDomainResponse
instance AWSRequest DeleteDomain
instance ToHeaders DeleteDomain
instance ToQuery DeleteDomain
instance ToPath DeleteDomain


-- | Deletes one or more attributes associated with an item. If all
--   attributes of the item are deleted, the item is deleted.
--   
--   <a>DeleteAttributes</a> is an idempotent operation; running it
--   multiple times on the same item or attribute does not result in an
--   error response.
--   
--   Because Amazon SimpleDB makes multiple copies of item data and uses an
--   eventual consistency update model, performing a <tt>GetAttributes</tt>
--   or <tt>Select</tt> operation (read) immediately after a
--   <a>DeleteAttributes</a> or <tt>PutAttributes</tt> operation (write)
--   might not return updated item data.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonSimpleDB/latest/DeveloperGuide/SDB_API_DeleteAttributes.html</a>
module Network.AWS.SDB.DeleteAttributes
data DeleteAttributes

-- | <a>DeleteAttributes</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>daAttributes</a> <tt>::</tt> [<a>Attribute</a>]</li>
--   <li><a>daDomainName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>daExpected</a> <tt>::</tt> <a>Maybe</a>
--   <a>UpdateCondition</a></li>
--   <li><a>daItemName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteAttributes :: Text -> Text -> DeleteAttributes

-- | A list of Attributes. Similar to columns on a spreadsheet, attributes
--   represent categories of data that can be assigned to items.
daAttributes :: Lens' DeleteAttributes [Attribute]

-- | The name of the domain in which to perform the operation.
daDomainName :: Lens' DeleteAttributes Text

-- | The update condition which, if specified, determines whether the
--   specified attributes will be deleted or not. The update condition must
--   be satisfied in order for this request to be processed and the
--   attributes to be deleted.
daExpected :: Lens' DeleteAttributes (Maybe UpdateCondition)

-- | The name of the item. Similar to rows on a spreadsheet, items
--   represent individual objects that contain one or more value-attribute
--   pairs.
daItemName :: Lens' DeleteAttributes Text
data DeleteAttributesResponse

-- | <a>DeleteAttributesResponse</a> constructor.
deleteAttributesResponse :: DeleteAttributesResponse
instance Eq DeleteAttributes
instance Read DeleteAttributes
instance Show DeleteAttributes
instance Eq DeleteAttributesResponse
instance Ord DeleteAttributesResponse
instance Read DeleteAttributesResponse
instance Show DeleteAttributesResponse
instance Generic DeleteAttributesResponse
instance Datatype D1DeleteAttributesResponse
instance Constructor C1_0DeleteAttributesResponse
instance AWSRequest DeleteAttributes
instance ToHeaders DeleteAttributes
instance ToQuery DeleteAttributes
instance ToPath DeleteAttributes


-- | The <a>CreateDomain</a> operation creates a new domain. The domain
--   name should be unique among the domains associated with the Access Key
--   ID provided in the request. The <a>CreateDomain</a> operation may take
--   10 or more seconds to complete.
--   
--   The client can create up to 100 domains per account.
--   
--   If the client requires additional domains, go to
--   <a>http://aws.amazon.com/contact-us/simpledb-limit-request/</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonSimpleDB/latest/DeveloperGuide/SDB_API_CreateDomain.html</a>
module Network.AWS.SDB.CreateDomain
data CreateDomain

-- | <a>CreateDomain</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cdDomainName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createDomain :: Text -> CreateDomain

-- | The name of the domain to create. The name can range between 3 and 255
--   characters and can contain the following characters: a-z, A-Z, 0-9,
--   '_', <a>-</a>, and <a>.</a>.
cdDomainName :: Lens' CreateDomain Text
data CreateDomainResponse

-- | <a>CreateDomainResponse</a> constructor.
createDomainResponse :: CreateDomainResponse
instance Eq CreateDomain
instance Ord CreateDomain
instance Read CreateDomain
instance Show CreateDomain
instance Monoid CreateDomain
instance IsString CreateDomain
instance Eq CreateDomainResponse
instance Ord CreateDomainResponse
instance Read CreateDomainResponse
instance Show CreateDomainResponse
instance Generic CreateDomainResponse
instance Datatype D1CreateDomainResponse
instance Constructor C1_0CreateDomainResponse
instance AWSRequest CreateDomain
instance ToHeaders CreateDomain
instance ToQuery CreateDomain
instance ToPath CreateDomain


-- | The <a>BatchPutAttributes</a> operation creates or replaces attributes
--   within one or more items. By using this operation, the client can
--   perform multiple <tt>PutAttribute</tt> operation with a single call.
--   This helps yield savings in round trips and latencies, enabling Amazon
--   SimpleDB to optimize requests and generally produce better throughput.
--   
--   The client may specify the item name with the <a>ItemName</a>
--   parameter. The client may specify new attributes using a combination
--   of the <a>Name</a> and <a>Value</a> parameters. The client may specify
--   the first attribute for the first item using the parameters
--   'Item.0.Attribute.0.Name' and 'Item.0.Attribute.0.Value', and for the
--   second attribute for the first item by the parameters
--   'Item.0.Attribute.1.Name' and 'Item.0.Attribute.1.Value', and so on.
--   
--   Attributes are uniquely identified within an item by their name/value
--   combination. For example, a single item can have the attributes
--   '{"first_name", "first_value" }' and '{ "first_name", "second_value"
--   }'. However, it cannot have two attribute instances where both the
--   <a>Name</a> and <a>Value</a> are the same.
--   
--   Optionally, the requester can supply the <tt>Replace</tt> parameter
--   for each individual value. Setting this value to <tt>true</tt> will
--   cause the new attribute values to replace the existing attribute
--   values. For example, if an item <tt>I</tt> has the attributes '{
--   <tt>a</tt>, '1' }, { <tt>b</tt>, '2'}' and '{ <tt>b</tt>, '3' }' and
--   the requester does a BatchPutAttributes of '{<tt>I</tt>, <tt>b</tt>,
--   '4' }' with the Replace parameter set to true, the final attributes of
--   the item will be '{ <tt>a</tt>, '1' }' and '{ <tt>b</tt>, '4' }',
--   replacing the previous values of the <tt>b</tt> attribute with the new
--   value.
--   
--   This operation is vulnerable to exceeding the maximum URL size when
--   making a REST request using the HTTP GET method. This operation does
--   not support conditions using <a>Name</a>, <a>Value</a>, or
--   <a>Exists</a>. You can execute multiple <a>BatchPutAttributes</a>
--   operations and other operations in parallel. However, large numbers of
--   concurrent <a>BatchPutAttributes</a> calls can result in Service
--   Unavailable (503) responses.
--   
--   The following limitations are enforced for this operation: 256
--   attribute name-value pairs per item 1 MB request size 1 billion
--   attributes per domain 10 GB of total user data storage per domain 25
--   item limit per <a>BatchPutAttributes</a> operation
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonSimpleDB/latest/DeveloperGuide/SDB_API_BatchPutAttributes.html</a>
module Network.AWS.SDB.BatchPutAttributes
data BatchPutAttributes

-- | <a>BatchPutAttributes</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>bpaDomainName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>bpaItems</a> <tt>::</tt> [<a>ReplaceableItem</a>]</li>
--   </ul>
batchPutAttributes :: Text -> BatchPutAttributes

-- | The name of the domain in which the attributes are being stored.
bpaDomainName :: Lens' BatchPutAttributes Text

-- | A list of items on which to perform the operation.
bpaItems :: Lens' BatchPutAttributes [ReplaceableItem]
data BatchPutAttributesResponse

-- | <a>BatchPutAttributesResponse</a> constructor.
batchPutAttributesResponse :: BatchPutAttributesResponse
instance Eq BatchPutAttributes
instance Read BatchPutAttributes
instance Show BatchPutAttributes
instance Eq BatchPutAttributesResponse
instance Ord BatchPutAttributesResponse
instance Read BatchPutAttributesResponse
instance Show BatchPutAttributesResponse
instance Generic BatchPutAttributesResponse
instance Datatype D1BatchPutAttributesResponse
instance Constructor C1_0BatchPutAttributesResponse
instance AWSRequest BatchPutAttributes
instance ToHeaders BatchPutAttributes
instance ToQuery BatchPutAttributes
instance ToPath BatchPutAttributes


-- | Performs multiple DeleteAttributes operations in a single call, which
--   reduces round trips and latencies. This enables Amazon SimpleDB to
--   optimize requests, which generally yields better throughput.
--   
--   The following limitations are enforced for this operation: 1 MB
--   request size 25 item limit per BatchDeleteAttributes operation
--   
--   
--   <a>http://docs.aws.amazon.com/AmazonSimpleDB/latest/DeveloperGuide/SDB_API_BatchDeleteAttributes.html</a>
module Network.AWS.SDB.BatchDeleteAttributes
data BatchDeleteAttributes

-- | <a>BatchDeleteAttributes</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>bdaDomainName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>bdaItems</a> <tt>::</tt> [<a>DeletableItem</a>]</li>
--   </ul>
batchDeleteAttributes :: Text -> BatchDeleteAttributes

-- | The name of the domain in which the attributes are being deleted.
bdaDomainName :: Lens' BatchDeleteAttributes Text

-- | A list of items on which to perform the operation.
bdaItems :: Lens' BatchDeleteAttributes [DeletableItem]
data BatchDeleteAttributesResponse

-- | <a>BatchDeleteAttributesResponse</a> constructor.
batchDeleteAttributesResponse :: BatchDeleteAttributesResponse
instance Eq BatchDeleteAttributes
instance Read BatchDeleteAttributes
instance Show BatchDeleteAttributes
instance Eq BatchDeleteAttributesResponse
instance Ord BatchDeleteAttributesResponse
instance Read BatchDeleteAttributesResponse
instance Show BatchDeleteAttributesResponse
instance Generic BatchDeleteAttributesResponse
instance Datatype D1BatchDeleteAttributesResponse
instance Constructor C1_0BatchDeleteAttributesResponse
instance AWSRequest BatchDeleteAttributes
instance ToHeaders BatchDeleteAttributes
instance ToQuery BatchDeleteAttributes
instance ToPath BatchDeleteAttributes


-- | Amazon SimpleDB is a highly available and flexible non-relational data
--   store that offloads the work of database administration. Developers
--   simply store and query data items via web services requests and Amazon
--   SimpleDB does the rest. Unbound by the strict requirements of a
--   relational database, Amazon SimpleDB is optimized to provide high
--   availability and flexibility, with little or no administrative burden.
--   Behind the scenes, Amazon SimpleDB creates and manages multiple
--   geographically distributed replicas of your data automatically to
--   enable high availability and data durability. The service charges you
--   only for the resources actually consumed in storing your data and
--   serving your requests. You can change your data model on the fly, and
--   data is automatically indexed for you. With Amazon SimpleDB, you can
--   focus on application development without worrying about infrastructure
--   provisioning, high availability, software maintenance, schema and
--   index management, or performance tuning.
module Network.AWS.SDB
