-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Strapped templates for Wheb
--   
--   Implements basic functionality for:
--   
--   <ul>
--   <li><a>StrappedTemplates</a></li>
--   <li><a>Wheb</a></li>
--   </ul>
--   
--   <i>In action:</i>
--   
--   Use with language extensions <i>OverloadedStrings</i>,
--   <i>FlexibleInstances</i>, <i>MultiParamTypeClasses</i>
--   
--   <pre>
--   import           Control.Monad.Except
--   
--   import           Web.Wheb
--   import           Web.Wheb.Plugins.Strapped
--   import           Text.Strapped
--   
--   type MyApp = WhebT MyGlobalCtx () IO
--   
--   data MyGlobalCtx = MyGlobalCtx (StrappedContainer MyApp)
--   
--   instance StrappedApp MyGlobalCtx MyApp where
--       getStrappedContainer (MyGlobalCtx g) = g
--   
--   main :: IO ()
--   main = do
--    opts &lt;- generateOptions $ do
--      sc &lt;- initStrapped "examples/resources" ".html"
--      addGET "." rootPat $ renderTemplate "index.html" (emptyBucket)
--      return (MyGlobalCtx sc, ())
--    runWhebServer opts
--   </pre>
@package wheb-strapped
@version 0.1.0.0

module Web.Wheb.Plugins.Strapped
data StrappedContainer m
StrappedContainer :: StrappedConfig -> InputBucket m -> StrappedContainer m
renderconfig :: StrappedContainer m -> StrappedConfig
defaultBucket :: StrappedContainer m -> InputBucket m
class StrappedApp g m
getStrappedContainer :: StrappedApp g m => g -> StrappedContainer m

-- | Render a template or throw an error
renderTemplate :: (MonadIO m, StrappedApp g (WhebT g s m)) => String -> InputBucket (WhebT g s m) -> WhebHandlerT g s m

-- | Load Strapped from a directory matching the extention
initStrapped :: MonadIO m => StrappedConfig -> FilePath -> String -> InitM g s m (StrappedContainer (WhebT g s m))
