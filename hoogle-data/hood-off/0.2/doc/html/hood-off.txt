-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Dummy package to disable Hood without having to remove all the calls to observe
--   
--   Dummy package to disable Hood without having to remove all the calls
--   to observe
@package hood-off
@version 0.2

module Debug.Hood.Observe

-- | <a>observe</a> observes data structures in flight.
--   
--   An example of use is <tt> map (+1) . observe "intermeduate" . map (+2)
--   </tt>
--   
--   In this example, we observe the value that flows from the producer
--   <tt>map (+2)</tt> to the consumer <tt>map (+1)</tt>.
--   
--   <a>observe</a> can also observe functions as well a structural values.
observe :: Observable a => String -> a -> a
newtype Observer
O :: (forall a. Observable a => String -> a -> a) -> Observer
type Observing a = a -> a
class Observable a
observer :: Observable a => a -> Parent -> a
observers :: Observable a => String -> (Observer -> a) -> a
runO :: IO a -> IO ()
printO :: a -> IO ()
putStrO :: String -> IO ()
(<<) :: Observable a => ObserverM (a -> b) -> a -> ObserverM b
thunk :: Observable a => a -> ObserverM a
send :: a
observeBase :: a -> Parent -> a
observeOpaque :: String -> a -> Parent -> a
debugO :: Monad m => t -> m [a]
instance Show Parent
instance Monad ObserverM
instance Observable a
