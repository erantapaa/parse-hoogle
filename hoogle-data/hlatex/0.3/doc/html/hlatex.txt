-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A library to build valid LaTeX files
--   
--   ...
@package hlatex
@version 0.3

module Language.LaTeX.Types
data Document
Document :: DocumentClss -> PreambleItm -> ParItm -> Document
documentClass :: Document -> DocumentClss
documentPreamble :: Document -> PreambleItm
documentBody :: Document -> ParItm
type LineNumber = Int
type CharNumber = Int
data Loc
Loc :: FilePath -> LineNumber -> CharNumber -> Loc
locFile :: Loc -> FilePath
locLine :: Loc -> LineNumber
locChar :: Loc -> CharNumber
data Note
TextNote :: String -> Note
IntNote :: Int -> Note
LocNote :: Loc -> Note
data DocumentClassKind
Article :: DocumentClassKind
Book :: DocumentClassKind
Report :: DocumentClassKind
Letter :: DocumentClassKind
OtherDocumentClassKind :: String -> DocumentClassKind
data DocumentClss
DocClass :: DocumentClassKind -> [AnyItm] -> DocumentClss
docClassKind :: DocumentClss -> DocumentClassKind
docClassOptions :: DocumentClss -> [AnyItm]
data AnyItm
PreambleItm :: PreambleItm -> AnyItm
LatexItm :: LatexItm -> AnyItm
MathItm :: MathItm -> AnyItm
ParItm :: ParItm -> AnyItm
LocSpecs :: [LocSpec] -> AnyItm
Key :: Key -> AnyItm
PackageName :: PackageName -> AnyItm
Coord :: Coord -> AnyItm
Length :: LatexLength -> AnyItm
SaveBin :: SaveBin -> AnyItm
data PreambleItm
PreambleCmdArgs :: String -> [Arg AnyItm] -> PreambleItm
PreambleEnv :: String -> [Arg AnyItm] -> AnyItm -> PreambleItm
PreambleCast :: AnyItm -> PreambleItm
PreambleConcat :: [PreambleItm] -> PreambleItm
RawPreamble :: String -> PreambleItm
PreambleNote :: Key -> Note -> PreambleItm -> PreambleItm
data TexDcl
TexDcl :: String -> [Arg AnyItm] -> TexDcl
texDeclName :: TexDcl -> String
texDeclArgs :: TexDcl -> [Arg AnyItm]
data LatexItm
LatexCmdArgs :: String -> [Arg LatexItm] -> LatexItm
LatexCmdAnyArgs :: String -> [Arg AnyItm] -> LatexItm
TexDecls :: [TexDcl] -> LatexItm
TexCmdNoArg :: String -> LatexItm
TexCmdArg :: String -> LatexItm -> LatexItm
Environment :: String -> [Arg AnyItm] -> AnyItm -> LatexItm
RawTex :: String -> LatexItm
LatexCast :: AnyItm -> LatexItm
TexGroup :: LatexItm -> LatexItm
LatexEmpty :: LatexItm
LatexAppend :: LatexItm -> LatexItm -> LatexItm
LatexNote :: Key -> Note -> LatexItm -> LatexItm
appendAny :: AnyItm -> AnyItm -> Maybe AnyItm
data Named a
Named :: String -> a -> Named a
data PackageAction
PackageDependency :: PackageName -> PackageAction
ProvidePackage :: PackageName -> PackageAction
data Arg a
NoArg :: Arg a
StarArg :: Arg a
Mandatory :: [a] -> Arg a
Optional :: [a] -> Arg a
NamedArgs :: [Named a] -> Arg a
NamedOpts :: [Named a] -> Arg a
Coordinates :: a -> a -> Arg a
RawArg :: String -> Arg a
LiftArg :: a -> Arg a
PackageAction :: PackageAction -> Arg a
data Star
Star :: Star
NoStar :: Star
data Coord
MkCoord :: LatexLength -> LatexLength -> Coord
newtype Percentage
Percentage :: Int -> Percentage
percentage :: Percentage -> Int
data ParItm
ParCmdArgs :: String -> [Arg AnyItm] -> ParItm
ParEnv :: String -> [Arg AnyItm] -> AnyItm -> ParItm
Tabular :: [RowSpec LatexItm] -> [Row LatexItm] -> ParItm
RawParMode :: String -> ParItm
ParCast :: AnyItm -> ParItm
ParGroup :: ParItm -> ParItm
ParConcat :: [ParItm] -> ParItm
ParNote :: Key -> Note -> ParItm -> ParItm
unParNote :: ParItm -> Maybe (Key, Note, ParItm)
uncatParItm :: ParItm -> [ParItm]
newtype MathDcl
MathDcl :: String -> MathDcl
data MathItm
MathDecls :: [MathDcl] -> MathItm
MathCmdArgs :: String -> [Arg AnyItm] -> MathItm
MathArray :: [RowSpec MathItm] -> [Row MathItm] -> MathItm
RawMath :: String -> MathItm
MathCast :: AnyItm -> MathItm
MathRat :: Rational -> MathItm
MathGroup :: MathItm -> MathItm
MathConcat :: [MathItm] -> MathItm
MathBinOp :: String -> MathItm -> MathItm -> MathItm
MathUnOp :: String -> MathItm -> MathItm
MathNote :: Key -> Note -> MathItm -> MathItm
data TexUnit

-- | Scalled point (1pt = 65536sp)
Sp :: TexUnit

-- | Point unit size (1pt = 0.351mm)
Pt :: TexUnit

-- | Big point (1in = 72bp), also PostScript point
Bp :: TexUnit

-- | DidÃ´t point (1dd = 0.376mm)
Dd :: TexUnit

-- | One em is about the width of the letter M in the current font
Em :: TexUnit

-- | One ex is about the hoigh of the letter x in the current font
Ex :: TexUnit

-- | Centimeter unit size
Cm :: TexUnit

-- | Milimeter unit size (1mm = 2.845pt)
Mm :: TexUnit

-- | Inch unit size (1in = 72.27pt)
In :: TexUnit

-- | Picas (1pc = 12pt)
Pc :: TexUnit

-- | Cicero (1dd = 12dd = 4.531mm)
Cc :: TexUnit

-- | Math unit (18mu = 1em)
Mu :: TexUnit
data LatexLength
LengthScaledBy :: Rational -> LatexLength -> LatexLength
LengthCmdRatArg :: String -> Rational -> LatexLength
LengthCmd :: String -> LatexLength
LengthCst :: (Maybe TexUnit) -> Rational -> LatexLength
lengthCst :: LatexLength -> Maybe (Maybe TexUnit, Rational)
safeLengthOp :: String -> (Rational -> Rational -> Rational) -> LatexLength -> LatexLength -> LatexLength
scaleBy :: Rational -> LatexLength -> LatexLength
data RowSpec a
Rc :: RowSpec a
Rl :: RowSpec a
Rr :: RowSpec a
Rvline :: RowSpec a
Rtext :: a -> RowSpec a
data LocSpec
Lh :: LocSpec
Lt :: LocSpec
Lb :: LocSpec
Lp :: LocSpec
locSpecChar :: LocSpec -> Char
data Pos

-- | Centered (default).
Centered :: Pos

-- | Flush left
FlushLeft :: Pos

-- | Flush right
FlushRight :: Pos

-- | Stretch (justify) across entire width; text must contain stretchable
--   space for this to work.
Stretch :: Pos
charPos :: Pos -> Char
data LatexPaperSize
A4paper :: LatexPaperSize
OtherPaperSize :: String -> LatexPaperSize
data Row cell
Cells :: [cell] -> Row cell
Hline :: Row cell
Cline :: Int -> Int -> Row cell
data ListItm
ListItm :: [Arg LatexItm] -> ParItm -> ListItm
itemOptions :: ListItm -> [Arg LatexItm]
itemContents :: ListItm -> ParItm
newtype PackageName
PkgName :: String -> PackageName
getPkgName :: PackageName -> String
newtype Key
MkKey :: String -> Key
getKey :: Key -> String
newtype SaveBin
UnsafeMakeSaveBin :: Int -> SaveBin
unsafeGetSaveBin :: SaveBin -> Int
data LatexState
LS :: SaveBin -> LatexState
freshSaveBin :: LatexState -> SaveBin
type ErrorMessage = String
newtype LatexM a
LatexM :: Either ErrorMessage a -> LatexM a
runLatexM :: LatexM a -> Either ErrorMessage a
type TexDecl = LatexM TexDcl
type LatexItem = LatexM LatexItm
type ParItem = LatexM ParItm
type MathDecl = LatexM MathDcl
newtype AnyItem
AnyItem :: LatexM AnyItm -> AnyItem
anyItmM :: AnyItem -> LatexM AnyItm
newtype MathItem
MathItem :: LatexM MathItm -> MathItem
mathItmM :: MathItem -> LatexM MathItm
type ListItem = LatexM ListItm
type PreambleItem = LatexM PreambleItm
type DocumentClass = LatexM DocumentClss
type TexDeclW = Writer TexDecl ()
type LatexItemW = Writer LatexItem ()
type ParItemW = Writer ParItem ()
type MathDeclW = Writer MathDecl ()
type MathItemW = Writer MathItem ()
type PreambleItemW = Writer PreambleItem ()
rawhchar :: Char -> String

-- | Type for encodings used in commands like.
--   <tt>usepackage[utf8]{inputenc}</tt>, that we can express as
--   <tt>useInputenc</tt> <tt>utf8</tt>.
newtype Encoding
Encoding :: String -> Encoding
fromEncoding :: Encoding -> String
instance Traversable Row
instance Foldable Row
instance Functor Row
instance Traversable RowSpec
instance Foldable RowSpec
instance Functor RowSpec
instance Traversable Arg
instance Foldable Arg
instance Functor Arg
instance Traversable Named
instance Foldable Named
instance Functor Named
instance Typeable Loc
instance Typeable Note
instance Typeable DocumentClassKind
instance Typeable1 Named
instance Typeable Star
instance Typeable MathDcl
instance Typeable TexUnit
instance Typeable LatexLength
instance Typeable Coord
instance Typeable1 RowSpec
instance Typeable LocSpec
instance Typeable LatexPaperSize
instance Typeable1 Row
instance Typeable PackageName
instance Typeable PackageAction
instance Typeable1 Arg
instance Typeable Key
instance Typeable SaveBin
instance Typeable AnyItm
instance Typeable MathItm
instance Typeable ParItm
instance Typeable LatexItm
instance Typeable TexDcl
instance Typeable PreambleItm
instance Typeable DocumentClss
instance Typeable Document
instance Typeable1 LatexM
instance Typeable AnyItem
instance Typeable MathItem
instance Show Loc
instance Eq Loc
instance Data Loc
instance Show Note
instance Eq Note
instance Data Note
instance Show DocumentClassKind
instance Eq DocumentClassKind
instance Data DocumentClassKind
instance Show a => Show (Named a)
instance Eq a => Eq (Named a)
instance Data a => Data (Named a)
instance Show Star
instance Eq Star
instance Data Star
instance Eq Percentage
instance Show Percentage
instance Ord Percentage
instance Num Percentage
instance Show MathDcl
instance Eq MathDcl
instance Data MathDcl
instance Eq TexUnit
instance Ord TexUnit
instance Enum TexUnit
instance Show TexUnit
instance Data TexUnit
instance Show LatexLength
instance Eq LatexLength
instance Data LatexLength
instance Show Coord
instance Eq Coord
instance Data Coord
instance Show a => Show (RowSpec a)
instance Eq a => Eq (RowSpec a)
instance Data a => Data (RowSpec a)
instance Show LocSpec
instance Eq LocSpec
instance Data LocSpec
instance Show LatexPaperSize
instance Eq LatexPaperSize
instance Data LatexPaperSize
instance Show cell => Show (Row cell)
instance Eq cell => Eq (Row cell)
instance Data cell => Data (Row cell)
instance Ord PackageName
instance Eq PackageName
instance Show PackageName
instance Data PackageName
instance Show PackageAction
instance Eq PackageAction
instance Data PackageAction
instance Show a => Show (Arg a)
instance Eq a => Eq (Arg a)
instance Data a => Data (Arg a)
instance Eq Key
instance Show Key
instance Data Key
instance Eq SaveBin
instance Show SaveBin
instance Data SaveBin
instance Show AnyItm
instance Eq AnyItm
instance Data AnyItm
instance Show MathItm
instance Eq MathItm
instance Data MathItm
instance Show ParItm
instance Eq ParItm
instance Data ParItm
instance Show LatexItm
instance Eq LatexItm
instance Data LatexItm
instance Show TexDcl
instance Eq TexDcl
instance Data TexDcl
instance Show PreambleItm
instance Eq PreambleItm
instance Data PreambleItm
instance Show DocumentClss
instance Eq DocumentClss
instance Data DocumentClss
instance Show Document
instance Eq Document
instance Data Document
instance Functor LatexM
instance Applicative LatexM
instance Monad LatexM
instance MonadPlus LatexM
instance MonadError ErrorMessage LatexM
instance Show a => Show (LatexM a)
instance Eq a => Eq (LatexM a)
instance Num a => Num (LatexM a)
instance Fractional a => Fractional (LatexM a)
instance Data a => Data (LatexM a)
instance Eq AnyItem
instance Show AnyItem
instance Data AnyItem
instance Monoid MathItem
instance Eq MathItem
instance Show MathItem
instance Num MathItem
instance Fractional MathItem
instance Data MathItem
instance Eq Encoding
instance Ord Encoding
instance Show Encoding
instance IsString a => IsString (LatexM a)
instance Monoid a => Monoid (LatexM a)
instance (Error a, Eq a, Show a, Fractional b) => Fractional (Either a b)
instance (Error a, Eq a, Show a, Num b) => Num (Either a b)
instance Fractional LatexLength
instance Monoid LatexLength
instance Num LatexLength
instance Fractional MathItm
instance Num MathItm
instance Monoid MathItm
instance Monoid ParItm
instance Monoid Star
instance IsString LatexItm
instance Monoid LatexItm
instance Monoid PreambleItm

module Language.LaTeX.Length

-- | Since 'in' is a keyword in Haskell, this one is called <a>inch</a>.
inch, mu, cc, dd, bp, sp, pc, ex, mm, cm, em, pt :: Rational -> LatexLength
stretch :: Rational -> LatexLength
parindent, fboxsep, fboxrule, smallskipamount, medskipamount, bigskipamount, arraystretch, doublerulesep, arrayrulewidth, tabcolsep, arraycolsep, dblfloatpagefraction, dbltopfaction, floatpagefraction, textfraction, dbltextfloatsep, dblfloatsep, intextsep, textfloatsep, floatsep, belowdisplayshortskip, abovedisplayshortskip, belowdisplayskip, abovedisplayskip, jot, listparindent, rightmargin, leftmargin, labelwidth, labelsep, itemindent, itemsep, partopsep, topsep, footskip, footheight, topskip, headsep, headheight, topmargin, marginparpush, marginparsep, marginparwidth, evensidemargin, oddsidemargin, mathindent, columnseprule, columnsep, fill, baselinestrech, baselineskip, parskip, parsep, textheight, linewidth, textwidth :: LatexLength

module Language.LaTeX.Checker
providedPackages :: PreambleItm -> Set PackageName
neededPackages :: Document -> Set PackageName
checkDocument :: Document -> Maybe ErrorMessage

module Language.LaTeX.Builder.MonoidUtils
Ã¸ :: Monoid m => m

-- | (â) = <a>mappend</a>
--   
--   U+2295, CIRCLED PLUS
(â) :: Monoid Î± => Î± -> Î± -> Î±

-- | An infix synonym for <a>mappend</a>.
(<>) :: Monoid m => m -> m -> m
(<||>) :: (Monoid a, Eq a) => a -> a -> a
(<&&>) :: (Monoid a, Eq a, Monoid b) => a -> b -> b
mapNonEmpty :: (Eq a, Monoid a, Monoid b) => (a -> b) -> a -> b

module Language.LaTeX.Printer
optionals :: [a] -> Arg a
text :: String -> ShowS
between :: String -> String -> ShowS -> ShowS
braces, parens, brackets :: ShowS -> ShowS
nl, sp, backslash, irrNl, nl2 :: ShowS
($$) :: ShowS -> ShowS -> ShowS
($$$) :: ShowS -> ShowS -> ShowS
vcat, vcat2 :: [ShowS] -> ShowS
ppNamed :: Named ShowS -> ShowS
commas :: [ShowS] -> ShowS
ppArg :: Arg ShowS -> ShowS
ppEnv :: String -> [Arg ShowS] -> ShowS -> ShowS
ppCmdArgs :: String -> [Arg ShowS] -> ShowS
ppDecl :: String -> ShowS -> ShowS
ppTexDecl :: TexDcl -> ShowS
ppMathDecl :: MathDcl -> ShowS
pp :: LatexItm -> ShowS
ppParMode :: ParItm -> ShowS
ppMath :: MathItm -> ShowS
ppAny :: AnyItm -> ShowS
ppRowSpec :: RowSpec ShowS -> ShowS
ppRows :: (a -> ShowS) -> [Row a] -> ShowS
unitName :: TexUnit -> String
ppTexLength :: LatexLength -> ShowS
ppPreamble :: PreambleItm -> ShowS
ppNote :: Key -> Note -> (a -> ShowS) -> a -> ShowS
showLoc :: Loc -> String
showDocClassKind :: DocumentClassKind -> String
preambOfDocClass :: DocumentClss -> PreambleItm
ppDocument :: Document -> ShowS
showsLaTeX :: LatexM Document -> Either ErrorMessage ShowS
showLaTeX :: LatexM Document -> Either ErrorMessage String

module Language.LaTeX.Builder.Internal
noArg :: Arg a
starArg :: Arg a
starToArg :: Star -> Arg a
mandatory, optional :: a -> Arg a
mandatoryLatexItem, optionalLatexItem :: LatexItem -> Arg AnyItem
coordinates :: a -> a -> Arg a
mandatoryList :: [a] -> Arg a
optionals :: [a] -> Arg a
named :: String -> a -> Named a
namedOpts :: [Named a] -> Arg a
namedArgs :: [Named a] -> Arg a
optionalLatexItems :: [LatexItem] -> Arg AnyItem
usepackage :: [AnyItem] -> PackageName -> PreambleItem
nilNote :: Note
stringNote :: String -> Note
intNote :: Int -> Note
locNote :: Loc -> Note
rawArg :: String -> Arg m
liftArg :: (Eq m, Monoid m) => m -> Arg m
rawDecls :: [TexDecl] -> LatexItem
texDecl :: String -> TexDecl
texDecl' :: String -> [Arg AnyItem] -> TexDecl
texDeclOpt :: String -> AnyItem -> TexDecl
parNote :: Key -> Note -> ParItem -> ParItem
parCmdArgs :: String -> [Arg AnyItem] -> ParItem
parCmdArg :: String -> AnyItem -> ParItem
latexNote :: Key -> Note -> LatexItem -> LatexItem
latexCmdArgs :: String -> [Arg LatexItem] -> LatexItem
latexCmdAnyArgs :: String -> [Arg AnyItem] -> LatexItem
latexCmdArg :: String -> LatexItem -> LatexItem
latexCmdAnyArg :: String -> AnyItem -> LatexItem
preambleNote :: Key -> Note -> PreambleItem -> PreambleItem
preambleCmdArgs :: String -> [Arg AnyItem] -> PreambleItem
preambleCmdArg :: String -> AnyItem -> PreambleItem
preambleEnv :: String -> [Arg AnyItem] -> AnyItem -> PreambleItem
rawPreamble :: String -> PreambleItem
texLength :: LatexLength -> AnyItem
mandatoryTexLength :: LatexLength -> Arg AnyItem
optTexLength :: LatexLength -> Arg AnyItem
latexItem :: LatexItem -> AnyItem
mathItem :: MathItem -> AnyItem
parItem :: ParItem -> AnyItem
preambleItem :: PreambleItem -> AnyItem
packageName :: PackageName -> AnyItem
locSpecs :: [LocSpec] -> AnyItem
rawEncoding :: String -> Encoding
pkgName :: String -> PackageName
packageDependency :: PackageName -> Arg a
providePackage :: PackageName -> Arg a
showPaper :: LatexPaperSize -> String
latexPaper :: LatexPaperSize -> AnyItem
otherDocumentClassKind :: String -> DocumentClassKind
bool :: Bool -> AnyItem
coord :: Coord -> AnyItem
latexSaveBin :: SaveBin -> AnyItem
latexCast :: AnyItem -> LatexItem
mathCast :: AnyItem -> MathItem
parCast :: AnyItem -> ParItem
preambleCast :: AnyItem -> PreambleItem
latexEnvironmentAny :: String -> [Arg AnyItem] -> AnyItem -> LatexItem
latexEnvironment :: String -> [Arg AnyItem] -> LatexItem -> LatexItem
latexEnvironmentPar :: String -> [Arg AnyItem] -> ParItem -> LatexItem
latexParModeArgs :: String -> [Arg AnyItem] -> ParItem -> LatexItem
parEnv :: String -> [Arg AnyItem] -> AnyItem -> ParItem
parEnvironmentPar :: String -> [Arg AnyItem] -> ParItem -> ParItem
figureLike :: String -> Star -> [LocSpec] -> ParItem -> ParItem
listLikeEnv :: String -> [Arg LatexItem] -> [ListItem] -> ParItem
rawTex :: String -> LatexItem
rawAnyTex :: String -> AnyItem
rawMath :: String -> MathItem
rawMathChar :: Char -> MathItem
texCmdNoArg :: String -> LatexItem
latexKey :: Key -> AnyItem
latexKeys :: [Key] -> [AnyItem]
latexKeysArg :: [Key] -> Arg AnyItem
latexKeyArg :: Key -> Arg AnyItem
normSpaces :: String -> String
num :: Real a => a -> AnyItem
rat :: Rational -> AnyItem
space :: LatexItem
starize :: String -> Star -> String
unsafeNewsavebox :: Int -> (SaveBin, LatexItem)
sectioning :: String -> (LatexItem -> ParItem, Star -> Maybe LatexItem -> LatexItem -> ParItem)
tabularLike :: ([RowSpec a] -> [Row a] -> b) -> [RowSpec (LatexM a)] -> [Row (LatexM a)] -> LatexM b
checkRows :: [RowSpec a] -> [Row a] -> LatexM [Row a]
bgroup, endgroup, begingroup, egroup :: TexDecl

module Language.LaTeX.Builder.Color
data Color

-- | <a>pagecolor</a> sets the background colour for the current and
--   following pages
pagecolor :: Color -> ParItem

-- | <a>color</a> is a declaration to switch to setting text in the given
--   colour
color :: Color -> TexDecl

-- | <a>textcolor</a> sets the text of its argument in the given colour
textcolor :: Color -> LatexItem -> LatexItem

-- | <a>colorbox</a> sets its argument in a box with the given colour as
--   background
colorbox :: Color -> LatexItem -> LatexItem

-- | <tt>fcolorbox c1 c2 text</tt> is like <a>colorbox</a>, with a frame of
--   <tt>c1</tt> around a box of background colour <tt>c2</tt>. For
--   example, <tt>fcolorbox red green <a>Text</a></tt> sets <tt>Text</tt>
--   in the current text colour on a green background with a red frame.
--   
--   The two specifications must either both be defined ones, or both use
--   the same model, which is given only once, this limitation only make
--   sense in LaTeX parlance but is helpful here to understand why this
--   function can fail.
fcolorbox :: Color -> Color -> LatexItem -> LatexItem

-- | Like <a>color</a> but usable in the preamble.
preamblecolor :: Color -> PreambleItem

-- | <a>normalcolor</a> switches to the colour that was active at the end
--   of the preamble. Thus placing a <a>color</a> declaration in the
--   preamble can change the standard colour for the whole document. This
--   is the equivalent to <tt>normalfont</tt> for font selection.
normalcolor :: TexDecl
named :: String -> Color
rgb :: Rational -> Rational -> Rational -> Color
cmyk :: Rational -> Rational -> Rational -> Rational -> Color
gray :: Rational -> Color
html :: String -> Color
rgb256 :: Word8 -> Word8 -> Word8 -> Color
red, yellow, magenta, cyan, white, black, blue, green :: Color
orange :: Color
pkg :: PackageName

module Language.LaTeX.Builder.Rotating
pkg :: PackageName
turn :: Int -> LatexItem -> LatexItem

module Language.LaTeX.Builder.Babel
data Lang
data BabelOpt
useBabel :: Lang -> [BabelOpt] -> PreambleItem
langName :: Lang -> String

-- | Switch locally to another language
otherlanguage :: Lang -> ParItem -> ParItem
francais, french :: Lang
customLang :: String -> Lang
customBabelOpt :: AnyItem -> BabelOpt
pkg :: PackageName
instance Show Lang
instance Eq Lang

module Language.LaTeX.Builder.Graphics

-- | <tt>includegraphics fopts fp</tt> The <tt>fopts</tt> function will
--   receive the defaults options and should modify options to suit your
--   needs.
--   
--   This function is generally used like this: <tt> includegraphics (\o
--   -&gt; o{ &lt;opt&gt; = &lt;exp&gt; ... }) fp </tt>
includegraphics :: (IncludeGraphicsOpts -> IncludeGraphicsOpts) -> FilePath -> ParItem
data IncludeGraphicsOpts
IncludeGraphicsOpts :: Rational -> Maybe LatexLength -> Maybe LatexLength -> Maybe LatexLength -> Bool -> Rational -> Loc -> Bool -> Bool -> Maybe (Coord, Coord) -> Maybe (Coord, Coord) -> Maybe (Coord, Coord) -> Bool -> IncludeGraphicsOpts

-- | the number by which the figure size should be magnified over its
--   natural size
scale :: IncludeGraphicsOpts -> Rational

-- | specifies the width to which the figure should be scaled to; if height
--   not given, it is scaled with the same factor as the width
width :: IncludeGraphicsOpts -> Maybe LatexLength

-- | specifies the height to which the figure should be scaled to; if width
--   is not given, it is scaled with the same factor as the height
height :: IncludeGraphicsOpts -> Maybe LatexLength

-- | like height but specifies the height plus depth of the figure; should
--   always be used in place of height if the figure has been otated
totalheight :: IncludeGraphicsOpts -> Maybe LatexLength

-- | if both height and width are specified, this flag ensures that the
--   original height/width ratio remains unchanged; the figure will not
--   exceed either of the given dimensions
keepaspectratio :: IncludeGraphicsOpts -> Bool

-- | the angle by which the figure is to be rotated counterclockwise, in
--   degrees; any height or width specifications coming before this key are
--   also rotated, so that the height becomes the width, while the width
--   becomes either the height (positive angle) or depth (negative angle)
angle :: IncludeGraphicsOpts -> Rational

-- | determines the point about which the rotation occurs; default is bl
--   for bottom left corner; also possible are c for center, t for top, r
--   for right, and B for baseline; any sensible combination, such as tr,
--   is allowed
origin :: IncludeGraphicsOpts -> Loc

-- | like the draft package option but applied to the one graphics file;
--   the figure is not imported, but rather a framed box of the correct
--   size is printed containing the name of the file
draft :: IncludeGraphicsOpts -> Bool

-- | suppresses the printing of any graphic outside the bounding box
clip :: IncludeGraphicsOpts -> Bool

-- | ((llx, lly) (urx, ury)); enters the coordinates of the bounding box
--   manually, if they are missing or incorrect in the graphics file, or to
--   be deliberately altered; the specifications are four lengths separated
--   by blanks; units may be given, but if omitted, big points (bp) are
--   assumed
bb :: IncludeGraphicsOpts -> Maybe (Coord, Coord)

-- | ((llx, lly), (urx, ury)); specifies the bounding box but relative to
--   the lower left corner of the existing one; useful for correcting the
--   bounding box, or (with clip) to select only a portion of the whole
--   figure
viewport :: IncludeGraphicsOpts -> Maybe (Coord, Coord)

-- | ((dllx, dlly), (durx, dury)); reduces the existing bounding box by the
--   amounts specified
trim :: IncludeGraphicsOpts -> Maybe (Coord, Coord)

-- | like the hiresbb package option but applied to the one graphics file;
--   reads bounding box information from the %%HiResBoundingBox line in the
--   graphics file.
hiresbb :: IncludeGraphicsOpts -> Bool
data Loc
c, baselineRight, baselineLeft, bottomRight, br, bottomLeft, bl, topLeft, tl, topRight, tr, baseline, ba, bottom, b, right, r, left, l, top, t, center :: Loc
pkg :: PackageName
instance Eq Loc

module Language.LaTeX.Slicer
marknote :: ParItm
mark :: ParItemW
marker :: Writer ParItem a -> Writer ParItem a
(^$) :: (b -> Writer ParItem a) -> b -> Writer ParItem a
slice :: Functor f => f ParItm -> f ParItm

module Language.LaTeX.Builder
(!$) :: Monoid b => (a -> b) -> a -> Writer b ()
(!$?) :: Monoid b => (a -> b) -> Writer a () -> Writer b ()
($?) :: (a -> b) -> Writer a () -> b
class HaveC a
c :: HaveC a => a
class HaveL a
l :: HaveL a => a
class HaveR a
r :: HaveR a => a
newtype Spaces
Spaces :: Int -> Spaces
countSpaces :: Spaces -> Int
decl :: TexDecl -> LatexItem -> LatexItem
decls :: [TexDecl] -> LatexItem -> LatexItem
parDecls :: [TexDecl] -> ParItem
parDecl :: TexDecl -> ParItem
_AA :: LatexItem
_AE :: LatexItem
_H :: LatexItem -> LatexItem
tiny, normalfont, ttfamily, sffamily, rmfamily, upshape, scshape, slshape, itshape, bfseries, mdseries, _Huge, huge, _Large, _LARGE, large, normalsize, small, footnotesize, scriptsize :: TexDecl
_L :: LatexItem

-- | The LaTeX logo.
_LaTeX :: LatexItem
_O :: LatexItem
_OE :: LatexItem

-- | Paragraph sign (pilcrow).
_P :: LatexItem

-- | Section symbol.
_S :: LatexItem

-- | The TeX logo.
_TeX :: LatexItem
_l :: LatexItem
type XChar = Char -> LatexItem
a4paper :: LatexPaperSize
aa :: LatexItem
acute :: LatexItem -> LatexItem
addvspace :: LatexLength -> ParItem
ae :: LatexItem
allTexDecls :: [TexDecl]
appendix :: ParItem
article :: Maybe LatexLength -> Maybe LatexPaperSize -> [AnyItem] -> DocumentClass
author, institute, date, subtitle, title :: LatexItem -> PreambleItem
authors :: [LatexItem] -> PreambleItem
bf :: TexDecl
bigskip :: ParItem
bibliography :: LatexItem -> ParItem
bibliographystyle :: LatexItem -> ParItem
book :: Maybe LatexLength -> Maybe LatexPaperSize -> [AnyItem] -> DocumentClass
titlepage, verse, quotation, boxedminipage, center, flushleft :: ParItem -> ParItem
caption :: LatexItem -> LatexItem
caption' :: String -> LatexItem -> LatexItem

-- | Add a cedila to a letter (c{...} in LaTeX)
cedil :: LatexItem -> LatexItem
cell :: a -> Row a
cells :: [a] -> Row a
part, subparagraph, paragraph, subsubsection, subsection, section, chapter :: LatexItem -> ParItem
part', subparagraph', paragraph', subsubsection', subsection', section', chapter' :: Star -> Maybe LatexItem -> LatexItem -> ParItem
check :: LatexItem -> LatexItem
circ :: LatexItem -> LatexItem
cite :: [Key] -> LatexItem
cite' :: LatexItem -> [Key] -> LatexItem
cleardoublepage :: ParItem
clearpage :: ParItem
cline :: Int -> Int -> Row a
comment :: String -> LatexItem
compressSpaces :: String -> [Either Char Spaces]

-- | The copyright symbol, Â©.
copyright :: LatexItem
corrspace :: LatexItem

-- | The dagger symbol (in text).
dag :: LatexItem
dash1, nbsp, dash3, dash2 :: LatexItem

-- | The double dagger symbol (in text).
ddag :: LatexItem
description :: Maybe LatexItem -> [ListItem] -> ParItem
displaymath :: MathItem -> ParItem
document :: DocumentClass -> PreambleItem -> ParItem -> LatexM Document
documentclass :: DocumentClassKind -> [AnyItem] -> DocumentClass
dot :: LatexItem -> LatexItem
dotfill :: LatexItem

-- | Double quote a LaTeX item.
dquote :: LatexItem -> LatexItem
em :: TexDecl
emph, textsubscript, textsuperscript, textnormal, textsc, textsl, textit, textup, textbf, textmd, texttt, textsf, textrm :: LatexItem -> LatexItem
enumerate :: Maybe LatexItem -> [ListItem] -> ParItem
fbox :: LatexItem -> LatexItem
figure, table :: Star -> [LocSpec] -> ParItem -> ParItem
footnote :: LatexItem -> LatexItem
framebox :: LatexLength -> Pos -> LatexItem -> LatexItem
sloppy, fussy :: TexDecl
grave :: LatexItem -> LatexItem
group :: LatexItem -> LatexItem
hat :: LatexItem -> LatexItem
hchar :: XChar
hfill :: LatexItem
hline :: Row a
hr :: LatexItem
href :: LatexItem -> LatexItem -> LatexItem
hrulefill :: LatexItem
space :: LatexItem
hspace :: LatexLength -> LatexItem
hspace' :: Star -> LatexLength -> LatexItem
hspaces :: Spaces -> LatexItem
hstring :: String -> LatexItem
hyphen :: LatexItem
hyphenation :: [String] -> PreambleItem
hyphenationPar :: [String] -> ParItem
i :: LatexItem
it :: TexDecl
item :: ParItem -> ListItem
item' :: LatexItem -> ParItem -> ListItem
itemize :: Maybe LatexItem -> [ListItem] -> ParItem
j :: LatexItem
label :: Key -> LatexItem

-- | An ellipsis (three dots at the baseline): <tt>...</tt>. This command
--   also works in math mode.
ldots :: LatexItem
letter :: [AnyItem] -> DocumentClass
linebreak :: Maybe Int -> TexDecl
linebr :: Star -> Maybe LatexLength -> LatexItem

-- | Left (opening) quote: `.
lq :: LatexItem

-- | Left (opening) double quotes: ``.
ldq :: LatexItem
makebox :: LatexLength -> Pos -> LatexItem -> LatexItem
maketitle :: ParItem
math :: MathItem -> LatexItem
mbox :: LatexItem -> LatexItem
medskip :: ParItem
minipage :: VPos -> LatexLength -> ParItem -> LatexItem
negthinspace :: LatexItem
newline :: Maybe LatexLength -> ParItem
rawNewline :: Maybe LatexLength -> LatexItem
newpage :: ParItem
nocite :: [Key] -> LatexItem
noindent :: LatexItem
nolinebreak :: Maybe Int -> TexDecl
nopagebreak :: Maybe Int -> TexDecl
normalmarginpar :: TexDecl
num :: Real a => a -> AnyItem
o :: LatexItem
oe :: LatexItem
overbar :: LatexItem -> LatexItem
overdot :: LatexItem -> LatexItem
pagebreak :: Maybe Int -> TexDecl
pageref :: Key -> LatexItem
pagestyle :: LatexItem -> ParItem

-- | Don't confuse <a>paragraph</a> with <a>para</a>, <a>para</a> is to
--   make a paragraph, <a>paragraph</a> is to name a set of paragraphs.
para :: LatexItem -> ParItem
parbox :: VPos -> LatexLength -> LatexItem -> LatexItem
person :: String -> String -> LatexItem
phantom :: LatexItem -> LatexItem

-- | English pounds sterling.
pounds :: LatexItem
protect :: String -> LatexItem
protector :: XChar -> String -> LatexItem
quote :: LatexItem -> ParItem
raisebox :: LatexLength -> LatexItem -> LatexItem
raisebox' :: LatexLength -> LatexLength -> LatexLength -> LatexItem -> LatexItem
rat :: Rational -> AnyItem
ref :: Key -> LatexItem
report :: [AnyItem] -> DocumentClass
reversemarginpar :: TexDecl
ring :: LatexItem -> LatexItem
rm :: TexDecl

-- | Right (closing) quote: '.
rq :: LatexItem

-- | Right (opening) double quotes: ''.
rdq :: LatexItem
rtext :: a -> RowSpec a
rule :: LatexLength -> LatexLength -> LatexItem
rule' :: LatexLength -> LatexLength -> LatexLength -> LatexItem
samepage :: TexDecl
savebox :: SaveBin -> Maybe LatexLength -> Maybe (Either () ()) -> LatexItem -> LatexItem
sbox :: SaveBin -> LatexItem -> LatexItem
sc :: TexDecl

-- | <a>sep</a> is like '{}' in LaTeX, it allows to force letters to be
--   treaten separately, for instance to separate the two <tt>f</tt>s in
--   shelfful.
sep :: LatexItem
setlength :: LatexLength -> LatexLength -> ParItem
addtolength :: LatexLength -> LatexLength -> ParItem
settowidth :: LatexLength -> LatexItem -> ParItem
sf :: TexDecl
sl :: TexDecl
sloppypar :: ParItem -> ParItem
smallskip :: ParItem
spaceProtector :: XChar -> String -> LatexItem
ss :: LatexItem
tableofcontents :: ParItem
tabular :: [RowSpec LatexItem] -> [Row LatexItem] -> ParItem
textdegree :: LatexItem
textunderscore :: LatexItem
thinspace :: LatexItem
thispagestyle :: LatexItem -> ParItem
tieafter :: LatexItem -> LatexItem
tilde :: LatexItem -> LatexItem
tt :: TexDecl
ttchar :: XChar
uml :: LatexItem -> LatexItem
underbar :: LatexItem -> LatexItem
unwords :: [LatexItem] -> LatexItem
usebox :: SaveBin -> LatexItem
verb :: String -> LatexItem
vfill :: ParItem
vline :: RowSpec a
vphantom :: LatexItem -> LatexItem
vspace :: LatexLength -> ParItem
vspace' :: Star -> LatexLength -> ParItem
(â) :: Star
vbox :: ParItem -> LatexItem
vtop :: ParItem -> LatexItem
hbox :: LatexItem -> LatexItem
here, page :: LocSpec
top :: HaveTop a => a
bot :: HaveBot a => a
bottom :: HaveBot a => a
normal :: HaveNormal a => a
centered, stretch, flushRight, flushLeft :: Pos
utf8 :: Encoding
latin1 :: Encoding
inputenc :: Encoding -> PreambleItem
fromEncoding :: Encoding -> String
instance HaveNormal VPos
instance HaveBot VPos
instance HaveBot LocSpec
instance HaveTop VPos
instance HaveTop LocSpec
instance HaveR (RowSpec a)
instance HaveL (RowSpec a)
instance HaveC (RowSpec a)

module Language.LaTeX.Builder.Math
amsmath :: PackageName
charToMath :: Char -> Maybe MathItem
stringToMath :: String -> MathItem
mchar :: XChar -> XChar
mstring :: String -> LatexItem
mathlift :: (LatexItem -> LatexItem) -> MathItem -> MathItem
protect :: String -> LatexItem
protector :: XChar -> String -> LatexItem
verb :: String -> LatexItem
_Delta :: MathItem
_Gamma :: MathItem
_Lambda :: MathItem
_Leftarrow :: MathItem
_Leftrightarrow :: MathItem
_Omega :: MathItem
_Phi :: MathItem
_Pi :: MathItem
_Pr :: MathItem
_Rightarrow :: MathItem
_Sigma :: MathItem
_Theta :: MathItem
_Xi :: MathItem
acute :: MathItem -> MathItem
aleph :: MathItem
alpha :: MathItem
approx :: MathItem
array :: [RowSpec MathItem] -> [Row MathItem] -> MathItem
at :: MathItem
backslash :: MathItem
bar :: MathItem -> MathItem
beta :: MathItem
between :: Char -> Char -> MathItem -> MathItem
bigcap :: MathItem
bigcup :: MathItem
bigvee :: MathItem
bigwedge :: MathItem
bmod :: MathItem -> MathItem -> MathItem
bot :: MathItem
parens, brackets, braces :: MathItem -> MathItem
breve :: MathItem -> MathItem
bullet :: MathItem
cal :: MathDecl
cap :: MathItem
cdots :: MathItem
cdotp :: MathItem
check :: MathItem -> MathItem
chi :: MathItem
circ :: MathItem
cong :: MathItem
cos :: MathItem
cosh :: MathItem
cot :: MathItem
csc :: MathItem
cup :: MathItem
ddot :: MathItem -> MathItem
ddots :: MathItem
delta :: MathItem
det :: MathItem
diamond :: MathItem
dim :: MathItem
displaystyle :: MathDecl
div :: MathItem
divide :: MathItem
dot :: MathItem -> MathItem
downarrow :: MathItem
emptyset :: MathItem
epsilon :: MathItem
eq :: MathItem
neq :: MathItem
equiv :: MathItem
eta :: MathItem
exists :: MathItem
forall_ :: MathItem
frac, stackrel :: MathItem -> MathItem -> MathItem
gamma :: MathItem
gcd :: MathItem
ge :: MathItem
geq :: MathItem
grave :: MathItem -> MathItem
group :: MathItem -> MathItem
hat :: MathItem -> MathItem
iff :: MathItem
imath :: MathItem -> MathItem
implies :: MathItem
in_ :: MathItem
inf :: MathItem
infty :: MathItem
int :: MathItem
iota :: MathItem
jmath :: MathItem -> MathItem
kappa :: MathItem
lambda :: MathItem
langle :: MathItem
lbrace :: MathItem
lceil :: MathItem
lcm :: MathItem
ldots :: MathItem
ldotp :: MathItem
le :: MathItem
leftarrow :: MathItem
leftrightarrow :: MathItem
leq :: MathItem
lfloor :: MathItem
lim :: MathItem
liminf :: MathItem
limsup :: MathItem
ln :: MathItem
log :: MathItem
lparen :: MathItem
mathBinOp :: String -> MathItem -> MathItem -> MathItem
longleftarrow :: MathItem
longrightarrow :: MathItem
longleftrightarrow :: MathItem
mathBinOps :: [MathItem -> MathItem -> MathItem]
mathCmd :: String -> MathItem
mathCmdArg :: String -> AnyItem -> MathItem
mathCmdArgs :: String -> [Arg AnyItem] -> MathItem
mathCmdMathArg :: String -> MathItem -> MathItem
mathCmdMathArgs :: String -> [Arg MathItem] -> MathItem
mathCmdsArg :: [MathItem -> MathItem]
mathDecl :: String -> MathDecl

-- | Same as <a>group</a>
mathGroup :: MathItem -> MathItem
allMathItems :: [MathItem]
allMathDecls :: [MathDecl]
rawDecls :: [MathDecl] -> MathItem
decl :: MathDecl -> MathItem -> MathItem
decls :: [MathDecl] -> MathItem -> MathItem
mathnormal, mathscr, mathfrak, mathcal, mathbb, mathtt, mathsf, mathbf, mathit, mathrm :: MathItem -> MathItem
max :: MathItem
mbox :: LatexItem -> MathItem
min :: MathItem
mit :: MathDecl
mleft, mright :: Char -> MathItem
mediumspace :: MathItem
negthinspace :: MathItem
mod :: MathItem
models :: MathItem
mrat :: Rational -> MathItem
msup :: MathItem
thickspace :: MathItem
thinspace :: MathItem
mu :: MathItem
nabla :: MathItem
ne :: MathItem
neg :: MathItem
notin :: MathItem
nu :: MathItem
oint :: MathItem
omega :: MathItem

-- | In LaTeX math mode omicron is just <a>o</a>, it is exported as omicron
--   here as well just for convinience.
omicron :: MathItem
oplus :: MathItem
otimes :: MathItem
overbrace :: MathItem -> MathItem
overline :: MathItem -> MathItem
parenChar :: Char -> LatexM String
partial :: MathItem
phi :: MathItem
pi :: MathItem
pm :: MathItem
pmod :: MathItem -> MathItem
prec :: MathItem
prod :: MathItem
propto :: MathItem
psi :: MathItem
quad :: MathItem
rangle :: MathItem
rbrace :: MathItem
rceil :: MathItem
rfloor :: MathItem
rho :: MathItem
rightarrow :: MathItem
rparen :: MathItem
scriptscriptstyle :: MathDecl
scriptstyle :: MathDecl
sec :: MathItem
sigma :: MathItem
sin :: MathItem
sinh :: MathItem
space :: MathItem
sqrt :: MathItem -> MathItem
sqrt' :: MathItem -> MathItem -> MathItem
square :: MathItem
sub, sup :: MathItem -> MathItem
subset :: MathItem
subseteq :: MathItem
succ :: MathItem
sum :: MathItem
supset :: MathItem
supseteq :: MathItem
tan :: MathItem
tanh :: MathItem
tau :: MathItem
text :: LatexItem -> MathItem
textstyle :: MathDecl
theta :: MathItem
tilde :: MathItem -> MathItem
times :: MathItem
to :: MathItem
top :: MathItem
underbrace :: MathItem -> MathItem
underline :: MathItem -> MathItem
uparrow :: MathItem
upsilon :: MathItem
varepsilon :: MathItem
varphi :: MathItem
vartheta :: MathItem
vdash :: MathItem
vdots :: MathItem
vec :: MathItem -> MathItem
vee :: MathItem
wedge :: MathItem
widehat :: MathItem -> MathItem
widetilde :: MathItem -> MathItem
xi :: MathItem
zeta :: MathItem
a :: MathItem
b :: MathItem
c :: MathItem
d :: MathItem
e :: MathItem
f :: MathItem
g :: MathItem
h :: MathItem
i :: MathItem
j :: MathItem
k :: MathItem
l :: MathItem
m :: MathItem
n :: MathItem
o :: MathItem
p :: MathItem
q :: MathItem
r :: MathItem
s :: MathItem
t :: MathItem
u :: MathItem
v :: MathItem
w :: MathItem
x :: MathItem
y :: MathItem
z :: MathItem
_A :: MathItem
_B :: MathItem
_C :: MathItem
_D :: MathItem
_E :: MathItem
_F :: MathItem
_G :: MathItem
_H :: MathItem
_I :: MathItem
_J :: MathItem
_K :: MathItem
_L :: MathItem
_M :: MathItem
_N :: MathItem
_O :: MathItem
_P :: MathItem
_Q :: MathItem
_R :: MathItem
_S :: MathItem
_T :: MathItem
_U :: MathItem
_V :: MathItem
_W :: MathItem
_X :: MathItem
_Y :: MathItem
_Z :: MathItem
_Downarrow :: MathItem
_Uparrow :: MathItem
vartriangleright :: MathItem
phantom :: MathItem -> MathItem
cells :: [a] -> Row a
cell :: a -> Row a
vline :: RowSpec a
hline :: Row a
cline :: Int -> Int -> Row a
instance IsString MathItem

module Language.LaTeX.Builder.QQ
frQQ, keysFile, keys, qpFile, qp, qmFile, qm, texFile, tex, istr, strFile, str, frQQFile :: QuasiQuoter

-- | Quasiquoter for raw TeX in math mode
texm, texmFile :: QuasiQuoter
mkQQ :: String -> Name -> QuasiQuoter
mkQQnoIndent :: String -> Name -> QuasiQuoter
mkQQgen :: (String -> Q Exp) -> String -> Name -> QuasiQuoter
mkQQFile :: (String -> Q Exp) -> String -> Name -> (QuasiQuoter, QuasiQuoter)
indent, noIndent :: String -> Q Exp
stripIndentQQ :: String -> Q String
frTop :: a -> a
frAntiq :: a -> a

module Language.LaTeX.Builder.Beamer
data DocClassOption
Compress :: DocClassOption
T :: DocClassOption
Red :: DocClassOption
Handout :: DocClassOption
RawDocClassOption :: String -> DocClassOption
compress, handout, red, t :: DocClassOption
rawDocClassOption :: String -> DocClassOption
showDocClassOption :: DocClassOption -> String
documentclasskind :: DocumentClassKind
beamer :: Maybe LatexLength -> [DocClassOption] -> [AnyItem] -> DocumentClass
type TargetName = String
type Label = String
labelArg :: Label -> Arg AnyItem
targetArg :: TargetName -> Arg AnyItem
data FrameOpt
Label :: Label -> FrameOpt
Fragile :: FrameOpt
OtherOption :: String -> String -> FrameOpt
data OverlayInt
OvInt :: Int -> OverlayInt
OvPlus :: OverlayInt
OvPlusOffset :: Int -> OverlayInt
OvDot :: OverlayInt

-- | Only overlay actions are not supported currently.
data Overlay
OvSingle :: OverlayInt -> Overlay
OvFromTo :: OverlayInt -> OverlayInt -> Overlay
OvFrom :: OverlayInt -> Overlay
type Overlays = [Overlay]
type BeamerOpt = (String, String)
texFrameOpt :: FrameOpt -> BeamerOpt
texFrameOpts :: [FrameOpt] -> Arg AnyItem
showOvInt :: OverlayInt -> ShowS
showOverlay :: Overlay -> ShowS
showOverlays :: Overlays -> Maybe String
texOverlaysOpt :: Overlays -> Maybe LatexItem
texOverlaysArg :: Overlays -> Arg a
texOverlaysOptArg :: Overlays -> Arg AnyItem
label :: Label -> FrameOpt
frame :: Overlays -> Overlays -> [FrameOpt] -> LatexItem -> LatexItem -> ParItem -> ParItem
frameO :: Overlays -> ParItem -> ParItem
example :: ParItem -> ParItem
theorem :: ParItem -> ParItem
block :: LatexItem -> ParItem -> ParItem
slide :: LatexItem -> ParItem -> ParItem
slideO :: LatexItem -> Overlays -> ParItem -> ParItem
frametitle :: LatexItem -> ParItem
framesubtitle :: LatexItem -> ParItem

-- | All overlays counting from the given argument (like in
--   <tt><a>1-</a></tt>).
ovFrom :: OverlayInt -> Overlay

-- | All overlays between the given arguments (like in
--   <tt><a>1-3</a></tt>).
ovFromTo :: OverlayInt -> OverlayInt -> Overlay

-- | The single overlay (like in <tt><a>1</a></tt>).
ovSingle :: OverlayInt -> Overlay

-- | Lift a strictly positive <a>Int</a> to an <a>OverlayInt</a>
ovInt :: Int -> OverlayInt

-- | The <a>+</a> incremental overlay specification (like in
--   <tt><a>+-</a></tt>).
--   
--   Beamer User Guide at 8.6.4 Incremental Specifications
ovPlus :: OverlayInt

-- | The <a>.</a> incremental overlay specification (like in
--   <tt><a>.-</a></tt>).
--   
--   Beamer User Guide at 8.6.4 Incremental Specifications
ovDot :: OverlayInt

-- | Handy shortcut for <tt>[ovFrom ovPlus]</tt> aka <tt><a>+-</a></tt>.
ovIncr :: Overlays

-- | Handy lifting for a list of strictly positive integers.
ovInts :: [Int] -> Overlays
alert :: LatexItem -> LatexItem
itemize :: Overlays -> [ListItem] -> ParItem
enumerate :: Overlays -> [ListItem] -> ParItem
description :: Overlays -> [ListItem] -> ParItem
pause :: LatexItem
pause' :: Maybe Int -> LatexItem
only :: Overlays -> LatexItem -> LatexItem
uncover :: Overlays -> LatexItem -> LatexItem
visible :: Overlays -> LatexItem -> LatexItem
invisible :: Overlays -> LatexItem -> LatexItem
alt :: Overlays -> LatexItem -> LatexItem -> LatexItem
temporal :: Overlays -> LatexItem -> LatexItem -> LatexItem -> LatexItem
visibleenv :: Overlays -> ParItem -> ParItem
invisibleenv :: Overlays -> ParItem -> ParItem
uncoverenv :: Overlays -> ParItem -> ParItem
onlyenv :: Overlays -> ParItem -> ParItem
altenv :: Overlays -> LatexItem -> LatexItem -> LatexItem -> LatexItem -> ParItem -> ParItem
beamerOpts :: [BeamerOpt] -> Arg AnyItem
beamerPreambleCmdArgs :: String -> [BeamerOpt] -> LatexItem -> PreambleItem
usetheme, usecolortheme, useoutertheme, useinnertheme, usefonttheme :: [BeamerOpt] -> LatexItem -> PreambleItem

-- | Draws a button with the given button text .
--   
--   Example: <tt>hyperlink [] <a>somewhere</a> (beamerbutton <a>Go
--   somewhere</a>)</tt>
--   
--   p97 beamer userguide
beamerbutton :: LatexItem -> LatexItem

-- | Draws a button with the given button text. Before the text, a small
--   symbol (usually a right-pointing arrow) is inserted that indicates
--   that pressing this button will jump to another *area* of the
--   presentation.
--   
--   Example: <tt>hyperlink [] <a>detour</a> (beamergotobutton <a>Go to
--   detour</a>)</tt>
--   
--   p98 beamer userguide
beamergotobutton :: LatexItem -> LatexItem

-- | The symbol drawn for this button is usually a double right arrow. Use
--   this button if pressing it will skip over a well-defined part of your
--   talk.
--   
--   p98 beamer userguide
beamerskipbutton :: LatexItem -> LatexItem

-- | The symbol drawn for this button is usually a left-pointing arrow. Use
--   this button if pressing it will return from a detour.
--   
--   p98 beamer userguide
beamerreturnbutton :: LatexItem -> LatexItem

-- | Only one overlay specification may be given. The link text is typeset
--   in the usual way. If you click anywhere on this text, you will jump to
--   the slide on which the hypertarget command was used with the parameter
--   target name . If an overlay specification is present, the hyperlink
--   (including the link text) is completely suppressed on the
--   non-specified slides.
--   
--   p99 beamer userguide
hyperlink :: Overlays -> TargetName -> LatexItem -> Overlays -> LatexItem
againframe :: Overlays -> Overlays -> [FrameOpt] -> Label -> ParItem

-- | Disable those litte icons at the bottom right of your presentation.
beamertemplatenavigationsymbolsempty :: PreambleItem
type TexDimension = LatexLength
data BeamerSize

-- | sets a new left margin. This excludes the left sidebar. Thus, it is
--   the distance between the right edge of the left sidebar and the left
--   edge of the text.
TextMarginLeft :: TexDimension -> BeamerSize

-- | sets a new right margin.
TextMarginRight :: TexDimension -> BeamerSize

-- | sets the size of the left sidebar. Currently, this command should be
--   given before a shading is installed for the sidebar canvas.
SidebarWidthLeft :: TexDimension -> BeamerSize

-- | sets the size of the right sidebar.
SidebarWidthRight :: TexDimension -> BeamerSize

-- | sets the default width of description labels, see Beamer User Guide
--   Section 11.1.
DescriptionWidth :: TexDimension -> BeamerSize

-- | sets the default width of description labels to the width of the text,
--   see Section 11.1.
DescriptionWidthOf :: LatexItem -> BeamerSize

-- | sets the size of mini frames in a navigation bar. When two mini frame
--   icons are shown alongside each other, their left end points are
--   <a>TexDimension</a> far apart.
MiniFrameSize :: TexDimension -> BeamerSize

-- | set an additional vertical offset that is added to the mini frame size
--   when arranging mini frames vertically.
MiniFrameOffset :: TexDimension -> BeamerSize
texBeamerSizeArg :: BeamerSize -> Arg AnyItem
setbeamersize :: BeamerSize -> PreambleItem
appendix :: ParItem
data Footline
Footline :: Percentage -> Percentage -> Maybe Percentage -> Bool -> Footline
authorPercent :: Footline -> Percentage
titlePercent :: Footline -> Percentage
datePercent :: Footline -> Maybe Percentage
showTotalFrames :: Footline -> Bool
defaultFootline :: Footline
footline :: Footline -> PreambleItem
instance Eq FrameOpt
instance Ord FrameOpt
instance Eq OverlayInt
instance Ord OverlayInt
instance Eq Overlay
instance Ord Overlay

module Language.LaTeX.Unicode
class Greek a
Î± :: Greek a => a
Î² :: Greek a => a
Ï :: Greek a => a
Î´ :: Greek a => a
_Î :: Greek a => a
Îµ :: Greek a => a
Î· :: Greek a => a
Î³ :: Greek a => a
_Î :: Greek a => a
Î¹ :: Greek a => a
Îº :: Greek a => a
Î» :: Greek a => a
_Î :: Greek a => a
Î¼ :: Greek a => a
Î½ :: Greek a => a
Ï :: Greek a => a
_Î© :: Greek a => a
Î¿ :: Greek a => a
Ï :: Greek a => a
_Î¦ :: Greek a => a
Ï :: Greek a => a
_Î  :: Greek a => a
Ï :: Greek a => a
Ï :: Greek a => a
Ï :: Greek a => a
_Î£ :: Greek a => a
Ï :: Greek a => a
Î¸ :: Greek a => a
_Î :: Greek a => a
Î¾ :: Greek a => a
Î¶ :: Greek a => a
instance Greek (LatexM LatexItm)
instance Greek MathItem

module Language.LaTeX
data Document
type LineNumber = Int
type CharNumber = Int
data Loc
data Note
data Named a
data DocumentClassKind
data DocumentClss
data Star
data Coord
data Percentage
data TexUnit
data LatexLength
data RowSpec a
data LocSpec
data Pos
data LatexPaperSize
data Row cell
data PackageName
data Key
data SaveBin
data LatexState
type TexDecl = LatexM TexDcl
type LatexItem = LatexM LatexItm
type ParItem = LatexM ParItm
type MathDecl = LatexM MathDcl
data AnyItem
data MathItem
type ListItem = LatexM ListItm
type PreambleItem = LatexM PreambleItm
type DocumentClass = LatexM DocumentClss
data LatexM a

-- | Type for encodings used in commands like.
--   <tt>usepackage[utf8]{inputenc}</tt>, that we can express as
--   <tt>useInputenc</tt> <tt>utf8</tt>.
data Encoding
data Arg a
data MathDcl
data AnyItm
data PreambleItm
data TexDcl
data LatexItm
data ParItm
data MathItm
data ListItm
type TexDeclW = Writer TexDecl ()
type LatexItemW = Writer LatexItem ()
type ParItemW = Writer ParItem ()
type MathDeclW = Writer MathDecl ()
type MathItemW = Writer MathItem ()
type PreambleItemW = Writer PreambleItem ()
(!$) :: Monoid b => (a -> b) -> a -> Writer b ()
($?) :: (a -> b) -> Writer a () -> b
(!$?) :: Monoid b => (a -> b) -> Writer a () -> Writer b ()

-- | <tt><a>tell</a> w</tt> is an action that produces the output
--   <tt>w</tt>.
tell :: MonadWriter w m => w -> m ()

-- | A writer monad parameterized by the type <tt>w</tt> of output to
--   accumulate.
--   
--   The <a>return</a> function produces the output <a>mempty</a>, while
--   <tt>&gt;&gt;=</tt> combines the outputs of the subcomputations using
--   <a>mappend</a>.
type Writer w = WriterT w Identity
(â) :: Star

-- | The class of monoids (types with an associative binary operation that
--   has an identity). Instances should satisfy the following laws:
--   
--   <ul>
--   <li><pre>mappend mempty x = x</pre></li>
--   <li><pre>mappend x mempty = x</pre></li>
--   <li><pre>mappend x (mappend y z) = mappend (mappend x y) z</pre></li>
--   <li><pre>mconcat = <a>foldr</a> mappend mempty</pre></li>
--   </ul>
--   
--   The method names refer to the monoid of lists under concatenation, but
--   there are many other instances.
--   
--   Minimal complete definition: <a>mempty</a> and <a>mappend</a>.
--   
--   Some types can be viewed as a monoid in more than one way, e.g. both
--   addition and multiplication on numbers. In such cases we often define
--   <tt>newtype</tt>s and make those instances of <a>Monoid</a>, e.g.
--   <a>Sum</a> and <a>Product</a>.
class Monoid a
mempty :: Monoid a => a
mappend :: Monoid a => a -> a -> a
mconcat :: Monoid a => [a] -> a
printLatexDocument :: LatexM Document -> IO ()
data ViewOpts
ViewOpts :: FilePath -> String -> String -> [FilePath] -> Bool -> ViewOpts
basedir :: ViewOpts -> FilePath
pdflatex :: ViewOpts -> String
pdfviewer :: ViewOpts -> String
inputdirs :: ViewOpts -> [FilePath]
showoutput :: ViewOpts -> Bool
quickView :: ViewOpts -> FilePath -> LatexM Document -> IO ()
myViewOpts, testViewOpts :: ViewOpts
showLaTeX :: LatexM Document -> Either ErrorMessage String
runLatexM :: LatexM a -> Either ErrorMessage a
