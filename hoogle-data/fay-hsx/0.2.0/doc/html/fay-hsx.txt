-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Clientside HTML generation for fay.
--   
--   This library allows you to write fay code that generates HTML in the
--   browser. It is compatible with the code generated by hsx2hs.
@package fay-hsx
@version 0.2.0


-- | A simple library for client-side HTML generation. Compatible with
--   hsx2hs.
module HTML
fromStringLit :: String -> String
data Attr a b
(:=) :: a -> b -> Attr a b

-- | type class for embedding values as HTML children
--   
--   since Fay does not yet support type-class methods we have to fake it
--   via the ffi
class AsChild a
asChild :: AsChild a => a -> Fay HTML
class AsAttr a
asAttr :: (Attr String String) -> Fay (String, String)

-- | ADT for <a>HTML</a>
data HTML

-- | Element name attributes children
Element :: String -> [(String, String)] -> [HTML] -> HTML

-- | CDATA needEscaping value
CDATA :: Bool -> String -> HTML

-- | generate an HTML element
genElement :: (Maybe String, String) -> [Fay (String, String)] -> [Fay HTML] -> Fay HTML

-- | render the <a>HTML</a> into a JQuery DOM tree. You still need to
--   append the result somewhere.
--   
--   NOTE: This function requires <tt>jQuery</tt>
renderHTML :: HTML -> Fay JQuery

-- | Alert using window.alert.
alert :: String -> Fay ()

-- | &lt;tr&gt;
tr :: [Fay (String, String)] -> [Fay HTML] -> Fay HTML

-- | &lt;td&gt;
td :: [Fay (String, String)] -> [Fay HTML] -> Fay HTML

-- | &lt;span&gt;
span_ :: [Fay (String, String)] -> [Fay HTML] -> Fay HTML

-- | create a text node from the <a>String</a>. The <a>String</a> will be
--   automatically escaped.
pcdata :: String -> Fay HTML

-- | create a new <a>Element</a>
createElement :: String -> Fay Element

-- | create a new text node
--   
--   NOTE: this doesn't really return an Element. It returns a TextNode or
--   something. But fay-jquery only supports the Element type...
createTextNode :: String -> Fay Element
instance AsAttr (Attr String String)
instance AsChild (Fay HTML)
instance AsChild [Char]
