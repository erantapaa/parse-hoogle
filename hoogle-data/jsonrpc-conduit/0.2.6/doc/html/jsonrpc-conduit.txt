-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | JSON-RPC 2.0 server over a Conduit.
--   
@package jsonrpc-conduit
@version 0.2.6


-- | JSON-RPC methods.
module Data.Conduit.JsonRpc.Methods

-- | A wrapper over a monadic function that can either succeed or fail with
--   a <a>MethodError</a>.
--   
--   Hides the input and output types.
data Method m
Method :: (i -> m (Either MethodError o)) -> Method m

-- | Represents an error with an integer code and a textual message.
data MethodError
MethodError :: !Int -> !Text -> MethodError

-- | A <a>Method</a> with a name.
data NamedMethod m

-- | Builds a <a>NamedMethod</a> given its name and function.
--   
--   Useful in conjuction with <a>fromList</a>.
method :: (FromJSON i, ToJSON o) => Text -> (i -> m (Either MethodError o)) -> NamedMethod m

-- | Collection of <a>NamedMethod</a>s.
data Methods m

-- | Builds a collection from a list of <a>NamedMethod</a>s.
fromList :: [NamedMethod m] -> Methods m

-- | Looks up the method corresponding to the given name.
lookup :: Methods m -> Text -> Maybe (Method m)
instance Eq MethodError
instance Show MethodError


-- | JSON-RPC 2.0 server <a>Conduit</a>.
module Data.Conduit.JsonRpc.Server

-- | A <a>Conduit</a> that consumes a stream of JSON-RPC requests, tries to
--   process them with the provided <a>Methods</a> and writes back the
--   results.
--   
--   Current limitations:
--   
--   <ul>
--   <li>does not support batch requests</li>
--   <li>it is not possible to set the <tt>data</tt> attribute of error
--   objects</li>
--   </ul>
serve :: (Applicative m, Monad m) => Methods m -> Conduit ByteString m ByteString
instance Show a => Show (Response a)
instance ToJSON (Response Value)
instance FromJSON (Request Value)
