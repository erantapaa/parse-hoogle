-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | RDBMSs' schema templates for relational-query
--   
@package relational-schemas
@version 0.1.0.2


module Database.Relational.Schema.MySQLInfo.Config

-- | Configuration parameter against MySQL.
config :: Config

module Database.Relational.Schema.MySQLInfo.Columns
data Columns
Columns :: !String -> !String -> !String -> !Int16 -> !(Maybe String) -> !String -> !String -> Columns
tableSchema :: Columns -> !String
tableName :: Columns -> !String
columnName :: Columns -> !String
ordinalPosition :: Columns -> !Int16
columnDefault :: Columns -> !(Maybe String)
isNullable :: Columns -> !String
dataType :: Columns -> !String
dataType' :: Pi Columns String
isNullable' :: Pi Columns String
columnDefault' :: Pi Columns (Maybe String)
ordinalPosition' :: Pi Columns Int16
columnName' :: Pi Columns String
tableName' :: Pi Columns String
tableSchema' :: Pi Columns String
insertQueryColumns :: Relation p_a6Z7 Columns -> InsertQuery p_a6Z7
insertColumns :: Insert Columns
columns :: Relation () Columns
tableOfColumns :: Table Columns
columnOffsetsColumns :: Array Int Int
instance Show Columns
instance TableDerivable Columns
instance ProductConstructor (String -> String -> String -> Int16 -> Maybe String -> String -> String -> Columns)
instance PersistableWidth Columns

module Database.Relational.Schema.MySQL
normalizeColumn :: String -> String
notNull :: Columns -> Bool
getType :: Map String TypeQ -> Columns -> Maybe (String, TypeQ)
columnsQuerySQL :: Query (String, String) Columns
primaryKeyQuerySQL :: Query (String, String) String


module Database.Relational.Schema.OracleDataDictionary.Config

-- | Configuration parameter against Oracle.
config :: Config

module Database.Relational.Schema.OracleDataDictionary.TabColumns
data DbaTabColumns
DbaTabColumns :: !String -> !String -> !String -> !(Maybe String) -> !(Maybe String) -> !(Maybe String) -> !Int32 -> !(Maybe Int32) -> !(Maybe Int32) -> !(Maybe String) -> !(Maybe Int32) -> !(Maybe Int32) -> !(Maybe String) -> !(Maybe Int32) -> !(Maybe Int32) -> !(Maybe Int32) -> !(Maybe Int32) -> !(Maybe Int32) -> !(Maybe String) -> !(Maybe Int32) -> !(Maybe String) -> !(Maybe String) -> !(Maybe Int32) -> !(Maybe Int32) -> !(Maybe String) -> !(Maybe String) -> !(Maybe String) -> !(Maybe String) -> DbaTabColumns
owner :: DbaTabColumns -> !String
tableName :: DbaTabColumns -> !String
columnName :: DbaTabColumns -> !String
dataType :: DbaTabColumns -> !(Maybe String)
dataTypeMod :: DbaTabColumns -> !(Maybe String)
dataTypeOwner :: DbaTabColumns -> !(Maybe String)
dataLength :: DbaTabColumns -> !Int32
dataPrecision :: DbaTabColumns -> !(Maybe Int32)
dataScale :: DbaTabColumns -> !(Maybe Int32)
nullable :: DbaTabColumns -> !(Maybe String)
columnId :: DbaTabColumns -> !(Maybe Int32)
defaultLength :: DbaTabColumns -> !(Maybe Int32)
dataDefault :: DbaTabColumns -> !(Maybe String)
numDistinct :: DbaTabColumns -> !(Maybe Int32)
density :: DbaTabColumns -> !(Maybe Int32)
numNulls :: DbaTabColumns -> !(Maybe Int32)
numBuckets :: DbaTabColumns -> !(Maybe Int32)
sampleSize :: DbaTabColumns -> !(Maybe Int32)
characterSetName :: DbaTabColumns -> !(Maybe String)
charColDeclLength :: DbaTabColumns -> !(Maybe Int32)
globalStats :: DbaTabColumns -> !(Maybe String)
userStats :: DbaTabColumns -> !(Maybe String)
avgColLen :: DbaTabColumns -> !(Maybe Int32)
charLength :: DbaTabColumns -> !(Maybe Int32)
charUsed :: DbaTabColumns -> !(Maybe String)
v80FmtImage :: DbaTabColumns -> !(Maybe String)
dataUpgraded :: DbaTabColumns -> !(Maybe String)
histogram :: DbaTabColumns -> !(Maybe String)
histogram' :: Pi DbaTabColumns (Maybe String)
dataUpgraded' :: Pi DbaTabColumns (Maybe String)
v80FmtImage' :: Pi DbaTabColumns (Maybe String)
charUsed' :: Pi DbaTabColumns (Maybe String)
charLength' :: Pi DbaTabColumns (Maybe Int32)
avgColLen' :: Pi DbaTabColumns (Maybe Int32)
userStats' :: Pi DbaTabColumns (Maybe String)
globalStats' :: Pi DbaTabColumns (Maybe String)
charColDeclLength' :: Pi DbaTabColumns (Maybe Int32)
characterSetName' :: Pi DbaTabColumns (Maybe String)
sampleSize' :: Pi DbaTabColumns (Maybe Int32)
numBuckets' :: Pi DbaTabColumns (Maybe Int32)
numNulls' :: Pi DbaTabColumns (Maybe Int32)
density' :: Pi DbaTabColumns (Maybe Int32)
numDistinct' :: Pi DbaTabColumns (Maybe Int32)
dataDefault' :: Pi DbaTabColumns (Maybe String)
defaultLength' :: Pi DbaTabColumns (Maybe Int32)
columnId' :: Pi DbaTabColumns (Maybe Int32)
nullable' :: Pi DbaTabColumns (Maybe String)
dataScale' :: Pi DbaTabColumns (Maybe Int32)
dataPrecision' :: Pi DbaTabColumns (Maybe Int32)
dataLength' :: Pi DbaTabColumns Int32
dataTypeOwner' :: Pi DbaTabColumns (Maybe String)
dataTypeMod' :: Pi DbaTabColumns (Maybe String)
dataType' :: Pi DbaTabColumns (Maybe String)
columnName' :: Pi DbaTabColumns String
tableName' :: Pi DbaTabColumns String
owner' :: Pi DbaTabColumns String
insertQueryDbaTabColumns :: Relation p_aaGB DbaTabColumns -> InsertQuery p_aaGB
insertDbaTabColumns :: Insert DbaTabColumns
dbaTabColumns :: Relation () DbaTabColumns
tableOfDbaTabColumns :: Table DbaTabColumns
columnOffsetsDbaTabColumns :: Array Int Int
instance Show DbaTabColumns
instance TableDerivable DbaTabColumns
instance ProductConstructor (String -> String -> String -> Maybe String -> Maybe String -> Maybe String -> Int32 -> Maybe Int32 -> Maybe Int32 -> Maybe String -> Maybe Int32 -> Maybe Int32 -> Maybe String -> Maybe Int32 -> Maybe Int32 -> Maybe Int32 -> Maybe Int32 -> Maybe Int32 -> Maybe String -> Maybe Int32 -> Maybe String -> Maybe String -> Maybe Int32 -> Maybe Int32 -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> DbaTabColumns)
instance PersistableWidth DbaTabColumns

module Database.Relational.Schema.Oracle

-- | Normalize column name string to query Oracle DB data dictionary.
normalizeColumn :: String -> String

-- | Not-null attribute information of column.
notNull :: DbaTabColumns -> Bool

-- | Get column normalized name and column Haskell type.
getType :: Map String TypeQ -> DbaTabColumns -> Maybe (String, TypeQ)

-- | Phantom typed <a>Query</a> to get <a>DbaTabColumns</a> from owner name
--   and table name.
columnsQuerySQL :: Query (String, String) DbaTabColumns

-- | Phantom typed <a>Query</a> to get primary key name from owner name and
--   table name.
primaryKeyQuerySQL :: Query (String, String) (Maybe String)


module Database.Relational.Schema.SQLite3Syscat.Config

-- | Configuration parameter against SQLite3.
config :: Config

module Database.Relational.Schema.SQLite3Syscat.IndexList
data IndexList
IndexList :: !Int64 -> !String -> !Int64 -> IndexList
seq :: IndexList -> !Int64
name :: IndexList -> !String
unique :: IndexList -> !Int64
unique' :: Pi IndexList Int64
name' :: Pi IndexList String
seq' :: Pi IndexList Int64
insertQueryIndexList :: Relation p_aeju IndexList -> InsertQuery p_aeju
insertIndexList :: Insert IndexList
indexList :: Relation () IndexList
tableOfIndexList :: Table IndexList
columnOffsetsIndexList :: Array Int Int
instance Show IndexList
instance TableDerivable IndexList
instance ProductConstructor (Int64 -> String -> Int64 -> IndexList)
instance PersistableWidth IndexList

module Database.Relational.Schema.SQLite3Syscat.TableInfo
data TableInfo
TableInfo :: !Int64 -> !String -> !String -> !Int16 -> !(Maybe String) -> !Int16 -> TableInfo
cid :: TableInfo -> !Int64
name :: TableInfo -> !String
ctype :: TableInfo -> !String
notnull :: TableInfo -> !Int16
dfltValue :: TableInfo -> !(Maybe String)
pk :: TableInfo -> !Int16
pk' :: Pi TableInfo Int16
dfltValue' :: Pi TableInfo (Maybe String)
notnull' :: Pi TableInfo Int16
ctype' :: Pi TableInfo String
name' :: Pi TableInfo String
cid' :: Pi TableInfo Int64
insertQueryTableInfo :: Relation p_aeEQ TableInfo -> InsertQuery p_aeEQ
insertTableInfo :: Insert TableInfo
tableInfo :: Relation () TableInfo
tableOfTableInfo :: Table TableInfo
columnOffsetsTableInfo :: Array Int Int
instance Show TableInfo
instance TableDerivable TableInfo
instance ProductConstructor (Int64 -> String -> String -> Int16 -> Maybe String -> Int16 -> TableInfo)
instance PersistableWidth TableInfo

module Database.Relational.Schema.SQLite3Syscat.IndexInfo
data IndexInfo
IndexInfo :: !Int64 -> !Int64 -> !String -> IndexInfo
seqno :: IndexInfo -> !Int64
cid :: IndexInfo -> !Int64
name :: IndexInfo -> !String
name' :: Pi IndexInfo String
cid' :: Pi IndexInfo Int64
seqno' :: Pi IndexInfo Int64
insertQueryIndexInfo :: Relation p_afdm IndexInfo -> InsertQuery p_afdm
insertIndexInfo :: Insert IndexInfo
indexInfo :: Relation () IndexInfo
tableOfIndexInfo :: Table IndexInfo
columnOffsetsIndexInfo :: Array Int Int
instance Show IndexInfo
instance TableDerivable IndexInfo
instance ProductConstructor (Int64 -> Int64 -> String -> IndexInfo)
instance PersistableWidth IndexInfo

module Database.Relational.Schema.SQLite3
getType :: Map String TypeQ -> TableInfo -> Maybe (String, TypeQ)
normalizeColumn :: String -> String
normalizeType :: String -> String
notNull :: TableInfo -> Bool
tableInfoQuerySQL :: String -> String -> Query () TableInfo
indexListQuerySQL :: String -> String -> Query () IndexList
indexInfoQuerySQL :: String -> String -> Query () IndexInfo


module Database.Relational.Schema.SQLServerSyscat.Config

-- | Configuration parameter against SQLServer.
config :: Config

module Database.Relational.Schema.SQLServerSyscat.Types
data Types
Types :: !String -> !Int32 -> !Int32 -> Types
name :: Types -> !String
userTypeId :: Types -> !Int32
schemaId :: Types -> !Int32
schemaId' :: Pi Types Int32
userTypeId' :: Pi Types Int32
name' :: Pi Types String
insertQueryTypes :: Relation p_ag4I Types -> InsertQuery p_ag4I
insertTypes :: Insert Types
types :: Relation () Types
tableOfTypes :: Table Types
columnOffsetsTypes :: Array Int Int
instance Show Types
instance TableDerivable Types
instance ProductConstructor (String -> Int32 -> Int32 -> Types)
instance PersistableWidth Types

module Database.Relational.Schema.SQLServerSyscat.Columns
data Columns
Columns :: !Int32 -> !(Maybe String) -> !Int32 -> !Int32 -> !(Maybe Bool) -> Columns
objectId :: Columns -> !Int32
name :: Columns -> !(Maybe String)
columnId :: Columns -> !Int32
userTypeId :: Columns -> !Int32
isNullable :: Columns -> !(Maybe Bool)
isNullable' :: Pi Columns (Maybe Bool)
userTypeId' :: Pi Columns Int32
columnId' :: Pi Columns Int32
name' :: Pi Columns (Maybe String)
objectId' :: Pi Columns Int32
insertQueryColumns :: Relation p_aheS Columns -> InsertQuery p_aheS
insertColumns :: Insert Columns
columns :: Relation () Columns
tableOfColumns :: Table Columns
columnOffsetsColumns :: Array Int Int
instance Show Columns
instance TableDerivable Columns
instance ProductConstructor (Int32 -> Maybe String -> Int32 -> Int32 -> Maybe Bool -> Columns)
instance PersistableWidth Columns

module Database.Relational.Schema.SQLServer
getType :: Map String TypeQ -> ((Columns, Types), String) -> Maybe (String, TypeQ)
normalizeColumn :: String -> String
notNull :: ((Columns, Types), String) -> Bool
columnTypeQuerySQL :: Query (String, String) ((Columns, Types), String)
primaryKeyQuerySQL :: Query (String, String) (Maybe String)


module Database.Relational.Schema.PgCatalog.Config

-- | Configuration parameter against PostgreSQL.
config :: Config


module Database.Relational.Schema.PgCatalog.PgType
data PgType
PgType :: !Int32 -> !String -> !Int32 -> !Int32 -> !Int16 -> !Bool -> !Char -> !Char -> !Bool -> !Bool -> !Char -> !Int32 -> !Int32 -> !Int32 -> !Char -> !Char -> !Bool -> !Int32 -> !Int32 -> !Int32 -> !Int32 -> !(Maybe String) -> PgType
oid :: PgType -> !Int32
typname :: PgType -> !String
typnamespace :: PgType -> !Int32
typowner :: PgType -> !Int32
typlen :: PgType -> !Int16
typbyval :: PgType -> !Bool
typtype :: PgType -> !Char
typcategory :: PgType -> !Char
typispreferred :: PgType -> !Bool
typisdefined :: PgType -> !Bool
typdelim :: PgType -> !Char
typrelid :: PgType -> !Int32
typelem :: PgType -> !Int32
typarray :: PgType -> !Int32
typalign :: PgType -> !Char
typstorage :: PgType -> !Char
typnotnull :: PgType -> !Bool
typbasetype :: PgType -> !Int32
typtypmod :: PgType -> !Int32
typndims :: PgType -> !Int32
typcollation :: PgType -> !Int32
typdefault :: PgType -> !(Maybe String)
typdefault' :: Pi PgType (Maybe String)
typcollation' :: Pi PgType Int32
typndims' :: Pi PgType Int32
typtypmod' :: Pi PgType Int32
typbasetype' :: Pi PgType Int32
typnotnull' :: Pi PgType Bool
typstorage' :: Pi PgType Char
typalign' :: Pi PgType Char
typarray' :: Pi PgType Int32
typelem' :: Pi PgType Int32
typrelid' :: Pi PgType Int32
typdelim' :: Pi PgType Char
typisdefined' :: Pi PgType Bool
typispreferred' :: Pi PgType Bool
typcategory' :: Pi PgType Char
typtype' :: Pi PgType Char
typbyval' :: Pi PgType Bool
typlen' :: Pi PgType Int16
typowner' :: Pi PgType Int32
typnamespace' :: Pi PgType Int32
typname' :: Pi PgType String
oid' :: Pi PgType Int32
insertQueryPgType :: Relation p_aiZA PgType -> InsertQuery p_aiZA
insertPgType :: Insert PgType
pgType :: Relation () PgType
tableOfPgType :: Table PgType
columnOffsetsPgType :: Array Int Int
instance Show PgType
instance TableDerivable PgType
instance ProductConstructor (Int32 -> String -> Int32 -> Int32 -> Int16 -> Bool -> Char -> Char -> Bool -> Bool -> Char -> Int32 -> Int32 -> Int32 -> Char -> Char -> Bool -> Int32 -> Int32 -> Int32 -> Int32 -> Maybe String -> PgType)
instance PersistableWidth PgType


module Database.Relational.Schema.PgCatalog.PgAttribute
data PgAttribute
PgAttribute :: !Int32 -> !String -> !Int32 -> !Int32 -> !Int16 -> !Int16 -> !Int32 -> !Int32 -> !Int32 -> !Bool -> !Char -> !Char -> !Bool -> !Bool -> !Bool -> !Bool -> !Int32 -> !Int32 -> PgAttribute
attrelid :: PgAttribute -> !Int32
attname :: PgAttribute -> !String
atttypid :: PgAttribute -> !Int32
attstattarget :: PgAttribute -> !Int32
attlen :: PgAttribute -> !Int16
attnum :: PgAttribute -> !Int16
attndims :: PgAttribute -> !Int32
attcacheoff :: PgAttribute -> !Int32
atttypmod :: PgAttribute -> !Int32
attbyval :: PgAttribute -> !Bool
attstorage :: PgAttribute -> !Char
attalign :: PgAttribute -> !Char
attnotnull :: PgAttribute -> !Bool
atthasdef :: PgAttribute -> !Bool
attisdropped :: PgAttribute -> !Bool
attislocal :: PgAttribute -> !Bool
attinhcount :: PgAttribute -> !Int32
attcollation :: PgAttribute -> !Int32
attcollation' :: Pi PgAttribute Int32
attinhcount' :: Pi PgAttribute Int32
attislocal' :: Pi PgAttribute Bool
attisdropped' :: Pi PgAttribute Bool
atthasdef' :: Pi PgAttribute Bool
attnotnull' :: Pi PgAttribute Bool
attalign' :: Pi PgAttribute Char
attstorage' :: Pi PgAttribute Char
attbyval' :: Pi PgAttribute Bool
atttypmod' :: Pi PgAttribute Int32
attcacheoff' :: Pi PgAttribute Int32
attndims' :: Pi PgAttribute Int32
attnum' :: Pi PgAttribute Int16
attlen' :: Pi PgAttribute Int16
attstattarget' :: Pi PgAttribute Int32
atttypid' :: Pi PgAttribute Int32
attname' :: Pi PgAttribute String
attrelid' :: Pi PgAttribute Int32
insertQueryPgAttribute :: Relation p_alJO PgAttribute -> InsertQuery p_alJO
insertPgAttribute :: Insert PgAttribute
pgAttribute :: Relation () PgAttribute
tableOfPgAttribute :: Table PgAttribute
columnOffsetsPgAttribute :: Array Int Int
instance Show PgAttribute
instance TableDerivable PgAttribute
instance ProductConstructor (Int32 -> String -> Int32 -> Int32 -> Int16 -> Int16 -> Int32 -> Int32 -> Int32 -> Bool -> Char -> Char -> Bool -> Bool -> Bool -> Bool -> Int32 -> Int32 -> PgAttribute)
instance PersistableWidth PgAttribute


-- | This module implements queries to get table schema and table
--   constraint informations from system catalog of PostgreSQL.
module Database.Relational.Schema.PostgreSQL

-- | Type to represent Column information.
type Column = (PgAttribute, PgType)

-- | Normalize column name string to query PostgreSQL system catalog.
normalizeColumn :: String -> String

-- | Not-null attribute information of column.
notNull :: Column -> Bool

-- | Get column normalized name and column Haskell type.
getType :: Map String TypeQ -> Column -> Maybe (String, TypeQ)

-- | Phantom typed <a>Query</a> to get <a>Column</a> from schema name and
--   table name.
columnQuerySQL :: Query (String, String) Column

-- | Phantom typed <a>Query</a> to get primary key length from schema name
--   and table name.
primaryKeyLengthQuerySQL :: Query (String, String) Int32

-- | Phantom typed <a>Query</a> to get primary key name from schema name
--   and table name.
primaryKeyQuerySQL :: Int32 -> Query (String, String) String


module Database.Relational.Schema.DB2Syscat.Config

-- | Configuration parameter against IBM DB2.
config :: Config


-- | Generate template of SYSCAT.columns system catalog table.
module Database.Relational.Schema.DB2Syscat.Columns
data Columns
Columns :: !String -> !String -> !String -> !Int16 -> !String -> !String -> !Int32 -> !Int16 -> !(Maybe String) -> !String -> !Int16 -> !String -> !String -> !Int64 -> !(Maybe String) -> !(Maybe String) -> !Int32 -> !(Maybe Int16) -> !(Maybe Int16) -> !Int16 -> !Int16 -> !Int64 -> !(Maybe String) -> !(Maybe String) -> !(Maybe String) -> !(Maybe String) -> !(Maybe String) -> !(Maybe String) -> !(Maybe String) -> !(Maybe String) -> !String -> !Int32 -> !String -> !String -> !(Maybe String) -> !(Maybe String) -> Columns
tabschema :: Columns -> !String
tabname :: Columns -> !String
colname :: Columns -> !String
colno :: Columns -> !Int16
typeschema :: Columns -> !String
typename :: Columns -> !String
length :: Columns -> !Int32
scale :: Columns -> !Int16
default :: Columns -> !(Maybe String)
nulls :: Columns -> !String
codepage :: Columns -> !Int16
logged :: Columns -> !String
compact :: Columns -> !String
colcard :: Columns -> !Int64
high2key :: Columns -> !(Maybe String)
low2key :: Columns -> !(Maybe String)
avgcollen :: Columns -> !Int32
keyseq :: Columns -> !(Maybe Int16)
partkeyseq :: Columns -> !(Maybe Int16)
nquantiles :: Columns -> !Int16
nmostfreq :: Columns -> !Int16
numnulls :: Columns -> !Int64
targetTypeschema :: Columns -> !(Maybe String)
targetTypename :: Columns -> !(Maybe String)
scopeTabschema :: Columns -> !(Maybe String)
scopeTabname :: Columns -> !(Maybe String)
sourceTabschema :: Columns -> !(Maybe String)
sourceTabname :: Columns -> !(Maybe String)
dlFeatures :: Columns -> !(Maybe String)
specialProps :: Columns -> !(Maybe String)
hidden :: Columns -> !String
inlineLength :: Columns -> !Int32
identity :: Columns -> !String
generated :: Columns -> !String
text :: Columns -> !(Maybe String)
remarks :: Columns -> !(Maybe String)
remarks' :: Pi Columns (Maybe String)
text' :: Pi Columns (Maybe String)
generated' :: Pi Columns String
identity' :: Pi Columns String
inlineLength' :: Pi Columns Int32
hidden' :: Pi Columns String
specialProps' :: Pi Columns (Maybe String)
dlFeatures' :: Pi Columns (Maybe String)
sourceTabname' :: Pi Columns (Maybe String)
sourceTabschema' :: Pi Columns (Maybe String)
scopeTabname' :: Pi Columns (Maybe String)
scopeTabschema' :: Pi Columns (Maybe String)
targetTypename' :: Pi Columns (Maybe String)
targetTypeschema' :: Pi Columns (Maybe String)
numnulls' :: Pi Columns Int64
nmostfreq' :: Pi Columns Int16
nquantiles' :: Pi Columns Int16
partkeyseq' :: Pi Columns (Maybe Int16)
keyseq' :: Pi Columns (Maybe Int16)
avgcollen' :: Pi Columns Int32
low2key' :: Pi Columns (Maybe String)
high2key' :: Pi Columns (Maybe String)
colcard' :: Pi Columns Int64
compact' :: Pi Columns String
logged' :: Pi Columns String
codepage' :: Pi Columns Int16
nulls' :: Pi Columns String
default' :: Pi Columns (Maybe String)
scale' :: Pi Columns Int16
length' :: Pi Columns Int32
typename' :: Pi Columns String
typeschema' :: Pi Columns String
colno' :: Pi Columns Int16
colname' :: Pi Columns String
tabname' :: Pi Columns String
tabschema' :: Pi Columns String
insertQueryColumns :: Relation p_apPt Columns -> InsertQuery p_apPt
insertColumns :: Insert Columns
columns :: Relation () Columns
tableOfColumns :: Table Columns
columnOffsetsColumns :: Array Int Int
instance Show Columns
instance TableDerivable Columns
instance ProductConstructor (String -> String -> String -> Int16 -> String -> String -> Int32 -> Int16 -> Maybe String -> String -> Int16 -> String -> String -> Int64 -> Maybe String -> Maybe String -> Int32 -> Maybe Int16 -> Maybe Int16 -> Int16 -> Int16 -> Int64 -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> String -> Int32 -> String -> String -> Maybe String -> Maybe String -> Columns)
instance PersistableWidth Columns


-- | This module implements queries to get table schema and table
--   constraint informations from system catalog of IBM DB2.
module Database.Relational.Schema.IBMDB2

-- | Normalize column name string to query DB2 system catalog
normalizeColumn :: String -> String

-- | Not-null attribute information of column.
notNull :: Columns -> Bool

-- | Get column normalized name and column Haskell type.
getType :: Map String TypeQ -> Columns -> Maybe (String, TypeQ)

-- | Phantom typed <a>Query</a> to get <a>Columns</a> from schema name and
--   table name.
columnsQuerySQL :: Query (String, String) Columns

-- | Phantom typed <a>Query</a> to get primary key name from schema name
--   and table name.
primaryKeyQuerySQL :: Query (String, String) String
