-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Polymorphic combinators for working with foreign functions
--   
--   Functions like <a>alloca</a> are provided, except not restricted to
--   <a>IO</a>.
@package MonadCatchIO-mtl-foreign
@version 0.1


-- | This module assumes that you are familiar with the funcitons of the
--   same name in Foreign.Marshall.Alloc, Foreign.Marshal.AllocArray and in
--   Foreign.ForeignPtr.
--   
--   The functions are generalized to work in any monad which is an
--   instance of MonadCatchIO.
module Control.Monad.CatchIO.Foreign
alloca :: (Storable a, MonadCatchIO m) => (Ptr a -> m b) -> m b
allocaBytes :: MonadCatchIO m => Int -> (Ptr a -> m b) -> m b
allocaArray :: (Storable a, MonadCatchIO m) => Int -> (Ptr a -> m b) -> m b
allocaArray0 :: (Storable a, MonadCatchIO m) => Int -> (Ptr a -> m b) -> m b
withForeignPtr :: MonadCatchIO m => ForeignPtr a -> (Ptr a -> m b) -> m b
