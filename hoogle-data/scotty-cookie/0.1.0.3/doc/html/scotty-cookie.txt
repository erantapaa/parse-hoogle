-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Cookie management helper functions for Scotty framework
--   
@package scotty-cookie
@version 0.1.0.3


-- | Usage example: simple hit counter
--   
--   <pre>
--   {-# LANGUAGE OverloadedStrings #-}
--   
--   import Control.Monad
--   import Data.Monoid
--   import Data.Maybe
--   import Data.Text.Read
--   import qualified Data.Text.Lazy as TL
--   
--   import Web.Scotty
--   import Web.Scotty.Cookie
--   
--   main :: IO ()
--   main = scotty 3000 $
--       get "/" $ do
--           hits &lt;- liftM (fromMaybe "0") $ getCookie "hits"
--           let hits' = case decimal hits of
--                           Right n -&gt; TL.pack . show . (+1) $ (fst n :: Integer)
--                           Left _  -&gt; "1"
--           setSimpleCookie "hits" $ TL.toStrict hits'
--           html $ mconcat [ "&lt;html&gt;&lt;body&gt;"
--                          , hits'
--                          , "&lt;/body&gt;&lt;/html&gt;"
--                          ]
--   </pre>
module Web.Scotty.Cookie
makeSimpleCookie :: Text -> Text -> SetCookie
setCookie :: (Monad m, ScottyError e) => SetCookie -> ActionT e m ()

-- | <a>makeSimpleCookie</a> and <a>setCookie</a> combined.
setSimpleCookie :: (Monad m, ScottyError e) => Text -> Text -> ActionT e m ()
getCookie :: (Monad m, ScottyError e) => Text -> ActionT e m (Maybe Text)

-- | Returns all cookies
getCookies :: (Monad m, ScottyError e) => ActionT e m (Map Text Text)
deleteCookie :: (Monad m, ScottyError e) => Text -> ActionT e m ()
