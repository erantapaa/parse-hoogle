-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | The Play Framework style data binding in Scotty.
--   
--   The Play Framework style data binding in Scotty.
@package scotty-binding-play
@version 1.3


-- | The Play Framework style data binding in Scotty.
--   
--   Data difinition:
--   
--   <pre>
--   {-# LANGUAGE TemplateHaskell #-}
--   
--   import Web.Scotty.Binding.Play (deriveBindable)
--   
--   data Sample = Sample
--       { field1 :: Int
--       , field2 :: Text
--       }
--   
--   deriveBindable ''Sample
--   </pre>
--   
--   set as GET parameter:
--   
--   <pre>
--   &gt; curl http://localhost:3000/?data.field1=1&amp;data.field2=whisky
--   </pre>
--   
--   We can get <tt>Sample</tt> in Scotty:
--   
--   <pre>
--   main :: IO ()
--   main = scotty 3000 $ get "/" $ do
--       a &lt;- parseParam "data"
--       liftIO $ print $ field1 a --&gt; 1
--       liftIO $ print $ field2 a --&gt; "whisky"
--   </pre>
module Web.Scotty.Binding.Play

-- | Class of generic bindable data structure.
class Bindable a where parseParams prefix = parseParams' prefix Nothing
parseParams :: Bindable a => Text -> ActionM a
parseParams' :: Bindable a => Text -> Maybe Text -> ActionM a

-- | by TH
deriveBindable :: Name -> DecsQ
instance [overlap ok] Bindable a => Bindable (Maybe a)
instance [overlap ok] Bindable Text
instance [overlap ok] Bindable Text
instance [overlap ok] Bindable ByteString
instance [overlap ok] Bindable ()
instance [overlap ok] Bindable Integer
instance [overlap ok] Bindable Int
instance [overlap ok] Bindable Float
instance [overlap ok] Bindable Double
instance [overlap ok] Bindable String
instance [overlap ok] Bindable Bool
instance [overlap ok] Bindable a => Bindable [a]
