-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A blog engine on Hack
--   
--   A blog engine on Hack
@package bamboo
@version 2010.2.25

module Bamboo.Type.Common
type Assoc = [(String, String)]
type SC = String -> String

module Bamboo.Helper.Translation
home_nav :: String
next_sign :: String
no_navigation :: String
previous_sign :: String

module Bamboo.Helper.PreludeEnv

module Bamboo.Type.Theme
data ThemeConfig
ThemeConfig :: String -> [String] -> [String] -> ThemeConfig
name :: ThemeConfig -> String
css :: ThemeConfig -> [String]
js :: ThemeConfig -> [String]
data ThemeConfigData
Name :: ThemeConfigData
Css :: ThemeConfigData
Js :: ThemeConfigData
instance Eq ThemeConfigData
instance Show ThemeConfigData
instance Read ThemeConfigData
instance Show ThemeConfig
instance Read ThemeConfig
instance Default ThemeConfig

module Bamboo.Type.Class
class (Show a) => Resource a
resource_title :: (Resource a) => a -> String
resource_type :: (Resource a) => a -> String
class Markable a
markup :: (Markable a) => a -> Html
class Datable a
date :: (Datable a) => a -> CalendarTime
class Addressable a
uri :: (Addressable a) => a -> String
class Gettable a
get :: (Gettable a) => String -> IO a
class Mappable a
from_assoc :: (Mappable a) => Assoc -> IO a
class Creatable a
create :: (Creatable a) => a -> IO ()
class Listable a
list :: (Listable a) => IO [a]
list_for :: (Listable a) => String -> IO [a]
cheat_list :: (Listable a) => IO [a]
class FlatRead a
flat_read :: (FlatRead a) => String -> IO a

module Bamboo.Type.Extension
data Extension
Comment :: Extension
Search :: Extension
Analytics :: Extension
Counter :: Extension
instance Show Extension
instance Read Extension
instance Eq Extension

module Bamboo.Type.Pager
data Pager
Pager :: Int -> Int -> Bool -> Bool -> Int -> Int -> Int -> Pager
total :: Pager -> Int
current :: Pager -> Int
has_next :: Pager -> Bool
has_previous :: Pager -> Bool
next :: Pager -> Int
previous :: Pager -> Int
per_page :: Pager -> Int
instance Eq Pager
instance Show Pager
instance Default Pager
instance Default Bool

module Bamboo.Helper.ByteString
class SB a
to_sb :: (SB a) => a -> ByteString
class LB a
to_lb :: (LB a) => a -> ByteString
class US a
to_us :: (US a) => a -> String
lower :: ByteString -> ByteString
read_bytestring :: String -> IO ByteString
instance Default ByteString
instance US ByteString
instance US ByteString
instance US String
instance LB String
instance LB ByteString
instance LB ByteString
instance SB String
instance SB ByteString
instance SB ByteString

module Bamboo.Type.Reader
data Reader
Markdown :: Reader
RST :: Reader
HTML :: Reader
Latex :: Reader
readers :: [(Reader, [String])]
reader_map :: Map String Reader
guess_reader :: String -> Maybe Reader
to_html :: (ParserState -> a -> Pandoc) -> a -> Html
rr :: Reader -> ByteString -> Html
render_to_html :: Reader -> ByteString -> Html
instance Show Reader
instance Eq Reader
instance Default Reader

module Bamboo.Type.StaticWidget
data StaticWidget
StaticWidget :: String -> ByteString -> Reader -> StaticWidget
name :: StaticWidget -> String
body :: StaticWidget -> ByteString
reader :: StaticWidget -> Reader
instance Show StaticWidget
instance Eq StaticWidget
instance Markable StaticWidget

module Bamboo.Type.Config
data ConfigData
BlogTitle :: ConfigData
BlogSubtitle :: ConfigData
HostName :: ConfigData
AuthorEmail :: ConfigData
PerPage :: ConfigData
Navigation :: ConfigData
Sidebar :: ConfigData
Footer :: ConfigData
Favicon :: ConfigData
AnalyticsAccountId :: ConfigData
Extensions :: ConfigData
Theme :: ConfigData
PostDateFormat :: ConfigData
CommentDateFormat :: ConfigData
UrlDateFormat :: ConfigData
UrlDateMatcher :: ConfigData
UrlTitleSubs :: ConfigData
UrlDateTitleSeperator :: ConfigData
Cut :: ConfigData
SummaryForRoot :: ConfigData
SummaryForTag :: ConfigData
SummaryForRss :: ConfigData
PicturePrefix :: ConfigData
NumberOfLatestPosts :: ConfigData
UseCache :: ConfigData
BambooUrl :: ConfigData
Js :: ConfigData
Css :: ConfigData
data Config
Config :: String -> String -> String -> String -> Int -> [String] -> String -> Reader -> [StaticWidget] -> Maybe StaticWidget -> String -> String -> [Extension] -> ThemeConfig -> String -> String -> String -> String -> Assoc -> String -> String -> Bool -> Bool -> Bool -> String -> Int -> String -> Bool -> String -> String -> String -> String -> String -> String -> String -> String -> String -> String -> String -> String -> String -> String -> String -> String -> String -> Config
blog_title :: Config -> String
blog_subtitle :: Config -> String
host_name :: Config -> String
author_email :: Config -> String
per_page :: Config -> Int
navigation :: Config -> [String]
bamboo_url :: Config -> String
default_reader :: Config -> Reader
sidebar :: Config -> [StaticWidget]
footer :: Config -> Maybe StaticWidget
favicon :: Config -> String
analytics_account_id :: Config -> String
extensions :: Config -> [Extension]
theme_config :: Config -> ThemeConfig
post_date_format :: Config -> String
comment_date_format :: Config -> String
url_date_format :: Config -> String
url_date_matcher :: Config -> String
url_title_subs :: Config -> Assoc
url_date_title_seperator :: Config -> String
cut :: Config -> String
summary_for_root :: Config -> Bool
summary_for_tag :: Config -> Bool
summary_for_rss :: Config -> Bool
picture_prefix :: Config -> String
number_of_latest_posts :: Config -> Int
count_meta :: Config -> String
use_cache :: Config -> Bool
db_id :: Config -> String
flat_id :: Config -> String
post_id :: Config -> String
config_id :: Config -> String
tag_id :: Config -> String
comment_id :: Config -> String
sidebar_id :: Config -> String
theme_id :: Config -> String
config_file_id :: Config -> String
album_id :: Config -> String
image_id :: Config -> String
public_id :: Config -> String
static_id :: Config -> String
topic_id :: Config -> String
thumb_id :: Config -> String
stat_id :: Config -> String
cache_id :: Config -> String
instance Show Config
instance Show ConfigData
instance Default Config

module Bamboo.Type

module Bamboo.Helper
gt :: (Ord a) => a -> a -> Bool
ffmap :: (Functor f, Functor f1) => (a -> b) -> f1 (f a) -> f1 (f b)
(^^) :: (Functor f, Functor f1) => f1 (f a) -> (a -> b) -> f1 (f b)
whenM :: (Monad m) => m Bool -> m () -> m ()
parse_config :: String -> IO Assoc
write_config :: FilePath -> Assoc -> IO ()
empty_html :: Html
show_data :: (Show a) => a -> [Char]
ifM :: (Monad m) => m Bool -> m b -> m b -> m b
parse_boolean :: String -> Bool
mkdir :: String -> IO ()
type SIO = String -> IO ()
take_directory :: SC
with_file :: String -> IOMode -> (Handle -> IO a) -> IO a
id_to_type :: SC
id_to_resource :: SC
read_data :: (Read a) => String -> a
read_data_list :: (Read a) => [String] -> [a]
take_extension :: SC
take_known_extension :: SC
drop_known_extension :: SC
remove_trailing_slash :: SC
parse_list :: String -> [String]
static_config :: Config
db_uri :: Config -> String
flat_uri :: Config -> String
public_uri :: Config -> String
image_uri :: Config -> String
config_uri :: Config -> String
sidebar_uri :: Config -> String
footer_uri :: Config -> String
post_uri :: Config -> String
tag_uri :: Config -> String
comment_uri :: Config -> String
theme_uri :: Config -> String
album_uri :: Config -> String
topic_uri :: Config -> String
stat_uri :: Config -> String
cache_uri :: Config -> String
read_static_widget :: Reader -> String -> IO StaticWidget
to_theme :: Assoc -> ThemeConfig
slashed_script_name :: Env -> String

module Bamboo.Env

module Bamboo.Helper.StateHelper
uri :: Env -> String
parse_date :: String -> String -> Maybe CalendarTime
format_time :: String -> CalendarTime -> String
default_date :: CalendarTime
parse_post_date :: String -> Maybe CalendarTime
default_parse_date :: String -> CalendarTime
has_extension :: Extension -> Bool
html_only_for :: Extension -> Html -> Html
cut :: ByteString
is_cut :: ByteString -> Bool
match_cut :: ByteString -> Bool
id_to_path :: SC
path :: SC

module Bamboo.Model.Helper
get_body :: String -> IO ByteString
get_reader :: String -> Reader
meta :: String -> String
spaced_url :: String -> String

module Bamboo.Model.Env

module Bamboo.Model.Counter
hit :: String -> IO ()
count_name :: String -> String
count_path :: String -> String
safe_read_line :: String -> IO String
create_stat_if_none :: String -> IO ()
read_stat :: String -> IO Int

module Bamboo.Model.Post
data Post
Post :: String -> String -> ByteString -> [String] -> Int -> Reader -> Int -> Post
uid :: Post -> String
title :: Post -> String
body :: Post -> ByteString
tags :: Post -> [String]
comment_size :: Post -> Int
reader :: Post -> Reader
count :: Post -> Int
list_ids :: IO [String]
fast_list :: IO [Post]
fill_stat :: Post -> IO Post
get_title :: SC
get_date :: String -> CalendarTime
match :: String -> Post -> Bool
search :: String -> IO [Post]
summary :: Post -> ByteString
full :: Post -> ByteString
has_continue :: Post -> Bool
latest :: Int -> IO [Post]
id_to_uri :: SC
uri_to_id :: SC
markup_summary :: Post -> Html
instance Show Post
instance Eq Post
instance Listable Post
instance Gettable Post
instance FlatRead Post
instance Default Post
instance Addressable Post
instance Datable Post
instance Markable Post
instance Resource Post

module Bamboo.Model.Static
data Static
Static :: String -> ByteString -> Reader -> Static
uid :: Static -> String
body :: Static -> ByteString
reader :: Static -> Reader
get_title :: SC
title :: Static -> String
instance Show Static
instance Eq Static
instance Gettable Static
instance FlatRead Static
instance Default Static
instance Markable Static
instance Resource Static

module Bamboo.Model.Comment
data Comment
Comment :: String -> String -> ByteString -> String -> String -> Comment
uid :: Comment -> String
author :: Comment -> String
body :: Comment -> ByteString
author_email :: Comment -> String
author_link :: Comment -> String
data CommentData
Author :: CommentData
AuthorEmail :: CommentData
AuthorLink :: CommentData
Body :: CommentData
PostId :: CommentData
data SpamFilter
HumanHack :: SpamFilter
EmptyField :: SpamFilter
LeftNumber :: SpamFilter
RightNumber :: SpamFilter
Operator :: SpamFilter
write_to :: Comment -> IO ()
create_comment :: Assoc -> IO ()
from_post_id :: String -> Comment
post_id_to_uid :: SC
uid_to_post_id :: SC
fill_comment_size :: Post -> IO Post
gravatar_link :: Comment -> String
instance Show SpamFilter
instance Show CommentData
instance Show Comment
instance Eq Comment
instance Mappable Comment
instance Creatable Comment
instance Listable Comment
instance Gettable Comment
instance FlatRead Comment
instance Default Comment
instance Datable Comment
instance Markable Comment
instance Resource Comment

module Bamboo.Model.Tag
data Tag
Tag :: String -> String -> Set ByteString -> Tag
uid :: Tag -> String
name :: Tag -> String
resources :: Tag -> Set ByteString
get_name :: SC
get_resources :: String -> IO ByteString
get_resources_set :: String -> IO (Set ByteString)
bs_slash :: ByteString -> ByteString -> ByteString
resource_title_from_name :: SC
tag_map' :: [Tag] -> Map String (Set ByteString)
tag_map :: IO (Map String (Set ByteString))
for_resource :: [Tag] -> String -> [String]
fill_tag :: [Tag] -> Post -> Post
sorted :: [Tag] -> [Tag]
name_to_id :: SC
instance Show Tag
instance Eq Tag
instance Listable Tag
instance Gettable Tag
instance Resource Tag

module Bamboo.Type.State
data State
State :: String -> Pager -> Int -> String -> String -> [Tag] -> String -> String -> HumanTestData -> [Post] -> [Post] -> [Comment] -> Static -> Env -> Config -> State
uid :: State -> String
pager :: State -> Pager
status :: State -> Int
tag_name :: State -> String
search_key :: State -> String
tags :: State -> [Tag]
nav_location :: State -> String
resource_title :: State -> String
human_test_data :: State -> HumanTestData
latest_posts :: State -> [Post]
posts :: State -> [Post]
comments :: State -> [Comment]
static :: State -> Static
env :: State -> Env
config :: State -> Config
data HumanTestData
HumanTestData :: Int -> Int -> Op -> HumanTestData
left :: HumanTestData -> Int
right :: HumanTestData -> Int
op :: HumanTestData -> Op
data Op
Plus :: Op
Minus :: Op
show_right :: State -> String
show_op :: State -> String
show_left :: State -> String
display_op :: Op -> String
read_op :: String -> Op
nums :: [Int]
ops :: [Op]
simple_eval :: Int -> Int -> Op -> Int
mk_human_test :: IO HumanTestData
instance Show Op
instance Show HumanTestData
instance Show State
instance Default State
instance Default Op
instance Default HumanTestData

module Bamboo.Type.ThemeInterface
data Interface
Index :: Interface
IndexFeed :: Interface
Post :: Interface
Static :: Interface
Tag :: Interface
TagFeed :: Interface
Search :: Interface
type Theme = Interface -> State -> IO Response
instance Show Interface
instance Eq Interface

module Bamboo.Controller.Type
type Controller = StateController ()
type ETagController = StateController String
type Part a = StateT State IO a
type StateController a = StateT State IO a
type View = State -> IO Response

module Bamboo.Controller.Helper
init_state :: Controller
inputs :: Env -> Assoc
params :: Env -> Assoc
input_with_default :: String -> String -> Env -> String
param_with_default :: String -> String -> Env -> String
get_input :: String -> Env -> Maybe String
get_param :: String -> Env -> Maybe String
just_input :: String -> Env -> String
just_param :: String -> Env -> String
io :: (MonadIO m) => IO a -> m a
fill_latest_posts :: Part ()
fill_tags :: Part ()
paginate :: [a] -> Part Pager
paged :: [a] -> Part ([a], Pager)
for_current_page :: Pager -> [a] -> [a]
init_post_meta_data :: Post -> Part Post
run :: Controller -> View -> Application
not_found :: Controller

module Bamboo.Controller.Env

module Bamboo.Controller.Comment
comment_create :: Application

module Bamboo.Controller.Index
index :: Controller
index_feed :: Controller

module Bamboo.Controller.Search
search :: Controller

module Bamboo.Controller.Post
post :: Controller

module Bamboo.Controller.Static
static :: Controller

module Bamboo.Controller.Tag
tag :: Controller
tag_feed :: Controller

module Bamboo.Controller.Application
paths_with_theme :: Theme -> [(String, Application)]
render_with_theme :: Theme -> (Interface, Controller) -> Application
for_extension :: Extension -> Maybe a -> Maybe a

module Bamboo
bamboo_with_theme :: Theme -> Middleware
