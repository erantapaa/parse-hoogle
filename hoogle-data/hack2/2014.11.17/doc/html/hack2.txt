-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | a Haskell Webserver Interface (V2)
--   
@package hack2
@version 2014.11.17

module Hack2
type Application = Env -> IO Response
type Middleware = Application -> Application
data RequestMethod
OPTIONS :: RequestMethod
GET :: RequestMethod
HEAD :: RequestMethod
POST :: RequestMethod
PUT :: RequestMethod
DELETE :: RequestMethod
TRACE :: RequestMethod
CONNECT :: RequestMethod
data HackUrlScheme
HTTP :: HackUrlScheme
HTTPS :: HackUrlScheme
newtype HackErrors
HackErrors :: (ByteString -> IO ()) -> HackErrors
unHackErrors :: HackErrors -> ByteString -> IO ()
data Env
Env :: RequestMethod -> ByteString -> ByteString -> ByteString -> ByteString -> Int -> [(ByteString, ByteString)] -> (Int, Int, Int) -> HackUrlScheme -> ByteString -> HackErrors -> [(ByteString, ByteString)] -> Env
requestMethod :: Env -> RequestMethod
scriptName :: Env -> ByteString
pathInfo :: Env -> ByteString
queryString :: Env -> ByteString
serverName :: Env -> ByteString
serverPort :: Env -> Int
httpHeaders :: Env -> [(ByteString, ByteString)]
hackVersion :: Env -> (Int, Int, Int)
hackUrlScheme :: Env -> HackUrlScheme
hackInput :: Env -> ByteString
hackErrors :: Env -> HackErrors
hackHeaders :: Env -> [(ByteString, ByteString)]
data Response
Response :: Int -> [(ByteString, ByteString)] -> ByteString -> Response
status :: Response -> Int
headers :: Response -> [(ByteString, ByteString)]
body :: Response -> ByteString
instance Show RequestMethod
instance Read RequestMethod
instance Eq RequestMethod
instance Show HackUrlScheme
instance Read HackUrlScheme
instance Eq HackUrlScheme
instance Show Env
instance Show Response
instance Default Env
instance Default Response
instance Default HackUrlScheme
instance Default RequestMethod
instance Default HackErrors
instance Show HackErrors
