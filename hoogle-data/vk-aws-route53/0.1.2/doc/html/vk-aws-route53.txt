-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Amazon Route53 DNS service plugin for the aws package.
--   
--   Amazon Route53 DNS service plugin for the aws package.
@package vk-aws-route53
@version 0.1.2

module Aws.Route53.Core
data Route53Configuration qt
Route53Configuration :: Protocol -> ByteString -> Int -> ByteString -> Text -> Route53Configuration qt
route53Protocol :: Route53Configuration qt -> Protocol
route53Endpoint :: Route53Configuration qt -> ByteString
route53Port :: Route53Configuration qt -> Int
route53ApiVersion :: Route53Configuration qt -> ByteString
route53XmlNamespace :: Route53Configuration qt -> Text
route53EndpointUsClassic :: ByteString
route53 :: Route53Configuration qt
data Route53Error
Route53Error :: Status -> Text -> Text -> Route53Error
route53StatusCode :: Route53Error -> Status
route53ErrorCode :: Route53Error -> Text
route53ErrorMessage :: Route53Error -> Text
data Route53Metadata
Route53Metadata :: Maybe Text -> Route53Metadata
requestId :: Route53Metadata -> Maybe Text
route53SignQuery :: Method -> ByteString -> [(ByteString, ByteString)] -> Maybe Element -> Route53Configuration qt -> SignatureData -> SignedQuery
route53ResponseConsumer :: (Cursor -> Response Route53Metadata a) -> IORef Route53Metadata -> HTTPResponseConsumer a
route53CheckResponseType :: MonadThrow m => a -> Text -> Cursor -> m a
data RecordType
A :: RecordType
AAAA :: RecordType
NS :: RecordType
TXT :: RecordType
MX :: RecordType
CNAME :: RecordType
SOA :: RecordType
PTR :: RecordType
SRV :: RecordType
SPF :: RecordType
UNKNOWN :: Int -> RecordType
typeToString :: RecordType -> String
data HostedZone
HostedZone :: HostedZoneId -> Domain -> Text -> Text -> Int -> HostedZone
hzId :: HostedZone -> HostedZoneId
hzName :: HostedZone -> Domain
hzCallerReference :: HostedZone -> Text
hzComment :: HostedZone -> Text
hzResourceRecordSetCount :: HostedZone -> Int
type HostedZones = [HostedZone]
newtype Domain
Domain :: Text -> Domain
dText :: Domain -> Text
newtype HostedZoneId
HostedZoneId :: Text -> HostedZoneId
hziText :: HostedZoneId -> Text
data DelegationSet
DelegationSet :: Domain -> Domain -> Domain -> Domain -> DelegationSet
dsNameserver1 :: DelegationSet -> Domain
dsNameserver2 :: DelegationSet -> Domain
dsNameserver3 :: DelegationSet -> Domain
dsNameserver4 :: DelegationSet -> Domain
type Nameserver = Domain
type Nameservers = [Nameserver]
dsNameservers :: DelegationSet -> [Domain]
data REGION
ApNorthEast1 :: REGION
ApSouthEast2 :: REGION
EuWest1 :: REGION
SaEast1 :: REGION
UsEast1 :: REGION
UsWest1 :: REGION
UsWest2 :: REGION
UnknownRegion :: REGION
type ResourceRecordSets = [ResourceRecordSet]
data ResourceRecordSet
ResourceRecordSet :: Domain -> RecordType -> Maybe AliasTarget -> Maybe Text -> Maybe Int -> Maybe REGION -> Maybe Int -> ResourceRecords -> ResourceRecordSet
rrsName :: ResourceRecordSet -> Domain
rrsType :: ResourceRecordSet -> RecordType
rrsAliasTarget :: ResourceRecordSet -> Maybe AliasTarget
rrsSetIdentifier :: ResourceRecordSet -> Maybe Text
rrsWeight :: ResourceRecordSet -> Maybe Int
rrsRegion :: ResourceRecordSet -> Maybe REGION
rrsTTL :: ResourceRecordSet -> Maybe Int
rrsRecords :: ResourceRecordSet -> ResourceRecords
type ResourceRecords = [ResourceRecord]
newtype ResourceRecord
ResourceRecord :: Text -> ResourceRecord
value :: ResourceRecord -> Text
data AliasTarget
AliasTarget :: HostedZoneId -> Domain -> AliasTarget
atHostedZoneId :: AliasTarget -> HostedZoneId
atDNSName :: AliasTarget -> Domain
data ChangeInfo
ChangeInfo :: ChangeId -> ChangeInfoStatus -> UTCTime -> ChangeInfo
ciId :: ChangeInfo -> ChangeId
ciStatus :: ChangeInfo -> ChangeInfoStatus
ciSubmittedAt :: ChangeInfo -> UTCTime
data ChangeInfoStatus
PENDING :: ChangeInfoStatus
INSYNC :: ChangeInfoStatus
newtype ChangeId
ChangeId :: Text -> ChangeId
changeIdText :: ChangeId -> Text

-- | A class for Route53 XML response parsers
--   
--   TODO there is a lot of Boilerplat here. With only little overhead
--   serializatin and deserialization could be derived from the instance
--   declaration. Maybe some DLS would be a goold solution
class Route53Parseable r
r53Parse :: (Route53Parseable r, MonadThrow m) => Cursor -> m r
class Route53XmlSerializable r
toXml :: Route53XmlSerializable r => r -> Element
class Route53Id r where asId t = asId' . fromJust . stripPrefix (qualifiedIdTextPrefix (undefined :: r)) $ t qualifiedIdTextPrefix r = "/" `append` idQualifier r `append` "/" qualifiedIdText r = qualifiedIdTextPrefix r `append` idText r asId' t = asId $ qualifiedIdTextPrefix (undefined :: r) `append` t
idQualifier :: Route53Id r => r -> Text
idText :: Route53Id r => r -> Text
asId :: Route53Id r => Text -> r
qualifiedIdTextPrefix :: Route53Id r => r -> Text
qualifiedIdText :: Route53Id r => r -> Text
asId' :: Route53Id r => Text -> r
findHeader :: [Header] -> HeaderName -> Maybe Header
findHeaderValue :: [Header] -> HeaderName -> Maybe ByteString
hRequestId :: HeaderName
instance Typeable Route53Error
instance Typeable Route53Metadata
instance Show (Route53Configuration qt)
instance Show Route53Error
instance Show Route53Metadata
instance Eq RecordType
instance Show RecordType
instance Read RecordType
instance Show HostedZoneId
instance IsString HostedZoneId
instance Eq HostedZoneId
instance Show Domain
instance Eq Domain
instance Show HostedZone
instance Show DelegationSet
instance Eq REGION
instance Show ResourceRecord
instance Eq ResourceRecord
instance Show AliasTarget
instance Show ResourceRecordSet
instance Show ChangeInfoStatus
instance Read ChangeInfoStatus
instance Show ChangeId
instance Eq ChangeId
instance Show ChangeInfo
instance Route53Parseable ChangeInfo
instance Route53Id ChangeId
instance Route53Parseable ResourceRecord
instance Route53Parseable ResourceRecords
instance Route53Parseable AliasTarget
instance Route53Parseable ResourceRecordSet
instance Route53Parseable ResourceRecordSets
instance Route53XmlSerializable AliasTarget
instance Route53XmlSerializable ResourceRecord
instance Route53XmlSerializable ResourceRecordSet
instance Show REGION
instance Route53Parseable Nameserver
instance Route53Parseable Nameservers
instance Route53Parseable DelegationSet
instance Route53XmlSerializable HostedZones
instance Route53XmlSerializable HostedZone
instance Route53Parseable HostedZone
instance Route53Parseable HostedZones
instance IsString Domain
instance Route53Id HostedZoneId
instance Monoid Route53Metadata
instance Loggable Route53Metadata
instance Exception Route53Error
instance DefaultServiceConfiguration (Route53Configuration UriOnlyQuery)
instance DefaultServiceConfiguration (Route53Configuration NormalQuery)


-- | POST CreateHostedZone
--   
--   Create a new Route53 hosted zone.
--   
--   
--   <a>http://docs.amazonwebservices.com/Route53/latest/APIReference/API_CreateHostedZone.html</a>
module Aws.Route53.Commands.CreateHostedZone
data CreateHostedZone
CreateHostedZone :: Domain -> Text -> Text -> CreateHostedZone
chzName :: CreateHostedZone -> Domain
chzCallerReference :: CreateHostedZone -> Text
chzComment :: CreateHostedZone -> Text
data CreateHostedZoneResponse
CreateHostedZoneResponse :: HostedZone -> ChangeInfo -> DelegationSet -> CreateHostedZoneResponse
chzrHostedZone :: CreateHostedZoneResponse -> HostedZone
chzrChangeInfo :: CreateHostedZoneResponse -> ChangeInfo
chzrDelegationSet :: CreateHostedZoneResponse -> DelegationSet
createHostedZone :: Domain -> Text -> Text -> CreateHostedZone
instance Show CreateHostedZone
instance Show CreateHostedZoneResponse
instance Transaction CreateHostedZone CreateHostedZoneResponse
instance ResponseConsumer r CreateHostedZoneResponse
instance SignQuery CreateHostedZone


-- | GET GetHostedZone
--   
--   Get a particular Route53 hosted zone identified through its
--   <a>hostedZoneId</a>. The HostedZoneId is obtained in the response to
--   <a>CreateHostedZone</a> or <a>ListHostedZones</a>
--   
--   
--   <a>http://docs.amazonwebservices.com/Route53/latest/APIReference/API_GetHostedZone.html</a>
module Aws.Route53.Commands.GetHostedZone
data GetHostedZone
GetHostedZone :: HostedZoneId -> GetHostedZone
hostedZoneId :: GetHostedZone -> HostedZoneId
data GetHostedZoneResponse
GetHostedZoneResponse :: HostedZone -> DelegationSet -> GetHostedZoneResponse
ghzrHostedZone :: GetHostedZoneResponse -> HostedZone
ghzrDelegationSet :: GetHostedZoneResponse -> DelegationSet
getHostedZone :: HostedZoneId -> GetHostedZone
instance Show GetHostedZone
instance Show GetHostedZoneResponse
instance Transaction GetHostedZone GetHostedZoneResponse
instance ResponseConsumer r GetHostedZoneResponse
instance SignQuery GetHostedZone


-- | DELETE DeleteHostedZone
--   
--   Delete a particular Route53 hosted zone identified through its
--   <tt>hostedZoneId</tt>. The HostedZoneId is obtained in the response to
--   <a>CreateHostedZone</a> or <a>ListHostedZones</a>
--   
--   Note that the hosted zone can be delete only after deleting all
--   resource records other than the default SOA record and the NS records.
--   
--   
--   <a>http://docs.amazonwebservices.com/Route53/latest/APIReference/API_DeleteHostedZone.html</a>
module Aws.Route53.Commands.DeleteHostedZone
data DeleteHostedZone
DeleteHostedZone :: HostedZoneId -> DeleteHostedZone
dhzHostedZoneId :: DeleteHostedZone -> HostedZoneId
data DeleteHostedZoneResponse
DeleteHostedZoneResponse :: ChangeInfo -> DeleteHostedZoneResponse
dhzrChangeInfo :: DeleteHostedZoneResponse -> ChangeInfo
deleteHostedZone :: HostedZoneId -> DeleteHostedZone
instance Show DeleteHostedZone
instance Show DeleteHostedZoneResponse
instance Transaction DeleteHostedZone DeleteHostedZoneResponse
instance ResponseConsumer r DeleteHostedZoneResponse
instance SignQuery DeleteHostedZone


-- | GET ListHostedZones
--   
--   List all Route53 hosted zones of the user, optionally paginated.
--   
--   
--   <a>http://docs.amazonwebservices.com/Route53/latest/APIReference/API_ListHostedZones.html</a>
module Aws.Route53.Commands.ListHostedZones
data ListHostedZones
ListHostedZones :: Maybe Int -> Maybe Text -> ListHostedZones
lhzMaxNumberOfItems :: ListHostedZones -> Maybe Int
lhzNextToken :: ListHostedZones -> Maybe Text
data ListHostedZonesResponse
ListHostedZonesResponse :: HostedZones -> Maybe Text -> ListHostedZonesResponse
lhzrHostedZones :: ListHostedZonesResponse -> HostedZones
lhzrNextToken :: ListHostedZonesResponse -> Maybe Text
listHostedZones :: ListHostedZones
instance Show ListHostedZones
instance Show ListHostedZonesResponse
instance IteratedTransaction ListHostedZones ListHostedZonesResponse
instance Transaction ListHostedZones ListHostedZonesResponse
instance ResponseConsumer r ListHostedZonesResponse
instance SignQuery ListHostedZones


-- | POST ChangeResourceRecordSetrs
--   
--   Creates, changes, or deletes resource records sets.
--   
--   
--   <a>http://docs.amazonwebservices.com/Route53/latest/APIReference/API_ChangeResourceRecordSets.html</a>
module Aws.Route53.Commands.ChangeResourceRecordSets
data ACTION
CREATE :: ACTION
DELETE :: ACTION
UPSERT :: ACTION
data ChangeResourceRecordSets
ChangeResourceRecordSets :: HostedZoneId -> Maybe Text -> [(ACTION, ResourceRecordSet)] -> ChangeResourceRecordSets
crrHostedZoneId :: ChangeResourceRecordSets -> HostedZoneId
crrComment :: ChangeResourceRecordSets -> Maybe Text
crrsChanges :: ChangeResourceRecordSets -> [(ACTION, ResourceRecordSet)]
data ChangeResourceRecordSetsResponse
ChangeResourceRecordSetsResponse :: ChangeInfo -> ChangeResourceRecordSetsResponse
crrsrChangeInfo :: ChangeResourceRecordSetsResponse -> ChangeInfo
instance Show ACTION
instance Show ChangeResourceRecordSets
instance Show ChangeResourceRecordSetsResponse
instance Transaction ChangeResourceRecordSets ChangeResourceRecordSetsResponse
instance ResponseConsumer r ChangeResourceRecordSetsResponse
instance SignQuery ChangeResourceRecordSets


-- | GET ListResourceRecordSets
--   
--   Lists the resource record sets for a Route53 hosted zone. The hosted
--   zone is identified by the hostedZoneId which is retrieved in the
--   response to <a>ListHostedZones</a> or <a>CreateHostedZone</a>.
--   
--   
--   <a>http://docs.amazonwebservices.com/Route53/latest/APIReference/API_ListResourceRecordSets.html</a>
--   
--   NOTE: the parameter <tt>identifier</tt> is required for weighted and
--   latency resource record sets. This is not enforced by the type.
module Aws.Route53.Commands.ListResourceRecordSets
data ListResourceRecordSets
ListResourceRecordSets :: HostedZoneId -> Maybe Domain -> Maybe RecordType -> Maybe Text -> Maybe Int -> ListResourceRecordSets
lrrsHostedZoneId :: ListResourceRecordSets -> HostedZoneId
lrrsName :: ListResourceRecordSets -> Maybe Domain
lrrsRecordType :: ListResourceRecordSets -> Maybe RecordType

-- | must be present for weighted or latency resource record sets. TODO
--   introduce newtype wrapper
lrrsIdentifier :: ListResourceRecordSets -> Maybe Text

-- | maximum effective value is 100
lrrsMaxItems :: ListResourceRecordSets -> Maybe Int

-- | A most general <a>ListResourceRecordSets</a> query
listResourceRecordSets :: HostedZoneId -> ListResourceRecordSets
data ListResourceRecordSetsResponse
ListResourceRecordSetsResponse :: ResourceRecordSets -> Bool -> Maybe Int -> Maybe Domain -> Maybe RecordType -> Maybe Text -> ListResourceRecordSetsResponse
lrrsrResourceRecordSets :: ListResourceRecordSetsResponse -> ResourceRecordSets
lrrsrIsTruncated :: ListResourceRecordSetsResponse -> Bool

-- | The maxitems value from the request
lrrsrMaxItems :: ListResourceRecordSetsResponse -> Maybe Int

-- | TODO check constraint
lrrsrNextRecordName :: ListResourceRecordSetsResponse -> Maybe Domain

-- | TODO check constraint
lrrsrNextRecordType :: ListResourceRecordSetsResponse -> Maybe RecordType

-- | TODO check constraint
lrrsrNextRecordIdentifier :: ListResourceRecordSetsResponse -> Maybe Text
instance Show ListResourceRecordSets
instance Show ListResourceRecordSetsResponse
instance IteratedTransaction ListResourceRecordSets ListResourceRecordSetsResponse
instance Transaction ListResourceRecordSets ListResourceRecordSetsResponse
instance ResponseConsumer r ListResourceRecordSetsResponse
instance SignQuery ListResourceRecordSets


-- | GET GetChange
--   
--   Returns the current status of change batch request.
--   
--   
--   <a>http://docs.amazonwebservices.com/Route53/latest/APIReference/API_GetChange.html</a>
module Aws.Route53.Commands.GetChange
data GetChange
GetChange :: ChangeId -> GetChange
changeId :: GetChange -> ChangeId
data GetChangeResponse
GetChangeResponse :: ChangeInfo -> GetChangeResponse
gcrChangeInfo :: GetChangeResponse -> ChangeInfo
getChange :: ChangeId -> GetChange
instance Show GetChange
instance Show GetChangeResponse
instance Transaction GetChange GetChangeResponse
instance ResponseConsumer r GetChangeResponse
instance SignQuery GetChange


-- | GET GetDate
--   
--   Receive current date string from Route53 service that can be used as
--   date string for authenticating REST requests to Route53.
--   
--   
--   <a>http://docs.amazonwebservices.com/Route53/latest/DeveloperGuide/RESTAuthentication.html</a>
module Aws.Route53.Commands.GetDate
data GetDate
GetDate :: GetDate
newtype GetDateResponse
GetDateResponse :: UTCTime -> GetDateResponse
date :: GetDateResponse -> UTCTime
getDate :: GetDate
instance Show GetDate
instance Show GetDateResponse
instance Loggable ()
instance Transaction GetDate GetDateResponse
instance ResponseConsumer r GetDateResponse
instance SignQuery GetDate

module Aws.Route53.Commands

module Aws.Route53
