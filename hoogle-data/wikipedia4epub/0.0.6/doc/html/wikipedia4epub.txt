-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Wikipedia EPUB E-Book construction from Firefox history.
--   
--   Wikipedia EPUB E-Book construction from Firefox History. It dumps
--   history and select only wikipedia articles, fetch them and strip thier
--   content before put into EPUB book for E-Book readers.
@package wikipedia4epub
@version 0.0.6

module Web.Firefox
listPlacesFiles :: IO [FilePath]
listHistoryURLs :: FilePath -> IO [URL]
listAllHistoryURLs :: IO [URL]

module Network.Wikipedia
isArticleURL :: URL -> Bool
data WikiArticle
WikiArticleHTML :: String -> String -> WikiArticle
waTitle :: WikiArticle -> String
waContent :: WikiArticle -> String
WikiArticleSRC :: String -> String -> WikiArticle
waTitle :: WikiArticle -> String
waContent :: WikiArticle -> String
articleURL2Title :: URL -> String
getArticleLinks :: WikiArticle -> [URL]
getArticleLinksAbs :: WikiArticle -> [URL]
getArticleImages :: WikiArticle -> [URL]
sanitizeArticle :: [String] -> WikiArticle -> WikiArticle
sanitizeFileName :: FilePath -> FilePath
fetchArticle :: URL -> IO WikiArticle
instance Show WikiArticle
instance Ord WikiArticle
instance Eq WikiArticle

module Wiki4e.Commands.Fetching
type FetchingState = (Int, Int)
type FetchingMethod = URL -> IO String
fs2str :: FetchingState -> String
wiki4e_fetch :: FilePath -> FetchingMethod -> FetchingState -> URL -> IO ()

module Wiki4e.Commands.Common

-- | Basic configuration of the commands
data Wiki4eConfig
Wiki4eConfig :: FilePath -> FilePath -> FilePath -> Wiki4eConfig
w4confDirFetch :: Wiki4eConfig -> FilePath
w4confDirImg :: Wiki4eConfig -> FilePath
w4confDirSanitized :: Wiki4eConfig -> FilePath
wiki4e_initConfig :: IO Wiki4eConfig
readFileUTF8 :: FilePath -> IO String
toLazy :: ByteString -> ByteString
forceList :: String -> String

module Wiki4e.Commands.Articles
wiki4e_sanitizeArticle :: [String] -> FilePath -> FilePath -> IO ()
wiki4e_sanitizeArticles :: Wiki4eConfig -> [URL] -> IO ()
wiki4e_fetchArticles :: Wiki4eConfig -> [URL] -> IO ()
wiki4e_getArticleFiles :: Wiki4eConfig -> [URL] -> [FilePath]
wiki4e_getArticleSanFiles :: Wiki4eConfig -> [URL] -> [FilePath]
wiki4e_crawlArticlesLinks :: Wiki4eConfig -> [URL] -> Int -> IO [URL]
wiki4e_listArticleImages :: FilePath -> IO [URL]

-- | Method expects already sanitized articles
wiki4e_listArticlesImages :: Wiki4eConfig -> [URL] -> IO [URL]
wiki4e_readArticle :: FilePath -> IO WikiArticle
loadArticleFile :: Int -> FilePath -> FilePath -> IO BookItem
articleURL2File :: Wiki4eConfig -> URL -> FilePath
articleURL2SanFile :: Wiki4eConfig -> URL -> FilePath

module Wiki4e.Commands.Images
wiki4e_fetchImages :: Wiki4eConfig -> [URL] -> IO ()
wiki4e_getImgFiles :: Wiki4eConfig -> [URL] -> [FilePath]
imgURL2File :: Wiki4eConfig -> URL -> FilePath
loadImgFile :: Int -> FilePath -> FilePath -> IO BookItem

module Wiki4e.Commands.EPUB

-- | Create epub in current directory with bookName | With all articles in
--   directory srcDir and images at | imgDir
wiki4e_createEpub :: Wiki4eConfig -> String -> [URL] -> [URL] -> IO ()

module Wiki4e.Commands
