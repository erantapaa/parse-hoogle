-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Backend for uploading benchmark data to Google Fusion Tables.
--   
@package hsbencher-fusion
@version 0.3.15.2


-- | Common functionality for uploading and downloading data from Google
--   FusionTables.
module HSBencher.Internal.Fusion
initialize :: String -> String -> String -> IO (TableId, [String])

-- | Configuration options for Google Fusion Table uploading.
data FusionConfig
FusionConfig :: Maybe TableId -> Maybe String -> Maybe String -> [String] -> FusionConfig

-- | This must be Just whenever doFusionUpload is true.
fusionTableID :: FusionConfig -> Maybe TableId
fusionClientID :: FusionConfig -> Maybe String
fusionClientSecret :: FusionConfig -> Maybe String

-- | Record the ordering of columns server side.
serverColumns :: FusionConfig -> [String]
getSomething :: OAuth2Client -> String -> String -> Maybe String -> IO ColData
getWithSQLQuery :: OAuth2Client -> String -> String -> IO ColData
init :: String -> String -> String -> IO (TableId, OAuth2Client)
data ColData :: *
ColData :: [FTString] -> [[FTValue]] -> ColData
colName :: ColData -> [FTString]
values :: ColData -> [[FTValue]]
data FTValue :: *
StringValue :: FTString -> FTValue
DoubleValue :: Double -> FTValue
instance Typeable FusionException
instance Typeable FusionConfig
instance Show FusionException
instance Show FusionConfig
instance Read FusionConfig
instance Ord FusionConfig
instance Eq FusionConfig
instance Default FusionConfig
instance Exception FusionException


-- | Google Fusion Table upload of benchmark data.
--   
--   This module must be used in conjunction with the main "hsbencher"
--   package, e.g. "import HSBencher".
module HSBencher.Backend.Fusion

-- | A default plugin. This binding provides future-proof way to get a
--   default instance of the plugin, in the eventuality that more
--   configuration options are added in the future.
defaultFusionPlugin :: FusionPlug

-- | Get the table ID that has been cached on disk, or find the the table
--   in the users Google Drive, or create a new table if needed.
--   
--   This is a simple shorthand for combining
--   findTableId<i>makeTable</i>ensureColumns.
--   
--   It adds columns if necessary and returns the permutation of columns
--   found server side. It assumes the DEFAULT core table Schema and will
--   not work for creating CUSTOM columns on the server side. Simple drop
--   down to using the three finer grained routines if you want that.
getTableId :: OAuth2Client -> String -> BenchM (TableId, [String])

-- | Look for a table by name, returning its ID if it is present.
findTableId :: OAuth2Client -> String -> BenchM (Maybe TableId)

-- | Make a new table, returning its ID. In the future this may provide
--   failure recovery. But for now it simply produces an exception if
--   anything goes wrong. And in particular there is no way to deal with
--   multiple clients racing to perform a <a>makeTable</a> with the same
--   name.
makeTable :: OAuth2Client -> String -> BenchM TableId

-- | Make sure that a minimal set of columns are present. This routine
--   creates columns that are missing and returns the permutation of
--   columns found on the server.
ensureColumns :: OAuth2Client -> TableId -> [(String, CellType)] -> BenchM [String]

-- | Configuration options for Google Fusion Table uploading.
data FusionConfig
FusionConfig :: Maybe TableId -> Maybe String -> Maybe String -> [String] -> FusionConfig

-- | This must be Just whenever doFusionUpload is true.
fusionTableID :: FusionConfig -> Maybe TableId
fusionClientID :: FusionConfig -> Maybe String
fusionClientSecret :: FusionConfig -> Maybe String

-- | Record the ordering of columns server side.
serverColumns :: FusionConfig -> [String]

-- | The standard retry behavior when receiving HTTP network errors. Note
--   that this can retry for quite a long while so it is only to be
--   usedfrom batch applications.
stdRetry :: String -> OAuth2Client -> OAuth2Tokens -> IO a -> BenchM (Maybe a)

-- | A representaton used for creating tables. Must be isomorphic to
--   <a>BenchmarkResult</a>. This could perhaps be generated automatically
--   (e.g. from a Generic instance, or even by creating a default
--   benchmarkResult and feeding it to resultToTuple).
--   
--   Note, order is important here, because this is the preferred order
--   we'd like to have it in the Fusion table.
fusionSchema :: [(String, CellType)]

-- | Convert the Haskell representation of a benchmark result into a tuple
--   for upload to a typical database backend.
resultToTuple :: BenchmarkResult -> [(String, String)]

-- | Tuples in the format expected on the server.
type PreppedTuple = [(String, String)]

-- | The ordered set of column names that form a schema.
type Schema = [String]

-- | Check cached tokens, authenticate with server if necessary, and return
--   a bundle of the commonly needed information to speak to the Fusion
--   Table API.
authenticate :: BenchM (OAuth2Tokens, OAuth2Client, TableId)

-- | Prepare a Benchmark result for upload, matching the given Schema in
--   order and contents, which may mean adding empty fields. This function
--   requires that the Schema already contain all columns in the benchmark
--   result.
prepBenchResult :: Schema -> BenchmarkResult -> PreppedTuple

-- | Upload raw tuples that are already in the format expected on the
--   server. Returns True if the upload succeeded.
uploadRows :: [PreppedTuple] -> BenchM Bool

-- | Push the results from a single benchmark to the server.

-- | <i>Deprecated: this is subsumed by the Plugin interface and
--   uploadRows</i>
uploadBenchResult :: BenchmarkResult -> BenchM ()

-- | The type of Fusion table plugins. Currently this is a singleton type;
--   there is really only one fusion plugin.
data FusionPlug

-- | Parsed command line options provided by the user initiating
--   benchmarking.
data FusionCmdLnFlag
FusionTables :: (Maybe TableId) -> FusionCmdLnFlag
ClientID :: String -> FusionCmdLnFlag
ClientSecret :: String -> FusionCmdLnFlag
FusionTest :: FusionCmdLnFlag
instance Typeable FusionCmdLnFlag
instance Eq FusionPlug
instance Show FusionPlug
instance Ord FusionPlug
instance Read FusionPlug
instance Show FusionCmdLnFlag
instance Read FusionCmdLnFlag
instance Ord FusionCmdLnFlag
instance Eq FusionCmdLnFlag
instance Plugin FusionPlug
instance Default FusionPlug
