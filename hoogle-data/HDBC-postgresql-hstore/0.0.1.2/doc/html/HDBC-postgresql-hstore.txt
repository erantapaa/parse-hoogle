-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Manipulate data in PostgreSQL "hstore" columns.
--   
--   Some helpers to get and set hstore fields with a Data.Map interface.
@package HDBC-postgresql-hstore
@version 0.0.1.2


-- | Read and write stuff in hstore columns.
--   
--   Insert crap into table:
--   
--   <pre>
--   let myStuff = [("test", "shmest"), ("spam", "eggs"), ("sausage", "salad")]
--   withTransaction conn $ trans -&gt; run trans ("INSERT INTO test_hstore (stuff) VALUES (" ++ hsQuery myStuff  ++ ");") (hsParams myStuff)
--   </pre>
--   
--   Parse hstore data:
--   
--   <pre>
--   rows &lt;- quickQuery conn "SELECT * FROM test_hstore;" []
--   forM_ rows $ [pk, hstuff] -&gt; print $ (fromSql pk :: Integer, hsParse hstuff)
--   </pre>
module Database.HDBC.PostgreSQL.HStore

-- | Generate a placeholder string.
hsQuery :: [(String, String)] -> String

-- | Generate a parameter list.
hsParams :: [(String, String)] -> [SqlValue]

-- | Parse a SqlByteString with hstore data to a Map Text Text.
hsParse :: SqlValue -> Map Text Text

-- | Parse hstore-formatted value.
hstoreParser :: Parser (Map Text Text)

-- | Parse one key-value pair.
kvPair :: Parser (Text, Text)

-- | Grab a value, unquote, unslash.
doubleQuoted :: Parser Text
