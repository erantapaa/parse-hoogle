-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Redis support for Snap Framework
--   
@package snaplet-redis
@version 0.1.4.2


-- | Redis DB snaplet.
module Snap.Snaplet.RedisDB

-- | Snaplet's state data type
data RedisDB

-- | Perform action using Redis connection from RedisDB snaplet pool
--   (wrapper for <a>runRedis</a>).
--   
--   <pre>
--   runRedisDB database $ do
--     set "hello" "world"
--   </pre>
runRedisDB :: (MonadIO m, MonadState app m) => Simple Lens app (Snaplet RedisDB) -> Redis a -> m a

-- | A lens to retrieve the connection to Redis from the <a>RedisDB</a>
--   wrapper.
redisConnection :: Simple Lens RedisDB Connection

-- | Make RedisDB snaplet and initialize database connection.
--   
--   <pre>
--   appInit :: SnapletInit MyApp MyApp
--   appInit = makeSnaplet "app" "App with Redis child snaplet" Nothing $
--             do
--               d &lt;- nestSnaplet "" database $
--                                   redisDBInit defaultConnectInfo
--               return $ MyApp d
--   </pre>
redisDBInit :: ConnectInfo -> SnapletInit b RedisDB

-- | Make RedisDB snaplet and initialize database connection from snaplet
--   config file. Options are read from the "redis" section of the
--   application config (e.g. ./devel.cfg) or from the main section of the
--   Redis snaplet config (e.g. .<i>snaplets</i>redis/devel.cfg).
--   
--   Every field is optional and defaults to defaultConnectInfo values.
--   
--   <pre>
--   redis {
--       host = "192.168.0.42"
--       port = 31415
--       auth = "i am so secret"
--       max_connections = 1
--       max_idle_time = 0.5
--   }
--   </pre>
--   
--   Alternately, you can configure it to connect via a socket, for
--   example:
--   
--   <pre>
--   redis {
--       port = "/var/run/redis/redis.sock"
--   }
--   </pre>
--   
--   This corresponds to setting:
--   
--   <pre>
--   connectPort = UnixSocket "/var/run/redis/redis.sock"
--   </pre>
--   
--   in <a>ConnectInfo</a>. In this case, the host setting, if anything, is
--   ignored.
--   
--   <pre>
--   appInit :: SnapletInit MyApp MyApp
--   appInit = makeSnaplet "app" "App with Redis child snaplet" Nothing $
--             do
--               d &lt;- nestSnaplet "redis" database redisDBInitConf
--               return $ MyApp d
--   </pre>
redisDBInitConf :: SnapletInit b RedisDB
instance Configured PortID
