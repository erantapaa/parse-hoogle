-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A representation of the MusicXML format.
--   
@package musicxml2
@version 1.9.0


module Data.Music.MusicXml.Write
class WriteMusicXml a
write :: WriteMusicXml a => a -> [Element]


module Data.Music.MusicXml.Read


module Data.Music.MusicXml.Dynamics
data Dynamics
PPPPPP :: Dynamics
PPPPP :: Dynamics
PPPP :: Dynamics
PPP :: Dynamics
PP :: Dynamics
P :: Dynamics
MP :: Dynamics
MF :: Dynamics
F :: Dynamics
FF :: Dynamics
FFF :: Dynamics
FFFF :: Dynamics
FFFFF :: Dynamics
FFFFFF :: Dynamics
SF :: Dynamics
SFP :: Dynamics
SFPP :: Dynamics
FP :: Dynamics
RF :: Dynamics
RFZ :: Dynamics
SFZ :: Dynamics
SFFZ :: Dynamics
FZ :: Dynamics
instance Eq Dynamics
instance Ord Dynamics
instance Show Dynamics
instance Enum Dynamics
instance Bounded Dynamics
instance IsDynamics Dynamics


module Data.Music.MusicXml.Pitch
type Pitch = (PitchClass, Maybe Semitones, Octaves)
type DisplayPitch = (PitchClass, Octaves)
data PitchClass
C :: PitchClass
D :: PitchClass
E :: PitchClass
F :: PitchClass
G :: PitchClass
A :: PitchClass
B :: PitchClass
newtype Semitones

-- | Semitones, i.e 100 cent
Semitones :: Double -> Semitones
getSemitones :: Semitones -> Double
noSemitones :: Maybe Semitones
newtype Octaves

-- | Octaves, i.e. 1200 cent
Octaves :: Int -> Octaves
getOctaves :: Octaves -> Int
newtype Fifths

-- | Number of fifths upwards relative to C (i.e. F is -1, G is 1)
Fifths :: Int -> Fifths
getFifths :: Fifths -> Int
newtype Line

-- | Line number, from bottom (i.e. 1-5)
Line :: Int -> Line
getLine :: Line -> Int
data Mode
Major :: Mode
Minor :: Mode
Dorian :: Mode
Phrygian :: Mode
Lydian :: Mode
Mixolydian :: Mode
Aeolian :: Mode
Ionian :: Mode
Locrian :: Mode
NoMode :: Mode
data Accidental
DoubleFlat :: Accidental
Flat :: Accidental
Natural :: Accidental
Sharp :: Accidental
DoubleSharp :: Accidental
instance Enum Line
instance Num Line
instance Ord Line
instance Eq Line
instance Enum Fifths
instance Num Fifths
instance Ord Fifths
instance Eq Fifths
instance Integral Octaves
instance Real Octaves
instance Enum Octaves
instance Num Octaves
instance Ord Octaves
instance Eq Octaves
instance Fractional Semitones
instance Enum Semitones
instance Num Semitones
instance Ord Semitones
instance Eq Semitones
instance Show Mode
instance Enum Mode
instance Ord Mode
instance Eq Mode
instance Enum Accidental
instance Ord Accidental
instance Eq Accidental
instance Show PitchClass
instance Enum PitchClass
instance Ord PitchClass
instance Eq PitchClass
instance IsPitch Fifths
instance IsPitch DisplayPitch
instance IsPitch Pitch


module Data.Music.MusicXml.Time
type Duration = Divs
type NoteType = (NoteVal, Maybe NoteSize)
newtype Divs

-- | Sounding time in ticks
Divs :: Int -> Divs
getDivs :: Divs -> Int
newtype NoteVal

-- | Notated time in fractions, in <tt>[2^^i | i &lt;- [-10..3]]</tt>.
NoteVal :: Rational -> NoteVal
getNoteVal :: NoteVal -> Rational
data NoteSize
SizeFull :: NoteSize
SizeCue :: NoteSize
SizeLarge :: NoteSize
newtype Beat

-- | Time nominator
Beat :: Int -> Beat
getBeat :: Beat -> Int
newtype BeatType

-- | Time denominator
BeatType :: Int -> BeatType
getBeatType :: BeatType -> Int
newtype Tempo

-- | Tempo in BPM
Tempo :: Double -> Tempo
getTempo :: Tempo -> Double
instance Show Tempo
instance RealFrac Tempo
instance Real Tempo
instance Fractional Tempo
instance Enum Tempo
instance Num Tempo
instance Ord Tempo
instance Eq Tempo
instance Enum BeatType
instance Num BeatType
instance Ord BeatType
instance Eq BeatType
instance Enum Beat
instance Num Beat
instance Ord Beat
instance Eq Beat
instance Bounded NoteSize
instance Enum NoteSize
instance Ord NoteSize
instance Eq NoteSize
instance Show NoteVal
instance RealFrac NoteVal
instance Real NoteVal
instance Fractional NoteVal
instance Enum NoteVal
instance Num NoteVal
instance Ord NoteVal
instance Eq NoteVal
instance Show Divs
instance Enum Divs
instance Integral Divs
instance Real Divs
instance Num Divs
instance Ord Divs
instance Eq Divs


module Data.Music.MusicXml.Score
data Score
Partwise :: ScoreAttrs -> ScoreHeader -> [(PartAttrs, [(MeasureAttrs, Music)])] -> Score
Timewise :: ScoreAttrs -> ScoreHeader -> [(MeasureAttrs, [(PartAttrs, Music)])] -> Score
data ScoreHeader
ScoreHeader :: (Maybe String) -> (Maybe String) -> (Maybe Identification) -> PartList -> ScoreHeader
data Identification
Identification :: [Creator] -> Identification
data Creator
Creator :: String -> String -> Creator
data Defaults
Defaults :: Defaults
data ScoreAttrs
ScoreAttrs :: [Int] -> ScoreAttrs
data PartAttrs
PartAttrs :: String -> PartAttrs
data MeasureAttrs
MeasureAttrs :: Int -> MeasureAttrs
newtype PartList
PartList :: [PartListElem] -> PartList
getPartList :: PartList -> [PartListElem]
data PartListElem
Part :: String -> String -> (Maybe String) -> (Maybe String) -> (Maybe String) -> PartListElem
Group :: Level -> StartStop -> String -> (Maybe String) -> (Maybe GroupSymbol) -> (Maybe GroupBarlines) -> Bool -> PartListElem
data GroupSymbol
GroupBrace :: GroupSymbol
GroupLine :: GroupSymbol
GroupBracket :: GroupSymbol
GroupSquare :: GroupSymbol
NoGroupSymbol :: GroupSymbol
data GroupBarlines
GroupBarLines :: GroupBarlines
GroupNoBarLines :: GroupBarlines
GroupMensurstrich :: GroupBarlines
newtype Music
Music :: [MusicElem] -> Music
getMusic :: Music -> [MusicElem]
data MusicElem
MusicAttributes :: Attributes -> MusicElem
MusicBackup :: Duration -> MusicElem
MusicForward :: Duration -> MusicElem
MusicNote :: Note -> MusicElem
MusicDirection :: Direction -> MusicElem
MusicHarmony :: MusicElem
MusicFiguredBass :: MusicElem
MusicPrint :: MusicElem
MusicSound :: MusicElem
MusicBarline :: MusicElem
MusicGrouping :: MusicElem
MusicLink :: MusicElem
MusicBookmark :: MusicElem
data Attributes
Divisions :: Divs -> Attributes
Key :: Fifths -> Mode -> Attributes
Time :: TimeSignature -> Attributes
Staves :: Natural -> Attributes
PartSymbol :: Attributes
Instruments :: Natural -> Attributes
Clef :: ClefSign -> Line -> Attributes
StaffDetails :: Attributes
Transpose :: Attributes
Directive :: Attributes
MeasureStyle :: Attributes
data TimeSignature
CommonTime :: TimeSignature
CutTime :: TimeSignature
DivTime :: Beat -> BeatType -> TimeSignature
data ClefSign
GClef :: ClefSign
CClef :: ClefSign
FClef :: ClefSign
PercClef :: ClefSign
TabClef :: ClefSign
data Note
Note :: FullNote -> Duration -> [Tie] -> NoteProps -> Note
CueNote :: FullNote -> Duration -> NoteProps -> Note
GraceNote :: FullNote -> [Tie] -> NoteProps -> Note
data FullNote
Pitched :: IsChord -> Pitch -> FullNote
Unpitched :: IsChord -> (Maybe DisplayPitch) -> FullNote
Rest :: IsChord -> (Maybe DisplayPitch) -> FullNote
type IsChord = Bool
noChord :: IsChord
noTies :: [Tie]
type Tie = StartStop
data NoteProps
NoteProps :: Maybe String -> Maybe Natural -> Maybe NoteType -> Natural -> Maybe (Accidental, Bool, Bool) -> Maybe (Natural, Natural) -> Maybe StemDirection -> Maybe (NoteHead, Bool, Bool) -> Maybe String -> Maybe Natural -> Maybe (Level, BeamType) -> [Notation] -> [Lyric] -> NoteProps
noteInstrument :: NoteProps -> Maybe String
noteVoice :: NoteProps -> Maybe Natural
noteType :: NoteProps -> Maybe NoteType
noteDots :: NoteProps -> Natural
noteAccidental :: NoteProps -> Maybe (Accidental, Bool, Bool)
noteTimeMod :: NoteProps -> Maybe (Natural, Natural)
noteStem :: NoteProps -> Maybe StemDirection
noteNoteHead :: NoteProps -> Maybe (NoteHead, Bool, Bool)
noteNoteHeadText :: NoteProps -> Maybe String
noteStaff :: NoteProps -> Maybe Natural
noteBeam :: NoteProps -> Maybe (Level, BeamType)
noteNotations :: NoteProps -> [Notation]
noteLyrics :: NoteProps -> [Lyric]
class HasNoteProps a
modifyNoteProps :: HasNoteProps a => (NoteProps -> NoteProps) -> a -> a
data Notation
Tied :: StartStopContinue -> Notation
Slur :: Level -> StartStopContinue -> Notation
Tuplet :: Level -> StartStopContinue -> Notation
Glissando :: Level -> StartStopContinue -> LineType -> (Maybe String) -> Notation
Slide :: Level -> StartStopContinue -> LineType -> (Maybe String) -> Notation
Ornaments :: [(Ornament, [Accidental])] -> Notation
Technical :: [Technical] -> Notation
Articulations :: [Articulation] -> Notation
DynamicNotation :: Dynamics -> Notation
Fermata :: FermataSign -> Notation
Arpeggiate :: Notation
NonArpeggiate :: Notation
AccidentalMark :: Accidental -> Notation
OtherNotation :: String -> Notation
data FermataSign
NormalFermata :: FermataSign
AngledFermata :: FermataSign
SquaredFermata :: FermataSign
data Articulation
Accent :: Articulation
StrongAccent :: Articulation
Staccato :: Articulation
Tenuto :: Articulation
DetachedLegato :: Articulation
Staccatissimo :: Articulation
Spiccato :: Articulation
Scoop :: Articulation
Plop :: Articulation
Doit :: Articulation
Falloff :: Articulation
BreathMark :: Articulation
Caesura :: Articulation
Stress :: Articulation
Unstress :: Articulation
OtherArticulation :: Articulation
data Ornament
TrillMark :: Ornament
Turn :: Ornament
DelayedTurn :: Ornament
InvertedTurn :: Ornament
DelayedInvertedTurn :: Ornament
VerticalTurn :: Ornament
Shake :: Ornament
WavyLine :: Ornament
Mordent :: Ornament
InvertedMordent :: Ornament
Schleifer :: Ornament
Tremolo :: Natural -> Ornament
OtherOrnament :: String -> Ornament
data Technical
UpBow :: Technical
DownBow :: Technical
Harmonic :: Technical
OpenString :: Technical
ThumbPosition :: Technical
Fingering :: Technical
Pluck :: Technical
DoubleTongue :: Technical
TripleTongue :: Technical
Stopped :: Technical
SnapPizzicato :: Technical
Fret :: Technical
String :: Technical
HammerOn :: Technical
PullOff :: Technical
Bend :: Technical
Tap :: Technical
Heel :: Technical
Toe :: Technical
Fingernails :: Technical
Hole :: Technical
Arrow :: Technical
Handbell :: Technical
OtherTechnical :: String -> Technical
data Direction
Rehearsal :: String -> Direction
Segno :: Direction
Words :: String -> Direction
Coda :: Direction
Crescendo :: StartStop -> Direction
Diminuendo :: StartStop -> Direction
Dynamics :: Dynamics -> Direction
Dashes :: Level -> StartStop -> Direction
Bracket :: Direction
Pedal :: StartStopChange -> Direction
Metronome :: NoteVal -> Bool -> Tempo -> Direction
OctaveShift :: Direction
HarpPedals :: Direction
Damp :: Direction
DampAll :: Direction
EyeGlasses :: Direction
StringMute :: Direction
Scordatura :: Direction
Image :: Direction
PrincipalVoice :: Direction
AccordionRegistration :: Direction
Percussion :: Direction
OtherDirection :: String -> Direction
data Lyric
Lyric :: Lyric
type Pitch = (PitchClass, Maybe Semitones, Octaves)
type DisplayPitch = (PitchClass, Octaves)
data PitchClass
newtype Semitones

-- | Semitones, i.e 100 cent
Semitones :: Double -> Semitones
getSemitones :: Semitones -> Double
noSemitones :: Maybe Semitones
newtype Octaves

-- | Octaves, i.e. 1200 cent
Octaves :: Int -> Octaves
getOctaves :: Octaves -> Int
newtype Fifths

-- | Number of fifths upwards relative to C (i.e. F is -1, G is 1)
Fifths :: Int -> Fifths
getFifths :: Fifths -> Int
newtype Line

-- | Line number, from bottom (i.e. 1-5)
Line :: Int -> Line
getLine :: Line -> Int
data Mode
Major :: Mode
Minor :: Mode
Dorian :: Mode
Phrygian :: Mode
Lydian :: Mode
Mixolydian :: Mode
Aeolian :: Mode
Ionian :: Mode
Locrian :: Mode
NoMode :: Mode
data Accidental
DoubleFlat :: Accidental
Flat :: Accidental
Natural :: Accidental
Sharp :: Accidental
DoubleSharp :: Accidental
type Duration = Divs
type NoteType = (NoteVal, Maybe NoteSize)
newtype Divs

-- | Sounding time in ticks
Divs :: Int -> Divs
getDivs :: Divs -> Int
newtype NoteVal

-- | Notated time in fractions, in <tt>[2^^i | i &lt;- [-10..3]]</tt>.
NoteVal :: Rational -> NoteVal
getNoteVal :: NoteVal -> Rational
data NoteSize
SizeFull :: NoteSize
SizeCue :: NoteSize
SizeLarge :: NoteSize
newtype Beat

-- | Time nominator
Beat :: Int -> Beat
getBeat :: Beat -> Int
newtype BeatType

-- | Time denominator
BeatType :: Int -> BeatType
getBeatType :: BeatType -> Int
data Dynamics
PPPPPP :: Dynamics
PPPPP :: Dynamics
PPPP :: Dynamics
PPP :: Dynamics
PP :: Dynamics
P :: Dynamics
MP :: Dynamics
MF :: Dynamics
F :: Dynamics
FF :: Dynamics
FFF :: Dynamics
FFFF :: Dynamics
FFFFF :: Dynamics
FFFFFF :: Dynamics
SF :: Dynamics
SFP :: Dynamics
SFPP :: Dynamics
FP :: Dynamics
RF :: Dynamics
RFZ :: Dynamics
SFZ :: Dynamics
SFFZ :: Dynamics
FZ :: Dynamics
data StemDirection
StemDown :: StemDirection
StemUp :: StemDirection
StemNone :: StemDirection
StemDouble :: StemDirection
data NoteHead
SlashNoteHead :: NoteHead
TriangleNoteHead :: NoteHead
DiamondNoteHead :: NoteHead
SquareNoteHead :: NoteHead
CrossNoteHead :: NoteHead
XNoteHead :: NoteHead
CircleXNoteHead :: NoteHead
InvertedTriangleNoteHead :: NoteHead
ArrowDownNoteHead :: NoteHead
ArrowUpNoteHead :: NoteHead
SlashedNoteHead :: NoteHead
BackSlashedNoteHead :: NoteHead
NormalNoteHead :: NoteHead
ClusterNoteHead :: NoteHead
CircleDotNoteHead :: NoteHead
LeftTriangleNoteHead :: NoteHead
RectangleNoteHead :: NoteHead
NoNoteHead :: NoteHead
data LineType
Solid :: LineType
Dashed :: LineType
Dotted :: LineType
Wavy :: LineType
newtype Level
Level :: Max8 -> Level
getLevel :: Level -> Max8
data BeamType
BeginBeam :: BeamType
ContinueBeam :: BeamType
EndBeam :: BeamType
ForwardHook :: BeamType
BackwardHook :: BeamType
type StartStop = StartStopContinueChange
type StartStopChange = StartStopContinueChange
type StartStopContinue = StartStopContinueChange
data StartStopContinueChange
Start :: StartStopContinueChange
Stop :: StartStopContinueChange
Continue :: StartStopContinueChange
Change :: StartStopContinueChange
instance Num Level
instance Show Level
instance Eq Level
instance Eq ClefSign
instance Ord ClefSign
instance Enum ClefSign
instance Bounded ClefSign
instance Semigroup Music
instance Monoid Music
instance HasNoteProps MusicElem
instance HasNoteProps Note
instance Monoid PartList
instance Semigroup PartList
instance Default PartList


-- | A Haskell representation of MusicXML. You may want to use the
--   <a>Data.Music.MusicXml.Simple</a> module to generate the
--   representation.
--   
--   For an introduction to MusicXML, see
--   <a>http://www.makemusic.com/musicxml/tutorial</a>.
module Data.Music.MusicXml
data Score
Partwise :: ScoreAttrs -> ScoreHeader -> [(PartAttrs, [(MeasureAttrs, Music)])] -> Score
Timewise :: ScoreAttrs -> ScoreHeader -> [(MeasureAttrs, [(PartAttrs, Music)])] -> Score
data ScoreHeader
ScoreHeader :: (Maybe String) -> (Maybe String) -> (Maybe Identification) -> PartList -> ScoreHeader
data Identification
Identification :: [Creator] -> Identification
data Creator
Creator :: String -> String -> Creator
data Defaults
Defaults :: Defaults
data ScoreAttrs
ScoreAttrs :: [Int] -> ScoreAttrs
data PartAttrs
PartAttrs :: String -> PartAttrs
data MeasureAttrs
MeasureAttrs :: Int -> MeasureAttrs
newtype PartList
PartList :: [PartListElem] -> PartList
getPartList :: PartList -> [PartListElem]
data PartListElem
Part :: String -> String -> (Maybe String) -> (Maybe String) -> (Maybe String) -> PartListElem
Group :: Level -> StartStop -> String -> (Maybe String) -> (Maybe GroupSymbol) -> (Maybe GroupBarlines) -> Bool -> PartListElem
newtype Music
Music :: [MusicElem] -> Music
getMusic :: Music -> [MusicElem]
data MusicElem
MusicAttributes :: Attributes -> MusicElem
MusicBackup :: Duration -> MusicElem
MusicForward :: Duration -> MusicElem
MusicNote :: Note -> MusicElem
MusicDirection :: Direction -> MusicElem
MusicHarmony :: MusicElem
MusicFiguredBass :: MusicElem
MusicPrint :: MusicElem
MusicSound :: MusicElem
MusicBarline :: MusicElem
MusicGrouping :: MusicElem
MusicLink :: MusicElem
MusicBookmark :: MusicElem
data Attributes
Divisions :: Divs -> Attributes
Key :: Fifths -> Mode -> Attributes
Time :: TimeSignature -> Attributes
Staves :: Natural -> Attributes
PartSymbol :: Attributes
Instruments :: Natural -> Attributes
Clef :: ClefSign -> Line -> Attributes
StaffDetails :: Attributes
Transpose :: Attributes
Directive :: Attributes
MeasureStyle :: Attributes
data TimeSignature
CommonTime :: TimeSignature
CutTime :: TimeSignature
DivTime :: Beat -> BeatType -> TimeSignature
data ClefSign
GClef :: ClefSign
CClef :: ClefSign
FClef :: ClefSign
PercClef :: ClefSign
TabClef :: ClefSign
data Note
Note :: FullNote -> Duration -> [Tie] -> NoteProps -> Note
CueNote :: FullNote -> Duration -> NoteProps -> Note
GraceNote :: FullNote -> [Tie] -> NoteProps -> Note
data FullNote
Pitched :: IsChord -> Pitch -> FullNote
Unpitched :: IsChord -> (Maybe DisplayPitch) -> FullNote
Rest :: IsChord -> (Maybe DisplayPitch) -> FullNote
type IsChord = Bool
noChord :: IsChord
type Tie = StartStop
noTies :: [Tie]
data NoteProps
NoteProps :: Maybe String -> Maybe Natural -> Maybe NoteType -> Natural -> Maybe (Accidental, Bool, Bool) -> Maybe (Natural, Natural) -> Maybe StemDirection -> Maybe (NoteHead, Bool, Bool) -> Maybe String -> Maybe Natural -> Maybe (Level, BeamType) -> [Notation] -> [Lyric] -> NoteProps
noteInstrument :: NoteProps -> Maybe String
noteVoice :: NoteProps -> Maybe Natural
noteType :: NoteProps -> Maybe NoteType
noteDots :: NoteProps -> Natural
noteAccidental :: NoteProps -> Maybe (Accidental, Bool, Bool)
noteTimeMod :: NoteProps -> Maybe (Natural, Natural)
noteStem :: NoteProps -> Maybe StemDirection
noteNoteHead :: NoteProps -> Maybe (NoteHead, Bool, Bool)
noteNoteHeadText :: NoteProps -> Maybe String
noteStaff :: NoteProps -> Maybe Natural
noteBeam :: NoteProps -> Maybe (Level, BeamType)
noteNotations :: NoteProps -> [Notation]
noteLyrics :: NoteProps -> [Lyric]
class HasNoteProps a
modifyNoteProps :: HasNoteProps a => (NoteProps -> NoteProps) -> a -> a
data Notation
Tied :: StartStopContinue -> Notation
Slur :: Level -> StartStopContinue -> Notation
Tuplet :: Level -> StartStopContinue -> Notation
Glissando :: Level -> StartStopContinue -> LineType -> (Maybe String) -> Notation
Slide :: Level -> StartStopContinue -> LineType -> (Maybe String) -> Notation
Ornaments :: [(Ornament, [Accidental])] -> Notation
Technical :: [Technical] -> Notation
Articulations :: [Articulation] -> Notation
DynamicNotation :: Dynamics -> Notation
Fermata :: FermataSign -> Notation
Arpeggiate :: Notation
NonArpeggiate :: Notation
AccidentalMark :: Accidental -> Notation
OtherNotation :: String -> Notation
data Articulation
Accent :: Articulation
StrongAccent :: Articulation
Staccato :: Articulation
Tenuto :: Articulation
DetachedLegato :: Articulation
Staccatissimo :: Articulation
Spiccato :: Articulation
Scoop :: Articulation
Plop :: Articulation
Doit :: Articulation
Falloff :: Articulation
BreathMark :: Articulation
Caesura :: Articulation
Stress :: Articulation
Unstress :: Articulation
OtherArticulation :: Articulation
data Ornament
TrillMark :: Ornament
Turn :: Ornament
DelayedTurn :: Ornament
InvertedTurn :: Ornament
DelayedInvertedTurn :: Ornament
VerticalTurn :: Ornament
Shake :: Ornament
WavyLine :: Ornament
Mordent :: Ornament
InvertedMordent :: Ornament
Schleifer :: Ornament
Tremolo :: Natural -> Ornament
OtherOrnament :: String -> Ornament
data Technical
UpBow :: Technical
DownBow :: Technical
Harmonic :: Technical
OpenString :: Technical
ThumbPosition :: Technical
Fingering :: Technical
Pluck :: Technical
DoubleTongue :: Technical
TripleTongue :: Technical
Stopped :: Technical
SnapPizzicato :: Technical
Fret :: Technical
String :: Technical
HammerOn :: Technical
PullOff :: Technical
Bend :: Technical
Tap :: Technical
Heel :: Technical
Toe :: Technical
Fingernails :: Technical
Hole :: Technical
Arrow :: Technical
Handbell :: Technical
OtherTechnical :: String -> Technical
data Direction
Rehearsal :: String -> Direction
Segno :: Direction
Words :: String -> Direction
Coda :: Direction
Crescendo :: StartStop -> Direction
Diminuendo :: StartStop -> Direction
Dynamics :: Dynamics -> Direction
Dashes :: Level -> StartStop -> Direction
Bracket :: Direction
Pedal :: StartStopChange -> Direction
Metronome :: NoteVal -> Bool -> Tempo -> Direction
OctaveShift :: Direction
HarpPedals :: Direction
Damp :: Direction
DampAll :: Direction
EyeGlasses :: Direction
StringMute :: Direction
Scordatura :: Direction
Image :: Direction
PrincipalVoice :: Direction
AccordionRegistration :: Direction
Percussion :: Direction
OtherDirection :: String -> Direction
data Lyric
Lyric :: Lyric
type Pitch = (PitchClass, Maybe Semitones, Octaves)
type DisplayPitch = (PitchClass, Octaves)
data PitchClass
newtype Semitones

-- | Semitones, i.e 100 cent
Semitones :: Double -> Semitones
getSemitones :: Semitones -> Double
noSemitones :: Maybe Semitones
newtype Octaves

-- | Octaves, i.e. 1200 cent
Octaves :: Int -> Octaves
getOctaves :: Octaves -> Int
newtype Fifths

-- | Number of fifths upwards relative to C (i.e. F is -1, G is 1)
Fifths :: Int -> Fifths
getFifths :: Fifths -> Int
newtype Line

-- | Line number, from bottom (i.e. 1-5)
Line :: Int -> Line
getLine :: Line -> Int
data Mode
Major :: Mode
Minor :: Mode
Dorian :: Mode
Phrygian :: Mode
Lydian :: Mode
Mixolydian :: Mode
Aeolian :: Mode
Ionian :: Mode
Locrian :: Mode
NoMode :: Mode
data Accidental
DoubleFlat :: Accidental
Flat :: Accidental
Natural :: Accidental
Sharp :: Accidental
DoubleSharp :: Accidental
type Duration = Divs
type NoteType = (NoteVal, Maybe NoteSize)
newtype Divs

-- | Sounding time in ticks
Divs :: Int -> Divs
getDivs :: Divs -> Int
newtype NoteVal

-- | Notated time in fractions, in <tt>[2^^i | i &lt;- [-10..3]]</tt>.
NoteVal :: Rational -> NoteVal
getNoteVal :: NoteVal -> Rational
data NoteSize
SizeFull :: NoteSize
SizeCue :: NoteSize
SizeLarge :: NoteSize
newtype Beat

-- | Time nominator
Beat :: Int -> Beat
getBeat :: Beat -> Int
newtype BeatType

-- | Time denominator
BeatType :: Int -> BeatType
getBeatType :: BeatType -> Int
data Dynamics
data StemDirection
StemDown :: StemDirection
StemUp :: StemDirection
StemNone :: StemDirection
StemDouble :: StemDirection
data NoteHead
SlashNoteHead :: NoteHead
TriangleNoteHead :: NoteHead
DiamondNoteHead :: NoteHead
SquareNoteHead :: NoteHead
CrossNoteHead :: NoteHead
XNoteHead :: NoteHead
CircleXNoteHead :: NoteHead
InvertedTriangleNoteHead :: NoteHead
ArrowDownNoteHead :: NoteHead
ArrowUpNoteHead :: NoteHead
SlashedNoteHead :: NoteHead
BackSlashedNoteHead :: NoteHead
NormalNoteHead :: NoteHead
ClusterNoteHead :: NoteHead
CircleDotNoteHead :: NoteHead
LeftTriangleNoteHead :: NoteHead
RectangleNoteHead :: NoteHead
NoNoteHead :: NoteHead
data LineType
Solid :: LineType
Dashed :: LineType
Dotted :: LineType
Wavy :: LineType
newtype Level
Level :: Max8 -> Level
getLevel :: Level -> Max8
data BeamType
BeginBeam :: BeamType
ContinueBeam :: BeamType
EndBeam :: BeamType
ForwardHook :: BeamType
BackwardHook :: BeamType
type StartStop = StartStopContinueChange
type StartStopChange = StartStopContinueChange
type StartStopContinue = StartStopContinueChange
data StartStopContinueChange
Start :: StartStopContinueChange
Stop :: StartStopContinueChange
Continue :: StartStopContinueChange
Change :: StartStopContinueChange

-- | Render a score as MusicXML.
toXml :: Score -> Element

-- | Render a score as a MusicXML string.
showXml :: Score -> String


-- | Provides smart constructors for the MusicXML representation.
module Data.Music.MusicXml.Simple

-- | Create a single-part score.
--   
--   <pre>
--   fromPart title composer partName measures
--   </pre>
--   
--   Example:
--   
--   <pre>
--   <a>fromPart</a> "Suite" "Bach" "Cello solo" []
--   </pre>
fromPart :: String -> String -> String -> [Music] -> Score

-- | Create a multi-part score.
--   
--   <pre>
--   fromParts title composer partList parts
--   </pre>
--   
--   Example:
--   
--   <pre>
--   <a>fromParts</a> "4'33" "Cage" (<a>partList</a> ["Violin", "Viola", "Cello"]) [[]]
--   </pre>
fromParts :: String -> String -> PartList -> [[Music]] -> Score

-- | Create a part list from instrument names.
partList :: [String] -> PartList

-- | Create a part list from instrument names and displayed names (some
--   applications need the name to be something specific, so use displayed
--   name to override).
partListDisplay :: [(String, String)] -> PartList

-- | Create a part list from instrument names and abbreviations.
partListAbbr :: [(String, String)] -> PartList

-- | Enclose the given parts in a bracket.
bracket :: PartList -> PartList

-- | Enclose the given parts in a brace.
brace :: PartList -> PartList

-- | Convenient synonym for <a>mconcat</a>, allowing us to write things
--   like
--   
--   <pre>
--   measure [
--      beam [ 
--          note c  (1/8), 
--          note d  (1/8),
--          note e  (1/8),
--          note f  (1/8) 
--      ],
--      tuplet 3 2 [ 
--          note g  (1/4),
--          note a  (1/4),
--          note b  (1/4) 
--      ]
--   ]
--   </pre>
measure :: [Music] -> Music

-- | Convenient synonym for <a>mconcat</a>.
bar :: [Music] -> Music
trebleClef :: Music
altoClef :: Music
bassClef :: Music
defaultClef :: Music

-- | Create a clef.
clef :: ClefSign -> Line -> Music
defaultKey :: Music

-- | Create a key signature.
key :: Fifths -> Mode -> Music

-- | Set the tick division to the default value.
defaultDivisions :: Music

-- | Define the number of ticks per quarter note.
divisions :: Divs -> Music
commonTime :: Music
cutTime :: Music

-- | Create a time signature.
time :: Beat -> BeatType -> Music
staves :: Int -> Music

-- | Create a metronome mark.
metronome :: NoteVal -> Tempo -> Music

-- | Create a metronome mark.
metronome' :: NoteVal -> Bool -> Tempo -> Music
backup :: Duration -> Music
forward :: Duration -> Music

-- | Create a rest.
--   
--   <pre>
--   rest (1/4)
--   rest (3/8)
--   rest quarter
--   rest (dotted eight)
--   </pre>
rest :: NoteVal -> Music

-- | Create a single note.
--   
--   <pre>
--   note c   (1/4)
--   note fs_ (3/8)
--   note c   quarter
--   note (c + pure fifth) (dotted eight)
--   </pre>
note :: Pitch -> NoteVal -> Music

-- | Create a chord.
--   
--   <pre>
--   chord [c,eb,fs_] (3/8)
--   chord [c,d,e] quarter
--   chord [c,d,e] (dotted eight)
--   </pre>
chord :: [Pitch] -> NoteVal -> Music
setVoice :: Int -> Music -> Music
dot :: Music -> Music
tuplet :: Int -> Int -> Music -> Music
setNoteVal :: NoteVal -> Music -> Music
separateDots :: NoteVal -> (NoteVal, Int)
beam :: Music -> Music
beginBeam :: Music -> Music
continueBeam :: Music -> Music
endBeam :: Music -> Music
beginTie :: Music -> Music
endTie :: Music -> Music
setNoteHead :: NoteHead -> Music -> Music
addNotation :: Notation -> Music -> Music
beginGliss :: Music -> Music
endGliss :: Music -> Music
beginSlide :: Music -> Music
endSlide :: Music -> Music
fermata :: FermataSign -> Music -> Music
breathMark :: Music -> Music
caesura :: Music -> Music
addTechnical :: Technical -> Music -> Music
addArticulation :: Articulation -> Music -> Music
upbow :: Music -> Music
downbow :: Music -> Music
harmonic :: Music -> Music
openString :: Music -> Music
slur :: Music -> Music
beginSlur :: Music -> Music
endSlur :: Music -> Music
staccato :: Music -> Music
tenuto :: Music -> Music
spiccato :: Music -> Music
staccatissimo :: Music -> Music
accent :: Music -> Music
strongAccent :: Music -> Music
scoop :: Music -> Music
plop :: Music -> Music
doit :: Music -> Music
falloff :: Music -> Music
stress :: Music -> Music
unstress :: Music -> Music
trill :: Music -> Music
turn :: Bool -> Bool -> Music -> Music
shake :: Music -> Music
mordent :: Bool -> Music -> Music
tremolo :: Int -> Music -> Music
cresc :: Music -> Music
dim :: Music -> Music
beginCresc :: Music
endCresc :: Music
beginDim :: Music
endDim :: Music
dynamic :: Dynamics -> Music
crescFrom :: Dynamics -> Music -> Music
crescTo :: Dynamics -> Music -> Music
crescFromTo :: Dynamics -> Dynamics -> Music -> Music
dimFrom :: Dynamics -> Music -> Music
dimTo :: Dynamics -> Music -> Music
dimFromTo :: Dynamics -> Dynamics -> Music -> Music
text :: String -> Music
rehearsal :: String -> Music
segno :: Music
coda :: Music
mapMusic :: (Attributes -> Attributes) -> (Note -> Note) -> (Direction -> Direction) -> Music -> Music
foldMusic :: Monoid m => (Attributes -> r) -> (Note -> r) -> (Direction -> r) -> (r -> m) -> Music -> m
instance Default NoteProps
instance Default FullNote
instance Default Divs
instance Default Note
instance Default ScoreHeader
instance Default ScoreAttrs
