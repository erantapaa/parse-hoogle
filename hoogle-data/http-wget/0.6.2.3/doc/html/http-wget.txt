-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Provide a simple HTTP client interface by wrapping the wget
command line tool. (deprecated)
--   
--   This provides the simplest interface I could imagine to making HTTP
--   requests. It supports GET and POST parameters. Since it simply wraps
--   the WGET program, there are no library dependencies, and it
--   automatically gets HTTPS.
@package http-wget
@version 0.6.2.3


-- | Provide a simple HTTP client interface by wrapping the wget command
--   line tool.
module Network.HTTP.Wget

-- | Get a response from the given URL with the given parameters.
wget :: (MonadIO m, Failure WgetException m) => String -> [(String, String)] -> [(String, String)] -> m String

-- | Get a response from the given URL with the given parameters, including
--   headers.
wget' :: (MonadIO m, Failure WgetException m) => String -> [(String, String)] -> [(String, String)] -> m ([(String, String)], String)

-- | Same as <a>wget</a>, but easier to access the exception on failure.
wgetSplit :: (Monad m, Failure WgetException m) => String -> [(String, String)] -> [(String, String)] -> IO (m String)

-- | Same as wget', but easier to access the exception on failure.
wgetSplit' :: (Monad m, Failure WgetException m) => String -> [(String, String)] -> [(String, String)] -> IO (m ([(String, String)], String))
newtype WgetException
WgetException :: String -> WgetException
instance Typeable WgetException
instance Show WgetException
instance MonadIO SplitHelper
instance Failure WgetException SplitHelper
instance Monad SplitHelper
instance Applicative SplitHelper
instance Functor SplitHelper
instance Exception WgetException
