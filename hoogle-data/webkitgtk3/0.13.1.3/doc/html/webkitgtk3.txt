-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Binding to the Webkit library.
--   
@package webkitgtk3
@version 0.13.1.3

module Graphics.UI.Gtk.WebKit.DOM.Traversal
data NodeFilter
class NodeFilterClass a
instance NodeFilterClass NodeFilter

module Graphics.UI.Gtk.WebKit.DOM.Stylesheets
data MediaList
class MediaListClass a
instance MediaListClass MediaList

module Graphics.UI.Gtk.WebKit.DOM.Ranges
data DOMRange
class DOMRangeClass a
instance DOMRangeClass DOMRange

module Graphics.UI.Gtk.WebKit.DOM.Events
data Event
class EventClass a
instance EventClass Event

module Graphics.UI.Gtk.WebKit.DOM.Css
data CSSRule
class CSSRuleClass a
instance CSSRuleClass CSSRule


-- | Object used to communicate with the application when downloading
module Graphics.UI.Gtk.WebKit.Download
data Download
class GObjectClass o => DownloadClass o
data DownloadError
DownloadErrorCancelledByUser :: DownloadError
DownloadErrorDestination :: DownloadError
DownloadErrorNetwork :: DownloadError
data DownloadStatus
DownloadStatusError :: DownloadStatus
DownloadStatusCreated :: DownloadStatus
DownloadStatusStarted :: DownloadStatus
DownloadStatusCancelled :: DownloadStatus
DownloadStatusFinished :: DownloadStatus

-- | Create a new <a>Download</a> instance for the given
--   <a>NetworkRequest</a>
--   
--   Object used to communicate with the application when downloading.
downloadNew :: NetworkRequestClass request => request -> IO Download

-- | Initiates the <a>Download</a>.
--   
--   Notice that you must have set the destination-uri property before
--   calling this function.
downloadStart :: DownloadClass self => self -> IO ()

-- | Cancels the <a>Download</a>.
downloadCancel :: DownloadClass self => self -> IO ()

-- | Retrieves the URI from <a>Download</a> which is being downloaded.
downloadGetUri :: (DownloadClass self, GlibString string) => self -> IO (Maybe string)

-- | Retrieves the <a>NetworkRequest</a> that backs the download process.
downloadGetNetworkRequest :: DownloadClass self => self -> IO NetworkRequest

-- | Retrieves the <a>NetworkResponse</a> object that backs the download
--   process.
--   
--   <ul>
--   <li>Since 1.1.16</li>
--   </ul>
downloadGetNetworkResponse :: DownloadClass self => self -> IO NetworkResponse

-- | Retrieves the filename that was suggested by the server, or the one
--   derived from the URI.
downloadGetSuggestedFilename :: (DownloadClass self, GlibString string) => self -> IO (Maybe string)

-- | Obtains the URI to which the downloaded file will be written.
--   
--   It is set by Application before call <a>downloadStart</a>
downloadGetDestinationUri :: (DownloadClass self, GlibString string) => self -> IO (Maybe string)

-- | Determines the current progress of the <a>Download</a>
downloadGetProgress :: DownloadClass self => self -> IO Double

-- | Return elapsed time for the <a>Download</a> in seconds. includeing any
--   fractional part.
--   
--   If the <a>Download</a> is finished, had an error or was cancelled,
--   this is the time between its start and the event.
downloadGetElapsedTime :: DownloadClass self => self -> IO Double

-- | Returns the excepted total size of the download.
--   
--   This is expected because the server may provide incorrect or missing
--   Content-Length.
--   
--   Notice that this may grow over time.
downloadGetTotalSize :: DownloadClass self => self -> IO Int

-- | Returns the current already downleaded size
downloadGetCurrentSize :: DownloadClass self => self -> IO Int

-- | Obtains the current status of the <a>Download</a> as
--   <a>DownloadStatus</a>
downloadGetStatus :: DownloadClass self => self -> IO DownloadStatus

-- | Defines the URI that should be used to save the downloaded file to.
downloadSetDestinationUri :: (DownloadClass self, GlibString string) => self -> string -> IO ()

-- | The length of the data already downloaded
--   
--   Default value: 0
--   
--   <ul>
--   <li>Since 1.1.2</li>
--   </ul>
currentSize :: DownloadClass self => ReadAttr self Int

-- | The URI of the save location for this download.
--   
--   Default value: ""
--   
--   <ul>
--   <li>Since 1.1.2</li>
--   </ul>
destinationUri :: (DownloadClass self, GlibString string) => Attr self (Maybe string)

-- | The NetworkRequest instance associated with the download.
--   
--   <ul>
--   <li>Since 1.1.2</li>
--   </ul>
networkRequest :: DownloadClass self => Attr self NetworkRequest

-- | The NetworkResponse instance associated with the download.
--   
--   <ul>
--   <li>Since 1.1.16</li>
--   </ul>
networkResponse :: DownloadClass self => Attr self NetworkResponse

-- | Determines the current progress of the download. Notice that, although
--   the progress changes are reported as soon as possible, the emission of
--   the notify signal for this property is throttled, for the benefit of
--   download managers. If you care about every update, use <a>Download</a>
--   : currentSize.
--   
--   Allowed values: [0,1]
--   
--   Default value: 1
--   
--   <ul>
--   <li>Since 1.1.2</li>
--   </ul>
progress :: DownloadClass self => ReadAttr self Double

-- | Determines the current status of the download.
--   
--   Default value: <a>DownloadStatusCreated</a>
--   
--   <ul>
--   <li>Since 1.1.2</li>
--   </ul>
status :: DownloadClass self => ReadAttr self DownloadStatus

-- | The file name suggested as default when saving
--   
--   Default value: ""
--   
--   <ul>
--   <li>Since 1.1.2</li>
--   </ul>
suggestedFilename :: (DownloadClass self, GlibString string) => ReadAttr self (Maybe string)

-- | The total size of the file
--   
--   Default value: 0
--   
--   <ul>
--   <li>Since 1.1.2</li>
--   </ul>
totalSize :: DownloadClass self => ReadAttr self Int

-- | Emitted when download is interrupted either by user action or by
--   network errors, errorDetail will take any value of
--   <a>DownloadError</a>.
--   
--   <tt>download</tt>: the object on which the signal is emitted
--   <tt>errorCode</tt>: the corresponding error code <tt>errorDetail</tt>:
--   detailed error code for the error, see <a>DownloadError</a>
--   <tt>reason</tt>: a string describing the error
--   
--   Since 1.1.2
downloadError :: (DownloadClass self, GlibString string) => Signal self (Int -> Int -> string -> IO Bool)
instance Enum DownloadError
instance Enum DownloadStatus


-- | Object used to communicate with the application when downloading
module Graphics.UI.Gtk.WebKit.GeolocationPolicyDecision
data GeolocationPolicyDecision
class GObjectClass o => GeolocationPolicyDecisionClass o

-- | Will send the allow decision to the policy implementer.
--   
--   <ul>
--   <li>Since 1.1.23</li>
--   </ul>
geolocationPolicyAllow :: GeolocationPolicyDecisionClass decision => decision -> IO ()

-- | Will send the deny decision to the policy implementer.
--   
--   <ul>
--   <li>Since 1.1.23</li>
--   </ul>
geolocationPolicyDeny :: GeolocationPolicyDecisionClass decision => decision -> IO ()


-- | Access to the WebKit Web Resource
module Graphics.UI.Gtk.WebKit.HitTestResult
data HitTestResult
class GObjectClass o => HitTestResultClass o
data HitTestResultContext
HitTestResultContextDocument :: HitTestResultContext
HitTestResultContextLink :: HitTestResultContext
HitTestResultContextImage :: HitTestResultContext
HitTestResultContextMedia :: HitTestResultContext
HitTestResultContextSelection :: HitTestResultContext
HitTestResultContextEditable :: HitTestResultContext
instance Enum HitTestResultContext


-- | The target of a navigation request
module Graphics.UI.Gtk.WebKit.NetworkRequest
data NetworkRequest
class GObjectClass o => NetworkRequestClass o

-- | Create a new NetworkRequest with the given <tt>uri</tt>.
--   
--   It is used whenever WebKit wants to provide information about a
--   request that will be sent, or has been sent.
networkRequestNew :: GlibString string => string -> IO NetworkRequest

-- | Set the URI of <a>NetworkRequest</a>.
networkRequestSetUri :: GlibString string => NetworkRequestClass self => self -> string -> IO ()

-- | Return the uri of <a>NetworkRequest</a>.
networkRequestGetUri :: GlibString string => NetworkRequestClass self => self -> IO (Maybe string)


-- | The response given to a network request
module Graphics.UI.Gtk.WebKit.NetworkResponse
data NetworkResponse
class GObjectClass o => NetworkResponseClass o

-- | Set the URI of <a>NetworkResponse</a>.
networkResponseSetUri :: (NetworkResponseClass self, GlibString string) => self -> string -> IO ()

-- | Return the uri of <a>NetworkResponse</a>.
networkResponseGetUri :: (NetworkResponseClass self, GlibString string) => self -> IO (Maybe string)


-- | Access to the WebKit Web SecurityOrigin
module Graphics.UI.Gtk.WebKit.SecurityOrigin
data SecurityOrigin
class GObjectClass o => SecurityOriginClass o

-- | Returns the frame's security origin.
securityOriginGetAllWebDatabases :: SecurityOriginClass self => self -> IO [WebDatabase]

-- | Returns the hostname for the security origin.
securityOriginGetHost :: (SecurityOriginClass self, GlibString string) => self -> IO string

-- | Returns the port for the security origin.
securityOriginGetPort :: SecurityOriginClass self => self -> IO Int

-- | Returns the protocol for the security origin.
securityOriginGetProtocol :: (SecurityOriginClass self, GlibString string) => self -> IO string

-- | Returns the quota for Web Database storage of the security origin in
--   bytes.
securityOriginGetWebDatabaseQuota :: SecurityOriginClass self => self -> IO Int

-- | Adjust the quota for Web Database storage of the security origin
securityOriginSetWebDatabaseQuota :: SecurityOriginClass self => self -> Int -> IO ()

-- | Returns the usage for Web Database storage of the security origin in
--   bytes.
securityOriginGetWebDatabaseUsage :: SecurityOriginClass self => self -> IO Int


-- | Access to the WebKit Web Resource
module Graphics.UI.Gtk.WebKit.SoupAuthDialog
data SoupAuthDialog
class GObjectClass o => SoupAuthDialogClass o


-- | The history of a <a>WebView</a>
module Graphics.UI.Gtk.WebKit.WebBackForwardList
class ContainerClass o => WebViewClass o
data WebBackForwardList
class GObjectClass o => WebBackForwardListClass o

-- | Create an WebBackForwardList with a controlling WebView.
webBackForwardListNewWithWebView :: WebViewClass webview => webview -> IO WebBackForwardList

-- | Steps forward in the back forward list.
webBackForwardListGoForward :: WebBackForwardListClass self => self -> IO ()

-- | Steps back in the back forward list.
webBackForwardListGoBack :: WebBackForwardListClass self => self -> IO ()

-- | Check if an history item in the back forward list.
webBackForwardListContainsItem :: (WebBackForwardListClass self, WebHistoryItemClass item) => self -> item -> IO Bool

-- | Go to the specified history item in the back forward list.
webBackForwardListGoToItem :: (WebBackForwardListClass self, WebHistoryItemClass item) => self -> item -> IO ()

-- | Return the history item that precedes the current history item.
webBackForwardListGetBackItem :: WebBackForwardListClass self => self -> IO (Maybe WebHistoryItem)

-- | Return the current history item of the back forward list
webBackForwardListGetCurrentItem :: WebBackForwardListClass self => self -> IO WebHistoryItem

-- | Return the item that succeeds the current item
webBackForwardListGetForwardItem :: WebBackForwardListClass self => self -> IO (Maybe WebHistoryItem)

-- | Return the history item at a given index relative to the current item.
webBackForwardListGetNthItem :: WebBackForwardListClass self => self -> Int -> IO WebHistoryItem

-- | Return the number of items that preced the current item.
webBackForwardListGetBackLength :: WebBackForwardListClass self => self -> IO Int

-- | Return the number of items that succeed the current item.
webBackForwardListGetForwardLength :: WebBackForwardListClass self => self -> IO Int

-- | Return the maximum limit of the back forward list.
webBackForwardListGetLimit :: WebBackForwardListClass self => self -> IO Int

-- | Set the maximum limit of the back forward list.
--   
--   if the back forward list exceeds its capacity, items will be removed
--   everytime a new item had been added.
webBackForwardListSetLimit :: WebBackForwardListClass self => self -> Int -> IO ()

-- | Add the item to the back forward list.
webBackForwardListAddItem :: (WebBackForwardListClass self, WebHistoryItemClass item) => self -> item -> IO ()

-- | Return a list of items that succeed the current item, limited by
--   <tt>limit</tt>.
webBackForwardListGetForwardListWithLimit :: WebBackForwardListClass self => self -> Int -> IO [WebHistoryItem]

-- | Return a list of items that preced the current item. limited by limit.
webBackForwardListGetBackListWithLimit :: WebBackForwardListClass self => self -> Int -> IO [WebHistoryItem]


-- | Access to the WebKit Web Database
module Graphics.UI.Gtk.WebKit.WebDatabase
data WebDatabase
class GObjectClass o => WebDatabaseClass o

-- | Returns the name of the <a>WebDatabase</a> as seen by the user.
webDatabaseGetDisplayName :: (WebDatabaseClass self, GlibString string) => self -> IO string

-- | Returns the expected size of the Database in bytes as defined by the
--   web author. The Web Database standard allows web authors to specify an
--   expected size of the database to optimize the user experience.
webDatabaseGetExpectedSize :: WebDatabaseClass self => self -> IO Int

-- | Returns the absolute filename to the WebKitWebDatabase file on disk.
webDatabaseGetFilename :: (WebDatabaseClass self, GlibString string) => self -> IO string

-- | Returns the canonical name of the <a>WebDatabase</a>.
webDatabaseGetName :: (WebDatabaseClass self, GlibString string) => self -> IO string

-- | Returns the security origin of the WebKitWebDatabase.
webDatabaseGetSecurityOrigin :: WebDatabaseClass self => self -> IO SecurityOrigin

-- | Returns the actual size of the <a>WebDatabase</a> space on disk in
--   bytes.
webDatabaseGetSize :: WebDatabaseClass self => self -> IO Int

-- | Removes the <a>WebDatabase</a> from its security origin and destroys
--   all data stored in the database.
webDatabaseRemove :: WebDatabaseClass self => self -> IO ()


-- | Note
--   
--   Function <a>webkit_web_data_source_get_data</a> haven't binding, no
--   idea how to handle <a>GString</a>
--   
--   Access to the WebKit Web DataSource
module Graphics.UI.Gtk.WebKit.WebDataSource
data WebDataSource
class GObjectClass o => WebDataSourceClass o

-- | Creates a new <a>WebDataSource</a> instance. The URL of the
--   <a>WebDataSource</a> will be set to "about:blank".
webDataSourceNew :: IO WebDataSource

-- | Returns the raw data that represents the the frame's content. The data
--   will be incomplete until the data has finished loading. Returns
--   <a>Nothing</a> if the web frame hasn't loaded any data. Use
--   <tt>webkitWebDataSourceIsLoading</tt> to test if data source is in the
--   process of loading.
webDataSourceGetData :: WebDataSourceClass self => self -> IO (Maybe ByteString)

-- | Returns the text encoding name as set in the <a>WebView</a>, or if
--   not, the text encoding of the response.
webDataSourceGetEncoding :: (WebDataSourceClass self, GlibString string) => self -> IO string

-- | Returns a reference to the original request that was used to load the
--   web content. The NetworkRequest returned by this method is the request
--   prior to the "committed" load state. See
--   <a>webDataSourceGetRequest</a> for getting the "committed" request.
webDataSourceGetInitialRequest :: WebDataSourceClass self => self -> IO NetworkRequest

-- | Returns the main resource of the data_source
webDataSourceGetMainResource :: WebDataSourceClass self => self -> IO WebResource

-- | Returns a NetworkRequest that was used to create this
--   <a>WebDataSource</a>. The NetworkRequest returned by this method is
--   the request that was "committed", and hence, different from the
--   request you get from the <a>webDataSourceGetInitialRequest</a> method.
webDataSourceGetRequest :: WebDataSourceClass self => self -> IO NetworkRequest

-- | Gives you a List of <a>WebResource</a> objects that compose the
--   <a>WebView</a> to which this <a>WebDataSource</a> is attached.
webDataSourceGetSubresources :: WebDataSourceClass self => self -> IO [WebResource]

-- | Return the unreachable URI of data_source. The <tt>dataSource</tt>
--   will have an unreachable URL if it was created using
--   <tt>WebFrame'</tt>s <tt>webFrameLoadAlternateHtmlString</tt> method.
webDataSourceGetUnreachableUri :: (WebDataSourceClass self, GlibString string) => self -> IO string

-- | Returns the <a>WebFrame</a> that represents this data source
webDataSourceGetWebFrame :: WebDataSourceClass self => self -> IO WebFrame

-- | Determines whether the data source is in the process of loading its
--   content.
webDataSourceIsLoading :: WebDataSourceClass self => self -> IO Bool


-- | The content of a <a>WebView</a>
--   
--   Note: Functon <tt>webkit_web_frame_get_global_context</tt> can't
--   binding now, Because it need <tt>JSGlobalContextRef</tt> exist in
--   JavaScriptCore.
--   
--   Function <tt>webkit_web_frame_print_full</tt> can't binding now,
--   Because library <tt>GtkPrintOperation</tt> haven't binding.
module Graphics.UI.Gtk.WebKit.WebFrame
data WebFrame
class GObjectClass o => WebFrameClass o
data LoadStatus

-- | Create a new <a>WebFrame</a> instance with the given <tt>webview</tt>.
--   
--   A <a>WebFrame</a> contains the content of one URI.
webFrameNew :: WebViewClass webview => webview -> IO WebFrame

-- | Return the <a>WebView</a> that manages the given <a>WebFrame</a>.
webFrameGetWebView :: WebFrameClass self => self -> IO WebView

-- | Return the name of the given <a>WebFrame</a>.
webFrameGetName :: (WebFrameClass self, GlibString string) => self -> IO (Maybe string)

-- | Returns a WebKitNetworkResponse object representing the response that
--   was given to the request for the given frame, or <a>Nothing</a> if the
--   frame was not created by a load.
--   
--   <ul>
--   <li>Since 1.1.18</li>
--   </ul>
webFrameGetNetworkResponse :: WebFrameClass self => self -> IO (Maybe NetworkResponse)

-- | Return the title of the given <a>WebFrame</a>.
webFrameGetTitle :: (WebFrameClass self, GlibString string) => self -> IO (Maybe string)

-- | Return the URI of the given <a>WebFrame</a>.
webFrameGetUri :: (WebFrameClass self, GlibString string) => self -> IO (Maybe string)

-- | Return the <tt>WebFrame'</tt>s parent frame if it has one, Otherwise
--   return Nothing.
webFrameGetParent :: WebFrameClass self => self -> IO (Maybe WebFrame)

-- | Determines the current status of the load.
--   
--   frame : a WebKitWebView
--   
--   <ul>
--   <li>Since 1.1.7</li>
--   </ul>
webFrameGetLoadStatus :: WebFrameClass self => self -> IO LoadStatus

-- | Request loading of the specified URI string.
webFrameLoadUri :: (WebFrameClass self, GlibString string) => self -> string -> IO ()

-- | Requests loading of the given <tt>content</tt> with the specified
--   <tt>mime_type</tt> and <tt>base_uri</tt>.
--   
--   If <tt>mime_type</tt> is <tt>Nothing</tt>, "text/html" is assumed.
--   
--   If want control over the encoding use <a>webFrameLoadByteString</a>
webFrameLoadString :: (WebFrameClass self, GlibString string) => self -> string -> (Maybe string) -> string -> IO ()

-- | Request loading of an alternate content for a URL that is unreachable.
--   
--   Using this method will preserve the back-forward list. The URI passed
--   in <tt>base_uri</tt> has to be an absolute URI.
webFrameLoadAlternateString :: (WebFrameClass self, GlibString string) => self -> string -> string -> string -> IO ()

-- | Connects to a given URI by initiating an asynchronous client request.
--   
--   Creates a provisional data source that will transition to a committed
--   data source once any data has been received. Use
--   <a>webFrameStopLoading</a> to stop the load. This function is
--   typically invoked on the main frame.
webFrameLoadRequest :: (WebFrameClass self, NetworkRequestClass requ) => self -> requ -> IO ()

-- | Stops and pending loads on the given data source and those of its
--   children.
webFrameStopLoading :: WebFrameClass self => self -> IO ()

-- | Reloads the initial request.
webFrameReload :: WebFrameClass self => self -> IO ()

-- | Return the <a>WebFrame</a> associated with the given name or
--   <tt>Nothing</tt> in case none if found
--   
--   For pre-defined names, return the given webframe if name is
webFrameFindFrame :: (WebFrameClass self, GlibString string) => self -> string -> IO (Maybe WebFrame)

-- | Returns the committed data source.
webFrameGetDataSource :: WebFrameClass self => self -> IO WebDataSource

-- | Return the policy of horizontal scrollbar.
webFrameGetHorizontalScrollbarPolicy :: WebFrameClass self => self -> IO PolicyType

-- | Return the policy of vertical scrollbar.
webFrameGetVerticalScrollbarPolicy :: WebFrameClass self => self -> IO PolicyType

-- | You use the <a>webFrameLoadRequest</a> method to initiate a request
--   that creates a provisional data source. The provisional data source
--   will transition to a committed data source once any data has been
--   received. Use <a>webFrameGetDataSource</a> to get the committed data
--   source.
webFrameGetProvisionalDataSource :: WebFrameClass self => self -> IO WebDataSource

-- | Returns the frame's security origin.
webFrameGetSecurityOrigin :: WebFrameClass self => self -> IO SecurityOrigin

-- | Prints the given <a>WebFrame</a>.
--   
--   by presenting a print dialog to the user.
webFramePrint :: WebFrameClass self => self -> IO ()
instance Enum LoadStatus


-- | One item of the <a>WebBackForwardList</a> and or global history
module Graphics.UI.Gtk.WebKit.WebHistoryItem
data WebHistoryItem
class GObjectClass o => WebHistoryItemClass o

-- | Create a new <a>WebHistoryItem</a> instance.
--   
--   A history item consists out of a title and a uri, it can be part of
--   the WebBackForwardList and the global history.
--   
--   The global history is used for coloring the links of visited sites.
--   <a>WebHistoryItem</a> constructed with <a>webHistoryItemNew</a> are
--   automatically added to the global history.
webHistoryItemNew :: IO WebHistoryItem

-- | Create a new <a>WebHistoryItem</a> instance with the given
--   <tt>uri</tt> and <tt>title</tt>.
--   
--   <a>WebHistoryItem</a> constructed with
--   <a>webHistoryItemNewWithData</a> are automatically added to the global
--   history.
webHistoryItemNewWithData :: GlibString string => string -> string -> IO WebHistoryItem

-- | The title of the <a>WebHistoryItem</a>
--   
--   Default value: <tt>Nothing</tt>
webHistoryItemTitle :: (WebHistoryItemClass self, GlibString string) => ReadAttr self (Maybe string)

-- | The alternate title of the history item.
--   
--   Default value: <tt>Nothing</tt>
webHistoryItemAlternateTitle :: (WebHistoryItemClass self, GlibString string) => Attr self (Maybe string)

-- | The URI of the history item.
--   
--   Default value: <tt>Nothing</tt>
webHistoryItemUri :: (WebHistoryItemClass self, GlibString string) => ReadAttr self (Maybe string)

-- | The original URI of the history item.
--   
--   Default value: <tt>Nothing</tt>
webHistoryItemOriginalUri :: (WebHistoryItemClass self, GlibString string) => ReadAttr self (Maybe string)

-- | The time at which the history item was last visited.
--   
--   Allowed values: &gt;= 0
--   
--   Default value: 0
webHistoryItemLastVisitedTime :: WebHistoryItemClass self => ReadAttr self Double

-- | Return the title of <a>WebHistoryItem</a>.
webHistoryItemGetTitle :: (WebHistoryItemClass self, GlibString string) => self -> IO (Maybe string)

-- | Return the alternate title of WebHistoryItem.
webHistoryItemGetAlternateTitle :: (WebHistoryItemClass self, GlibString string) => self -> IO (Maybe string)

-- | Set an alternate title for WebHistoryItem.
webHistoryItemSetAlternateTitle :: (WebHistoryItemClass self, GlibString string) => self -> (Maybe string) -> IO ()

-- | Return the URI of WebHistoryItem.
webHistoryItemGetUri :: (WebHistoryItemClass self, GlibString string) => self -> IO (Maybe string)

-- | Return the original URI of WebHistoryItem.
webHistoryItemGetOriginalUri :: (WebHistoryItemClass self, GlibString string) => self -> IO (Maybe string)

-- | Return the last visited time of WebHistoryItem.
webHistoryItemGetLastVisitedTime :: WebHistoryItemClass self => self -> IO Double

-- | Makes a copy of the item for use with other WebView objects.
--   
--   <ul>
--   <li>Since 1.1.18</li>
--   </ul>
webHistoryItemCopy :: WebHistoryItemClass self => self -> IO WebHistoryItem


-- | Access to the WebKit Inspector
module Graphics.UI.Gtk.WebKit.WebInspector
data WebInspector
class GObjectClass o => WebInspectorClass o

-- | Obtains the URI that is currently being inspected
webInspectorGetInspectedUri :: (WebInspectorClass self, GlibString string) => self -> IO string

-- | Obtains the <a>WebView</a> that is used to render the
--   <a>WebInspector</a>.
--   
--   The <a>WebView</a> instance is created by the application, by handling
--   the "inspect-web-view" signal. This means that it may return
--   <tt>Nothing</tt> if the user hasn't inspected anything
webInspectorGetWebView :: WebInspectorClass self => self -> IO (Maybe WebView)

-- | Causes the Web Inspector to inspect the node that is located at the
--   given coordinates of the widget. The coordinates should be relative to
--   the WebKitWebView widget, not to the scrollable content, and may be
--   obtained from a <a>Event</a> directly.
--   
--   This means x, and y being zero doesn't guarantee you will hit the
--   left-most top corner of the content, since the contents may have been
--   scrolled.
--   
--   <ul>
--   <li>Since 1.1.17</li>
--   </ul>
webInspectorInspectCoordinates :: WebInspectorClass self => self -> Int -> Int -> IO ()

-- | Causes the Web Inspector to be shown.
--   
--   <ul>
--   <li>Since 1.1.17</li>
--   </ul>
webInspectorShow :: WebInspectorClass self => self -> IO ()

-- | Causes the Web Inspector to be closed.
--   
--   <ul>
--   <li>Since 1.1.17</li>
--   </ul>
webInspectorClose :: WebInspectorClass self => self -> IO ()

-- | The URI that is currently being inspected.
webInspectorInspectedUri :: (WebInspectorClass self, GlibString string) => ReadAttr self string

-- | This is enabling JavaScript profiling in the Inspector. This means
--   that Console.profiles will return the profiles.
webInspectorJSProfilingEnable :: WebInspectorClass self => Attr self Bool

-- | This is enabling Timeline profiling in the Inspector.
--   
--   Default value: <a>False</a>
--   
--   <ul>
--   <li>Since 1.1.17</li>
--   </ul>
webInspectorTimelineProfilingEnabled :: WebInspectorClass self => Attr self Bool

-- | The Web View that renders the Web Inspector itself.
webInspectorWebView :: WebInspectorClass self => ReadAttr self WebView

-- | Emitted when the inspector should appear in a separate window
--   
--   return True if the signal is handled
attachWindow :: WebInspectorClass self => Signal self (IO Bool)

-- | Emitted when the inspector should appear in a separate window.
--   
--   return True if the signal has been handled
detachWindow :: WebInspectorClass self => Signal self (IO Bool)

-- | Emitted when the inspector window should be closed.
--   
--   return True if the signal is handled.
closeWindow :: WebInspectorClass self => Signal self (IO Bool)

-- | Emitted when the inspector window should be displayed. Notice that the
--   window must have been created already by handling
--   <a>inspectWebView</a>.
--   
--   return True if the signal has been handled
showWindow :: WebInspectorClass self => Signal self (IO Bool)

-- | Emitted when the inspection is done. You should release your
--   references on the inspector at this time. The inspected <a>WebView</a>
--   may no longer exist when this signal is emitted.
finished :: WebInspectorClass self => Signal self (IO ())

-- | Emitted when the user activates the <tt>inspect</tt> context menu item
--   to inspect a web view. The application which is interested in the
--   inspector should create a window, or otherwise add the <a>WebView</a>
--   it creates to an existing window.
--   
--   You don't need to handle the reference count of the <a>WebView</a>
--   instance you create; the widget to which you add it will do that.
inspectWebView :: WebInspectorClass self => Signal self (WebView -> IO WebView)


-- | Access to the WebKit NavigationAction
module Graphics.UI.Gtk.WebKit.WebNavigationAction
data WebNavigationAction
class GObjectClass o => WebNavigationActionClass o
data NavigationReason
WebNavigationReasonLinkClicked :: NavigationReason
WebNavigationReasonFormSubmitted :: NavigationReason
WebNavigationReasonBackForward :: NavigationReason
WebNavigationReasonReload :: NavigationReason
WebNavigationReasonFormResubmitted :: NavigationReason
WebNavigationReasonOther :: NavigationReason

-- | Returns the DOM identifier for the mouse button used to click. DOM
--   button values are 1, 2 and 3 for left, middle and right buttons. If
--   the action was not initiated by a mouse click, returns -1.
webNavigationActionGetButton :: WebNavigationActionClass self => self -> IO Int

-- | Returns a bitmask with the the state of the modifier keys.
webNavigationActionGetModifierState :: WebNavigationActionClass self => self -> IO Int

-- | Returns the URI that was originally requested. This may differ from
--   the navigation target, for instance because of a redirect.
webNavigationActionGetOriginalUri :: (WebNavigationActionClass self, GlibString string) => self -> IO string

-- | Sets the URI that was originally requested. This may differ from the
--   navigation target, for instance because of a redirect.
webNavigationActionSetOriginalUri :: (WebNavigationActionClass self, GlibString string) => self -> string -> IO ()

-- | Returns the reason why WebKit is requesting a navigation.
webNavigationActionGetReason :: WebNavigationActionClass self => self -> IO NavigationReason

-- | Sets the reason why WebKit is requesting a navigation.
webNavigationActionSetReason :: WebNavigationActionClass self => self -> NavigationReason -> IO ()

-- | Returns the target frame of the action.
webNavigationActionGetTargetFrame :: (WebNavigationActionClass self, GlibString string) => self -> IO string
instance Enum NavigationReason
instance Eq NavigationReason
instance Show NavigationReason


-- | Access to the WebKit PolicyDecision
module Graphics.UI.Gtk.WebKit.WebPolicyDecision
data WebPolicyDecision
class GObjectClass o => WebPolicyDecisionClass o

-- | Will send the DOWNLOAD decision to the policy implementer.
webPolicyDecisionDownload :: WebPolicyDecisionClass self => self -> IO ()

-- | Will send the IGNORE decision to the policy implementer.
webPolicyDecisionIgnore :: WebPolicyDecisionClass self => self -> IO ()

-- | Will send the USE decision to the policy implementer.
webPolicyDecisionUse :: WebPolicyDecisionClass self => self -> IO ()


-- | Note:
--   
--   Function <a>webkit_web_resource_get_data</a> haven't binding no idea
--   how to handle <a>GString</a>.
--   
--   Access to the WebKit Web Resource
module Graphics.UI.Gtk.WebKit.WebResource
data WebResource
class GObjectClass o => WebResourceClass o

-- | Returns a new WebKitWebResource. The <tt>encoding</tt> can be empty.
--   The <tt>frameName</tt> can be used if the resource represents contents
--   of an entire HTML frame, otherwise pass empty.
webResourceNew :: GlibString string => ByteString -> string -> string -> string -> string -> IO WebResource

-- | Returns the data of the WebResource.
webResourceGetData :: WebResourceClass self => self -> IO (Maybe ByteString)

-- | Get encoding.
webResourceGetEncoding :: (WebResourceClass self, GlibString string) => self -> IO (Maybe string)

-- | Get frame name.
webResourceGetFrameName :: (WebResourceClass self, GlibString string) => self -> IO (Maybe string)

-- | Get mime type.
webResourceGetMimeType :: (WebResourceClass self, GlibString string) => self -> IO (Maybe string)

-- | Get uri.
webResourceGetUri :: (WebResourceClass self, GlibString string) => self -> IO string


-- | Control the behaviour of a <a>WebView</a>
module Graphics.UI.Gtk.WebKit.WebSettings
data WebSettings
class GObjectClass o => WebSettingsClass o
data EditingBehavior

-- | Create a new <a>WebSettings</a> instance.
--   
--   A <a>WebSettings</a> can be applied to a <a>WebView</a> to control the
--   to be used text encoding, color, font size, printing mode,script
--   support, loading of images and various other things.
webSettingsNew :: IO WebSettings

-- | Copy an existing <a>WebSettings</a> instance.
webSettingsCopy :: WebSettingsClass self => self -> IO WebSettings

-- | Return the User-Agent string currently used.
webSettingsGetUserAgent :: (WebSettingsClass self, GlibString string) => self -> IO (Maybe string)

-- | The default Cursive font family used to display text
--   
--   Default value "serif"
webSettingsCursiveFontFamily :: (WebSettingsClass self, GlibString string) => Attr self string

-- | The default font family used to display text
--   
--   Default value: "sans-serif"
webSettingsDefaultFontFamily :: (WebSettingsClass self, GlibString string) => Attr self string

-- | The default Fantasy font family used to display text
webSettingsFantasyFontFamily :: (WebSettingsClass self, GlibString string) => Attr self string

-- | The default font family used to display monospace text.
--   
--   Default value: "monospace"
webSettingsMonospaceFontFamily :: (WebSettingsClass self, GlibString string) => Attr self string

-- | The default Sans Serif font family used to display text
--   
--   Default value "sans-serif"
webSettingsSansFontFamily :: (WebSettingsClass self, GlibString string) => Attr self string

-- | The default Serif font family used to display text
--   
--   Default value: "serif"
webSettingsSerifFontFamily :: (WebSettingsClass self, GlibString string) => Attr self string

-- | The default font size used to display text
--   
--   Default value: &gt;=5
webSettingsDefaultFontSize :: WebSettingsClass self => Attr self Int

-- | The default font size used to display monospace text
--   
--   Allowed values: &gt;= 5
--   
--   Default value: 10
webSettingsDefaultMonospaceFontSize :: WebSettingsClass self => Attr self Int

-- | The minimum font size used to display text.
--   
--   Allowed values: &gt;=1
--   
--   Default value: 5
webSettingsMinimumFontSize :: WebSettingsClass self => Attr self Int

-- | The minimum logical font size used to display text
--   
--   Allowed values: &gt;=1
--   
--   Default value: 5
webSettingsMinimumLogicalFontSize :: WebSettingsClass self => Attr self Int

-- | Load images automatically
--   
--   Default value: True
webSettingsAutoLoadImages :: WebSettingsClass self => Attr self Bool

-- | Automatically shrink standalone images to fit
--   
--   Default value: True
webSettingsAutoShrinkImages :: WebSettingsClass self => Attr self Bool

-- | The default encoding used to display text
--   
--   Default value "iso-8859-1"
webSettingsDefaultEncoding :: (WebSettingsClass self, GlibString string) => Attr self string

-- | This settings controls various editing behaviors
webSettingsEditingBehavior :: WebSettingsClass self => Attr self EditingBehavior

-- | Whether to enable caret browsing mode.
webSettingsEnableCaretBrowsing :: WebSettingsClass self => Attr self Bool

-- | Whether developer extensions should be enabled.
--   
--   This enables, for now, the <a>WebInspector</a>
webSettingsEnableDeveloperExtras :: WebSettingsClass self => Attr self Bool

-- | Whether to enable HTML5 client-side SQL database support.
webSettingsEnableHtml5Database :: WebSettingsClass self => Attr self Bool

-- | Whether to enable HTML5 localStorage support.
webSettingsEnableHtml5LocalStorage :: WebSettingsClass self => Attr self Bool

-- | Whether to enable HTML5 offline web application cache support.
webSettingsEnableOfflineWebApplicationCache :: WebSettingsClass self => Attr self Bool

-- | Enable embedded plugin objects.
webSettingsEnablePlugins :: WebSettingsClass self => Attr self Bool

-- | Whether to enable private browsing mode.
webSettingsEnablePrivateBrowsing :: WebSettingsClass self => Attr self Bool

-- | Enable embedded scripting languages
webSettingsEnableScripts :: WebSettingsClass self => Attr self Bool

-- | Whether to enable speel checking while typing.
webSettingsEnableSpellChecking :: WebSettingsClass self => Attr self Bool

-- | Whether to allow files loaded through file:
webSettingsEnableUniversalAccessFromFileUris :: WebSettingsClass self => Attr self Bool

-- | Whether to enable the XSS Auditor.
--   
--   This feature filters some kinds of reflective XSS attacks on
--   vulnerable web sites.
webSettingsEnableXssAuditor :: WebSettingsClass self => Attr self Bool

-- | Enables the site-specific compatibility workarounds.
--   
--   Default value: False
webSettingsEnableSiteSpecificQuirks :: WebSettingsClass self => Attr self Bool

-- | Whether to enable DOM paste. If set to <a>True</a>,
--   document.execCommand(<a>Paste</a>) will correctly execute and paste
--   content of the clipboard.
--   
--   Default value: <a>False</a>
--   
--   <ul>
--   <li>Since 1.1.16</li>
--   </ul>
webSettingsEnableDomPaste :: WebSettingsClass self => Attr self Bool

-- | Whether right-clicks should be handled automatically to create, and
--   display the context menu. Turning this off will make WebKitGTK+ not
--   emit the populate-popup signal. Notice that the default button press
--   event handler may still handle right clicks for other reasons, such as
--   in-page context menus, or right-clicks that are handled by the page
--   itself.
--   
--   Default value: <a>True</a>
--   
--   <ul>
--   <li>Since 1.1.18</li>
--   </ul>
webSettingsEnableDefaultContextMenu :: WebSettingsClass self => Attr self Bool

-- | Enable or disable the page cache. Disabling the page cache is
--   generally only useful for special circumstances like low-memory
--   scenarios or special purpose applications like static HTML viewers.
--   This setting only controls the Page Cache, this cache is different
--   than the disk-based or memory-based traditional resource caches, its
--   point is to make going back and forth between pages much faster. For
--   details about the different types of caches and their purposes see:
--   http:
--   
--   Default value: <a>False</a>
--   
--   <ul>
--   <li>Since 1.1.18</li>
--   </ul>
webSettingsEnablePageCache :: WebSettingsClass self => Attr self Bool

-- | Whether to enable the Spatial Navigation. This feature consists in the
--   ability to navigate between focusable elements in a Web page, such as
--   hyperlinks and form controls, by using Left, Right, Up and Down arrow
--   keys. For example, if an user presses the Right key, heuristics
--   determine whether there is an element he might be trying to reach
--   towards the right, and if there are multiple elements, which element
--   he probably wants.
--   
--   Default value: <a>False</a>
--   
--   <ul>
--   <li>Since 1.1.23</li>
--   </ul>
webSettingsEnableSpatialNavigation :: WebSettingsClass self => Attr self Bool

-- | Enforce a resolution of 96 DPI.
webSettingsEnforce96Dpi :: WebSettingsClass self => Attr self Bool

-- | Whether JavaScript can open popup windows automatically without user
--   intervention.
webSettingsJSCanOpenWindowAuto :: WebSettingsClass self => Attr self Bool

-- | Whether background images should be printed
--   
--   Default value: True
webSettingsPrintBackgrounds :: WebSettingsClass self => Attr self Bool

-- | Whether text areas are resizable
--   
--   Default value : True
webSettingsResizableTextAreas :: WebSettingsClass self => Attr self Bool

-- | The languages to be used for spell checking, separated by commas
--   
--   The locale string typically is in the form lang_COUNTRY, where lang is
--   an ISO-639 language code, and COUNTRY is an ISO-3166 country code. For
--   instance, sv_FI for Swedish as written in Finland or pt_BR for
--   Portuguese as written in Brazil.
--   
--   If no value is specified then the value returned by
--   gtk_get_default_language will be used.
--   
--   Default value: <tt>Nothing</tt>
webSettingsSpellCheckingLang :: (WebSettingsClass self, GlibString string) => Attr self (Maybe string)

-- | Whether the tab key cycles through elements on the page.
--   
--   If flag is <a>True</a>, pressing the tab key will focus the next
--   element in the <tt>webView</tt>. If flag is <a>False</a>, the
--   <tt>webView</tt> will interpret tab key presses as normal key presses.
--   If the selected element is editable, the tab key will cause the
--   insertion of a tab character.
--   
--   Default value: <a>True</a>
--   
--   <ul>
--   <li>Since 1.1.17</li>
--   </ul>
webSettingsTabKeyCyclesThroughElements :: WebSettingsClass self => Attr self Bool

-- | The User-Agent string used by WebKit
--   
--   This will return a default User-Agent string if a custom string wasn't
--   provided by the application. Setting this property to a NULL value or
--   an empty string will result in the User-Agent string being reset to
--   the default value.
--   
--   Default value: "Mozilla<i>5.0 (X11; U; Linux x86_64; c)
--   AppleWebKit</i>531.2+ (KHTML, like Gecko) Safari/531.2+"
webSettingsUserAgent :: (WebSettingsClass self, GlibString string) => Attr self string

-- | The URI of a stylesheet that is applied to every page.
--   
--   Default value: <tt>Nothing</tt>
webSettingsUserStylesheetUri :: (WebSettingsClass self, GlibString string) => Attr self (Maybe string)

-- | The value by which the zoom level is changed when zooming in or out
--   
--   Allowed values: &gt;= 0
--   
--   Default value: 0.1
webSettingsZoomStep :: WebSettingsClass self => Attr self Float
instance Enum EditingBehavior


-- | Note:
--   
--   Signal `window-object-cleared` can't be bound now, because it needs
--   JavaScriptCore that hasn't binding.
--   
--   Signal `create-plugin-widget` can't be bound now, no idea how to bind
--   <tt>GHaskellTable</tt>
--   
--   <ul>
--   <li>TODO:</li>
--   </ul>
--   
--   Binding for webkit_web_view_get_snapshot
module Graphics.UI.Gtk.WebKit.WebView
data WebView
class ContainerClass o => WebViewClass o
data NavigationResponse
NavigationResponseAccept :: NavigationResponse
NavigationResponseIgnore :: NavigationResponse
NavigationResponseDownload :: NavigationResponse
data TargetInfo
WebViewTargetInfoHtml :: TargetInfo
WebViewTargetInfoText :: TargetInfo
WebViewTargetInfoImage :: TargetInfo
WebViewTargetInfoUriList :: TargetInfo
WebViewTargetInfoNetscapeUrl :: TargetInfo
data LoadStatus
LoadProvisional :: LoadStatus
LoadCommitted :: LoadStatus
LoadFinished :: LoadStatus
LoadFirstVisuallyNonEmptyLayout :: LoadStatus
LoadFailed :: LoadStatus
data ViewMode
WebViewViewModeWindowed :: ViewMode
WebViewViewModeFloating :: ViewMode
WebViewViewModeFullscreen :: ViewMode
WebViewViewModeMaximized :: ViewMode
WebViewViewModeMinimized :: ViewMode

-- | Create a new <a>WebView</a> widget.
--   
--   It is a <a>Widget</a> you can embed in a <a>ScrolledWindow</a>.
--   
--   You can load any URI into the <a>WebView</a> or any kind of data
--   string.
webViewNew :: IO WebView

-- | Requests loading of the specified URI string in a <a>WebView</a>
webViewLoadUri :: (WebViewClass self, GlibString string) => self -> string -> IO ()

-- | Loading the <tt>content</tt> string as html. The URI passed in
--   base_uri has to be an absolute URI. Deprecated since webkit v1.1.1,
--   use <a>webViewLoadString</a> instead.
webViewLoadHtmlString :: (WebViewClass self, GlibString string) => self -> string -> string -> IO ()

-- | Requests loading of the specified asynchronous client request. Creates
--   a provisional data source that will transition to a committed data
--   source once any data has been received. Use <a>webViewStopLoading</a>
--   to stop the load.
webViewLoadRequest :: (WebViewClass self, NetworkRequestClass request) => self -> request -> IO ()

-- | Requests loading of the given <tt>content</tt> with the specified
--   <tt>mime_type</tt> and <tt>base_uri</tt>. If <tt>mime_type</tt> is
--   <tt>Nothing</tt>, "text/html" is assumed. If want control over the
--   encoding use <a>webViewLoadByteString</a>
webViewLoadString :: (WebViewClass self, GlibString string) => self -> string -> (Maybe string) -> string -> IO ()

-- | Determines the current status of the load.
webViewGetLoadStatus :: WebViewClass self => self -> IO LoadStatus

-- | Stops and pending loads on the given data source.
webViewStopLoading :: WebViewClass self => self -> IO ()

-- | Reloads the <a>WebView</a>
webViewReload :: WebViewClass self => self -> IO ()

-- | Reloads the <a>WebView</a> without using any cached data.
webViewReloadBypassCache :: WebViewClass self => self -> IO ()

-- | Determine whether <a>WebView</a> has a previous history item.
webViewCanGoBack :: WebViewClass self => self -> IO Bool

-- | Determine whether <a>WebView</a> has a next history item.
webViewCanGoForward :: WebViewClass self => self -> IO Bool

-- | Loads the previous history item.
webViewGoBack :: WebViewClass self => self -> IO ()

-- | Loads the next history item.
webViewGoForward :: WebViewClass self => self -> IO ()

-- | Return the <a>WebBackForwardList</a>
webViewGetBackForwardList :: WebViewClass self => self -> IO WebBackForwardList

-- | Set the <a>WebView</a> to maintian a back or forward list of history
--   items.
webViewSetMaintainsBackForwardList :: WebViewClass self => self -> Bool -> IO ()

-- | Go to the specified <a>WebHistoryItem</a>
webViewGoToBackForwardItem :: (WebViewClass self, WebHistoryItemClass item) => self -> item -> IO Bool

-- | Determines whether <a>WebView</a> has a history item of
--   <tt>steps</tt>.
--   
--   Negative values represent steps backward while positive values
--   represent steps forward
webViewCanGoBackOrForward :: WebViewClass self => self -> Int -> IO Bool

-- | Loads the history item that is the number of <tt>steps</tt> away from
--   the current item. Negative values represent steps backward while
--   positive values represent steps forward.
webViewGoBackOrForward :: WebViewClass self => self -> Int -> IO ()

-- | Returns the zoom level of <a>WebView</a> i.e. the factor by which
--   elements in the page are scaled with respect to their original size.
webViewGetZoomLevel :: WebViewClass self => self -> IO Float

-- | Sets the zoom level of <a>WebView</a>.
webViewSetZoomLevel :: WebViewClass self => self -> Float -> IO ()

-- | Increases the zoom level of <a>WebView</a>.
webViewZoomIn :: WebViewClass self => self -> IO ()

-- | Decreases the zoom level of <a>WebView</a>.
webViewZoomOut :: WebViewClass self => self -> IO ()

-- | Returns whether the zoom level affects only text or all elements.
webViewGetFullContentZoom :: WebViewClass self => self -> IO Bool

-- | Sets whether the zoom level affects only text or all elements.
webViewSetFullContentZoom :: WebViewClass self => self -> Bool -> IO ()

-- | Determines whether can cuts the current selection inside
--   <a>WebView</a> to the clipboard
webViewCanCutClipboard :: WebViewClass self => self -> IO Bool

-- | Determines whether can copies the current selection inside
--   <a>WebView</a> to the clipboard
webViewCanCopyClipboard :: WebViewClass self => self -> IO Bool

-- | Determines whether can pastes the current contents of the clipboard to
--   the <a>WebView</a>
webViewCanPasteClipboard :: WebViewClass self => self -> IO Bool

-- | Cuts the current selection inside <a>WebView</a> to the clipboard.
webViewCutClipboard :: WebViewClass self => self -> IO ()

-- | Copies the current selection inside <a>WebView</a> to the clipboard.
webViewCopyClipboard :: WebViewClass self => self -> IO ()

-- | Pastes the current contents of the clipboard to the <a>WebView</a>
webViewPasteClipboard :: WebViewClass self => self -> IO ()

-- | Determines whether or not it is currently possible to redo the last
--   editing command in the view
webViewCanRedo :: WebViewClass self => self -> IO Bool

-- | Determines whether or not it is currently possible to undo the last
--   editing command in the view
webViewCanUndo :: WebViewClass self => self -> IO Bool

-- | Redoes the last editing command in the view, if possible.
webViewRedo :: WebViewClass self => self -> IO ()

-- | Undoes the last editing command in the view, if possible.
webViewUndo :: WebViewClass self => self -> IO ()

-- | Deletes the current selection inside the <a>WebView</a>
webViewDeleteSelection :: WebViewClass self => self -> IO ()

-- | Determines whether text was selected
webViewHasSelection :: WebViewClass self => self -> IO Bool

-- | Attempts to select everything inside the <a>WebView</a>
webViewSelectAll :: WebViewClass self => self -> IO ()

-- | Returns the default encoding of the <a>WebView</a>
webViewGetEncoding :: (WebViewClass self, GlibString string) => self -> IO (Maybe string)

-- | Sets the current <a>WebView</a> encoding, without modifying the
--   default one, and reloads the page
webViewSetCustomEncoding :: (WebViewClass self, GlibString string) => self -> (Maybe string) -> IO ()

-- | Returns the current encoding of <a>WebView</a>,not the default
--   encoding.
webViewGetCustomEncoding :: (WebViewClass self, GlibString string) => self -> IO (Maybe string)

-- | Gets the value of the "view-mode" property of the <a>WebView</a>
webViewGetViewMode :: WebViewClass self => self -> IO ViewMode
webViewSetViewMode :: WebViewClass self => self -> ViewMode -> IO ()

-- | Returns whether <a>WebView</a> is in view source mode
webViewGetViewSourceMode :: WebViewClass self => self -> IO Bool

-- | Set whether the view should be in view source mode. Setting this mode
--   to (!(0)) before loading a URI will display the source of the web page
--   in a nice and readable format.
webViewSetViewSourceMode :: WebViewClass self => self -> Bool -> IO ()

-- | Returns whether the <a>WebView</a> has a transparent background
webViewGetTransparent :: WebViewClass self => self -> IO Bool

-- | Sets whether the WebKitWebView has a transparent background.
--   
--   Pass False to have the <a>WebView</a> draw a solid background (the
--   default), otherwise pass True.
webViewSetTransparent :: WebViewClass self => self -> Bool -> IO ()

-- | This function returns the list of targets this <a>WebView</a> can
--   provide for clipboard copying and as DND source. The targets in the
--   list are added with values from the <tt>WebViewTargetInfo</tt> enum,
--   using <tt>targetListAdd</tt> and <tt>targetListAddTextTargets</tt>.
webViewGetCopyTargetList :: WebViewClass self => self -> IO (Maybe TargetList)

-- | This function returns the list of targets this <a>WebView</a> can
--   provide for clipboard pasteing and as DND source. The targets in the
--   list are added with values from the <tt>WebViewTargetInfo</tt> enum,
--   using <tt>targetListAdd</tt> and <tt>targetListAddTextTargets</tt>.
webViewGetPasteTargetList :: WebViewClass self => self -> IO (Maybe TargetList)

-- | Attempts to highlight all occurances of string inside <a>WebView</a>
webViewMarkTextMatches :: (WebViewClass self, GlibString string) => self -> string -> Bool -> Int -> IO Int

-- | Removes highlighting previously set by <tt>webViewMarkTextMarches</tt>
webViewUnMarkTextMatches :: WebViewClass self => self -> IO ()

-- | Highlights text matches previously marked by
--   <a>webViewMarkTextMatches</a>
webViewSetHighlightTextMatches :: WebViewClass self => self -> Bool -> IO ()

-- | Obtains the URI for the favicon for the given WebKitWebView, or
--   <a>Nothing</a> if there is none.
--   
--   <ul>
--   <li>Since 1.1.18</li>
--   </ul>
webViewGetIconUri :: (WebViewClass self, GlibString string) => self -> IO (Maybe string)

-- | Obtains a GdkPixbuf of the favicon for the given <a>WebView</a>. This
--   will return <tt>Nothing</tt> if there is no icon for the current
--   <a>WebView</a> or if the icon is in the database but not available at
--   the moment of this call. Use <a>webViewGetIconUri</a> if you need to
--   distinguish these cases.
--   
--   Usually you want to connect to WebKitWebView::icon-loaded and call
--   this method in the callback.
--   
--   See also <tt>faviconDatabaseTryGetFaviconPixbuf</tt>. Contrary to this
--   function the icon database one returns the URL of the page containing
--   the icon.
webViewTryGetFaviconPixbuf :: WebView -> Int -> Int -> IO (Maybe Pixbuf)

-- | Execute the script specified by <tt>script</tt>
webViewExecuteScript :: (WebViewClass self, GlibString string) => self -> string -> IO ()

-- | Returns whether or not a <tt>mimetype</tt> can be displayed using this
--   view.
webViewCanShowMimeType :: (WebViewClass self, GlibString string) => self -> string -> IO Bool

-- | Returns whether the user is allowed to edit the document.
webViewGetEditable :: WebViewClass self => self -> IO Bool

-- | Sets whether allows the user to edit its HTML document.
webViewSetEditable :: WebViewClass self => self -> Bool -> IO ()

-- | Obtains the <a>WebInspector</a> associated with the <a>WebView</a>
webViewGetInspector :: WebViewClass self => self -> IO WebInspector

-- | Determines the current progress of the load
webViewGetProgress :: WebViewClass self => self -> IO Double

-- | Looks for a specified string inside <a>WebView</a>
webViewSearchText :: (WebViewClass self, GlibString string) => self -> string -> Bool -> Bool -> Bool -> IO Bool

-- | Move the cursor in view as described by step and count.
webViewMoveCursor :: WebViewClass self => self -> MovementStep -> Int -> IO ()

-- | Return the main <a>WebFrame</a> of the given <a>WebView</a>.
webViewGetMainFrame :: WebViewClass self => self -> IO WebFrame

-- | Return the focused <a>WebFrame</a> (if any) of the given
--   <a>WebView</a>.
webViewGetFocusedFrame :: WebViewClass self => self -> IO (Maybe WebFrame)

-- | Apply <a>WebSettings</a> to a given <a>WebView</a>
--   
--   !!NOTE!!, currently lack of useful APIs of <a>WebSettings</a> in
--   webkitgtk. If you want to set the encoding, font family or font size
--   of the <a>WebView</a>, please use related functions.
webViewSetWebSettings :: (WebViewClass self, WebSettingsClass settings) => self -> settings -> IO ()

-- | Return the <a>WebSettings</a> currently used by <a>WebView</a>.
webViewGetWebSettings :: WebViewClass self => self -> IO WebSettings

-- | Returns the instance of WebKitWebWindowFeatures held by the given
--   WebKitWebView.
webViewGetWindowFeatures :: WebViewClass self => self -> IO WebWindowFeatures

-- | Returns the title of <a>WebView</a> document, or Nothing in case of
--   failure
webViewGetTitle :: (WebViewClass self, GlibString string) => self -> IO (Maybe string)

-- | Returns the current URI of the contents displayed by the
--   <a>WebView</a>, or Nothing in case of failure
webViewGetUri :: (WebViewClass self, GlibString string) => self -> IO (Maybe string)
webViewGetDomDocument :: WebView -> IO (Maybe Document)

-- | Zoom level of the <a>WebView</a> instance
webViewZoomLevel :: WebViewClass self => Attr self Float

-- | Whether the full content is scaled when zooming
--   
--   Default value: False
webViewFullContentZoom :: WebViewClass self => Attr self Bool

-- | The default encoding of the <a>WebView</a> instance
--   
--   Default value: <tt>Nothing</tt>
webViewEncoding :: (WebViewClass self, GlibString string) => ReadAttr self (Maybe string)

-- | The custom encoding of the <a>WebView</a> instance
--   
--   Default value: <tt>Nothing</tt>
webViewCustomEncoding :: (WebViewClass self, GlibString string) => Attr self (Maybe string)

-- | Determines the current status of the load.
--   
--   Default value: <tt>LoadFinished</tt>
webViewLoadStatus :: WebViewClass self => ReadAttr self LoadStatus

-- | Determines the current progress of the load
--   
--   Default Value: 1
webViewProgress :: WebViewClass self => ReadAttr self Double

-- | Title of the <a>WebView</a> instance
webViewTitle :: (WebViewClass self, GlibString string) => ReadAttr self (Maybe string)

-- | The associated webInspector instance of the <a>WebView</a>
webViewInspector :: WebViewClass self => ReadAttr self WebInspector

-- | The associated webSettings of the <a>WebView</a> instance
webViewWebSettings :: WebViewClass self => Attr self WebSettings

-- | view source mode of the <a>WebView</a> instance
webViewViewSourceMode :: WebViewClass self => Attr self Bool

-- | transparent background of the <a>WebView</a> instance
webViewTransparent :: WebViewClass self => Attr self Bool

-- | Whether content of the <a>WebView</a> can be modified by the user
--   
--   Default value: <tt>False</tt>
webViewEditable :: WebViewClass self => Attr self Bool

-- | Returns the current URI of the contents displayed by the
--   <tt>web_view</tt>.
--   
--   Default value: Nothing
webViewUri :: (WebViewClass self, GlibString string) => ReadAttr self (Maybe string)

-- | The list of targets this web view supports for clipboard copying.
webViewCopyTargetList :: WebViewClass self => ReadAttr self (Maybe TargetList)

-- | The list of targets this web view supports for clipboard pasteing.
webViewPasteTargetList :: WebViewClass self => ReadAttr self (Maybe TargetList)

-- | An associated <a>WebWindowFeatures</a> instance.
webViewWindowFeatures :: WebViewClass self => Attr self WebWindowFeatures

-- | The URI for the favicon for the WebKitWebView.
--   
--   Default value: <a>Nothing</a>
--   
--   <ul>
--   <li>Since 1.1.18</li>
--   </ul>
webViewIconUri :: (WebViewClass self, GlibString string) => ReadAttr self (Maybe string)

-- | The <a>IMMulticontext</a> for the WebKitWebView.
--   
--   This is the input method context used for all text entry widgets
--   inside the WebKitWebView. It can be used to generate context menu
--   items for controlling the active input method.
--   
--   <ul>
--   <li>Since 1.1.20</li>
--   </ul>
webViewImContext :: WebViewClass self => ReadAttr self IMContext

-- | The "view-mode" property of the <a>WebView</a>
webViewViewMode :: WebViewClass self => Attr self ViewMode

-- | When a <a>WebFrame</a> begins to load, this signal is emitted
loadStarted :: WebViewClass self => Signal self (WebFrame -> IO ())

-- | When a <a>WebFrame</a> loaded the first data, this signal is emitted
loadCommitted :: WebViewClass self => Signal self (WebFrame -> IO ())

-- | When the global progress changed, this signal is emitted
--   
--   the global progress will be passed back to user function
progressChanged :: WebViewClass self => Signal self (Int -> IO ())

-- | When loading finished, this signal is emitted
loadFinished :: WebViewClass self => Signal self (WebFrame -> IO ())

-- | When An error occurred while loading.
--   
--   By default, if the signal is not handled, the WebView will display a
--   stock error page.
--   
--   You need to handle the signal if you want to provide your own error
--   page.
--   
--   The URI that triggered the error and the <a>GError</a> will be passed
--   back to user function.
loadError :: (WebViewClass self, GlibString string) => Signal self (WebFrame -> string -> GError -> IO Bool)

-- | Emitted after Icon loaded
iconLoaded :: (WebViewClass self, GlibString string) => Signal self (string -> IO ())

-- | When document loading finished, this signal is emitted
documentLoadFinished :: WebViewClass self => Signal self (WebFrame -> IO ())

-- | Emitted when a request is about to be sent. You can modify the request
--   while handling this signal. You can set the URI in the
--   <a>NetworkRequest</a> object itself, and add<i>remove</i>replace
--   headers using the SoupMessage object it carries, if it is present. See
--   <tt>networkRequestGetMessage</tt>. Setting the request URI to
--   "about:blank" will effectively cause the request to load nothing, and
--   can be used to disable the loading of specific resources.
--   
--   Notice that information about an eventual redirect is available in
--   response's SoupMessage, not in the SoupMessage carried by the request.
--   If response is NULL, then this is not a redirected request.
--   
--   The <a>WebResource</a> object will be the same throughout all the
--   lifetime of the resource, but the contents may change from inbetween
--   signal emissions.
resourceRequestStarting :: WebViewClass self => Signal self (WebFrame -> WebResource -> Maybe NetworkRequest -> Maybe NetworkResponse -> IO ())

-- | When Document title changed, this signal is emitted.
--   
--   It can be used to set the Application <a>Window</a> title.
--   
--   webframe - which <a>WebFrame</a> changes the document title.
--   
--   title - current title string.
titleChanged :: (WebViewClass self, GlibString string) => Signal self (WebFrame -> string -> IO ())

-- | The <a>copyClipboard</a> signal is a keybinding signal which gets
--   emitted to copy the selection to the clipboard.
--   
--   The default bindings for this signal are Ctrl-c and Ctrl-Insert.
copyClipboard :: WebViewClass self => Signal self (IO ())

-- | The <a>cutClipboard</a> signal is a keybinding signal which gets
--   emitted to cut the selection to the clipboard.
--   
--   The default bindings for this signal are Ctrl-x and Shift-Delete.
cutClipboard :: WebViewClass self => Signal self (IO ())

-- | The <a>pasteClipboard</a> signal is a keybinding signal which gets
--   emitted to paste the contents of the clipboard into the Web view.
--   
--   The default bindings for this signal are Ctrl-v and Shift-Insert.
pasteClipboard :: WebViewClass self => Signal self (IO ())

-- | A JavaScript console message was created.
consoleMessage :: (WebViewClass self, GlibString string) => Signal self (string -> string -> Int -> string -> IO Bool)

-- | A JavaScript alert dialog was created.
scriptAlert :: (WebViewClass self, GlibString string) => Signal self (WebFrame -> string -> IO Bool)

-- | A JavaScript confirm dialog was created, providing Yes and No buttons.
scriptConfirm :: (WebViewClass self, GlibString string) => Signal self (WebFrame -> string -> IO Bool)

-- | A JavaScript prompt dialog was created, providing an entry to input
--   text.
scriptPrompt :: (WebViewClass self, GlibString string) => Signal self (WebFrame -> string -> string -> IO Bool)

-- | When status-bar text changed, this signal will emitted.
statusBarTextChanged :: (WebViewClass self, GlibString string) => Signal self (string -> IO ())

-- | When a context menu is about to be displayed this signal is emitted.
populatePopup :: WebViewClass self => Signal self (Menu -> IO ())
editingBegan :: WebViewClass self => Signal self (IO ())
editingEnded :: WebViewClass self => Signal self (IO ())

-- | The <a>selectAll</a> signal is a keybinding signal which gets emitted
--   to select the complete contents of the text view.
--   
--   The default bindings for this signal is Ctrl-a.
selectAll :: WebViewClass self => Signal self (IO ())

-- | When selection changed, this signal is emitted.
selectionChanged :: WebViewClass self => Signal self (IO ())

-- | Decide whether or not to display the given MIME type. If this signal
--   is not handled, the default behavior is to show the content of the
--   requested URI if WebKit can show this MIME type and the content
--   disposition is not a download; if WebKit is not able to show the MIME
--   type nothing happens.
--   
--   Notice that if you return True, meaning that you handled the signal,
--   you are expected to be aware of the <a>Content-Disposition</a> header.
--   A value of "attachment" usually indicates a download regardless of the
--   MIME type, see also soupMessageHeadersGetContentDisposition' And you
--   must call <tt>webPolicyDecisionIgnore</tt>,
--   <tt>webPolicyDecisionDownload</tt>, or <tt>webPolicyDecisionUse</tt>
--   on the <tt>webPolicyDecision</tt> object.
mimeTypePolicyDecisionRequested :: (WebViewClass self, GlibString string) => Signal self (WebFrame -> NetworkRequest -> string -> WebPolicyDecision -> IO Bool)

-- | Emitted when frame requests a navigation to another page. If this
--   signal is not handled, the default behavior is to allow the
--   navigation.
--   
--   Notice that if you return True, meaning that you handled the signal,
--   you are expected to be aware of the <a>Content-Disposition</a> header.
--   A value of "attachment" usually indicates a download regardless of the
--   MIME type, see also soupMessageHeadersGetContentDisposition' And you
--   must call <tt>webPolicyDecisionIgnore</tt>,
--   <tt>webPolicyDecisionDownload</tt>, or <tt>webPolicyDecisionUse</tt>
--   on the <tt>webPolicyDecision</tt> object.
navigationPolicyDecisionRequested :: WebViewClass self => Signal self (WebFrame -> NetworkRequest -> WebNavigationAction -> WebPolicyDecision -> IO Bool)

-- | Emitted when frame requests opening a new window. With this signal the
--   browser can use the context of the request to decide about the new
--   window. If the request is not handled the default behavior is to allow
--   opening the new window to load the URI, which will cause a
--   <a>createWebView</a> signal emission where the browser handles the new
--   window action but without information of the context that caused the
--   navigation. The following <a>navigationPolicyDecisionRequested</a>
--   emissions will load the page after the creation of the new window just
--   with the information of this new navigation context, without any
--   information about the action that made this new window to be opened.
--   
--   Notice that if you return True, meaning that you handled the signal,
--   you are expected to be aware of the <a>Content-Disposition</a> header.
--   A value of "attachment" usually indicates a download regardless of the
--   MIME type, see also soupMessageHeadersGetContentDisposition' And you
--   must call <tt>webPolicyDecisionIgnore</tt>,
--   <tt>webPolicyDecisionDownload</tt>, or <tt>webPolicyDecisionUse</tt>
--   on the <tt>webPolicyDecision</tt> object.
newWindowPolicyDecisionRequested :: WebViewClass self => Signal self (WebFrame -> NetworkRequest -> WebNavigationAction -> WebPolicyDecision -> IO Bool)

-- | When a frame wants to cancel geolocation permission it had requested
--   before.
--   
--   <ul>
--   <li>Since 1.1.23</li>
--   </ul>
geolocationPolicyDecisionCancelled :: WebViewClass self => Signal self (WebFrame -> IO ())

-- | When a frame wants to get its geolocation permission. The receiver
--   must reply with a boolean wether it handled or not the request. If the
--   request is not handled, default behaviour is to deny geolocation.
--   
--   <ul>
--   <li>Since 1.1.23</li>
--   </ul>
geolocationPolicyDecisionRequested :: WebViewClass self => Signal self (WebFrame -> GeolocationPolicyDecision -> IO Bool)

-- | The <a>moveCursor</a> will be emitted to apply the cursor movement
--   described by its parameters to the view.
moveCursor :: WebViewClass self => Signal self (MovementStep -> Int -> IO Bool)

-- | When set scroll adjustments, this signal is emitted.
setScrollAdjustments :: WebViewClass self => Signal self (Adjustment -> Adjustment -> IO ())

-- | When the cursor is over a link, this signal is emitted.
--   
--   title - the link's title or <tt>Nothing</tt> in case of failure.
--   
--   uri - the URI the link points to or <tt>Nothing</tt> in case of
--   failure.
hoveringOverLink :: (WebViewClass self, GlibString string) => Signal self (Maybe string -> Maybe string -> IO ())
createWebView :: WebViewClass self => Signal self (WebFrame -> IO WebView)

-- | Emitted after new <a>WebView</a> instance had been created in
--   <tt>onCreateWebView</tt> user function when the new <a>WebView</a>
--   should be displayed to the user.
--   
--   All the information about how the window should look, including
--   size,position,whether the location, status and scroll bars should be
--   displayed, is ready set.
webViewReady :: WebViewClass self => Signal self (IO Bool)

-- | Emitted when closing a WebView is requested.
--   
--   This occurs when a call is made from JavaScript's window.close
--   function. The default signal handler does not do anything. It is the
--   owner's responsibility to hide or delete the <a>WebView</a>, if
--   necessary.
--   
--   User function should return True to stop the handlers from being
--   invoked for the event or False to propagate the event furter
closeWebView :: WebViewClass self => Signal self (IO Bool)

-- | Emitted when printing is requested by the frame, usually because of a
--   javascript call. When handling this signal you should call
--   <tt>webFramePrintFull</tt> or <tt>webFramePrint</tt> to do the actual
--   printing.
--   
--   The default handler will present a print dialog and carry a print
--   operation. Notice that this means that if you intend to ignore a print
--   request you must connect to this signal, and return True.
printRequested :: WebViewClass self => Signal self (WebFrame -> IO Bool)

-- | The <a>databaseQuotaExceeded</a> signal will be emitted when a Web
--   Database exceeds the quota of its security origin. This signal may be
--   used to increase the size of the quota before the originating
--   operation fails.
databaseQuotaExceeded :: WebViewClass self => Signal self (WebFrame -> WebDatabase -> IO ())

-- | Emitted after A new <a>Download</a> is being requested.
--   
--   By default, if the signal is not handled, the download is cancelled.
--   
--   Notice that while handling this signal you must set the target URI
--   using <tt>downloadSetDestinationUri</tt>
--   
--   If you intend to handle downloads yourself, return False in user
--   function.
downloadRequested :: WebViewClass self => Signal self (Download -> IO Bool)

-- | The "redo" signal is a keybinding signal which gets emitted to redo
--   the last editing command.
--   
--   The default binding for this signal is Ctrl-Shift-z
redo :: WebViewClass self => Signal self (IO ())

-- | The "undo" signal is a keybinding signal which gets emitted to undo
--   the last editing command.
--   
--   The default binding for this signal is Ctrl-z
undo :: WebViewClass self => Signal self (IO ())
instance Enum NavigationResponse
instance Eq NavigationResponse
instance Show NavigationResponse
instance Enum TargetInfo
instance Eq TargetInfo
instance Show TargetInfo
instance Enum ViewMode
instance Eq ViewMode
instance Show ViewMode
instance Enum LoadStatus
instance Eq LoadStatus
instance Show LoadStatus


-- | Access to the WebKit Web WindowFeatures
module Graphics.UI.Gtk.WebKit.WebWindowFeatures
data WebWindowFeatures
class GObjectClass o => WebWindowFeaturesClass o

-- | Creates a new <a>WebWindowFeatures</a> instance with default values.
--   It must be manually attached to a WebView.
webWindowFeaturesNew :: IO WebWindowFeatures

-- | Decides if a <a>WebWindowFeatures</a> instance equals another, as in
--   has the same values.
webWindowFeaturesEqual :: (WebWindowFeaturesClass winA, WebWindowFeaturesClass winB) => winA -> winB -> IO Bool

-- | Controls whether window will be displayed fullscreen.
webWindowFeaturesFullscreen :: WebWindowFeaturesClass self => Attr self Bool

-- | The height of the window on the screen.
webWindowFeaturesHeight :: WebWindowFeaturesClass self => Attr self Int

-- | The width of the window on the screen.
webWindowFeaturesWidth :: WebWindowFeaturesClass self => Attr self Int

-- | The starting x position of the window on the screen.
webWindowFeaturesX :: WebWindowFeaturesClass self => Attr self Int

-- | The starting y position of the window on the screen.
webWindowFeaturesY :: WebWindowFeaturesClass self => Attr self Int

-- | Controls whether the locationbar should be visible for the window.
webWindowFeaturesLocationbarVisible :: WebWindowFeaturesClass self => Attr self Bool

-- | Controls whether the menubar should be visible for the window.
webWindowFeaturesMenubarVisible :: WebWindowFeaturesClass self => Attr self Bool

-- | Controls whether the scrollbar should be visible for the window.
webWindowFeaturesScrollbarVisible :: WebWindowFeaturesClass self => Attr self Bool

-- | Controls whether the statusbar should be visible for the window.
webWindowFeaturesStatusbarVisible :: WebWindowFeaturesClass self => Attr self Bool

-- | Controls whether the toolbar should be visible for the window.
webWindowFeaturesToolbarVisible :: WebWindowFeaturesClass self => Attr self Bool

module Graphics.UI.Gtk.WebKit.DOM.Event
eventStopPropagation :: EventClass self => self -> IO ()
eventPreventDefault :: EventClass self => self -> IO ()
eventInitEvent :: (EventClass self, GlibString string) => self -> string -> Bool -> Bool -> IO ()
eventStopImmediatePropagation :: EventClass self => self -> IO ()
cNONE :: Integer
cCAPTURING_PHASE :: Integer
cAT_TARGET :: Integer
cBUBBLING_PHASE :: Integer
cMOUSEDOWN :: Integer
cMOUSEUP :: Integer
cMOUSEOVER :: Integer
cMOUSEOUT :: Integer
cMOUSEMOVE :: Integer
cMOUSEDRAG :: Integer
cCLICK :: Integer
cDBLCLICK :: Integer
cKEYDOWN :: Integer
cKEYUP :: Integer
cKEYPRESS :: Integer
cDRAGDROP :: Integer
cFOCUS :: Integer
cBLUR :: Integer
cSELECT :: Integer
cCHANGE :: Integer
eventGetTarget :: EventClass self => self -> IO (Maybe EventTarget)
eventGetCurrentTarget :: EventClass self => self -> IO (Maybe EventTarget)
eventGetEventPhase :: EventClass self => self -> IO Word
eventGetBubbles :: EventClass self => self -> IO Bool
eventGetCancelable :: EventClass self => self -> IO Bool
eventGetTimeStamp :: EventClass self => self -> IO Word
eventGetDefaultPrevented :: EventClass self => self -> IO Bool
eventGetSrcElement :: EventClass self => self -> IO (Maybe EventTarget)
eventSetReturnValue :: EventClass self => self -> Bool -> IO ()
eventGetReturnValue :: EventClass self => self -> IO Bool
eventSetCancelBubble :: EventClass self => self -> Bool -> IO ()
eventGetCancelBubble :: EventClass self => self -> IO Bool
data Event
class GObjectClass o => EventClass o
castToEvent :: GObjectClass obj => obj -> Event
gTypeEvent :: GType
toEvent :: EventClass o => o -> Event

module Graphics.UI.Gtk.WebKit.DOM.UIEvent
uiEventInitUIEvent :: (UIEventClass self, DOMWindowClass view, GlibString string) => self -> string -> Bool -> Bool -> Maybe view -> Int -> IO ()
uiEventGetView :: UIEventClass self => self -> IO (Maybe DOMWindow)
uiEventGetDetail :: UIEventClass self => self -> IO Int
uiEventGetKeyCode :: UIEventClass self => self -> IO Int
uiEventGetCharCode :: UIEventClass self => self -> IO Int
uiEventGetLayerX :: UIEventClass self => self -> IO Int
uiEventGetLayerY :: UIEventClass self => self -> IO Int
uiEventGetPageX :: UIEventClass self => self -> IO Int
uiEventGetPageY :: UIEventClass self => self -> IO Int
uiEventGetWhich :: UIEventClass self => self -> IO Int
data UIEvent
class EventClass o => UIEventClass o
castToUIEvent :: GObjectClass obj => obj -> UIEvent
gTypeUIEvent :: GType
toUIEvent :: UIEventClass o => o -> UIEvent

module Graphics.UI.Gtk.WebKit.DOM.MouseEvent
mouseEventInitMouseEvent :: (MouseEventClass self, DOMWindowClass view, EventTargetClass relatedTarget, GlibString string) => self -> string -> Bool -> Bool -> Maybe view -> Int -> Int -> Int -> Int -> Int -> Bool -> Bool -> Bool -> Bool -> Word -> Maybe relatedTarget -> IO ()
mouseEventGetScreenX :: MouseEventClass self => self -> IO Int
mouseEventGetScreenY :: MouseEventClass self => self -> IO Int
mouseEventGetClientX :: MouseEventClass self => self -> IO Int
mouseEventGetClientY :: MouseEventClass self => self -> IO Int
mouseEventGetCtrlKey :: MouseEventClass self => self -> IO Bool
mouseEventGetShiftKey :: MouseEventClass self => self -> IO Bool
mouseEventGetAltKey :: MouseEventClass self => self -> IO Bool
mouseEventGetMetaKey :: MouseEventClass self => self -> IO Bool
mouseEventGetButton :: MouseEventClass self => self -> IO Word
mouseEventGetRelatedTarget :: MouseEventClass self => self -> IO (Maybe EventTarget)
mouseEventGetMovementX :: MouseEventClass self => self -> IO Int
mouseEventGetMovementY :: MouseEventClass self => self -> IO Int
mouseEventGetOffsetX :: MouseEventClass self => self -> IO Int
mouseEventGetOffsetY :: MouseEventClass self => self -> IO Int
mouseEventGetX :: MouseEventClass self => self -> IO Int
mouseEventGetY :: MouseEventClass self => self -> IO Int
mouseEventGetFromElement :: MouseEventClass self => self -> IO (Maybe Node)
mouseEventGetToElement :: MouseEventClass self => self -> IO (Maybe Node)
data MouseEvent
class UIEventClass o => MouseEventClass o
castToMouseEvent :: GObjectClass obj => obj -> MouseEvent
gTypeMouseEvent :: GType
toMouseEvent :: MouseEventClass o => o -> MouseEvent

module Graphics.UI.Gtk.WebKit.DOM.EventTargetClosures
eventTargetAddEventListener :: (GObjectClass self, EventClass event, GlibString string) => self -> string -> Bool -> (self -> event -> IO ()) -> IO (IO ())

module Graphics.UI.Gtk.WebKit.DOM.EventM
type Signal target callback = target -> callback -> IO (IO ())
type EventM e t a = ReaderT (t, e) IO a
target :: EventM e t t
event :: EventM e t e
eventTarget :: EventClass e => EventM e t (Maybe EventTarget)
eventCurrentTarget :: EventClass e => EventM e t (Maybe EventTarget)
eventPhase :: EventClass e => EventM e t Word
bubbles :: EventClass e => EventM e t Bool
cancelable :: EventClass e => EventM e t Bool
timeStamp :: EventClass e => EventM e t Word
stopPropagation :: EventClass e => EventM e t ()
preventDefault :: EventClass e => EventM e t ()
defaultPrevented :: EventClass e => EventM e t Bool
stopImmediatePropagation :: EventClass e => EventM e t ()
srcElement :: EventClass e => EventM e t (Maybe EventTarget)
getCancelBubble :: EventClass e => EventM e t Bool
cancelBubble :: EventClass e => Bool -> EventM e t ()
getReturnValue :: EventClass e => EventM e t Bool
returnValue :: EventClass e => Bool -> EventM e t ()
uiView :: UIEventClass e => EventM e t (Maybe DOMWindow)
uiDetail :: UIEventClass e => EventM e t Int
uiKeyCode :: UIEventClass e => EventM e t Int
uiCharCode :: UIEventClass e => EventM e t Int
uiLayerX :: UIEventClass e => EventM e t Int
uiLayerY :: UIEventClass e => EventM e t Int
uiLayerXY :: UIEventClass e => EventM e t (Int, Int)
uiPageX :: UIEventClass e => EventM e t Int
uiPageY :: UIEventClass e => EventM e t Int
uiPageXY :: UIEventClass e => EventM e t (Int, Int)
uiWhich :: UIEventClass e => EventM e t Int
mouseScreenX :: MouseEventClass e => EventM e t Int
mouseScreenY :: MouseEventClass e => EventM e t Int
mouseScreenXY :: MouseEventClass e => EventM e t (Int, Int)
mouseClientX :: MouseEventClass e => EventM e t Int
mouseClientY :: MouseEventClass e => EventM e t Int
mouseClientXY :: MouseEventClass e => EventM e t (Int, Int)
mouseMovementX :: MouseEventClass e => EventM e t Int
mouseMovementY :: MouseEventClass e => EventM e t Int
mouseMovementXY :: MouseEventClass e => EventM e t (Int, Int)
mouseCtrlKey :: MouseEventClass e => EventM e t Bool
mouseShiftKey :: MouseEventClass e => EventM e t Bool
mouseAltKey :: MouseEventClass e => EventM e t Bool
mouseMetaKey :: MouseEventClass e => EventM e t Bool
mouseButton :: MouseEventClass e => EventM e t Word
mouseRelatedTarget :: MouseEventClass e => EventM e t (Maybe EventTarget)
mouseOffsetX :: MouseEventClass e => EventM e t Int
mouseOffsetY :: MouseEventClass e => EventM e t Int
mouseOffsetXY :: MouseEventClass e => EventM e t (Int, Int)
mouseX :: MouseEventClass e => EventM e t Int
mouseY :: MouseEventClass e => EventM e t Int
mouseXY :: MouseEventClass e => EventM e t (Int, Int)
mouseFromElement :: MouseEventClass e => EventM e t (Maybe Node)
mouseToElement :: MouseEventClass e => EventM e t (Maybe Node)
connect :: (GObjectClass t, EventClass e) => String -> t -> EventM e t () -> IO (IO ())

module Graphics.UI.Gtk.WebKit.DOM.Attr
attrGetName :: (DOMAttrClass self, GlibString string) => self -> IO string
attrGetSpecified :: DOMAttrClass self => self -> IO Bool
attrSetValue :: (DOMAttrClass self, GlibString string) => self -> string -> IO ()
attrGetValue :: (DOMAttrClass self, GlibString string) => self -> IO string
attrGetOwnerElement :: DOMAttrClass self => self -> IO (Maybe Element)
attrGetIsId :: DOMAttrClass self => self -> IO Bool
data DOMAttr
class NodeClass o => DOMAttrClass o
castToDOMAttr :: GObjectClass obj => obj -> DOMAttr
gTypeDOMAttr :: GType
toDOMAttr :: DOMAttrClass o => o -> DOMAttr

module Graphics.UI.Gtk.WebKit.DOM.BarProp
barPropGetVisible :: BarPropClass self => self -> IO Bool
data BarProp
class GObjectClass o => BarPropClass o
castToBarProp :: GObjectClass obj => obj -> BarProp
gTypeBarProp :: GType
toBarProp :: BarPropClass o => o -> BarProp

module Graphics.UI.Gtk.WebKit.DOM.Blob
blobGetSize :: BlobClass self => self -> IO Word64
data Blob
class GObjectClass o => BlobClass o
castToBlob :: GObjectClass obj => obj -> Blob
gTypeBlob :: GType
toBlob :: BlobClass o => o -> Blob

module Graphics.UI.Gtk.WebKit.DOM.CharacterData
characterDataSubstringData :: (CharacterDataClass self, GlibString string) => self -> Word -> Word -> IO string
characterDataAppendData :: (CharacterDataClass self, GlibString string) => self -> string -> IO ()
characterDataInsertData :: (CharacterDataClass self, GlibString string) => self -> Word -> string -> IO ()
characterDataDeleteData :: CharacterDataClass self => self -> Word -> Word -> IO ()
characterDataReplaceData :: (CharacterDataClass self, GlibString string) => self -> Word -> Word -> string -> IO ()
characterDataSetData :: (CharacterDataClass self, GlibString string) => self -> string -> IO ()
characterDataGetData :: (CharacterDataClass self, GlibString string) => self -> IO string
characterDataGetLength :: CharacterDataClass self => self -> IO Word
data CharacterData
class NodeClass o => CharacterDataClass o
castToCharacterData :: GObjectClass obj => obj -> CharacterData
gTypeCharacterData :: GType
toCharacterData :: CharacterDataClass o => o -> CharacterData

module Graphics.UI.Gtk.WebKit.DOM.Console
consoleTime :: (ConsoleClass self, GlibString string) => self -> string -> IO ()
consoleGroupEnd :: ConsoleClass self => self -> IO ()
data Console
class GObjectClass o => ConsoleClass o
castToConsole :: GObjectClass obj => obj -> Console
gTypeConsole :: GType
toConsole :: ConsoleClass o => o -> Console

module Graphics.UI.Gtk.WebKit.DOM.CSSRule
cUNKNOWN_RULE :: Integer
cSTYLE_RULE :: Integer
cCHARSET_RULE :: Integer
cIMPORT_RULE :: Integer
cMEDIA_RULE :: Integer
cFONT_FACE_RULE :: Integer
cPAGE_RULE :: Integer
cWEBKIT_KEYFRAMES_RULE :: Integer
cWEBKIT_KEYFRAME_RULE :: Integer
cssRuleSetCssText :: (CSSRuleClass self, GlibString string) => self -> string -> IO ()
cssRuleGetCssText :: (CSSRuleClass self, GlibString string) => self -> IO string
cssRuleGetParentStyleSheet :: CSSRuleClass self => self -> IO (Maybe CSSStyleSheet)
cssRuleGetParentRule :: CSSRuleClass self => self -> IO (Maybe CSSRule)
data CSSRule
class GObjectClass o => CSSRuleClass o
castToCSSRule :: GObjectClass obj => obj -> CSSRule
gTypeCSSRule :: GType
toCSSRule :: CSSRuleClass o => o -> CSSRule

module Graphics.UI.Gtk.WebKit.DOM.CSSRuleList
cssRuleListItem :: CSSRuleListClass self => self -> Word -> IO (Maybe CSSRule)
cssRuleListGetLength :: CSSRuleListClass self => self -> IO Word
data CSSRuleList
class GObjectClass o => CSSRuleListClass o
castToCSSRuleList :: GObjectClass obj => obj -> CSSRuleList
gTypeCSSRuleList :: GType
toCSSRuleList :: CSSRuleListClass o => o -> CSSRuleList

module Graphics.UI.Gtk.WebKit.DOM.CSSStyleDeclaration
cssStyleDeclarationGetPropertyValue :: (CSSStyleDeclarationClass self, GlibString string) => self -> string -> IO string
cssStyleDeclarationRemoveProperty :: (CSSStyleDeclarationClass self, GlibString string) => self -> string -> IO string
cssStyleDeclarationGetPropertyPriority :: (CSSStyleDeclarationClass self, GlibString string) => self -> string -> IO string
cssStyleDeclarationSetProperty :: (CSSStyleDeclarationClass self, GlibString string) => self -> string -> string -> string -> IO ()
cssStyleDeclarationItem :: (CSSStyleDeclarationClass self, GlibString string) => self -> Word -> IO string
cssStyleDeclarationGetPropertyShorthand :: (CSSStyleDeclarationClass self, GlibString string) => self -> string -> IO string
cssStyleDeclarationIsPropertyImplicit :: (CSSStyleDeclarationClass self, GlibString string) => self -> string -> IO Bool
cssStyleDeclarationSetCssText :: (CSSStyleDeclarationClass self, GlibString string) => self -> string -> IO ()
cssStyleDeclarationGetCssText :: (CSSStyleDeclarationClass self, GlibString string) => self -> IO string
cssStyleDeclarationGetLength :: CSSStyleDeclarationClass self => self -> IO Word
cssStyleDeclarationGetParentRule :: CSSStyleDeclarationClass self => self -> IO (Maybe CSSRule)
data CSSStyleDeclaration
class GObjectClass o => CSSStyleDeclarationClass o
castToCSSStyleDeclaration :: GObjectClass obj => obj -> CSSStyleDeclaration
gTypeCSSStyleDeclaration :: GType
toCSSStyleDeclaration :: CSSStyleDeclarationClass o => o -> CSSStyleDeclaration

module Graphics.UI.Gtk.WebKit.DOM.CSSStyleSheet
cssStyleSheetInsertRule :: (CSSStyleSheetClass self, GlibString string) => self -> string -> Word -> IO Word
cssStyleSheetDeleteRule :: CSSStyleSheetClass self => self -> Word -> IO ()
cssStyleSheetAddRule :: (CSSStyleSheetClass self, GlibString string) => self -> string -> string -> Word -> IO Int
cssStyleSheetRemoveRule :: CSSStyleSheetClass self => self -> Word -> IO ()
cssStyleSheetGetOwnerRule :: CSSStyleSheetClass self => self -> IO (Maybe CSSRule)
cssStyleSheetGetCssRules :: CSSStyleSheetClass self => self -> IO (Maybe CSSRuleList)
cssStyleSheetGetRules :: CSSStyleSheetClass self => self -> IO (Maybe CSSRuleList)
data CSSStyleSheet
class StyleSheetClass o => CSSStyleSheetClass o
castToCSSStyleSheet :: GObjectClass obj => obj -> CSSStyleSheet
gTypeCSSStyleSheet :: GType
toCSSStyleSheet :: CSSStyleSheetClass o => o -> CSSStyleSheet

module Graphics.UI.Gtk.WebKit.DOM.CSSValue
cCSS_INHERIT :: Integer
cCSS_PRIMITIVE_VALUE :: Integer
cCSS_VALUE_LIST :: Integer
cCSS_CUSTOM :: Integer
cssValueSetCssText :: (CSSValueClass self, GlibString string) => self -> string -> IO ()
cssValueGetCssText :: (CSSValueClass self, GlibString string) => self -> IO string
cssValueGetCssValueType :: CSSValueClass self => self -> IO Word
data CSSValue
class GObjectClass o => CSSValueClass o
castToCSSValue :: GObjectClass obj => obj -> CSSValue
gTypeCSSValue :: GType
toCSSValue :: CSSValueClass o => o -> CSSValue

module Graphics.UI.Gtk.WebKit.DOM.Document
documentCreateElement :: (DocumentClass self, GlibString string) => self -> string -> IO (Maybe Element)
documentCreateDocumentFragment :: DocumentClass self => self -> IO (Maybe DocumentFragment)
documentCreateTextNode :: (DocumentClass self, GlibString string) => self -> string -> IO (Maybe Text)
documentCreateComment :: (DocumentClass self, GlibString string) => self -> string -> IO (Maybe Comment)
documentCreateCDATASection :: (DocumentClass self, GlibString string) => self -> string -> IO (Maybe CDATASection)
documentCreateProcessingInstruction :: (DocumentClass self, GlibString string) => self -> string -> string -> IO (Maybe ProcessingInstruction)
documentCreateAttribute :: (DocumentClass self, GlibString string) => self -> string -> IO (Maybe DOMAttr)
documentCreateEntityReference :: (DocumentClass self, GlibString string) => self -> string -> IO (Maybe EntityReference)
documentGetElementsByTagName :: (DocumentClass self, GlibString string) => self -> string -> IO (Maybe NodeList)
documentImportNode :: (DocumentClass self, NodeClass importedNode) => self -> Maybe importedNode -> Bool -> IO (Maybe Node)
documentCreateElementNS :: (DocumentClass self, GlibString string) => self -> string -> string -> IO (Maybe Element)
documentCreateAttributeNS :: (DocumentClass self, GlibString string) => self -> string -> string -> IO (Maybe DOMAttr)
documentGetElementsByTagNameNS :: (DocumentClass self, GlibString string) => self -> string -> string -> IO (Maybe NodeList)
documentGetElementById :: (DocumentClass self, GlibString string) => self -> string -> IO (Maybe Element)
documentAdoptNode :: (DocumentClass self, NodeClass source) => self -> Maybe source -> IO (Maybe Node)
documentCreateEvent :: (DocumentClass self, GlibString string) => self -> string -> IO (Maybe Event)
documentCreateRange :: DocumentClass self => self -> IO (Maybe DOMRange)
documentCreateNodeIterator :: (DocumentClass self, NodeClass root, NodeFilterClass filter) => self -> Maybe root -> Word -> Maybe filter -> Bool -> IO (Maybe NodeIterator)
documentCreateTreeWalker :: (DocumentClass self, NodeClass root, NodeFilterClass filter) => self -> Maybe root -> Word -> Maybe filter -> Bool -> IO (Maybe TreeWalker)
documentGetOverrideStyle :: (DocumentClass self, ElementClass element, GlibString string) => self -> Maybe element -> string -> IO (Maybe CSSStyleDeclaration)
documentCreateExpression :: (DocumentClass self, XPathNSResolverClass resolver, GlibString string) => self -> string -> Maybe resolver -> IO (Maybe XPathExpression)
documentCreateNSResolver :: (DocumentClass self, NodeClass nodeResolver) => self -> Maybe nodeResolver -> IO (Maybe XPathNSResolver)
documentEvaluate :: (DocumentClass self, NodeClass contextNode, XPathNSResolverClass resolver, XPathResultClass inResult, GlibString string) => self -> string -> Maybe contextNode -> Maybe resolver -> Word -> Maybe inResult -> IO (Maybe XPathResult)
documentExecCommand :: (DocumentClass self, GlibString string) => self -> string -> Bool -> string -> IO Bool
documentQueryCommandEnabled :: (DocumentClass self, GlibString string) => self -> string -> IO Bool
documentQueryCommandIndeterm :: (DocumentClass self, GlibString string) => self -> string -> IO Bool
documentQueryCommandState :: (DocumentClass self, GlibString string) => self -> string -> IO Bool
documentQueryCommandSupported :: (DocumentClass self, GlibString string) => self -> string -> IO Bool
documentQueryCommandValue :: (DocumentClass self, GlibString string) => self -> string -> IO string
documentGetElementsByName :: (DocumentClass self, GlibString string) => self -> string -> IO (Maybe NodeList)
documentElementFromPoint :: DocumentClass self => self -> Int -> Int -> IO (Maybe Element)
documentCaretRangeFromPoint :: DocumentClass self => self -> Int -> Int -> IO (Maybe DOMRange)
documentCreateCSSStyleDeclaration :: DocumentClass self => self -> IO (Maybe CSSStyleDeclaration)
documentGetElementsByClassName :: (DocumentClass self, GlibString string) => self -> string -> IO (Maybe NodeList)
documentQuerySelector :: (DocumentClass self, GlibString string) => self -> string -> IO (Maybe Element)
documentQuerySelectorAll :: (DocumentClass self, GlibString string) => self -> string -> IO (Maybe NodeList)
documentWebkitExitPointerLock :: DocumentClass self => self -> IO ()
documentWebkitGetNamedFlows :: DocumentClass self => self -> IO (Maybe DOMNamedFlowCollection)
documentGetDoctype :: DocumentClass self => self -> IO (Maybe DocumentType)
documentGetImplementation :: DocumentClass self => self -> IO (Maybe DOMImplementation)
documentGetDocumentElement :: DocumentClass self => self -> IO (Maybe Element)
documentGetInputEncoding :: (DocumentClass self, GlibString string) => self -> IO string
documentGetXmlEncoding :: (DocumentClass self, GlibString string) => self -> IO string
documentSetXmlVersion :: (DocumentClass self, GlibString string) => self -> string -> IO ()
documentGetXmlVersion :: (DocumentClass self, GlibString string) => self -> IO string
documentSetXmlStandalone :: DocumentClass self => self -> Bool -> IO ()
documentGetXmlStandalone :: DocumentClass self => self -> IO Bool
documentSetDocumentURI :: (DocumentClass self, GlibString string) => self -> string -> IO ()
documentGetDocumentURI :: (DocumentClass self, GlibString string) => self -> IO string
documentGetDefaultView :: DocumentClass self => self -> IO (Maybe DOMWindow)
documentGetStyleSheets :: DocumentClass self => self -> IO (Maybe StyleSheetList)
documentSetTitle :: (DocumentClass self, GlibString string) => self -> string -> IO ()
documentGetTitle :: (DocumentClass self, GlibString string) => self -> IO string
documentGetReferrer :: (DocumentClass self, GlibString string) => self -> IO string
documentGetDomain :: (DocumentClass self, GlibString string) => self -> IO string
documentSetCookie :: (DocumentClass self, GlibString string) => self -> string -> IO ()
documentGetCookie :: (DocumentClass self, GlibString string) => self -> IO string
documentSetBody :: (HTMLElementClass val, DocumentClass self) => self -> Maybe val -> IO ()
documentGetBody :: DocumentClass self => self -> IO (Maybe HTMLElement)
documentGetHead :: DocumentClass self => self -> IO (Maybe HTMLHeadElement)
documentGetImages :: DocumentClass self => self -> IO (Maybe HTMLCollection)
documentGetApplets :: DocumentClass self => self -> IO (Maybe HTMLCollection)
documentGetLinks :: DocumentClass self => self -> IO (Maybe HTMLCollection)
documentGetForms :: DocumentClass self => self -> IO (Maybe HTMLCollection)
documentGetAnchors :: DocumentClass self => self -> IO (Maybe HTMLCollection)
documentGetLastModified :: (DocumentClass self, GlibString string) => self -> IO string
documentSetCharset :: (DocumentClass self, GlibString string) => self -> string -> IO ()
documentGetCharset :: (DocumentClass self, GlibString string) => self -> IO string
documentGetDefaultCharset :: (DocumentClass self, GlibString string) => self -> IO string
documentGetReadyState :: (DocumentClass self, GlibString string) => self -> IO string
documentGetCharacterSet :: (DocumentClass self, GlibString string) => self -> IO string
documentGetPreferredStylesheetSet :: (DocumentClass self, GlibString string) => self -> IO string
documentSetSelectedStylesheetSet :: (DocumentClass self, GlibString string) => self -> string -> IO ()
documentGetSelectedStylesheetSet :: (DocumentClass self, GlibString string) => self -> IO string
documentGetCompatMode :: (DocumentClass self, GlibString string) => self -> IO string
documentGetWebkitPointerLockElement :: DocumentClass self => self -> IO (Maybe Element)
documentOnabort :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOnblur :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOnchange :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOnclick :: DocumentClass self => Signal self (EventM MouseEvent self ())
documentOncontextmenu :: DocumentClass self => Signal self (EventM MouseEvent self ())
documentOndblclick :: DocumentClass self => Signal self (EventM MouseEvent self ())
documentOndrag :: DocumentClass self => Signal self (EventM MouseEvent self ())
documentOndragend :: DocumentClass self => Signal self (EventM MouseEvent self ())
documentOndragenter :: DocumentClass self => Signal self (EventM MouseEvent self ())
documentOndragleave :: DocumentClass self => Signal self (EventM MouseEvent self ())
documentOndragover :: DocumentClass self => Signal self (EventM MouseEvent self ())
documentOndragstart :: DocumentClass self => Signal self (EventM MouseEvent self ())
documentOndrop :: DocumentClass self => Signal self (EventM MouseEvent self ())
documentOnerror :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOnfocus :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOninput :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOninvalid :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOnkeydown :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOnkeypress :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOnkeyup :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOnload :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOnmousedown :: DocumentClass self => Signal self (EventM MouseEvent self ())
documentOnmouseenter :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOnmouseleave :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOnmousemove :: DocumentClass self => Signal self (EventM MouseEvent self ())
documentOnmouseout :: DocumentClass self => Signal self (EventM MouseEvent self ())
documentOnmouseover :: DocumentClass self => Signal self (EventM MouseEvent self ())
documentOnmouseup :: DocumentClass self => Signal self (EventM MouseEvent self ())
documentOnmousewheel :: DocumentClass self => Signal self (EventM MouseEvent self ())
documentOnreadystatechange :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOnscroll :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOnselect :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOnsubmit :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOnbeforecut :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOncut :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOnbeforecopy :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOncopy :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOnbeforepaste :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOnpaste :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOnreset :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOnsearch :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOnselectstart :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOnselectionchange :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOntouchstart :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOntouchmove :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOntouchend :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOntouchcancel :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOnwebkitfullscreenchange :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOnwebkitfullscreenerror :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOnwebkitpointerlockchange :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOnwebkitpointerlockerror :: DocumentClass self => Signal self (EventM UIEvent self ())
documentOnsecuritypolicyviolation :: DocumentClass self => Signal self (EventM UIEvent self ())
documentGetVisibilityState :: (DocumentClass self, GlibString string) => self -> IO string
documentGetHidden :: DocumentClass self => self -> IO Bool
documentGetSecurityPolicy :: DocumentClass self => self -> IO (Maybe DOMSecurityPolicy)
documentGetCurrentScript :: DocumentClass self => self -> IO (Maybe HTMLScriptElement)
data Document
class NodeClass o => DocumentClass o
castToDocument :: GObjectClass obj => obj -> Document
gTypeDocument :: GType
toDocument :: DocumentClass o => o -> Document

module Graphics.UI.Gtk.WebKit.DOM.DocumentType
documentTypeGetName :: (DocumentTypeClass self, GlibString string) => self -> IO string
documentTypeGetEntities :: DocumentTypeClass self => self -> IO (Maybe NamedNodeMap)
documentTypeGetNotations :: DocumentTypeClass self => self -> IO (Maybe NamedNodeMap)
documentTypeGetPublicId :: (DocumentTypeClass self, GlibString string) => self -> IO string
documentTypeGetSystemId :: (DocumentTypeClass self, GlibString string) => self -> IO string
documentTypeGetInternalSubset :: (DocumentTypeClass self, GlibString string) => self -> IO string
data DocumentType
class NodeClass o => DocumentTypeClass o
castToDocumentType :: GObjectClass obj => obj -> DocumentType
gTypeDocumentType :: GType
toDocumentType :: DocumentTypeClass o => o -> DocumentType

module Graphics.UI.Gtk.WebKit.DOM.DOMApplicationCache
domApplicationCacheUpdate :: DOMApplicationCacheClass self => self -> IO ()
domApplicationCacheSwapCache :: DOMApplicationCacheClass self => self -> IO ()
domApplicationCacheAbort :: DOMApplicationCacheClass self => self -> IO ()
domApplicationCacheDispatchEvent :: (DOMApplicationCacheClass self, EventClass evt) => self -> Maybe evt -> IO Bool
cUNCACHED :: Integer
cIDLE :: Integer
cCHECKING :: Integer
cDOWNLOADING :: Integer
cUPDATEREADY :: Integer
cOBSOLETE :: Integer
domApplicationCacheGetStatus :: DOMApplicationCacheClass self => self -> IO Word
domApplicationCacheOnchecking :: DOMApplicationCacheClass self => Signal self (EventM UIEvent self ())
domApplicationCacheOnerror :: DOMApplicationCacheClass self => Signal self (EventM UIEvent self ())
domApplicationCacheOnnoupdate :: DOMApplicationCacheClass self => Signal self (EventM UIEvent self ())
domApplicationCacheOndownloading :: DOMApplicationCacheClass self => Signal self (EventM UIEvent self ())
domApplicationCacheOnprogress :: DOMApplicationCacheClass self => Signal self (EventM UIEvent self ())
domApplicationCacheOnupdateready :: DOMApplicationCacheClass self => Signal self (EventM UIEvent self ())
domApplicationCacheOncached :: DOMApplicationCacheClass self => Signal self (EventM UIEvent self ())
domApplicationCacheOnobsolete :: DOMApplicationCacheClass self => Signal self (EventM UIEvent self ())
data DOMApplicationCache
class GObjectClass o => DOMApplicationCacheClass o
castToDOMApplicationCache :: GObjectClass obj => obj -> DOMApplicationCache
gTypeDOMApplicationCache :: GType
toDOMApplicationCache :: DOMApplicationCacheClass o => o -> DOMApplicationCache

module Graphics.UI.Gtk.WebKit.DOM.DOMImplementation
domImplementationHasFeature :: (DOMImplementationClass self, GlibString string) => self -> string -> string -> IO Bool
domImplementationCreateDocumentType :: (DOMImplementationClass self, GlibString string) => self -> string -> string -> string -> IO (Maybe DocumentType)
domImplementationCreateDocument :: (DOMImplementationClass self, DocumentTypeClass doctype, GlibString string) => self -> string -> string -> Maybe doctype -> IO (Maybe Document)
domImplementationCreateCSSStyleSheet :: (DOMImplementationClass self, GlibString string) => self -> string -> string -> IO (Maybe CSSStyleSheet)
domImplementationCreateHTMLDocument :: (DOMImplementationClass self, GlibString string) => self -> string -> IO (Maybe HTMLDocument)
data DOMImplementation
class GObjectClass o => DOMImplementationClass o
castToDOMImplementation :: GObjectClass obj => obj -> DOMImplementation
gTypeDOMImplementation :: GType
toDOMImplementation :: DOMImplementationClass o => o -> DOMImplementation

module Graphics.UI.Gtk.WebKit.DOM.DOMMimeType
domMimeTypeGetSuffixes :: (DOMMimeTypeClass self, GlibString string) => self -> IO string
domMimeTypeGetDescription :: (DOMMimeTypeClass self, GlibString string) => self -> IO string
domMimeTypeGetEnabledPlugin :: DOMMimeTypeClass self => self -> IO (Maybe DOMPlugin)
data DOMMimeType
class GObjectClass o => DOMMimeTypeClass o
castToDOMMimeType :: GObjectClass obj => obj -> DOMMimeType
gTypeDOMMimeType :: GType
toDOMMimeType :: DOMMimeTypeClass o => o -> DOMMimeType

module Graphics.UI.Gtk.WebKit.DOM.DOMMimeTypeArray
domMimeTypeArrayItem :: DOMMimeTypeArrayClass self => self -> Word -> IO (Maybe DOMMimeType)
domMimeTypeArrayNamedItem :: (DOMMimeTypeArrayClass self, GlibString string) => self -> string -> IO (Maybe DOMMimeType)
domMimeTypeArrayGetLength :: DOMMimeTypeArrayClass self => self -> IO Word
data DOMMimeTypeArray
class GObjectClass o => DOMMimeTypeArrayClass o
castToDOMMimeTypeArray :: GObjectClass obj => obj -> DOMMimeTypeArray
gTypeDOMMimeTypeArray :: GType
toDOMMimeTypeArray :: DOMMimeTypeArrayClass o => o -> DOMMimeTypeArray

module Graphics.UI.Gtk.WebKit.DOM.DOMNamedFlowCollection
domNamedFlowCollectionItem :: DOMNamedFlowCollectionClass self => self -> Word -> IO (Maybe WebKitNamedFlow)
domNamedFlowCollectionNamedItem :: (DOMNamedFlowCollectionClass self, GlibString string) => self -> string -> IO (Maybe WebKitNamedFlow)
domNamedFlowCollectionGetLength :: DOMNamedFlowCollectionClass self => self -> IO Word
data DOMNamedFlowCollection
class GObjectClass o => DOMNamedFlowCollectionClass o
castToDOMNamedFlowCollection :: GObjectClass obj => obj -> DOMNamedFlowCollection
gTypeDOMNamedFlowCollection :: GType
toDOMNamedFlowCollection :: DOMNamedFlowCollectionClass o => o -> DOMNamedFlowCollection

module Graphics.UI.Gtk.WebKit.DOM.DOMPlugin
domPluginItem :: DOMPluginClass self => self -> Word -> IO (Maybe DOMMimeType)
domPluginNamedItem :: (DOMPluginClass self, GlibString string) => self -> string -> IO (Maybe DOMMimeType)
domPluginGetName :: (DOMPluginClass self, GlibString string) => self -> IO string
domPluginGetFilename :: (DOMPluginClass self, GlibString string) => self -> IO string
domPluginGetDescription :: (DOMPluginClass self, GlibString string) => self -> IO string
domPluginGetLength :: DOMPluginClass self => self -> IO Word
data DOMPlugin
class GObjectClass o => DOMPluginClass o
castToDOMPlugin :: GObjectClass obj => obj -> DOMPlugin
gTypeDOMPlugin :: GType
toDOMPlugin :: DOMPluginClass o => o -> DOMPlugin

module Graphics.UI.Gtk.WebKit.DOM.DOMPluginArray
domPluginArrayItem :: DOMPluginArrayClass self => self -> Word -> IO (Maybe DOMPlugin)
domPluginArrayNamedItem :: (DOMPluginArrayClass self, GlibString string) => self -> string -> IO (Maybe DOMPlugin)
domPluginArrayRefresh :: DOMPluginArrayClass self => self -> Bool -> IO ()
domPluginArrayGetLength :: DOMPluginArrayClass self => self -> IO Word
data DOMPluginArray
class GObjectClass o => DOMPluginArrayClass o
castToDOMPluginArray :: GObjectClass obj => obj -> DOMPluginArray
gTypeDOMPluginArray :: GType
toDOMPluginArray :: DOMPluginArrayClass o => o -> DOMPluginArray

module Graphics.UI.Gtk.WebKit.DOM.DOMSelection
domSelectionCollapse :: (DOMSelectionClass self, NodeClass node) => self -> Maybe node -> Int -> IO ()
domSelectionCollapseToEnd :: DOMSelectionClass self => self -> IO ()
domSelectionCollapseToStart :: DOMSelectionClass self => self -> IO ()
domSelectionDeleteFromDocument :: DOMSelectionClass self => self -> IO ()
domSelectionContainsNode :: (DOMSelectionClass self, NodeClass node) => self -> Maybe node -> Bool -> IO Bool
domSelectionSelectAllChildren :: (DOMSelectionClass self, NodeClass node) => self -> Maybe node -> IO ()
domSelectionExtend :: (DOMSelectionClass self, NodeClass node) => self -> Maybe node -> Int -> IO ()
domSelectionGetRangeAt :: DOMSelectionClass self => self -> Int -> IO (Maybe DOMRange)
domSelectionRemoveAllRanges :: DOMSelectionClass self => self -> IO ()
domSelectionAddRange :: (DOMSelectionClass self, DOMRangeClass range) => self -> Maybe range -> IO ()
domSelectionModify :: (DOMSelectionClass self, GlibString string) => self -> string -> string -> string -> IO ()
domSelectionSetBaseAndExtent :: (DOMSelectionClass self, NodeClass baseNode, NodeClass extentNode) => self -> Maybe baseNode -> Int -> Maybe extentNode -> Int -> IO ()
domSelectionSetPosition :: (DOMSelectionClass self, NodeClass node) => self -> Maybe node -> Int -> IO ()
domSelectionEmpty :: DOMSelectionClass self => self -> IO ()
domSelectionGetAnchorNode :: DOMSelectionClass self => self -> IO (Maybe Node)
domSelectionGetAnchorOffset :: DOMSelectionClass self => self -> IO Int
domSelectionGetFocusNode :: DOMSelectionClass self => self -> IO (Maybe Node)
domSelectionGetFocusOffset :: DOMSelectionClass self => self -> IO Int
domSelectionGetIsCollapsed :: DOMSelectionClass self => self -> IO Bool
domSelectionGetRangeCount :: DOMSelectionClass self => self -> IO Int
domSelectionGetBaseNode :: DOMSelectionClass self => self -> IO (Maybe Node)
domSelectionGetBaseOffset :: DOMSelectionClass self => self -> IO Int
domSelectionGetExtentNode :: DOMSelectionClass self => self -> IO (Maybe Node)
domSelectionGetExtentOffset :: DOMSelectionClass self => self -> IO Int
data DOMSelection
class GObjectClass o => DOMSelectionClass o
castToDOMSelection :: GObjectClass obj => obj -> DOMSelection
gTypeDOMSelection :: GType
toDOMSelection :: DOMSelectionClass o => o -> DOMSelection

module Graphics.UI.Gtk.WebKit.DOM.DOMSettableTokenList
domSettableTokenListSetValue :: (DOMSettableTokenListClass self, GlibString string) => self -> string -> IO ()
domSettableTokenListGetValue :: (DOMSettableTokenListClass self, GlibString string) => self -> IO string
data DOMSettableTokenList
class DOMTokenListClass o => DOMSettableTokenListClass o
castToDOMSettableTokenList :: GObjectClass obj => obj -> DOMSettableTokenList
gTypeDOMSettableTokenList :: GType
toDOMSettableTokenList :: DOMSettableTokenListClass o => o -> DOMSettableTokenList

module Graphics.UI.Gtk.WebKit.DOM.DOMTokenList
domTokenListItem :: (DOMTokenListClass self, GlibString string) => self -> Word -> IO string
domTokenListContains :: (DOMTokenListClass self, GlibString string) => self -> string -> IO Bool
domTokenListAdd :: (DOMTokenListClass self, GlibString string) => self -> string -> IO ()
domTokenListRemove :: (DOMTokenListClass self, GlibString string) => self -> string -> IO ()
domTokenListToggle :: (DOMTokenListClass self, GlibString string) => self -> string -> Bool -> IO Bool
domTokenListGetLength :: DOMTokenListClass self => self -> IO Word
data DOMTokenList
class GObjectClass o => DOMTokenListClass o
castToDOMTokenList :: GObjectClass obj => obj -> DOMTokenList
gTypeDOMTokenList :: GType
toDOMTokenList :: DOMTokenListClass o => o -> DOMTokenList

module Graphics.UI.Gtk.WebKit.DOM.DOMWindow
domWindowGetSelection :: DOMWindowClass self => self -> IO (Maybe DOMSelection)
domWindowBlur :: DOMWindowClass self => self -> IO ()
domWindowPrint :: DOMWindowClass self => self -> IO ()
domWindowStop :: DOMWindowClass self => self -> IO ()
domWindowAlert :: (DOMWindowClass self, GlibString string) => self -> string -> IO ()
domWindowConfirm :: (DOMWindowClass self, GlibString string) => self -> string -> IO Bool
domWindowPrompt :: (DOMWindowClass self, GlibString string) => self -> string -> string -> IO string
domWindowFind :: (DOMWindowClass self, GlibString string) => self -> string -> Bool -> Bool -> Bool -> Bool -> Bool -> Bool -> IO Bool
domWindowScrollBy :: DOMWindowClass self => self -> Int -> Int -> IO ()
domWindowScrollTo :: DOMWindowClass self => self -> Int -> Int -> IO ()
domWindowScroll :: DOMWindowClass self => self -> Int -> Int -> IO ()
domWindowMoveBy :: DOMWindowClass self => self -> Float -> Float -> IO ()
domWindowMoveTo :: DOMWindowClass self => self -> Float -> Float -> IO ()
domWindowResizeBy :: DOMWindowClass self => self -> Float -> Float -> IO ()
domWindowResizeTo :: DOMWindowClass self => self -> Float -> Float -> IO ()
domWindowMatchMedia :: (DOMWindowClass self, GlibString string) => self -> string -> IO (Maybe MediaQueryList)
domWindowGetComputedStyle :: (DOMWindowClass self, ElementClass element, GlibString string) => self -> Maybe element -> string -> IO (Maybe CSSStyleDeclaration)
domWindowWebkitConvertPointFromPageToNode :: (DOMWindowClass self, NodeClass node, WebKitPointClass p) => self -> Maybe node -> Maybe p -> IO (Maybe WebKitPoint)
domWindowWebkitConvertPointFromNodeToPage :: (DOMWindowClass self, NodeClass node, WebKitPointClass p) => self -> Maybe node -> Maybe p -> IO (Maybe WebKitPoint)
domWindowClearTimeout :: DOMWindowClass self => self -> Int -> IO ()
domWindowClearInterval :: DOMWindowClass self => self -> Int -> IO ()
domWindowAtob :: (DOMWindowClass self, GlibString string) => self -> string -> IO string
domWindowBtoa :: (DOMWindowClass self, GlibString string) => self -> string -> IO string
domWindowDispatchEvent :: (DOMWindowClass self, EventClass evt) => self -> Maybe evt -> IO Bool
domWindowCaptureEvents :: DOMWindowClass self => self -> IO ()
domWindowReleaseEvents :: DOMWindowClass self => self -> IO ()
domWindowGetScreen :: DOMWindowClass self => self -> IO (Maybe DOMScreen)
domWindowGetHistory :: DOMWindowClass self => self -> IO (Maybe History)
domWindowGetLocationbar :: DOMWindowClass self => self -> IO (Maybe BarProp)
domWindowGetMenubar :: DOMWindowClass self => self -> IO (Maybe BarProp)
domWindowGetPersonalbar :: DOMWindowClass self => self -> IO (Maybe BarProp)
domWindowGetScrollbars :: DOMWindowClass self => self -> IO (Maybe BarProp)
domWindowGetStatusbar :: DOMWindowClass self => self -> IO (Maybe BarProp)
domWindowGetToolbar :: DOMWindowClass self => self -> IO (Maybe BarProp)
domWindowGetNavigator :: DOMWindowClass self => self -> IO (Maybe Navigator)
domWindowGetClientInformation :: DOMWindowClass self => self -> IO (Maybe Navigator)
domWindowGetFrameElement :: DOMWindowClass self => self -> IO (Maybe Element)
domWindowGetOffscreenBuffering :: DOMWindowClass self => self -> IO Bool
domWindowGetOuterHeight :: DOMWindowClass self => self -> IO Int
domWindowGetOuterWidth :: DOMWindowClass self => self -> IO Int
domWindowGetInnerHeight :: DOMWindowClass self => self -> IO Int
domWindowGetInnerWidth :: DOMWindowClass self => self -> IO Int
domWindowGetScreenX :: DOMWindowClass self => self -> IO Int
domWindowGetScreenY :: DOMWindowClass self => self -> IO Int
domWindowGetScreenLeft :: DOMWindowClass self => self -> IO Int
domWindowGetScreenTop :: DOMWindowClass self => self -> IO Int
domWindowGetScrollX :: DOMWindowClass self => self -> IO Int
domWindowGetScrollY :: DOMWindowClass self => self -> IO Int
domWindowGetPageXOffset :: DOMWindowClass self => self -> IO Int
domWindowGetPageYOffset :: DOMWindowClass self => self -> IO Int
domWindowGetClosed :: DOMWindowClass self => self -> IO Bool
domWindowGetLength :: DOMWindowClass self => self -> IO Word
domWindowSetName :: (DOMWindowClass self, GlibString string) => self -> string -> IO ()
domWindowGetName :: (DOMWindowClass self, GlibString string) => self -> IO string
domWindowSetStatus :: (DOMWindowClass self, GlibString string) => self -> string -> IO ()
domWindowGetStatus :: (DOMWindowClass self, GlibString string) => self -> IO string
domWindowSetDefaultStatus :: (DOMWindowClass self, GlibString string) => self -> string -> IO ()
domWindowGetDefaultStatus :: (DOMWindowClass self, GlibString string) => self -> IO string
domWindowGetSelf :: DOMWindowClass self => self -> IO (Maybe DOMWindow)
domWindowGetWindow :: DOMWindowClass self => self -> IO (Maybe DOMWindow)
domWindowGetFrames :: DOMWindowClass self => self -> IO (Maybe DOMWindow)
domWindowGetOpener :: DOMWindowClass self => self -> IO (Maybe DOMWindow)
domWindowGetParent :: DOMWindowClass self => self -> IO (Maybe DOMWindow)
domWindowGetTop :: DOMWindowClass self => self -> IO (Maybe DOMWindow)
domWindowGetDocument :: DOMWindowClass self => self -> IO (Maybe Document)
domWindowGetStyleMedia :: DOMWindowClass self => self -> IO (Maybe StyleMedia)
domWindowGetDevicePixelRatio :: DOMWindowClass self => self -> IO Double
domWindowGetApplicationCache :: DOMWindowClass self => self -> IO (Maybe DOMApplicationCache)
domWindowGetSessionStorage :: DOMWindowClass self => self -> IO (Maybe Storage)
domWindowGetLocalStorage :: DOMWindowClass self => self -> IO (Maybe Storage)
domWindowGetConsole :: DOMWindowClass self => self -> IO (Maybe Console)
domWindowGetCSS :: DOMWindowClass self => self -> IO (Maybe DOMWindowCSS)
domWindowOnabort :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnbeforeunload :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnblur :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOncanplay :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOncanplaythrough :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnchange :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnclick :: DOMWindowClass self => Signal self (EventM MouseEvent self ())
domWindowOncontextmenu :: DOMWindowClass self => Signal self (EventM MouseEvent self ())
domWindowOndblclick :: DOMWindowClass self => Signal self (EventM MouseEvent self ())
domWindowOndrag :: DOMWindowClass self => Signal self (EventM MouseEvent self ())
domWindowOndragend :: DOMWindowClass self => Signal self (EventM MouseEvent self ())
domWindowOndragenter :: DOMWindowClass self => Signal self (EventM MouseEvent self ())
domWindowOndragleave :: DOMWindowClass self => Signal self (EventM MouseEvent self ())
domWindowOndragover :: DOMWindowClass self => Signal self (EventM MouseEvent self ())
domWindowOndragstart :: DOMWindowClass self => Signal self (EventM MouseEvent self ())
domWindowOndrop :: DOMWindowClass self => Signal self (EventM MouseEvent self ())
domWindowOndurationchange :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnemptied :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnended :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnerror :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnfocus :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnhashchange :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOninput :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOninvalid :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnkeydown :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnkeypress :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnkeyup :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnload :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnloadeddata :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnloadedmetadata :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnloadstart :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnmessage :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnmousedown :: DOMWindowClass self => Signal self (EventM MouseEvent self ())
domWindowOnmouseenter :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnmouseleave :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnmousemove :: DOMWindowClass self => Signal self (EventM MouseEvent self ())
domWindowOnmouseout :: DOMWindowClass self => Signal self (EventM MouseEvent self ())
domWindowOnmouseover :: DOMWindowClass self => Signal self (EventM MouseEvent self ())
domWindowOnmouseup :: DOMWindowClass self => Signal self (EventM MouseEvent self ())
domWindowOnmousewheel :: DOMWindowClass self => Signal self (EventM MouseEvent self ())
domWindowOnoffline :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnonline :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnpagehide :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnpageshow :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnpause :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnplay :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnplaying :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnpopstate :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnprogress :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnratechange :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnresize :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnscroll :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnseeked :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnseeking :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnselect :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnstalled :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnstorage :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnsubmit :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnsuspend :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOntimeupdate :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnunload :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnvolumechange :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnwaiting :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnreset :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnsearch :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnwebkitanimationend :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnwebkitanimationiteration :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnwebkitanimationstart :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnwebkittransitionend :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOntransitionend :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOntouchstart :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOntouchmove :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOntouchend :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOntouchcancel :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOndevicemotion :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOndeviceorientation :: DOMWindowClass self => Signal self (EventM UIEvent self ())
domWindowOnwebkitdeviceproximity :: DOMWindowClass self => Signal self (EventM UIEvent self ())
data DOMWindow
class GObjectClass o => DOMWindowClass o
castToDOMWindow :: GObjectClass obj => obj -> DOMWindow
gTypeDOMWindow :: GType
toDOMWindow :: DOMWindowClass o => o -> DOMWindow

module Graphics.UI.Gtk.WebKit.DOM.DOMWindowCSS
domWindowCSSSupports :: (DOMWindowCSSClass self, GlibString string) => self -> string -> string -> IO Bool
data DOMWindowCSS
class GObjectClass o => DOMWindowCSSClass o
castToDOMWindowCSS :: GObjectClass obj => obj -> DOMWindowCSS
gTypeDOMWindowCSS :: GType
toDOMWindowCSS :: DOMWindowCSSClass o => o -> DOMWindowCSS

module Graphics.UI.Gtk.WebKit.DOM.Element
elementGetAttribute :: (ElementClass self, GlibString string) => self -> string -> IO string
elementSetAttribute :: (ElementClass self, GlibString string) => self -> string -> string -> IO ()
elementRemoveAttribute :: (ElementClass self, GlibString string) => self -> string -> IO ()
elementGetAttributeNode :: (ElementClass self, GlibString string) => self -> string -> IO (Maybe DOMAttr)
elementSetAttributeNode :: (ElementClass self, DOMAttrClass newAttr) => self -> Maybe newAttr -> IO (Maybe DOMAttr)
elementRemoveAttributeNode :: (ElementClass self, DOMAttrClass oldAttr) => self -> Maybe oldAttr -> IO (Maybe DOMAttr)
elementGetElementsByTagName :: (ElementClass self, GlibString string) => self -> string -> IO (Maybe NodeList)
elementHasAttributes :: ElementClass self => self -> IO Bool
elementGetAttributeNS :: (ElementClass self, GlibString string) => self -> string -> string -> IO string
elementSetAttributeNS :: (ElementClass self, GlibString string) => self -> string -> string -> string -> IO ()
elementRemoveAttributeNS :: (ElementClass self, GlibString string) => self -> string -> string -> IO ()
elementGetElementsByTagNameNS :: (ElementClass self, GlibString string) => self -> string -> string -> IO (Maybe NodeList)
elementGetAttributeNodeNS :: (ElementClass self, GlibString string) => self -> string -> string -> IO (Maybe DOMAttr)
elementSetAttributeNodeNS :: (ElementClass self, DOMAttrClass newAttr) => self -> Maybe newAttr -> IO (Maybe DOMAttr)
elementHasAttribute :: (ElementClass self, GlibString string) => self -> string -> IO Bool
elementHasAttributeNS :: (ElementClass self, GlibString string) => self -> string -> string -> IO Bool
elementFocus :: ElementClass self => self -> IO ()
elementBlur :: ElementClass self => self -> IO ()
elementScrollIntoView :: ElementClass self => self -> Bool -> IO ()
elementScrollIntoViewIfNeeded :: ElementClass self => self -> Bool -> IO ()
elementScrollByLines :: ElementClass self => self -> Int -> IO ()
elementScrollByPages :: ElementClass self => self -> Int -> IO ()
elementGetElementsByClassName :: (ElementClass self, GlibString string) => self -> string -> IO (Maybe NodeList)
elementQuerySelector :: (ElementClass self, GlibString string) => self -> string -> IO (Maybe Element)
elementQuerySelectorAll :: (ElementClass self, GlibString string) => self -> string -> IO (Maybe NodeList)
elementWebkitMatchesSelector :: (ElementClass self, GlibString string) => self -> string -> IO Bool
elementWebkitRequestPointerLock :: ElementClass self => self -> IO ()
elementGetTagName :: (ElementClass self, GlibString string) => self -> IO string
elementGetAttributes :: ElementClass self => self -> IO (Maybe NamedNodeMap)
elementGetStyle :: ElementClass self => self -> IO (Maybe CSSStyleDeclaration)
elementSetId :: (ElementClass self, GlibString string) => self -> string -> IO ()
elementGetId :: (ElementClass self, GlibString string) => self -> IO string
elementGetOffsetLeft :: ElementClass self => self -> IO Int
elementGetOffsetTop :: ElementClass self => self -> IO Int
elementGetOffsetWidth :: ElementClass self => self -> IO Int
elementGetOffsetHeight :: ElementClass self => self -> IO Int
elementGetOffsetParent :: ElementClass self => self -> IO (Maybe Element)
elementGetClientLeft :: ElementClass self => self -> IO Int
elementGetClientTop :: ElementClass self => self -> IO Int
elementGetClientWidth :: ElementClass self => self -> IO Int
elementGetClientHeight :: ElementClass self => self -> IO Int
elementSetScrollLeft :: ElementClass self => self -> Int -> IO ()
elementGetScrollLeft :: ElementClass self => self -> IO Int
elementSetScrollTop :: ElementClass self => self -> Int -> IO ()
elementGetScrollTop :: ElementClass self => self -> IO Int
elementGetScrollWidth :: ElementClass self => self -> IO Int
elementGetScrollHeight :: ElementClass self => self -> IO Int
elementSetClassName :: (ElementClass self, GlibString string) => self -> string -> IO ()
elementGetClassName :: (ElementClass self, GlibString string) => self -> IO string
elementGetClassList :: ElementClass self => self -> IO (Maybe DOMTokenList)
elementGetFirstElementChild :: ElementClass self => self -> IO (Maybe Element)
elementGetLastElementChild :: ElementClass self => self -> IO (Maybe Element)
elementGetPreviousElementSibling :: ElementClass self => self -> IO (Maybe Element)
elementGetNextElementSibling :: ElementClass self => self -> IO (Maybe Element)
elementGetChildElementCount :: ElementClass self => self -> IO Word
elementGetWebkitRegionOverset :: (ElementClass self, GlibString string) => self -> IO string
elementOnabort :: ElementClass self => Signal self (EventM UIEvent self ())
elementOnblur :: ElementClass self => Signal self (EventM UIEvent self ())
elementOnchange :: ElementClass self => Signal self (EventM UIEvent self ())
elementOnclick :: ElementClass self => Signal self (EventM MouseEvent self ())
elementOncontextmenu :: ElementClass self => Signal self (EventM MouseEvent self ())
elementOndblclick :: ElementClass self => Signal self (EventM MouseEvent self ())
elementOndrag :: ElementClass self => Signal self (EventM MouseEvent self ())
elementOndragend :: ElementClass self => Signal self (EventM MouseEvent self ())
elementOndragenter :: ElementClass self => Signal self (EventM MouseEvent self ())
elementOndragleave :: ElementClass self => Signal self (EventM MouseEvent self ())
elementOndragover :: ElementClass self => Signal self (EventM MouseEvent self ())
elementOndragstart :: ElementClass self => Signal self (EventM MouseEvent self ())
elementOndrop :: ElementClass self => Signal self (EventM MouseEvent self ())
elementOnerror :: ElementClass self => Signal self (EventM UIEvent self ())
elementOnfocus :: ElementClass self => Signal self (EventM UIEvent self ())
elementOninput :: ElementClass self => Signal self (EventM UIEvent self ())
elementOninvalid :: ElementClass self => Signal self (EventM UIEvent self ())
elementOnkeydown :: ElementClass self => Signal self (EventM UIEvent self ())
elementOnkeypress :: ElementClass self => Signal self (EventM UIEvent self ())
elementOnkeyup :: ElementClass self => Signal self (EventM UIEvent self ())
elementOnload :: ElementClass self => Signal self (EventM UIEvent self ())
elementOnmousedown :: ElementClass self => Signal self (EventM MouseEvent self ())
elementOnmouseenter :: ElementClass self => Signal self (EventM UIEvent self ())
elementOnmouseleave :: ElementClass self => Signal self (EventM UIEvent self ())
elementOnmousemove :: ElementClass self => Signal self (EventM MouseEvent self ())
elementOnmouseout :: ElementClass self => Signal self (EventM MouseEvent self ())
elementOnmouseover :: ElementClass self => Signal self (EventM MouseEvent self ())
elementOnmouseup :: ElementClass self => Signal self (EventM MouseEvent self ())
elementOnmousewheel :: ElementClass self => Signal self (EventM MouseEvent self ())
elementOnscroll :: ElementClass self => Signal self (EventM UIEvent self ())
elementOnselect :: ElementClass self => Signal self (EventM UIEvent self ())
elementOnsubmit :: ElementClass self => Signal self (EventM UIEvent self ())
elementOnbeforecut :: ElementClass self => Signal self (EventM UIEvent self ())
elementOncut :: ElementClass self => Signal self (EventM UIEvent self ())
elementOnbeforecopy :: ElementClass self => Signal self (EventM UIEvent self ())
elementOncopy :: ElementClass self => Signal self (EventM UIEvent self ())
elementOnbeforepaste :: ElementClass self => Signal self (EventM UIEvent self ())
elementOnpaste :: ElementClass self => Signal self (EventM UIEvent self ())
elementOnreset :: ElementClass self => Signal self (EventM UIEvent self ())
elementOnsearch :: ElementClass self => Signal self (EventM UIEvent self ())
elementOnselectstart :: ElementClass self => Signal self (EventM UIEvent self ())
elementOntouchstart :: ElementClass self => Signal self (EventM UIEvent self ())
elementOntouchmove :: ElementClass self => Signal self (EventM UIEvent self ())
elementOntouchend :: ElementClass self => Signal self (EventM UIEvent self ())
elementOntouchcancel :: ElementClass self => Signal self (EventM UIEvent self ())
elementOnwebkitfullscreenchange :: ElementClass self => Signal self (EventM UIEvent self ())
elementOnwebkitfullscreenerror :: ElementClass self => Signal self (EventM UIEvent self ())
data Element
class NodeClass o => ElementClass o
castToElement :: GObjectClass obj => obj -> Element
gTypeElement :: GType
toElement :: ElementClass o => o -> Element

module Graphics.UI.Gtk.WebKit.DOM.File
fileGetName :: (FileClass self, GlibString string) => self -> IO string
fileGetWebkitRelativePath :: (FileClass self, GlibString string) => self -> IO string
data File
class BlobClass o => FileClass o
castToFile :: GObjectClass obj => obj -> File
gTypeFile :: GType
toFile :: FileClass o => o -> File

module Graphics.UI.Gtk.WebKit.DOM.FileList
fileListItem :: FileListClass self => self -> Word -> IO (Maybe File)
fileListGetLength :: FileListClass self => self -> IO Word
data FileList
class GObjectClass o => FileListClass o
castToFileList :: GObjectClass obj => obj -> FileList
gTypeFileList :: GType
toFileList :: FileListClass o => o -> FileList

module Graphics.UI.Gtk.WebKit.DOM.History
historyGetLength :: HistoryClass self => self -> IO Word
data History
class GObjectClass o => HistoryClass o
castToHistory :: GObjectClass obj => obj -> History
gTypeHistory :: GType
toHistory :: HistoryClass o => o -> History

module Graphics.UI.Gtk.WebKit.DOM.HTMLAnchorElement
htmlAnchorElementSetCharset :: (HTMLAnchorElementClass self, GlibString string) => self -> string -> IO ()
htmlAnchorElementGetCharset :: (HTMLAnchorElementClass self, GlibString string) => self -> IO string
htmlAnchorElementSetCoords :: (HTMLAnchorElementClass self, GlibString string) => self -> string -> IO ()
htmlAnchorElementGetCoords :: (HTMLAnchorElementClass self, GlibString string) => self -> IO string
htmlAnchorElementSetDownload :: (HTMLAnchorElementClass self, GlibString string) => self -> string -> IO ()
htmlAnchorElementGetDownload :: (HTMLAnchorElementClass self, GlibString string) => self -> IO string
htmlAnchorElementSetHref :: (HTMLAnchorElementClass self, GlibString string) => self -> string -> IO ()
htmlAnchorElementGetHref :: (HTMLAnchorElementClass self, GlibString string) => self -> IO string
htmlAnchorElementSetHreflang :: (HTMLAnchorElementClass self, GlibString string) => self -> string -> IO ()
htmlAnchorElementGetHreflang :: (HTMLAnchorElementClass self, GlibString string) => self -> IO string
htmlAnchorElementSetName :: (HTMLAnchorElementClass self, GlibString string) => self -> string -> IO ()
htmlAnchorElementGetName :: (HTMLAnchorElementClass self, GlibString string) => self -> IO string
htmlAnchorElementSetPing :: (HTMLAnchorElementClass self, GlibString string) => self -> string -> IO ()
htmlAnchorElementGetPing :: (HTMLAnchorElementClass self, GlibString string) => self -> IO string
htmlAnchorElementSetRel :: (HTMLAnchorElementClass self, GlibString string) => self -> string -> IO ()
htmlAnchorElementGetRel :: (HTMLAnchorElementClass self, GlibString string) => self -> IO string
htmlAnchorElementSetRev :: (HTMLAnchorElementClass self, GlibString string) => self -> string -> IO ()
htmlAnchorElementGetRev :: (HTMLAnchorElementClass self, GlibString string) => self -> IO string
htmlAnchorElementSetShape :: (HTMLAnchorElementClass self, GlibString string) => self -> string -> IO ()
htmlAnchorElementGetShape :: (HTMLAnchorElementClass self, GlibString string) => self -> IO string
htmlAnchorElementSetTarget :: (HTMLAnchorElementClass self, GlibString string) => self -> string -> IO ()
htmlAnchorElementGetTarget :: (HTMLAnchorElementClass self, GlibString string) => self -> IO string
htmlAnchorElementSetHash :: (HTMLAnchorElementClass self, GlibString string) => self -> string -> IO ()
htmlAnchorElementGetHash :: (HTMLAnchorElementClass self, GlibString string) => self -> IO string
htmlAnchorElementSetHost :: (HTMLAnchorElementClass self, GlibString string) => self -> string -> IO ()
htmlAnchorElementGetHost :: (HTMLAnchorElementClass self, GlibString string) => self -> IO string
htmlAnchorElementSetHostname :: (HTMLAnchorElementClass self, GlibString string) => self -> string -> IO ()
htmlAnchorElementGetHostname :: (HTMLAnchorElementClass self, GlibString string) => self -> IO string
htmlAnchorElementSetPathname :: (HTMLAnchorElementClass self, GlibString string) => self -> string -> IO ()
htmlAnchorElementGetPathname :: (HTMLAnchorElementClass self, GlibString string) => self -> IO string
htmlAnchorElementSetPort :: (HTMLAnchorElementClass self, GlibString string) => self -> string -> IO ()
htmlAnchorElementGetPort :: (HTMLAnchorElementClass self, GlibString string) => self -> IO string
htmlAnchorElementSetProtocol :: (HTMLAnchorElementClass self, GlibString string) => self -> string -> IO ()
htmlAnchorElementGetProtocol :: (HTMLAnchorElementClass self, GlibString string) => self -> IO string
htmlAnchorElementSetSearch :: (HTMLAnchorElementClass self, GlibString string) => self -> string -> IO ()
htmlAnchorElementGetSearch :: (HTMLAnchorElementClass self, GlibString string) => self -> IO string
htmlAnchorElementGetOrigin :: (HTMLAnchorElementClass self, GlibString string) => self -> IO string
htmlAnchorElementGetText :: (HTMLAnchorElementClass self, GlibString string) => self -> IO string
data HTMLAnchorElement
class HTMLElementClass o => HTMLAnchorElementClass o
castToHTMLAnchorElement :: GObjectClass obj => obj -> HTMLAnchorElement
gTypeHTMLAnchorElement :: GType
toHTMLAnchorElement :: HTMLAnchorElementClass o => o -> HTMLAnchorElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLAppletElement
htmlAppletElementSetAlign :: (HTMLAppletElementClass self, GlibString string) => self -> string -> IO ()
htmlAppletElementGetAlign :: (HTMLAppletElementClass self, GlibString string) => self -> IO string
htmlAppletElementSetAlt :: (HTMLAppletElementClass self, GlibString string) => self -> string -> IO ()
htmlAppletElementGetAlt :: (HTMLAppletElementClass self, GlibString string) => self -> IO string
htmlAppletElementSetArchive :: (HTMLAppletElementClass self, GlibString string) => self -> string -> IO ()
htmlAppletElementGetArchive :: (HTMLAppletElementClass self, GlibString string) => self -> IO string
htmlAppletElementSetCode :: (HTMLAppletElementClass self, GlibString string) => self -> string -> IO ()
htmlAppletElementGetCode :: (HTMLAppletElementClass self, GlibString string) => self -> IO string
htmlAppletElementSetCodeBase :: (HTMLAppletElementClass self, GlibString string) => self -> string -> IO ()
htmlAppletElementGetCodeBase :: (HTMLAppletElementClass self, GlibString string) => self -> IO string
htmlAppletElementSetHeight :: (HTMLAppletElementClass self, GlibString string) => self -> string -> IO ()
htmlAppletElementGetHeight :: (HTMLAppletElementClass self, GlibString string) => self -> IO string
htmlAppletElementSetHspace :: HTMLAppletElementClass self => self -> Int -> IO ()
htmlAppletElementGetHspace :: HTMLAppletElementClass self => self -> IO Int
htmlAppletElementSetName :: (HTMLAppletElementClass self, GlibString string) => self -> string -> IO ()
htmlAppletElementGetName :: (HTMLAppletElementClass self, GlibString string) => self -> IO string
htmlAppletElementSetObject :: (HTMLAppletElementClass self, GlibString string) => self -> string -> IO ()
htmlAppletElementGetObject :: (HTMLAppletElementClass self, GlibString string) => self -> IO string
htmlAppletElementSetVspace :: HTMLAppletElementClass self => self -> Int -> IO ()
htmlAppletElementGetVspace :: HTMLAppletElementClass self => self -> IO Int
htmlAppletElementSetWidth :: (HTMLAppletElementClass self, GlibString string) => self -> string -> IO ()
htmlAppletElementGetWidth :: (HTMLAppletElementClass self, GlibString string) => self -> IO string
data HTMLAppletElement
class HTMLElementClass o => HTMLAppletElementClass o
castToHTMLAppletElement :: GObjectClass obj => obj -> HTMLAppletElement
gTypeHTMLAppletElement :: GType
toHTMLAppletElement :: HTMLAppletElementClass o => o -> HTMLAppletElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLAreaElement
htmlAreaElementSetAlt :: (HTMLAreaElementClass self, GlibString string) => self -> string -> IO ()
htmlAreaElementGetAlt :: (HTMLAreaElementClass self, GlibString string) => self -> IO string
htmlAreaElementSetCoords :: (HTMLAreaElementClass self, GlibString string) => self -> string -> IO ()
htmlAreaElementGetCoords :: (HTMLAreaElementClass self, GlibString string) => self -> IO string
htmlAreaElementSetHref :: (HTMLAreaElementClass self, GlibString string) => self -> string -> IO ()
htmlAreaElementGetHref :: (HTMLAreaElementClass self, GlibString string) => self -> IO string
htmlAreaElementSetNoHref :: HTMLAreaElementClass self => self -> Bool -> IO ()
htmlAreaElementGetNoHref :: HTMLAreaElementClass self => self -> IO Bool
htmlAreaElementSetPing :: (HTMLAreaElementClass self, GlibString string) => self -> string -> IO ()
htmlAreaElementGetPing :: (HTMLAreaElementClass self, GlibString string) => self -> IO string
htmlAreaElementSetShape :: (HTMLAreaElementClass self, GlibString string) => self -> string -> IO ()
htmlAreaElementGetShape :: (HTMLAreaElementClass self, GlibString string) => self -> IO string
htmlAreaElementSetTarget :: (HTMLAreaElementClass self, GlibString string) => self -> string -> IO ()
htmlAreaElementGetTarget :: (HTMLAreaElementClass self, GlibString string) => self -> IO string
htmlAreaElementGetHash :: (HTMLAreaElementClass self, GlibString string) => self -> IO string
htmlAreaElementGetHost :: (HTMLAreaElementClass self, GlibString string) => self -> IO string
htmlAreaElementGetHostname :: (HTMLAreaElementClass self, GlibString string) => self -> IO string
htmlAreaElementGetPathname :: (HTMLAreaElementClass self, GlibString string) => self -> IO string
htmlAreaElementGetPort :: (HTMLAreaElementClass self, GlibString string) => self -> IO string
htmlAreaElementGetProtocol :: (HTMLAreaElementClass self, GlibString string) => self -> IO string
htmlAreaElementGetSearch :: (HTMLAreaElementClass self, GlibString string) => self -> IO string
data HTMLAreaElement
class HTMLElementClass o => HTMLAreaElementClass o
castToHTMLAreaElement :: GObjectClass obj => obj -> HTMLAreaElement
gTypeHTMLAreaElement :: GType
toHTMLAreaElement :: HTMLAreaElementClass o => o -> HTMLAreaElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLBaseElement
htmlBaseElementSetHref :: (HTMLBaseElementClass self, GlibString string) => self -> string -> IO ()
htmlBaseElementGetHref :: (HTMLBaseElementClass self, GlibString string) => self -> IO string
htmlBaseElementSetTarget :: (HTMLBaseElementClass self, GlibString string) => self -> string -> IO ()
htmlBaseElementGetTarget :: (HTMLBaseElementClass self, GlibString string) => self -> IO string
data HTMLBaseElement
class HTMLElementClass o => HTMLBaseElementClass o
castToHTMLBaseElement :: GObjectClass obj => obj -> HTMLBaseElement
gTypeHTMLBaseElement :: GType
toHTMLBaseElement :: HTMLBaseElementClass o => o -> HTMLBaseElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLBaseFontElement
htmlBaseFontElementSetColor :: (HTMLBaseFontElementClass self, GlibString string) => self -> string -> IO ()
htmlBaseFontElementGetColor :: (HTMLBaseFontElementClass self, GlibString string) => self -> IO string
htmlBaseFontElementSetFace :: (HTMLBaseFontElementClass self, GlibString string) => self -> string -> IO ()
htmlBaseFontElementGetFace :: (HTMLBaseFontElementClass self, GlibString string) => self -> IO string
htmlBaseFontElementSetSize :: HTMLBaseFontElementClass self => self -> Int -> IO ()
htmlBaseFontElementGetSize :: HTMLBaseFontElementClass self => self -> IO Int
data HTMLBaseFontElement
class HTMLElementClass o => HTMLBaseFontElementClass o
castToHTMLBaseFontElement :: GObjectClass obj => obj -> HTMLBaseFontElement
gTypeHTMLBaseFontElement :: GType
toHTMLBaseFontElement :: HTMLBaseFontElementClass o => o -> HTMLBaseFontElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLBodyElement
htmlBodyElementSetALink :: (HTMLBodyElementClass self, GlibString string) => self -> string -> IO ()
htmlBodyElementGetALink :: (HTMLBodyElementClass self, GlibString string) => self -> IO string
htmlBodyElementSetBackground :: (HTMLBodyElementClass self, GlibString string) => self -> string -> IO ()
htmlBodyElementGetBackground :: (HTMLBodyElementClass self, GlibString string) => self -> IO string
htmlBodyElementSetBgColor :: (HTMLBodyElementClass self, GlibString string) => self -> string -> IO ()
htmlBodyElementGetBgColor :: (HTMLBodyElementClass self, GlibString string) => self -> IO string
htmlBodyElementSetLink :: (HTMLBodyElementClass self, GlibString string) => self -> string -> IO ()
htmlBodyElementGetLink :: (HTMLBodyElementClass self, GlibString string) => self -> IO string
htmlBodyElementSetText :: (HTMLBodyElementClass self, GlibString string) => self -> string -> IO ()
htmlBodyElementGetText :: (HTMLBodyElementClass self, GlibString string) => self -> IO string
htmlBodyElementSetVLink :: (HTMLBodyElementClass self, GlibString string) => self -> string -> IO ()
htmlBodyElementGetVLink :: (HTMLBodyElementClass self, GlibString string) => self -> IO string
htmlBodyElementOnbeforeunload :: HTMLBodyElementClass self => Signal self (EventM UIEvent self ())
htmlBodyElementOnhashchange :: HTMLBodyElementClass self => Signal self (EventM UIEvent self ())
htmlBodyElementOnmessage :: HTMLBodyElementClass self => Signal self (EventM UIEvent self ())
htmlBodyElementOnoffline :: HTMLBodyElementClass self => Signal self (EventM UIEvent self ())
htmlBodyElementOnonline :: HTMLBodyElementClass self => Signal self (EventM UIEvent self ())
htmlBodyElementOnpopstate :: HTMLBodyElementClass self => Signal self (EventM UIEvent self ())
htmlBodyElementOnresize :: HTMLBodyElementClass self => Signal self (EventM UIEvent self ())
htmlBodyElementOnstorage :: HTMLBodyElementClass self => Signal self (EventM UIEvent self ())
htmlBodyElementOnunload :: HTMLBodyElementClass self => Signal self (EventM UIEvent self ())
htmlBodyElementOnorientationchange :: HTMLBodyElementClass self => Signal self (EventM UIEvent self ())
htmlBodyElementOnblur :: HTMLBodyElementClass self => Signal self (EventM UIEvent self ())
htmlBodyElementOnerror :: HTMLBodyElementClass self => Signal self (EventM UIEvent self ())
htmlBodyElementOnfocus :: HTMLBodyElementClass self => Signal self (EventM UIEvent self ())
htmlBodyElementOnload :: HTMLBodyElementClass self => Signal self (EventM UIEvent self ())
data HTMLBodyElement
class HTMLElementClass o => HTMLBodyElementClass o
castToHTMLBodyElement :: GObjectClass obj => obj -> HTMLBodyElement
gTypeHTMLBodyElement :: GType
toHTMLBodyElement :: HTMLBodyElementClass o => o -> HTMLBodyElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLBRElement
htmlbrElementSetClear :: (HTMLBRElementClass self, GlibString string) => self -> string -> IO ()
htmlbrElementGetClear :: (HTMLBRElementClass self, GlibString string) => self -> IO string
data HTMLBRElement
class HTMLElementClass o => HTMLBRElementClass o
castToHTMLBRElement :: GObjectClass obj => obj -> HTMLBRElement
gTypeHTMLBRElement :: GType
toHTMLBRElement :: HTMLBRElementClass o => o -> HTMLBRElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLButtonElement
htmlButtonElementCheckValidity :: HTMLButtonElementClass self => self -> IO Bool
htmlButtonElementSetCustomValidity :: (HTMLButtonElementClass self, GlibString string) => self -> string -> IO ()
htmlButtonElementSetAutofocus :: HTMLButtonElementClass self => self -> Bool -> IO ()
htmlButtonElementGetAutofocus :: HTMLButtonElementClass self => self -> IO Bool
htmlButtonElementSetDisabled :: HTMLButtonElementClass self => self -> Bool -> IO ()
htmlButtonElementGetDisabled :: HTMLButtonElementClass self => self -> IO Bool
htmlButtonElementGetForm :: HTMLButtonElementClass self => self -> IO (Maybe HTMLFormElement)
htmlButtonElementSetFormAction :: (HTMLButtonElementClass self, GlibString string) => self -> string -> IO ()
htmlButtonElementGetFormAction :: (HTMLButtonElementClass self, GlibString string) => self -> IO string
htmlButtonElementSetFormEnctype :: (HTMLButtonElementClass self, GlibString string) => self -> string -> IO ()
htmlButtonElementGetFormEnctype :: (HTMLButtonElementClass self, GlibString string) => self -> IO string
htmlButtonElementSetFormMethod :: (HTMLButtonElementClass self, GlibString string) => self -> string -> IO ()
htmlButtonElementGetFormMethod :: (HTMLButtonElementClass self, GlibString string) => self -> IO string
htmlButtonElementSetFormNoValidate :: HTMLButtonElementClass self => self -> Bool -> IO ()
htmlButtonElementGetFormNoValidate :: HTMLButtonElementClass self => self -> IO Bool
htmlButtonElementSetFormTarget :: (HTMLButtonElementClass self, GlibString string) => self -> string -> IO ()
htmlButtonElementGetFormTarget :: (HTMLButtonElementClass self, GlibString string) => self -> IO string
htmlButtonElementSetName :: (HTMLButtonElementClass self, GlibString string) => self -> string -> IO ()
htmlButtonElementGetName :: (HTMLButtonElementClass self, GlibString string) => self -> IO string
htmlButtonElementSetValue :: (HTMLButtonElementClass self, GlibString string) => self -> string -> IO ()
htmlButtonElementGetValue :: (HTMLButtonElementClass self, GlibString string) => self -> IO string
htmlButtonElementGetWillValidate :: HTMLButtonElementClass self => self -> IO Bool
htmlButtonElementGetValidity :: HTMLButtonElementClass self => self -> IO (Maybe ValidityState)
htmlButtonElementGetValidationMessage :: (HTMLButtonElementClass self, GlibString string) => self -> IO string
htmlButtonElementGetLabels :: HTMLButtonElementClass self => self -> IO (Maybe NodeList)
data HTMLButtonElement
class HTMLElementClass o => HTMLButtonElementClass o
castToHTMLButtonElement :: GObjectClass obj => obj -> HTMLButtonElement
gTypeHTMLButtonElement :: GType
toHTMLButtonElement :: HTMLButtonElementClass o => o -> HTMLButtonElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLCollection
htmlCollectionItem :: HTMLCollectionClass self => self -> Word -> IO (Maybe Node)
htmlCollectionNamedItem :: (HTMLCollectionClass self, GlibString string) => self -> string -> IO (Maybe Node)
htmlCollectionGetLength :: HTMLCollectionClass self => self -> IO Word
data HTMLCollection
class GObjectClass o => HTMLCollectionClass o
castToHTMLCollection :: GObjectClass obj => obj -> HTMLCollection
gTypeHTMLCollection :: GType
toHTMLCollection :: HTMLCollectionClass o => o -> HTMLCollection

module Graphics.UI.Gtk.WebKit.DOM.HTMLDirectoryElement
htmlDirectoryElementSetCompact :: HTMLDirectoryElementClass self => self -> Bool -> IO ()
htmlDirectoryElementGetCompact :: HTMLDirectoryElementClass self => self -> IO Bool
data HTMLDirectoryElement
class HTMLElementClass o => HTMLDirectoryElementClass o
castToHTMLDirectoryElement :: GObjectClass obj => obj -> HTMLDirectoryElement
gTypeHTMLDirectoryElement :: GType
toHTMLDirectoryElement :: HTMLDirectoryElementClass o => o -> HTMLDirectoryElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLDivElement
htmlDivElementSetAlign :: (HTMLDivElementClass self, GlibString string) => self -> string -> IO ()
htmlDivElementGetAlign :: (HTMLDivElementClass self, GlibString string) => self -> IO string
data HTMLDivElement
class HTMLElementClass o => HTMLDivElementClass o
castToHTMLDivElement :: GObjectClass obj => obj -> HTMLDivElement
gTypeHTMLDivElement :: GType
toHTMLDivElement :: HTMLDivElementClass o => o -> HTMLDivElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLDListElement
htmldListElementSetCompact :: HTMLDListElementClass self => self -> Bool -> IO ()
htmldListElementGetCompact :: HTMLDListElementClass self => self -> IO Bool
data HTMLDListElement
class HTMLElementClass o => HTMLDListElementClass o
castToHTMLDListElement :: GObjectClass obj => obj -> HTMLDListElement
gTypeHTMLDListElement :: GType
toHTMLDListElement :: HTMLDListElementClass o => o -> HTMLDListElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLDocument
htmlDocumentClose :: HTMLDocumentClass self => self -> IO ()
htmlDocumentClear :: HTMLDocumentClass self => self -> IO ()
htmlDocumentCaptureEvents :: HTMLDocumentClass self => self -> IO ()
htmlDocumentReleaseEvents :: HTMLDocumentClass self => self -> IO ()
htmlDocumentHasFocus :: HTMLDocumentClass self => self -> IO Bool
htmlDocumentGetEmbeds :: HTMLDocumentClass self => self -> IO (Maybe HTMLCollection)
htmlDocumentGetPlugins :: HTMLDocumentClass self => self -> IO (Maybe HTMLCollection)
htmlDocumentGetScripts :: HTMLDocumentClass self => self -> IO (Maybe HTMLCollection)
htmlDocumentGetWidth :: HTMLDocumentClass self => self -> IO Int
htmlDocumentGetHeight :: HTMLDocumentClass self => self -> IO Int
htmlDocumentSetDir :: (HTMLDocumentClass self, GlibString string) => self -> string -> IO ()
htmlDocumentGetDir :: (HTMLDocumentClass self, GlibString string) => self -> IO string
htmlDocumentSetDesignMode :: (HTMLDocumentClass self, GlibString string) => self -> string -> IO ()
htmlDocumentGetDesignMode :: (HTMLDocumentClass self, GlibString string) => self -> IO string
htmlDocumentGetCompatMode :: (HTMLDocumentClass self, GlibString string) => self -> IO string
htmlDocumentGetActiveElement :: HTMLDocumentClass self => self -> IO (Maybe Element)
htmlDocumentSetBgColor :: (HTMLDocumentClass self, GlibString string) => self -> string -> IO ()
htmlDocumentGetBgColor :: (HTMLDocumentClass self, GlibString string) => self -> IO string
htmlDocumentSetFgColor :: (HTMLDocumentClass self, GlibString string) => self -> string -> IO ()
htmlDocumentGetFgColor :: (HTMLDocumentClass self, GlibString string) => self -> IO string
htmlDocumentSetAlinkColor :: (HTMLDocumentClass self, GlibString string) => self -> string -> IO ()
htmlDocumentGetAlinkColor :: (HTMLDocumentClass self, GlibString string) => self -> IO string
htmlDocumentSetLinkColor :: (HTMLDocumentClass self, GlibString string) => self -> string -> IO ()
htmlDocumentGetLinkColor :: (HTMLDocumentClass self, GlibString string) => self -> IO string
htmlDocumentSetVlinkColor :: (HTMLDocumentClass self, GlibString string) => self -> string -> IO ()
htmlDocumentGetVlinkColor :: (HTMLDocumentClass self, GlibString string) => self -> IO string
data HTMLDocument
class DocumentClass o => HTMLDocumentClass o
castToHTMLDocument :: GObjectClass obj => obj -> HTMLDocument
gTypeHTMLDocument :: GType
toHTMLDocument :: HTMLDocumentClass o => o -> HTMLDocument

module Graphics.UI.Gtk.WebKit.DOM.HTMLElement
htmlElementInsertAdjacentElement :: (HTMLElementClass self, ElementClass element, GlibString string) => self -> string -> Maybe element -> IO (Maybe Element)
htmlElementInsertAdjacentHTML :: (HTMLElementClass self, GlibString string) => self -> string -> string -> IO ()
htmlElementInsertAdjacentText :: (HTMLElementClass self, GlibString string) => self -> string -> string -> IO ()
htmlElementClick :: HTMLElementClass self => self -> IO ()
htmlElementSetTitle :: (HTMLElementClass self, GlibString string) => self -> string -> IO ()
htmlElementGetTitle :: (HTMLElementClass self, GlibString string) => self -> IO string
htmlElementSetLang :: (HTMLElementClass self, GlibString string) => self -> string -> IO ()
htmlElementGetLang :: (HTMLElementClass self, GlibString string) => self -> IO string
htmlElementSetTranslate :: HTMLElementClass self => self -> Bool -> IO ()
htmlElementGetTranslate :: HTMLElementClass self => self -> IO Bool
htmlElementSetDir :: (HTMLElementClass self, GlibString string) => self -> string -> IO ()
htmlElementGetDir :: (HTMLElementClass self, GlibString string) => self -> IO string
htmlElementSetTabIndex :: HTMLElementClass self => self -> Int -> IO ()
htmlElementGetTabIndex :: HTMLElementClass self => self -> IO Int
htmlElementSetDraggable :: HTMLElementClass self => self -> Bool -> IO ()
htmlElementGetDraggable :: HTMLElementClass self => self -> IO Bool
htmlElementSetWebkitdropzone :: (HTMLElementClass self, GlibString string) => self -> string -> IO ()
htmlElementGetWebkitdropzone :: (HTMLElementClass self, GlibString string) => self -> IO string
htmlElementSetHidden :: HTMLElementClass self => self -> Bool -> IO ()
htmlElementGetHidden :: HTMLElementClass self => self -> IO Bool
htmlElementSetAccessKey :: (HTMLElementClass self, GlibString string) => self -> string -> IO ()
htmlElementGetAccessKey :: (HTMLElementClass self, GlibString string) => self -> IO string
htmlElementSetInnerHTML :: (HTMLElementClass self, GlibString string) => self -> string -> IO ()
htmlElementGetInnerHTML :: (HTMLElementClass self, GlibString string) => self -> IO string
htmlElementSetInnerText :: (HTMLElementClass self, GlibString string) => self -> string -> IO ()
htmlElementGetInnerText :: (HTMLElementClass self, GlibString string) => self -> IO string
htmlElementSetOuterHTML :: (HTMLElementClass self, GlibString string) => self -> string -> IO ()
htmlElementGetOuterHTML :: (HTMLElementClass self, GlibString string) => self -> IO string
htmlElementSetOuterText :: (HTMLElementClass self, GlibString string) => self -> string -> IO ()
htmlElementGetOuterText :: (HTMLElementClass self, GlibString string) => self -> IO string
htmlElementGetChildren :: HTMLElementClass self => self -> IO (Maybe HTMLCollection)
htmlElementSetContentEditable :: (HTMLElementClass self, GlibString string) => self -> string -> IO ()
htmlElementGetContentEditable :: (HTMLElementClass self, GlibString string) => self -> IO string
htmlElementGetIsContentEditable :: HTMLElementClass self => self -> IO Bool
htmlElementSetSpellcheck :: HTMLElementClass self => self -> Bool -> IO ()
htmlElementGetSpellcheck :: HTMLElementClass self => self -> IO Bool
data HTMLElement
class ElementClass o => HTMLElementClass o
castToHTMLElement :: GObjectClass obj => obj -> HTMLElement
gTypeHTMLElement :: GType
toHTMLElement :: HTMLElementClass o => o -> HTMLElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLFieldSetElement
htmlFieldSetElementCheckValidity :: HTMLFieldSetElementClass self => self -> IO Bool
htmlFieldSetElementSetCustomValidity :: (HTMLFieldSetElementClass self, GlibString string) => self -> string -> IO ()
htmlFieldSetElementSetDisabled :: HTMLFieldSetElementClass self => self -> Bool -> IO ()
htmlFieldSetElementGetDisabled :: HTMLFieldSetElementClass self => self -> IO Bool
htmlFieldSetElementGetForm :: HTMLFieldSetElementClass self => self -> IO (Maybe HTMLFormElement)
htmlFieldSetElementSetName :: (HTMLFieldSetElementClass self, GlibString string) => self -> string -> IO ()
htmlFieldSetElementGetName :: (HTMLFieldSetElementClass self, GlibString string) => self -> IO string
htmlFieldSetElementGetElements :: HTMLFieldSetElementClass self => self -> IO (Maybe HTMLCollection)
htmlFieldSetElementGetWillValidate :: HTMLFieldSetElementClass self => self -> IO Bool
htmlFieldSetElementGetValidity :: HTMLFieldSetElementClass self => self -> IO (Maybe ValidityState)
htmlFieldSetElementGetValidationMessage :: (HTMLFieldSetElementClass self, GlibString string) => self -> IO string
data HTMLFieldSetElement
class HTMLElementClass o => HTMLFieldSetElementClass o
castToHTMLFieldSetElement :: GObjectClass obj => obj -> HTMLFieldSetElement
gTypeHTMLFieldSetElement :: GType
toHTMLFieldSetElement :: HTMLFieldSetElementClass o => o -> HTMLFieldSetElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLFontElement
htmlFontElementSetColor :: (HTMLFontElementClass self, GlibString string) => self -> string -> IO ()
htmlFontElementGetColor :: (HTMLFontElementClass self, GlibString string) => self -> IO string
htmlFontElementSetFace :: (HTMLFontElementClass self, GlibString string) => self -> string -> IO ()
htmlFontElementGetFace :: (HTMLFontElementClass self, GlibString string) => self -> IO string
htmlFontElementSetSize :: (HTMLFontElementClass self, GlibString string) => self -> string -> IO ()
htmlFontElementGetSize :: (HTMLFontElementClass self, GlibString string) => self -> IO string
data HTMLFontElement
class HTMLElementClass o => HTMLFontElementClass o
castToHTMLFontElement :: GObjectClass obj => obj -> HTMLFontElement
gTypeHTMLFontElement :: GType
toHTMLFontElement :: HTMLFontElementClass o => o -> HTMLFontElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLFormElement
htmlFormElementSubmit :: HTMLFormElementClass self => self -> IO ()
htmlFormElementReset :: HTMLFormElementClass self => self -> IO ()
htmlFormElementCheckValidity :: HTMLFormElementClass self => self -> IO Bool
htmlFormElementSetAcceptCharset :: (HTMLFormElementClass self, GlibString string) => self -> string -> IO ()
htmlFormElementGetAcceptCharset :: (HTMLFormElementClass self, GlibString string) => self -> IO string
htmlFormElementSetAction :: (HTMLFormElementClass self, GlibString string) => self -> string -> IO ()
htmlFormElementGetAction :: (HTMLFormElementClass self, GlibString string) => self -> IO string
htmlFormElementSetAutocomplete :: (HTMLFormElementClass self, GlibString string) => self -> string -> IO ()
htmlFormElementGetAutocomplete :: (HTMLFormElementClass self, GlibString string) => self -> IO string
htmlFormElementSetEnctype :: (HTMLFormElementClass self, GlibString string) => self -> string -> IO ()
htmlFormElementGetEnctype :: (HTMLFormElementClass self, GlibString string) => self -> IO string
htmlFormElementSetEncoding :: (HTMLFormElementClass self, GlibString string) => self -> string -> IO ()
htmlFormElementGetEncoding :: (HTMLFormElementClass self, GlibString string) => self -> IO string
htmlFormElementSetMethod :: (HTMLFormElementClass self, GlibString string) => self -> string -> IO ()
htmlFormElementGetMethod :: (HTMLFormElementClass self, GlibString string) => self -> IO string
htmlFormElementSetName :: (HTMLFormElementClass self, GlibString string) => self -> string -> IO ()
htmlFormElementGetName :: (HTMLFormElementClass self, GlibString string) => self -> IO string
htmlFormElementSetNoValidate :: HTMLFormElementClass self => self -> Bool -> IO ()
htmlFormElementGetNoValidate :: HTMLFormElementClass self => self -> IO Bool
htmlFormElementSetTarget :: (HTMLFormElementClass self, GlibString string) => self -> string -> IO ()
htmlFormElementGetTarget :: (HTMLFormElementClass self, GlibString string) => self -> IO string
htmlFormElementGetElements :: HTMLFormElementClass self => self -> IO (Maybe HTMLCollection)
htmlFormElementGetLength :: HTMLFormElementClass self => self -> IO Int
data HTMLFormElement
class HTMLElementClass o => HTMLFormElementClass o
castToHTMLFormElement :: GObjectClass obj => obj -> HTMLFormElement
gTypeHTMLFormElement :: GType
toHTMLFormElement :: HTMLFormElementClass o => o -> HTMLFormElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLFrameElement
htmlFrameElementSetFrameBorder :: (HTMLFrameElementClass self, GlibString string) => self -> string -> IO ()
htmlFrameElementGetFrameBorder :: (HTMLFrameElementClass self, GlibString string) => self -> IO string
htmlFrameElementSetLongDesc :: (HTMLFrameElementClass self, GlibString string) => self -> string -> IO ()
htmlFrameElementGetLongDesc :: (HTMLFrameElementClass self, GlibString string) => self -> IO string
htmlFrameElementSetMarginHeight :: (HTMLFrameElementClass self, GlibString string) => self -> string -> IO ()
htmlFrameElementGetMarginHeight :: (HTMLFrameElementClass self, GlibString string) => self -> IO string
htmlFrameElementSetMarginWidth :: (HTMLFrameElementClass self, GlibString string) => self -> string -> IO ()
htmlFrameElementGetMarginWidth :: (HTMLFrameElementClass self, GlibString string) => self -> IO string
htmlFrameElementSetName :: (HTMLFrameElementClass self, GlibString string) => self -> string -> IO ()
htmlFrameElementGetName :: (HTMLFrameElementClass self, GlibString string) => self -> IO string
htmlFrameElementSetNoResize :: HTMLFrameElementClass self => self -> Bool -> IO ()
htmlFrameElementGetNoResize :: HTMLFrameElementClass self => self -> IO Bool
htmlFrameElementSetScrolling :: (HTMLFrameElementClass self, GlibString string) => self -> string -> IO ()
htmlFrameElementGetScrolling :: (HTMLFrameElementClass self, GlibString string) => self -> IO string
htmlFrameElementSetSrc :: (HTMLFrameElementClass self, GlibString string) => self -> string -> IO ()
htmlFrameElementGetSrc :: (HTMLFrameElementClass self, GlibString string) => self -> IO string
htmlFrameElementGetContentDocument :: HTMLFrameElementClass self => self -> IO (Maybe Document)
htmlFrameElementGetContentWindow :: HTMLFrameElementClass self => self -> IO (Maybe DOMWindow)
htmlFrameElementGetWidth :: HTMLFrameElementClass self => self -> IO Int
htmlFrameElementGetHeight :: HTMLFrameElementClass self => self -> IO Int
data HTMLFrameElement
class HTMLElementClass o => HTMLFrameElementClass o
castToHTMLFrameElement :: GObjectClass obj => obj -> HTMLFrameElement
gTypeHTMLFrameElement :: GType
toHTMLFrameElement :: HTMLFrameElementClass o => o -> HTMLFrameElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLFrameSetElement
htmlFrameSetElementSetCols :: (HTMLFrameSetElementClass self, GlibString string) => self -> string -> IO ()
htmlFrameSetElementGetCols :: (HTMLFrameSetElementClass self, GlibString string) => self -> IO string
htmlFrameSetElementSetRows :: (HTMLFrameSetElementClass self, GlibString string) => self -> string -> IO ()
htmlFrameSetElementGetRows :: (HTMLFrameSetElementClass self, GlibString string) => self -> IO string
htmlFrameSetElementOnbeforeunload :: HTMLFrameSetElementClass self => Signal self (EventM UIEvent self ())
htmlFrameSetElementOnhashchange :: HTMLFrameSetElementClass self => Signal self (EventM UIEvent self ())
htmlFrameSetElementOnmessage :: HTMLFrameSetElementClass self => Signal self (EventM UIEvent self ())
htmlFrameSetElementOnoffline :: HTMLFrameSetElementClass self => Signal self (EventM UIEvent self ())
htmlFrameSetElementOnonline :: HTMLFrameSetElementClass self => Signal self (EventM UIEvent self ())
htmlFrameSetElementOnpopstate :: HTMLFrameSetElementClass self => Signal self (EventM UIEvent self ())
htmlFrameSetElementOnresize :: HTMLFrameSetElementClass self => Signal self (EventM UIEvent self ())
htmlFrameSetElementOnstorage :: HTMLFrameSetElementClass self => Signal self (EventM UIEvent self ())
htmlFrameSetElementOnunload :: HTMLFrameSetElementClass self => Signal self (EventM UIEvent self ())
htmlFrameSetElementOnorientationchange :: HTMLFrameSetElementClass self => Signal self (EventM UIEvent self ())
htmlFrameSetElementOnblur :: HTMLFrameSetElementClass self => Signal self (EventM UIEvent self ())
htmlFrameSetElementOnerror :: HTMLFrameSetElementClass self => Signal self (EventM UIEvent self ())
htmlFrameSetElementOnfocus :: HTMLFrameSetElementClass self => Signal self (EventM UIEvent self ())
htmlFrameSetElementOnload :: HTMLFrameSetElementClass self => Signal self (EventM UIEvent self ())
data HTMLFrameSetElement
class HTMLElementClass o => HTMLFrameSetElementClass o
castToHTMLFrameSetElement :: GObjectClass obj => obj -> HTMLFrameSetElement
gTypeHTMLFrameSetElement :: GType
toHTMLFrameSetElement :: HTMLFrameSetElementClass o => o -> HTMLFrameSetElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLHeadElement
htmlHeadElementSetProfile :: (HTMLHeadElementClass self, GlibString string) => self -> string -> IO ()
htmlHeadElementGetProfile :: (HTMLHeadElementClass self, GlibString string) => self -> IO string
data HTMLHeadElement
class HTMLElementClass o => HTMLHeadElementClass o
castToHTMLHeadElement :: GObjectClass obj => obj -> HTMLHeadElement
gTypeHTMLHeadElement :: GType
toHTMLHeadElement :: HTMLHeadElementClass o => o -> HTMLHeadElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLHeadingElement
htmlHeadingElementSetAlign :: (HTMLHeadingElementClass self, GlibString string) => self -> string -> IO ()
htmlHeadingElementGetAlign :: (HTMLHeadingElementClass self, GlibString string) => self -> IO string
data HTMLHeadingElement
class HTMLElementClass o => HTMLHeadingElementClass o
castToHTMLHeadingElement :: GObjectClass obj => obj -> HTMLHeadingElement
gTypeHTMLHeadingElement :: GType
toHTMLHeadingElement :: HTMLHeadingElementClass o => o -> HTMLHeadingElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLHRElement
htmlhrElementSetAlign :: (HTMLHRElementClass self, GlibString string) => self -> string -> IO ()
htmlhrElementGetAlign :: (HTMLHRElementClass self, GlibString string) => self -> IO string
htmlhrElementSetNoShade :: HTMLHRElementClass self => self -> Bool -> IO ()
htmlhrElementGetNoShade :: HTMLHRElementClass self => self -> IO Bool
htmlhrElementSetSize :: (HTMLHRElementClass self, GlibString string) => self -> string -> IO ()
htmlhrElementGetSize :: (HTMLHRElementClass self, GlibString string) => self -> IO string
htmlhrElementSetWidth :: (HTMLHRElementClass self, GlibString string) => self -> string -> IO ()
htmlhrElementGetWidth :: (HTMLHRElementClass self, GlibString string) => self -> IO string
data HTMLHRElement
class HTMLElementClass o => HTMLHRElementClass o
castToHTMLHRElement :: GObjectClass obj => obj -> HTMLHRElement
gTypeHTMLHRElement :: GType
toHTMLHRElement :: HTMLHRElementClass o => o -> HTMLHRElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLHtmlElement
htmlHtmlElementSetVersion :: (HTMLHtmlElementClass self, GlibString string) => self -> string -> IO ()
htmlHtmlElementGetVersion :: (HTMLHtmlElementClass self, GlibString string) => self -> IO string
htmlHtmlElementSetManifest :: (HTMLHtmlElementClass self, GlibString string) => self -> string -> IO ()
htmlHtmlElementGetManifest :: (HTMLHtmlElementClass self, GlibString string) => self -> IO string
data HTMLHtmlElement
class HTMLElementClass o => HTMLHtmlElementClass o
castToHTMLHtmlElement :: GObjectClass obj => obj -> HTMLHtmlElement
gTypeHTMLHtmlElement :: GType
toHTMLHtmlElement :: HTMLHtmlElementClass o => o -> HTMLHtmlElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLIFrameElement
htmliFrameElementSetAlign :: (HTMLIFrameElementClass self, GlibString string) => self -> string -> IO ()
htmliFrameElementGetAlign :: (HTMLIFrameElementClass self, GlibString string) => self -> IO string
htmliFrameElementSetFrameBorder :: (HTMLIFrameElementClass self, GlibString string) => self -> string -> IO ()
htmliFrameElementGetFrameBorder :: (HTMLIFrameElementClass self, GlibString string) => self -> IO string
htmliFrameElementSetHeight :: (HTMLIFrameElementClass self, GlibString string) => self -> string -> IO ()
htmliFrameElementGetHeight :: (HTMLIFrameElementClass self, GlibString string) => self -> IO string
htmliFrameElementSetLongDesc :: (HTMLIFrameElementClass self, GlibString string) => self -> string -> IO ()
htmliFrameElementGetLongDesc :: (HTMLIFrameElementClass self, GlibString string) => self -> IO string
htmliFrameElementSetMarginHeight :: (HTMLIFrameElementClass self, GlibString string) => self -> string -> IO ()
htmliFrameElementGetMarginHeight :: (HTMLIFrameElementClass self, GlibString string) => self -> IO string
htmliFrameElementSetMarginWidth :: (HTMLIFrameElementClass self, GlibString string) => self -> string -> IO ()
htmliFrameElementGetMarginWidth :: (HTMLIFrameElementClass self, GlibString string) => self -> IO string
htmliFrameElementSetName :: (HTMLIFrameElementClass self, GlibString string) => self -> string -> IO ()
htmliFrameElementGetName :: (HTMLIFrameElementClass self, GlibString string) => self -> IO string
htmliFrameElementSetSandbox :: (HTMLIFrameElementClass self, GlibString string) => self -> string -> IO ()
htmliFrameElementGetSandbox :: (HTMLIFrameElementClass self, GlibString string) => self -> IO string
htmliFrameElementSetSeamless :: HTMLIFrameElementClass self => self -> Bool -> IO ()
htmliFrameElementGetSeamless :: HTMLIFrameElementClass self => self -> IO Bool
htmliFrameElementSetScrolling :: (HTMLIFrameElementClass self, GlibString string) => self -> string -> IO ()
htmliFrameElementGetScrolling :: (HTMLIFrameElementClass self, GlibString string) => self -> IO string
htmliFrameElementSetSrc :: (HTMLIFrameElementClass self, GlibString string) => self -> string -> IO ()
htmliFrameElementGetSrc :: (HTMLIFrameElementClass self, GlibString string) => self -> IO string
htmliFrameElementSetSrcdoc :: (HTMLIFrameElementClass self, GlibString string) => self -> string -> IO ()
htmliFrameElementGetSrcdoc :: (HTMLIFrameElementClass self, GlibString string) => self -> IO string
htmliFrameElementSetWidth :: (HTMLIFrameElementClass self, GlibString string) => self -> string -> IO ()
htmliFrameElementGetWidth :: (HTMLIFrameElementClass self, GlibString string) => self -> IO string
htmliFrameElementGetContentDocument :: HTMLIFrameElementClass self => self -> IO (Maybe Document)
htmliFrameElementGetContentWindow :: HTMLIFrameElementClass self => self -> IO (Maybe DOMWindow)
data HTMLIFrameElement
class HTMLElementClass o => HTMLIFrameElementClass o
castToHTMLIFrameElement :: GObjectClass obj => obj -> HTMLIFrameElement
gTypeHTMLIFrameElement :: GType
toHTMLIFrameElement :: HTMLIFrameElementClass o => o -> HTMLIFrameElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLImageElement
htmlImageElementSetName :: (HTMLImageElementClass self, GlibString string) => self -> string -> IO ()
htmlImageElementGetName :: (HTMLImageElementClass self, GlibString string) => self -> IO string
htmlImageElementSetAlign :: (HTMLImageElementClass self, GlibString string) => self -> string -> IO ()
htmlImageElementGetAlign :: (HTMLImageElementClass self, GlibString string) => self -> IO string
htmlImageElementSetAlt :: (HTMLImageElementClass self, GlibString string) => self -> string -> IO ()
htmlImageElementGetAlt :: (HTMLImageElementClass self, GlibString string) => self -> IO string
htmlImageElementSetBorder :: (HTMLImageElementClass self, GlibString string) => self -> string -> IO ()
htmlImageElementGetBorder :: (HTMLImageElementClass self, GlibString string) => self -> IO string
htmlImageElementSetCrossOrigin :: (HTMLImageElementClass self, GlibString string) => self -> string -> IO ()
htmlImageElementGetCrossOrigin :: (HTMLImageElementClass self, GlibString string) => self -> IO string
htmlImageElementSetHeight :: HTMLImageElementClass self => self -> Int -> IO ()
htmlImageElementGetHeight :: HTMLImageElementClass self => self -> IO Int
htmlImageElementSetHspace :: HTMLImageElementClass self => self -> Int -> IO ()
htmlImageElementGetHspace :: HTMLImageElementClass self => self -> IO Int
htmlImageElementSetIsMap :: HTMLImageElementClass self => self -> Bool -> IO ()
htmlImageElementGetIsMap :: HTMLImageElementClass self => self -> IO Bool
htmlImageElementSetLongDesc :: (HTMLImageElementClass self, GlibString string) => self -> string -> IO ()
htmlImageElementGetLongDesc :: (HTMLImageElementClass self, GlibString string) => self -> IO string
htmlImageElementSetSrc :: (HTMLImageElementClass self, GlibString string) => self -> string -> IO ()
htmlImageElementGetSrc :: (HTMLImageElementClass self, GlibString string) => self -> IO string
htmlImageElementSetSrcset :: (HTMLImageElementClass self, GlibString string) => self -> string -> IO ()
htmlImageElementGetSrcset :: (HTMLImageElementClass self, GlibString string) => self -> IO string
htmlImageElementSetUseMap :: (HTMLImageElementClass self, GlibString string) => self -> string -> IO ()
htmlImageElementGetUseMap :: (HTMLImageElementClass self, GlibString string) => self -> IO string
htmlImageElementSetVspace :: HTMLImageElementClass self => self -> Int -> IO ()
htmlImageElementGetVspace :: HTMLImageElementClass self => self -> IO Int
htmlImageElementSetWidth :: HTMLImageElementClass self => self -> Int -> IO ()
htmlImageElementGetWidth :: HTMLImageElementClass self => self -> IO Int
htmlImageElementGetComplete :: HTMLImageElementClass self => self -> IO Bool
htmlImageElementSetLowsrc :: (HTMLImageElementClass self, GlibString string) => self -> string -> IO ()
htmlImageElementGetLowsrc :: (HTMLImageElementClass self, GlibString string) => self -> IO string
htmlImageElementGetNaturalHeight :: HTMLImageElementClass self => self -> IO Int
htmlImageElementGetNaturalWidth :: HTMLImageElementClass self => self -> IO Int
htmlImageElementGetX :: HTMLImageElementClass self => self -> IO Int
htmlImageElementGetY :: HTMLImageElementClass self => self -> IO Int
data HTMLImageElement
class HTMLElementClass o => HTMLImageElementClass o
castToHTMLImageElement :: GObjectClass obj => obj -> HTMLImageElement
gTypeHTMLImageElement :: GType
toHTMLImageElement :: HTMLImageElementClass o => o -> HTMLImageElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLInputElement
htmlInputElementStepUp :: HTMLInputElementClass self => self -> Int -> IO ()
htmlInputElementStepDown :: HTMLInputElementClass self => self -> Int -> IO ()
htmlInputElementCheckValidity :: HTMLInputElementClass self => self -> IO Bool
htmlInputElementSetCustomValidity :: (HTMLInputElementClass self, GlibString string) => self -> string -> IO ()
htmlInputElementSelect :: HTMLInputElementClass self => self -> IO ()
htmlInputElementSetRangeText :: (HTMLInputElementClass self, GlibString string) => self -> string -> Word -> Word -> string -> IO ()
htmlInputElementSetValueForUser :: (HTMLInputElementClass self, GlibString string) => self -> string -> IO ()
htmlInputElementSetAccept :: (HTMLInputElementClass self, GlibString string) => self -> string -> IO ()
htmlInputElementGetAccept :: (HTMLInputElementClass self, GlibString string) => self -> IO string
htmlInputElementSetAlt :: (HTMLInputElementClass self, GlibString string) => self -> string -> IO ()
htmlInputElementGetAlt :: (HTMLInputElementClass self, GlibString string) => self -> IO string
htmlInputElementSetAutocomplete :: (HTMLInputElementClass self, GlibString string) => self -> string -> IO ()
htmlInputElementGetAutocomplete :: (HTMLInputElementClass self, GlibString string) => self -> IO string
htmlInputElementSetAutofocus :: HTMLInputElementClass self => self -> Bool -> IO ()
htmlInputElementGetAutofocus :: HTMLInputElementClass self => self -> IO Bool
htmlInputElementSetDefaultChecked :: HTMLInputElementClass self => self -> Bool -> IO ()
htmlInputElementGetDefaultChecked :: HTMLInputElementClass self => self -> IO Bool
htmlInputElementSetChecked :: HTMLInputElementClass self => self -> Bool -> IO ()
htmlInputElementGetChecked :: HTMLInputElementClass self => self -> IO Bool
htmlInputElementSetDirName :: (HTMLInputElementClass self, GlibString string) => self -> string -> IO ()
htmlInputElementGetDirName :: (HTMLInputElementClass self, GlibString string) => self -> IO string
htmlInputElementSetDisabled :: HTMLInputElementClass self => self -> Bool -> IO ()
htmlInputElementGetDisabled :: HTMLInputElementClass self => self -> IO Bool
htmlInputElementGetForm :: HTMLInputElementClass self => self -> IO (Maybe HTMLFormElement)
htmlInputElementSetFiles :: (FileListClass val, HTMLInputElementClass self) => self -> Maybe val -> IO ()
htmlInputElementGetFiles :: HTMLInputElementClass self => self -> IO (Maybe FileList)
htmlInputElementSetFormAction :: (HTMLInputElementClass self, GlibString string) => self -> string -> IO ()
htmlInputElementGetFormAction :: (HTMLInputElementClass self, GlibString string) => self -> IO string
htmlInputElementSetFormEnctype :: (HTMLInputElementClass self, GlibString string) => self -> string -> IO ()
htmlInputElementGetFormEnctype :: (HTMLInputElementClass self, GlibString string) => self -> IO string
htmlInputElementSetFormMethod :: (HTMLInputElementClass self, GlibString string) => self -> string -> IO ()
htmlInputElementGetFormMethod :: (HTMLInputElementClass self, GlibString string) => self -> IO string
htmlInputElementSetFormNoValidate :: HTMLInputElementClass self => self -> Bool -> IO ()
htmlInputElementGetFormNoValidate :: HTMLInputElementClass self => self -> IO Bool
htmlInputElementSetFormTarget :: (HTMLInputElementClass self, GlibString string) => self -> string -> IO ()
htmlInputElementGetFormTarget :: (HTMLInputElementClass self, GlibString string) => self -> IO string
htmlInputElementSetHeight :: HTMLInputElementClass self => self -> Word -> IO ()
htmlInputElementGetHeight :: HTMLInputElementClass self => self -> IO Word
htmlInputElementSetIndeterminate :: HTMLInputElementClass self => self -> Bool -> IO ()
htmlInputElementGetIndeterminate :: HTMLInputElementClass self => self -> IO Bool
htmlInputElementGetList :: HTMLInputElementClass self => self -> IO (Maybe HTMLElement)
htmlInputElementSetMax :: (HTMLInputElementClass self, GlibString string) => self -> string -> IO ()
htmlInputElementGetMax :: (HTMLInputElementClass self, GlibString string) => self -> IO string
htmlInputElementSetMaxLength :: HTMLInputElementClass self => self -> Int -> IO ()
htmlInputElementGetMaxLength :: HTMLInputElementClass self => self -> IO Int
htmlInputElementSetMin :: (HTMLInputElementClass self, GlibString string) => self -> string -> IO ()
htmlInputElementGetMin :: (HTMLInputElementClass self, GlibString string) => self -> IO string
htmlInputElementSetMultiple :: HTMLInputElementClass self => self -> Bool -> IO ()
htmlInputElementGetMultiple :: HTMLInputElementClass self => self -> IO Bool
htmlInputElementSetName :: (HTMLInputElementClass self, GlibString string) => self -> string -> IO ()
htmlInputElementGetName :: (HTMLInputElementClass self, GlibString string) => self -> IO string
htmlInputElementSetPattern :: (HTMLInputElementClass self, GlibString string) => self -> string -> IO ()
htmlInputElementGetPattern :: (HTMLInputElementClass self, GlibString string) => self -> IO string
htmlInputElementSetPlaceholder :: (HTMLInputElementClass self, GlibString string) => self -> string -> IO ()
htmlInputElementGetPlaceholder :: (HTMLInputElementClass self, GlibString string) => self -> IO string
htmlInputElementSetReadOnly :: HTMLInputElementClass self => self -> Bool -> IO ()
htmlInputElementGetReadOnly :: HTMLInputElementClass self => self -> IO Bool
htmlInputElementSetRequired :: HTMLInputElementClass self => self -> Bool -> IO ()
htmlInputElementGetRequired :: HTMLInputElementClass self => self -> IO Bool
htmlInputElementSetSize :: HTMLInputElementClass self => self -> Word -> IO ()
htmlInputElementGetSize :: HTMLInputElementClass self => self -> IO Word
htmlInputElementSetSrc :: (HTMLInputElementClass self, GlibString string) => self -> string -> IO ()
htmlInputElementGetSrc :: (HTMLInputElementClass self, GlibString string) => self -> IO string
htmlInputElementSetStep :: (HTMLInputElementClass self, GlibString string) => self -> string -> IO ()
htmlInputElementGetStep :: (HTMLInputElementClass self, GlibString string) => self -> IO string
htmlInputElementSetDefaultValue :: (HTMLInputElementClass self, GlibString string) => self -> string -> IO ()
htmlInputElementGetDefaultValue :: (HTMLInputElementClass self, GlibString string) => self -> IO string
htmlInputElementSetValue :: (HTMLInputElementClass self, GlibString string) => self -> string -> IO ()
htmlInputElementGetValue :: (HTMLInputElementClass self, GlibString string) => self -> IO string
htmlInputElementSetValueAsNumber :: HTMLInputElementClass self => self -> Double -> IO ()
htmlInputElementGetValueAsNumber :: HTMLInputElementClass self => self -> IO Double
htmlInputElementSetWidth :: HTMLInputElementClass self => self -> Word -> IO ()
htmlInputElementGetWidth :: HTMLInputElementClass self => self -> IO Word
htmlInputElementGetWillValidate :: HTMLInputElementClass self => self -> IO Bool
htmlInputElementGetValidity :: HTMLInputElementClass self => self -> IO (Maybe ValidityState)
htmlInputElementGetValidationMessage :: (HTMLInputElementClass self, GlibString string) => self -> IO string
htmlInputElementGetLabels :: HTMLInputElementClass self => self -> IO (Maybe NodeList)
htmlInputElementSetAlign :: (HTMLInputElementClass self, GlibString string) => self -> string -> IO ()
htmlInputElementGetAlign :: (HTMLInputElementClass self, GlibString string) => self -> IO string
htmlInputElementSetWebkitdirectory :: HTMLInputElementClass self => self -> Bool -> IO ()
htmlInputElementGetWebkitdirectory :: HTMLInputElementClass self => self -> IO Bool
htmlInputElementSetUseMap :: (HTMLInputElementClass self, GlibString string) => self -> string -> IO ()
htmlInputElementGetUseMap :: (HTMLInputElementClass self, GlibString string) => self -> IO string
htmlInputElementSetIncremental :: HTMLInputElementClass self => self -> Bool -> IO ()
htmlInputElementGetIncremental :: HTMLInputElementClass self => self -> IO Bool
htmlInputElementSetWebkitSpeech :: HTMLInputElementClass self => self -> Bool -> IO ()
htmlInputElementGetWebkitSpeech :: HTMLInputElementClass self => self -> IO Bool
htmlInputElementSetWebkitGrammar :: HTMLInputElementClass self => self -> Bool -> IO ()
htmlInputElementGetWebkitGrammar :: HTMLInputElementClass self => self -> IO Bool
htmlInputElementOnwebkitspeechchange :: HTMLInputElementClass self => Signal self (EventM UIEvent self ())
htmlInputElementSetCapture :: (HTMLInputElementClass self, GlibString string) => self -> string -> IO ()
htmlInputElementGetCapture :: (HTMLInputElementClass self, GlibString string) => self -> IO string
data HTMLInputElement
class HTMLElementClass o => HTMLInputElementClass o
castToHTMLInputElement :: GObjectClass obj => obj -> HTMLInputElement
gTypeHTMLInputElement :: GType
toHTMLInputElement :: HTMLInputElementClass o => o -> HTMLInputElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLLabelElement
htmlLabelElementGetForm :: HTMLLabelElementClass self => self -> IO (Maybe HTMLFormElement)
htmlLabelElementSetHtmlFor :: (HTMLLabelElementClass self, GlibString string) => self -> string -> IO ()
htmlLabelElementGetHtmlFor :: (HTMLLabelElementClass self, GlibString string) => self -> IO string
htmlLabelElementGetControl :: HTMLLabelElementClass self => self -> IO (Maybe HTMLElement)
data HTMLLabelElement
class HTMLElementClass o => HTMLLabelElementClass o
castToHTMLLabelElement :: GObjectClass obj => obj -> HTMLLabelElement
gTypeHTMLLabelElement :: GType
toHTMLLabelElement :: HTMLLabelElementClass o => o -> HTMLLabelElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLLegendElement
htmlLegendElementGetForm :: HTMLLegendElementClass self => self -> IO (Maybe HTMLFormElement)
htmlLegendElementSetAlign :: (HTMLLegendElementClass self, GlibString string) => self -> string -> IO ()
htmlLegendElementGetAlign :: (HTMLLegendElementClass self, GlibString string) => self -> IO string
data HTMLLegendElement
class HTMLElementClass o => HTMLLegendElementClass o
castToHTMLLegendElement :: GObjectClass obj => obj -> HTMLLegendElement
gTypeHTMLLegendElement :: GType
toHTMLLegendElement :: HTMLLegendElementClass o => o -> HTMLLegendElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLLIElement
htmlliElementSetValue :: HTMLLIElementClass self => self -> Int -> IO ()
htmlliElementGetValue :: HTMLLIElementClass self => self -> IO Int
data HTMLLIElement
class HTMLElementClass o => HTMLLIElementClass o
castToHTMLLIElement :: GObjectClass obj => obj -> HTMLLIElement
gTypeHTMLLIElement :: GType
toHTMLLIElement :: HTMLLIElementClass o => o -> HTMLLIElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLLinkElement
htmlLinkElementSetDisabled :: HTMLLinkElementClass self => self -> Bool -> IO ()
htmlLinkElementGetDisabled :: HTMLLinkElementClass self => self -> IO Bool
htmlLinkElementSetCharset :: (HTMLLinkElementClass self, GlibString string) => self -> string -> IO ()
htmlLinkElementGetCharset :: (HTMLLinkElementClass self, GlibString string) => self -> IO string
htmlLinkElementSetHref :: (HTMLLinkElementClass self, GlibString string) => self -> string -> IO ()
htmlLinkElementGetHref :: (HTMLLinkElementClass self, GlibString string) => self -> IO string
htmlLinkElementSetHreflang :: (HTMLLinkElementClass self, GlibString string) => self -> string -> IO ()
htmlLinkElementGetHreflang :: (HTMLLinkElementClass self, GlibString string) => self -> IO string
htmlLinkElementSetMedia :: (HTMLLinkElementClass self, GlibString string) => self -> string -> IO ()
htmlLinkElementGetMedia :: (HTMLLinkElementClass self, GlibString string) => self -> IO string
htmlLinkElementSetRel :: (HTMLLinkElementClass self, GlibString string) => self -> string -> IO ()
htmlLinkElementGetRel :: (HTMLLinkElementClass self, GlibString string) => self -> IO string
htmlLinkElementSetRev :: (HTMLLinkElementClass self, GlibString string) => self -> string -> IO ()
htmlLinkElementGetRev :: (HTMLLinkElementClass self, GlibString string) => self -> IO string
htmlLinkElementSetTarget :: (HTMLLinkElementClass self, GlibString string) => self -> string -> IO ()
htmlLinkElementGetTarget :: (HTMLLinkElementClass self, GlibString string) => self -> IO string
htmlLinkElementGetSheet :: HTMLLinkElementClass self => self -> IO (Maybe StyleSheet)
data HTMLLinkElement
class HTMLElementClass o => HTMLLinkElementClass o
castToHTMLLinkElement :: GObjectClass obj => obj -> HTMLLinkElement
gTypeHTMLLinkElement :: GType
toHTMLLinkElement :: HTMLLinkElementClass o => o -> HTMLLinkElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLMapElement
htmlMapElementGetAreas :: HTMLMapElementClass self => self -> IO (Maybe HTMLCollection)
htmlMapElementSetName :: (HTMLMapElementClass self, GlibString string) => self -> string -> IO ()
htmlMapElementGetName :: (HTMLMapElementClass self, GlibString string) => self -> IO string
data HTMLMapElement
class HTMLElementClass o => HTMLMapElementClass o
castToHTMLMapElement :: GObjectClass obj => obj -> HTMLMapElement
gTypeHTMLMapElement :: GType
toHTMLMapElement :: HTMLMapElementClass o => o -> HTMLMapElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLMenuElement
htmlMenuElementSetCompact :: HTMLMenuElementClass self => self -> Bool -> IO ()
htmlMenuElementGetCompact :: HTMLMenuElementClass self => self -> IO Bool
data HTMLMenuElement
class HTMLElementClass o => HTMLMenuElementClass o
castToHTMLMenuElement :: GObjectClass obj => obj -> HTMLMenuElement
gTypeHTMLMenuElement :: GType
toHTMLMenuElement :: HTMLMenuElementClass o => o -> HTMLMenuElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLMetaElement
htmlMetaElementSetContent :: (HTMLMetaElementClass self, GlibString string) => self -> string -> IO ()
htmlMetaElementGetContent :: (HTMLMetaElementClass self, GlibString string) => self -> IO string
htmlMetaElementSetHttpEquiv :: (HTMLMetaElementClass self, GlibString string) => self -> string -> IO ()
htmlMetaElementGetHttpEquiv :: (HTMLMetaElementClass self, GlibString string) => self -> IO string
htmlMetaElementSetName :: (HTMLMetaElementClass self, GlibString string) => self -> string -> IO ()
htmlMetaElementGetName :: (HTMLMetaElementClass self, GlibString string) => self -> IO string
htmlMetaElementSetScheme :: (HTMLMetaElementClass self, GlibString string) => self -> string -> IO ()
htmlMetaElementGetScheme :: (HTMLMetaElementClass self, GlibString string) => self -> IO string
data HTMLMetaElement
class HTMLElementClass o => HTMLMetaElementClass o
castToHTMLMetaElement :: GObjectClass obj => obj -> HTMLMetaElement
gTypeHTMLMetaElement :: GType
toHTMLMetaElement :: HTMLMetaElementClass o => o -> HTMLMetaElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLModElement
htmlModElementSetCite :: (HTMLModElementClass self, GlibString string) => self -> string -> IO ()
htmlModElementGetCite :: (HTMLModElementClass self, GlibString string) => self -> IO string
htmlModElementSetDateTime :: (HTMLModElementClass self, GlibString string) => self -> string -> IO ()
htmlModElementGetDateTime :: (HTMLModElementClass self, GlibString string) => self -> IO string
data HTMLModElement
class HTMLElementClass o => HTMLModElementClass o
castToHTMLModElement :: GObjectClass obj => obj -> HTMLModElement
gTypeHTMLModElement :: GType
toHTMLModElement :: HTMLModElementClass o => o -> HTMLModElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLObjectElement
htmlObjectElementCheckValidity :: HTMLObjectElementClass self => self -> IO Bool
htmlObjectElementSetCustomValidity :: (HTMLObjectElementClass self, GlibString string) => self -> string -> IO ()
htmlObjectElementGetForm :: HTMLObjectElementClass self => self -> IO (Maybe HTMLFormElement)
htmlObjectElementSetCode :: (HTMLObjectElementClass self, GlibString string) => self -> string -> IO ()
htmlObjectElementGetCode :: (HTMLObjectElementClass self, GlibString string) => self -> IO string
htmlObjectElementSetAlign :: (HTMLObjectElementClass self, GlibString string) => self -> string -> IO ()
htmlObjectElementGetAlign :: (HTMLObjectElementClass self, GlibString string) => self -> IO string
htmlObjectElementSetArchive :: (HTMLObjectElementClass self, GlibString string) => self -> string -> IO ()
htmlObjectElementGetArchive :: (HTMLObjectElementClass self, GlibString string) => self -> IO string
htmlObjectElementSetBorder :: (HTMLObjectElementClass self, GlibString string) => self -> string -> IO ()
htmlObjectElementGetBorder :: (HTMLObjectElementClass self, GlibString string) => self -> IO string
htmlObjectElementSetCodeBase :: (HTMLObjectElementClass self, GlibString string) => self -> string -> IO ()
htmlObjectElementGetCodeBase :: (HTMLObjectElementClass self, GlibString string) => self -> IO string
htmlObjectElementSetCodeType :: (HTMLObjectElementClass self, GlibString string) => self -> string -> IO ()
htmlObjectElementGetCodeType :: (HTMLObjectElementClass self, GlibString string) => self -> IO string
htmlObjectElementSetData :: (HTMLObjectElementClass self, GlibString string) => self -> string -> IO ()
htmlObjectElementGetData :: (HTMLObjectElementClass self, GlibString string) => self -> IO string
htmlObjectElementSetDeclare :: HTMLObjectElementClass self => self -> Bool -> IO ()
htmlObjectElementGetDeclare :: HTMLObjectElementClass self => self -> IO Bool
htmlObjectElementSetHeight :: (HTMLObjectElementClass self, GlibString string) => self -> string -> IO ()
htmlObjectElementGetHeight :: (HTMLObjectElementClass self, GlibString string) => self -> IO string
htmlObjectElementSetHspace :: HTMLObjectElementClass self => self -> Int -> IO ()
htmlObjectElementGetHspace :: HTMLObjectElementClass self => self -> IO Int
htmlObjectElementSetName :: (HTMLObjectElementClass self, GlibString string) => self -> string -> IO ()
htmlObjectElementGetName :: (HTMLObjectElementClass self, GlibString string) => self -> IO string
htmlObjectElementSetStandby :: (HTMLObjectElementClass self, GlibString string) => self -> string -> IO ()
htmlObjectElementGetStandby :: (HTMLObjectElementClass self, GlibString string) => self -> IO string
htmlObjectElementSetUseMap :: (HTMLObjectElementClass self, GlibString string) => self -> string -> IO ()
htmlObjectElementGetUseMap :: (HTMLObjectElementClass self, GlibString string) => self -> IO string
htmlObjectElementSetVspace :: HTMLObjectElementClass self => self -> Int -> IO ()
htmlObjectElementGetVspace :: HTMLObjectElementClass self => self -> IO Int
htmlObjectElementSetWidth :: (HTMLObjectElementClass self, GlibString string) => self -> string -> IO ()
htmlObjectElementGetWidth :: (HTMLObjectElementClass self, GlibString string) => self -> IO string
htmlObjectElementGetWillValidate :: HTMLObjectElementClass self => self -> IO Bool
htmlObjectElementGetValidity :: HTMLObjectElementClass self => self -> IO (Maybe ValidityState)
htmlObjectElementGetValidationMessage :: (HTMLObjectElementClass self, GlibString string) => self -> IO string
htmlObjectElementGetContentDocument :: HTMLObjectElementClass self => self -> IO (Maybe Document)
data HTMLObjectElement
class HTMLElementClass o => HTMLObjectElementClass o
castToHTMLObjectElement :: GObjectClass obj => obj -> HTMLObjectElement
gTypeHTMLObjectElement :: GType
toHTMLObjectElement :: HTMLObjectElementClass o => o -> HTMLObjectElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLOListElement
htmloListElementSetCompact :: HTMLOListElementClass self => self -> Bool -> IO ()
htmloListElementGetCompact :: HTMLOListElementClass self => self -> IO Bool
htmloListElementSetStart :: HTMLOListElementClass self => self -> Int -> IO ()
htmloListElementGetStart :: HTMLOListElementClass self => self -> IO Int
htmloListElementSetReversed :: HTMLOListElementClass self => self -> Bool -> IO ()
htmloListElementGetReversed :: HTMLOListElementClass self => self -> IO Bool
data HTMLOListElement
class HTMLElementClass o => HTMLOListElementClass o
castToHTMLOListElement :: GObjectClass obj => obj -> HTMLOListElement
gTypeHTMLOListElement :: GType
toHTMLOListElement :: HTMLOListElementClass o => o -> HTMLOListElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLOptGroupElement
htmlOptGroupElementSetDisabled :: HTMLOptGroupElementClass self => self -> Bool -> IO ()
htmlOptGroupElementGetDisabled :: HTMLOptGroupElementClass self => self -> IO Bool
htmlOptGroupElementSetLabel :: (HTMLOptGroupElementClass self, GlibString string) => self -> string -> IO ()
htmlOptGroupElementGetLabel :: (HTMLOptGroupElementClass self, GlibString string) => self -> IO string
data HTMLOptGroupElement
class HTMLElementClass o => HTMLOptGroupElementClass o
castToHTMLOptGroupElement :: GObjectClass obj => obj -> HTMLOptGroupElement
gTypeHTMLOptGroupElement :: GType
toHTMLOptGroupElement :: HTMLOptGroupElementClass o => o -> HTMLOptGroupElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLOptionElement
htmlOptionElementSetDisabled :: HTMLOptionElementClass self => self -> Bool -> IO ()
htmlOptionElementGetDisabled :: HTMLOptionElementClass self => self -> IO Bool
htmlOptionElementGetForm :: HTMLOptionElementClass self => self -> IO (Maybe HTMLFormElement)
htmlOptionElementSetLabel :: (HTMLOptionElementClass self, GlibString string) => self -> string -> IO ()
htmlOptionElementGetLabel :: (HTMLOptionElementClass self, GlibString string) => self -> IO string
htmlOptionElementSetDefaultSelected :: HTMLOptionElementClass self => self -> Bool -> IO ()
htmlOptionElementGetDefaultSelected :: HTMLOptionElementClass self => self -> IO Bool
htmlOptionElementSetSelected :: HTMLOptionElementClass self => self -> Bool -> IO ()
htmlOptionElementGetSelected :: HTMLOptionElementClass self => self -> IO Bool
htmlOptionElementSetValue :: (HTMLOptionElementClass self, GlibString string) => self -> string -> IO ()
htmlOptionElementGetValue :: (HTMLOptionElementClass self, GlibString string) => self -> IO string
htmlOptionElementGetText :: (HTMLOptionElementClass self, GlibString string) => self -> IO string
htmlOptionElementGetIndex :: HTMLOptionElementClass self => self -> IO Int
data HTMLOptionElement
class HTMLElementClass o => HTMLOptionElementClass o
castToHTMLOptionElement :: GObjectClass obj => obj -> HTMLOptionElement
gTypeHTMLOptionElement :: GType
toHTMLOptionElement :: HTMLOptionElementClass o => o -> HTMLOptionElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLOptionsCollection
htmlOptionsCollectionNamedItem :: (HTMLOptionsCollectionClass self, GlibString string) => self -> string -> IO (Maybe Node)
htmlOptionsCollectionSetSelectedIndex :: HTMLOptionsCollectionClass self => self -> Int -> IO ()
htmlOptionsCollectionGetSelectedIndex :: HTMLOptionsCollectionClass self => self -> IO Int
data HTMLOptionsCollection
class HTMLCollectionClass o => HTMLOptionsCollectionClass o
castToHTMLOptionsCollection :: GObjectClass obj => obj -> HTMLOptionsCollection
gTypeHTMLOptionsCollection :: GType
toHTMLOptionsCollection :: HTMLOptionsCollectionClass o => o -> HTMLOptionsCollection

module Graphics.UI.Gtk.WebKit.DOM.HTMLParagraphElement
htmlParagraphElementSetAlign :: (HTMLParagraphElementClass self, GlibString string) => self -> string -> IO ()
htmlParagraphElementGetAlign :: (HTMLParagraphElementClass self, GlibString string) => self -> IO string
data HTMLParagraphElement
class HTMLElementClass o => HTMLParagraphElementClass o
castToHTMLParagraphElement :: GObjectClass obj => obj -> HTMLParagraphElement
gTypeHTMLParagraphElement :: GType
toHTMLParagraphElement :: HTMLParagraphElementClass o => o -> HTMLParagraphElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLParamElement
htmlParamElementSetName :: (HTMLParamElementClass self, GlibString string) => self -> string -> IO ()
htmlParamElementGetName :: (HTMLParamElementClass self, GlibString string) => self -> IO string
htmlParamElementSetValue :: (HTMLParamElementClass self, GlibString string) => self -> string -> IO ()
htmlParamElementGetValue :: (HTMLParamElementClass self, GlibString string) => self -> IO string
htmlParamElementSetValueType :: (HTMLParamElementClass self, GlibString string) => self -> string -> IO ()
htmlParamElementGetValueType :: (HTMLParamElementClass self, GlibString string) => self -> IO string
data HTMLParamElement
class HTMLElementClass o => HTMLParamElementClass o
castToHTMLParamElement :: GObjectClass obj => obj -> HTMLParamElement
gTypeHTMLParamElement :: GType
toHTMLParamElement :: HTMLParamElementClass o => o -> HTMLParamElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLPreElement
htmlPreElementSetWidth :: HTMLPreElementClass self => self -> Int -> IO ()
htmlPreElementGetWidth :: HTMLPreElementClass self => self -> IO Int
htmlPreElementSetWrap :: HTMLPreElementClass self => self -> Bool -> IO ()
htmlPreElementGetWrap :: HTMLPreElementClass self => self -> IO Bool
data HTMLPreElement
class HTMLElementClass o => HTMLPreElementClass o
castToHTMLPreElement :: GObjectClass obj => obj -> HTMLPreElement
gTypeHTMLPreElement :: GType
toHTMLPreElement :: HTMLPreElementClass o => o -> HTMLPreElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLQuoteElement
htmlQuoteElementSetCite :: (HTMLQuoteElementClass self, GlibString string) => self -> string -> IO ()
htmlQuoteElementGetCite :: (HTMLQuoteElementClass self, GlibString string) => self -> IO string
data HTMLQuoteElement
class HTMLElementClass o => HTMLQuoteElementClass o
castToHTMLQuoteElement :: GObjectClass obj => obj -> HTMLQuoteElement
gTypeHTMLQuoteElement :: GType
toHTMLQuoteElement :: HTMLQuoteElementClass o => o -> HTMLQuoteElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLScriptElement
htmlScriptElementSetText :: (HTMLScriptElementClass self, GlibString string) => self -> string -> IO ()
htmlScriptElementGetText :: (HTMLScriptElementClass self, GlibString string) => self -> IO string
htmlScriptElementSetHtmlFor :: (HTMLScriptElementClass self, GlibString string) => self -> string -> IO ()
htmlScriptElementGetHtmlFor :: (HTMLScriptElementClass self, GlibString string) => self -> IO string
htmlScriptElementSetEvent :: (HTMLScriptElementClass self, GlibString string) => self -> string -> IO ()
htmlScriptElementGetEvent :: (HTMLScriptElementClass self, GlibString string) => self -> IO string
htmlScriptElementSetCharset :: (HTMLScriptElementClass self, GlibString string) => self -> string -> IO ()
htmlScriptElementGetCharset :: (HTMLScriptElementClass self, GlibString string) => self -> IO string
htmlScriptElementSetAsync :: HTMLScriptElementClass self => self -> Bool -> IO ()
htmlScriptElementGetAsync :: HTMLScriptElementClass self => self -> IO Bool
htmlScriptElementSetDefer :: HTMLScriptElementClass self => self -> Bool -> IO ()
htmlScriptElementGetDefer :: HTMLScriptElementClass self => self -> IO Bool
htmlScriptElementSetSrc :: (HTMLScriptElementClass self, GlibString string) => self -> string -> IO ()
htmlScriptElementGetSrc :: (HTMLScriptElementClass self, GlibString string) => self -> IO string
htmlScriptElementSetCrossOrigin :: (HTMLScriptElementClass self, GlibString string) => self -> string -> IO ()
htmlScriptElementGetCrossOrigin :: (HTMLScriptElementClass self, GlibString string) => self -> IO string
htmlScriptElementSetNonce :: (HTMLScriptElementClass self, GlibString string) => self -> string -> IO ()
htmlScriptElementGetNonce :: (HTMLScriptElementClass self, GlibString string) => self -> IO string
data HTMLScriptElement
class HTMLElementClass o => HTMLScriptElementClass o
castToHTMLScriptElement :: GObjectClass obj => obj -> HTMLScriptElement
gTypeHTMLScriptElement :: GType
toHTMLScriptElement :: HTMLScriptElementClass o => o -> HTMLScriptElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLSelectElement
htmlSelectElementItem :: HTMLSelectElementClass self => self -> Word -> IO (Maybe Node)
htmlSelectElementNamedItem :: (HTMLSelectElementClass self, GlibString string) => self -> string -> IO (Maybe Node)
htmlSelectElementAdd :: (HTMLSelectElementClass self, HTMLElementClass element, HTMLElementClass before) => self -> Maybe element -> Maybe before -> IO ()
htmlSelectElementRemove :: HTMLSelectElementClass self => self -> Int -> IO ()
htmlSelectElementCheckValidity :: HTMLSelectElementClass self => self -> IO Bool
htmlSelectElementSetCustomValidity :: (HTMLSelectElementClass self, GlibString string) => self -> string -> IO ()
htmlSelectElementSetAutofocus :: HTMLSelectElementClass self => self -> Bool -> IO ()
htmlSelectElementGetAutofocus :: HTMLSelectElementClass self => self -> IO Bool
htmlSelectElementSetDisabled :: HTMLSelectElementClass self => self -> Bool -> IO ()
htmlSelectElementGetDisabled :: HTMLSelectElementClass self => self -> IO Bool
htmlSelectElementGetForm :: HTMLSelectElementClass self => self -> IO (Maybe HTMLFormElement)
htmlSelectElementSetMultiple :: HTMLSelectElementClass self => self -> Bool -> IO ()
htmlSelectElementGetMultiple :: HTMLSelectElementClass self => self -> IO Bool
htmlSelectElementSetName :: (HTMLSelectElementClass self, GlibString string) => self -> string -> IO ()
htmlSelectElementGetName :: (HTMLSelectElementClass self, GlibString string) => self -> IO string
htmlSelectElementSetRequired :: HTMLSelectElementClass self => self -> Bool -> IO ()
htmlSelectElementGetRequired :: HTMLSelectElementClass self => self -> IO Bool
htmlSelectElementSetSize :: HTMLSelectElementClass self => self -> Int -> IO ()
htmlSelectElementGetSize :: HTMLSelectElementClass self => self -> IO Int
htmlSelectElementGetOptions :: HTMLSelectElementClass self => self -> IO (Maybe HTMLOptionsCollection)
htmlSelectElementSetLength :: HTMLSelectElementClass self => self -> Word -> IO ()
htmlSelectElementGetLength :: HTMLSelectElementClass self => self -> IO Word
htmlSelectElementGetSelectedOptions :: HTMLSelectElementClass self => self -> IO (Maybe HTMLCollection)
htmlSelectElementSetSelectedIndex :: HTMLSelectElementClass self => self -> Int -> IO ()
htmlSelectElementGetSelectedIndex :: HTMLSelectElementClass self => self -> IO Int
htmlSelectElementSetValue :: (HTMLSelectElementClass self, GlibString string) => self -> string -> IO ()
htmlSelectElementGetValue :: (HTMLSelectElementClass self, GlibString string) => self -> IO string
htmlSelectElementGetWillValidate :: HTMLSelectElementClass self => self -> IO Bool
htmlSelectElementGetValidity :: HTMLSelectElementClass self => self -> IO (Maybe ValidityState)
htmlSelectElementGetValidationMessage :: (HTMLSelectElementClass self, GlibString string) => self -> IO string
htmlSelectElementGetLabels :: HTMLSelectElementClass self => self -> IO (Maybe NodeList)
data HTMLSelectElement
class HTMLElementClass o => HTMLSelectElementClass o
castToHTMLSelectElement :: GObjectClass obj => obj -> HTMLSelectElement
gTypeHTMLSelectElement :: GType
toHTMLSelectElement :: HTMLSelectElementClass o => o -> HTMLSelectElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLStyleElement
htmlStyleElementSetDisabled :: HTMLStyleElementClass self => self -> Bool -> IO ()
htmlStyleElementGetDisabled :: HTMLStyleElementClass self => self -> IO Bool
htmlStyleElementSetScoped :: HTMLStyleElementClass self => self -> Bool -> IO ()
htmlStyleElementGetScoped :: HTMLStyleElementClass self => self -> IO Bool
htmlStyleElementSetMedia :: (HTMLStyleElementClass self, GlibString string) => self -> string -> IO ()
htmlStyleElementGetMedia :: (HTMLStyleElementClass self, GlibString string) => self -> IO string
htmlStyleElementGetSheet :: HTMLStyleElementClass self => self -> IO (Maybe StyleSheet)
data HTMLStyleElement
class HTMLElementClass o => HTMLStyleElementClass o
castToHTMLStyleElement :: GObjectClass obj => obj -> HTMLStyleElement
gTypeHTMLStyleElement :: GType
toHTMLStyleElement :: HTMLStyleElementClass o => o -> HTMLStyleElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLTableCaptionElement
htmlTableCaptionElementSetAlign :: (HTMLTableCaptionElementClass self, GlibString string) => self -> string -> IO ()
htmlTableCaptionElementGetAlign :: (HTMLTableCaptionElementClass self, GlibString string) => self -> IO string
data HTMLTableCaptionElement
class HTMLElementClass o => HTMLTableCaptionElementClass o
castToHTMLTableCaptionElement :: GObjectClass obj => obj -> HTMLTableCaptionElement
gTypeHTMLTableCaptionElement :: GType
toHTMLTableCaptionElement :: HTMLTableCaptionElementClass o => o -> HTMLTableCaptionElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLTableCellElement
htmlTableCellElementGetCellIndex :: HTMLTableCellElementClass self => self -> IO Int
htmlTableCellElementSetAbbr :: (HTMLTableCellElementClass self, GlibString string) => self -> string -> IO ()
htmlTableCellElementGetAbbr :: (HTMLTableCellElementClass self, GlibString string) => self -> IO string
htmlTableCellElementSetAlign :: (HTMLTableCellElementClass self, GlibString string) => self -> string -> IO ()
htmlTableCellElementGetAlign :: (HTMLTableCellElementClass self, GlibString string) => self -> IO string
htmlTableCellElementSetAxis :: (HTMLTableCellElementClass self, GlibString string) => self -> string -> IO ()
htmlTableCellElementGetAxis :: (HTMLTableCellElementClass self, GlibString string) => self -> IO string
htmlTableCellElementSetBgColor :: (HTMLTableCellElementClass self, GlibString string) => self -> string -> IO ()
htmlTableCellElementGetBgColor :: (HTMLTableCellElementClass self, GlibString string) => self -> IO string
htmlTableCellElementSetCh :: (HTMLTableCellElementClass self, GlibString string) => self -> string -> IO ()
htmlTableCellElementGetCh :: (HTMLTableCellElementClass self, GlibString string) => self -> IO string
htmlTableCellElementSetChOff :: (HTMLTableCellElementClass self, GlibString string) => self -> string -> IO ()
htmlTableCellElementGetChOff :: (HTMLTableCellElementClass self, GlibString string) => self -> IO string
htmlTableCellElementSetColSpan :: HTMLTableCellElementClass self => self -> Int -> IO ()
htmlTableCellElementGetColSpan :: HTMLTableCellElementClass self => self -> IO Int
htmlTableCellElementSetHeaders :: (HTMLTableCellElementClass self, GlibString string) => self -> string -> IO ()
htmlTableCellElementGetHeaders :: (HTMLTableCellElementClass self, GlibString string) => self -> IO string
htmlTableCellElementSetHeight :: (HTMLTableCellElementClass self, GlibString string) => self -> string -> IO ()
htmlTableCellElementGetHeight :: (HTMLTableCellElementClass self, GlibString string) => self -> IO string
htmlTableCellElementSetNoWrap :: HTMLTableCellElementClass self => self -> Bool -> IO ()
htmlTableCellElementGetNoWrap :: HTMLTableCellElementClass self => self -> IO Bool
htmlTableCellElementSetRowSpan :: HTMLTableCellElementClass self => self -> Int -> IO ()
htmlTableCellElementGetRowSpan :: HTMLTableCellElementClass self => self -> IO Int
htmlTableCellElementSetScope :: (HTMLTableCellElementClass self, GlibString string) => self -> string -> IO ()
htmlTableCellElementGetScope :: (HTMLTableCellElementClass self, GlibString string) => self -> IO string
htmlTableCellElementSetVAlign :: (HTMLTableCellElementClass self, GlibString string) => self -> string -> IO ()
htmlTableCellElementGetVAlign :: (HTMLTableCellElementClass self, GlibString string) => self -> IO string
htmlTableCellElementSetWidth :: (HTMLTableCellElementClass self, GlibString string) => self -> string -> IO ()
htmlTableCellElementGetWidth :: (HTMLTableCellElementClass self, GlibString string) => self -> IO string
data HTMLTableCellElement
class HTMLElementClass o => HTMLTableCellElementClass o
castToHTMLTableCellElement :: GObjectClass obj => obj -> HTMLTableCellElement
gTypeHTMLTableCellElement :: GType
toHTMLTableCellElement :: HTMLTableCellElementClass o => o -> HTMLTableCellElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLTableColElement
htmlTableColElementSetAlign :: (HTMLTableColElementClass self, GlibString string) => self -> string -> IO ()
htmlTableColElementGetAlign :: (HTMLTableColElementClass self, GlibString string) => self -> IO string
htmlTableColElementSetCh :: (HTMLTableColElementClass self, GlibString string) => self -> string -> IO ()
htmlTableColElementGetCh :: (HTMLTableColElementClass self, GlibString string) => self -> IO string
htmlTableColElementSetChOff :: (HTMLTableColElementClass self, GlibString string) => self -> string -> IO ()
htmlTableColElementGetChOff :: (HTMLTableColElementClass self, GlibString string) => self -> IO string
htmlTableColElementSetSpan :: HTMLTableColElementClass self => self -> Int -> IO ()
htmlTableColElementGetSpan :: HTMLTableColElementClass self => self -> IO Int
htmlTableColElementSetVAlign :: (HTMLTableColElementClass self, GlibString string) => self -> string -> IO ()
htmlTableColElementGetVAlign :: (HTMLTableColElementClass self, GlibString string) => self -> IO string
htmlTableColElementSetWidth :: (HTMLTableColElementClass self, GlibString string) => self -> string -> IO ()
htmlTableColElementGetWidth :: (HTMLTableColElementClass self, GlibString string) => self -> IO string
data HTMLTableColElement
class HTMLElementClass o => HTMLTableColElementClass o
castToHTMLTableColElement :: GObjectClass obj => obj -> HTMLTableColElement
gTypeHTMLTableColElement :: GType
toHTMLTableColElement :: HTMLTableColElementClass o => o -> HTMLTableColElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLTableElement
htmlTableElementCreateTHead :: HTMLTableElementClass self => self -> IO (Maybe HTMLElement)
htmlTableElementDeleteTHead :: HTMLTableElementClass self => self -> IO ()
htmlTableElementCreateTFoot :: HTMLTableElementClass self => self -> IO (Maybe HTMLElement)
htmlTableElementDeleteTFoot :: HTMLTableElementClass self => self -> IO ()
htmlTableElementCreateTBody :: HTMLTableElementClass self => self -> IO (Maybe HTMLElement)
htmlTableElementCreateCaption :: HTMLTableElementClass self => self -> IO (Maybe HTMLElement)
htmlTableElementDeleteCaption :: HTMLTableElementClass self => self -> IO ()
htmlTableElementInsertRow :: HTMLTableElementClass self => self -> Int -> IO (Maybe HTMLElement)
htmlTableElementDeleteRow :: HTMLTableElementClass self => self -> Int -> IO ()
htmlTableElementSetCaption :: (HTMLTableCaptionElementClass val, HTMLTableElementClass self) => self -> Maybe val -> IO ()
htmlTableElementGetCaption :: HTMLTableElementClass self => self -> IO (Maybe HTMLTableCaptionElement)
htmlTableElementSetTHead :: (HTMLTableSectionElementClass val, HTMLTableElementClass self) => self -> Maybe val -> IO ()
htmlTableElementGetTHead :: HTMLTableElementClass self => self -> IO (Maybe HTMLTableSectionElement)
htmlTableElementSetTFoot :: (HTMLTableSectionElementClass val, HTMLTableElementClass self) => self -> Maybe val -> IO ()
htmlTableElementGetTFoot :: HTMLTableElementClass self => self -> IO (Maybe HTMLTableSectionElement)
htmlTableElementGetRows :: HTMLTableElementClass self => self -> IO (Maybe HTMLCollection)
htmlTableElementGetTBodies :: HTMLTableElementClass self => self -> IO (Maybe HTMLCollection)
htmlTableElementSetAlign :: (HTMLTableElementClass self, GlibString string) => self -> string -> IO ()
htmlTableElementGetAlign :: (HTMLTableElementClass self, GlibString string) => self -> IO string
htmlTableElementSetBgColor :: (HTMLTableElementClass self, GlibString string) => self -> string -> IO ()
htmlTableElementGetBgColor :: (HTMLTableElementClass self, GlibString string) => self -> IO string
htmlTableElementSetBorder :: (HTMLTableElementClass self, GlibString string) => self -> string -> IO ()
htmlTableElementGetBorder :: (HTMLTableElementClass self, GlibString string) => self -> IO string
htmlTableElementSetCellPadding :: (HTMLTableElementClass self, GlibString string) => self -> string -> IO ()
htmlTableElementGetCellPadding :: (HTMLTableElementClass self, GlibString string) => self -> IO string
htmlTableElementSetCellSpacing :: (HTMLTableElementClass self, GlibString string) => self -> string -> IO ()
htmlTableElementGetCellSpacing :: (HTMLTableElementClass self, GlibString string) => self -> IO string
htmlTableElementSetFrame :: (HTMLTableElementClass self, GlibString string) => self -> string -> IO ()
htmlTableElementGetFrame :: (HTMLTableElementClass self, GlibString string) => self -> IO string
htmlTableElementSetRules :: (HTMLTableElementClass self, GlibString string) => self -> string -> IO ()
htmlTableElementGetRules :: (HTMLTableElementClass self, GlibString string) => self -> IO string
htmlTableElementSetSummary :: (HTMLTableElementClass self, GlibString string) => self -> string -> IO ()
htmlTableElementGetSummary :: (HTMLTableElementClass self, GlibString string) => self -> IO string
htmlTableElementSetWidth :: (HTMLTableElementClass self, GlibString string) => self -> string -> IO ()
htmlTableElementGetWidth :: (HTMLTableElementClass self, GlibString string) => self -> IO string
data HTMLTableElement
class HTMLElementClass o => HTMLTableElementClass o
castToHTMLTableElement :: GObjectClass obj => obj -> HTMLTableElement
gTypeHTMLTableElement :: GType
toHTMLTableElement :: HTMLTableElementClass o => o -> HTMLTableElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLTableRowElement
htmlTableRowElementInsertCell :: HTMLTableRowElementClass self => self -> Int -> IO (Maybe HTMLElement)
htmlTableRowElementDeleteCell :: HTMLTableRowElementClass self => self -> Int -> IO ()
htmlTableRowElementGetRowIndex :: HTMLTableRowElementClass self => self -> IO Int
htmlTableRowElementGetSectionRowIndex :: HTMLTableRowElementClass self => self -> IO Int
htmlTableRowElementGetCells :: HTMLTableRowElementClass self => self -> IO (Maybe HTMLCollection)
htmlTableRowElementSetAlign :: (HTMLTableRowElementClass self, GlibString string) => self -> string -> IO ()
htmlTableRowElementGetAlign :: (HTMLTableRowElementClass self, GlibString string) => self -> IO string
htmlTableRowElementSetBgColor :: (HTMLTableRowElementClass self, GlibString string) => self -> string -> IO ()
htmlTableRowElementGetBgColor :: (HTMLTableRowElementClass self, GlibString string) => self -> IO string
htmlTableRowElementSetCh :: (HTMLTableRowElementClass self, GlibString string) => self -> string -> IO ()
htmlTableRowElementGetCh :: (HTMLTableRowElementClass self, GlibString string) => self -> IO string
htmlTableRowElementSetChOff :: (HTMLTableRowElementClass self, GlibString string) => self -> string -> IO ()
htmlTableRowElementGetChOff :: (HTMLTableRowElementClass self, GlibString string) => self -> IO string
htmlTableRowElementSetVAlign :: (HTMLTableRowElementClass self, GlibString string) => self -> string -> IO ()
htmlTableRowElementGetVAlign :: (HTMLTableRowElementClass self, GlibString string) => self -> IO string
data HTMLTableRowElement
class HTMLElementClass o => HTMLTableRowElementClass o
castToHTMLTableRowElement :: GObjectClass obj => obj -> HTMLTableRowElement
gTypeHTMLTableRowElement :: GType
toHTMLTableRowElement :: HTMLTableRowElementClass o => o -> HTMLTableRowElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLTableSectionElement
htmlTableSectionElementInsertRow :: HTMLTableSectionElementClass self => self -> Int -> IO (Maybe HTMLElement)
htmlTableSectionElementDeleteRow :: HTMLTableSectionElementClass self => self -> Int -> IO ()
htmlTableSectionElementSetAlign :: (HTMLTableSectionElementClass self, GlibString string) => self -> string -> IO ()
htmlTableSectionElementGetAlign :: (HTMLTableSectionElementClass self, GlibString string) => self -> IO string
htmlTableSectionElementSetCh :: (HTMLTableSectionElementClass self, GlibString string) => self -> string -> IO ()
htmlTableSectionElementGetCh :: (HTMLTableSectionElementClass self, GlibString string) => self -> IO string
htmlTableSectionElementSetChOff :: (HTMLTableSectionElementClass self, GlibString string) => self -> string -> IO ()
htmlTableSectionElementGetChOff :: (HTMLTableSectionElementClass self, GlibString string) => self -> IO string
htmlTableSectionElementSetVAlign :: (HTMLTableSectionElementClass self, GlibString string) => self -> string -> IO ()
htmlTableSectionElementGetVAlign :: (HTMLTableSectionElementClass self, GlibString string) => self -> IO string
htmlTableSectionElementGetRows :: HTMLTableSectionElementClass self => self -> IO (Maybe HTMLCollection)
data HTMLTableSectionElement
class HTMLElementClass o => HTMLTableSectionElementClass o
castToHTMLTableSectionElement :: GObjectClass obj => obj -> HTMLTableSectionElement
gTypeHTMLTableSectionElement :: GType
toHTMLTableSectionElement :: HTMLTableSectionElementClass o => o -> HTMLTableSectionElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLTextAreaElement
htmlTextAreaElementCheckValidity :: HTMLTextAreaElementClass self => self -> IO Bool
htmlTextAreaElementSetCustomValidity :: (HTMLTextAreaElementClass self, GlibString string) => self -> string -> IO ()
htmlTextAreaElementSelect :: HTMLTextAreaElementClass self => self -> IO ()
htmlTextAreaElementSetRangeText :: (HTMLTextAreaElementClass self, GlibString string) => self -> string -> Word -> Word -> string -> IO ()
htmlTextAreaElementSetSelectionRange :: (HTMLTextAreaElementClass self, GlibString string) => self -> Int -> Int -> string -> IO ()
htmlTextAreaElementSetAutofocus :: HTMLTextAreaElementClass self => self -> Bool -> IO ()
htmlTextAreaElementGetAutofocus :: HTMLTextAreaElementClass self => self -> IO Bool
htmlTextAreaElementSetCols :: HTMLTextAreaElementClass self => self -> Int -> IO ()
htmlTextAreaElementGetCols :: HTMLTextAreaElementClass self => self -> IO Int
htmlTextAreaElementSetDirName :: (HTMLTextAreaElementClass self, GlibString string) => self -> string -> IO ()
htmlTextAreaElementGetDirName :: (HTMLTextAreaElementClass self, GlibString string) => self -> IO string
htmlTextAreaElementSetDisabled :: HTMLTextAreaElementClass self => self -> Bool -> IO ()
htmlTextAreaElementGetDisabled :: HTMLTextAreaElementClass self => self -> IO Bool
htmlTextAreaElementGetForm :: HTMLTextAreaElementClass self => self -> IO (Maybe HTMLFormElement)
htmlTextAreaElementSetMaxLength :: HTMLTextAreaElementClass self => self -> Int -> IO ()
htmlTextAreaElementGetMaxLength :: HTMLTextAreaElementClass self => self -> IO Int
htmlTextAreaElementSetName :: (HTMLTextAreaElementClass self, GlibString string) => self -> string -> IO ()
htmlTextAreaElementGetName :: (HTMLTextAreaElementClass self, GlibString string) => self -> IO string
htmlTextAreaElementSetPlaceholder :: (HTMLTextAreaElementClass self, GlibString string) => self -> string -> IO ()
htmlTextAreaElementGetPlaceholder :: (HTMLTextAreaElementClass self, GlibString string) => self -> IO string
htmlTextAreaElementSetReadOnly :: HTMLTextAreaElementClass self => self -> Bool -> IO ()
htmlTextAreaElementGetReadOnly :: HTMLTextAreaElementClass self => self -> IO Bool
htmlTextAreaElementSetRequired :: HTMLTextAreaElementClass self => self -> Bool -> IO ()
htmlTextAreaElementGetRequired :: HTMLTextAreaElementClass self => self -> IO Bool
htmlTextAreaElementSetRows :: HTMLTextAreaElementClass self => self -> Int -> IO ()
htmlTextAreaElementGetRows :: HTMLTextAreaElementClass self => self -> IO Int
htmlTextAreaElementSetWrap :: (HTMLTextAreaElementClass self, GlibString string) => self -> string -> IO ()
htmlTextAreaElementGetWrap :: (HTMLTextAreaElementClass self, GlibString string) => self -> IO string
htmlTextAreaElementSetDefaultValue :: (HTMLTextAreaElementClass self, GlibString string) => self -> string -> IO ()
htmlTextAreaElementGetDefaultValue :: (HTMLTextAreaElementClass self, GlibString string) => self -> IO string
htmlTextAreaElementSetValue :: (HTMLTextAreaElementClass self, GlibString string) => self -> string -> IO ()
htmlTextAreaElementGetValue :: (HTMLTextAreaElementClass self, GlibString string) => self -> IO string
htmlTextAreaElementGetTextLength :: HTMLTextAreaElementClass self => self -> IO Word
htmlTextAreaElementGetWillValidate :: HTMLTextAreaElementClass self => self -> IO Bool
htmlTextAreaElementGetValidity :: HTMLTextAreaElementClass self => self -> IO (Maybe ValidityState)
htmlTextAreaElementGetValidationMessage :: (HTMLTextAreaElementClass self, GlibString string) => self -> IO string
htmlTextAreaElementGetLabels :: HTMLTextAreaElementClass self => self -> IO (Maybe NodeList)
htmlTextAreaElementSetSelectionStart :: HTMLTextAreaElementClass self => self -> Int -> IO ()
htmlTextAreaElementGetSelectionStart :: HTMLTextAreaElementClass self => self -> IO Int
htmlTextAreaElementSetSelectionEnd :: HTMLTextAreaElementClass self => self -> Int -> IO ()
htmlTextAreaElementGetSelectionEnd :: HTMLTextAreaElementClass self => self -> IO Int
htmlTextAreaElementSetSelectionDirection :: (HTMLTextAreaElementClass self, GlibString string) => self -> string -> IO ()
htmlTextAreaElementGetSelectionDirection :: (HTMLTextAreaElementClass self, GlibString string) => self -> IO string
data HTMLTextAreaElement
class HTMLElementClass o => HTMLTextAreaElementClass o
castToHTMLTextAreaElement :: GObjectClass obj => obj -> HTMLTextAreaElement
gTypeHTMLTextAreaElement :: GType
toHTMLTextAreaElement :: HTMLTextAreaElementClass o => o -> HTMLTextAreaElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLTitleElement
htmlTitleElementSetText :: (HTMLTitleElementClass self, GlibString string) => self -> string -> IO ()
htmlTitleElementGetText :: (HTMLTitleElementClass self, GlibString string) => self -> IO string
data HTMLTitleElement
class HTMLElementClass o => HTMLTitleElementClass o
castToHTMLTitleElement :: GObjectClass obj => obj -> HTMLTitleElement
gTypeHTMLTitleElement :: GType
toHTMLTitleElement :: HTMLTitleElementClass o => o -> HTMLTitleElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLUListElement
htmluListElementSetCompact :: HTMLUListElementClass self => self -> Bool -> IO ()
htmluListElementGetCompact :: HTMLUListElementClass self => self -> IO Bool
data HTMLUListElement
class HTMLElementClass o => HTMLUListElementClass o
castToHTMLUListElement :: GObjectClass obj => obj -> HTMLUListElement
gTypeHTMLUListElement :: GType
toHTMLUListElement :: HTMLUListElementClass o => o -> HTMLUListElement

module Graphics.UI.Gtk.WebKit.DOM.KeyboardEvent
keyboardEventGetModifierState :: (KeyboardEventClass self, GlibString string) => self -> string -> IO Bool
keyboardEventInitKeyboardEvent :: (KeyboardEventClass self, DOMWindowClass view, GlibString string) => self -> string -> Bool -> Bool -> Maybe view -> string -> Word -> Bool -> Bool -> Bool -> Bool -> Bool -> IO ()
cKEY_LOCATION_STANDARD :: Integer
cKEY_LOCATION_LEFT :: Integer
cKEY_LOCATION_RIGHT :: Integer
cKEY_LOCATION_NUMPAD :: Integer
keyboardEventGetKeyIdentifier :: (KeyboardEventClass self, GlibString string) => self -> IO string
keyboardEventGetKeyLocation :: KeyboardEventClass self => self -> IO Word
keyboardEventGetCtrlKey :: KeyboardEventClass self => self -> IO Bool
keyboardEventGetShiftKey :: KeyboardEventClass self => self -> IO Bool
keyboardEventGetAltKey :: KeyboardEventClass self => self -> IO Bool
keyboardEventGetMetaKey :: KeyboardEventClass self => self -> IO Bool
keyboardEventGetAltGraphKey :: KeyboardEventClass self => self -> IO Bool
data KeyboardEvent
class UIEventClass o => KeyboardEventClass o
castToKeyboardEvent :: GObjectClass obj => obj -> KeyboardEvent
gTypeKeyboardEvent :: GType
toKeyboardEvent :: KeyboardEventClass o => o -> KeyboardEvent

module Graphics.UI.Gtk.WebKit.DOM.Location
locationGetOrigin :: (LocationClass self, GlibString string) => self -> IO string
locationGetAncestorOrigins :: LocationClass self => self -> IO (Maybe DOMStringList)
data Location
class GObjectClass o => LocationClass o
castToLocation :: GObjectClass obj => obj -> Location
gTypeLocation :: GType
toLocation :: LocationClass o => o -> Location

module Graphics.UI.Gtk.WebKit.DOM.MediaList
mediaListItem :: (MediaListClass self, GlibString string) => self -> Word -> IO string
mediaListDeleteMedium :: (MediaListClass self, GlibString string) => self -> string -> IO ()
mediaListAppendMedium :: (MediaListClass self, GlibString string) => self -> string -> IO ()
mediaListSetMediaText :: (MediaListClass self, GlibString string) => self -> string -> IO ()
mediaListGetMediaText :: (MediaListClass self, GlibString string) => self -> IO string
mediaListGetLength :: MediaListClass self => self -> IO Word
data MediaList
class GObjectClass o => MediaListClass o
castToMediaList :: GObjectClass obj => obj -> MediaList
gTypeMediaList :: GType
toMediaList :: MediaListClass o => o -> MediaList

module Graphics.UI.Gtk.WebKit.DOM.MediaQueryList
mediaQueryListGetMedia :: (MediaQueryListClass self, GlibString string) => self -> IO string
mediaQueryListGetMatches :: MediaQueryListClass self => self -> IO Bool
data MediaQueryList
class GObjectClass o => MediaQueryListClass o
castToMediaQueryList :: GObjectClass obj => obj -> MediaQueryList
gTypeMediaQueryList :: GType
toMediaQueryList :: MediaQueryListClass o => o -> MediaQueryList

module Graphics.UI.Gtk.WebKit.DOM.NamedNodeMap
namedNodeMapGetNamedItem :: (NamedNodeMapClass self, GlibString string) => self -> string -> IO (Maybe Node)
namedNodeMapSetNamedItem :: (NamedNodeMapClass self, NodeClass node) => self -> Maybe node -> IO (Maybe Node)
namedNodeMapRemoveNamedItem :: (NamedNodeMapClass self, GlibString string) => self -> string -> IO (Maybe Node)
namedNodeMapItem :: NamedNodeMapClass self => self -> Word -> IO (Maybe Node)
namedNodeMapGetNamedItemNS :: (NamedNodeMapClass self, GlibString string) => self -> string -> string -> IO (Maybe Node)
namedNodeMapSetNamedItemNS :: (NamedNodeMapClass self, NodeClass node) => self -> Maybe node -> IO (Maybe Node)
namedNodeMapRemoveNamedItemNS :: (NamedNodeMapClass self, GlibString string) => self -> string -> string -> IO (Maybe Node)
namedNodeMapGetLength :: NamedNodeMapClass self => self -> IO Word
data NamedNodeMap
class GObjectClass o => NamedNodeMapClass o
castToNamedNodeMap :: GObjectClass obj => obj -> NamedNodeMap
gTypeNamedNodeMap :: GType
toNamedNodeMap :: NamedNodeMapClass o => o -> NamedNodeMap

module Graphics.UI.Gtk.WebKit.DOM.Navigator
navigatorJavaEnabled :: NavigatorClass self => self -> IO Bool
navigatorGetStorageUpdates :: NavigatorClass self => self -> IO ()
navigatorGetAppCodeName :: (NavigatorClass self, GlibString string) => self -> IO string
navigatorGetAppName :: (NavigatorClass self, GlibString string) => self -> IO string
navigatorGetAppVersion :: (NavigatorClass self, GlibString string) => self -> IO string
navigatorGetLanguage :: (NavigatorClass self, GlibString string) => self -> IO string
navigatorGetUserAgent :: (NavigatorClass self, GlibString string) => self -> IO string
navigatorGetPlatform :: (NavigatorClass self, GlibString string) => self -> IO string
navigatorGetPlugins :: NavigatorClass self => self -> IO (Maybe DOMPluginArray)
navigatorGetMimeTypes :: NavigatorClass self => self -> IO (Maybe DOMMimeTypeArray)
navigatorGetProduct :: (NavigatorClass self, GlibString string) => self -> IO string
navigatorGetProductSub :: (NavigatorClass self, GlibString string) => self -> IO string
navigatorGetVendor :: (NavigatorClass self, GlibString string) => self -> IO string
navigatorGetVendorSub :: (NavigatorClass self, GlibString string) => self -> IO string
navigatorGetCookieEnabled :: NavigatorClass self => self -> IO Bool
navigatorGetOnLine :: NavigatorClass self => self -> IO Bool
data Navigator
class GObjectClass o => NavigatorClass o
castToNavigator :: GObjectClass obj => obj -> Navigator
gTypeNavigator :: GType
toNavigator :: NavigatorClass o => o -> Navigator

module Graphics.UI.Gtk.WebKit.DOM.Node
nodeInsertBefore :: (NodeClass self, NodeClass newChild, NodeClass refChild) => self -> Maybe newChild -> Maybe refChild -> IO (Maybe Node)
nodeReplaceChild :: (NodeClass self, NodeClass newChild, NodeClass oldChild) => self -> Maybe newChild -> Maybe oldChild -> IO (Maybe Node)
nodeRemoveChild :: (NodeClass self, NodeClass oldChild) => self -> Maybe oldChild -> IO (Maybe Node)
nodeAppendChild :: (NodeClass self, NodeClass newChild) => self -> Maybe newChild -> IO (Maybe Node)
nodeHasChildNodes :: NodeClass self => self -> IO Bool
nodeCloneNode :: NodeClass self => self -> Bool -> IO (Maybe Node)
nodeNormalize :: NodeClass self => self -> IO ()
nodeIsSupported :: (NodeClass self, GlibString string) => self -> string -> string -> IO Bool
nodeIsSameNode :: (NodeClass self, NodeClass other) => self -> Maybe other -> IO Bool
nodeIsEqualNode :: (NodeClass self, NodeClass other) => self -> Maybe other -> IO Bool
nodeLookupPrefix :: (NodeClass self, GlibString string) => self -> string -> IO string
nodeIsDefaultNamespace :: (NodeClass self, GlibString string) => self -> string -> IO Bool
nodeLookupNamespaceURI :: (NodeClass self, GlibString string) => self -> string -> IO string
nodeCompareDocumentPosition :: (NodeClass self, NodeClass other) => self -> Maybe other -> IO Word
nodeContains :: (NodeClass self, NodeClass other) => self -> Maybe other -> IO Bool
nodeDispatchEvent :: (NodeClass self, EventClass event) => self -> Maybe event -> IO Bool
cELEMENT_NODE :: Integer
cATTRIBUTE_NODE :: Integer
cTEXT_NODE :: Integer
cCDATA_SECTION_NODE :: Integer
cENTITY_REFERENCE_NODE :: Integer
cENTITY_NODE :: Integer
cPROCESSING_INSTRUCTION_NODE :: Integer
cCOMMENT_NODE :: Integer
cDOCUMENT_NODE :: Integer
cDOCUMENT_TYPE_NODE :: Integer
cDOCUMENT_FRAGMENT_NODE :: Integer
cNOTATION_NODE :: Integer
cDOCUMENT_POSITION_DISCONNECTED :: Integer
cDOCUMENT_POSITION_PRECEDING :: Integer
cDOCUMENT_POSITION_FOLLOWING :: Integer
cDOCUMENT_POSITION_CONTAINS :: Integer
cDOCUMENT_POSITION_CONTAINED_BY :: Integer
cDOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC :: Integer
nodeGetNodeName :: (NodeClass self, GlibString string) => self -> IO string
nodeSetNodeValue :: (NodeClass self, GlibString string) => self -> string -> IO ()
nodeGetNodeValue :: (NodeClass self, GlibString string) => self -> IO string
nodeGetNodeType :: NodeClass self => self -> IO Word
nodeGetParentNode :: NodeClass self => self -> IO (Maybe Node)
nodeGetChildNodes :: NodeClass self => self -> IO (Maybe NodeList)
nodeGetFirstChild :: NodeClass self => self -> IO (Maybe Node)
nodeGetLastChild :: NodeClass self => self -> IO (Maybe Node)
nodeGetPreviousSibling :: NodeClass self => self -> IO (Maybe Node)
nodeGetNextSibling :: NodeClass self => self -> IO (Maybe Node)
nodeGetOwnerDocument :: NodeClass self => self -> IO (Maybe Document)
nodeGetNamespaceURI :: (NodeClass self, GlibString string) => self -> IO string
nodeSetPrefix :: (NodeClass self, GlibString string) => self -> string -> IO ()
nodeGetPrefix :: (NodeClass self, GlibString string) => self -> IO string
nodeGetLocalName :: (NodeClass self, GlibString string) => self -> IO string
nodeGetBaseURI :: (NodeClass self, GlibString string) => self -> IO string
nodeSetTextContent :: (NodeClass self, GlibString string) => self -> string -> IO ()
nodeGetTextContent :: (NodeClass self, GlibString string) => self -> IO string
nodeGetParentElement :: NodeClass self => self -> IO (Maybe Element)
data Node
class GObjectClass o => NodeClass o
castToNode :: GObjectClass obj => obj -> Node
gTypeNode :: GType
toNode :: NodeClass o => o -> Node

module Graphics.UI.Gtk.WebKit.DOM.NodeFilter
cFILTER_ACCEPT :: Integer
cFILTER_REJECT :: Integer
cFILTER_SKIP :: Integer
cSHOW_ALL :: Integer
cSHOW_ELEMENT :: Integer
cSHOW_ATTRIBUTE :: Integer
cSHOW_TEXT :: Integer
cSHOW_CDATA_SECTION :: Integer
cSHOW_ENTITY_REFERENCE :: Integer
cSHOW_ENTITY :: Integer
cSHOW_PROCESSING_INSTRUCTION :: Integer
cSHOW_COMMENT :: Integer
cSHOW_DOCUMENT :: Integer
cSHOW_DOCUMENT_TYPE :: Integer
cSHOW_DOCUMENT_FRAGMENT :: Integer
cSHOW_NOTATION :: Integer
data NodeFilter
class GObjectClass o => NodeFilterClass o
castToNodeFilter :: GObjectClass obj => obj -> NodeFilter
gTypeNodeFilter :: GType
toNodeFilter :: NodeFilterClass o => o -> NodeFilter

module Graphics.UI.Gtk.WebKit.DOM.NodeIterator
nodeIteratorDetach :: NodeIteratorClass self => self -> IO ()
nodeIteratorGetRoot :: NodeIteratorClass self => self -> IO (Maybe Node)
nodeIteratorGetWhatToShow :: NodeIteratorClass self => self -> IO Word
nodeIteratorGetFilter :: NodeIteratorClass self => self -> IO (Maybe NodeFilter)
nodeIteratorGetExpandEntityReferences :: NodeIteratorClass self => self -> IO Bool
nodeIteratorGetReferenceNode :: NodeIteratorClass self => self -> IO (Maybe Node)
nodeIteratorGetPointerBeforeReferenceNode :: NodeIteratorClass self => self -> IO Bool
data NodeIterator
class GObjectClass o => NodeIteratorClass o
castToNodeIterator :: GObjectClass obj => obj -> NodeIterator
gTypeNodeIterator :: GType
toNodeIterator :: NodeIteratorClass o => o -> NodeIterator

module Graphics.UI.Gtk.WebKit.DOM.NodeList
nodeListItem :: NodeListClass self => self -> Word -> IO (Maybe Node)
nodeListGetLength :: NodeListClass self => self -> IO Word
data NodeList
class GObjectClass o => NodeListClass o
castToNodeList :: GObjectClass obj => obj -> NodeList
gTypeNodeList :: GType
toNodeList :: NodeListClass o => o -> NodeList

module Graphics.UI.Gtk.WebKit.DOM.ProcessingInstruction
processingInstructionGetTarget :: (ProcessingInstructionClass self, GlibString string) => self -> IO string
processingInstructionSetData :: (ProcessingInstructionClass self, GlibString string) => self -> string -> IO ()
processingInstructionGetData :: (ProcessingInstructionClass self, GlibString string) => self -> IO string
processingInstructionGetSheet :: ProcessingInstructionClass self => self -> IO (Maybe StyleSheet)
data ProcessingInstruction
class NodeClass o => ProcessingInstructionClass o
castToProcessingInstruction :: GObjectClass obj => obj -> ProcessingInstruction
gTypeProcessingInstruction :: GType
toProcessingInstruction :: ProcessingInstructionClass o => o -> ProcessingInstruction

module Graphics.UI.Gtk.WebKit.DOM.Range
rangeSetStart :: (DOMRangeClass self, NodeClass refNode) => self -> Maybe refNode -> Int -> IO ()
rangeSetEnd :: (DOMRangeClass self, NodeClass refNode) => self -> Maybe refNode -> Int -> IO ()
rangeSetStartBefore :: (DOMRangeClass self, NodeClass refNode) => self -> Maybe refNode -> IO ()
rangeSetStartAfter :: (DOMRangeClass self, NodeClass refNode) => self -> Maybe refNode -> IO ()
rangeSetEndBefore :: (DOMRangeClass self, NodeClass refNode) => self -> Maybe refNode -> IO ()
rangeSetEndAfter :: (DOMRangeClass self, NodeClass refNode) => self -> Maybe refNode -> IO ()
rangeCollapse :: DOMRangeClass self => self -> Bool -> IO ()
rangeSelectNode :: (DOMRangeClass self, NodeClass refNode) => self -> Maybe refNode -> IO ()
rangeSelectNodeContents :: (DOMRangeClass self, NodeClass refNode) => self -> Maybe refNode -> IO ()
rangeCompareBoundaryPoints :: (DOMRangeClass self, DOMRangeClass sourceRange) => self -> Word -> Maybe sourceRange -> IO Int
rangeDeleteContents :: DOMRangeClass self => self -> IO ()
rangeExtractContents :: DOMRangeClass self => self -> IO (Maybe DocumentFragment)
rangeCloneContents :: DOMRangeClass self => self -> IO (Maybe DocumentFragment)
rangeInsertNode :: (DOMRangeClass self, NodeClass newNode) => self -> Maybe newNode -> IO ()
rangeSurroundContents :: (DOMRangeClass self, NodeClass newParent) => self -> Maybe newParent -> IO ()
rangeCloneRange :: DOMRangeClass self => self -> IO (Maybe DOMRange)
rangeToString :: (DOMRangeClass self, GlibString string) => self -> IO string
rangeDetach :: DOMRangeClass self => self -> IO ()
rangeCreateContextualFragment :: (DOMRangeClass self, GlibString string) => self -> string -> IO (Maybe DocumentFragment)
rangeIntersectsNode :: (DOMRangeClass self, NodeClass refNode) => self -> Maybe refNode -> IO Bool
rangeCompareNode :: (DOMRangeClass self, NodeClass refNode) => self -> Maybe refNode -> IO Int
rangeComparePoint :: (DOMRangeClass self, NodeClass refNode) => self -> Maybe refNode -> Int -> IO Int
rangeIsPointInRange :: (DOMRangeClass self, NodeClass refNode) => self -> Maybe refNode -> Int -> IO Bool
rangeExpand :: (DOMRangeClass self, GlibString string) => self -> string -> IO ()
cSTART_TO_START :: Integer
cSTART_TO_END :: Integer
cEND_TO_END :: Integer
cEND_TO_START :: Integer
cNODE_BEFORE :: Integer
cNODE_AFTER :: Integer
cNODE_BEFORE_AND_AFTER :: Integer
cNODE_INSIDE :: Integer
rangeGetStartContainer :: DOMRangeClass self => self -> IO (Maybe Node)
rangeGetStartOffset :: DOMRangeClass self => self -> IO Int
rangeGetEndContainer :: DOMRangeClass self => self -> IO (Maybe Node)
rangeGetEndOffset :: DOMRangeClass self => self -> IO Int
rangeGetCollapsed :: DOMRangeClass self => self -> IO Bool
rangeGetCommonAncestorContainer :: DOMRangeClass self => self -> IO (Maybe Node)
rangeGetText :: (DOMRangeClass self, GlibString string) => self -> IO string
data DOMRange
class GObjectClass o => DOMRangeClass o
castToDOMRange :: GObjectClass obj => obj -> DOMRange
gTypeDOMRange :: GType
toDOMRange :: DOMRangeClass o => o -> DOMRange

module Graphics.UI.Gtk.WebKit.DOM.Screen
screenGetHeight :: DOMScreenClass self => self -> IO Word
screenGetWidth :: DOMScreenClass self => self -> IO Word
screenGetColorDepth :: DOMScreenClass self => self -> IO Word
screenGetPixelDepth :: DOMScreenClass self => self -> IO Word
screenGetAvailLeft :: DOMScreenClass self => self -> IO Int
screenGetAvailTop :: DOMScreenClass self => self -> IO Int
screenGetAvailHeight :: DOMScreenClass self => self -> IO Word
screenGetAvailWidth :: DOMScreenClass self => self -> IO Word
data DOMScreen
class GObjectClass o => DOMScreenClass o
castToDOMScreen :: GObjectClass obj => obj -> DOMScreen
gTypeDOMScreen :: GType
toDOMScreen :: DOMScreenClass o => o -> DOMScreen

module Graphics.UI.Gtk.WebKit.DOM.StyleMedia
styleMediaMatchMedium :: (StyleMediaClass self, GlibString string) => self -> string -> IO Bool
data StyleMedia
class GObjectClass o => StyleMediaClass o
castToStyleMedia :: GObjectClass obj => obj -> StyleMedia
gTypeStyleMedia :: GType
toStyleMedia :: StyleMediaClass o => o -> StyleMedia

module Graphics.UI.Gtk.WebKit.DOM.StyleSheet
styleSheetSetDisabled :: StyleSheetClass self => self -> Bool -> IO ()
styleSheetGetDisabled :: StyleSheetClass self => self -> IO Bool
styleSheetGetOwnerNode :: StyleSheetClass self => self -> IO (Maybe Node)
styleSheetGetParentStyleSheet :: StyleSheetClass self => self -> IO (Maybe StyleSheet)
styleSheetGetHref :: (StyleSheetClass self, GlibString string) => self -> IO string
styleSheetGetTitle :: (StyleSheetClass self, GlibString string) => self -> IO string
styleSheetGetMedia :: StyleSheetClass self => self -> IO (Maybe MediaList)
data StyleSheet
class GObjectClass o => StyleSheetClass o
castToStyleSheet :: GObjectClass obj => obj -> StyleSheet
gTypeStyleSheet :: GType
toStyleSheet :: StyleSheetClass o => o -> StyleSheet

module Graphics.UI.Gtk.WebKit.DOM.StyleSheetList
styleSheetListItem :: StyleSheetListClass self => self -> Word -> IO (Maybe StyleSheet)
styleSheetListGetLength :: StyleSheetListClass self => self -> IO Word
data StyleSheetList
class GObjectClass o => StyleSheetListClass o
castToStyleSheetList :: GObjectClass obj => obj -> StyleSheetList
gTypeStyleSheetList :: GType
toStyleSheetList :: StyleSheetListClass o => o -> StyleSheetList

module Graphics.UI.Gtk.WebKit.DOM.Storage
storageKey :: (StorageClass self, GlibString string) => self -> Word -> IO string
storageGetItem :: (StorageClass self, GlibString string) => self -> string -> IO string
storageSetItem :: (StorageClass self, GlibString string) => self -> string -> string -> IO ()
storageRemoveItem :: (StorageClass self, GlibString string) => self -> string -> IO ()
storageClear :: StorageClass self => self -> IO ()
storageGetLength :: StorageClass self => self -> IO Word
data Storage
class GObjectClass o => StorageClass o
castToStorage :: GObjectClass obj => obj -> Storage
gTypeStorage :: GType
toStorage :: StorageClass o => o -> Storage

module Graphics.UI.Gtk.WebKit.DOM.Text
textSplitText :: TextClass self => self -> Word -> IO (Maybe Text)
textReplaceWholeText :: (TextClass self, GlibString string) => self -> string -> IO (Maybe Text)
textGetWholeText :: (TextClass self, GlibString string) => self -> IO string
newtype Text
Text :: (ForeignPtr (Text)) -> Text
class CharacterDataClass o => TextClass o
castToText :: GObjectClass obj => obj -> Text
gTypeText :: GType
toText :: TextClass o => o -> Text

module Graphics.UI.Gtk.WebKit.DOM.TreeWalker
treeWalkerGetRoot :: TreeWalkerClass self => self -> IO (Maybe Node)
treeWalkerGetWhatToShow :: TreeWalkerClass self => self -> IO Word
treeWalkerGetFilter :: TreeWalkerClass self => self -> IO (Maybe NodeFilter)
treeWalkerGetExpandEntityReferences :: TreeWalkerClass self => self -> IO Bool
treeWalkerSetCurrentNode :: (NodeClass val, TreeWalkerClass self) => self -> Maybe val -> IO ()
treeWalkerGetCurrentNode :: TreeWalkerClass self => self -> IO (Maybe Node)
newtype TreeWalker
TreeWalker :: (ForeignPtr (TreeWalker)) -> TreeWalker
class GObjectClass o => TreeWalkerClass o
castToTreeWalker :: GObjectClass obj => obj -> TreeWalker
gTypeTreeWalker :: GType
toTreeWalker :: TreeWalkerClass o => o -> TreeWalker

module Graphics.UI.Gtk.WebKit.DOM.ValidityState
validityStateGetValueMissing :: ValidityStateClass self => self -> IO Bool
validityStateGetTypeMismatch :: ValidityStateClass self => self -> IO Bool
validityStateGetPatternMismatch :: ValidityStateClass self => self -> IO Bool
validityStateGetTooLong :: ValidityStateClass self => self -> IO Bool
validityStateGetRangeUnderflow :: ValidityStateClass self => self -> IO Bool
validityStateGetRangeOverflow :: ValidityStateClass self => self -> IO Bool
validityStateGetStepMismatch :: ValidityStateClass self => self -> IO Bool
validityStateGetBadInput :: ValidityStateClass self => self -> IO Bool
validityStateGetCustomError :: ValidityStateClass self => self -> IO Bool
validityStateGetValid :: ValidityStateClass self => self -> IO Bool
data ValidityState
class GObjectClass o => ValidityStateClass o
castToValidityState :: GObjectClass obj => obj -> ValidityState
gTypeValidityState :: GType
toValidityState :: ValidityStateClass o => o -> ValidityState

module Graphics.UI.Gtk.WebKit.DOM.WebKitNamedFlow
webKitNamedFlowGetRegionsByContent :: (WebKitNamedFlowClass self, NodeClass contentNode) => self -> Maybe contentNode -> IO (Maybe NodeList)
webKitNamedFlowGetRegions :: WebKitNamedFlowClass self => self -> IO (Maybe NodeList)
webKitNamedFlowGetContent :: WebKitNamedFlowClass self => self -> IO (Maybe NodeList)
webKitNamedFlowDispatchEvent :: (WebKitNamedFlowClass self, EventClass event) => self -> Maybe event -> IO Bool
webKitNamedFlowGetName :: (WebKitNamedFlowClass self, GlibString string) => self -> IO string
webKitNamedFlowGetOverset :: WebKitNamedFlowClass self => self -> IO Bool
webKitNamedFlowGetFirstEmptyRegionIndex :: WebKitNamedFlowClass self => self -> IO Int
data WebKitNamedFlow
class GObjectClass o => WebKitNamedFlowClass o
castToWebKitNamedFlow :: GObjectClass obj => obj -> WebKitNamedFlow
gTypeWebKitNamedFlow :: GType
toWebKitNamedFlow :: WebKitNamedFlowClass o => o -> WebKitNamedFlow

module Graphics.UI.Gtk.WebKit.DOM.WebKitPoint
webKitPointSetX :: WebKitPointClass self => self -> Float -> IO ()
webKitPointGetX :: WebKitPointClass self => self -> IO Float
webKitPointSetY :: WebKitPointClass self => self -> Float -> IO ()
webKitPointGetY :: WebKitPointClass self => self -> IO Float
data WebKitPoint
class GObjectClass o => WebKitPointClass o
castToWebKitPoint :: GObjectClass obj => obj -> WebKitPoint
gTypeWebKitPoint :: GType
toWebKitPoint :: WebKitPointClass o => o -> WebKitPoint

module Graphics.UI.Gtk.WebKit.DOM.XPathExpression
xPathExpressionEvaluate :: (XPathExpressionClass self, NodeClass contextNode, XPathResultClass inResult) => self -> Maybe contextNode -> Word -> Maybe inResult -> IO (Maybe XPathResult)
data XPathExpression
class GObjectClass o => XPathExpressionClass o
castToXPathExpression :: GObjectClass obj => obj -> XPathExpression
gTypeXPathExpression :: GType
toXPathExpression :: XPathExpressionClass o => o -> XPathExpression

module Graphics.UI.Gtk.WebKit.DOM.XPathNSResolver
xPathNSResolverLookupNamespaceURI :: (XPathNSResolverClass self, GlibString string) => self -> string -> IO string
data XPathNSResolver
class GObjectClass o => XPathNSResolverClass o
castToXPathNSResolver :: GObjectClass obj => obj -> XPathNSResolver
gTypeXPathNSResolver :: GType
toXPathNSResolver :: XPathNSResolverClass o => o -> XPathNSResolver

module Graphics.UI.Gtk.WebKit.DOM.XPathResult
xPathResultIterateNext :: XPathResultClass self => self -> IO (Maybe Node)
xPathResultSnapshotItem :: XPathResultClass self => self -> Word -> IO (Maybe Node)
cANY_TYPE :: Integer
cNUMBER_TYPE :: Integer
cSTRING_TYPE :: Integer
cBOOLEAN_TYPE :: Integer
cUNORDERED_NODE_ITERATOR_TYPE :: Integer
cORDERED_NODE_ITERATOR_TYPE :: Integer
cUNORDERED_NODE_SNAPSHOT_TYPE :: Integer
cORDERED_NODE_SNAPSHOT_TYPE :: Integer
cANY_UNORDERED_NODE_TYPE :: Integer
cFIRST_ORDERED_NODE_TYPE :: Integer
xPathResultGetResultType :: XPathResultClass self => self -> IO Word
xPathResultGetNumberValue :: XPathResultClass self => self -> IO Double
xPathResultGetStringValue :: (XPathResultClass self, GlibString string) => self -> IO string
xPathResultGetBooleanValue :: XPathResultClass self => self -> IO Bool
xPathResultGetSingleNodeValue :: XPathResultClass self => self -> IO (Maybe Node)
xPathResultGetInvalidIteratorState :: XPathResultClass self => self -> IO Bool
xPathResultGetSnapshotLength :: XPathResultClass self => self -> IO Word
data XPathResult
class GObjectClass o => XPathResultClass o
castToXPathResult :: GObjectClass obj => obj -> XPathResult
gTypeXPathResult :: GType
toXPathResult :: XPathResultClass o => o -> XPathResult

module Graphics.UI.Gtk.WebKit.DOM.DOMSecurityPolicy
domSecurityPolicyAllowsConnectionTo :: (DOMSecurityPolicyClass self, GlibString string) => self -> string -> IO Bool
domSecurityPolicyAllowsFontFrom :: (DOMSecurityPolicyClass self, GlibString string) => self -> string -> IO Bool
domSecurityPolicyAllowsFormAction :: (DOMSecurityPolicyClass self, GlibString string) => self -> string -> IO Bool
domSecurityPolicyAllowsFrameFrom :: (DOMSecurityPolicyClass self, GlibString string) => self -> string -> IO Bool
domSecurityPolicyAllowsImageFrom :: (DOMSecurityPolicyClass self, GlibString string) => self -> string -> IO Bool
domSecurityPolicyAllowsMediaFrom :: (DOMSecurityPolicyClass self, GlibString string) => self -> string -> IO Bool
domSecurityPolicyAllowsObjectFrom :: (DOMSecurityPolicyClass self, GlibString string) => self -> string -> IO Bool
domSecurityPolicyAllowsPluginType :: (DOMSecurityPolicyClass self, GlibString string) => self -> string -> IO Bool
domSecurityPolicyAllowsScriptFrom :: (DOMSecurityPolicyClass self, GlibString string) => self -> string -> IO Bool
domSecurityPolicyAllowsStyleFrom :: (DOMSecurityPolicyClass self, GlibString string) => self -> string -> IO Bool
domSecurityPolicyAllowsEval :: DOMSecurityPolicyClass self => self -> IO Bool
domSecurityPolicyAllowsInlineScript :: DOMSecurityPolicyClass self => self -> IO Bool
domSecurityPolicyAllowsInlineStyle :: DOMSecurityPolicyClass self => self -> IO Bool
domSecurityPolicyGetReportURIs :: DOMSecurityPolicyClass self => self -> IO (Maybe DOMStringList)
data DOMSecurityPolicy
class GObjectClass o => DOMSecurityPolicyClass o
castToDOMSecurityPolicy :: GObjectClass obj => obj -> DOMSecurityPolicy
gTypeDOMSecurityPolicy :: GType
toDOMSecurityPolicy :: DOMSecurityPolicyClass o => o -> DOMSecurityPolicy

module Graphics.UI.Gtk.WebKit.DOM.DOMStringList
domStringListItem :: (DOMStringListClass self, GlibString string) => self -> Word -> IO string
domStringListContains :: (DOMStringListClass self, GlibString string) => self -> string -> IO Bool
domStringListGetLength :: DOMStringListClass self => self -> IO Word
data DOMStringList
class GObjectClass o => DOMStringListClass o
castToDOMStringList :: GObjectClass obj => obj -> DOMStringList
gTypeDOMStringList :: GType
toDOMStringList :: DOMStringListClass o => o -> DOMStringList

module Graphics.UI.Gtk.WebKit.DOM.Geolocation
geolocationClearWatch :: GeolocationClass self => self -> Int -> IO ()
data Geolocation
class GObjectClass o => GeolocationClass o
castToGeolocation :: GObjectClass obj => obj -> Geolocation
gTypeGeolocation :: GType
toGeolocation :: GeolocationClass o => o -> Geolocation

module Graphics.UI.Gtk.WebKit.DOM.HTMLCanvasElement
htmlCanvasElementSetWidth :: HTMLCanvasElementClass self => self -> Int -> IO ()
htmlCanvasElementGetWidth :: HTMLCanvasElementClass self => self -> IO Int
htmlCanvasElementSetHeight :: HTMLCanvasElementClass self => self -> Int -> IO ()
htmlCanvasElementGetHeight :: HTMLCanvasElementClass self => self -> IO Int
data HTMLCanvasElement
class HTMLElementClass o => HTMLCanvasElementClass o
castToHTMLCanvasElement :: GObjectClass obj => obj -> HTMLCanvasElement
gTypeHTMLCanvasElement :: GType
toHTMLCanvasElement :: HTMLCanvasElementClass o => o -> HTMLCanvasElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLDetailsElement
htmlDetailsElementSetOpen :: HTMLDetailsElementClass self => self -> Bool -> IO ()
htmlDetailsElementGetOpen :: HTMLDetailsElementClass self => self -> IO Bool
data HTMLDetailsElement
class HTMLElementClass o => HTMLDetailsElementClass o
castToHTMLDetailsElement :: GObjectClass obj => obj -> HTMLDetailsElement
gTypeHTMLDetailsElement :: GType
toHTMLDetailsElement :: HTMLDetailsElementClass o => o -> HTMLDetailsElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLEmbedElement
htmlEmbedElementSetAlign :: (HTMLEmbedElementClass self, GlibString string) => self -> string -> IO ()
htmlEmbedElementGetAlign :: (HTMLEmbedElementClass self, GlibString string) => self -> IO string
htmlEmbedElementSetHeight :: HTMLEmbedElementClass self => self -> Int -> IO ()
htmlEmbedElementGetHeight :: HTMLEmbedElementClass self => self -> IO Int
htmlEmbedElementSetName :: (HTMLEmbedElementClass self, GlibString string) => self -> string -> IO ()
htmlEmbedElementGetName :: (HTMLEmbedElementClass self, GlibString string) => self -> IO string
htmlEmbedElementSetSrc :: (HTMLEmbedElementClass self, GlibString string) => self -> string -> IO ()
htmlEmbedElementGetSrc :: (HTMLEmbedElementClass self, GlibString string) => self -> IO string
htmlEmbedElementSetWidth :: HTMLEmbedElementClass self => self -> Int -> IO ()
htmlEmbedElementGetWidth :: HTMLEmbedElementClass self => self -> IO Int
data HTMLEmbedElement
class HTMLElementClass o => HTMLEmbedElementClass o
castToHTMLEmbedElement :: GObjectClass obj => obj -> HTMLEmbedElement
gTypeHTMLEmbedElement :: GType
toHTMLEmbedElement :: HTMLEmbedElementClass o => o -> HTMLEmbedElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLKeygenElement
htmlKeygenElementCheckValidity :: HTMLKeygenElementClass self => self -> IO Bool
htmlKeygenElementSetCustomValidity :: (HTMLKeygenElementClass self, GlibString string) => self -> string -> IO ()
htmlKeygenElementSetAutofocus :: HTMLKeygenElementClass self => self -> Bool -> IO ()
htmlKeygenElementGetAutofocus :: HTMLKeygenElementClass self => self -> IO Bool
htmlKeygenElementSetChallenge :: (HTMLKeygenElementClass self, GlibString string) => self -> string -> IO ()
htmlKeygenElementGetChallenge :: (HTMLKeygenElementClass self, GlibString string) => self -> IO string
htmlKeygenElementSetDisabled :: HTMLKeygenElementClass self => self -> Bool -> IO ()
htmlKeygenElementGetDisabled :: HTMLKeygenElementClass self => self -> IO Bool
htmlKeygenElementGetForm :: HTMLKeygenElementClass self => self -> IO (Maybe HTMLFormElement)
htmlKeygenElementSetKeytype :: (HTMLKeygenElementClass self, GlibString string) => self -> string -> IO ()
htmlKeygenElementGetKeytype :: (HTMLKeygenElementClass self, GlibString string) => self -> IO string
htmlKeygenElementSetName :: (HTMLKeygenElementClass self, GlibString string) => self -> string -> IO ()
htmlKeygenElementGetName :: (HTMLKeygenElementClass self, GlibString string) => self -> IO string
htmlKeygenElementGetWillValidate :: HTMLKeygenElementClass self => self -> IO Bool
htmlKeygenElementGetValidity :: HTMLKeygenElementClass self => self -> IO (Maybe ValidityState)
htmlKeygenElementGetValidationMessage :: (HTMLKeygenElementClass self, GlibString string) => self -> IO string
htmlKeygenElementGetLabels :: HTMLKeygenElementClass self => self -> IO (Maybe NodeList)
data HTMLKeygenElement
class HTMLElementClass o => HTMLKeygenElementClass o
castToHTMLKeygenElement :: GObjectClass obj => obj -> HTMLKeygenElement
gTypeHTMLKeygenElement :: GType
toHTMLKeygenElement :: HTMLKeygenElementClass o => o -> HTMLKeygenElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLMarqueeElement
htmlMarqueeElementStart :: HTMLMarqueeElementClass self => self -> IO ()
htmlMarqueeElementStop :: HTMLMarqueeElementClass self => self -> IO ()
htmlMarqueeElementSetBehavior :: (HTMLMarqueeElementClass self, GlibString string) => self -> string -> IO ()
htmlMarqueeElementGetBehavior :: (HTMLMarqueeElementClass self, GlibString string) => self -> IO string
htmlMarqueeElementSetBgColor :: (HTMLMarqueeElementClass self, GlibString string) => self -> string -> IO ()
htmlMarqueeElementGetBgColor :: (HTMLMarqueeElementClass self, GlibString string) => self -> IO string
htmlMarqueeElementSetDirection :: (HTMLMarqueeElementClass self, GlibString string) => self -> string -> IO ()
htmlMarqueeElementGetDirection :: (HTMLMarqueeElementClass self, GlibString string) => self -> IO string
htmlMarqueeElementSetHeight :: (HTMLMarqueeElementClass self, GlibString string) => self -> string -> IO ()
htmlMarqueeElementGetHeight :: (HTMLMarqueeElementClass self, GlibString string) => self -> IO string
htmlMarqueeElementSetHspace :: HTMLMarqueeElementClass self => self -> Word -> IO ()
htmlMarqueeElementGetHspace :: HTMLMarqueeElementClass self => self -> IO Word
htmlMarqueeElementSetLoop :: HTMLMarqueeElementClass self => self -> Int -> IO ()
htmlMarqueeElementGetLoop :: HTMLMarqueeElementClass self => self -> IO Int
htmlMarqueeElementSetScrollAmount :: HTMLMarqueeElementClass self => self -> Int -> IO ()
htmlMarqueeElementGetScrollAmount :: HTMLMarqueeElementClass self => self -> IO Int
htmlMarqueeElementSetScrollDelay :: HTMLMarqueeElementClass self => self -> Int -> IO ()
htmlMarqueeElementGetScrollDelay :: HTMLMarqueeElementClass self => self -> IO Int
htmlMarqueeElementSetTrueSpeed :: HTMLMarqueeElementClass self => self -> Bool -> IO ()
htmlMarqueeElementGetTrueSpeed :: HTMLMarqueeElementClass self => self -> IO Bool
htmlMarqueeElementSetVspace :: HTMLMarqueeElementClass self => self -> Word -> IO ()
htmlMarqueeElementGetVspace :: HTMLMarqueeElementClass self => self -> IO Word
htmlMarqueeElementSetWidth :: (HTMLMarqueeElementClass self, GlibString string) => self -> string -> IO ()
htmlMarqueeElementGetWidth :: (HTMLMarqueeElementClass self, GlibString string) => self -> IO string
data HTMLMarqueeElement
class HTMLElementClass o => HTMLMarqueeElementClass o
castToHTMLMarqueeElement :: GObjectClass obj => obj -> HTMLMarqueeElement
gTypeHTMLMarqueeElement :: GType
toHTMLMarqueeElement :: HTMLMarqueeElementClass o => o -> HTMLMarqueeElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLMediaElement
htmlMediaElementLoad :: HTMLMediaElementClass self => self -> IO ()
htmlMediaElementCanPlayType :: (HTMLMediaElementClass self, GlibString string) => self -> string -> IO string
htmlMediaElementPlay :: HTMLMediaElementClass self => self -> IO ()
htmlMediaElementPause :: HTMLMediaElementClass self => self -> IO ()
cNETWORK_EMPTY :: Integer
cNETWORK_IDLE :: Integer
cNETWORK_LOADING :: Integer
cNETWORK_NO_SOURCE :: Integer
cHAVE_NOTHING :: Integer
cHAVE_METADATA :: Integer
cHAVE_CURRENT_DATA :: Integer
cHAVE_FUTURE_DATA :: Integer
cHAVE_ENOUGH_DATA :: Integer
htmlMediaElementGetError :: HTMLMediaElementClass self => self -> IO (Maybe MediaError)
htmlMediaElementSetSrc :: (HTMLMediaElementClass self, GlibString string) => self -> string -> IO ()
htmlMediaElementGetSrc :: (HTMLMediaElementClass self, GlibString string) => self -> IO string
htmlMediaElementGetCurrentSrc :: (HTMLMediaElementClass self, GlibString string) => self -> IO string
htmlMediaElementGetNetworkState :: HTMLMediaElementClass self => self -> IO Word
htmlMediaElementSetPreload :: (HTMLMediaElementClass self, GlibString string) => self -> string -> IO ()
htmlMediaElementGetPreload :: (HTMLMediaElementClass self, GlibString string) => self -> IO string
htmlMediaElementGetBuffered :: HTMLMediaElementClass self => self -> IO (Maybe TimeRanges)
htmlMediaElementGetReadyState :: HTMLMediaElementClass self => self -> IO Word
htmlMediaElementGetSeeking :: HTMLMediaElementClass self => self -> IO Bool
htmlMediaElementSetCurrentTime :: HTMLMediaElementClass self => self -> Double -> IO ()
htmlMediaElementGetCurrentTime :: HTMLMediaElementClass self => self -> IO Double
htmlMediaElementGetInitialTime :: HTMLMediaElementClass self => self -> IO Double
htmlMediaElementGetStartTime :: HTMLMediaElementClass self => self -> IO Double
htmlMediaElementGetDuration :: HTMLMediaElementClass self => self -> IO Double
htmlMediaElementGetPaused :: HTMLMediaElementClass self => self -> IO Bool
htmlMediaElementSetDefaultPlaybackRate :: HTMLMediaElementClass self => self -> Double -> IO ()
htmlMediaElementGetDefaultPlaybackRate :: HTMLMediaElementClass self => self -> IO Double
htmlMediaElementSetPlaybackRate :: HTMLMediaElementClass self => self -> Double -> IO ()
htmlMediaElementGetPlaybackRate :: HTMLMediaElementClass self => self -> IO Double
htmlMediaElementGetPlayed :: HTMLMediaElementClass self => self -> IO (Maybe TimeRanges)
htmlMediaElementGetSeekable :: HTMLMediaElementClass self => self -> IO (Maybe TimeRanges)
htmlMediaElementGetEnded :: HTMLMediaElementClass self => self -> IO Bool
htmlMediaElementSetAutoplay :: HTMLMediaElementClass self => self -> Bool -> IO ()
htmlMediaElementGetAutoplay :: HTMLMediaElementClass self => self -> IO Bool
htmlMediaElementSetLoop :: HTMLMediaElementClass self => self -> Bool -> IO ()
htmlMediaElementGetLoop :: HTMLMediaElementClass self => self -> IO Bool
htmlMediaElementSetControls :: HTMLMediaElementClass self => self -> Bool -> IO ()
htmlMediaElementGetControls :: HTMLMediaElementClass self => self -> IO Bool
htmlMediaElementSetVolume :: HTMLMediaElementClass self => self -> Double -> IO ()
htmlMediaElementGetVolume :: HTMLMediaElementClass self => self -> IO Double
htmlMediaElementSetMuted :: HTMLMediaElementClass self => self -> Bool -> IO ()
htmlMediaElementGetMuted :: HTMLMediaElementClass self => self -> IO Bool
htmlMediaElementSetDefaultMuted :: HTMLMediaElementClass self => self -> Bool -> IO ()
htmlMediaElementGetDefaultMuted :: HTMLMediaElementClass self => self -> IO Bool
htmlMediaElementSetWebkitPreservesPitch :: HTMLMediaElementClass self => self -> Bool -> IO ()
htmlMediaElementGetWebkitPreservesPitch :: HTMLMediaElementClass self => self -> IO Bool
htmlMediaElementGetWebkitHasClosedCaptions :: HTMLMediaElementClass self => self -> IO Bool
htmlMediaElementSetWebkitClosedCaptionsVisible :: HTMLMediaElementClass self => self -> Bool -> IO ()
htmlMediaElementGetWebkitClosedCaptionsVisible :: HTMLMediaElementClass self => self -> IO Bool
htmlMediaElementGetWebkitAudioDecodedByteCount :: HTMLMediaElementClass self => self -> IO Word
htmlMediaElementGetWebkitVideoDecodedByteCount :: HTMLMediaElementClass self => self -> IO Word
htmlMediaElementOnwebkitneedkey :: HTMLMediaElementClass self => Signal self (EventM UIEvent self ())
htmlMediaElementSetMediaGroup :: (HTMLMediaElementClass self, GlibString string) => self -> string -> IO ()
htmlMediaElementGetMediaGroup :: (HTMLMediaElementClass self, GlibString string) => self -> IO string
data HTMLMediaElement
class HTMLElementClass o => HTMLMediaElementClass o
castToHTMLMediaElement :: GObjectClass obj => obj -> HTMLMediaElement
gTypeHTMLMediaElement :: GType
toHTMLMediaElement :: HTMLMediaElementClass o => o -> HTMLMediaElement

module Graphics.UI.Gtk.WebKit.DOM.HTMLVideoElement
htmlVideoElementWebkitEnterFullscreen :: HTMLVideoElementClass self => self -> IO ()
htmlVideoElementWebkitExitFullscreen :: HTMLVideoElementClass self => self -> IO ()
htmlVideoElementWebkitEnterFullScreen :: HTMLVideoElementClass self => self -> IO ()
htmlVideoElementWebkitExitFullScreen :: HTMLVideoElementClass self => self -> IO ()
htmlVideoElementSetWidth :: HTMLVideoElementClass self => self -> Word -> IO ()
htmlVideoElementGetWidth :: HTMLVideoElementClass self => self -> IO Word
htmlVideoElementSetHeight :: HTMLVideoElementClass self => self -> Word -> IO ()
htmlVideoElementGetHeight :: HTMLVideoElementClass self => self -> IO Word
htmlVideoElementGetVideoWidth :: HTMLVideoElementClass self => self -> IO Word
htmlVideoElementGetVideoHeight :: HTMLVideoElementClass self => self -> IO Word
htmlVideoElementSetPoster :: (HTMLVideoElementClass self, GlibString string) => self -> string -> IO ()
htmlVideoElementGetPoster :: (HTMLVideoElementClass self, GlibString string) => self -> IO string
htmlVideoElementGetWebkitSupportsFullscreen :: HTMLVideoElementClass self => self -> IO Bool
htmlVideoElementGetWebkitDisplayingFullscreen :: HTMLVideoElementClass self => self -> IO Bool
htmlVideoElementGetWebkitDecodedFrameCount :: HTMLVideoElementClass self => self -> IO Word
htmlVideoElementGetWebkitDroppedFrameCount :: HTMLVideoElementClass self => self -> IO Word
data HTMLVideoElement
class HTMLMediaElementClass o => HTMLVideoElementClass o
castToHTMLVideoElement :: GObjectClass obj => obj -> HTMLVideoElement
gTypeHTMLVideoElement :: GType
toHTMLVideoElement :: HTMLVideoElementClass o => o -> HTMLVideoElement

module Graphics.UI.Gtk.WebKit.DOM.MediaError
cMEDIA_ERR_ABORTED :: Integer
cMEDIA_ERR_NETWORK :: Integer
cMEDIA_ERR_DECODE :: Integer
cMEDIA_ERR_SRC_NOT_SUPPORTED :: Integer
mediaErrorGetCode :: MediaErrorClass self => self -> IO Word
data MediaError
class GObjectClass o => MediaErrorClass o
castToMediaError :: GObjectClass obj => obj -> MediaError
gTypeMediaError :: GType
toMediaError :: MediaErrorClass o => o -> MediaError

module Graphics.UI.Gtk.WebKit.DOM.StorageInfo
cTEMPORARY :: Integer
cPERSISTENT :: Integer
data StorageInfo
class GObjectClass o => StorageInfoClass o
castToStorageInfo :: GObjectClass obj => obj -> StorageInfo
gTypeStorageInfo :: GType
toStorageInfo :: StorageInfoClass o => o -> StorageInfo

module Graphics.UI.Gtk.WebKit.DOM.TimeRanges
timeRangesStart :: TimeRangesClass self => self -> Word -> IO Double
timeRangesEnd :: TimeRangesClass self => self -> Word -> IO Double
timeRangesGetLength :: TimeRangesClass self => self -> IO Word
newtype TimeRanges
TimeRanges :: (ForeignPtr (TimeRanges)) -> TimeRanges
class GObjectClass o => TimeRangesClass o
castToTimeRanges :: GObjectClass obj => obj -> TimeRanges
gTypeTimeRanges :: GType
toTimeRanges :: TimeRangesClass o => o -> TimeRanges


-- | Object used to communicate with the application when downloading
module Graphics.UI.Gtk.WebKit.CacheModel
data CacheModel
CacheModelDefault :: CacheModel
CacheModelDocumentViewer :: CacheModel
CacheModelWebBrowser :: CacheModel
CacheModelDocumentBrowser :: CacheModel

-- | Returns the current cache model. For more information about this value
--   check the documentation of the function <a>setCacheModel</a>.
--   
--   <ul>
--   <li>Since 1.1.18</li>
--   </ul>
getCacheModel :: IO CacheModel

-- | Specifies a usage model for WebViews, which WebKit will use to
--   determine its caching behavior. All web views follow the cache model.
--   This cache model determines the RAM and disk space to use for caching
--   previously viewed content .
--   
--   Research indicates that users tend to browse within clusters of
--   documents that hold resources in common, and to revisit previously
--   visited documents. WebKit and the frameworks below it include built-in
--   caches that take advantage of these patterns, substantially improving
--   document load speed in browsing situations. The WebKit cache model
--   controls the behaviors of all of these caches, including various
--   WebCore caches.
--   
--   Browsers can improve document load speed substantially by specifying
--   WebkitCacheModelWebBrowser. Applications without a browsing interface
--   can reduce memory usage substantially by specifying
--   WebkitCacheModelDocumentViewer. Default value is
--   WebkitCacheModelWebBrowser.
--   
--   <ul>
--   <li>Since 1.1.18</li>
--   </ul>
setCacheModel :: CacheModel -> IO ()
instance Enum CacheModel
