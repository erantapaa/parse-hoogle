-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A data-type representing digits 0-9 and other combinations
--   
@package digit
@version 0.1.1

module Data.Digit.D9
class Eq a => D9 a
d9 :: D9 a => a

module Data.Digit.D8
class Eq a => D8 a
d8 :: D8 a => a

module Data.Digit.D7
class Eq a => D7 a
d7 :: D7 a => a

module Data.Digit.D6
class Eq a => D6 a
d6 :: D6 a => a

module Data.Digit.D5
class Eq a => D5 a
d5 :: D5 a => a

module Data.Digit.D4
class Eq a => D4 a
d4 :: D4 a => a

module Data.Digit.D3
class Eq a => D3 a
d3 :: D3 a => a

module Data.Digit.D2
class Eq a => D2 a
d2 :: D2 a => a

module Data.Digit.D1
class Eq a => D1 a
d1 :: D1 a => a

module Data.Digit.D0
class Eq a => D0 a
d0 :: D0 a => a


-- | A data type with ten nullary constructors [0-9] and combinators.
module Data.Digit.Digit

-- | A data type with ten nullary constructors.
data Digit

-- | Catamorphism for <tt>Digit</tt>.
--   
--   <pre>
--   foldDigit x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 d0 == x0
--   </pre>
--   
--   <pre>
--   foldDigit x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 d1 == x1
--   </pre>
--   
--   <pre>
--   foldDigit x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 d2 == x2
--   </pre>
--   
--   <pre>
--   foldDigit x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 d3 == x3
--   </pre>
--   
--   <pre>
--   foldDigit x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 d4 == x4
--   </pre>
--   
--   <pre>
--   foldDigit x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 d5 == x5
--   </pre>
--   
--   <pre>
--   foldDigit x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 d6 == x6
--   </pre>
--   
--   <pre>
--   foldDigit x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 d7 == x7
--   </pre>
--   
--   <pre>
--   foldDigit x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 d8 == x8
--   </pre>
--   
--   <pre>
--   foldDigit x0 x1 x2 x3 x4 x5 x6 x7 x8 x9 d9 == x9
--   </pre>
foldDigit :: a -> a -> a -> a -> a -> a -> a -> a -> a -> a -> Digit -> a

-- | A prism for using <tt>Int</tt> as <tt>Digit</tt>.
--   
--   <pre>
--   &gt;&gt;&gt; 5 ^? digit
--   Just 5
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; 0 ^? digit
--   Just 0
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; 9 ^? digit
--   Just 9
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; 10 ^? digit
--   Nothing
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; (-5) ^? digit
--   Nothing
--   </pre>
digit :: Prism' Int Digit

-- | A prism for using <tt>Char</tt> as <tt>Digit</tt>.
--   
--   <pre>
--   &gt;&gt;&gt; '5' ^? digitC
--   Just 5
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; '0' ^? digitC
--   Just 0
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; '9' ^? digitC
--   Just 9
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; 'a' ^? digitC
--   Nothing
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; '@' ^? digitC
--   Nothing
--   </pre>
digitC :: Prism' Char Digit
instance Eq Digit
instance Ord Digit
instance Enum Digit
instance Bounded Digit
instance Read Digit
instance Show Digit
instance D9 Digit
instance D8 Digit
instance D7 Digit
instance D6 Digit
instance D5 Digit
instance D4 Digit
instance D3 Digit
instance D2 Digit
instance D1 Digit
instance D0 Digit


-- | A data type with nine nullary constructors [1-9] and combinators.
module Data.Digit.Digit1_9

-- | A data type with nine nullary constructors.
data Digit1_9

-- | Catamorphism for <tt>Digit1_9</tt>.
--   
--   <pre>
--   foldDigit1_9 x1 x2 x3 x4 x5 x6 x7 x8 x9 d1 == x1
--   </pre>
--   
--   <pre>
--   foldDigit1_9 x1 x2 x3 x4 x5 x6 x7 x8 x9 d2 == x2
--   </pre>
--   
--   <pre>
--   foldDigit1_9 x1 x2 x3 x4 x5 x6 x7 x8 x9 d3 == x3
--   </pre>
--   
--   <pre>
--   foldDigit1_9 x1 x2 x3 x4 x5 x6 x7 x8 x9 d4 == x4
--   </pre>
--   
--   <pre>
--   foldDigit1_9 x1 x2 x3 x4 x5 x6 x7 x8 x9 d5 == x5
--   </pre>
--   
--   <pre>
--   foldDigit1_9 x1 x2 x3 x4 x5 x6 x7 x8 x9 d6 == x6
--   </pre>
--   
--   <pre>
--   foldDigit1_9 x1 x2 x3 x4 x5 x6 x7 x8 x9 d7 == x7
--   </pre>
--   
--   <pre>
--   foldDigit1_9 x1 x2 x3 x4 x5 x6 x7 x8 x9 d8 == x8
--   </pre>
--   
--   <pre>
--   foldDigit1_9 x1 x2 x3 x4 x5 x6 x7 x8 x9 d9 == x9
--   </pre>
foldDigit1_9 :: a -> a -> a -> a -> a -> a -> a -> a -> a -> Digit1_9 -> a

-- | A prism for using <tt>Int</tt> as <tt>Digit1_9</tt>.
--   
--   <pre>
--   &gt;&gt;&gt; 5 ^? digit1_9
--   Just 5
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; 0 ^? digit1_9
--   Nothing
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; 9 ^? digit1_9
--   Just 9
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; 10 ^? digit1_9
--   Nothing
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; (-5) ^? digit1_9
--   Nothing
--   </pre>
digit1_9 :: Prism' Int Digit1_9

-- | A prism for using <tt>Char</tt> as <tt>Digit1_9</tt>.
--   
--   <pre>
--   &gt;&gt;&gt; '5' ^? digitC1_9
--   Just 5
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; '0' ^? digitC1_9
--   Nothing
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; '9' ^? digitC1_9
--   Just 9
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; 'x' ^? digitC1_9
--   Nothing
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; '*' ^? digitC1_9
--   Nothing
--   </pre>
digitC1_9 :: Prism' Char Digit1_9

-- | A prism for using <tt>Digit</tt> as <tt>Digit1_9</tt>.
--   
--   <pre>
--   &gt;&gt;&gt; d5 ^? digit1_9digit
--   Just 5
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; d0 ^? digit1_9digit
--   Nothing
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; d9 ^? digit1_9digit
--   Just 9
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; d1 ^? digit1_9digit
--   Just 1
--   </pre>
digit1_9digit :: Prism' Digit Digit1_9
instance Eq Digit1_9
instance Ord Digit1_9
instance Bounded Digit1_9
instance Read Digit1_9
instance Show Digit1_9
instance D9 Digit1_9
instance D8 Digit1_9
instance D7 Digit1_9
instance D6 Digit1_9
instance D5 Digit1_9
instance D4 Digit1_9
instance D3 Digit1_9
instance D2 Digit1_9
instance D1 Digit1_9


-- | A data type with eight nullary constructors [1-8] and combinators.
module Data.Digit.Digit1_8

-- | A data type with eight nullary constructors.
data Digit1_8

-- | Catamorphism for <tt>Digit1_8</tt>.
--   
--   <pre>
--   foldDigit1_8 x1 x2 x3 x4 x5 x6 x7 x8 d1 == x1
--   </pre>
--   
--   <pre>
--   foldDigit1_8 x1 x2 x3 x4 x5 x6 x7 x8 d2 == x2
--   </pre>
--   
--   <pre>
--   foldDigit1_8 x1 x2 x3 x4 x5 x6 x7 x8 d3 == x3
--   </pre>
--   
--   <pre>
--   foldDigit1_8 x1 x2 x3 x4 x5 x6 x7 x8 d4 == x4
--   </pre>
--   
--   <pre>
--   foldDigit1_8 x1 x2 x3 x4 x5 x6 x7 x8 d5 == x5
--   </pre>
--   
--   <pre>
--   foldDigit1_8 x1 x2 x3 x4 x5 x6 x7 x8 d6 == x6
--   </pre>
--   
--   <pre>
--   foldDigit1_8 x1 x2 x3 x4 x5 x6 x7 x8 d7 == x7
--   </pre>
--   
--   <pre>
--   foldDigit1_8 x1 x2 x3 x4 x5 x6 x7 x8 d8 == x8
--   </pre>
foldDigit1_8 :: a -> a -> a -> a -> a -> a -> a -> a -> Digit1_8 -> a

-- | A prism for using <tt>Int</tt> as <tt>Digit1_8</tt>.
--   
--   <pre>
--   &gt;&gt;&gt; 5 ^? digit1_8
--   Just 5
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; 0 ^? digit1_8
--   Nothing
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; 8 ^? digit1_8
--   Just 8
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; 9 ^? digit1_8
--   Nothing
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; 10 ^? digit1_8
--   Nothing
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; (-5) ^? digit1_8
--   Nothing
--   </pre>
digit1_8 :: Prism' Int Digit1_8

-- | A prism for using <tt>Char</tt> as <tt>Digit1_8</tt>.
--   
--   <pre>
--   &gt;&gt;&gt; '5' ^? digitC1_8
--   Just 5
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; '0' ^? digitC1_8
--   Nothing
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; '8' ^? digitC1_8
--   Just 8
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; '9' ^? digitC1_8
--   Nothing
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; 'x' ^? digitC1_8
--   Nothing
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; '*' ^? digitC1_8
--   Nothing
--   </pre>
digitC1_8 :: Prism' Char Digit1_8

-- | A prism for using <tt>Digit</tt> as <tt>Digit1_8</tt>.
--   
--   <pre>
--   &gt;&gt;&gt; d5 ^? digit1_8digit
--   Just 5
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; d0 ^? digit1_8digit
--   Nothing
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; d8 ^? digit1_8digit
--   Just 8
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; d9 ^? digit1_8digit
--   Nothing
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; d1 ^? digit1_8digit
--   Just 1
--   </pre>
digit1_8digit :: Prism' Digit Digit1_8

-- | A prism for using <tt>Digit1_9</tt> as <tt>Digit1_8</tt>.
--   
--   <pre>
--   &gt;&gt;&gt; d5 ^? digit1_8digit1_9
--   Just 5
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; d8 ^? digit1_8digit1_9
--   Just 8
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; d9 ^? digit1_8digit1_9
--   Nothing
--   </pre>
--   
--   <pre>
--   &gt;&gt;&gt; d1 ^? digit1_8digit1_9
--   Just 1
--   </pre>
digit1_8digit1_9 :: Prism' Digit1_9 Digit1_8
instance Eq Digit1_8
instance Ord Digit1_8
instance Bounded Digit1_8
instance Read Digit1_8
instance Show Digit1_8
instance D8 Digit1_8
instance D7 Digit1_8
instance D6 Digit1_8
instance D5 Digit1_8
instance D4 Digit1_8
instance D3 Digit1_8
instance D2 Digit1_8
instance D1 Digit1_8

module Data.Digit
