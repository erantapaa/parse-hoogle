-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | library for handling Discordian calendar dates
--   
--   library for handling Discordian calendar dates
@package discordian-calendar
@version 0.1

module Data.Time.Calendar.Discordian

-- | Converts a modified Julian date to a Discordian date
--   
--   The result format is either (year, <a>Just</a> (season, day)) for
--   normal days or (year, <a>Nothing</a>) for St. Tibs Day
toDiscordian :: Day -> (Integer, Maybe (Int, Int))

-- | Converts the Discordian date to the modified Julian date, clipping
--   values to valid ranges.
--   
--   Because St. Tibs Day is not considered part of the Discordian week,
--   you should use the <a>stTibsDay</a> function to calculate those days.
fromDiscordian :: Integer -> Int -> Int -> Day

-- | Similar to <a>fromDiscordian</a>, but invalid dates result in
--   <a>Nothing</a>
fromDiscordianValid :: Integer -> Int -> Int -> Maybe Day

-- | Converts the St. Tibs Day of a given year to its equivalent modified
--   Julian date. A value of <a>Nothing</a> indicates no St. Tibs Day for
--   the given year.
stTibsDay :: Integer -> Maybe Day

-- | Show the name of a Discordian season. Input values are clipped to
--   valid ranges.
showSeason :: Int -> String

-- | Given the season and day, show the name of the day of the week. Input
--   values are clipped to valid ranges.
showDayOfWeek :: Int -> Int -> String

-- | A function that emulates the default behavior of the ddate
--   command-line utility
ddate :: Day -> String
