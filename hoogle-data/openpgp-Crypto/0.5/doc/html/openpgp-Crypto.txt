-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Implementation of cryptography for use with OpenPGP using the Crypto library
--   
--   This is a wrapper around
--   <a>http://hackage.haskell.org/package/Crypto</a> that currently does
--   fingerprint generation, signature generation, and signature
--   verification (for RSA keys only).
--   
--   It is indended to be used with
--   <a>http://hackage.haskell.org/package/openpgp</a>
--   
--   It is intended that you use qualified imports with this library.
--   
--   <pre>
--   import qualified Data.OpenPGP.Crypto as OpenPGP
--   </pre>
@package openpgp-Crypto
@version 0.5


-- | This is a wrapper around
--   <a>http://hackage.haskell.org/package/Crypto</a> that currently does
--   fingerprint generation and signature verification.
--   
--   The recommended way to import this module is:
--   
--   <pre>
--   import qualified Data.OpenPGP.Crypto as OpenPGP
--   </pre>
module Data.OpenPGP.Crypto

-- | Sign data or key/userID pair. Only supports RSA keys for now.
sign :: Message -> Message -> HashAlgorithm -> String -> Integer -> Packet

-- | Verify a message signature. Only supports RSA keys for now.
verify :: Message -> Message -> Int -> Bool

-- | Generate a key fingerprint from a PublicKeyPacket or SecretKeyPacket
--   <a>http://tools.ietf.org/html/rfc4880#section-12.2</a>
fingerprint :: Packet -> String
