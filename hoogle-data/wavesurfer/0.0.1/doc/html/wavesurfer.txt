-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Parse WaveSurfer files
--   
--   Parse WaveSurfer files
@package wavesurfer
@version 0.0.1


-- | Parse WaveSurfer files.
--   
--   WaveSurfer is an application for analysing and annotating audio files.
--   <a>http://www.speech.kth.se/wavesurfer/</a>
--   
--   A WaveSurfer file consists of lines containing a label and
--   corresponding onsets and offsets in seconds:
--   
--   <pre>
--   onset offset label
--   </pre>
--   
--   This library supports an extended file format, where the first label
--   can be followed by additional key-value pairs, separated by colons:
--   
--   <pre>
--   onset offset label key1[:value1] key2[:value2] ...
--   </pre>
module Sound.WaveSurfer

-- | Time type.
type Time = Double

-- | Type for time differences.
type DTime = Time

-- | Record label.
type Label = ByteString

-- | Key-value pair.
type Attribute = (Label, Maybe Label)

-- | Record representing a single line in the WaveSurfer file.
data Record
Record :: Time -> Time -> Label -> [Attribute] -> Record
onset :: Record -> Time
offset :: Record -> Time
label :: Record -> Label
attributes :: Record -> [Attribute]

-- | Return the duration of a <a>Record</a> in seconds.
duration :: Record -> DTime

-- | Result type.
type Result a = Either ParseError a

-- | Encode <a>Content</a> to a lazy <a>ByteString</a>.
encode :: Content -> ByteString

-- | Decode <a>Content</a> from a lazy <a>ByteString</a>.
decode :: ByteString -> Result Content
interact :: (Record -> Record) -> ByteString -> Result ByteString
instance Eq Record
instance Show Record
instance Monad (Either a)
