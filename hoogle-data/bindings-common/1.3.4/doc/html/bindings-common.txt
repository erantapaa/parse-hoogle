-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | This package is obsolete. Look for bindings-DSL instead.
--   
--   This package is obsolete. Look for bindings-DSL instead.
@package bindings-common
@version 1.3.4


-- | 
--   <a>http://www.opengroup.org/onlinepubs/9699919799/basedefs/time.h.html</a>
module Bindings.C.Time
data C'tm
C'tm :: CInt -> CInt -> CInt -> CInt -> CInt -> CInt -> CInt -> CInt -> CInt -> C'tm
c'tm'tm_sec :: C'tm -> CInt
c'tm'tm_min :: C'tm -> CInt
c'tm'tm_hour :: C'tm -> CInt
c'tm'tm_mday :: C'tm -> CInt
c'tm'tm_mon :: C'tm -> CInt
c'tm'tm_year :: C'tm -> CInt
c'tm'tm_wday :: C'tm -> CInt
c'tm'tm_yday :: C'tm -> CInt
c'tm'tm_isdst :: C'tm -> CInt
c'CLOCKS_PER_SEC :: (Num a) => a
c'clock :: IO CClock
c'difftime :: CTime -> CTime -> IO CDouble
p'clock :: FunPtr (IO CClock)
c'gmtime :: Ptr CTime -> IO (Ptr C'tm)
c'localtime :: Ptr CTime -> IO (Ptr C'tm)
p'difftime :: FunPtr (CTime -> CTime -> IO CDouble)
c'mktime :: Ptr C'tm -> IO CTime
p'gmtime :: FunPtr (Ptr CTime -> IO (Ptr C'tm))
p'localtime :: FunPtr (Ptr CTime -> IO (Ptr C'tm))
c'strftime :: CString -> CSize -> CString -> Ptr C'tm -> IO CSize
c'time :: Ptr CTime -> IO CTime
p'mktime :: FunPtr (Ptr C'tm -> IO CTime)
p'strftime :: FunPtr (CString -> CSize -> CString -> Ptr C'tm -> IO CSize)
p'time :: FunPtr (Ptr CTime -> IO CTime)
instance Eq C'tm
instance Show C'tm
instance Storable C'tm


-- | 
--   <a>http://www.opengroup.org/onlinepubs/9699919799/basedefs/string.h.html</a>
module Bindings.C.String
c'memchr :: Ptr () -> CInt -> CSize -> IO (Ptr ())
c'memcmp :: Ptr () -> Ptr () -> CSize -> IO CInt
c'memcpy :: Ptr () -> Ptr () -> CSize -> IO (Ptr ())
p'memchr :: FunPtr (Ptr () -> CInt -> CSize -> IO (Ptr ()))
c'memmove :: Ptr () -> Ptr () -> CSize -> IO (Ptr ())
p'memcmp :: FunPtr (Ptr () -> Ptr () -> CSize -> IO CInt)
c'memset :: Ptr () -> CInt -> CSize -> IO (Ptr ())
p'memcpy :: FunPtr (Ptr () -> Ptr () -> CSize -> IO (Ptr ()))
c'strcat :: CString -> CString -> IO CString
p'memmove :: FunPtr (Ptr () -> Ptr () -> CSize -> IO (Ptr ()))
c'strchr :: CString -> CInt -> IO CString
p'memset :: FunPtr (Ptr () -> CInt -> CSize -> IO (Ptr ()))
c'strcmp :: CString -> CString -> IO CInt
p'strcat :: FunPtr (CString -> CString -> IO CString)
c'strcoll :: CString -> CString -> IO CInt
p'strchr :: FunPtr (CString -> CInt -> IO CString)
c'strcpy :: CString -> CString -> IO CString
p'strcmp :: FunPtr (CString -> CString -> IO CInt)
c'strcspn :: CString -> CString -> IO CSize
p'strcoll :: FunPtr (CString -> CString -> IO CInt)
c'strerror :: CInt -> IO CString
p'strcpy :: FunPtr (CString -> CString -> IO CString)
c'strlen :: CString -> IO CSize
p'strcspn :: FunPtr (CString -> CString -> IO CSize)
p'strerror :: FunPtr (CInt -> IO CString)
c'strncat :: CString -> CString -> CSize -> IO CString
p'strlen :: FunPtr (CString -> IO CSize)
c'strncmp :: CString -> CString -> CSize -> IO CInt
c'strncpy :: CString -> CString -> CSize -> IO CString
p'strncat :: FunPtr (CString -> CString -> CSize -> IO CString)
c'strpbrk :: CString -> CString -> IO CString
p'strncmp :: FunPtr (CString -> CString -> CSize -> IO CInt)
c'strrchr :: CString -> CInt -> IO CString
p'strncpy :: FunPtr (CString -> CString -> CSize -> IO CString)
c'strspn :: CString -> CString -> IO CSize
p'strpbrk :: FunPtr (CString -> CString -> IO CString)
c'strstr :: CString -> CString -> IO CString
p'strrchr :: FunPtr (CString -> CInt -> IO CString)
c'strtok :: CString -> CString -> IO CString
p'strspn :: FunPtr (CString -> CString -> IO CSize)
c'strxfrm :: CString -> CString -> CSize -> IO CSize
p'strstr :: FunPtr (CString -> CString -> IO CString)
p'strtok :: FunPtr (CString -> CString -> IO CString)
p'strxfrm :: FunPtr (CString -> CString -> CSize -> IO CSize)


-- | 
--   <a>http://www.opengroup.org/onlinepubs/9699919799/basedefs/stdio.h.html</a>
module Bindings.C.Stdio
c'BUFSIZ :: (Num a) => a
c'L_tmpnam :: (Num a) => a
c'_IOFBF :: (Num a) => a
c'_IOLBF :: (Num a) => a
c'_IONBF :: (Num a) => a
c'SEEK_CUR :: (Num a) => a
c'SEEK_END :: (Num a) => a
c'SEEK_SET :: (Num a) => a
c'FILENAME_MAX :: (Num a) => a
c'FOPEN_MAX :: (Num a) => a
c'TMP_MAX :: (Num a) => a
c'EOF :: (Num a) => a
c'clearerr :: Ptr CFile -> IO ()
c'fclose :: Ptr CFile -> IO CInt
c'feof :: Ptr CFile -> IO CInt
p'clearerr :: FunPtr (Ptr CFile -> IO ())
c'ferror :: Ptr CFile -> IO CInt
p'fclose :: FunPtr (Ptr CFile -> IO CInt)
c'fflush :: Ptr CFile -> IO CInt
p'feof :: FunPtr (Ptr CFile -> IO CInt)
c'fgetc :: Ptr CFile -> IO CInt
p'ferror :: FunPtr (Ptr CFile -> IO CInt)
p'fflush :: FunPtr (Ptr CFile -> IO CInt)
c'fgetpos :: Ptr CFile -> Ptr CFpos -> IO CInt
p'fgetc :: FunPtr (Ptr CFile -> IO CInt)
c'fgets :: CString -> CInt -> Ptr CFile -> IO CString
c'fopen :: CString -> CString -> IO (Ptr CFile)
p'fgetpos :: FunPtr (Ptr CFile -> Ptr CFpos -> IO CInt)
c'fputc :: CInt -> Ptr CFile -> IO CInt
p'fgets :: FunPtr (CString -> CInt -> Ptr CFile -> IO CString)
c'fputs :: CString -> Ptr CFile -> IO CInt
p'fopen :: FunPtr (CString -> CString -> IO (Ptr CFile))
p'fputc :: FunPtr (CInt -> Ptr CFile -> IO CInt)
c'fread :: Ptr () -> CSize -> CSize -> Ptr CFile -> IO CSize
p'fputs :: FunPtr (CString -> Ptr CFile -> IO CInt)
c'freopen :: CString -> CString -> Ptr CFile -> IO (Ptr CFile)
c'fseek :: Ptr CFile -> CLong -> CInt -> IO CInt
p'fread :: FunPtr (Ptr () -> CSize -> CSize -> Ptr CFile -> IO CSize)
c'fsetpos :: Ptr CFile -> Ptr CFpos -> IO CInt
p'freopen :: FunPtr (CString -> CString -> Ptr CFile -> IO (Ptr CFile))
c'ftell :: Ptr CFile -> IO CLong
p'fseek :: FunPtr (Ptr CFile -> CLong -> CInt -> IO CInt)
p'fsetpos :: FunPtr (Ptr CFile -> Ptr CFpos -> IO CInt)
c'fwrite :: Ptr () -> CSize -> CSize -> Ptr CFile -> IO CSize
c'getc :: Ptr CFile -> IO CInt
p'ftell :: FunPtr (Ptr CFile -> IO CLong)
c'getchar :: IO CInt
p'fwrite :: FunPtr (Ptr () -> CSize -> CSize -> Ptr CFile -> IO CSize)
c'perror :: CString -> IO ()
p'getc :: FunPtr (Ptr CFile -> IO CInt)
p'getchar :: FunPtr (IO CInt)
c'putc :: CInt -> Ptr CFile -> IO CInt
c'putchar :: CInt -> IO CInt
p'perror :: FunPtr (CString -> IO ())
c'puts :: CString -> IO CInt
p'putc :: FunPtr (CInt -> Ptr CFile -> IO CInt)
c'remove :: CString -> IO CInt
p'putchar :: FunPtr (CInt -> IO CInt)
p'puts :: FunPtr (CString -> IO CInt)
c'rename :: CString -> CString -> IO CInt
c'rewind :: Ptr CFile -> IO ()
p'remove :: FunPtr (CString -> IO CInt)
c'setbuf :: Ptr CFile -> CString -> IO ()
p'rename :: FunPtr (CString -> CString -> IO CInt)
p'rewind :: FunPtr (Ptr CFile -> IO ())
c'setvbuf :: Ptr CFile -> CString -> CInt -> CSize -> IO CInt
c'tmpfile :: IO (Ptr CFile)
p'setbuf :: FunPtr (Ptr CFile -> CString -> IO ())
c'ungetc :: CInt -> Ptr CFile -> IO CInt
p'setvbuf :: FunPtr (Ptr CFile -> CString -> CInt -> CSize -> IO CInt)
p'tmpfile :: FunPtr (IO (Ptr CFile))
p'ungetc :: FunPtr (CInt -> Ptr CFile -> IO CInt)


-- | 
--   <a>http://www.opengroup.org/onlinepubs/9699919799/basedefs/stddef.h.html</a>
module Bindings.C.Stddef
c'NULL :: Ptr a


-- | 
--   <a>http://www.opengroup.org/onlinepubs/9699919799/basedefs/signal.h.html</a>
module Bindings.C.Signal
c'SIG_DFL :: FunPtr a
c'SIG_ERR :: FunPtr a
c'SIG_IGN :: FunPtr a
c'SIGABRT :: (Num a) => a
c'SIGFPE :: (Num a) => a
c'SIGILL :: (Num a) => a
c'SIGINT :: (Num a) => a
c'SIGSEGV :: (Num a) => a
c'SIGTERM :: (Num a) => a
c'raise :: CInt -> IO CInt
c'signal :: CInt -> FunPtr (CInt -> IO ()) -> IO (FunPtr (CInt -> IO ()))
p'raise :: FunPtr (CInt -> IO CInt)
p'signal :: FunPtr (CInt -> FunPtr (CInt -> IO ()) -> IO (FunPtr (CInt -> IO ())))


-- | 
--   <a>http://www.opengroup.org/onlinepubs/9699919799/basedefs/math.h.html</a>
module Bindings.C.Math
c'FP_INFINITE :: (Num a) => a
c'FP_NAN :: (Num a) => a
c'FP_NORMAL :: (Num a) => a
c'FP_SUBNORMAL :: (Num a) => a
c'FP_ZERO :: (Num a) => a
c'FP_ILOGB0 :: (Num a) => a
c'FP_ILOGBNAN :: (Num a) => a
c'MATH_ERRNO :: (Num a) => a
c'MATH_ERREXCEPT :: (Num a) => a
c'acos :: CDouble -> IO CDouble
c'acosf :: CFloat -> IO CFloat
c'acosh :: CDouble -> IO CDouble
p'acos :: FunPtr (CDouble -> IO CDouble)
c'acoshf :: CFloat -> IO CFloat
p'acosf :: FunPtr (CFloat -> IO CFloat)
c'acoshl :: CLDouble -> IO CLDouble
p'acosh :: FunPtr (CDouble -> IO CDouble)
c'acosl :: CLDouble -> IO CLDouble
p'acoshf :: FunPtr (CFloat -> IO CFloat)
c'asin :: CDouble -> IO CDouble
p'acoshl :: FunPtr (CLDouble -> IO CLDouble)
c'asinf :: CFloat -> IO CFloat
p'acosl :: FunPtr (CLDouble -> IO CLDouble)
c'asinh :: CDouble -> IO CDouble
p'asin :: FunPtr (CDouble -> IO CDouble)
c'asinhf :: CFloat -> IO CFloat
p'asinf :: FunPtr (CFloat -> IO CFloat)
c'asinhl :: CLDouble -> IO CLDouble
p'asinh :: FunPtr (CDouble -> IO CDouble)
c'asinl :: CLDouble -> IO CLDouble
p'asinhf :: FunPtr (CFloat -> IO CFloat)
c'atan :: CDouble -> IO CDouble
p'asinhl :: FunPtr (CLDouble -> IO CLDouble)
c'atan2 :: CDouble -> CDouble -> IO CDouble
p'asinl :: FunPtr (CLDouble -> IO CLDouble)
c'atan2f :: CFloat -> CFloat -> IO CFloat
p'atan :: FunPtr (CDouble -> IO CDouble)
c'atan2l :: CLDouble -> CLDouble -> IO CLDouble
p'atan2 :: FunPtr (CDouble -> CDouble -> IO CDouble)
c'atanf :: CFloat -> IO CFloat
p'atan2f :: FunPtr (CFloat -> CFloat -> IO CFloat)
c'atanh :: CDouble -> IO CDouble
p'atan2l :: FunPtr (CLDouble -> CLDouble -> IO CLDouble)
c'atanhf :: CFloat -> IO CFloat
p'atanf :: FunPtr (CFloat -> IO CFloat)
c'atanhl :: CLDouble -> IO CLDouble
p'atanh :: FunPtr (CDouble -> IO CDouble)
c'atanl :: CLDouble -> IO CLDouble
p'atanhf :: FunPtr (CFloat -> IO CFloat)
c'cbrt :: CDouble -> IO CDouble
p'atanhl :: FunPtr (CLDouble -> IO CLDouble)
c'cbrtf :: CFloat -> IO CFloat
p'atanl :: FunPtr (CLDouble -> IO CLDouble)
c'cbrtl :: CLDouble -> IO CLDouble
p'cbrt :: FunPtr (CDouble -> IO CDouble)
c'ceil :: CDouble -> IO CDouble
p'cbrtf :: FunPtr (CFloat -> IO CFloat)
c'ceilf :: CFloat -> IO CFloat
p'cbrtl :: FunPtr (CLDouble -> IO CLDouble)
c'ceill :: CLDouble -> IO CLDouble
p'ceil :: FunPtr (CDouble -> IO CDouble)
p'ceilf :: FunPtr (CFloat -> IO CFloat)
c'copysign :: CDouble -> CDouble -> IO CDouble
c'copysignf :: CFloat -> CFloat -> IO CFloat
p'ceill :: FunPtr (CLDouble -> IO CLDouble)
c'copysignl :: CLDouble -> CLDouble -> IO CLDouble
p'copysign :: FunPtr (CDouble -> CDouble -> IO CDouble)
c'cos :: CDouble -> IO CDouble
p'copysignf :: FunPtr (CFloat -> CFloat -> IO CFloat)
c'cosf :: CFloat -> IO CFloat
p'copysignl :: FunPtr (CLDouble -> CLDouble -> IO CLDouble)
c'cosh :: CDouble -> IO CDouble
p'cos :: FunPtr (CDouble -> IO CDouble)
c'coshf :: CFloat -> IO CFloat
p'cosf :: FunPtr (CFloat -> IO CFloat)
c'coshl :: CLDouble -> IO CLDouble
p'cosh :: FunPtr (CDouble -> IO CDouble)
c'cosl :: CLDouble -> IO CLDouble
p'coshf :: FunPtr (CFloat -> IO CFloat)
c'erf :: CDouble -> IO CDouble
p'coshl :: FunPtr (CLDouble -> IO CLDouble)
c'erfc :: CDouble -> IO CDouble
p'cosl :: FunPtr (CLDouble -> IO CLDouble)
c'erfcf :: CFloat -> IO CFloat
p'erf :: FunPtr (CDouble -> IO CDouble)
c'erfcl :: CLDouble -> IO CLDouble
p'erfc :: FunPtr (CDouble -> IO CDouble)
c'erff :: CFloat -> IO CFloat
p'erfcf :: FunPtr (CFloat -> IO CFloat)
c'erfl :: CLDouble -> IO CLDouble
p'erfcl :: FunPtr (CLDouble -> IO CLDouble)
c'exp :: CDouble -> IO CDouble
p'erff :: FunPtr (CFloat -> IO CFloat)
c'exp2 :: CDouble -> IO CDouble
p'erfl :: FunPtr (CLDouble -> IO CLDouble)
c'exp2f :: CFloat -> IO CFloat
p'exp :: FunPtr (CDouble -> IO CDouble)
c'exp2l :: CLDouble -> IO CLDouble
p'exp2 :: FunPtr (CDouble -> IO CDouble)
c'expf :: CFloat -> IO CFloat
p'exp2f :: FunPtr (CFloat -> IO CFloat)
c'expl :: CLDouble -> IO CLDouble
p'exp2l :: FunPtr (CLDouble -> IO CLDouble)
c'expm1 :: CDouble -> IO CDouble
p'expf :: FunPtr (CFloat -> IO CFloat)
c'expm1f :: CFloat -> IO CFloat
p'expl :: FunPtr (CLDouble -> IO CLDouble)
c'expm1l :: CLDouble -> IO CLDouble
p'expm1 :: FunPtr (CDouble -> IO CDouble)
c'fabs :: CDouble -> IO CDouble
p'expm1f :: FunPtr (CFloat -> IO CFloat)
c'fabsf :: CFloat -> IO CFloat
p'expm1l :: FunPtr (CLDouble -> IO CLDouble)
c'fabsl :: CLDouble -> IO CLDouble
p'fabs :: FunPtr (CDouble -> IO CDouble)
p'fabsf :: FunPtr (CFloat -> IO CFloat)
c'fdim :: CDouble -> CDouble -> IO CDouble
c'fdimf :: CFloat -> CFloat -> IO CFloat
p'fabsl :: FunPtr (CLDouble -> IO CLDouble)
c'fdiml :: CLDouble -> CLDouble -> IO CLDouble
p'fdim :: FunPtr (CDouble -> CDouble -> IO CDouble)
c'floor :: CDouble -> IO CDouble
p'fdimf :: FunPtr (CFloat -> CFloat -> IO CFloat)
c'floorf :: CFloat -> IO CFloat
p'fdiml :: FunPtr (CLDouble -> CLDouble -> IO CLDouble)
c'floorl :: CLDouble -> IO CLDouble
p'floor :: FunPtr (CDouble -> IO CDouble)
p'floorf :: FunPtr (CFloat -> IO CFloat)
c'fma :: CDouble -> CDouble -> CDouble -> IO CDouble
p'floorl :: FunPtr (CLDouble -> IO CLDouble)
c'fmaf :: CFloat -> CFloat -> CFloat -> IO CFloat
c'fmal :: CLDouble -> CLDouble -> CLDouble -> IO CLDouble
p'fma :: FunPtr (CDouble -> CDouble -> CDouble -> IO CDouble)
c'fmax :: CDouble -> CDouble -> IO CDouble
p'fmaf :: FunPtr (CFloat -> CFloat -> CFloat -> IO CFloat)
c'fmaxf :: CFloat -> CFloat -> IO CFloat
p'fmal :: FunPtr (CLDouble -> CLDouble -> CLDouble -> IO CLDouble)
c'fmaxl :: CLDouble -> CLDouble -> IO CLDouble
p'fmax :: FunPtr (CDouble -> CDouble -> IO CDouble)
c'fmin :: CDouble -> CDouble -> IO CDouble
p'fmaxf :: FunPtr (CFloat -> CFloat -> IO CFloat)
c'fminf :: CFloat -> CFloat -> IO CFloat
p'fmaxl :: FunPtr (CLDouble -> CLDouble -> IO CLDouble)
c'fminl :: CLDouble -> CLDouble -> IO CLDouble
p'fmin :: FunPtr (CDouble -> CDouble -> IO CDouble)
c'fmod :: CDouble -> CDouble -> IO CDouble
p'fminf :: FunPtr (CFloat -> CFloat -> IO CFloat)
c'fmodf :: CFloat -> CFloat -> IO CFloat
p'fminl :: FunPtr (CLDouble -> CLDouble -> IO CLDouble)
c'fmodl :: CLDouble -> CLDouble -> IO CLDouble
p'fmod :: FunPtr (CDouble -> CDouble -> IO CDouble)
c'frexp :: CDouble -> Ptr CInt -> IO CDouble
p'fmodf :: FunPtr (CFloat -> CFloat -> IO CFloat)
c'frexpf :: CFloat -> Ptr CInt -> IO CFloat
p'fmodl :: FunPtr (CLDouble -> CLDouble -> IO CLDouble)
c'frexpl :: CLDouble -> Ptr CInt -> IO CLDouble
p'frexp :: FunPtr (CDouble -> Ptr CInt -> IO CDouble)
c'hypot :: CDouble -> CDouble -> IO CDouble
p'frexpf :: FunPtr (CFloat -> Ptr CInt -> IO CFloat)
c'hypotf :: CFloat -> CFloat -> IO CFloat
p'frexpl :: FunPtr (CLDouble -> Ptr CInt -> IO CLDouble)
c'hypotl :: CLDouble -> CLDouble -> IO CLDouble
p'hypot :: FunPtr (CDouble -> CDouble -> IO CDouble)
c'ilogb :: CDouble -> IO CInt
p'hypotf :: FunPtr (CFloat -> CFloat -> IO CFloat)
c'ilogbf :: CFloat -> IO CInt
p'hypotl :: FunPtr (CLDouble -> CLDouble -> IO CLDouble)
c'ilogbl :: CLDouble -> IO CInt
p'ilogb :: FunPtr (CDouble -> IO CInt)
p'ilogbf :: FunPtr (CFloat -> IO CInt)
c'ldexp :: CDouble -> CInt -> IO CDouble
c'ldexpf :: CFloat -> CInt -> IO CFloat
p'ilogbl :: FunPtr (CLDouble -> IO CInt)
c'ldexpl :: CLDouble -> CInt -> IO CLDouble
p'ldexp :: FunPtr (CDouble -> CInt -> IO CDouble)
c'lgamma :: CDouble -> IO CDouble
p'ldexpf :: FunPtr (CFloat -> CInt -> IO CFloat)
c'lgammaf :: CFloat -> IO CFloat
p'ldexpl :: FunPtr (CLDouble -> CInt -> IO CLDouble)
c'lgammal :: CLDouble -> IO CLDouble
p'lgamma :: FunPtr (CDouble -> IO CDouble)
c'llrint :: CDouble -> IO CLLong
p'lgammaf :: FunPtr (CFloat -> IO CFloat)
c'llrintf :: CFloat -> IO CLLong
p'lgammal :: FunPtr (CLDouble -> IO CLDouble)
c'llrintl :: CLDouble -> IO CLLong
p'llrint :: FunPtr (CDouble -> IO CLLong)
c'llround :: CDouble -> IO CLLong
p'llrintf :: FunPtr (CFloat -> IO CLLong)
c'llroundf :: CFloat -> IO CLLong
p'llrintl :: FunPtr (CLDouble -> IO CLLong)
c'llroundl :: CLDouble -> IO CLLong
p'llround :: FunPtr (CDouble -> IO CLLong)
c'log :: CDouble -> IO CDouble
p'llroundf :: FunPtr (CFloat -> IO CLLong)
c'log10 :: CDouble -> IO CDouble
p'llroundl :: FunPtr (CLDouble -> IO CLLong)
c'log10f :: CFloat -> IO CFloat
p'log :: FunPtr (CDouble -> IO CDouble)
c'log10l :: CLDouble -> IO CLDouble
p'log10 :: FunPtr (CDouble -> IO CDouble)
c'log1p :: CDouble -> IO CDouble
p'log10f :: FunPtr (CFloat -> IO CFloat)
c'log1pf :: CFloat -> IO CFloat
p'log10l :: FunPtr (CLDouble -> IO CLDouble)
c'log1pl :: CLDouble -> IO CLDouble
p'log1p :: FunPtr (CDouble -> IO CDouble)
c'log2 :: CDouble -> IO CDouble
p'log1pf :: FunPtr (CFloat -> IO CFloat)
c'log2f :: CFloat -> IO CFloat
p'log1pl :: FunPtr (CLDouble -> IO CLDouble)
c'log2l :: CLDouble -> IO CLDouble
p'log2 :: FunPtr (CDouble -> IO CDouble)
c'logb :: CDouble -> IO CDouble
p'log2f :: FunPtr (CFloat -> IO CFloat)
c'logbf :: CFloat -> IO CFloat
p'log2l :: FunPtr (CLDouble -> IO CLDouble)
c'logbl :: CLDouble -> IO CLDouble
p'logb :: FunPtr (CDouble -> IO CDouble)
c'logf :: CFloat -> IO CFloat
p'logbf :: FunPtr (CFloat -> IO CFloat)
c'logl :: CLDouble -> IO CLDouble
p'logbl :: FunPtr (CLDouble -> IO CLDouble)
c'lrint :: CDouble -> IO CLong
p'logf :: FunPtr (CFloat -> IO CFloat)
c'lrintf :: CFloat -> IO CLong
p'logl :: FunPtr (CLDouble -> IO CLDouble)
c'lrintl :: CLDouble -> IO CLong
p'lrint :: FunPtr (CDouble -> IO CLong)
c'lround :: CDouble -> IO CLong
p'lrintf :: FunPtr (CFloat -> IO CLong)
c'lroundf :: CFloat -> IO CLong
p'lrintl :: FunPtr (CLDouble -> IO CLong)
c'lroundl :: CLDouble -> IO CLong
p'lround :: FunPtr (CDouble -> IO CLong)
p'lroundf :: FunPtr (CFloat -> IO CLong)
c'modf :: CDouble -> Ptr CDouble -> IO CDouble
p'lroundl :: FunPtr (CLDouble -> IO CLong)
c'modff :: CFloat -> Ptr CFloat -> IO CFloat
c'modfl :: CLDouble -> Ptr CLDouble -> IO CLDouble
p'modf :: FunPtr (CDouble -> Ptr CDouble -> IO CDouble)
c'nan :: CString -> IO CDouble
p'modff :: FunPtr (CFloat -> Ptr CFloat -> IO CFloat)
c'nanf :: CString -> IO CFloat
p'modfl :: FunPtr (CLDouble -> Ptr CLDouble -> IO CLDouble)
c'nanl :: CString -> IO CLDouble
p'nan :: FunPtr (CString -> IO CDouble)
c'nearbyint :: CDouble -> IO CDouble
p'nanf :: FunPtr (CString -> IO CFloat)
c'nearbyintf :: CFloat -> IO CFloat
p'nanl :: FunPtr (CString -> IO CLDouble)
c'nearbyintl :: CLDouble -> IO CLDouble
p'nearbyint :: FunPtr (CDouble -> IO CDouble)
p'nearbyintf :: FunPtr (CFloat -> IO CFloat)
c'nextafter :: CDouble -> CDouble -> IO CDouble
c'nextafterf :: CFloat -> CFloat -> IO CFloat
p'nearbyintl :: FunPtr (CLDouble -> IO CLDouble)
c'nextafterl :: CLDouble -> CLDouble -> IO CLDouble
p'nextafter :: FunPtr (CDouble -> CDouble -> IO CDouble)
c'nexttoward :: CDouble -> CLDouble -> IO CDouble
p'nextafterf :: FunPtr (CFloat -> CFloat -> IO CFloat)
c'nexttowardf :: CFloat -> CLDouble -> IO CFloat
p'nextafterl :: FunPtr (CLDouble -> CLDouble -> IO CLDouble)
c'nexttowardl :: CLDouble -> CLDouble -> IO CLDouble
p'nexttoward :: FunPtr (CDouble -> CLDouble -> IO CDouble)
c'pow :: CDouble -> CDouble -> IO CDouble
p'nexttowardf :: FunPtr (CFloat -> CLDouble -> IO CFloat)
c'powf :: CFloat -> CFloat -> IO CFloat
p'nexttowardl :: FunPtr (CLDouble -> CLDouble -> IO CLDouble)
c'powl :: CLDouble -> CLDouble -> IO CLDouble
p'pow :: FunPtr (CDouble -> CDouble -> IO CDouble)
c'remainder :: CDouble -> CDouble -> IO CDouble
p'powf :: FunPtr (CFloat -> CFloat -> IO CFloat)
c'remainderf :: CFloat -> CFloat -> IO CFloat
p'powl :: FunPtr (CLDouble -> CLDouble -> IO CLDouble)
c'remainderl :: CLDouble -> CLDouble -> IO CLDouble
p'remainder :: FunPtr (CDouble -> CDouble -> IO CDouble)
p'remainderf :: FunPtr (CFloat -> CFloat -> IO CFloat)
c'remquo :: CDouble -> CDouble -> Ptr CInt -> IO CDouble
c'remquof :: CFloat -> CFloat -> Ptr CInt -> IO CFloat
p'remainderl :: FunPtr (CLDouble -> CLDouble -> IO CLDouble)
c'remquol :: CLDouble -> CLDouble -> Ptr CInt -> IO CLDouble
p'remquo :: FunPtr (CDouble -> CDouble -> Ptr CInt -> IO CDouble)
c'rint :: CDouble -> IO CDouble
p'remquof :: FunPtr (CFloat -> CFloat -> Ptr CInt -> IO CFloat)
c'rintf :: CFloat -> IO CFloat
p'remquol :: FunPtr (CLDouble -> CLDouble -> Ptr CInt -> IO CLDouble)
c'rintl :: CLDouble -> IO CLDouble
p'rint :: FunPtr (CDouble -> IO CDouble)
c'round :: CDouble -> IO CDouble
p'rintf :: FunPtr (CFloat -> IO CFloat)
c'roundf :: CFloat -> IO CFloat
p'rintl :: FunPtr (CLDouble -> IO CLDouble)
c'roundl :: CLDouble -> IO CLDouble
p'round :: FunPtr (CDouble -> IO CDouble)
p'roundf :: FunPtr (CFloat -> IO CFloat)
c'scalbln :: CDouble -> CLong -> IO CDouble
c'scalblnf :: CFloat -> CLong -> IO CFloat
p'roundl :: FunPtr (CLDouble -> IO CLDouble)
c'scalblnl :: CLDouble -> CLong -> IO CLDouble
p'scalbln :: FunPtr (CDouble -> CLong -> IO CDouble)
c'scalbn :: CDouble -> CInt -> IO CDouble
p'scalblnf :: FunPtr (CFloat -> CLong -> IO CFloat)
c'scalbnf :: CFloat -> CInt -> IO CFloat
p'scalblnl :: FunPtr (CLDouble -> CLong -> IO CLDouble)
c'scalbnl :: CLDouble -> CInt -> IO CLDouble
p'scalbn :: FunPtr (CDouble -> CInt -> IO CDouble)
c'sin :: CDouble -> IO CDouble
p'scalbnf :: FunPtr (CFloat -> CInt -> IO CFloat)
c'sinf :: CFloat -> IO CFloat
p'scalbnl :: FunPtr (CLDouble -> CInt -> IO CLDouble)
c'sinh :: CDouble -> IO CDouble
p'sin :: FunPtr (CDouble -> IO CDouble)
c'sinhf :: CFloat -> IO CFloat
p'sinf :: FunPtr (CFloat -> IO CFloat)
c'sinhl :: CLDouble -> IO CLDouble
p'sinh :: FunPtr (CDouble -> IO CDouble)
c'sinl :: CLDouble -> IO CLDouble
p'sinhf :: FunPtr (CFloat -> IO CFloat)
c'sqrt :: CDouble -> IO CDouble
p'sinhl :: FunPtr (CLDouble -> IO CLDouble)
c'sqrtf :: CFloat -> IO CFloat
p'sinl :: FunPtr (CLDouble -> IO CLDouble)
c'sqrtl :: CLDouble -> IO CLDouble
p'sqrt :: FunPtr (CDouble -> IO CDouble)
c'tan :: CDouble -> IO CDouble
p'sqrtf :: FunPtr (CFloat -> IO CFloat)
c'tanf :: CFloat -> IO CFloat
p'sqrtl :: FunPtr (CLDouble -> IO CLDouble)
c'tanh :: CDouble -> IO CDouble
p'tan :: FunPtr (CDouble -> IO CDouble)
c'tanhf :: CFloat -> IO CFloat
p'tanf :: FunPtr (CFloat -> IO CFloat)
c'tanhl :: CLDouble -> IO CLDouble
p'tanh :: FunPtr (CDouble -> IO CDouble)
c'tanl :: CLDouble -> IO CLDouble
p'tanhf :: FunPtr (CFloat -> IO CFloat)
c'tgamma :: CDouble -> IO CDouble
p'tanhl :: FunPtr (CLDouble -> IO CLDouble)
c'tgammaf :: CFloat -> IO CFloat
p'tanl :: FunPtr (CLDouble -> IO CLDouble)
c'tgammal :: CLDouble -> IO CLDouble
p'tgamma :: FunPtr (CDouble -> IO CDouble)
c'trunc :: CDouble -> IO CDouble
p'tgammaf :: FunPtr (CFloat -> IO CFloat)
c'truncf :: CFloat -> IO CFloat
p'tgammal :: FunPtr (CLDouble -> IO CLDouble)
c'truncl :: CLDouble -> IO CLDouble
p'trunc :: FunPtr (CDouble -> IO CDouble)
p'truncf :: FunPtr (CFloat -> IO CFloat)
p'truncl :: FunPtr (CLDouble -> IO CLDouble)


-- | 
--   <a>http://www.opengroup.org/onlinepubs/9699919799/basedefs/locale.h.html</a>
module Bindings.C.Locale
data C'lconv
C'lconv :: CString -> CString -> CChar -> CString -> CString -> CChar -> CChar -> CChar -> CChar -> CChar -> CChar -> CChar -> CString -> CString -> CString -> CString -> CChar -> CChar -> CChar -> CString -> CChar -> CChar -> CChar -> CString -> C'lconv
c'lconv'currency_symbol :: C'lconv -> CString
c'lconv'decimal_point :: C'lconv -> CString
c'lconv'frac_digits :: C'lconv -> CChar
c'lconv'grouping :: C'lconv -> CString
c'lconv'int_curr_symbol :: C'lconv -> CString
c'lconv'int_frac_digits :: C'lconv -> CChar
c'lconv'int_n_cs_precedes :: C'lconv -> CChar
c'lconv'int_n_sep_by_space :: C'lconv -> CChar
c'lconv'int_n_sign_posn :: C'lconv -> CChar
c'lconv'int_p_cs_precedes :: C'lconv -> CChar
c'lconv'int_p_sep_by_space :: C'lconv -> CChar
c'lconv'int_p_sign_posn :: C'lconv -> CChar
c'lconv'mon_decimal_point :: C'lconv -> CString
c'lconv'mon_grouping :: C'lconv -> CString
c'lconv'mon_thousands_sep :: C'lconv -> CString
c'lconv'negative_sign :: C'lconv -> CString
c'lconv'n_cs_precedes :: C'lconv -> CChar
c'lconv'n_sep_by_space :: C'lconv -> CChar
c'lconv'n_sign_posn :: C'lconv -> CChar
c'lconv'positive_sign :: C'lconv -> CString
c'lconv'p_cs_precedes :: C'lconv -> CChar
c'lconv'p_sep_by_space :: C'lconv -> CChar
c'lconv'p_sign_posn :: C'lconv -> CChar
c'lconv'thousands_sep :: C'lconv -> CString
c'LC_ALL :: (Num a) => a
c'LC_COLLATE :: (Num a) => a
c'LC_CTYPE :: (Num a) => a
c'LC_MONETARY :: (Num a) => a
c'LC_NUMERIC :: (Num a) => a
c'LC_TIME :: (Num a) => a
c'localeconv :: IO (Ptr C'lconv)
c'setlocale :: CInt -> CString -> IO CString
p'localeconv :: FunPtr (IO (Ptr C'lconv))
p'setlocale :: FunPtr (CInt -> CString -> IO CString)
instance Eq C'lconv
instance Show C'lconv
instance Storable C'lconv


-- | 
--   <a>http://www.opengroup.org/onlinepubs/9699919799/basedefs/errno.h.html</a>
module Bindings.C.Errno
c'EDOM :: (Num a) => a
c'EILSEQ :: (Num a) => a
c'ERANGE :: (Num a) => a


-- | 
--   <a>http://www.opengroup.org/onlinepubs/9699919799/basedefs/ctype.h.html</a>
module Bindings.C.Ctype
c'isalnum :: CInt -> IO CInt
c'isalpha :: CInt -> IO CInt
c'isblank :: CInt -> IO CInt
p'isalnum :: FunPtr (CInt -> IO CInt)
c'iscntrl :: CInt -> IO CInt
p'isalpha :: FunPtr (CInt -> IO CInt)
c'isdigit :: CInt -> IO CInt
p'isblank :: FunPtr (CInt -> IO CInt)
c'isgraph :: CInt -> IO CInt
p'iscntrl :: FunPtr (CInt -> IO CInt)
c'islower :: CInt -> IO CInt
p'isdigit :: FunPtr (CInt -> IO CInt)
c'isprint :: CInt -> IO CInt
p'isgraph :: FunPtr (CInt -> IO CInt)
c'ispunct :: CInt -> IO CInt
p'islower :: FunPtr (CInt -> IO CInt)
c'isspace :: CInt -> IO CInt
p'isprint :: FunPtr (CInt -> IO CInt)
c'isupper :: CInt -> IO CInt
p'ispunct :: FunPtr (CInt -> IO CInt)
c'isxdigit :: CInt -> IO CInt
p'isspace :: FunPtr (CInt -> IO CInt)
c'tolower :: CInt -> IO CInt
p'isupper :: FunPtr (CInt -> IO CInt)
c'toupper :: CInt -> IO CInt
p'isxdigit :: FunPtr (CInt -> IO CInt)
p'tolower :: FunPtr (CInt -> IO CInt)
p'toupper :: FunPtr (CInt -> IO CInt)

module Bindings.C
