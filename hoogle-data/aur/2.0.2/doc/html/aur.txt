-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Access metadata from the Arch Linux User Repository.
--   
@package aur
@version 2.0.2


module Linux.Arch.Aur.Types
data AurInfo
AurInfo :: Int -> Text -> Int -> Text -> Text -> Int -> Text -> [Text] -> Text -> Int -> Bool -> Maybe Text -> Int -> Int -> Text -> [Text] -> [Text] -> [Text] -> [Text] -> [Text] -> AurInfo
aurIdOf :: AurInfo -> Int
aurNameOf :: AurInfo -> Text
pkgBaseIdOf :: AurInfo -> Int
pkgBaseOf :: AurInfo -> Text
aurVersionOf :: AurInfo -> Text
aurCategoryOf :: AurInfo -> Int
aurDescriptionOf :: AurInfo -> Text
licenseOf :: AurInfo -> [Text]
urlOf :: AurInfo -> Text
aurVotesOf :: AurInfo -> Int
isOutOfDate :: AurInfo -> Bool
aurMaintainerOf :: AurInfo -> Maybe Text
submissionDatOf :: AurInfo -> Int
modifiedDateOf :: AurInfo -> Int
aurTarballUrlOf :: AurInfo -> Text
dependsOf :: AurInfo -> [Text]
makeDepsOf :: AurInfo -> [Text]
optDepsOf :: AurInfo -> [Text]
conflictsOf :: AurInfo -> [Text]
providesOf :: AurInfo -> [Text]
instance Eq AurInfo
instance Show AurInfo
instance FromJSON AurInfo


module Linux.Arch.Aur.Rpc

-- | Returns all information about one package.
info :: (MonadIO m, Functor m) => Text -> m (Maybe AurInfo)

-- | Like <a>info</a>, but can handle requests for multiple packages at
--   once. More efficient than using <a>info</a> multiple times.
multiinfo :: (MonadIO m, Functor m) => [Text] -> m [AurInfo]

-- | Yields any matches to the input as <a>AurInfo</a>, but doesn't include
--   dependency information.
search :: (MonadIO m, Functor m) => Text -> m [AurInfo]

-- | Search the AUR by Maintainer name.
msearch :: (MonadIO m, Functor m) => Text -> m [AurInfo]

-- | <a>info</a> call as Haskellised JSON.
info' :: (MonadIO m, Functor m) => Text -> m (Maybe Value)

-- | <a>multiinfo</a> call as Haskellised JSON.
multiinfo' :: MonadIO m => [Text] -> m (Maybe Value)

-- | <a>search</a> call as Haskellised JSON.
search' :: MonadIO m => Text -> m (Maybe Value)

-- | <a>msearch</a> call as Haskellised JSON.
msearch' :: MonadIO m => Text -> m (Maybe Value)

-- | Conversion of JSON to nicely formatted Text.
pretty :: Value -> Text


module Linux.Arch.Aur.Pkgbuild

-- | The PKGBUILD of a given package, retrieved from the AUR servers.
pkgbuild :: MonadIO m => String -> m (Maybe Text)

-- | Callable with Text as well, if that's easier.
pkgbuild' :: MonadIO m => Text -> m (Maybe Text)

-- | The location of a given package's PKGBUILD on the AUR servers.
pkgbuildUrl :: String -> String

module Linux.Arch.Aur
