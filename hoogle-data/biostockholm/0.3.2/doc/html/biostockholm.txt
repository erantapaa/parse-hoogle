-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Parsing and rendering of Stockholm files (used by Pfam, Rfam and Infernal).
--   
--   Parsing and rendering of files in Stockholm 1.0 format. Among the
--   users of the Stockholm format are Pfam, Rfam and Infernal. These files
--   hold information about families of proteins or non-coding RNAs. For
--   more information, please see:
--   
--   <ul>
--   <li><a>http://sonnhammer.sbc.su.se/Stockholm.html</a></li>
--   
--   <li><a>ftp://ftp.sanger.ac.uk/pub/databases/Pfam/current_release/relnotes.txt</a></li>
--   <li><a>http://en.wikipedia.org/wiki/Stockholm_format</a></li>
--   </ul>
@package biostockholm
@version 0.3.2


-- | Parsing of an Stockholm 1.0 file into a stream of events.
module Bio.Sequence.Stockholm.Stream

-- | An event (roughly a line in the file).
data Event

-- | <pre>
--   # STOCKHOLM 1.0
--   </pre>
EvHeader :: Event

-- | <pre>
--   //
--   </pre>
EvEnd :: Event

-- | <pre>
--   # ....
--   </pre>
EvComment :: ByteString -> Event

-- | <pre>
--   seqlabel seqdata
--   </pre>
EvSeqData :: ByteString -> ByteString -> Event

-- | <pre>
--   #GF feature data
--   </pre>
EvGF :: ByteString -> ByteString -> Event

-- | <pre>
--   #GC feature data
--   </pre>
EvGC :: ByteString -> ByteString -> Event

-- | <pre>
--   #GS seqlabel feature data
--   </pre>
EvGS :: ByteString -> ByteString -> ByteString -> Event

-- | <pre>
--   #GR seqlabel feature data
--   </pre>
EvGR :: ByteString -> ByteString -> ByteString -> Event

-- | Conduit that parses a file into events.
parseEvents :: MonadThrow m => Conduit ByteString m Event

-- | Conduit that pretty prints an event stream into a file.
renderEvents :: MonadUnsafeIO m => Conduit Event m ByteString
instance Eq Event
instance Ord Event
instance Show Event


-- | Take low-level <a>Event</a><tt>s</tt> and turn them high-level data
--   structures.
module Bio.Sequence.Stockholm.Document

-- | An Stockholm 1.0 formatted file represented in memory.
data Stockholm
Stockholm :: [Ann FileAnnotation] -> [Ann (ColumnAnnotation InFile)] -> [StockholmSeq] -> Stockholm

-- | A sequence in Stockholm 1.0 format.
data StockholmSeq
StSeq :: !SeqLabel -> !SeqData -> [Ann SequenceAnnotation] -> [Ann (ColumnAnnotation InSeq)] -> StockholmSeq

-- | A generic annotation.
data Ann d
Ann :: !d -> !ByteString -> Ann d
feature :: Ann d -> !d
text :: Ann d -> !ByteString

-- | Possible file annotations.
data FileAnnotation

-- | Accession number: Accession number in form PFxxxxx.version or
--   PBxxxxxx.
AC :: FileAnnotation

-- | Identification: One word name for family.
ID :: FileAnnotation

-- | Definition: Short description of family.
DE :: FileAnnotation

-- | Author: Authors of the entry.
AU :: FileAnnotation

-- | Source of seed: The source suggesting the seed members belong to one
--   family.
SE :: FileAnnotation

-- | Gathering method: Search threshold to build the full alignment.
GA :: FileAnnotation

-- | Trusted Cutoff: Lowest sequence score and domain score of match in the
--   full alignment.
TC :: FileAnnotation

-- | Noise Cutoff: Highest sequence score and domain score of match not in
--   full alignment.
NC :: FileAnnotation

-- | Type: Type of family (presently Family, Domain, Motif or Repeat).
TP :: FileAnnotation

-- | Sequence: Number of sequences in alignment.
SQ :: FileAnnotation

-- | Alignment Method: The order ls and fs hits are aligned to the model to
--   build the full align.
AM :: FileAnnotation

-- | Database Comment: Comment about database reference.
DC :: FileAnnotation

-- | Database Reference: Reference to external database.
DR :: FileAnnotation

-- | Reference Comment: Comment about literature reference.
RC :: FileAnnotation

-- | Reference Number: Reference Number.
RN :: FileAnnotation

-- | Reference Medline: Eight digit medline UI number.
RM :: FileAnnotation

-- | Reference Title: Reference Title.
RT :: FileAnnotation

-- | Reference Author: Reference Author
RA :: FileAnnotation

-- | Reference Location: Journal location.
RL :: FileAnnotation

-- | Previous identifier: Record of all previous ID lines.
PI :: FileAnnotation

-- | Keywords: Keywords.
KW :: FileAnnotation

-- | Comment: Comments.
CC :: FileAnnotation

-- | Pfam accession: Indicates a nested domain.
NE :: FileAnnotation

-- | Location: Location of nested domains - sequence ID, start and end of
--   insert.
NL :: FileAnnotation

-- | Other file annotation.
F_Other :: !ByteString -> FileAnnotation

-- | Possible sequence annotations.
data SequenceAnnotation

-- | Accession number
S_AC :: SequenceAnnotation

-- | Description
S_DE :: SequenceAnnotation

-- | Database reference
S_DR :: SequenceAnnotation

-- | Organism (species)
OS :: SequenceAnnotation

-- | Organism classification (clade, etc.)
OC :: SequenceAnnotation

-- | Look (Color, etc.)
LO :: SequenceAnnotation

-- | Other sequence annotation.
S_Other :: !ByteString -> SequenceAnnotation

-- | Possible column annotations. Phantom type can be <a>InFile</a> or
--   <a>InSeq</a>.
data ColumnAnnotation a

-- | Secondary structure.
SS :: ColumnAnnotation a

-- | Surface accessibility.
SA :: ColumnAnnotation a

-- | TransMembrane.
TM :: ColumnAnnotation a

-- | Posterior probability.
PP :: ColumnAnnotation a

-- | LIgand binding.
LI :: ColumnAnnotation a

-- | Active site.
AS :: ColumnAnnotation a

-- | AS - Pfam predicted.
PAS :: ColumnAnnotation a

-- | AS - from SwissProt.
SAS :: ColumnAnnotation a

-- | INtron (in or after).
IN :: ColumnAnnotation a

-- | Other column annotation.
C_Other :: !ByteString -> ColumnAnnotation a

-- | Phantom type for <a>ColumnAnnotation</a>s of the whole file.
data InFile

-- | Phantom type for <a>ColumnAnnotation</a>s of a single sequence.
data InSeq

-- | Conduit that parses <a>Event</a><tt>s</tt> into documents
--   <a>Stockholm</a>.
parseDoc :: Monad m => Conduit Event m Stockholm

-- | Conduit that renders <a>Stockholm</a><tt>s</tt> into
--   <a>Event</a><tt>s</tt>.
renderDoc :: Monad m => Conduit Stockholm m Event
instance Typeable1 Ann
instance Typeable FileAnnotation
instance Typeable1 ColumnAnnotation
instance Typeable SequenceAnnotation
instance Typeable StockholmSeq
instance Typeable Stockholm
instance Show d => Show (Ann d)
instance Eq d => Eq (Ann d)
instance Ord d => Ord (Ann d)
instance Show FileAnnotation
instance Eq FileAnnotation
instance Ord FileAnnotation
instance Show (ColumnAnnotation a)
instance Eq (ColumnAnnotation a)
instance Ord (ColumnAnnotation a)
instance Show SequenceAnnotation
instance Eq SequenceAnnotation
instance Ord SequenceAnnotation
instance Eq StockholmSeq
instance Ord StockholmSeq
instance Show Stockholm
instance Eq Stockholm
instance Ord Stockholm
instance ClmnFeatureLoc InFile
instance ClmnFeatureLoc InSeq
instance NFData (Ann d)
instance BioSeq StockholmSeq
instance NFData StockholmSeq
instance Show StockholmSeq
instance NFData Stockholm


-- | Parsing and pretty printing of files in Stockholm 1.0 format. See:
--   
--   <ul>
--   <li><a>http://sonnhammer.sbc.su.se/Stockholm.html</a></li>
--   
--   <li><a>ftp://ftp.sanger.ac.uk/pub/databases/Pfam/current_release/relnotes.txt</a></li>
--   <li><a>http://en.wikipedia.org/wiki/Stockholm_format</a></li>
--   </ul>
module Bio.Sequence.Stockholm

-- | An Stockholm 1.0 formatted file represented in memory.
data Stockholm
Stockholm :: [Ann FileAnnotation] -> [Ann (ColumnAnnotation InFile)] -> [StockholmSeq] -> Stockholm

-- | A sequence in Stockholm 1.0 format.
data StockholmSeq
StSeq :: !SeqLabel -> !SeqData -> [Ann SequenceAnnotation] -> [Ann (ColumnAnnotation InSeq)] -> StockholmSeq

-- | A generic annotation.
data Ann d
Ann :: !d -> !ByteString -> Ann d
feature :: Ann d -> !d
text :: Ann d -> !ByteString

-- | Possible file annotations.
data FileAnnotation

-- | Accession number: Accession number in form PFxxxxx.version or
--   PBxxxxxx.
AC :: FileAnnotation

-- | Identification: One word name for family.
ID :: FileAnnotation

-- | Definition: Short description of family.
DE :: FileAnnotation

-- | Author: Authors of the entry.
AU :: FileAnnotation

-- | Source of seed: The source suggesting the seed members belong to one
--   family.
SE :: FileAnnotation

-- | Gathering method: Search threshold to build the full alignment.
GA :: FileAnnotation

-- | Trusted Cutoff: Lowest sequence score and domain score of match in the
--   full alignment.
TC :: FileAnnotation

-- | Noise Cutoff: Highest sequence score and domain score of match not in
--   full alignment.
NC :: FileAnnotation

-- | Type: Type of family (presently Family, Domain, Motif or Repeat).
TP :: FileAnnotation

-- | Sequence: Number of sequences in alignment.
SQ :: FileAnnotation

-- | Alignment Method: The order ls and fs hits are aligned to the model to
--   build the full align.
AM :: FileAnnotation

-- | Database Comment: Comment about database reference.
DC :: FileAnnotation

-- | Database Reference: Reference to external database.
DR :: FileAnnotation

-- | Reference Comment: Comment about literature reference.
RC :: FileAnnotation

-- | Reference Number: Reference Number.
RN :: FileAnnotation

-- | Reference Medline: Eight digit medline UI number.
RM :: FileAnnotation

-- | Reference Title: Reference Title.
RT :: FileAnnotation

-- | Reference Author: Reference Author
RA :: FileAnnotation

-- | Reference Location: Journal location.
RL :: FileAnnotation

-- | Previous identifier: Record of all previous ID lines.
PI :: FileAnnotation

-- | Keywords: Keywords.
KW :: FileAnnotation

-- | Comment: Comments.
CC :: FileAnnotation

-- | Pfam accession: Indicates a nested domain.
NE :: FileAnnotation

-- | Location: Location of nested domains - sequence ID, start and end of
--   insert.
NL :: FileAnnotation

-- | Other file annotation.
F_Other :: !ByteString -> FileAnnotation

-- | Possible sequence annotations.
data SequenceAnnotation

-- | Accession number
S_AC :: SequenceAnnotation

-- | Description
S_DE :: SequenceAnnotation

-- | Database reference
S_DR :: SequenceAnnotation

-- | Organism (species)
OS :: SequenceAnnotation

-- | Organism classification (clade, etc.)
OC :: SequenceAnnotation

-- | Look (Color, etc.)
LO :: SequenceAnnotation

-- | Other sequence annotation.
S_Other :: !ByteString -> SequenceAnnotation

-- | Possible column annotations. Phantom type can be <a>InFile</a> or
--   <a>InSeq</a>.
data ColumnAnnotation a

-- | Secondary structure.
SS :: ColumnAnnotation a

-- | Surface accessibility.
SA :: ColumnAnnotation a

-- | TransMembrane.
TM :: ColumnAnnotation a

-- | Posterior probability.
PP :: ColumnAnnotation a

-- | LIgand binding.
LI :: ColumnAnnotation a

-- | Active site.
AS :: ColumnAnnotation a

-- | AS - Pfam predicted.
PAS :: ColumnAnnotation a

-- | AS - from SwissProt.
SAS :: ColumnAnnotation a

-- | INtron (in or after).
IN :: ColumnAnnotation a

-- | Other column annotation.
C_Other :: !ByteString -> ColumnAnnotation a

-- | Phantom type for <a>ColumnAnnotation</a>s of the whole file.
data InFile

-- | Phantom type for <a>ColumnAnnotation</a>s of a single sequence.
data InSeq

-- | Find an annotation. For example, you may use <tt><a>findAnn</a>
--   <a>SS</a></tt> to find the secondary on an Stockholm file.
findAnn :: Eq d => d -> [Ann d] -> Maybe ByteString

-- | <tt>parseStockholm</tt> parses a stream of files in Stockholm 1.0
--   format.
--   
--   Each file must be completely read before it is used because the
--   Stockholm format allows information to be given in any part of the
--   file. However, there may be multiple "Stockholm files" concatenated in
--   a single "filesystem file". These multiple files are read
--   independently. If you need to process large Stockholm files, consider
--   using the streaming interface on <a>Bio.Sequence.Stockholm.Stream</a>.
parseStockholm :: MonadThrow m => Conduit ByteString m Stockholm

-- | Pretty prints an Stockholm file.
renderStockholm :: MonadUnsafeIO m => Conduit Stockholm m ByteString

-- | Strictly parse a stream of files in Stockholm 1.0 format from a lazy
--   <a>ByteString</a>. We recommend using <a>parseStockholm</a>.
lazyParseStockholm :: ByteString -> [Stockholm]

-- | Strictly render a list of <a>Stockholm</a><tt>s</tt> into a lazy
--   <tt>ByteString</tt> in Stockholm 1.0 format. We recommend using
--   <a>renderStockholm</a>.
lazyRenderStockholm :: [Stockholm] -> ByteString
