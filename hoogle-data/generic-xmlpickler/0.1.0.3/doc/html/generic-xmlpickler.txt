-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Generic generation of HXT XmlPickler instances using GHC Generics.
--   
@package generic-xmlpickler
@version 0.1.0.3

module Generics.XmlPickler

-- | The generic pickler. Uses a tag for each constructor with the lower
--   case constructor name, and a tag for each record field with the lower
--   case field name. Most values are pickled using their own
--   <a>XmlPickler</a> instance, and <a>String</a>s are pickled as possibly
--   empty text nodes.
gxpickle :: (Generic a, GXmlPickler (Rep a), ConNames (Rep a)) => PU a

-- | The generic XmlPickler class. This gives generic xml picklers for the
--   functors from <a>Regular</a>. These are usually not used directly.
class GXmlPickler f
gxpicklef :: GXmlPickler f => PU a -> PU (f a)
formatElement :: String -> String

-- | Combine two picklers into a pickler for <a>Either</a>. While pickling,
--   check if the either is a <a>Left</a> or <a>Right</a> and use the
--   appropriate pickler. During unpickling, first try the first, and if it
--   fails, try the second.
xpEither :: PU a -> PU b -> PU (Either a b)
instance [overlap ok] Selector c => GXmlPickler (M1 S c (K1 i (Maybe Text)))
instance [overlap ok] Selector c => GXmlPickler (M1 S c (K1 i (Maybe String)))
instance [overlap ok] (XmlPickler a, Selector c) => GXmlPickler (M1 S c (K1 i (Maybe a)))
instance [overlap ok] GXmlPickler (K1 i Text)
instance [overlap ok] GXmlPickler (K1 i String)
instance [overlap ok] (XmlPickler a, XmlPickler b) => XmlPickler (Either a b)
instance [overlap ok] XmlPickler Bool
instance [overlap ok] (Selector c, GXmlPickler f) => GXmlPickler (M1 S c f)
instance [overlap ok] (Constructor c, GXmlPickler f) => GXmlPickler (M1 C c f)
instance [overlap ok] GXmlPickler f => GXmlPickler (M1 D c f)
instance [overlap ok] (GXmlPickler f, GXmlPickler g) => GXmlPickler (f :*: g)
instance [overlap ok] (GXmlPickler f, GXmlPickler g) => GXmlPickler (f :+: g)
instance [overlap ok] GXmlPickler U1
instance [overlap ok] XmlPickler a => GXmlPickler (K1 i a)
