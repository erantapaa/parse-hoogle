-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A monadic take on a 2,500-year-old board game - GTK+ UI.
--   
--   Goatee is a Go library and game editor, written in Haskell. It
--   provides a GUI for recording, studying, and editing game records.
--   Underneath this is a portable library for manipulating SGF files to
--   build UIs and tools. Goatee aims to be full-featured by supporting all
--   of the SGF spec and allowing for full and easy customization of the
--   game records you create.
--   
--   This package is the GTK+ UI.
@package goatee-gtk
@version 0.2.0

module Game.Goatee.Ui.Gtk.Latch

-- | A binary switch that is off unless held on during the execution of
--   some IO process. The state of a latch can be read at any time, but can
--   be held on by at most one thread at a time.
data Latch

-- | Creates a new latch that is off.
newLatch :: IO Latch

-- | Flips the latch on, executes the action, and finally flips the latch
--   off again (even if the action throws an exception). A latch may be
--   held on by at most one thread at a time. If a second thread tries to
--   turn the latch on, it will block.
withLatchOn :: Latch -> IO a -> IO a

-- | Executes an action only when the latch is on (if given true) or off
--   (if given false).
whenLatch :: Bool -> Latch -> IO () -> IO ()

-- | Executes an action only when a latch is off.
whenLatchOff :: Latch -> IO () -> IO ()

-- | Executes an action only when a latch is on.
whenLatchOn :: Latch -> IO () -> IO ()


-- | The main module for the GTK+ UI, used by clients of the UI. Also
--   implements the UI controller.
module Game.Goatee.Ui.Gtk

-- | The standard concrete controller type. Use this type with
--   <a>startBoard</a>, etc.
type StdUiCtrlImpl = UiCtrlImpl UiGoM
startBoard :: MonadUiGo go => Node -> IO (UiCtrlImpl go)
startNewBoard :: MonadUiGo go => Maybe (Int, Int) -> IO (UiCtrlImpl go)
startFile :: MonadUiGo go => FilePath -> IO (Either String (UiCtrlImpl go))
instance Eq CtrlId
instance Ord CtrlId
instance Functor UiGoM
instance Applicative UiGoM
instance Monad UiGoM
instance MonadGo UiGoM
instance MonadState UiGoState UiGoM
instance MonadUiGo go => UiCtrl go (UiCtrlImpl go)
instance MonadUiGo UiGoM
