-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Typed extension to sqlite simple
--   
--   Simplifies Simple
@package sqlite-simple-typed
@version 0.1.0.0

module Database.SQLite.Simple.DBmoreTH

module Database.SQLite.Simple.DBmore

module Database.SQLite.Simple.TypedQuery
genJsonQuery :: TypedQuery Query -> Q Exp
genTypedQuery :: TypedQuery Query -> Q Exp
genUncurry :: RunDB q => q -> Int -> Q Exp
data RunDB q => TypedQuery q :: * -> *
TypedQuery :: q -> [Text] -> [TypeAction] -> [TypeAction] -> [TypeAction] -> TypedQuery q
fromTypedQuery :: TypedQuery q -> q
namesTypedQuery :: TypedQuery q -> [Text]
typesTypedQuery :: TypedQuery q -> [TypeAction]
typesTypedInput :: TypedQuery q -> [TypeAction]
typesTypedInputSource :: TypedQuery q -> [TypeAction]

-- | A query string. This type is intended to make it difficult to
--   construct a SQL query by concatenating string fragments, as that is an
--   extremely common way to accidentally introduce SQL injection
--   vulnerabilities into an application.
--   
--   This type is an instance of <a>IsString</a>, so the easiest way to
--   construct a query is to enable the <tt>OverloadedStrings</tt> language
--   extension and then simply write the query in double quotes.
--   
--   <pre>
--   {-# LANGUAGE OverloadedStrings #-}
--   
--   import Database.SQLite.Simple
--   
--   q :: Query
--   q = "select ?"
--   </pre>
--   
--   The underlying type is a <tt>Text</tt>, and literal Haskell strings
--   that contain Unicode characters will be correctly transformed to
--   UTF-8.
data Query :: *
instance RunDB Query
instance Lift Query
