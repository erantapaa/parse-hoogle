-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Low level bindings to libzip.
--   
--   This package provides low-level bindings to libzip (v0.11) library.
--   For higher-level interface please use LibZip package:
--   <a>http://hackage.haskell.org/package/LibZip</a>
@package bindings-libzip
@version 0.11


-- | This module provides automatic low-level bindings to <tt>libzip</tt>
--   library, version 0.11. See also:
--   
--   <ul>
--   <li><tt>libzip</tt> documention:
--   <a>http://nih.at/libzip/libzip.html</a> and <tt>zip.h</tt></li>
--   <li><tt>bindings-DSL</tt> documentation:
--   <a>http://bitbucket.org/mauricio/bindings-dsl/wiki/Home</a></li>
--   </ul>
--   
--   Higher-level interface is provided by a separate LibZip package:
--   
--   <ul>
--   <li><a>http://hackage.haskell.org/package/LibZip</a></li>
--   </ul>
module Bindings.LibZip
data C'zip
C'zip :: C'zip
data C'zip_file
C'zip_file :: C'zip_file
data C'zip_source
C'zip_source :: C'zip_source
type C'zip_flags_t = CUInt
c'ZIP_CREATE :: Num a => a
c'ZIP_EXCL :: Num a => a
c'ZIP_CHECKCONS :: Num a => a
c'ZIP_TRUNCATE :: Num a => a
c'ZIP_FL_NOCASE :: Num a => a
c'ZIP_FL_NODIR :: Num a => a
c'ZIP_FL_COMPRESSED :: Num a => a
c'ZIP_FL_UNCHANGED :: Num a => a
c'ZIP_FL_RECOMPRESS :: Num a => a
c'ZIP_FL_ENCRYPTED :: Num a => a
c'ZIP_FL_ENC_GUESS :: Num a => a
c'ZIP_FL_ENC_RAW :: Num a => a
c'ZIP_FL_ENC_STRICT :: Num a => a
c'ZIP_FL_LOCAL :: Num a => a
c'ZIP_FL_CENTRAL :: Num a => a
c'ZIP_FL_ENC_UTF_8 :: Num a => a
c'ZIP_FL_ENC_CP437 :: Num a => a
c'ZIP_FL_OVERWRITE :: Num a => a
c'ZIP_AFL_TORRENT :: Num a => a
c'ZIP_AFL_RDONLY :: Num a => a
c'ZIP_EXTRA_FIELD_ALL :: Num a => a
c'ZIP_EXTRA_FIELD_NEW :: Num a => a
c'ZIP_CODEC_DECODE :: Num a => a
c'ZIP_CODEC_ENCODE :: Num a => a
c'ZIP_ER_OK :: Num a => a
c'ZIP_ER_MULTIDISK :: Num a => a
c'ZIP_ER_RENAME :: Num a => a
c'ZIP_ER_CLOSE :: Num a => a
c'ZIP_ER_SEEK :: Num a => a
c'ZIP_ER_READ :: Num a => a
c'ZIP_ER_WRITE :: Num a => a
c'ZIP_ER_CRC :: Num a => a
c'ZIP_ER_ZIPCLOSED :: Num a => a
c'ZIP_ER_NOENT :: Num a => a
c'ZIP_ER_EXISTS :: Num a => a
c'ZIP_ER_OPEN :: Num a => a
c'ZIP_ER_TMPOPEN :: Num a => a
c'ZIP_ER_ZLIB :: Num a => a
c'ZIP_ER_MEMORY :: Num a => a
c'ZIP_ER_CHANGED :: Num a => a
c'ZIP_ER_COMPNOTSUPP :: Num a => a
c'ZIP_ER_EOF :: Num a => a
c'ZIP_ER_INVAL :: Num a => a
c'ZIP_ER_NOZIP :: Num a => a
c'ZIP_ER_INTERNAL :: Num a => a
c'ZIP_ER_INCONS :: Num a => a
c'ZIP_ER_REMOVE :: Num a => a
c'ZIP_ER_DELETED :: Num a => a
c'ZIP_ER_ENCRNOTSUPP :: Num a => a
c'ZIP_ER_RDONLY :: Num a => a
c'ZIP_ER_NOPASSWD :: Num a => a
c'ZIP_ER_WRONGPASSWD :: Num a => a
c'ZIP_ET_NONE :: Num a => a
c'ZIP_ET_SYS :: Num a => a
c'ZIP_ET_ZLIB :: Num a => a
c'ZIP_CM_DEFAULT :: Num a => a
c'ZIP_CM_STORE :: Num a => a
c'ZIP_CM_SHRINK :: Num a => a
c'ZIP_CM_REDUCE_1 :: Num a => a
c'ZIP_CM_REDUCE_2 :: Num a => a
c'ZIP_CM_REDUCE_3 :: Num a => a
c'ZIP_CM_REDUCE_4 :: Num a => a
c'ZIP_CM_IMPLODE :: Num a => a
c'ZIP_CM_DEFLATE :: Num a => a
c'ZIP_CM_DEFLATE64 :: Num a => a
c'ZIP_CM_PKWARE_IMPLODE :: Num a => a
c'ZIP_CM_BZIP2 :: Num a => a
c'ZIP_CM_LZMA :: Num a => a
c'ZIP_CM_TERSE :: Num a => a
c'ZIP_CM_LZ77 :: Num a => a
c'ZIP_CM_WAVPACK :: Num a => a
c'ZIP_CM_PPMD :: Num a => a
c'ZIP_EM_NONE :: Num a => a
c'ZIP_EM_TRAD_PKWARE :: Num a => a
c'ZIP_EM_UNKNOWN :: Num a => a
type C'zip_source_cmd = CUInt
c'ZIP_SOURCE_OPEN :: Num a => a
c'ZIP_SOURCE_READ :: Num a => a
c'ZIP_SOURCE_CLOSE :: Num a => a
c'ZIP_SOURCE_STAT :: Num a => a
c'ZIP_SOURCE_ERROR :: Num a => a
c'ZIP_SOURCE_FREE :: Num a => a
type C'zip_source_callback = FunPtr (Ptr () -> Ptr () -> CULLong -> C'zip_source_cmd -> IO CULLong)
mk'zip_source_callback :: (Ptr () -> Ptr () -> CULLong -> C'zip_source_cmd -> IO CULLong) -> IO C'zip_source_callback
c'ZIP_SOURCE_ERR_LOWER :: Num a => a
mK'zip_source_callback :: C'zip_source_callback -> (Ptr () -> Ptr () -> CULLong -> C'zip_source_cmd -> IO CULLong)
c'ZIP_STAT_NAME :: Num a => a
c'ZIP_STAT_INDEX :: Num a => a
c'ZIP_STAT_SIZE :: Num a => a
c'ZIP_STAT_COMP_SIZE :: Num a => a
c'ZIP_STAT_MTIME :: Num a => a
c'ZIP_STAT_CRC :: Num a => a
c'ZIP_STAT_COMP_METHOD :: Num a => a
c'ZIP_STAT_ENCRYPTION_METHOD :: Num a => a
c'ZIP_STAT_FLAGS :: Num a => a
data C'time_t
C'time_t :: C'time_t
data C'zip_stat
C'zip_stat :: CULLong -> Ptr CChar -> CULLong -> CULLong -> CULLong -> CTime -> CUInt -> CUShort -> CUShort -> CUInt -> C'zip_stat
c'zip_stat'valid :: C'zip_stat -> CULLong
c'zip_stat'name :: C'zip_stat -> Ptr CChar
c'zip_stat'index :: C'zip_stat -> CULLong
c'zip_stat'size :: C'zip_stat -> CULLong
c'zip_stat'comp_size :: C'zip_stat -> CULLong
c'zip_stat'mtime :: C'zip_stat -> CTime
c'zip_stat'crc :: C'zip_stat -> CUInt
c'zip_stat'comp_method :: C'zip_stat -> CUShort
c'zip_stat'encryption_method :: C'zip_stat -> CUShort
c'zip_stat'flags :: C'zip_stat -> CUInt
p'zip_stat'valid :: Ptr (C'zip_stat) -> Ptr (CULLong)
p'zip_stat'name :: Ptr (C'zip_stat) -> Ptr (Ptr CChar)
p'zip_stat'index :: Ptr (C'zip_stat) -> Ptr (CULLong)
p'zip_stat'size :: Ptr (C'zip_stat) -> Ptr (CULLong)
p'zip_stat'comp_size :: Ptr (C'zip_stat) -> Ptr (CULLong)
p'zip_stat'mtime :: Ptr (C'zip_stat) -> Ptr (CTime)
p'zip_stat'crc :: Ptr (C'zip_stat) -> Ptr (CUInt)
c'zip_add :: Ptr C'zip -> CString -> Ptr C'zip_source -> IO (CLLong)
p'zip_stat'comp_method :: Ptr (C'zip_stat) -> Ptr (CUShort)
c'zip_add_dir :: Ptr C'zip -> CString -> IO (CLLong)
c'zip_get_file_comment :: Ptr C'zip -> CULLong -> Ptr CInt -> CInt -> IO (CString)
p'zip_add :: FunPtr (Ptr C'zip -> CString -> Ptr C'zip_source -> IO (CLLong))
p'zip_stat'encryption_method :: Ptr (C'zip_stat) -> Ptr (CUShort)
c'zip_get_num_files :: Ptr C'zip -> IO (CInt)
p'zip_add_dir :: FunPtr (Ptr C'zip -> CString -> IO (CLLong))
c'zip_rename :: Ptr C'zip -> CULLong -> CString -> IO (CInt)
p'zip_get_file_comment :: FunPtr (Ptr C'zip -> CULLong -> Ptr CInt -> CInt -> IO (CString))
p'zip_stat'flags :: Ptr (C'zip_stat) -> Ptr (CUInt)
p'zip_get_num_files :: FunPtr (Ptr C'zip -> IO (CInt))
c'zip_replace :: Ptr C'zip -> CULLong -> Ptr C'zip_source -> IO (CInt)
c'zip_set_file_comment :: Ptr C'zip -> CULLong -> CString -> CInt -> IO (CInt)
p'zip_rename :: FunPtr (Ptr C'zip -> CULLong -> CString -> IO (CInt))
p'zip_replace :: FunPtr (Ptr C'zip -> CULLong -> Ptr C'zip_source -> IO (CInt))
p'zip_set_file_comment :: FunPtr (Ptr C'zip -> CULLong -> CString -> CInt -> IO (CInt))
c'zip_archive_set_tempdir :: Ptr C'zip -> CString -> IO (CInt)
c'zip_file_add :: Ptr C'zip -> CString -> Ptr C'zip_source -> C'zip_flags_t -> IO (CLLong)
p'zip_archive_set_tempdir :: FunPtr (Ptr C'zip -> CString -> IO (CInt))
c'zip_dir_add :: Ptr C'zip -> CString -> C'zip_flags_t -> IO (CLLong)
c'zip_close :: Ptr C'zip -> IO (CInt)
p'zip_file_add :: FunPtr (Ptr C'zip -> CString -> Ptr C'zip_source -> C'zip_flags_t -> IO (CLLong))
c'zip_discard :: Ptr C'zip -> IO ()
p'zip_dir_add :: FunPtr (Ptr C'zip -> CString -> C'zip_flags_t -> IO (CLLong))
p'zip_close :: FunPtr (Ptr C'zip -> IO (CInt))
c'zip_delete :: Ptr C'zip -> CULLong -> IO (CInt)
p'zip_discard :: FunPtr (Ptr C'zip -> IO ())
c'zip_file_extra_field_delete :: Ptr C'zip -> CULLong -> CUShort -> C'zip_flags_t -> IO (CInt)
p'zip_delete :: FunPtr (Ptr C'zip -> CULLong -> IO (CInt))
c'zip_file_extra_field_delete_by_id :: Ptr C'zip -> CULLong -> CUShort -> CUShort -> C'zip_flags_t -> IO (CInt)
c'zip_error_clear :: Ptr C'zip -> IO ()
p'zip_file_extra_field_delete :: FunPtr (Ptr C'zip -> CULLong -> CUShort -> C'zip_flags_t -> IO (CInt))
c'zip_error_get :: Ptr C'zip -> Ptr CInt -> Ptr CInt -> IO ()
p'zip_file_extra_field_delete_by_id :: FunPtr (Ptr C'zip -> CULLong -> CUShort -> CUShort -> C'zip_flags_t -> IO (CInt))
c'zip_error_get_sys_type :: CInt -> IO (CInt)
p'zip_error_clear :: FunPtr (Ptr C'zip -> IO ())
c'zip_error_to_str :: Ptr CChar -> CULLong -> CInt -> CInt -> IO (CInt)
p'zip_error_get :: FunPtr (Ptr C'zip -> Ptr CInt -> Ptr CInt -> IO ())
p'zip_error_get_sys_type :: FunPtr (CInt -> IO (CInt))
c'zip_fclose :: Ptr C'zip_file -> IO (CInt)
c'zip_fdopen :: CInt -> CInt -> Ptr CInt -> IO (Ptr C'zip)
p'zip_error_to_str :: FunPtr (Ptr CChar -> CULLong -> CInt -> CInt -> IO (CInt))
c'zip_file_error_clear :: Ptr C'zip_file -> IO ()
p'zip_fclose :: FunPtr (Ptr C'zip_file -> IO (CInt))
c'zip_file_error_get :: Ptr C'zip_file -> Ptr CInt -> Ptr CInt -> IO ()
p'zip_fdopen :: FunPtr (CInt -> CInt -> Ptr CInt -> IO (Ptr C'zip))
c'zip_file_strerror :: Ptr C'zip_file -> IO (CString)
p'zip_file_error_clear :: FunPtr (Ptr C'zip_file -> IO ())
p'zip_file_error_get :: FunPtr (Ptr C'zip_file -> Ptr CInt -> Ptr CInt -> IO ())
c'zip_fopen :: Ptr C'zip -> CString -> C'zip_flags_t -> IO (Ptr C'zip_file)
p'zip_file_strerror :: FunPtr (Ptr C'zip_file -> IO (CString))
c'zip_fopen_encrypted :: Ptr C'zip -> CString -> C'zip_flags_t -> CString -> IO (Ptr C'zip_file)
c'zip_fopen_index :: Ptr C'zip -> CULLong -> C'zip_flags_t -> IO (Ptr C'zip_file)
p'zip_fopen :: FunPtr (Ptr C'zip -> CString -> C'zip_flags_t -> IO (Ptr C'zip_file))
c'zip_fopen_index_encrypted :: Ptr C'zip -> CULLong -> C'zip_flags_t -> CString -> IO (Ptr C'zip_file)
p'zip_fopen_encrypted :: FunPtr (Ptr C'zip -> CString -> C'zip_flags_t -> CString -> IO (Ptr C'zip_file))
c'zip_fread :: Ptr C'zip_file -> Ptr () -> CULLong -> IO (CLLong)
p'zip_fopen_index :: FunPtr (Ptr C'zip -> CULLong -> C'zip_flags_t -> IO (Ptr C'zip_file))
c'zip_get_archive_comment :: Ptr C'zip -> Ptr CInt -> C'zip_flags_t -> IO (CString)
p'zip_fopen_index_encrypted :: FunPtr (Ptr C'zip -> CULLong -> C'zip_flags_t -> CString -> IO (Ptr C'zip_file))
c'zip_get_archive_flag :: Ptr C'zip -> C'zip_flags_t -> C'zip_flags_t -> IO (CInt)
p'zip_fread :: FunPtr (Ptr C'zip_file -> Ptr () -> CULLong -> IO (CLLong))
p'zip_get_archive_comment :: FunPtr (Ptr C'zip -> Ptr CInt -> C'zip_flags_t -> IO (CString))
c'zip_file_get_comment :: Ptr C'zip -> CULLong -> Ptr CUInt -> C'zip_flags_t -> IO (CString)
p'zip_get_archive_flag :: FunPtr (Ptr C'zip -> C'zip_flags_t -> C'zip_flags_t -> IO (CInt))
c'zip_file_extra_field_get :: Ptr C'zip -> CULLong -> CUShort -> Ptr CUShort -> Ptr CUShort -> C'zip_flags_t -> IO (Ptr CUChar)
p'zip_file_get_comment :: FunPtr (Ptr C'zip -> CULLong -> Ptr CUInt -> C'zip_flags_t -> IO (CString))
c'zip_file_extra_field_get_by_id :: Ptr C'zip -> CULLong -> CUShort -> CUShort -> Ptr CUShort -> C'zip_flags_t -> IO (Ptr CUChar)
c'zip_file_extra_fields_count :: Ptr C'zip -> CULLong -> C'zip_flags_t -> IO (CShort)
p'zip_file_extra_field_get :: FunPtr (Ptr C'zip -> CULLong -> CUShort -> Ptr CUShort -> Ptr CUShort -> C'zip_flags_t -> IO (Ptr CUChar))
c'zip_file_extra_fields_count_by_id :: Ptr C'zip -> CULLong -> CUShort -> C'zip_flags_t -> IO (CShort)
p'zip_file_extra_field_get_by_id :: FunPtr (Ptr C'zip -> CULLong -> CUShort -> CUShort -> Ptr CUShort -> C'zip_flags_t -> IO (Ptr CUChar))
c'zip_get_name :: Ptr C'zip -> CULLong -> C'zip_flags_t -> IO (CString)
p'zip_file_extra_fields_count :: FunPtr (Ptr C'zip -> CULLong -> C'zip_flags_t -> IO (CShort))
c'zip_get_num_entries :: Ptr C'zip -> C'zip_flags_t -> IO (CLLong)
p'zip_file_extra_fields_count_by_id :: FunPtr (Ptr C'zip -> CULLong -> CUShort -> C'zip_flags_t -> IO (CShort))
c'zip_name_locate :: Ptr C'zip -> CString -> C'zip_flags_t -> IO (CLLong)
p'zip_get_name :: FunPtr (Ptr C'zip -> CULLong -> C'zip_flags_t -> IO (CString))
c'zip_open :: CString -> CInt -> Ptr CInt -> IO (Ptr C'zip)
p'zip_get_num_entries :: FunPtr (Ptr C'zip -> C'zip_flags_t -> IO (CLLong))
c'zip_file_rename :: Ptr C'zip -> CULLong -> CString -> C'zip_flags_t -> IO (CInt)
p'zip_name_locate :: FunPtr (Ptr C'zip -> CString -> C'zip_flags_t -> IO (CLLong))
p'zip_open :: FunPtr (CString -> CInt -> Ptr CInt -> IO (Ptr C'zip))
c'zip_file_replace :: Ptr C'zip -> CULLong -> Ptr C'zip_source -> C'zip_flags_t -> IO (CInt)
c'zip_set_archive_comment :: Ptr C'zip -> CString -> CUShort -> IO (CInt)
p'zip_file_rename :: FunPtr (Ptr C'zip -> CULLong -> CString -> C'zip_flags_t -> IO (CInt))
c'zip_set_archive_flag :: Ptr C'zip -> C'zip_flags_t -> CInt -> IO (CInt)
p'zip_file_replace :: FunPtr (Ptr C'zip -> CULLong -> Ptr C'zip_source -> C'zip_flags_t -> IO (CInt))
c'zip_set_default_password :: Ptr C'zip -> CString -> IO (CInt)
p'zip_set_archive_comment :: FunPtr (Ptr C'zip -> CString -> CUShort -> IO (CInt))
p'zip_set_archive_flag :: FunPtr (Ptr C'zip -> C'zip_flags_t -> CInt -> IO (CInt))
c'zip_file_set_comment :: Ptr C'zip -> CULLong -> CString -> CUShort -> C'zip_flags_t -> IO (CInt)
p'zip_set_default_password :: FunPtr (Ptr C'zip -> CString -> IO (CInt))
c'zip_set_file_compression :: Ptr C'zip -> CULLong -> CInt -> CUInt -> IO (CInt)
p'zip_file_set_comment :: FunPtr (Ptr C'zip -> CULLong -> CString -> CUShort -> C'zip_flags_t -> IO (CInt))
c'zip_file_extra_field_set :: Ptr C'zip -> CULLong -> CUShort -> CUShort -> Ptr CUChar -> CUShort -> C'zip_flags_t -> IO (CInt)
p'zip_set_file_compression :: FunPtr (Ptr C'zip -> CULLong -> CInt -> CUInt -> IO (CInt))
c'zip_source_buffer :: Ptr C'zip -> Ptr () -> CULLong -> CInt -> IO (Ptr C'zip_source)
c'zip_source_file :: Ptr C'zip -> CString -> CULLong -> CLLong -> IO (Ptr C'zip_source)
p'zip_file_extra_field_set :: FunPtr (Ptr C'zip -> CULLong -> CUShort -> CUShort -> Ptr CUChar -> CUShort -> C'zip_flags_t -> IO (CInt))
c'zip_source_filep :: Ptr C'zip -> Ptr CFile -> CULLong -> CLLong -> IO (Ptr C'zip_source)
p'zip_source_buffer :: FunPtr (Ptr C'zip -> Ptr () -> CULLong -> CInt -> IO (Ptr C'zip_source))
c'zip_source_free :: Ptr C'zip_source -> IO ()
p'zip_source_file :: FunPtr (Ptr C'zip -> CString -> CULLong -> CLLong -> IO (Ptr C'zip_source))
c'zip_source_function :: Ptr C'zip -> C'zip_source_callback -> Ptr () -> IO (Ptr C'zip_source)
p'zip_source_filep :: FunPtr (Ptr C'zip -> Ptr CFile -> CULLong -> CLLong -> IO (Ptr C'zip_source))
p'zip_source_free :: FunPtr (Ptr C'zip_source -> IO ())
c'zip_source_zip :: Ptr C'zip -> Ptr C'zip -> CULLong -> C'zip_flags_t -> CULLong -> CLLong -> IO (Ptr C'zip_source)
c'zip_stat :: Ptr C'zip -> CString -> C'zip_flags_t -> Ptr C'zip_stat -> IO (CInt)
p'zip_source_function :: FunPtr (Ptr C'zip -> C'zip_source_callback -> Ptr () -> IO (Ptr C'zip_source))
c'zip_stat_index :: Ptr C'zip -> CULLong -> C'zip_flags_t -> Ptr C'zip_stat -> IO (CInt)
p'zip_source_zip :: FunPtr (Ptr C'zip -> Ptr C'zip -> CULLong -> C'zip_flags_t -> CULLong -> CLLong -> IO (Ptr C'zip_source))
c'zip_stat_init :: Ptr C'zip_stat -> IO ()
p'zip_stat :: FunPtr (Ptr C'zip -> CString -> C'zip_flags_t -> Ptr C'zip_stat -> IO (CInt))
c'zip_strerror :: Ptr C'zip -> IO (CString)
p'zip_stat_index :: FunPtr (Ptr C'zip -> CULLong -> C'zip_flags_t -> Ptr C'zip_stat -> IO (CInt))
p'zip_stat_init :: FunPtr (Ptr C'zip_stat -> IO ())
c'zip_unchange :: Ptr C'zip -> CULLong -> IO (CInt)
c'zip_unchange_all :: Ptr C'zip -> IO (CInt)
p'zip_strerror :: FunPtr (Ptr C'zip -> IO (CString))
c'zip_unchange_archive :: Ptr C'zip -> IO (CInt)
p'zip_unchange :: FunPtr (Ptr C'zip -> CULLong -> IO (CInt))
p'zip_unchange_all :: FunPtr (Ptr C'zip -> IO (CInt))
p'zip_unchange_archive :: FunPtr (Ptr C'zip -> IO (CInt))
instance Eq C'zip_stat
instance Show C'zip_stat
instance Storable C'zip_stat
