-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Amazon Lambda SDK.
--   
@package amazonka-lambda
@version 0.3.6

module Network.AWS.Lambda.Types

-- | Version <tt>2015-03-31</tt> of the Amazon Lambda service.
data Lambda
data JSONError :: *
data Runtime

-- | nodejs
Nodejs :: Runtime
data EventSourcePosition

-- | LATEST
Latest :: EventSourcePosition

-- | TRIM_HORIZON
TrimHorizon :: EventSourcePosition
data InvocationType

-- | DryRun
DryRun :: InvocationType

-- | Event
Event :: InvocationType

-- | RequestResponse
RequestResponse :: InvocationType
data LogType

-- | None
None :: LogType

-- | Tail
Tail' :: LogType
data FunctionCode

-- | <a>FunctionCode</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>fcS3Bucket</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>fcS3Key</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>fcS3ObjectVersion</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>fcZipFile</a> <tt>::</tt> <a>Maybe</a> <a>Base64</a></li>
--   </ul>
functionCode :: FunctionCode

-- | Amazon S3 bucket name where the .zip file containing your deployment
--   package is stored. This bucket must reside in the same AWS region
--   where you are creating the Lambda function.
fcS3Bucket :: Lens' FunctionCode (Maybe Text)

-- | The Amazon S3 object (the deployment package) key name you want to
--   upload.
fcS3Key :: Lens' FunctionCode (Maybe Text)

-- | The Amazon S3 object (the deployment package) version you want to
--   upload.
fcS3ObjectVersion :: Lens' FunctionCode (Maybe Text)

-- | A base64-encoded .zip file containing your deployment package. For
--   more information about creating a .zip file, go to <a>Execution
--   Permissions</a> in the <i>AWS Lambda Developer Guide</i>.
fcZipFile :: Lens' FunctionCode (Maybe Base64)
data FunctionCodeLocation

-- | <a>FunctionCodeLocation</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>fclLocation</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>fclRepositoryType</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
functionCodeLocation :: FunctionCodeLocation

-- | The presigned URL you can use to download the function's .zip file
--   that you previously uploaded. The URL is valid for up to 10 minutes.
fclLocation :: Lens' FunctionCodeLocation (Maybe Text)

-- | The repository from which you can download the function.
fclRepositoryType :: Lens' FunctionCodeLocation (Maybe Text)
data FunctionConfiguration

-- | <a>FunctionConfiguration</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>fcCodeSize</a> <tt>::</tt> <a>Maybe</a> <a>Integer</a></li>
--   <li><a>fcDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>fcFunctionArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>fcFunctionName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>fcHandler</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>fcLastModified</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>fcMemorySize</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>fcRole</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>fcRuntime</a> <tt>::</tt> <a>Maybe</a> <a>Runtime</a></li>
--   <li><a>fcTimeout</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   </ul>
functionConfiguration :: FunctionConfiguration

-- | The size, in bytes, of the function .zip file you uploaded.
fcCodeSize :: Lens' FunctionConfiguration (Maybe Integer)

-- | The user-provided description.
fcDescription :: Lens' FunctionConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) assigned to the function.
fcFunctionArn :: Lens' FunctionConfiguration (Maybe Text)

-- | The name of the function.
fcFunctionName :: Lens' FunctionConfiguration (Maybe Text)

-- | The function Lambda calls to begin executing your function.
fcHandler :: Lens' FunctionConfiguration (Maybe Text)

-- | The timestamp of the last time you updated the function.
fcLastModified :: Lens' FunctionConfiguration (Maybe Text)

-- | The memory size, in MB, you configured for the function. Must be a
--   multiple of 64 MB.
fcMemorySize :: Lens' FunctionConfiguration (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the IAM role that Lambda assumes
--   when it executes your function to access any other Amazon Web Services
--   (AWS) resources.
fcRole :: Lens' FunctionConfiguration (Maybe Text)

-- | The runtime environment for the Lambda function.
fcRuntime :: Lens' FunctionConfiguration (Maybe Runtime)

-- | The function execution time at which Lambda should terminate the
--   function. Because the execution time has cost implications, we
--   recommend you set this value based on your expected execution time.
--   The default is 3 seconds.
fcTimeout :: Lens' FunctionConfiguration (Maybe Natural)
data EventSourceMappingConfiguration

-- | <a>EventSourceMappingConfiguration</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>esmcBatchSize</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>esmcEventSourceArn</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>esmcFunctionArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>esmcLastModified</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>esmcLastProcessingResult</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>esmcState</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>esmcStateTransitionReason</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>esmcUUID</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
eventSourceMappingConfiguration :: EventSourceMappingConfiguration

-- | The largest number of records that AWS Lambda will retrieve from your
--   event source at the time of invoking your function. Your function
--   receives an event with all the retrieved records.
esmcBatchSize :: Lens' EventSourceMappingConfiguration (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the Amazon Kinesis stream that is
--   the source of events.
esmcEventSourceArn :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | The Lambda function to invoke when AWS Lambda detects an event on the
--   stream.
esmcFunctionArn :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | The UTC time string indicating the last time the event mapping was
--   updated.
esmcLastModified :: Lens' EventSourceMappingConfiguration (Maybe UTCTime)

-- | The result of the last AWS Lambda invocation of your Lambda function.
esmcLastProcessingResult :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | The state of the event source mapping. It can be <a>Creating</a>,
--   <a>Enabled</a>, <a>Disabled</a>, <a>Enabling</a>, <a>Disabling</a>,
--   <a>Updating</a>, or <a>Deleting</a>.
esmcState :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | The reason the event source mapping is in its current state. It is
--   either user-requested or an AWS Lambda-initiated state transition.
esmcStateTransitionReason :: Lens' EventSourceMappingConfiguration (Maybe Text)

-- | The AWS Lambda assigned opaque identifier for the mapping.
esmcUUID :: Lens' EventSourceMappingConfiguration (Maybe Text)
instance Eq Runtime
instance Ord Runtime
instance Read Runtime
instance Show Runtime
instance Generic Runtime
instance Enum Runtime
instance Eq EventSourcePosition
instance Ord EventSourcePosition
instance Read EventSourcePosition
instance Show EventSourcePosition
instance Generic EventSourcePosition
instance Enum EventSourcePosition
instance Eq InvocationType
instance Ord InvocationType
instance Read InvocationType
instance Show InvocationType
instance Generic InvocationType
instance Enum InvocationType
instance Eq LogType
instance Ord LogType
instance Read LogType
instance Show LogType
instance Generic LogType
instance Enum LogType
instance Eq FunctionCode
instance Read FunctionCode
instance Show FunctionCode
instance Eq FunctionCodeLocation
instance Ord FunctionCodeLocation
instance Read FunctionCodeLocation
instance Show FunctionCodeLocation
instance Eq FunctionConfiguration
instance Read FunctionConfiguration
instance Show FunctionConfiguration
instance Eq EventSourceMappingConfiguration
instance Ord EventSourceMappingConfiguration
instance Read EventSourceMappingConfiguration
instance Show EventSourceMappingConfiguration
instance Datatype D1Runtime
instance Constructor C1_0Runtime
instance Datatype D1EventSourcePosition
instance Constructor C1_0EventSourcePosition
instance Constructor C1_1EventSourcePosition
instance Datatype D1InvocationType
instance Constructor C1_0InvocationType
instance Constructor C1_1InvocationType
instance Constructor C1_2InvocationType
instance Datatype D1LogType
instance Constructor C1_0LogType
instance Constructor C1_1LogType
instance ToJSON EventSourceMappingConfiguration
instance FromJSON EventSourceMappingConfiguration
instance ToJSON FunctionConfiguration
instance FromJSON FunctionConfiguration
instance ToJSON FunctionCodeLocation
instance FromJSON FunctionCodeLocation
instance ToJSON FunctionCode
instance FromJSON FunctionCode
instance ToJSON LogType
instance FromJSON LogType
instance ToQuery LogType
instance ToHeader LogType
instance ToByteString LogType
instance ToText LogType
instance FromText LogType
instance Hashable LogType
instance ToJSON InvocationType
instance FromJSON InvocationType
instance ToQuery InvocationType
instance ToHeader InvocationType
instance ToByteString InvocationType
instance ToText InvocationType
instance FromText InvocationType
instance Hashable InvocationType
instance ToJSON EventSourcePosition
instance FromJSON EventSourcePosition
instance ToQuery EventSourcePosition
instance ToHeader EventSourcePosition
instance ToByteString EventSourcePosition
instance ToText EventSourcePosition
instance FromText EventSourcePosition
instance Hashable EventSourcePosition
instance ToJSON Runtime
instance FromJSON Runtime
instance ToQuery Runtime
instance ToHeader Runtime
instance ToByteString Runtime
instance ToText Runtime
instance FromText Runtime
instance Hashable Runtime
instance AWSService Lambda


-- | You can update an event source mapping. This is useful if you want to
--   change the parameters of the existing mapping without losing your
--   position in the stream. You can change which function will receive the
--   stream records, but to change the stream itself, you must create a new
--   mapping.
--   
--   This operation requires permission for the
--   'lambda:UpdateEventSourceMapping' action.
--   
--   
--   <a>http://docs.aws.amazon.com/lambda/latest/dg/API_UpdateEventSourceMapping.html</a>
module Network.AWS.Lambda.UpdateEventSourceMapping
data UpdateEventSourceMapping

-- | <a>UpdateEventSourceMapping</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uesmBatchSize</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>uesmEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>uesmFunctionName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>uesmUUID</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
updateEventSourceMapping :: Text -> UpdateEventSourceMapping

-- | The maximum number of stream records that can be sent to your Lambda
--   function for a single invocation.
uesmBatchSize :: Lens' UpdateEventSourceMapping (Maybe Natural)

-- | Specifies whether AWS Lambda should actively poll the stream or not.
--   If disabled, AWS Lambda will not poll the stream.
uesmEnabled :: Lens' UpdateEventSourceMapping (Maybe Bool)

-- | The Lambda function to which you want the stream records sent.
--   
--   You can specify an unqualified function name (for example,
--   <a>Thumbnail</a>) or you can specify Amazon Resource Name (ARN) of the
--   function (for example,
--   "arn:aws:lambda:us-west-2:account-id:function:ThumbNail"). AWS Lambda
--   also allows you to specify only the account ID qualifier (for example,
--   "account-id:Thumbnail"). Note that the length constraint applies only
--   to the ARN. If you specify only the function name, it is limited to 64
--   character in length.
uesmFunctionName :: Lens' UpdateEventSourceMapping (Maybe Text)

-- | The event source mapping identifier.
uesmUUID :: Lens' UpdateEventSourceMapping Text
data UpdateEventSourceMappingResponse

-- | <a>UpdateEventSourceMappingResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uesmrBatchSize</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>uesmrEventSourceArn</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>uesmrFunctionArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>uesmrLastModified</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>uesmrLastProcessingResult</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>uesmrState</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>uesmrStateTransitionReason</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>uesmrUUID</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
updateEventSourceMappingResponse :: UpdateEventSourceMappingResponse

-- | The largest number of records that AWS Lambda will retrieve from your
--   event source at the time of invoking your function. Your function
--   receives an event with all the retrieved records.
uesmrBatchSize :: Lens' UpdateEventSourceMappingResponse (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the Amazon Kinesis stream that is
--   the source of events.
uesmrEventSourceArn :: Lens' UpdateEventSourceMappingResponse (Maybe Text)

-- | The Lambda function to invoke when AWS Lambda detects an event on the
--   stream.
uesmrFunctionArn :: Lens' UpdateEventSourceMappingResponse (Maybe Text)

-- | The UTC time string indicating the last time the event mapping was
--   updated.
uesmrLastModified :: Lens' UpdateEventSourceMappingResponse (Maybe UTCTime)

-- | The result of the last AWS Lambda invocation of your Lambda function.
uesmrLastProcessingResult :: Lens' UpdateEventSourceMappingResponse (Maybe Text)

-- | The state of the event source mapping. It can be <a>Creating</a>,
--   <a>Enabled</a>, <a>Disabled</a>, <a>Enabling</a>, <a>Disabling</a>,
--   <a>Updating</a>, or <a>Deleting</a>.
uesmrState :: Lens' UpdateEventSourceMappingResponse (Maybe Text)

-- | The reason the event source mapping is in its current state. It is
--   either user-requested or an AWS Lambda-initiated state transition.
uesmrStateTransitionReason :: Lens' UpdateEventSourceMappingResponse (Maybe Text)

-- | The AWS Lambda assigned opaque identifier for the mapping.
uesmrUUID :: Lens' UpdateEventSourceMappingResponse (Maybe Text)
instance Eq UpdateEventSourceMapping
instance Ord UpdateEventSourceMapping
instance Read UpdateEventSourceMapping
instance Show UpdateEventSourceMapping
instance Eq UpdateEventSourceMappingResponse
instance Ord UpdateEventSourceMappingResponse
instance Read UpdateEventSourceMappingResponse
instance Show UpdateEventSourceMappingResponse
instance FromJSON UpdateEventSourceMappingResponse
instance AWSRequest UpdateEventSourceMapping
instance ToJSON UpdateEventSourceMapping
instance ToHeaders UpdateEventSourceMapping
instance ToQuery UpdateEventSourceMapping
instance ToPath UpdateEventSourceMapping


-- | Updates the code for the specified Lambda function. This operation
--   must only be used on an existing Lambda function and cannot be used to
--   update the function configuration.
--   
--   This operation requires permission for the 'lambda:UpdateFunctionCode'
--   action.
--   
--   
--   <a>http://docs.aws.amazon.com/lambda/latest/dg/API_UpdateFunctionCode.html</a>
module Network.AWS.Lambda.UpdateFunctionCode
data UpdateFunctionCode

-- | <a>UpdateFunctionCode</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ufc1FunctionName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ufc1S3Bucket</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ufc1S3Key</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ufc1S3ObjectVersion</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>ufc1ZipFile</a> <tt>::</tt> <a>Maybe</a> <a>Base64</a></li>
--   </ul>
updateFunctionCode :: Text -> UpdateFunctionCode

-- | The existing Lambda function name whose code you want to replace.
--   
--   You can specify an unqualified function name (for example,
--   <a>Thumbnail</a>) or you can specify Amazon Resource Name (ARN) of the
--   function (for example,
--   "arn:aws:lambda:us-west-2:account-id:function:ThumbNail"). AWS Lambda
--   also allows you to specify only the account ID qualifier (for example,
--   "account-id:Thumbnail"). Note that the length constraint applies only
--   to the ARN. If you specify only the function name, it is limited to 64
--   character in length.
ufc1FunctionName :: Lens' UpdateFunctionCode Text

-- | Amazon S3 bucket name where the .zip file containing your deployment
--   package is stored. This bucket must reside in the same AWS region
--   where you are creating the Lambda function.
ufc1S3Bucket :: Lens' UpdateFunctionCode (Maybe Text)

-- | The Amazon S3 object (the deployment package) key name you want to
--   upload.
ufc1S3Key :: Lens' UpdateFunctionCode (Maybe Text)

-- | The Amazon S3 object (the deployment package) version you want to
--   upload.
ufc1S3ObjectVersion :: Lens' UpdateFunctionCode (Maybe Text)

-- | Based64-encoded .zip file containing your packaged source code.
ufc1ZipFile :: Lens' UpdateFunctionCode (Maybe Base64)
data UpdateFunctionCodeResponse

-- | <a>UpdateFunctionCodeResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ufcrCodeSize</a> <tt>::</tt> <a>Maybe</a> <a>Integer</a></li>
--   <li><a>ufcrDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ufcrFunctionArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ufcrFunctionName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ufcrHandler</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ufcrLastModified</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ufcrMemorySize</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>ufcrRole</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ufcrRuntime</a> <tt>::</tt> <a>Maybe</a> <a>Runtime</a></li>
--   <li><a>ufcrTimeout</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   </ul>
updateFunctionCodeResponse :: UpdateFunctionCodeResponse

-- | The size, in bytes, of the function .zip file you uploaded.
ufcrCodeSize :: Lens' UpdateFunctionCodeResponse (Maybe Integer)

-- | The user-provided description.
ufcrDescription :: Lens' UpdateFunctionCodeResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) assigned to the function.
ufcrFunctionArn :: Lens' UpdateFunctionCodeResponse (Maybe Text)

-- | The name of the function.
ufcrFunctionName :: Lens' UpdateFunctionCodeResponse (Maybe Text)

-- | The function Lambda calls to begin executing your function.
ufcrHandler :: Lens' UpdateFunctionCodeResponse (Maybe Text)

-- | The timestamp of the last time you updated the function.
ufcrLastModified :: Lens' UpdateFunctionCodeResponse (Maybe Text)

-- | The memory size, in MB, you configured for the function. Must be a
--   multiple of 64 MB.
ufcrMemorySize :: Lens' UpdateFunctionCodeResponse (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the IAM role that Lambda assumes
--   when it executes your function to access any other Amazon Web Services
--   (AWS) resources.
ufcrRole :: Lens' UpdateFunctionCodeResponse (Maybe Text)

-- | The runtime environment for the Lambda function.
ufcrRuntime :: Lens' UpdateFunctionCodeResponse (Maybe Runtime)

-- | The function execution time at which Lambda should terminate the
--   function. Because the execution time has cost implications, we
--   recommend you set this value based on your expected execution time.
--   The default is 3 seconds.
ufcrTimeout :: Lens' UpdateFunctionCodeResponse (Maybe Natural)
instance Eq UpdateFunctionCode
instance Read UpdateFunctionCode
instance Show UpdateFunctionCode
instance Eq UpdateFunctionCodeResponse
instance Read UpdateFunctionCodeResponse
instance Show UpdateFunctionCodeResponse
instance FromJSON UpdateFunctionCodeResponse
instance AWSRequest UpdateFunctionCode
instance ToJSON UpdateFunctionCode
instance ToHeaders UpdateFunctionCode
instance ToQuery UpdateFunctionCode
instance ToPath UpdateFunctionCode


-- | Updates the configuration parameters for the specified Lambda function
--   by using the values provided in the request. You provide only the
--   parameters you want to change. This operation must only be used on an
--   existing Lambda function and cannot be used to update the function's
--   code.
--   
--   This operation requires permission for the
--   'lambda:UpdateFunctionConfiguration' action.
--   
--   
--   <a>http://docs.aws.amazon.com/lambda/latest/dg/API_UpdateFunctionConfiguration.html</a>
module Network.AWS.Lambda.UpdateFunctionConfiguration
data UpdateFunctionConfiguration

-- | <a>UpdateFunctionConfiguration</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ufcDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ufcFunctionName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ufcHandler</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ufcMemorySize</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>ufcRole</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ufcTimeout</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   </ul>
updateFunctionConfiguration :: Text -> UpdateFunctionConfiguration

-- | A short user-defined function description. AWS Lambda does not use
--   this value. Assign a meaningful description as you see fit.
ufcDescription :: Lens' UpdateFunctionConfiguration (Maybe Text)

-- | The name of the Lambda function.
--   
--   You can specify an unqualified function name (for example,
--   <a>Thumbnail</a>) or you can specify Amazon Resource Name (ARN) of the
--   function (for example,
--   "arn:aws:lambda:us-west-2:account-id:function:ThumbNail"). AWS Lambda
--   also allows you to specify only the account ID qualifier (for example,
--   "account-id:Thumbnail"). Note that the length constraint applies only
--   to the ARN. If you specify only the function name, it is limited to 64
--   character in length.
ufcFunctionName :: Lens' UpdateFunctionConfiguration Text

-- | The function that Lambda calls to begin executing your function. For
--   Node.js, it is the <i>module-name.export</i> value in your function.
ufcHandler :: Lens' UpdateFunctionConfiguration (Maybe Text)

-- | The amount of memory, in MB, your Lambda function is given. AWS Lambda
--   uses this memory size to infer the amount of CPU allocated to your
--   function. Your function use-case determines your CPU and memory
--   requirements. For example, a database operation might need less memory
--   compared to an image processing function. The default value is 128 MB.
--   The value must be a multiple of 64 MB.
ufcMemorySize :: Lens' UpdateFunctionConfiguration (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the IAM role that Lambda will assume
--   when it executes your function.
ufcRole :: Lens' UpdateFunctionConfiguration (Maybe Text)

-- | The function execution time at which AWS Lambda should terminate the
--   function. Because the execution time has cost implications, we
--   recommend you set this value based on your expected execution time.
--   The default is 3 seconds.
ufcTimeout :: Lens' UpdateFunctionConfiguration (Maybe Natural)
data UpdateFunctionConfigurationResponse

-- | <a>UpdateFunctionConfigurationResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ufcr1CodeSize</a> <tt>::</tt> <a>Maybe</a> <a>Integer</a></li>
--   <li><a>ufcr1Description</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ufcr1FunctionArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ufcr1FunctionName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ufcr1Handler</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ufcr1LastModified</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ufcr1MemorySize</a> <tt>::</tt> <a>Maybe</a>
--   <a>Natural</a></li>
--   <li><a>ufcr1Role</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ufcr1Runtime</a> <tt>::</tt> <a>Maybe</a> <a>Runtime</a></li>
--   <li><a>ufcr1Timeout</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   </ul>
updateFunctionConfigurationResponse :: UpdateFunctionConfigurationResponse

-- | The size, in bytes, of the function .zip file you uploaded.
ufcr1CodeSize :: Lens' UpdateFunctionConfigurationResponse (Maybe Integer)

-- | The user-provided description.
ufcr1Description :: Lens' UpdateFunctionConfigurationResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) assigned to the function.
ufcr1FunctionArn :: Lens' UpdateFunctionConfigurationResponse (Maybe Text)

-- | The name of the function.
ufcr1FunctionName :: Lens' UpdateFunctionConfigurationResponse (Maybe Text)

-- | The function Lambda calls to begin executing your function.
ufcr1Handler :: Lens' UpdateFunctionConfigurationResponse (Maybe Text)

-- | The timestamp of the last time you updated the function.
ufcr1LastModified :: Lens' UpdateFunctionConfigurationResponse (Maybe Text)

-- | The memory size, in MB, you configured for the function. Must be a
--   multiple of 64 MB.
ufcr1MemorySize :: Lens' UpdateFunctionConfigurationResponse (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the IAM role that Lambda assumes
--   when it executes your function to access any other Amazon Web Services
--   (AWS) resources.
ufcr1Role :: Lens' UpdateFunctionConfigurationResponse (Maybe Text)

-- | The runtime environment for the Lambda function.
ufcr1Runtime :: Lens' UpdateFunctionConfigurationResponse (Maybe Runtime)

-- | The function execution time at which Lambda should terminate the
--   function. Because the execution time has cost implications, we
--   recommend you set this value based on your expected execution time.
--   The default is 3 seconds.
ufcr1Timeout :: Lens' UpdateFunctionConfigurationResponse (Maybe Natural)
instance Eq UpdateFunctionConfiguration
instance Ord UpdateFunctionConfiguration
instance Read UpdateFunctionConfiguration
instance Show UpdateFunctionConfiguration
instance Eq UpdateFunctionConfigurationResponse
instance Read UpdateFunctionConfigurationResponse
instance Show UpdateFunctionConfigurationResponse
instance FromJSON UpdateFunctionConfigurationResponse
instance AWSRequest UpdateFunctionConfiguration
instance ToJSON UpdateFunctionConfiguration
instance ToHeaders UpdateFunctionConfiguration
instance ToQuery UpdateFunctionConfiguration
instance ToPath UpdateFunctionConfiguration


-- | You can remove individual permissions from an access policy associated
--   with a Lambda function by providing a Statement ID.
--   
--   Note that removal of a permission will cause an active event source to
--   lose permission to the function.
--   
--   You need permission for the 'lambda:RemovePermission' action.
--   
--   
--   <a>http://docs.aws.amazon.com/lambda/latest/dg/API_RemovePermission.html</a>
module Network.AWS.Lambda.RemovePermission
data RemovePermission

-- | <a>RemovePermission</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rpFunctionName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rpStatementId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
removePermission :: Text -> Text -> RemovePermission

-- | Lambda function whose access policy you want to remove a permission
--   from.
--   
--   You can specify an unqualified function name (for example,
--   <a>Thumbnail</a>) or you can specify Amazon Resource Name (ARN) of the
--   function (for example,
--   "arn:aws:lambda:us-west-2:account-id:function:ThumbNail"). AWS Lambda
--   also allows you to specify only the account ID qualifier (for example,
--   "account-id:Thumbnail"). Note that the length constraint applies only
--   to the ARN. If you specify only the function name, it is limited to 64
--   character in length.
rpFunctionName :: Lens' RemovePermission Text

-- | Statement ID of the permission to remove.
rpStatementId :: Lens' RemovePermission Text
data RemovePermissionResponse

-- | <a>RemovePermissionResponse</a> constructor.
removePermissionResponse :: RemovePermissionResponse
instance Eq RemovePermission
instance Ord RemovePermission
instance Read RemovePermission
instance Show RemovePermission
instance Eq RemovePermissionResponse
instance Ord RemovePermissionResponse
instance Read RemovePermissionResponse
instance Show RemovePermissionResponse
instance Generic RemovePermissionResponse
instance Datatype D1RemovePermissionResponse
instance Constructor C1_0RemovePermissionResponse
instance AWSRequest RemovePermission
instance ToJSON RemovePermission
instance ToHeaders RemovePermission
instance ToQuery RemovePermission
instance ToPath RemovePermission


-- | Returns a list of your Lambda functions. For each function, the
--   response includes the function configuration information. You must use
--   <tt>GetFunction</tt> to retrieve the code for your function.
--   
--   This operation requires permission for the 'lambda:ListFunctions'
--   action.
--   
--   
--   <a>http://docs.aws.amazon.com/lambda/latest/dg/API_ListFunctions.html</a>
module Network.AWS.Lambda.ListFunctions
data ListFunctions

-- | <a>ListFunctions</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lfMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lfMaxItems</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   </ul>
listFunctions :: ListFunctions

-- | Optional string. An opaque pagination token returned from a previous
--   <a>ListFunctions</a> operation. If present, indicates where to
--   continue the listing.
lfMarker :: Lens' ListFunctions (Maybe Text)

-- | Optional integer. Specifies the maximum number of AWS Lambda functions
--   to return in response. This parameter value must be greater than 0.
lfMaxItems :: Lens' ListFunctions (Maybe Natural)
data ListFunctionsResponse

-- | <a>ListFunctionsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lfrFunctions</a> <tt>::</tt>
--   [<a>FunctionConfiguration</a>]</li>
--   <li><a>lfrNextMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listFunctionsResponse :: ListFunctionsResponse

-- | A list of Lambda functions.
lfrFunctions :: Lens' ListFunctionsResponse [FunctionConfiguration]

-- | A string, present if there are more functions.
lfrNextMarker :: Lens' ListFunctionsResponse (Maybe Text)
instance Eq ListFunctions
instance Ord ListFunctions
instance Read ListFunctions
instance Show ListFunctions
instance Eq ListFunctionsResponse
instance Read ListFunctionsResponse
instance Show ListFunctionsResponse
instance AWSPager ListFunctions
instance FromJSON ListFunctionsResponse
instance AWSRequest ListFunctions
instance ToJSON ListFunctions
instance ToHeaders ListFunctions
instance ToQuery ListFunctions
instance ToPath ListFunctions


-- | Returns a list of event source mappings you created using the
--   <tt>CreateEventSourceMapping</tt> (see
--   <tt>CreateEventSourceMapping</tt>), where you identify a stream as an
--   event source. This list does not include Amazon S3 event sources.
--   
--   For each mapping, the API returns configuration information. You can
--   optionally specify filters to retrieve specific event source mappings.
--   
--   This operation requires permission for the
--   'lambda:ListEventSourceMappings' action.
--   
--   
--   <a>http://docs.aws.amazon.com/lambda/latest/dg/API_ListEventSourceMappings.html</a>
module Network.AWS.Lambda.ListEventSourceMappings
data ListEventSourceMappings

-- | <a>ListEventSourceMappings</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lesmEventSourceArn</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>lesmFunctionName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lesmMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lesmMaxItems</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   </ul>
listEventSourceMappings :: ListEventSourceMappings

-- | The Amazon Resource Name (ARN) of the Amazon Kinesis stream.
lesmEventSourceArn :: Lens' ListEventSourceMappings (Maybe Text)

-- | The name of the Lambda function.
--   
--   You can specify an unqualified function name (for example,
--   <a>Thumbnail</a>) or you can specify Amazon Resource Name (ARN) of the
--   function (for example,
--   "arn:aws:lambda:us-west-2:account-id:function:ThumbNail"). AWS Lambda
--   also allows you to specify only the account ID qualifier (for example,
--   "account-id:Thumbnail"). Note that the length constraint applies only
--   to the ARN. If you specify only the function name, it is limited to 64
--   character in length.
lesmFunctionName :: Lens' ListEventSourceMappings (Maybe Text)

-- | Optional string. An opaque pagination token returned from a previous
--   <a>ListEventSourceMappings</a> operation. If present, specifies to
--   continue the list from where the returning call left off.
lesmMarker :: Lens' ListEventSourceMappings (Maybe Text)

-- | Optional integer. Specifies the maximum number of event sources to
--   return in response. This value must be greater than 0.
lesmMaxItems :: Lens' ListEventSourceMappings (Maybe Natural)
data ListEventSourceMappingsResponse

-- | <a>ListEventSourceMappingsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lesmrEventSourceMappings</a> <tt>::</tt>
--   [<a>EventSourceMappingConfiguration</a>]</li>
--   <li><a>lesmrNextMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listEventSourceMappingsResponse :: ListEventSourceMappingsResponse

-- | An array of <a>EventSourceMappingConfiguration</a> objects.
lesmrEventSourceMappings :: Lens' ListEventSourceMappingsResponse [EventSourceMappingConfiguration]

-- | A string, present if there are more event source mappings.
lesmrNextMarker :: Lens' ListEventSourceMappingsResponse (Maybe Text)
instance Eq ListEventSourceMappings
instance Ord ListEventSourceMappings
instance Read ListEventSourceMappings
instance Show ListEventSourceMappings
instance Eq ListEventSourceMappingsResponse
instance Read ListEventSourceMappingsResponse
instance Show ListEventSourceMappingsResponse
instance AWSPager ListEventSourceMappings
instance FromJSON ListEventSourceMappingsResponse
instance AWSRequest ListEventSourceMappings
instance ToJSON ListEventSourceMappings
instance ToHeaders ListEventSourceMappings
instance ToQuery ListEventSourceMappings
instance ToPath ListEventSourceMappings


-- | This API is deprecated. We recommend you use <tt>Invoke</tt> API (see
--   <tt>Invoke</tt>). Submits an invocation request to AWS Lambda. Upon
--   receiving the request, Lambda executes the specified function
--   asynchronously. To see the logs generated by the Lambda function
--   execution, see the CloudWatch logs console.
--   
--   This operation requires permission for the 'lambda:InvokeFunction'
--   action.
--   
--   
--   <a>http://docs.aws.amazon.com/lambda/latest/dg/API_InvokeAsync.html</a>
module Network.AWS.Lambda.InvokeAsync
data InvokeAsync

-- | <a>InvokeAsync</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>iaFunctionName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>iaInvokeArgs</a> <tt>::</tt> <a>RqBody</a></li>
--   </ul>
invokeAsync :: Text -> RqBody -> InvokeAsync

-- | The Lambda function name.
iaFunctionName :: Lens' InvokeAsync Text

-- | JSON that you want to provide to your Lambda function as input.
iaInvokeArgs :: Lens' InvokeAsync RqBody
data InvokeAsyncResponse

-- | <a>InvokeAsyncResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>iarStatus</a> <tt>::</tt> <a>Int</a></li>
--   </ul>
invokeAsyncResponse :: Int -> InvokeAsyncResponse

-- | It will be 202 upon success.
iarStatus :: Lens' InvokeAsyncResponse Int
instance Show InvokeAsync
instance Eq InvokeAsyncResponse
instance Ord InvokeAsyncResponse
instance Read InvokeAsyncResponse
instance Show InvokeAsyncResponse
instance Enum InvokeAsyncResponse
instance Num InvokeAsyncResponse
instance Integral InvokeAsyncResponse
instance Real InvokeAsyncResponse
instance FromJSON InvokeAsyncResponse
instance AWSRequest InvokeAsync
instance ToBody InvokeAsync
instance ToHeaders InvokeAsync
instance ToQuery InvokeAsync
instance ToPath InvokeAsync


-- | Invokes a specified Lambda function.
--   
--   This operation requires permission for the 'lambda:InvokeFunction'
--   action.
--   
--   <a>http://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html</a>
module Network.AWS.Lambda.Invoke
data Invoke

-- | <a>Invoke</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>iClientContext</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iFunctionName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>iInvocationType</a> <tt>::</tt> <a>Maybe</a>
--   <a>InvocationType</a></li>
--   <li><a>iLogType</a> <tt>::</tt> <a>Maybe</a> <a>LogType</a></li>
--   <li><a>iPayload</a> <tt>::</tt> <a>Maybe</a> <a>Object</a></li>
--   </ul>
invoke :: Text -> Invoke

-- | Using the <tt>ClientContext</tt> you can pass client-specific
--   information to the Lambda function you are invoking. You can then
--   process the client information in your Lambda function as you choose
--   through the context variable. For an example of a ClientContext JSON,
--   go to <a>PutEvents</a> in the <i>Amazon MobileAnalytics API Reference
--   and User Guide</i>.
--   
--   The ClientContext JSON must be base64-encoded.
iClientContext :: Lens' Invoke (Maybe Text)

-- | The Lambda function name.
--   
--   You can specify an unqualified function name (for example,
--   <a>Thumbnail</a>) or you can specify Amazon Resource Name (ARN) of the
--   function (for example,
--   "arn:aws:lambda:us-west-2:account-id:function:ThumbNail"). AWS Lambda
--   also allows you to specify only the account ID qualifier (for example,
--   "account-id:Thumbnail"). Note that the length constraint applies only
--   to the ARN. If you specify only the function name, it is limited to 64
--   character in length.
iFunctionName :: Lens' Invoke Text

-- | By default, the <a>Invoke</a> API assumes <a>RequestResponse</a>
--   invocation type. You can optionally request asynchronous execution by
--   specifying <a>Event</a> as the <a>InvocationType</a>. You can also use
--   this parameter to request AWS Lambda to not execute the function but
--   do some verification, such as if the caller is authorized to invoke
--   the function and if the inputs are valid. You request this by
--   specifying <a>DryRun</a> as the <a>InvocationType</a>. This is useful
--   in a cross-account scenario when you want to verify access to a
--   function without running it.
iInvocationType :: Lens' Invoke (Maybe InvocationType)

-- | You can set this optional parameter to <a>Tail</a> in the request only
--   if you specify the <a>InvocationType</a> parameter with value
--   <a>RequestResponse</a>. In this case, AWS Lambda returns the
--   base64-encoded last 4 KB of log data produced by your Lambda function
--   in the 'x-amz-log-results' header.
iLogType :: Lens' Invoke (Maybe LogType)

-- | JSON that you want to provide to your Lambda function as input.
iPayload :: Lens' Invoke (Maybe Object)
data InvokeResponse

-- | <a>InvokeResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>irFunctionError</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>irLogResult</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>irPayload</a> <tt>::</tt> <a>Maybe</a> <a>Object</a></li>
--   <li><a>irStatusCode</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   </ul>
invokeResponse :: InvokeResponse

-- | Indicates whether an error occurred while executing the Lambda
--   function. If an error occurred this field will have one of two values;
--   <tt>Handled</tt> or <tt>Unhandled</tt> . <tt>Handled</tt> errors are
--   errors that are reported by the function while the <tt>Unhandled</tt>
--   errors are those detected and reported by AWS Lambda. Unhandled errors
--   include out of memory errors and function timeouts. For information
--   about how to report an <tt>Handled</tt> error, see <a>Programming
--   Model</a>.
irFunctionError :: Lens' InvokeResponse (Maybe Text)

-- | It is the base64-encoded logs for the Lambda function invocation. This
--   is present only if the invocation type is <a>RequestResponse</a> and
--   the logs were requested.
irLogResult :: Lens' InvokeResponse (Maybe Text)

-- | It is the JSON representation of the object returned by the Lambda
--   function. In This is present only if the invocation type is
--   <a>RequestResponse</a>.
--   
--   In the event of a function error this field contains a message
--   describing the error. For the <tt>Handled</tt> errors the Lambda
--   function will report this message. For <tt>Unhandled</tt> errors AWS
--   Lambda reports the message.
irPayload :: Lens' InvokeResponse (Maybe Object)

-- | The HTTP status code will be in the 200 range for successful request.
--   For the <a>RequestResonse</a> invocation type this status code will be
--   200. For the <a>Event</a> invocation type this status code will be
--   202. For the <a>DryRun</a> invocation type the status code will be
--   204.
irStatusCode :: Lens' InvokeResponse (Maybe Int)
instance Eq Invoke
instance Show Invoke
instance Eq InvokeResponse
instance Show InvokeResponse
instance AWSRequest Invoke
instance ToJSON Invoke
instance ToHeaders Invoke
instance ToQuery Invoke
instance ToPath Invoke


-- | Returns the access policy, containing a list of permissions granted
--   via the <tt>AddPermission</tt> API, associated with the specified
--   bucket.
--   
--   You need permission for the 'lambda:GetPolicy action.'
--   
--   <a>http://docs.aws.amazon.com/lambda/latest/dg/API_GetPolicy.html</a>
module Network.AWS.Lambda.GetPolicy
data GetPolicy

-- | <a>GetPolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gpFunctionName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getPolicy :: Text -> GetPolicy

-- | Function name whose access policy you want to retrieve.
--   
--   You can specify an unqualified function name (for example,
--   <a>Thumbnail</a>) or you can specify Amazon Resource Name (ARN) of the
--   function (for example,
--   "arn:aws:lambda:us-west-2:account-id:function:ThumbNail"). AWS Lambda
--   also allows you to specify only the account ID qualifier (for example,
--   "account-id:Thumbnail"). Note that the length constraint applies only
--   to the ARN. If you specify only the function name, it is limited to 64
--   character in length.
gpFunctionName :: Lens' GetPolicy Text
data GetPolicyResponse

-- | <a>GetPolicyResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gprPolicy</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
getPolicyResponse :: GetPolicyResponse

-- | The access policy associated with the specified function. The response
--   returns the same as a string using "" as an escape character in the
--   JSON.
gprPolicy :: Lens' GetPolicyResponse (Maybe Text)
instance Eq GetPolicy
instance Ord GetPolicy
instance Read GetPolicy
instance Show GetPolicy
instance Monoid GetPolicy
instance IsString GetPolicy
instance Eq GetPolicyResponse
instance Ord GetPolicyResponse
instance Read GetPolicyResponse
instance Show GetPolicyResponse
instance Monoid GetPolicyResponse
instance FromJSON GetPolicyResponse
instance AWSRequest GetPolicy
instance ToJSON GetPolicy
instance ToHeaders GetPolicy
instance ToQuery GetPolicy
instance ToPath GetPolicy


-- | Returns the configuration information of the Lambda function. This the
--   same information you provided as parameters when uploading the
--   function by using <tt>CreateFunction</tt>.
--   
--   This operation requires permission for the
--   'lambda:GetFunctionConfiguration' operation.
--   
--   
--   <a>http://docs.aws.amazon.com/lambda/latest/dg/API_GetFunctionConfiguration.html</a>
module Network.AWS.Lambda.GetFunctionConfiguration
data GetFunctionConfiguration

-- | <a>GetFunctionConfiguration</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gfcFunctionName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getFunctionConfiguration :: Text -> GetFunctionConfiguration

-- | The name of the Lambda function for which you want to retrieve the
--   configuration information.
--   
--   You can specify an unqualified function name (for example,
--   <a>Thumbnail</a>) or you can specify Amazon Resource Name (ARN) of the
--   function (for example,
--   "arn:aws:lambda:us-west-2:account-id:function:ThumbNail"). AWS Lambda
--   also allows you to specify only the account ID qualifier (for example,
--   "account-id:Thumbnail"). Note that the length constraint applies only
--   to the ARN. If you specify only the function name, it is limited to 64
--   character in length.
gfcFunctionName :: Lens' GetFunctionConfiguration Text
data GetFunctionConfigurationResponse

-- | <a>GetFunctionConfigurationResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gfcrCodeSize</a> <tt>::</tt> <a>Maybe</a> <a>Integer</a></li>
--   <li><a>gfcrDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gfcrFunctionArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gfcrFunctionName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gfcrHandler</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gfcrLastModified</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gfcrMemorySize</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>gfcrRole</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gfcrRuntime</a> <tt>::</tt> <a>Maybe</a> <a>Runtime</a></li>
--   <li><a>gfcrTimeout</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   </ul>
getFunctionConfigurationResponse :: GetFunctionConfigurationResponse

-- | The size, in bytes, of the function .zip file you uploaded.
gfcrCodeSize :: Lens' GetFunctionConfigurationResponse (Maybe Integer)

-- | The user-provided description.
gfcrDescription :: Lens' GetFunctionConfigurationResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) assigned to the function.
gfcrFunctionArn :: Lens' GetFunctionConfigurationResponse (Maybe Text)

-- | The name of the function.
gfcrFunctionName :: Lens' GetFunctionConfigurationResponse (Maybe Text)

-- | The function Lambda calls to begin executing your function.
gfcrHandler :: Lens' GetFunctionConfigurationResponse (Maybe Text)

-- | The timestamp of the last time you updated the function.
gfcrLastModified :: Lens' GetFunctionConfigurationResponse (Maybe Text)

-- | The memory size, in MB, you configured for the function. Must be a
--   multiple of 64 MB.
gfcrMemorySize :: Lens' GetFunctionConfigurationResponse (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the IAM role that Lambda assumes
--   when it executes your function to access any other Amazon Web Services
--   (AWS) resources.
gfcrRole :: Lens' GetFunctionConfigurationResponse (Maybe Text)

-- | The runtime environment for the Lambda function.
gfcrRuntime :: Lens' GetFunctionConfigurationResponse (Maybe Runtime)

-- | The function execution time at which Lambda should terminate the
--   function. Because the execution time has cost implications, we
--   recommend you set this value based on your expected execution time.
--   The default is 3 seconds.
gfcrTimeout :: Lens' GetFunctionConfigurationResponse (Maybe Natural)
instance Eq GetFunctionConfiguration
instance Ord GetFunctionConfiguration
instance Read GetFunctionConfiguration
instance Show GetFunctionConfiguration
instance Monoid GetFunctionConfiguration
instance IsString GetFunctionConfiguration
instance Eq GetFunctionConfigurationResponse
instance Read GetFunctionConfigurationResponse
instance Show GetFunctionConfigurationResponse
instance FromJSON GetFunctionConfigurationResponse
instance AWSRequest GetFunctionConfiguration
instance ToJSON GetFunctionConfiguration
instance ToHeaders GetFunctionConfiguration
instance ToQuery GetFunctionConfiguration
instance ToPath GetFunctionConfiguration


-- | Returns the configuration information of the Lambda function and a
--   presigned URL link to the .zip file you uploaded with
--   <tt>CreateFunction</tt> so you can download the .zip file. Note that
--   the URL is valid for up to 10 minutes. The configuration information
--   is the same information you provided as parameters when uploading the
--   function.
--   
--   This operation requires permission for the 'lambda:GetFunction'
--   action.
--   
--   
--   <a>http://docs.aws.amazon.com/lambda/latest/dg/API_GetFunction.html</a>
module Network.AWS.Lambda.GetFunction
data GetFunction

-- | <a>GetFunction</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gfFunctionName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getFunction :: Text -> GetFunction

-- | The Lambda function name.
--   
--   You can specify an unqualified function name (for example,
--   <a>Thumbnail</a>) or you can specify Amazon Resource Name (ARN) of the
--   function (for example,
--   "arn:aws:lambda:us-west-2:account-id:function:ThumbNail"). AWS Lambda
--   also allows you to specify only the account ID qualifier (for example,
--   "account-id:Thumbnail"). Note that the length constraint applies only
--   to the ARN. If you specify only the function name, it is limited to 64
--   character in length.
gfFunctionName :: Lens' GetFunction Text
data GetFunctionResponse

-- | <a>GetFunctionResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gfrCode</a> <tt>::</tt> <a>Maybe</a>
--   <a>FunctionCodeLocation</a></li>
--   <li><a>gfrConfiguration</a> <tt>::</tt> <a>Maybe</a>
--   <a>FunctionConfiguration</a></li>
--   </ul>
getFunctionResponse :: GetFunctionResponse
gfrCode :: Lens' GetFunctionResponse (Maybe FunctionCodeLocation)
gfrConfiguration :: Lens' GetFunctionResponse (Maybe FunctionConfiguration)
instance Eq GetFunction
instance Ord GetFunction
instance Read GetFunction
instance Show GetFunction
instance Monoid GetFunction
instance IsString GetFunction
instance Eq GetFunctionResponse
instance Read GetFunctionResponse
instance Show GetFunctionResponse
instance FromJSON GetFunctionResponse
instance AWSRequest GetFunction
instance ToJSON GetFunction
instance ToHeaders GetFunction
instance ToQuery GetFunction
instance ToPath GetFunction


-- | Returns configuration information for the specified event source
--   mapping (see <tt>CreateEventSourceMapping</tt>).
--   
--   This operation requires permission for the
--   'lambda:GetEventSourceMapping' action.
--   
--   
--   <a>http://docs.aws.amazon.com/lambda/latest/dg/API_GetEventSourceMapping.html</a>
module Network.AWS.Lambda.GetEventSourceMapping
data GetEventSourceMapping

-- | <a>GetEventSourceMapping</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gesmUUID</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getEventSourceMapping :: Text -> GetEventSourceMapping

-- | The AWS Lambda assigned ID of the event source mapping.
gesmUUID :: Lens' GetEventSourceMapping Text
data GetEventSourceMappingResponse

-- | <a>GetEventSourceMappingResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gesmrBatchSize</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>gesmrEventSourceArn</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>gesmrFunctionArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gesmrLastModified</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>gesmrLastProcessingResult</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>gesmrState</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gesmrStateTransitionReason</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>gesmrUUID</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
getEventSourceMappingResponse :: GetEventSourceMappingResponse

-- | The largest number of records that AWS Lambda will retrieve from your
--   event source at the time of invoking your function. Your function
--   receives an event with all the retrieved records.
gesmrBatchSize :: Lens' GetEventSourceMappingResponse (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the Amazon Kinesis stream that is
--   the source of events.
gesmrEventSourceArn :: Lens' GetEventSourceMappingResponse (Maybe Text)

-- | The Lambda function to invoke when AWS Lambda detects an event on the
--   stream.
gesmrFunctionArn :: Lens' GetEventSourceMappingResponse (Maybe Text)

-- | The UTC time string indicating the last time the event mapping was
--   updated.
gesmrLastModified :: Lens' GetEventSourceMappingResponse (Maybe UTCTime)

-- | The result of the last AWS Lambda invocation of your Lambda function.
gesmrLastProcessingResult :: Lens' GetEventSourceMappingResponse (Maybe Text)

-- | The state of the event source mapping. It can be <a>Creating</a>,
--   <a>Enabled</a>, <a>Disabled</a>, <a>Enabling</a>, <a>Disabling</a>,
--   <a>Updating</a>, or <a>Deleting</a>.
gesmrState :: Lens' GetEventSourceMappingResponse (Maybe Text)

-- | The reason the event source mapping is in its current state. It is
--   either user-requested or an AWS Lambda-initiated state transition.
gesmrStateTransitionReason :: Lens' GetEventSourceMappingResponse (Maybe Text)

-- | The AWS Lambda assigned opaque identifier for the mapping.
gesmrUUID :: Lens' GetEventSourceMappingResponse (Maybe Text)
instance Eq GetEventSourceMapping
instance Ord GetEventSourceMapping
instance Read GetEventSourceMapping
instance Show GetEventSourceMapping
instance Monoid GetEventSourceMapping
instance IsString GetEventSourceMapping
instance Eq GetEventSourceMappingResponse
instance Ord GetEventSourceMappingResponse
instance Read GetEventSourceMappingResponse
instance Show GetEventSourceMappingResponse
instance FromJSON GetEventSourceMappingResponse
instance AWSRequest GetEventSourceMapping
instance ToJSON GetEventSourceMapping
instance ToHeaders GetEventSourceMapping
instance ToQuery GetEventSourceMapping
instance ToPath GetEventSourceMapping


-- | Deletes the specified Lambda function code and configuration.
--   
--   When you delete a function the associated access policy is also
--   deleted. You will need to delete the event source mappings explicitly.
--   
--   This operation requires permission for the 'lambda:DeleteFunction'
--   action.
--   
--   
--   <a>http://docs.aws.amazon.com/lambda/latest/dg/API_DeleteFunction.html</a>
module Network.AWS.Lambda.DeleteFunction
data DeleteFunction

-- | <a>DeleteFunction</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dfFunctionName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteFunction :: Text -> DeleteFunction

-- | The Lambda function to delete.
--   
--   You can specify an unqualified function name (for example,
--   <a>Thumbnail</a>) or you can specify Amazon Resource Name (ARN) of the
--   function (for example,
--   "arn:aws:lambda:us-west-2:account-id:function:ThumbNail"). AWS Lambda
--   also allows you to specify only the account ID qualifier (for example,
--   "account-id:Thumbnail"). Note that the length constraint applies only
--   to the ARN. If you specify only the function name, it is limited to 64
--   character in length.
dfFunctionName :: Lens' DeleteFunction Text
data DeleteFunctionResponse

-- | <a>DeleteFunctionResponse</a> constructor.
deleteFunctionResponse :: DeleteFunctionResponse
instance Eq DeleteFunction
instance Ord DeleteFunction
instance Read DeleteFunction
instance Show DeleteFunction
instance Monoid DeleteFunction
instance IsString DeleteFunction
instance Eq DeleteFunctionResponse
instance Ord DeleteFunctionResponse
instance Read DeleteFunctionResponse
instance Show DeleteFunctionResponse
instance Generic DeleteFunctionResponse
instance Datatype D1DeleteFunctionResponse
instance Constructor C1_0DeleteFunctionResponse
instance AWSRequest DeleteFunction
instance ToJSON DeleteFunction
instance ToHeaders DeleteFunction
instance ToQuery DeleteFunction
instance ToPath DeleteFunction


-- | Removes an event source mapping. This means AWS Lambda will no longer
--   invoke the function for events in the associated source.
--   
--   This operation requires permission for the
--   'lambda:DeleteEventSourceMapping' action.
--   
--   
--   <a>http://docs.aws.amazon.com/lambda/latest/dg/API_DeleteEventSourceMapping.html</a>
module Network.AWS.Lambda.DeleteEventSourceMapping
data DeleteEventSourceMapping

-- | <a>DeleteEventSourceMapping</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>desmUUID</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteEventSourceMapping :: Text -> DeleteEventSourceMapping

-- | The event source mapping ID.
desmUUID :: Lens' DeleteEventSourceMapping Text
data DeleteEventSourceMappingResponse

-- | <a>DeleteEventSourceMappingResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>desmrBatchSize</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>desmrEventSourceArn</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>desmrFunctionArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>desmrLastModified</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>desmrLastProcessingResult</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>desmrState</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>desmrStateTransitionReason</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>desmrUUID</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
deleteEventSourceMappingResponse :: DeleteEventSourceMappingResponse

-- | The largest number of records that AWS Lambda will retrieve from your
--   event source at the time of invoking your function. Your function
--   receives an event with all the retrieved records.
desmrBatchSize :: Lens' DeleteEventSourceMappingResponse (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the Amazon Kinesis stream that is
--   the source of events.
desmrEventSourceArn :: Lens' DeleteEventSourceMappingResponse (Maybe Text)

-- | The Lambda function to invoke when AWS Lambda detects an event on the
--   stream.
desmrFunctionArn :: Lens' DeleteEventSourceMappingResponse (Maybe Text)

-- | The UTC time string indicating the last time the event mapping was
--   updated.
desmrLastModified :: Lens' DeleteEventSourceMappingResponse (Maybe UTCTime)

-- | The result of the last AWS Lambda invocation of your Lambda function.
desmrLastProcessingResult :: Lens' DeleteEventSourceMappingResponse (Maybe Text)

-- | The state of the event source mapping. It can be <a>Creating</a>,
--   <a>Enabled</a>, <a>Disabled</a>, <a>Enabling</a>, <a>Disabling</a>,
--   <a>Updating</a>, or <a>Deleting</a>.
desmrState :: Lens' DeleteEventSourceMappingResponse (Maybe Text)

-- | The reason the event source mapping is in its current state. It is
--   either user-requested or an AWS Lambda-initiated state transition.
desmrStateTransitionReason :: Lens' DeleteEventSourceMappingResponse (Maybe Text)

-- | The AWS Lambda assigned opaque identifier for the mapping.
desmrUUID :: Lens' DeleteEventSourceMappingResponse (Maybe Text)
instance Eq DeleteEventSourceMapping
instance Ord DeleteEventSourceMapping
instance Read DeleteEventSourceMapping
instance Show DeleteEventSourceMapping
instance Monoid DeleteEventSourceMapping
instance IsString DeleteEventSourceMapping
instance Eq DeleteEventSourceMappingResponse
instance Ord DeleteEventSourceMappingResponse
instance Read DeleteEventSourceMappingResponse
instance Show DeleteEventSourceMappingResponse
instance FromJSON DeleteEventSourceMappingResponse
instance AWSRequest DeleteEventSourceMapping
instance ToJSON DeleteEventSourceMapping
instance ToHeaders DeleteEventSourceMapping
instance ToQuery DeleteEventSourceMapping
instance ToPath DeleteEventSourceMapping


-- | Creates a new Lambda function. The function metadata is created from
--   the request parameters, and the code for the function is provided by a
--   .zip file in the request body. If the function name already exists,
--   the operation will fail. Note that the function name is
--   case-sensitive.
--   
--   This operation requires permission for the 'lambda:CreateFunction'
--   action.
--   
--   
--   <a>http://docs.aws.amazon.com/lambda/latest/dg/API_CreateFunction.html</a>
module Network.AWS.Lambda.CreateFunction
data CreateFunction

-- | <a>CreateFunction</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cfCode</a> <tt>::</tt> <a>FunctionCode</a></li>
--   <li><a>cfDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cfFunctionName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cfHandler</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cfMemorySize</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>cfRole</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cfRuntime</a> <tt>::</tt> <a>Runtime</a></li>
--   <li><a>cfTimeout</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   </ul>
createFunction :: Text -> Runtime -> Text -> Text -> FunctionCode -> CreateFunction

-- | A structure that includes ZipFile.
cfCode :: Lens' CreateFunction FunctionCode

-- | A short, user-defined function description. Lambda does not use this
--   value. Assign a meaningful description as you see fit.
cfDescription :: Lens' CreateFunction (Maybe Text)

-- | The name you want to assign to the function you are uploading. You can
--   specify an unqualified function name (for example, <a>Thumbnail</a>)
--   or you can specify Amazon Resource Name (ARN) of the function (for
--   example, "arn:aws:lambda:us-west-2:account-id:function:ThumbNail").
--   AWS Lambda also allows you to specify only the account ID qualifier
--   (for example, "account-id:Thumbnail"). Note that the length constraint
--   applies only to the ARN. If you specify only the function name, it is
--   limited to 64 character in length. The function names appear in the
--   console and are returned in the <tt>ListFunctions</tt> API. Function
--   names are used to specify functions to other AWS Lambda APIs, such as
--   <tt>Invoke</tt>.
cfFunctionName :: Lens' CreateFunction Text

-- | The function within your code that Lambda calls to begin execution.
--   For Node.js, it is the <i>module-name</i>.<i>export</i> value in your
--   function.
cfHandler :: Lens' CreateFunction Text

-- | The amount of memory, in MB, your Lambda function is given. Lambda
--   uses this memory size to infer the amount of CPU and memory allocated
--   to your function. Your function use-case determines your CPU and
--   memory requirements. For example, a database operation might need less
--   memory compared to an image processing function. The default value is
--   128 MB. The value must be a multiple of 64 MB.
cfMemorySize :: Lens' CreateFunction (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the IAM role that Lambda assumes
--   when it executes your function to access any other Amazon Web Services
--   (AWS) resources. For more information, see <a>AWS Lambda: How it
--   Works</a>
cfRole :: Lens' CreateFunction Text

-- | The runtime environment for the Lambda function you are uploading.
--   Currently, Lambda supports only "nodejs" as the runtime.
cfRuntime :: Lens' CreateFunction Runtime

-- | The function execution time at which Lambda should terminate the
--   function. Because the execution time has cost implications, we
--   recommend you set this value based on your expected execution time.
--   The default is 3 seconds.
cfTimeout :: Lens' CreateFunction (Maybe Natural)
data CreateFunctionResponse

-- | <a>CreateFunctionResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cfrCodeSize</a> <tt>::</tt> <a>Maybe</a> <a>Integer</a></li>
--   <li><a>cfrDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cfrFunctionArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cfrFunctionName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cfrHandler</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cfrLastModified</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cfrMemorySize</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>cfrRole</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cfrRuntime</a> <tt>::</tt> <a>Maybe</a> <a>Runtime</a></li>
--   <li><a>cfrTimeout</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   </ul>
createFunctionResponse :: CreateFunctionResponse

-- | The size, in bytes, of the function .zip file you uploaded.
cfrCodeSize :: Lens' CreateFunctionResponse (Maybe Integer)

-- | The user-provided description.
cfrDescription :: Lens' CreateFunctionResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) assigned to the function.
cfrFunctionArn :: Lens' CreateFunctionResponse (Maybe Text)

-- | The name of the function.
cfrFunctionName :: Lens' CreateFunctionResponse (Maybe Text)

-- | The function Lambda calls to begin executing your function.
cfrHandler :: Lens' CreateFunctionResponse (Maybe Text)

-- | The timestamp of the last time you updated the function.
cfrLastModified :: Lens' CreateFunctionResponse (Maybe Text)

-- | The memory size, in MB, you configured for the function. Must be a
--   multiple of 64 MB.
cfrMemorySize :: Lens' CreateFunctionResponse (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the IAM role that Lambda assumes
--   when it executes your function to access any other Amazon Web Services
--   (AWS) resources.
cfrRole :: Lens' CreateFunctionResponse (Maybe Text)

-- | The runtime environment for the Lambda function.
cfrRuntime :: Lens' CreateFunctionResponse (Maybe Runtime)

-- | The function execution time at which Lambda should terminate the
--   function. Because the execution time has cost implications, we
--   recommend you set this value based on your expected execution time.
--   The default is 3 seconds.
cfrTimeout :: Lens' CreateFunctionResponse (Maybe Natural)
instance Eq CreateFunction
instance Read CreateFunction
instance Show CreateFunction
instance Eq CreateFunctionResponse
instance Read CreateFunctionResponse
instance Show CreateFunctionResponse
instance FromJSON CreateFunctionResponse
instance AWSRequest CreateFunction
instance ToJSON CreateFunction
instance ToHeaders CreateFunction
instance ToQuery CreateFunction
instance ToPath CreateFunction


-- | Identifies a stream as an event source for a Lambda function. It can
--   be either an Amazon Kinesis stream or an Amazon DynamoDB stream. AWS
--   Lambda invokes the specified function when records are posted to the
--   stream.
--   
--   This is the pull model, where AWS Lambda invokes the function. For
--   more information, go to <a>AWS Lambda: How it Works</a> in the <i>AWS
--   Lambda Developer Guide</i>.
--   
--   This association between an Amazon Kinesis stream and a Lambda
--   function is called the event source mapping. You provide the
--   configuration information (for example, which stream to read from and
--   which Lambda function to invoke) for the event source mapping in the
--   request body.
--   
--   Each event source, such as an Amazon Kinesis or a DynamoDB stream, can
--   be associated with multiple AWS Lambda function. A given Lambda
--   function can be associated with multiple AWS event sources.
--   
--   This operation requires permission for the
--   'lambda:CreateEventSourceMapping' action.
--   
--   
--   <a>http://docs.aws.amazon.com/lambda/latest/dg/API_CreateEventSourceMapping.html</a>
module Network.AWS.Lambda.CreateEventSourceMapping
data CreateEventSourceMapping

-- | <a>CreateEventSourceMapping</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cesmBatchSize</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>cesmEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>cesmEventSourceArn</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cesmFunctionName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cesmStartingPosition</a> <tt>::</tt>
--   <a>EventSourcePosition</a></li>
--   </ul>
createEventSourceMapping :: Text -> Text -> EventSourcePosition -> CreateEventSourceMapping

-- | The largest number of records that AWS Lambda will retrieve from your
--   event source at the time of invoking your function. Your function
--   receives an event with all the retrieved records. The default is 100
--   records.
cesmBatchSize :: Lens' CreateEventSourceMapping (Maybe Natural)

-- | Indicates whether AWS Lambda should begin polling the event source.
cesmEnabled :: Lens' CreateEventSourceMapping (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the Amazon Kinesis or the Amazon
--   DynamoDB stream that is the event source. Any record added to this
--   stream could cause AWS Lambda to invoke your Lambda function, it
--   depends on the <tt>BatchSize</tt>. AWS Lambda POSTs the Amazon Kinesis
--   event, containing records, to your Lambda function as JSON.
cesmEventSourceArn :: Lens' CreateEventSourceMapping Text

-- | The Lambda function to invoke when AWS Lambda detects an event on the
--   stream.
--   
--   You can specify an unqualified function name (for example,
--   <a>Thumbnail</a>) or you can specify Amazon Resource Name (ARN) of the
--   function (for example,
--   "arn:aws:lambda:us-west-2:account-id:function:ThumbNail"). AWS Lambda
--   also allows you to specify only the account ID qualifier (for example,
--   "account-id:Thumbnail"). Note that the length constraint applies only
--   to the ARN. If you specify only the function name, it is limited to 64
--   character in length.
cesmFunctionName :: Lens' CreateEventSourceMapping Text

-- | The position in the stream where AWS Lambda should start reading. For
--   more information, go to <a>ShardIteratorType</a> in the <i>Amazon
--   Kinesis API Reference</i>.
cesmStartingPosition :: Lens' CreateEventSourceMapping EventSourcePosition
data CreateEventSourceMappingResponse

-- | <a>CreateEventSourceMappingResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cesmrBatchSize</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>cesmrEventSourceArn</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cesmrFunctionArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cesmrLastModified</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>cesmrLastProcessingResult</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cesmrState</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cesmrStateTransitionReason</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cesmrUUID</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
createEventSourceMappingResponse :: CreateEventSourceMappingResponse

-- | The largest number of records that AWS Lambda will retrieve from your
--   event source at the time of invoking your function. Your function
--   receives an event with all the retrieved records.
cesmrBatchSize :: Lens' CreateEventSourceMappingResponse (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the Amazon Kinesis stream that is
--   the source of events.
cesmrEventSourceArn :: Lens' CreateEventSourceMappingResponse (Maybe Text)

-- | The Lambda function to invoke when AWS Lambda detects an event on the
--   stream.
cesmrFunctionArn :: Lens' CreateEventSourceMappingResponse (Maybe Text)

-- | The UTC time string indicating the last time the event mapping was
--   updated.
cesmrLastModified :: Lens' CreateEventSourceMappingResponse (Maybe UTCTime)

-- | The result of the last AWS Lambda invocation of your Lambda function.
cesmrLastProcessingResult :: Lens' CreateEventSourceMappingResponse (Maybe Text)

-- | The state of the event source mapping. It can be <a>Creating</a>,
--   <a>Enabled</a>, <a>Disabled</a>, <a>Enabling</a>, <a>Disabling</a>,
--   <a>Updating</a>, or <a>Deleting</a>.
cesmrState :: Lens' CreateEventSourceMappingResponse (Maybe Text)

-- | The reason the event source mapping is in its current state. It is
--   either user-requested or an AWS Lambda-initiated state transition.
cesmrStateTransitionReason :: Lens' CreateEventSourceMappingResponse (Maybe Text)

-- | The AWS Lambda assigned opaque identifier for the mapping.
cesmrUUID :: Lens' CreateEventSourceMappingResponse (Maybe Text)
instance Eq CreateEventSourceMapping
instance Read CreateEventSourceMapping
instance Show CreateEventSourceMapping
instance Eq CreateEventSourceMappingResponse
instance Ord CreateEventSourceMappingResponse
instance Read CreateEventSourceMappingResponse
instance Show CreateEventSourceMappingResponse
instance FromJSON CreateEventSourceMappingResponse
instance AWSRequest CreateEventSourceMapping
instance ToJSON CreateEventSourceMapping
instance ToHeaders CreateEventSourceMapping
instance ToQuery CreateEventSourceMapping
instance ToPath CreateEventSourceMapping


-- | Adds a permission to the access policy associated with the specified
--   AWS Lambda function. In a "push event" model, the access policy
--   attached to the Lambda function grants Amazon S3 or a user application
--   permission for the Lambda 'lambda:Invoke' action. For information
--   about the push model, see <a>AWSLambda: How it Works</a>. Each Lambda
--   function has one access policy associated with it. You can use the
--   <a>AddPermission</a> API to add a permission to the policy. You have
--   one access policy but it can have multiple permission statements.
--   
--   This operation requires permission for the 'lambda:AddPermission'
--   action.
--   
--   
--   <a>http://docs.aws.amazon.com/lambda/latest/dg/API_AddPermission.html</a>
module Network.AWS.Lambda.AddPermission
data AddPermission

-- | <a>AddPermission</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>apAction</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>apFunctionName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>apPrincipal</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>apSourceAccount</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>apSourceArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>apStatementId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
addPermission :: Text -> Text -> Text -> Text -> AddPermission

-- | The AWS Lambda action you want to allow in this statement. Each Lambda
--   action is a string starting with "lambda:" followed by the API name
--   (see <tt>Operations</tt>). For example, "lambda:CreateFunction". You
--   can use wildcard ("lambda:*") to grant permission for all AWS Lambda
--   actions.
apAction :: Lens' AddPermission Text

-- | Name of the Lambda function whose access policy you are updating by
--   adding a new permission.
--   
--   You can specify an unqualified function name (for example,
--   <a>Thumbnail</a>) or you can specify Amazon Resource Name (ARN) of the
--   function (for example,
--   "arn:aws:lambda:us-west-2:account-id:function:ThumbNail"). AWS Lambda
--   also allows you to specify only the account ID qualifier (for example,
--   "account-id:Thumbnail"). Note that the length constraint applies only
--   to the ARN. If you specify only the function name, it is limited to 64
--   character in length.
apFunctionName :: Lens' AddPermission Text

-- | The principal who is getting this permission. It can be Amazon S3
--   service Principal ("s3.amazonaws.com") if you want Amazon S3 to invoke
--   the function, an AWS account ID if you are granting cross-account
--   permission, or any valid AWS service principal such as
--   "sns.amazonaws.com". For example, you might want to allow a custom
--   application in another AWS account to push events to AWS Lambda by
--   invoking your function.
apPrincipal :: Lens' AddPermission Text

-- | The AWS account ID (without a hyphen) of the source owner. If the
--   <tt>SourceArn</tt> identifies a bucket, then this is the bucket
--   owner's account ID. You can use this additional condition to ensure
--   the bucket you specify is owned by a specific account (it is possible
--   the bucket owner deleted the bucket and some other AWS account created
--   the bucket). You can also use this condition to specify all sources
--   (that is, you don't specify the <tt>SourceArn</tt>) owned by a
--   specific account.
apSourceAccount :: Lens' AddPermission (Maybe Text)

-- | This is optional; however, when granting Amazon S3 permission to
--   invoke your function, you should specify this field with the bucket
--   Amazon Resource Name (ARN) as its value. This ensures that only events
--   generated from the specified bucket can invoke the function.
--   
--   If you add a permission for the Amazon S3 principal without providing
--   the source ARN, any AWS account that creates a mapping to your
--   function ARN can send events to invoke your Lambda function from
--   Amazon S3.
apSourceArn :: Lens' AddPermission (Maybe Text)

-- | A unique statement identifier.
apStatementId :: Lens' AddPermission Text
data AddPermissionResponse

-- | <a>AddPermissionResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>aprStatement</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
addPermissionResponse :: AddPermissionResponse

-- | The permission statement you specified in the request. The response
--   returns the same as a string using "" as an escape character in the
--   JSON.
aprStatement :: Lens' AddPermissionResponse (Maybe Text)
instance Eq AddPermission
instance Ord AddPermission
instance Read AddPermission
instance Show AddPermission
instance Eq AddPermissionResponse
instance Ord AddPermissionResponse
instance Read AddPermissionResponse
instance Show AddPermissionResponse
instance Monoid AddPermissionResponse
instance FromJSON AddPermissionResponse
instance AWSRequest AddPermission
instance ToJSON AddPermission
instance ToHeaders AddPermission
instance ToQuery AddPermission
instance ToPath AddPermission


-- | AWS Lambda is a compute service that runs your code in response to
--   events and automatically manages the compute resources for you, making
--   it easy to build applications that respond quickly to new information.
--   AWS Lambda starts running your code within milliseconds of an event
--   such as an image upload, in-app activity, website click, or output
--   from a connected device. You can also use AWS Lambda to create new
--   back-end services where compute resources are automatically triggered
--   based on custom requests. With AWS Lambda you pay only for the
--   requests served and the compute time required to run your code.
--   Billing is metered in increments of 100 milliseconds, making it
--   cost-effective and easy to scale automatically from a few requests per
--   day to thousands per second.
module Network.AWS.Lambda
