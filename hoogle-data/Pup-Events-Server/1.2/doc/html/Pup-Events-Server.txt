-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A networked event handling framework for hooking
into other programs.
--   
--   Pup-Events is a networking enabled event handling framework. This
--   package contains the Server component. In order for the server to be
--   useful it needs events and associated handlers, which you write. You
--   then call the <a>server</a> function, passing in the required
--   functions for the server to work properly.
@package Pup-Events-Server
@version 1.2


-- | The Server module of the PupEvents framework is designed to be run
--   from the file that specifies the Events that you are handling. The
--   only thing that would need to be written to use this is the Events
--   file, it does not depend on the application code.
module PupEventsServer

-- | The main entry point of the program. This ends by forever calling
--   <a>acceptCon</a>.
server :: Maybe [Char] -> Int -> String -> (t -> Int) -> (t1 -> t1 -> String) -> (t -> t -> IO t1) -> [ParsecT [Char] () Identity t] -> Maybe t -> IO b
handleEvents :: Handle -> PQueue t -> (t1 -> t1 -> String) -> (t -> t -> IO t1) -> IO ()
acceptCon :: Socket -> Int -> (t -> Int) -> (t1 -> t1 -> String) -> (t -> t -> IO t1) -> [ParsecT [Char] () Identity t] -> Maybe t -> IO ThreadId
recvEvents :: Handle -> PQueue a -> (a -> Int) -> [ParsecT [Char] () Identity a] -> Maybe a -> IO ()
