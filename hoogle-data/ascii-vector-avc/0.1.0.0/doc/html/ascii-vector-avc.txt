-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Process Ascii Vectors for Advantest 93k
--   
@package ascii-vector-avc
@version 0.1.0.0

module Data.Avc.Type

-- | A Signal has a name
data Signal
Sig :: Name -> Signal
SigGroup :: Name -> Signal

-- | May be useful to keep vector comments
data Comment
Comment :: ByteString -> Comment
CNil :: Comment

-- | A statement is a "FORMAT a b c;" definition or a "RXX devcyc vecdata;
--   comment"
data Statement
Repeat :: Rep -> DevCyc -> Vec -> Comment -> Statement
Format :: [Signal] -> Comment -> Statement
EOF :: Statement
instance Show Signal
instance Eq Signal
instance Show Comment
instance Eq Comment
instance Show Statement
instance Eq Statement


-- | Help print Avc types
module Data.Avc.Encode
toString :: Statement -> ByteString

module Data.Avc.Parser

-- | Parse a simple AVC which may be gzipped Only handles simple files with
--   one character per state like:
--   
--   # Begin AVC FORMAT a b c; R10 10X ; vector comment # other comment R10
--   01H ;
parseAvcFile :: FilePath -> IO [Statement]

module Data.Avc

-- | A Signal has a name
data Signal
Sig :: Name -> Signal
SigGroup :: Name -> Signal

-- | May be useful to keep vector comments
data Comment
Comment :: ByteString -> Comment
CNil :: Comment

-- | A statement is a "FORMAT a b c;" definition or a "RXX devcyc vecdata;
--   comment"
data Statement
Repeat :: Rep -> DevCyc -> Vec -> Comment -> Statement
Format :: [Signal] -> Comment -> Statement
EOF :: Statement

-- | Parse a simple AVC which may be gzipped Only handles simple files with
--   one character per state like:
--   
--   # Begin AVC FORMAT a b c; R10 10X ; vector comment # other comment R10
--   01H ;
parseAvcFile :: FilePath -> IO [Statement]
toString :: Statement -> ByteString
