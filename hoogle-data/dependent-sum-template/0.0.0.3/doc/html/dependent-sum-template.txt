-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Template Haskell code to generate instances of classes in dependent-sum package
--   
@package dependent-sum-template
@version 0.0.0.3

module Data.GADT.Show.TH
class DeriveGShow t
deriveGShow :: DeriveGShow t => t -> Q [Dec]
instance DeriveGShow t => DeriveGShow (Q t)
instance DeriveGShow t => DeriveGShow [t]
instance DeriveGShow Dec
instance DeriveGShow Name

module Data.GADT.Compare.TH
class DeriveGEQ t
deriveGEq :: DeriveGEQ t => t -> Q [Dec]
class DeriveGCompare t
deriveGCompare :: DeriveGCompare t => t -> Q [Dec]
data GComparing a b t
runGComparing :: GComparing t t1 (GOrdering * t t1) -> GOrdering * t t1
geq' :: GCompare t => t a -> t b -> GComparing x y (a := b)
compare' :: Ord a1 => a1 -> a1 -> GComparing a b ()
instance DeriveGCompare t => DeriveGCompare (Q t)
instance DeriveGCompare t => DeriveGCompare [t]
instance DeriveGCompare Dec
instance DeriveGCompare Name
instance Applicative (GComparing a b)
instance Monad (GComparing a b)
instance Functor (GComparing a b)
instance DeriveGEQ t => DeriveGEQ (Q t)
instance DeriveGEQ t => DeriveGEQ [t]
instance DeriveGEQ Dec
instance DeriveGEQ Name
