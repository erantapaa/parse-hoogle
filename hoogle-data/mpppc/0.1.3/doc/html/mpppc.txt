-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Multi-dimensional parametric pretty-printer with color
--   
--   Multi-dimensional parametric pretty-printer with color
@package mpppc
@version 0.1.3

module Text.PrettyPrint.MPPPC.TwoDim
align :: Alignment -> Alignment -> Int -> Int -> Pretty s t -> Pretty s t
alignHoriz :: Alignment -> Int -> Pretty s t -> Pretty s t
alignVert :: Alignment -> Int -> Pretty s t -> Pretty s t
bottom :: Alignment
centerTopLeft :: Alignment
centerTopRight :: Alignment
left :: Alignment
moveDown :: Int -> Pretty s t -> Pretty s t
moveLeft :: Int -> Pretty s t -> Pretty s t
moveRight :: Int -> Pretty s t -> Pretty s t
moveUp :: Int -> Pretty s t -> Pretty s t
right :: Alignment
top :: Alignment
data Word s t
Word :: Int -> s -> Word s t
wLen :: Word s t -> Int
getWord :: Word s t -> s
data Line s t
Line :: Int -> [Word s t] -> Line s t
lLen :: Line s t -> Int
getWords :: Line s t -> [Word s t]
data ParaContent s t
ParaContent :: [Line s t] -> Line s t -> ParaContent s t
fullLines :: ParaContent s t -> [Line s t]
lastLine :: ParaContent s t -> Line s t
data Para s t
Para :: Int -> ParaContent s t -> Para s t
paraWidth :: Para s t -> Int
paraContent :: Para s t -> ParaContent s t
para :: Printable s t => Alignment -> Int -> s -> Pretty s t
columns :: Printable s t => Alignment -> Int -> Int -> s -> [Pretty s t]
mkParaBox :: Printable s t => Alignment -> Int -> [s] -> Pretty s t
flow :: Printable s t => Int -> s -> [s]
emptyPara :: Printable s t => Int -> Para s t
getLines :: Para s t -> [s]
mkLine :: Printable s t => [Word s t] -> Line s t
startLine :: Printable s t => Word s t -> Line s t
mkWord :: Printable s t => s -> Word s t
addWordP :: Para s t -> Word s t -> Para s t
addWordL :: Word s t -> Line s t -> Line s t
wordFits :: Int -> Word s t -> Line s t -> Bool
(<>) :: Pretty s t -> Pretty s t -> Pretty s t
(<+>) :: Pretty s t -> Pretty s t -> Pretty s t
(//) :: Pretty s t -> Pretty s t -> Pretty s t
(/+/) :: Pretty s t -> Pretty s t -> Pretty s t
hcat :: Alignment -> [Pretty s t] -> Pretty s t
hsep :: Int -> Alignment -> [Pretty s t] -> Pretty s t
vcat :: Alignment -> [Pretty s t] -> Pretty s t
vsep :: Int -> Alignment -> [Pretty s t] -> Pretty s t
punctuateH :: Alignment -> Pretty s t -> [Pretty s t] -> Pretty s t
punctuateV :: Alignment -> Pretty s t -> [Pretty s t] -> Pretty s t
empty :: Int -> Int -> Pretty s t
char :: Printable s t => t -> Pretty s t
null :: Pretty s t
text :: Printable s t => s -> Pretty s t
hPutPretty :: Printable s t => Handle -> Pretty s t -> IO ()
putPretty :: Printable s t => Pretty s t -> IO ()
data Alignment
AlignFirst :: Alignment
AlignCenterTopLeft :: Alignment
AlignCenterBotRight :: Alignment
AlignLast :: Alignment
data Content s t
Blank :: Content s t
Text :: s -> Content s t
Row :: [Pretty s t] -> Content s t
Col :: [Pretty s t] -> Content s t
Sub :: Alignment -> Alignment -> (Pretty s t) -> Content s t
data Pretty s t
Pretty :: Int -> Int -> Content s t -> Pretty s t
rows :: Pretty s t -> Int
cols :: Pretty s t -> Int
content :: Pretty s t -> Content s t
blanks :: Printable s t => Int -> s
renderPretty :: Printable s t => Pretty s t -> s
renderPrettyLines :: Printable s t => Pretty s t -> [s]
renderPrettyWithRows :: Printable s t => Int -> Pretty s t -> [s]
renderPrettyWithCols :: Printable s t => Int -> Pretty s t -> [s]
resizePretty :: Printable s t => Int -> Int -> [s] -> [s]
resizePrettyAligned :: Printable s t => Int -> Int -> Alignment -> Alignment -> [s] -> [s]
takePad :: Printable s t => s -> Int -> s -> s
takePadList :: Printable s t => s -> Int -> [s] -> [s]
takePadAlign :: Printable s t => Alignment -> s -> Int -> s -> s
takePadAlignList :: Printable s t => Alignment -> s -> Int -> [s] -> [s]
newtype Tok s t
Tok :: t -> Tok s t
unTok :: Tok s t -> t
newtype Seq s t
Seq :: s -> Seq s t
unSeq :: Seq s t -> s
class (Eq s, Eq t, IsString s) => Printable s t | s -> t, t -> s where singleton = (`cons` seqEmpty)
append :: Printable s t => s -> s -> s
chunk :: Printable s t => Int -> s -> [s]
cons :: Printable s t => t -> s -> s
head :: Printable s t => s -> t
hPutTok :: Printable s t => Handle -> t -> IO ()
hPutSeq :: Printable s t => Handle -> s -> IO ()
length :: Printable s t => s -> Int
pack :: Printable s t => String -> s
isNull :: Printable s t => s -> Bool
replicate :: Printable s t => Int -> s -> s
reverse :: Printable s t => s -> s
singleton :: Printable s t => t -> s
seqEmpty :: Printable s t => s
splitAt :: Printable s t => Int -> s -> (s, s)
tail :: Printable s t => s -> s
take :: Printable s t => Int -> s -> s
tokAngleLeft :: Printable s t => t
tokAngleRight :: Printable s t => t
tokBackslash :: Printable s t => t
tokBraceLeft :: Printable s t => t
tokBraceRight :: Printable s t => t
tokBracketLeft :: Printable s t => t
tokBracketRight :: Printable s t => t
tokColon :: Printable s t => t
tokComma :: Printable s t => t
tokDot :: Printable s t => t
tokEquals :: Printable s t => t
tokNewline :: Printable s t => t
tokParenLeft :: Printable s t => t
tokParenRight :: Printable s t => t
tokQuoteDouble :: Printable s t => t
tokQuoteSingle :: Printable s t => t
tokSemi :: Printable s t => t
tokSpace :: Printable s t => t
unlines :: Printable s t => [s] -> s
unwords :: Printable s t => [s] -> s
words :: Printable s t => s -> [s]

module Text.PrettyPrint.MPPPC.OneDim
align :: Pretty s t -> Pretty s t
encloseSep :: Printable s t => Pretty s t -> Pretty s t -> Pretty s t -> [Pretty s t] -> Pretty s t
hang :: Int -> Pretty s t -> Pretty s t
indent :: Printable s t => Int -> Pretty s t -> Pretty s t
list :: Printable s t => [Pretty s t] -> Pretty s t
semiBraces :: Printable s t => [Pretty s t] -> Pretty s t
tupled :: Printable s t => [Pretty s t] -> Pretty s t
black :: Pretty s t -> Pretty s t
red :: Pretty s t -> Pretty s t
green :: Pretty s t -> Pretty s t
yellow :: Pretty s t -> Pretty s t
blue :: Pretty s t -> Pretty s t
magenta :: Pretty s t -> Pretty s t
cyan :: Pretty s t -> Pretty s t
white :: Pretty s t -> Pretty s t
dullBlack :: Pretty s t -> Pretty s t
dullRed :: Pretty s t -> Pretty s t
dullGreen :: Pretty s t -> Pretty s t
dullYellow :: Pretty s t -> Pretty s t
dullBlue :: Pretty s t -> Pretty s t
dullMagenta :: Pretty s t -> Pretty s t
dullCyan :: Pretty s t -> Pretty s t
dullWhite :: Pretty s t -> Pretty s t
onBlack :: Pretty s t -> Pretty s t
onRed :: Pretty s t -> Pretty s t
onGreen :: Pretty s t -> Pretty s t
onYellow :: Pretty s t -> Pretty s t
onBlue :: Pretty s t -> Pretty s t
onMagenta :: Pretty s t -> Pretty s t
onCyan :: Pretty s t -> Pretty s t
onWhite :: Pretty s t -> Pretty s t
onDullBlack :: Pretty s t -> Pretty s t
onDullRed :: Pretty s t -> Pretty s t
onDullGreen :: Pretty s t -> Pretty s t
onDullYellow :: Pretty s t -> Pretty s t
onDullBlue :: Pretty s t -> Pretty s t
onDullMagenta :: Pretty s t -> Pretty s t
onDullCyan :: Pretty s t -> Pretty s t
onDullWhite :: Pretty s t -> Pretty s t
bold :: Pretty s t -> Pretty s t
deBold :: Pretty s t -> Pretty s t
underline :: Pretty s t -> Pretty s t
deUnderline :: Pretty s t -> Pretty s t
width :: Pretty s t -> (Int -> Pretty s t) -> Pretty s t
fill :: Printable s t => Int -> Pretty s t -> Pretty s t
fillBreak :: Printable s t => Int -> Pretty s t -> Pretty s t
fillCat :: Printable s t => [Pretty s t] -> Pretty s t
fillSep :: Printable s t => [Pretty s t] -> Pretty s t
(<>) :: Pretty s t -> Pretty s t -> Pretty s t
(<+>) :: Printable s t => Pretty s t -> Pretty s t -> Pretty s t
(<$$>) :: Pretty s t -> Pretty s t -> Pretty s t
(<//>) :: Printable s t => Pretty s t -> Pretty s t -> Pretty s t
(<$>) :: Pretty s t -> Pretty s t -> Pretty s t
(</>) :: Printable s t => Pretty s t -> Pretty s t -> Pretty s t
beside :: Pretty s t -> Pretty s t -> Pretty s t
cat :: Printable s t => [Pretty s t] -> Pretty s t
column :: (Int -> Pretty s t) -> Pretty s t
fold :: (Pretty s t -> Pretty s t -> Pretty s t) -> [Pretty s t] -> Pretty s t
group :: Printable s t => Pretty s t -> Pretty s t
hcat :: Printable s t => [Pretty s t] -> Pretty s t
hsep :: Printable s t => [Pretty s t] -> Pretty s t
line :: Pretty s t
lineBreak :: Pretty s t
nest :: Int -> Pretty s t -> Pretty s t
nesting :: (Int -> Pretty s t) -> Pretty s t
punctuate :: Pretty s t -> [Pretty s t] -> [Pretty s t]
sep :: Printable s t => [Pretty s t] -> Pretty s t
softLine :: Printable s t => Pretty s t
softBreak :: Printable s t => Pretty s t
vcat :: [Pretty s t] -> Pretty s t
vsep :: [Pretty s t] -> Pretty s t
char :: Printable s t => t -> Pretty s t
empty :: Pretty s t
flatten :: Printable s t => Pretty s t -> Pretty s t
text :: Printable s t => s -> Pretty s t
angles :: Printable s t => Pretty s t -> Pretty s t
braces :: Printable s t => Pretty s t -> Pretty s t
brackets :: Printable s t => Pretty s t -> Pretty s t
enclose :: Printable s t => Pretty s t -> Pretty s t -> Pretty s t -> Pretty s t
parens :: Printable s t => Pretty s t -> Pretty s t
quotesDouble :: Printable s t => Pretty s t -> Pretty s t
quotesSingle :: Printable s t => Pretty s t -> Pretty s t
spaces :: Printable s t => Int -> Pretty s t
angleLeft :: Printable s t => Pretty s t
angleRight :: Printable s t => Pretty s t
backslash :: Printable s t => Pretty s t
braceLeft :: Printable s t => Pretty s t
braceRight :: Printable s t => Pretty s t
bracketLeft :: Printable s t => Pretty s t
bracketRight :: Printable s t => Pretty s t
colon :: Printable s t => Pretty s t
comma :: Printable s t => Pretty s t
dot :: Printable s t => Pretty s t
equals :: Printable s t => Pretty s t
parenLeft :: Printable s t => Pretty s t
parenRight :: Printable s t => Pretty s t
semi :: Printable s t => Pretty s t
space :: Printable s t => Pretty s t
quoteDouble :: Printable s t => Pretty s t
quoteSingle :: Printable s t => Pretty s t
hPutSimplePretty :: Printable s t => Handle -> SimplePretty s t -> IO ()
hPutPretty :: Printable s t => Handle -> Pretty s t -> IO ()
putPretty :: Printable s t => Pretty s t -> IO ()
data FormatState
FormatState :: Maybe (ColorIntensity, Color) -> Maybe (ColorIntensity, Color) -> Maybe ConsoleIntensity -> Maybe Underlining -> FormatState
stForeground :: FormatState -> Maybe (ColorIntensity, Color)
stBackground :: FormatState -> Maybe (ColorIntensity, Color)
stIntensity :: FormatState -> Maybe ConsoleIntensity
stUnderlining :: FormatState -> Maybe Underlining
data Pretty s t
Empty :: Pretty s t
Char :: t -> Pretty s t
Text :: !Int -> s -> Pretty s t
Line :: Bool -> Pretty s t
Cat :: (Pretty s t) -> (Pretty s t) -> Pretty s t
Nest :: Int -> (Pretty s t) -> Pretty s t
Union :: (Pretty s t) -> (Pretty s t) -> Pretty s t
Column :: (Int -> Pretty s t) -> Pretty s t
Nesting :: (Int -> Pretty s t) -> Pretty s t
Color :: ConsoleLayer -> ColorIntensity -> Color -> (Pretty s t) -> Pretty s t
Intensify :: ConsoleIntensity -> (Pretty s t) -> Pretty s t
Underline :: Underlining -> (Pretty s t) -> Pretty s t
RestoreFormat :: FormatState -> Pretty s t
data SimplePretty s t
SimpleEmpty :: SimplePretty s t
SimpleChar :: t -> (SimplePretty s t) -> SimplePretty s t
SimpleText :: Int -> s -> (SimplePretty s t) -> SimplePretty s t
SimpleLine :: Int -> (SimplePretty s t) -> SimplePretty s t
SimpleSGR :: [SGR] -> (SimplePretty s t) -> SimplePretty s t
data Pretties s t
Nil :: Pretties s t
Cons :: !Int -> (Pretty s t) -> (Pretties s t) -> Pretties s t
renderPretty :: Float -> Int -> Pretty s t -> SimplePretty s t
renderCompact :: Pretty s t -> SimplePretty s t
renderSimplePretty :: Printable s t => SimplePretty s t -> s
renderSeq :: Printable s t => Pretty s t -> s
newtype Tok s t
Tok :: t -> Tok s t
unTok :: Tok s t -> t
newtype Seq s t
Seq :: s -> Seq s t
unSeq :: Seq s t -> s
class (Eq s, Eq t, IsString s) => Printable s t | s -> t, t -> s where singleton = (`cons` seqEmpty)
append :: Printable s t => s -> s -> s
chunk :: Printable s t => Int -> s -> [s]
cons :: Printable s t => t -> s -> s
head :: Printable s t => s -> t
hPutTok :: Printable s t => Handle -> t -> IO ()
hPutSeq :: Printable s t => Handle -> s -> IO ()
length :: Printable s t => s -> Int
pack :: Printable s t => String -> s
isNull :: Printable s t => s -> Bool
replicate :: Printable s t => Int -> s -> s
reverse :: Printable s t => s -> s
singleton :: Printable s t => t -> s
seqEmpty :: Printable s t => s
splitAt :: Printable s t => Int -> s -> (s, s)
tail :: Printable s t => s -> s
take :: Printable s t => Int -> s -> s
tokAngleLeft :: Printable s t => t
tokAngleRight :: Printable s t => t
tokBackslash :: Printable s t => t
tokBraceLeft :: Printable s t => t
tokBraceRight :: Printable s t => t
tokBracketLeft :: Printable s t => t
tokBracketRight :: Printable s t => t
tokColon :: Printable s t => t
tokComma :: Printable s t => t
tokDot :: Printable s t => t
tokEquals :: Printable s t => t
tokNewline :: Printable s t => t
tokParenLeft :: Printable s t => t
tokParenRight :: Printable s t => t
tokQuoteDouble :: Printable s t => t
tokQuoteSingle :: Printable s t => t
tokSemi :: Printable s t => t
tokSpace :: Printable s t => t
unlines :: Printable s t => [s] -> s
unwords :: Printable s t => [s] -> s
words :: Printable s t => s -> [s]
