-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Functions that should have been in Debug.Trace
--   
--   Functions that should have been in Debug.Trace
@package TraceUtils
@version 0.1.0.2


-- | This module exposes some useful tracing functions that should have
--   been exported by Debug.Trace.
--   
--   Feel free to copy&amp;paste these functions into modules that need
--   them, that may be easier to remove/clean up than adding a cabal
--   dependency.
module Debug.TraceUtils

-- | Generate an identity function that has the side-effect of showing the
--   value that passes through it.
--   
--   Examples:
--   
--   traceId "x,y = " (x, y)
traceId :: Show a => String -> a -> a

-- | Generate an identity function that has the side-effect of tracing the
--   value that passes through it by first processing it and then showing
--   the result.
--   
--   Examples:
--   
--   traceIdVia (take 5) "First 5 sorted elements of: " result
--   
--   fmap (traceIdVia objName "The object we got") . receiveObject
traceIdVia :: Show b => (a -> b) -> String -> a -> a

-- | Convert a pure function to one that also has a side effect of tracing
--   the value of the input and output values that pass through the
--   function.
--   
--   Examples:
--   
--   traceAround "filterEntries" filterEntries entries
traceAround :: (Show i, Show o) => String -> (i -> o) -> i -> o
tracePutStrLn :: Monad m => String -> m ()
tracePrint :: (Show a, Monad m) => a -> m ()

-- | The <a>trace</a> function outputs the trace message given as its first
--   argument, before returning the second argument as its result.
--   
--   For example, this returns the value of <tt>f x</tt> but first outputs
--   the message.
--   
--   <pre>
--   trace ("calling f with x = " ++ show x) (f x)
--   </pre>
--   
--   The <a>trace</a> function should <i>only</i> be used for debugging, or
--   for monitoring execution. The function is not referentially
--   transparent: its type indicates that it is a pure function but it has
--   the side effect of outputting the trace message.
trace :: String -> a -> a
