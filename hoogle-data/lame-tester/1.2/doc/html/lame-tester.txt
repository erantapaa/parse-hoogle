-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A strange and unnecessary selective test-running library
--   
--   A strange and unnecessary selective test-running library
@package lame-tester
@version 1.2

module Tester.Dialect
class CellBox x
unbox :: CellBox x => x -> [FlagCell]
data FlagCell
ToggleCell :: ToggleFlag -> FlagCell
flag :: FlagCell -> ToggleFlag
DontRun :: Int -> FlagCell
num :: FlagCell -> Int
Run :: Int -> FlagCell
num :: FlagCell -> Int
data FlagCells
FlagCells :: [FlagCell] -> FlagCells
cells :: FlagCells -> [FlagCell]
data ToggleFlag
StackTrace :: ToggleFlag
andAlso :: (CellBox a, CellBox b) => a -> b -> FlagCells
butAlso :: (CellBox a, CellBox b) => a -> b -> FlagCells
excludingTo :: Int -> Int -> FlagCells
runningTo :: Int -> Int -> FlagCells
instance Eq ToggleFlag
instance Show ToggleFlag
instance Eq FlagCell
instance Show FlagCell
instance Eq FlagCells
instance Show FlagCells
instance Ord FlagCell
instance CellBox ToggleFlag
instance CellBox FlagCell
instance CellBox FlagCells

module Tester.RunSettings
data Settings
Settings :: Set Int -> Bool -> Settings
testNums :: Settings -> Set Int
isStackTracing :: Settings -> Bool
cellsToSettings :: CellBox x => x -> Settings
instance Eq Settings
instance Show Settings

module Tester.Suite
type Result f s = Validation (NonEmpty f) s
runTests :: FlagCells -> (Suite a b c) -> [TestResult]
data Suite a b c
Suite :: Map Int a -> (a -> Result b c) -> (NonEmpty b -> String) -> (c -> String) -> Suite a b c
testMap :: Suite a b c -> Map Int a
runTest :: Suite a b c -> a -> Result b c
failsToStr :: Suite a b c -> NonEmpty b -> String
succToStr :: Suite a b c -> c -> String
data TestResult
TestSuccess :: TestResult
TestFailure :: String -> TestResult
msg :: TestResult -> String
unsafeRunTests :: FlagCells -> (Suite a b c) -> [TestResult]
instance Eq TestResult
instance Show TestResult
instance Monoid TestResult
