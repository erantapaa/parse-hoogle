-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Create the publicsuffixlist package
--   
--   Create the publicsuffixlist package. This is broken out into its own
--   package so users of the publicsuffixlist package don't have to depend
--   on ICU.
@package publicsuffixlistcreate
@version 0.0.2


-- | This script parses the public suffix list, and constructs a data
--   structure which can be used with the isSuffix function in Lookup.hs.
--   It exports a GSink which produces the opaque <a>DataStructure</a> and
--   can be fed any Source as input.
--   
--   This makes an few assumption about the information in the public
--   suffix list: namely, that no rule is a suffix of another rule. For
--   example, if there is a rule abc.def.ghi then then is no other rule
--   def.ghi or !def.ghi
--   
--   The actual data structure involved here is a tree where the nodes have
--   no value and the edges are DNS labels. There are two trees: one to
--   handle the exception rules, and one to handle the regular rules.
module Network.PublicSuffixList.Create
data PublicSuffixListException
sink :: MonadThrow m => GSink ByteString m DataStructure
instance Typeable PublicSuffixListException
instance Show PublicSuffixListException
instance Exception PublicSuffixListException
