-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Amazon Data Pipeline SDK.
--   
@package amazonka-datapipeline
@version 0.3.6

module Network.AWS.DataPipeline.Types

-- | Version <tt>2012-10-29</tt> of the Amazon Data Pipeline service.
data DataPipeline
data JSONError :: *
data ParameterObject

-- | <a>ParameterObject</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>poAttributes</a> <tt>::</tt> [<a>ParameterAttribute</a>]</li>
--   <li><a>poId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
parameterObject :: Text -> ParameterObject

-- | The attributes of the parameter object.
poAttributes :: Lens' ParameterObject [ParameterAttribute]

-- | The ID of the parameter object.
poId :: Lens' ParameterObject Text
data PipelineObject

-- | <a>PipelineObject</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>po1Fields</a> <tt>::</tt> [<a>Field</a>]</li>
--   <li><a>po1Id</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>po1Name</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
pipelineObject :: Text -> Text -> PipelineObject

-- | Key-value pairs that define the properties of the object.
po1Fields :: Lens' PipelineObject [Field]

-- | The ID of the object.
po1Id :: Lens' PipelineObject Text

-- | The name of the object.
po1Name :: Lens' PipelineObject Text
data Tag

-- | <a>Tag</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>tagKey</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>tagValue</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
tag :: Text -> Text -> Tag

-- | The key name of a tag defined by a user. For more information, see
--   <a>Controlling User Access to Pipelines</a> in the <i>AWS Data
--   Pipeline Developer Guide</i>.
tagKey :: Lens' Tag Text

-- | The optional value portion of a tag defined by a user. For more
--   information, see <a>Controlling User Access to Pipelines</a> in the
--   <i>AWS Data Pipeline DeveloperGuide</i>.
tagValue :: Lens' Tag Text
data Field

-- | <a>Field</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>fKey</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>fRefValue</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>fStringValue</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
field :: Text -> Field

-- | The field identifier.
fKey :: Lens' Field Text

-- | The field value, expressed as the identifier of another object.
fRefValue :: Lens' Field (Maybe Text)

-- | The field value, expressed as a String.
fStringValue :: Lens' Field (Maybe Text)
data ParameterValue

-- | <a>ParameterValue</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pvId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>pvStringValue</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
parameterValue :: Text -> Text -> ParameterValue

-- | The ID of the parameter value.
pvId :: Lens' ParameterValue Text

-- | The field value, expressed as a String.
pvStringValue :: Lens' ParameterValue Text
data Selector

-- | <a>Selector</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sFieldName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>sOperator</a> <tt>::</tt> <a>Maybe</a> <a>Operator</a></li>
--   </ul>
selector :: Selector

-- | The name of the field that the operator will be applied to. The field
--   name is the "key" portion of the field definition in the pipeline
--   definition syntax that is used by the AWS Data Pipeline API. If the
--   field is not set on the object, the condition fails.
sFieldName :: Lens' Selector (Maybe Text)
sOperator :: Lens' Selector (Maybe Operator)
data ParameterAttribute

-- | <a>ParameterAttribute</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>paKey</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>paStringValue</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
parameterAttribute :: Text -> Text -> ParameterAttribute

-- | The field identifier.
paKey :: Lens' ParameterAttribute Text

-- | The field value, expressed as a String.
paStringValue :: Lens' ParameterAttribute Text
data Operator

-- | <a>Operator</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>oType</a> <tt>::</tt> <a>Maybe</a> <a>OperatorType</a></li>
--   <li><a>oValues</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
operator :: Operator

-- | The logical operation to be performed: equal (<a>EQ</a>), equal
--   reference (<tt>REF_EQ</tt>), less than or equal (<tt>LE</tt>), greater
--   than or equal (<tt>GE</tt>), or between (<tt>BETWEEN</tt>). Equal
--   reference (<tt>REF_EQ</tt>) can be used only with reference fields.
--   The other comparison types can be used only with String fields. The
--   comparison types you can use apply only to certain object fields, as
--   detailed below.
--   
--   The comparison operators EQ and REF_EQ act on the following fields:
--   
--   name <tt>sphere parent </tt>componentParent <tt>instanceParent
--   </tt>status <tt>scheduledStartTime </tt>scheduledEndTime
--   <tt>actualStartTime </tt>actualEndTime The comparison operators
--   <tt>GE</tt>, <tt>LE</tt>, and <tt>BETWEEN</tt> act on the following
--   fields:
--   
--   <tt>scheduledStartTime </tt>scheduledEndTime <tt>actualStartTime
--   </tt>actualEndTime Note that fields beginning with the at sign (@) are
--   read-only and set by the web service. When you name fields, you should
--   choose names containing only alpha-numeric values, as symbols may be
--   reserved by AWS Data Pipeline. User-defined fields that you add to a
--   pipeline should prefix their name with the string "my".
oType :: Lens' Operator (Maybe OperatorType)

-- | The value that the actual field value will be compared with.
oValues :: Lens' Operator [Text]
data TaskObject

-- | <a>TaskObject</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>toAttemptId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>toObjects</a> <tt>::</tt> <a>HashMap</a> <a>Text</a>
--   <a>PipelineObject</a></li>
--   <li><a>toPipelineId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>toTaskId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
taskObject :: TaskObject

-- | The ID of the pipeline task attempt object. AWS Data Pipeline uses
--   this value to track how many times a task is attempted.
toAttemptId :: Lens' TaskObject (Maybe Text)

-- | Connection information for the location where the task runner will
--   publish the output of the task.
toObjects :: Lens' TaskObject (HashMap Text PipelineObject)

-- | The ID of the pipeline that provided the task.
toPipelineId :: Lens' TaskObject (Maybe Text)

-- | An internal identifier for the task. This ID is passed to the
--   <tt>SetTaskStatus</tt> and <tt>ReportTaskProgress</tt> actions.
toTaskId :: Lens' TaskObject (Maybe Text)
data ValidationError

-- | <a>ValidationError</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>veErrors</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>veId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
validationError :: ValidationError

-- | A description of the validation error.
veErrors :: Lens' ValidationError [Text]

-- | The identifier of the object that contains the validation error.
veId :: Lens' ValidationError (Maybe Text)
data PipelineDescription

-- | <a>PipelineDescription</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pdDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pdFields</a> <tt>::</tt> [<a>Field</a>]</li>
--   <li><a>pdName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>pdPipelineId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>pdTags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   </ul>
pipelineDescription :: Text -> Text -> PipelineDescription

-- | Description of the pipeline.
pdDescription :: Lens' PipelineDescription (Maybe Text)

-- | A list of read-only fields that contain metadata about the pipeline:
--   <tt>userId, </tt>accountId, and @pipelineState.
pdFields :: Lens' PipelineDescription [Field]

-- | The name of the pipeline.
pdName :: Lens' PipelineDescription Text

-- | The pipeline identifier that was assigned by AWS Data Pipeline. This
--   is a string of the form 'df-297EG78HU43EEXAMPLE'.
pdPipelineId :: Lens' PipelineDescription Text

-- | A list of tags to associated with a pipeline. Tags let you control
--   access to pipelines. For more information, see <a>Controlling User
--   Access to Pipelines</a> in the <i>AWS Data Pipeline Developer
--   Guide</i>.
pdTags :: Lens' PipelineDescription [Tag]
data InstanceIdentity

-- | <a>InstanceIdentity</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>iiDocument</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iiSignature</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
instanceIdentity :: InstanceIdentity

-- | A description of an EC2 instance that is generated when the instance
--   is launched and exposed to the instance via the instance metadata
--   service in the form of a JSON representation of an object.
iiDocument :: Lens' InstanceIdentity (Maybe Text)

-- | A signature which can be used to verify the accuracy and authenticity
--   of the information provided in the instance identity document.
iiSignature :: Lens' InstanceIdentity (Maybe Text)
data Query

-- | <a>Query</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>qSelectors</a> <tt>::</tt> [<a>Selector</a>]</li>
--   </ul>
query :: Query

-- | List of selectors that define the query. An object must satisfy all of
--   the selectors to match the query.
qSelectors :: Lens' Query [Selector]
data OperatorType

-- | BETWEEN
OperatorBetween :: OperatorType

-- | EQ
OperatorEq :: OperatorType

-- | GE
OperatorGe :: OperatorType

-- | LE
OperatorLe :: OperatorType

-- | REF_EQ
OperatorRefEq :: OperatorType
data PipelineIdName

-- | <a>PipelineIdName</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pinId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pinName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
pipelineIdName :: PipelineIdName

-- | The ID of the pipeline that was assigned by AWS Data Pipeline. This is
--   a string of the form 'df-297EG78HU43EEXAMPLE'.
pinId :: Lens' PipelineIdName (Maybe Text)

-- | The name of the pipeline.
pinName :: Lens' PipelineIdName (Maybe Text)
data TaskStatus

-- | FAILED
Failed :: TaskStatus

-- | FALSE
False' :: TaskStatus

-- | FINISHED
Finished :: TaskStatus
data ValidationWarning

-- | <a>ValidationWarning</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vwId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>vwWarnings</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
validationWarning :: ValidationWarning

-- | The identifier of the object that contains the validation warning.
vwId :: Lens' ValidationWarning (Maybe Text)

-- | A description of the validation warning.
vwWarnings :: Lens' ValidationWarning [Text]
instance Eq Tag
instance Ord Tag
instance Read Tag
instance Show Tag
instance Eq Field
instance Ord Field
instance Read Field
instance Show Field
instance Eq PipelineObject
instance Read PipelineObject
instance Show PipelineObject
instance Eq ParameterValue
instance Ord ParameterValue
instance Read ParameterValue
instance Show ParameterValue
instance Eq ParameterAttribute
instance Ord ParameterAttribute
instance Read ParameterAttribute
instance Show ParameterAttribute
instance Eq ParameterObject
instance Read ParameterObject
instance Show ParameterObject
instance Eq TaskObject
instance Read TaskObject
instance Show TaskObject
instance Eq ValidationError
instance Ord ValidationError
instance Read ValidationError
instance Show ValidationError
instance Eq PipelineDescription
instance Read PipelineDescription
instance Show PipelineDescription
instance Eq InstanceIdentity
instance Ord InstanceIdentity
instance Read InstanceIdentity
instance Show InstanceIdentity
instance Eq OperatorType
instance Ord OperatorType
instance Read OperatorType
instance Show OperatorType
instance Generic OperatorType
instance Enum OperatorType
instance Eq Operator
instance Read Operator
instance Show Operator
instance Eq Selector
instance Read Selector
instance Show Selector
instance Eq Query
instance Read Query
instance Show Query
instance Monoid Query
instance Semigroup Query
instance Eq PipelineIdName
instance Ord PipelineIdName
instance Read PipelineIdName
instance Show PipelineIdName
instance Eq TaskStatus
instance Ord TaskStatus
instance Read TaskStatus
instance Show TaskStatus
instance Generic TaskStatus
instance Enum TaskStatus
instance Eq ValidationWarning
instance Ord ValidationWarning
instance Read ValidationWarning
instance Show ValidationWarning
instance Datatype D1OperatorType
instance Constructor C1_0OperatorType
instance Constructor C1_1OperatorType
instance Constructor C1_2OperatorType
instance Constructor C1_3OperatorType
instance Constructor C1_4OperatorType
instance Datatype D1TaskStatus
instance Constructor C1_0TaskStatus
instance Constructor C1_1TaskStatus
instance Constructor C1_2TaskStatus
instance ToJSON ValidationWarning
instance FromJSON ValidationWarning
instance ToJSON TaskStatus
instance FromJSON TaskStatus
instance ToQuery TaskStatus
instance ToHeader TaskStatus
instance ToByteString TaskStatus
instance ToText TaskStatus
instance FromText TaskStatus
instance Hashable TaskStatus
instance ToJSON PipelineIdName
instance FromJSON PipelineIdName
instance ToJSON OperatorType
instance FromJSON OperatorType
instance ToQuery OperatorType
instance ToHeader OperatorType
instance ToByteString OperatorType
instance ToText OperatorType
instance FromText OperatorType
instance Hashable OperatorType
instance ToJSON Query
instance FromJSON Query
instance IsList Query
instance ToJSON InstanceIdentity
instance FromJSON InstanceIdentity
instance ToJSON PipelineDescription
instance FromJSON PipelineDescription
instance ToJSON ValidationError
instance FromJSON ValidationError
instance ToJSON TaskObject
instance FromJSON TaskObject
instance ToJSON Operator
instance FromJSON Operator
instance ToJSON ParameterAttribute
instance FromJSON ParameterAttribute
instance ToJSON Selector
instance FromJSON Selector
instance ToJSON ParameterValue
instance FromJSON ParameterValue
instance ToJSON Field
instance FromJSON Field
instance ToJSON Tag
instance FromJSON Tag
instance ToJSON PipelineObject
instance FromJSON PipelineObject
instance ToJSON ParameterObject
instance FromJSON ParameterObject
instance AWSService DataPipeline


-- | Validates the specified pipeline definition to ensure that it is well
--   formed and can be run without error.
--   
--   
--   <a>http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_ValidatePipelineDefinition.html</a>
module Network.AWS.DataPipeline.ValidatePipelineDefinition
data ValidatePipelineDefinition

-- | <a>ValidatePipelineDefinition</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vpdParameterObjects</a> <tt>::</tt>
--   [<a>ParameterObject</a>]</li>
--   <li><a>vpdParameterValues</a> <tt>::</tt> [<a>ParameterValue</a>]</li>
--   <li><a>vpdPipelineId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>vpdPipelineObjects</a> <tt>::</tt> [<a>PipelineObject</a>]</li>
--   </ul>
validatePipelineDefinition :: Text -> ValidatePipelineDefinition

-- | The parameter objects used with the pipeline.
vpdParameterObjects :: Lens' ValidatePipelineDefinition [ParameterObject]

-- | The parameter values used with the pipeline.
vpdParameterValues :: Lens' ValidatePipelineDefinition [ParameterValue]

-- | The ID of the pipeline.
vpdPipelineId :: Lens' ValidatePipelineDefinition Text

-- | The objects that define the pipeline changes to validate against the
--   pipeline.
vpdPipelineObjects :: Lens' ValidatePipelineDefinition [PipelineObject]
data ValidatePipelineDefinitionResponse

-- | <a>ValidatePipelineDefinitionResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vpdrErrored</a> <tt>::</tt> <a>Bool</a></li>
--   <li><a>vpdrValidationErrors</a> <tt>::</tt>
--   [<a>ValidationError</a>]</li>
--   <li><a>vpdrValidationWarnings</a> <tt>::</tt>
--   [<a>ValidationWarning</a>]</li>
--   </ul>
validatePipelineDefinitionResponse :: Bool -> ValidatePipelineDefinitionResponse

-- | Indicates whether there were validation errors.
vpdrErrored :: Lens' ValidatePipelineDefinitionResponse Bool

-- | Any validation errors that were found.
vpdrValidationErrors :: Lens' ValidatePipelineDefinitionResponse [ValidationError]

-- | Any validation warnings that were found.
vpdrValidationWarnings :: Lens' ValidatePipelineDefinitionResponse [ValidationWarning]
instance Eq ValidatePipelineDefinition
instance Read ValidatePipelineDefinition
instance Show ValidatePipelineDefinition
instance Eq ValidatePipelineDefinitionResponse
instance Read ValidatePipelineDefinitionResponse
instance Show ValidatePipelineDefinitionResponse
instance FromJSON ValidatePipelineDefinitionResponse
instance AWSRequest ValidatePipelineDefinition
instance ToJSON ValidatePipelineDefinition
instance ToHeaders ValidatePipelineDefinition
instance ToQuery ValidatePipelineDefinition
instance ToPath ValidatePipelineDefinition


-- | Task runners call <a>SetTaskStatus</a> to notify AWS Data Pipeline
--   that a task is completed and provide information about the final
--   status. A task runner makes this call regardless of whether the task
--   was sucessful. A task runner does not need to call
--   <a>SetTaskStatus</a> for tasks that are canceled by the web service
--   during a call to <tt>ReportTaskProgress</tt>.
--   
--   
--   <a>http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_SetTaskStatus.html</a>
module Network.AWS.DataPipeline.SetTaskStatus
data SetTaskStatus

-- | <a>SetTaskStatus</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>stsErrorId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>stsErrorMessage</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>stsErrorStackTrace</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>stsTaskId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>stsTaskStatus</a> <tt>::</tt> <a>TaskStatus</a></li>
--   </ul>
setTaskStatus :: Text -> TaskStatus -> SetTaskStatus

-- | If an error occurred during the task, this value specifies the error
--   code. This value is set on the physical attempt object. It is used to
--   display error information to the user. It should not start with string
--   <a>Service_</a> which is reserved by the system.
stsErrorId :: Lens' SetTaskStatus (Maybe Text)

-- | If an error occurred during the task, this value specifies a text
--   description of the error. This value is set on the physical attempt
--   object. It is used to display error information to the user. The web
--   service does not parse this value.
stsErrorMessage :: Lens' SetTaskStatus (Maybe Text)

-- | If an error occurred during the task, this value specifies the stack
--   trace associated with the error. This value is set on the physical
--   attempt object. It is used to display error information to the user.
--   The web service does not parse this value.
stsErrorStackTrace :: Lens' SetTaskStatus (Maybe Text)

-- | The ID of the task assigned to the task runner. This value is provided
--   in the response for <tt>PollForTask</tt>.
stsTaskId :: Lens' SetTaskStatus Text

-- | If <tt>FINISHED</tt>, the task successfully completed. If
--   <tt>FAILED</tt>, the task ended unsuccessfully. Preconditions use
--   false.
stsTaskStatus :: Lens' SetTaskStatus TaskStatus
data SetTaskStatusResponse

-- | <a>SetTaskStatusResponse</a> constructor.
setTaskStatusResponse :: SetTaskStatusResponse
instance Eq SetTaskStatus
instance Read SetTaskStatus
instance Show SetTaskStatus
instance Eq SetTaskStatusResponse
instance Ord SetTaskStatusResponse
instance Read SetTaskStatusResponse
instance Show SetTaskStatusResponse
instance Generic SetTaskStatusResponse
instance Datatype D1SetTaskStatusResponse
instance Constructor C1_0SetTaskStatusResponse
instance AWSRequest SetTaskStatus
instance ToJSON SetTaskStatus
instance ToHeaders SetTaskStatus
instance ToQuery SetTaskStatus
instance ToPath SetTaskStatus


-- | Requests that the status of the specified physical or logical pipeline
--   objects be updated in the specified pipeline. This update might not
--   occur immediately, but is eventually consistent. The status that can
--   be set depends on the type of object (for example, DataNode or
--   Activity). You cannot perform this operation on <tt>FINISHED</tt>
--   pipelines and attempting to do so returns
--   <tt>InvalidRequestException</tt>.
--   
--   
--   <a>http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_SetStatus.html</a>
module Network.AWS.DataPipeline.SetStatus
data SetStatus

-- | <a>SetStatus</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ssObjectIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>ssPipelineId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ssStatus</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
setStatus :: Text -> Text -> SetStatus

-- | The IDs of the objects. The corresponding objects can be either
--   physical or components, but not a mix of both types.
ssObjectIds :: Lens' SetStatus [Text]

-- | The ID of the pipeline that contains the objects.
ssPipelineId :: Lens' SetStatus Text

-- | The status to be set on all the objects specified in
--   <tt>objectIds</tt>. For components, use <tt>PAUSE</tt> or
--   <tt>RESUME</tt>. For instances, use <tt>TRY_CANCEL</tt>,
--   <tt>RERUN</tt>, or <tt>MARK_FINISHED</tt>.
ssStatus :: Lens' SetStatus Text
data SetStatusResponse

-- | <a>SetStatusResponse</a> constructor.
setStatusResponse :: SetStatusResponse
instance Eq SetStatus
instance Ord SetStatus
instance Read SetStatus
instance Show SetStatus
instance Eq SetStatusResponse
instance Ord SetStatusResponse
instance Read SetStatusResponse
instance Show SetStatusResponse
instance Generic SetStatusResponse
instance Datatype D1SetStatusResponse
instance Constructor C1_0SetStatusResponse
instance AWSRequest SetStatus
instance ToJSON SetStatus
instance ToHeaders SetStatus
instance ToQuery SetStatus
instance ToPath SetStatus


-- | Task runners call <a>ReportTaskRunnerHeartbeat</a> every 15 minutes to
--   indicate that they are operational. If the AWS Data Pipeline Task
--   Runner is launched on a resource managed by AWS Data Pipeline, the web
--   service can use this call to detect when the task runner application
--   has failed and restart a new instance.
--   
--   
--   <a>http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_ReportTaskRunnerHeartbeat.html</a>
module Network.AWS.DataPipeline.ReportTaskRunnerHeartbeat
data ReportTaskRunnerHeartbeat

-- | <a>ReportTaskRunnerHeartbeat</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rtrhHostname</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rtrhTaskrunnerId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rtrhWorkerGroup</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
reportTaskRunnerHeartbeat :: Text -> ReportTaskRunnerHeartbeat

-- | The public DNS name of the task runner.
rtrhHostname :: Lens' ReportTaskRunnerHeartbeat (Maybe Text)

-- | The ID of the task runner. This value should be unique across your AWS
--   account. In the case of AWS Data Pipeline Task Runner launched on a
--   resource managed by AWS Data Pipeline, the web service provides a
--   unique identifier when it launches the application. If you have
--   written a custom task runner, you should assign a unique identifier
--   for the task runner.
rtrhTaskrunnerId :: Lens' ReportTaskRunnerHeartbeat Text

-- | The type of task the task runner is configured to accept and process.
--   The worker group is set as a field on objects in the pipeline when
--   they are created. You can only specify a single value for
--   <tt>workerGroup</tt>. There are no wildcard values permitted in
--   <tt>workerGroup</tt>; the string must be an exact, case-sensitive,
--   match.
rtrhWorkerGroup :: Lens' ReportTaskRunnerHeartbeat (Maybe Text)
data ReportTaskRunnerHeartbeatResponse

-- | <a>ReportTaskRunnerHeartbeatResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rtrhrTerminate</a> <tt>::</tt> <a>Bool</a></li>
--   </ul>
reportTaskRunnerHeartbeatResponse :: Bool -> ReportTaskRunnerHeartbeatResponse

-- | Indicates whether the calling task runner should terminate.
rtrhrTerminate :: Lens' ReportTaskRunnerHeartbeatResponse Bool
instance Eq ReportTaskRunnerHeartbeat
instance Ord ReportTaskRunnerHeartbeat
instance Read ReportTaskRunnerHeartbeat
instance Show ReportTaskRunnerHeartbeat
instance Eq ReportTaskRunnerHeartbeatResponse
instance Ord ReportTaskRunnerHeartbeatResponse
instance Read ReportTaskRunnerHeartbeatResponse
instance Show ReportTaskRunnerHeartbeatResponse
instance Enum ReportTaskRunnerHeartbeatResponse
instance FromJSON ReportTaskRunnerHeartbeatResponse
instance AWSRequest ReportTaskRunnerHeartbeat
instance ToJSON ReportTaskRunnerHeartbeat
instance ToHeaders ReportTaskRunnerHeartbeat
instance ToQuery ReportTaskRunnerHeartbeat
instance ToPath ReportTaskRunnerHeartbeat


-- | Task runners call <a>ReportTaskProgress</a> when assigned a task to
--   acknowledge that it has the task. If the web service does not receive
--   this acknowledgement within 2 minutes, it assigns the task in a
--   subsequent <tt>PollForTask</tt> call. After this initial
--   acknowledgement, the task runner only needs to report progress every
--   15 minutes to maintain its ownership of the task. You can change this
--   reporting time from 15 minutes by specifying a
--   <tt>reportProgressTimeout</tt> field in your pipeline.
--   
--   If a task runner does not report its status after 5 minutes, AWS Data
--   Pipeline assumes that the task runner is unable to process the task
--   and reassigns the task in a subsequent response to
--   <tt>PollForTask</tt>. Task runners should call
--   <a>ReportTaskProgress</a> every 60 seconds.
--   
--   
--   <a>http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_ReportTaskProgress.html</a>
module Network.AWS.DataPipeline.ReportTaskProgress
data ReportTaskProgress

-- | <a>ReportTaskProgress</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rtpFields</a> <tt>::</tt> [<a>Field</a>]</li>
--   <li><a>rtpTaskId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
reportTaskProgress :: Text -> ReportTaskProgress

-- | Key-value pairs that define the properties of the
--   ReportTaskProgressInput object.
rtpFields :: Lens' ReportTaskProgress [Field]

-- | The ID of the task assigned to the task runner. This value is provided
--   in the response for <tt>PollForTask</tt>.
rtpTaskId :: Lens' ReportTaskProgress Text
data ReportTaskProgressResponse

-- | <a>ReportTaskProgressResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rtprCanceled</a> <tt>::</tt> <a>Bool</a></li>
--   </ul>
reportTaskProgressResponse :: Bool -> ReportTaskProgressResponse

-- | If true, the calling task runner should cancel processing of the task.
--   The task runner does not need to call <tt>SetTaskStatus</tt> for
--   canceled tasks.
rtprCanceled :: Lens' ReportTaskProgressResponse Bool
instance Eq ReportTaskProgress
instance Read ReportTaskProgress
instance Show ReportTaskProgress
instance Eq ReportTaskProgressResponse
instance Ord ReportTaskProgressResponse
instance Read ReportTaskProgressResponse
instance Show ReportTaskProgressResponse
instance Enum ReportTaskProgressResponse
instance FromJSON ReportTaskProgressResponse
instance AWSRequest ReportTaskProgress
instance ToJSON ReportTaskProgress
instance ToHeaders ReportTaskProgress
instance ToQuery ReportTaskProgress
instance ToPath ReportTaskProgress


-- | Removes existing tags from the specified pipeline.
--   
--   
--   <a>http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_RemoveTags.html</a>
module Network.AWS.DataPipeline.RemoveTags
data RemoveTags

-- | <a>RemoveTags</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rtPipelineId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rtTagKeys</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
removeTags :: Text -> RemoveTags

-- | The ID of the pipeline.
rtPipelineId :: Lens' RemoveTags Text

-- | The keys of the tags to remove.
rtTagKeys :: Lens' RemoveTags [Text]
data RemoveTagsResponse

-- | <a>RemoveTagsResponse</a> constructor.
removeTagsResponse :: RemoveTagsResponse
instance Eq RemoveTags
instance Ord RemoveTags
instance Read RemoveTags
instance Show RemoveTags
instance Eq RemoveTagsResponse
instance Ord RemoveTagsResponse
instance Read RemoveTagsResponse
instance Show RemoveTagsResponse
instance Generic RemoveTagsResponse
instance Datatype D1RemoveTagsResponse
instance Constructor C1_0RemoveTagsResponse
instance AWSRequest RemoveTags
instance ToJSON RemoveTags
instance ToHeaders RemoveTags
instance ToQuery RemoveTags
instance ToPath RemoveTags


-- | Queries the specified pipeline for the names of objects that match the
--   specified set of conditions.
--   
--   
--   <a>http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_QueryObjects.html</a>
module Network.AWS.DataPipeline.QueryObjects
data QueryObjects

-- | <a>QueryObjects</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>qoLimit</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>qoMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>qoPipelineId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>qoQuery</a> <tt>::</tt> <a>Maybe</a> <a>Query</a></li>
--   <li><a>qoSphere</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
queryObjects :: Text -> Text -> QueryObjects

-- | The maximum number of object names that <a>QueryObjects</a> will
--   return in a single call. The default value is 100.
qoLimit :: Lens' QueryObjects (Maybe Int)

-- | The starting point for the results to be returned. For the first call,
--   this value should be empty. As long as there are more results,
--   continue to call <a>QueryObjects</a> with the marker value from the
--   previous call to retrieve the next set of results.
qoMarker :: Lens' QueryObjects (Maybe Text)

-- | The ID of the pipeline.
qoPipelineId :: Lens' QueryObjects Text

-- | The query that defines the objects to be returned. The <a>Query</a>
--   object can contain a maximum of ten selectors. The conditions in the
--   query are limited to top-level String fields in the object. These
--   filters can be applied to components, instances, and attempts.
qoQuery :: Lens' QueryObjects (Maybe Query)

-- | Indicates whether the query applies to components or instances. The
--   possible values are: <tt>COMPONENT</tt>, <tt>INSTANCE</tt>, and
--   <tt>ATTEMPT</tt>.
qoSphere :: Lens' QueryObjects Text
data QueryObjectsResponse

-- | <a>QueryObjectsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>qorHasMoreResults</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>qorIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>qorMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
queryObjectsResponse :: QueryObjectsResponse

-- | Indicates whether there are more results that can be obtained by a
--   subsequent call.
qorHasMoreResults :: Lens' QueryObjectsResponse (Maybe Bool)

-- | The identifiers that match the query selectors.
qorIds :: Lens' QueryObjectsResponse [Text]

-- | The starting point for the next page of results. To view the next page
--   of results, call <a>QueryObjects</a> again with this marker value. If
--   the value is null, there are no more results.
qorMarker :: Lens' QueryObjectsResponse (Maybe Text)
instance Eq QueryObjects
instance Read QueryObjects
instance Show QueryObjects
instance Eq QueryObjectsResponse
instance Ord QueryObjectsResponse
instance Read QueryObjectsResponse
instance Show QueryObjectsResponse
instance AWSPager QueryObjects
instance FromJSON QueryObjectsResponse
instance AWSRequest QueryObjects
instance ToJSON QueryObjects
instance ToHeaders QueryObjects
instance ToQuery QueryObjects
instance ToPath QueryObjects


-- | Adds tasks, schedules, and preconditions to the specified pipeline.
--   You can use <a>PutPipelineDefinition</a> to populate a new pipeline.
--   
--   <a>PutPipelineDefinition</a> also validates the configuration as it
--   adds it to the pipeline. Changes to the pipeline are saved unless one
--   of the following three validation errors exists in the pipeline.
--   
--   An object is missing a name or identifier field. A string or reference
--   field is empty. The number of objects in the pipeline exceeds the
--   maximum allowed objects. The pipeline is in a FINISHED state. Pipeline
--   object definitions are passed to the <a>PutPipelineDefinition</a>
--   action and returned by the <tt>GetPipelineDefinition</tt> action.
--   
--   
--   <a>http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_PutPipelineDefinition.html</a>
module Network.AWS.DataPipeline.PutPipelineDefinition
data PutPipelineDefinition

-- | <a>PutPipelineDefinition</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ppdParameterObjects</a> <tt>::</tt>
--   [<a>ParameterObject</a>]</li>
--   <li><a>ppdParameterValues</a> <tt>::</tt> [<a>ParameterValue</a>]</li>
--   <li><a>ppdPipelineId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ppdPipelineObjects</a> <tt>::</tt> [<a>PipelineObject</a>]</li>
--   </ul>
putPipelineDefinition :: Text -> PutPipelineDefinition

-- | The parameter objects used with the pipeline.
ppdParameterObjects :: Lens' PutPipelineDefinition [ParameterObject]

-- | The parameter values used with the pipeline.
ppdParameterValues :: Lens' PutPipelineDefinition [ParameterValue]

-- | The ID of the pipeline.
ppdPipelineId :: Lens' PutPipelineDefinition Text

-- | The objects that define the pipeline. These objects overwrite the
--   existing pipeline definition.
ppdPipelineObjects :: Lens' PutPipelineDefinition [PipelineObject]
data PutPipelineDefinitionResponse

-- | <a>PutPipelineDefinitionResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ppdrErrored</a> <tt>::</tt> <a>Bool</a></li>
--   <li><a>ppdrValidationErrors</a> <tt>::</tt>
--   [<a>ValidationError</a>]</li>
--   <li><a>ppdrValidationWarnings</a> <tt>::</tt>
--   [<a>ValidationWarning</a>]</li>
--   </ul>
putPipelineDefinitionResponse :: Bool -> PutPipelineDefinitionResponse

-- | Indicates whether there were validation errors, and the pipeline
--   definition is stored but cannot be activated until you correct the
--   pipeline and call <a>PutPipelineDefinition</a> to commit the corrected
--   pipeline.
ppdrErrored :: Lens' PutPipelineDefinitionResponse Bool

-- | The validation errors that are associated with the objects defined in
--   <tt>pipelineObjects</tt>.
ppdrValidationErrors :: Lens' PutPipelineDefinitionResponse [ValidationError]

-- | The validation warnings that are associated with the objects defined
--   in <tt>pipelineObjects</tt>.
ppdrValidationWarnings :: Lens' PutPipelineDefinitionResponse [ValidationWarning]
instance Eq PutPipelineDefinition
instance Read PutPipelineDefinition
instance Show PutPipelineDefinition
instance Eq PutPipelineDefinitionResponse
instance Read PutPipelineDefinitionResponse
instance Show PutPipelineDefinitionResponse
instance FromJSON PutPipelineDefinitionResponse
instance AWSRequest PutPipelineDefinition
instance ToJSON PutPipelineDefinition
instance ToHeaders PutPipelineDefinition
instance ToQuery PutPipelineDefinition
instance ToPath PutPipelineDefinition


-- | Task runners call <a>PollForTask</a> to receive a task to perform from
--   AWS Data Pipeline. The task runner specifies which tasks it can
--   perform by setting a value for the <tt>workerGroup</tt> parameter. The
--   task returned can come from any of the pipelines that match the
--   <tt>workerGroup</tt> value passed in by the task runner and that was
--   launched using the IAM user credentials specified by the task runner.
--   
--   If tasks are ready in the work queue, <a>PollForTask</a> returns a
--   response immediately. If no tasks are available in the queue,
--   <a>PollForTask</a> uses long-polling and holds on to a poll connection
--   for up to a 90 seconds, during which time the first newly scheduled
--   task is handed to the task runner. To accomodate this, set the socket
--   timeout in your task runner to 90 seconds. The task runner should not
--   call <a>PollForTask</a> again on the same <tt>workerGroup</tt> until
--   it receives a response, and this can take up to 90 seconds.
--   
--   
--   <a>http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_PollForTask.html</a>
module Network.AWS.DataPipeline.PollForTask
data PollForTask

-- | <a>PollForTask</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pftHostname</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pftInstanceIdentity</a> <tt>::</tt> <a>Maybe</a>
--   <a>InstanceIdentity</a></li>
--   <li><a>pftWorkerGroup</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
pollForTask :: Text -> PollForTask

-- | The public DNS name of the calling task runner.
pftHostname :: Lens' PollForTask (Maybe Text)

-- | Identity information for the EC2 instance that is hosting the task
--   runner. You can get this value from the instance using
--   'http://169.254.169.254/latest/meta-data/instance-id'. For more
--   information, see <a>Instance Metadata</a> in the <i>Amazon Elastic
--   ComputeCloud User Guide.</i> Passing in this value proves that your
--   task runner is running on an EC2 instance, and ensures the proper AWS
--   Data Pipeline service charges are applied to your pipeline.
pftInstanceIdentity :: Lens' PollForTask (Maybe InstanceIdentity)

-- | The type of task the task runner is configured to accept and process.
--   The worker group is set as a field on objects in the pipeline when
--   they are created. You can only specify a single value for
--   <tt>workerGroup</tt> in the call to <a>PollForTask</a>. There are no
--   wildcard values permitted in <tt>workerGroup</tt>; the string must be
--   an exact, case-sensitive, match.
pftWorkerGroup :: Lens' PollForTask Text
data PollForTaskResponse

-- | <a>PollForTaskResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pftrTaskObject</a> <tt>::</tt> <a>Maybe</a>
--   <a>TaskObject</a></li>
--   </ul>
pollForTaskResponse :: PollForTaskResponse

-- | The information needed to complete the task that is being assigned to
--   the task runner. One of the fields returned in this object is
--   <tt>taskId</tt>, which contains an identifier for the task being
--   assigned. The calling task runner uses <tt>taskId</tt> in subsequent
--   calls to <tt>ReportTaskProgress</tt> and <tt>SetTaskStatus</tt>.
pftrTaskObject :: Lens' PollForTaskResponse (Maybe TaskObject)
instance Eq PollForTask
instance Read PollForTask
instance Show PollForTask
instance Eq PollForTaskResponse
instance Read PollForTaskResponse
instance Show PollForTaskResponse
instance FromJSON PollForTaskResponse
instance AWSRequest PollForTask
instance ToJSON PollForTask
instance ToHeaders PollForTask
instance ToQuery PollForTask
instance ToPath PollForTask


-- | Lists the pipeline identifiers for all active pipelines that you have
--   permission to access.
--   
--   
--   <a>http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_ListPipelines.html</a>
module Network.AWS.DataPipeline.ListPipelines
data ListPipelines

-- | <a>ListPipelines</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lpMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listPipelines :: ListPipelines

-- | The starting point for the results to be returned. For the first call,
--   this value should be empty. As long as there are more results,
--   continue to call <a>ListPipelines</a> with the marker value from the
--   previous call to retrieve the next set of results.
lpMarker :: Lens' ListPipelines (Maybe Text)
data ListPipelinesResponse

-- | <a>ListPipelinesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lprHasMoreResults</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>lprMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lprPipelineIdList</a> <tt>::</tt> [<a>PipelineIdName</a>]</li>
--   </ul>
listPipelinesResponse :: ListPipelinesResponse

-- | Indicates whether there are more results that can be obtained by a
--   subsequent call.
lprHasMoreResults :: Lens' ListPipelinesResponse (Maybe Bool)

-- | The starting point for the next page of results. To view the next page
--   of results, call <tt>ListPipelinesOutput</tt> again with this marker
--   value. If the value is null, there are no more results.
lprMarker :: Lens' ListPipelinesResponse (Maybe Text)

-- | The pipeline identifiers. If you require additional information about
--   the pipelines, you can use these identifiers to call
--   <tt>DescribePipelines</tt> and <tt>GetPipelineDefinition</tt>.
lprPipelineIdList :: Lens' ListPipelinesResponse [PipelineIdName]
instance Eq ListPipelines
instance Ord ListPipelines
instance Read ListPipelines
instance Show ListPipelines
instance Monoid ListPipelines
instance Eq ListPipelinesResponse
instance Read ListPipelinesResponse
instance Show ListPipelinesResponse
instance AWSPager ListPipelines
instance FromJSON ListPipelinesResponse
instance AWSRequest ListPipelines
instance ToJSON ListPipelines
instance ToHeaders ListPipelines
instance ToQuery ListPipelines
instance ToPath ListPipelines


-- | Gets the definition of the specified pipeline. You can call
--   <a>GetPipelineDefinition</a> to retrieve the pipeline definition that
--   you provided using <tt>PutPipelineDefinition</tt>.
--   
--   
--   <a>http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_GetPipelineDefinition.html</a>
module Network.AWS.DataPipeline.GetPipelineDefinition
data GetPipelineDefinition

-- | <a>GetPipelineDefinition</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gpdPipelineId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>gpdVersion</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
getPipelineDefinition :: Text -> GetPipelineDefinition

-- | The ID of the pipeline.
gpdPipelineId :: Lens' GetPipelineDefinition Text

-- | The version of the pipeline definition to retrieve. Set this parameter
--   to <tt>latest</tt> (default) to use the last definition saved to the
--   pipeline or <tt>active</tt> to use the last definition that was
--   activated.
gpdVersion :: Lens' GetPipelineDefinition (Maybe Text)
data GetPipelineDefinitionResponse

-- | <a>GetPipelineDefinitionResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gpdrParameterObjects</a> <tt>::</tt>
--   [<a>ParameterObject</a>]</li>
--   <li><a>gpdrParameterValues</a> <tt>::</tt>
--   [<a>ParameterValue</a>]</li>
--   <li><a>gpdrPipelineObjects</a> <tt>::</tt>
--   [<a>PipelineObject</a>]</li>
--   </ul>
getPipelineDefinitionResponse :: GetPipelineDefinitionResponse

-- | The parameter objects used in the pipeline definition.
gpdrParameterObjects :: Lens' GetPipelineDefinitionResponse [ParameterObject]

-- | The parameter values used in the pipeline definition.
gpdrParameterValues :: Lens' GetPipelineDefinitionResponse [ParameterValue]

-- | The objects defined in the pipeline.
gpdrPipelineObjects :: Lens' GetPipelineDefinitionResponse [PipelineObject]
instance Eq GetPipelineDefinition
instance Ord GetPipelineDefinition
instance Read GetPipelineDefinition
instance Show GetPipelineDefinition
instance Eq GetPipelineDefinitionResponse
instance Read GetPipelineDefinitionResponse
instance Show GetPipelineDefinitionResponse
instance FromJSON GetPipelineDefinitionResponse
instance AWSRequest GetPipelineDefinition
instance ToJSON GetPipelineDefinition
instance ToHeaders GetPipelineDefinition
instance ToQuery GetPipelineDefinition
instance ToPath GetPipelineDefinition


-- | Task runners call <a>EvaluateExpression</a> to evaluate a string in
--   the context of the specified object. For example, a task runner can
--   evaluate SQL queries stored in Amazon S3.
--   
--   
--   <a>http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_EvaluateExpression.html</a>
module Network.AWS.DataPipeline.EvaluateExpression
data EvaluateExpression

-- | <a>EvaluateExpression</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>eeExpression</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>eeObjectId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>eePipelineId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
evaluateExpression :: Text -> Text -> Text -> EvaluateExpression

-- | The expression to evaluate.
eeExpression :: Lens' EvaluateExpression Text

-- | The ID of the object.
eeObjectId :: Lens' EvaluateExpression Text

-- | The ID of the pipeline.
eePipelineId :: Lens' EvaluateExpression Text
data EvaluateExpressionResponse

-- | <a>EvaluateExpressionResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>eerEvaluatedExpression</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
evaluateExpressionResponse :: Text -> EvaluateExpressionResponse

-- | The evaluated expression.
eerEvaluatedExpression :: Lens' EvaluateExpressionResponse Text
instance Eq EvaluateExpression
instance Ord EvaluateExpression
instance Read EvaluateExpression
instance Show EvaluateExpression
instance Eq EvaluateExpressionResponse
instance Ord EvaluateExpressionResponse
instance Read EvaluateExpressionResponse
instance Show EvaluateExpressionResponse
instance Monoid EvaluateExpressionResponse
instance IsString EvaluateExpressionResponse
instance FromJSON EvaluateExpressionResponse
instance AWSRequest EvaluateExpression
instance ToJSON EvaluateExpression
instance ToHeaders EvaluateExpression
instance ToQuery EvaluateExpression
instance ToPath EvaluateExpression


-- | Retrieves metadata about one or more pipelines. The information
--   retrieved includes the name of the pipeline, the pipeline identifier,
--   its current state, and the user account that owns the pipeline. Using
--   account credentials, you can retrieve metadata about pipelines that
--   you or your IAM users have created. If you are using an IAM user
--   account, you can retrieve metadata about only those pipelines for
--   which you have read permissions.
--   
--   To retrieve the full pipeline definition instead of metadata about the
--   pipeline, call <tt>GetPipelineDefinition</tt>.
--   
--   
--   <a>http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_DescribePipelines.html</a>
module Network.AWS.DataPipeline.DescribePipelines
data DescribePipelines

-- | <a>DescribePipelines</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dpPipelineIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describePipelines :: DescribePipelines

-- | The IDs of the pipelines to describe. You can pass as many as 25
--   identifiers in a single call. To obtain pipeline IDs, call
--   <tt>ListPipelines</tt>.
dpPipelineIds :: Lens' DescribePipelines [Text]
data DescribePipelinesResponse

-- | <a>DescribePipelinesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dprPipelineDescriptionList</a> <tt>::</tt>
--   [<a>PipelineDescription</a>]</li>
--   </ul>
describePipelinesResponse :: DescribePipelinesResponse

-- | An array of descriptions for the specified pipelines.
dprPipelineDescriptionList :: Lens' DescribePipelinesResponse [PipelineDescription]
instance Eq DescribePipelines
instance Ord DescribePipelines
instance Read DescribePipelines
instance Show DescribePipelines
instance Monoid DescribePipelines
instance Semigroup DescribePipelines
instance Eq DescribePipelinesResponse
instance Read DescribePipelinesResponse
instance Show DescribePipelinesResponse
instance Monoid DescribePipelinesResponse
instance Semigroup DescribePipelinesResponse
instance FromJSON DescribePipelinesResponse
instance AWSRequest DescribePipelines
instance ToJSON DescribePipelines
instance ToHeaders DescribePipelines
instance ToQuery DescribePipelines
instance ToPath DescribePipelines
instance IsList DescribePipelinesResponse
instance IsList DescribePipelines


-- | Gets the object definitions for a set of objects associated with the
--   pipeline. Object definitions are composed of a set of fields that
--   define the properties of the object.
--   
--   
--   <a>http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_DescribeObjects.html</a>
module Network.AWS.DataPipeline.DescribeObjects
data DescribeObjects

-- | <a>DescribeObjects</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>doEvaluateExpressions</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>doMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>doObjectIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>doPipelineId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
describeObjects :: Text -> DescribeObjects

-- | Indicates whether any expressions in the object should be evaluated
--   when the object descriptions are returned.
doEvaluateExpressions :: Lens' DescribeObjects (Maybe Bool)

-- | The starting point for the results to be returned. For the first call,
--   this value should be empty. As long as there are more results,
--   continue to call <a>DescribeObjects</a> with the marker value from the
--   previous call to retrieve the next set of results.
doMarker :: Lens' DescribeObjects (Maybe Text)

-- | The IDs of the pipeline objects that contain the definitions to be
--   described. You can pass as many as 25 identifiers in a single call to
--   <a>DescribeObjects</a>.
doObjectIds :: Lens' DescribeObjects [Text]

-- | The ID of the pipeline that contains the object definitions.
doPipelineId :: Lens' DescribeObjects Text
data DescribeObjectsResponse

-- | <a>DescribeObjectsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dorHasMoreResults</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dorMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dorPipelineObjects</a> <tt>::</tt> [<a>PipelineObject</a>]</li>
--   </ul>
describeObjectsResponse :: DescribeObjectsResponse

-- | Indicates whether there are more results to return.
dorHasMoreResults :: Lens' DescribeObjectsResponse (Maybe Bool)

-- | The starting point for the next page of results. To view the next page
--   of results, call <a>DescribeObjects</a> again with this marker value.
--   If the value is null, there are no more results.
dorMarker :: Lens' DescribeObjectsResponse (Maybe Text)

-- | An array of object definitions.
dorPipelineObjects :: Lens' DescribeObjectsResponse [PipelineObject]
instance Eq DescribeObjects
instance Ord DescribeObjects
instance Read DescribeObjects
instance Show DescribeObjects
instance Eq DescribeObjectsResponse
instance Read DescribeObjectsResponse
instance Show DescribeObjectsResponse
instance AWSPager DescribeObjects
instance FromJSON DescribeObjectsResponse
instance AWSRequest DescribeObjects
instance ToJSON DescribeObjects
instance ToHeaders DescribeObjects
instance ToQuery DescribeObjects
instance ToPath DescribeObjects


-- | Deletes a pipeline, its pipeline definition, and its run history. AWS
--   Data Pipeline attempts to cancel instances associated with the
--   pipeline that are currently being processed by task runners.
--   
--   Deleting a pipeline cannot be undone. You cannot query or restore a
--   deleted pipeline. To temporarily pause a pipeline instead of deleting
--   it, call <tt>SetStatus</tt> with the status set to <tt>PAUSE</tt> on
--   individual components. Components that are paused by
--   <tt>SetStatus</tt> can be resumed.
--   
--   
--   <a>http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_DeletePipeline.html</a>
module Network.AWS.DataPipeline.DeletePipeline
data DeletePipeline

-- | <a>DeletePipeline</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dpPipelineId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deletePipeline :: Text -> DeletePipeline

-- | The ID of the pipeline.
dpPipelineId :: Lens' DeletePipeline Text
data DeletePipelineResponse

-- | <a>DeletePipelineResponse</a> constructor.
deletePipelineResponse :: DeletePipelineResponse
instance Eq DeletePipeline
instance Ord DeletePipeline
instance Read DeletePipeline
instance Show DeletePipeline
instance Monoid DeletePipeline
instance IsString DeletePipeline
instance Eq DeletePipelineResponse
instance Ord DeletePipelineResponse
instance Read DeletePipelineResponse
instance Show DeletePipelineResponse
instance Generic DeletePipelineResponse
instance Datatype D1DeletePipelineResponse
instance Constructor C1_0DeletePipelineResponse
instance AWSRequest DeletePipeline
instance ToJSON DeletePipeline
instance ToHeaders DeletePipeline
instance ToQuery DeletePipeline
instance ToPath DeletePipeline


-- | Deactivates the specified running pipeline. The pipeline is set to the
--   <tt>DEACTIVATING</tt> state until the deactivation process completes.
--   
--   To resume a deactivated pipeline, use <tt>ActivatePipeline</tt>. By
--   default, the pipeline resumes from the last completed execution.
--   Optionally, you can specify the date and time to resume the pipeline.
--   
--   
--   <a>http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_DeactivatePipeline.html</a>
module Network.AWS.DataPipeline.DeactivatePipeline
data DeactivatePipeline

-- | <a>DeactivatePipeline</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dp1CancelActive</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dp1PipelineId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deactivatePipeline :: Text -> DeactivatePipeline

-- | Indicates whether to cancel any running objects. The default is true,
--   which sets the state of any running objects to <tt>CANCELED</tt>. If
--   this value is false, the pipeline is deactivated after all running
--   objects finish.
dp1CancelActive :: Lens' DeactivatePipeline (Maybe Bool)

-- | The ID of the pipeline.
dp1PipelineId :: Lens' DeactivatePipeline Text
data DeactivatePipelineResponse

-- | <a>DeactivatePipelineResponse</a> constructor.
deactivatePipelineResponse :: DeactivatePipelineResponse
instance Eq DeactivatePipeline
instance Ord DeactivatePipeline
instance Read DeactivatePipeline
instance Show DeactivatePipeline
instance Eq DeactivatePipelineResponse
instance Ord DeactivatePipelineResponse
instance Read DeactivatePipelineResponse
instance Show DeactivatePipelineResponse
instance Generic DeactivatePipelineResponse
instance Datatype D1DeactivatePipelineResponse
instance Constructor C1_0DeactivatePipelineResponse
instance AWSRequest DeactivatePipeline
instance ToJSON DeactivatePipeline
instance ToHeaders DeactivatePipeline
instance ToQuery DeactivatePipeline
instance ToPath DeactivatePipeline


-- | Creates a new, empty pipeline. Use <tt>PutPipelineDefinition</tt> to
--   populate the pipeline.
--   
--   
--   <a>http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_CreatePipeline.html</a>
module Network.AWS.DataPipeline.CreatePipeline
data CreatePipeline

-- | <a>CreatePipeline</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cpDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cpName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cpTags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   <li><a>cpUniqueId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createPipeline :: Text -> Text -> CreatePipeline

-- | The description for the pipeline.
cpDescription :: Lens' CreatePipeline (Maybe Text)

-- | The name for the pipeline. You can use the same name for multiple
--   pipelines associated with your AWS account, because AWS Data Pipeline
--   assigns each pipeline a unique pipeline identifier.
cpName :: Lens' CreatePipeline Text

-- | A list of tags to associate with the pipeline at creation. Tags let
--   you control access to pipelines. For more information, see
--   <a>Controlling UserAccess to Pipelines</a> in the <i>AWS Data Pipeline
--   Developer Guide</i>.
cpTags :: Lens' CreatePipeline [Tag]

-- | A unique identifier. This identifier is not the same as the pipeline
--   identifier assigned by AWS Data Pipeline. You are responsible for
--   defining the format and ensuring the uniqueness of this identifier.
--   You use this parameter to ensure idempotency during repeated calls to
--   <a>CreatePipeline</a>. For example, if the first call to
--   <a>CreatePipeline</a> does not succeed, you can pass in the same
--   unique identifier and pipeline name combination on a subsequent call
--   to <a>CreatePipeline</a>. <a>CreatePipeline</a> ensures that if a
--   pipeline already exists with the same name and unique identifier, a
--   new pipeline is not created. Instead, you'll receive the pipeline
--   identifier from the previous attempt. The uniqueness of the name and
--   unique identifier combination is scoped to the AWS account or IAM user
--   credentials.
cpUniqueId :: Lens' CreatePipeline Text
data CreatePipelineResponse

-- | <a>CreatePipelineResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cprPipelineId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createPipelineResponse :: Text -> CreatePipelineResponse

-- | The ID that AWS Data Pipeline assigns the newly created pipeline. For
--   example, 'df-06372391ZG65EXAMPLE'.
cprPipelineId :: Lens' CreatePipelineResponse Text
instance Eq CreatePipeline
instance Read CreatePipeline
instance Show CreatePipeline
instance Eq CreatePipelineResponse
instance Ord CreatePipelineResponse
instance Read CreatePipelineResponse
instance Show CreatePipelineResponse
instance Monoid CreatePipelineResponse
instance IsString CreatePipelineResponse
instance FromJSON CreatePipelineResponse
instance AWSRequest CreatePipeline
instance ToJSON CreatePipeline
instance ToHeaders CreatePipeline
instance ToQuery CreatePipeline
instance ToPath CreatePipeline


-- | Adds or modifies tags for the specified pipeline.
--   
--   
--   <a>http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_AddTags.html</a>
module Network.AWS.DataPipeline.AddTags
data AddTags

-- | <a>AddTags</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>atPipelineId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>atTags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   </ul>
addTags :: Text -> AddTags

-- | The ID of the pipeline.
atPipelineId :: Lens' AddTags Text

-- | The tags to add, as key/value pairs.
atTags :: Lens' AddTags [Tag]
data AddTagsResponse

-- | <a>AddTagsResponse</a> constructor.
addTagsResponse :: AddTagsResponse
instance Eq AddTags
instance Read AddTags
instance Show AddTags
instance Eq AddTagsResponse
instance Ord AddTagsResponse
instance Read AddTagsResponse
instance Show AddTagsResponse
instance Generic AddTagsResponse
instance Datatype D1AddTagsResponse
instance Constructor C1_0AddTagsResponse
instance AWSRequest AddTags
instance ToJSON AddTags
instance ToHeaders AddTags
instance ToQuery AddTags
instance ToPath AddTags


-- | Validates the specified pipeline and starts processing pipeline tasks.
--   If the pipeline does not pass validation, activation fails.
--   
--   If you need to pause the pipeline to investigate an issue with a
--   component, such as a data source or script, call
--   <tt>DeactivatePipeline</tt>.
--   
--   To activate a finished pipeline, modify the end date for the pipeline
--   and then activate it.
--   
--   
--   <a>http://docs.aws.amazon.com/datapipeline/latest/APIReference/API_ActivatePipeline.html</a>
module Network.AWS.DataPipeline.ActivatePipeline
data ActivatePipeline

-- | <a>ActivatePipeline</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>apParameterValues</a> <tt>::</tt> [<a>ParameterValue</a>]</li>
--   <li><a>apPipelineId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>apStartTimestamp</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   </ul>
activatePipeline :: Text -> ActivatePipeline

-- | A list of parameter values to pass to the pipeline at activation.
apParameterValues :: Lens' ActivatePipeline [ParameterValue]

-- | The ID of the pipeline.
apPipelineId :: Lens' ActivatePipeline Text

-- | The date and time to resume the pipeline. By default, the pipeline
--   resumes from the last completed execution.
apStartTimestamp :: Lens' ActivatePipeline (Maybe UTCTime)
data ActivatePipelineResponse

-- | <a>ActivatePipelineResponse</a> constructor.
activatePipelineResponse :: ActivatePipelineResponse
instance Eq ActivatePipeline
instance Read ActivatePipeline
instance Show ActivatePipeline
instance Eq ActivatePipelineResponse
instance Ord ActivatePipelineResponse
instance Read ActivatePipelineResponse
instance Show ActivatePipelineResponse
instance Generic ActivatePipelineResponse
instance Datatype D1ActivatePipelineResponse
instance Constructor C1_0ActivatePipelineResponse
instance AWSRequest ActivatePipeline
instance ToJSON ActivatePipeline
instance ToHeaders ActivatePipeline
instance ToQuery ActivatePipeline
instance ToPath ActivatePipeline


-- | AWS Data Pipeline is a web service that you can use to automate the
--   movement and transformation of data. With AWS Data Pipeline, you can
--   define data-driven workflows, so that tasks can be dependent on the
--   successful completion of previous tasks.
module Network.AWS.DataPipeline
