-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Simplifies dealing with different types for strings
--   
@package string-conversions
@version 0.4


-- | A type class for converting strings. Supported types are:
--   
--   <ul>
--   <li><a>String</a><ul><li>strict <a>ByteString</a></li><li>lazy
--   <a>ByteString</a></li><li>strict <a>Text</a></li><li>lazy
--   <a>Text</a></li></ul></li>
--   </ul>
--   
--   Assumes UTF-8 encoding for both types of ByteStrings.
module Data.String.Conversions
class ConvertibleStrings a b
convertString :: ConvertibleStrings a b => a -> b
cs :: ConvertibleStrings a b => a -> b
type StrictByteString = ByteString
type SBS = ByteString
type LazyByteString = ByteString
type LBS = ByteString
type StrictText = Text
type ST = Text
type LazyText = Text
type LT = Text

-- | An infix synonym for <a>mappend</a>.
--   
--   <i>Since: 4.5.0.0</i>
(<>) :: Monoid m => m -> m -> m
instance ConvertibleStrings LazyText StrictText
instance ConvertibleStrings LazyText LazyByteString
instance ConvertibleStrings LazyText StrictByteString
instance ConvertibleStrings LazyText String
instance ConvertibleStrings LazyText LazyText
instance ConvertibleStrings StrictText LazyText
instance ConvertibleStrings StrictText LazyByteString
instance ConvertibleStrings StrictText StrictByteString
instance ConvertibleStrings StrictText String
instance ConvertibleStrings StrictText StrictText
instance ConvertibleStrings LazyByteString LazyText
instance ConvertibleStrings LazyByteString StrictText
instance ConvertibleStrings LazyByteString StrictByteString
instance ConvertibleStrings LazyByteString String
instance ConvertibleStrings LazyByteString LazyByteString
instance ConvertibleStrings StrictByteString LazyText
instance ConvertibleStrings StrictByteString StrictText
instance ConvertibleStrings StrictByteString LazyByteString
instance ConvertibleStrings StrictByteString String
instance ConvertibleStrings StrictByteString StrictByteString
instance ConvertibleStrings String LazyText
instance ConvertibleStrings String StrictText
instance ConvertibleStrings String LazyByteString
instance ConvertibleStrings String StrictByteString
instance ConvertibleStrings String String


-- | Monomorphic conversion functions that are useful when you wish to be
--   explicit about the conversion without writing a type signature or when
--   <a>cs</a> is ambiguous due to polymorphic inputs or outputs.
--   
--   All functions in this module have <a>cs</a> as their implementation.
module Data.String.Conversions.Monomorphic
toString :: ConvertibleStrings a String => a -> String
toStrictByteString :: ConvertibleStrings a StrictByteString => a -> StrictByteString
toSBS :: ConvertibleStrings a SBS => a -> SBS
toLazyByteString :: ConvertibleStrings a LazyByteString => a -> LazyByteString
toLBS :: ConvertibleStrings a LBS => a -> LBS
toStrictText :: ConvertibleStrings a StrictText => a -> StrictText
toST :: ConvertibleStrings a ST => a -> ST
toLazyText :: ConvertibleStrings a LazyText => a -> LazyText
toLT :: ConvertibleStrings a LT => a -> LT
fromString :: ConvertibleStrings String a => String -> a
fromStrictByteString :: ConvertibleStrings StrictByteString a => StrictByteString -> a
fromSBS :: ConvertibleStrings SBS a => SBS -> a
fromLazyByteString :: ConvertibleStrings LazyByteString a => LazyByteString -> a
fromLBS :: ConvertibleStrings LBS a => LBS -> a
fromStrictText :: ConvertibleStrings StrictText a => StrictText -> a
fromST :: ConvertibleStrings ST a => ST -> a
fromLazyText :: ConvertibleStrings LazyText a => LazyText -> a
fromLT :: ConvertibleStrings LT a => LT -> a
