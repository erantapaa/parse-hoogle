-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Amazon Identity and Access Management SDK.
--   
@package amazonka-iam
@version 0.3.6

module Network.AWS.IAM.Types

-- | Version <tt>2010-05-08</tt> of the Amazon Identity and Access
--   Management service.
data IAM
data RESTError :: *
ns :: Text
data ManagedPolicyDetail

-- | <a>ManagedPolicyDetail</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>mpdArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>mpdAttachmentCount</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>mpdCreateDate</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>mpdDefaultVersionId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>mpdDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>mpdIsAttachable</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>mpdPath</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>mpdPolicyId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>mpdPolicyName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>mpdPolicyVersionList</a> <tt>::</tt>
--   [<a>PolicyVersion</a>]</li>
--   <li><a>mpdUpdateDate</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   </ul>
managedPolicyDetail :: ManagedPolicyDetail
mpdArn :: Lens' ManagedPolicyDetail (Maybe Text)

-- | The number of principal entities (users, groups, and roles) that the
--   policy is attached to.
mpdAttachmentCount :: Lens' ManagedPolicyDetail (Maybe Int)

-- | The date and time, in <a>ISO 8601 date-time format</a>, when the
--   policy was created.
mpdCreateDate :: Lens' ManagedPolicyDetail (Maybe UTCTime)

-- | The identifier for the version of the policy that is set as the
--   default (operative) version.
--   
--   For more information about policy versions, see <a>Versioning for
--   ManagedPolicies</a> in the <i>Using IAM</i> guide.
mpdDefaultVersionId :: Lens' ManagedPolicyDetail (Maybe Text)

-- | A friendly description of the policy.
mpdDescription :: Lens' ManagedPolicyDetail (Maybe Text)

-- | Specifies whether the policy can be attached to an IAM user, group, or
--   role.
mpdIsAttachable :: Lens' ManagedPolicyDetail (Maybe Bool)

-- | The path to the policy.
--   
--   For more information about paths, see <a>IAM Identifiers</a> in the
--   <i>Using IAM</i> guide.
mpdPath :: Lens' ManagedPolicyDetail (Maybe Text)

-- | The stable and unique string identifying the policy.
--   
--   For more information about IDs, see <a>IAM Identifiers</a> in the
--   <i>Using IAM</i> guide.
mpdPolicyId :: Lens' ManagedPolicyDetail (Maybe Text)

-- | The friendly name (not ARN) identifying the policy.
mpdPolicyName :: Lens' ManagedPolicyDetail (Maybe Text)

-- | A list containing information about the versions of the policy.
mpdPolicyVersionList :: Lens' ManagedPolicyDetail [PolicyVersion]

-- | The date and time, in <a>ISO 8601 date-time format</a>, when the
--   policy was last updated.
--   
--   When a policy has only one version, this field contains the date and
--   time when the policy was created. When a policy has more than one
--   version, this field contains the date and time when the most recent
--   policy version was created.
mpdUpdateDate :: Lens' ManagedPolicyDetail (Maybe UTCTime)
data PolicyRole

-- | <a>PolicyRole</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>prRoleName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
policyRole :: PolicyRole

-- | The name (friendly name, not ARN) identifying the role.
prRoleName :: Lens' PolicyRole (Maybe Text)
data AssignmentStatusType

-- | Any
Any :: AssignmentStatusType

-- | Assigned
Assigned :: AssignmentStatusType

-- | Unassigned
Unassigned :: AssignmentStatusType
data PasswordPolicy

-- | <a>PasswordPolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ppAllowUsersToChangePassword</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>ppExpirePasswords</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>ppHardExpiry</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>ppMaxPasswordAge</a> <tt>::</tt> <a>Maybe</a>
--   <a>Natural</a></li>
--   <li><a>ppMinimumPasswordLength</a> <tt>::</tt> <a>Maybe</a>
--   <a>Natural</a></li>
--   <li><a>ppPasswordReusePrevention</a> <tt>::</tt> <a>Maybe</a>
--   <a>Natural</a></li>
--   <li><a>ppRequireLowercaseCharacters</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>ppRequireNumbers</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>ppRequireSymbols</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>ppRequireUppercaseCharacters</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   </ul>
passwordPolicy :: PasswordPolicy

-- | Specifies whether IAM users are allowed to change their own password.
ppAllowUsersToChangePassword :: Lens' PasswordPolicy (Maybe Bool)

-- | Specifies whether IAM users are required to change their password
--   after a specified number of days.
ppExpirePasswords :: Lens' PasswordPolicy (Maybe Bool)

-- | Specifies whether IAM users are prevented from setting a new password
--   after their password has expired.
ppHardExpiry :: Lens' PasswordPolicy (Maybe Bool)

-- | The number of days that an IAM user password is valid.
ppMaxPasswordAge :: Lens' PasswordPolicy (Maybe Natural)

-- | Minimum length to require for IAM user passwords.
ppMinimumPasswordLength :: Lens' PasswordPolicy (Maybe Natural)

-- | Specifies the number of previous passwords that IAM users are
--   prevented from reusing.
ppPasswordReusePrevention :: Lens' PasswordPolicy (Maybe Natural)

-- | Specifies whether to require lowercase characters for IAM user
--   passwords.
ppRequireLowercaseCharacters :: Lens' PasswordPolicy (Maybe Bool)

-- | Specifies whether to require numbers for IAM user passwords.
ppRequireNumbers :: Lens' PasswordPolicy (Maybe Bool)

-- | Specifies whether to require symbols for IAM user passwords.
ppRequireSymbols :: Lens' PasswordPolicy (Maybe Bool)

-- | Specifies whether to require uppercase characters for IAM user
--   passwords.
ppRequireUppercaseCharacters :: Lens' PasswordPolicy (Maybe Bool)
data Group

-- | <a>Group</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gArn</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>gCreateDate</a> <tt>::</tt> <a>UTCTime</a></li>
--   <li><a>gGroupId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>gGroupName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>gPath</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
group :: Text -> Text -> Text -> Text -> UTCTime -> Group

-- | The Amazon Resource Name (ARN) specifying the group. For more
--   information about ARNs and how to use them in policies, see <a>IAM
--   Identifiers</a> in the <i>UsingIAM</i> guide.
gArn :: Lens' Group Text

-- | The date and time, in <a>ISO 8601 date-time format</a>, when the group
--   was created.
gCreateDate :: Lens' Group UTCTime

-- | The stable and unique string identifying the group. For more
--   information about IDs, see <a>IAM Identifiers</a> in the <i>Using
--   IAM</i> guide.
gGroupId :: Lens' Group Text

-- | The friendly name that identifies the group.
gGroupName :: Lens' Group Text

-- | The path to the group. For more information about paths, see <a>IAM
--   Identifiers</a> in the <i>Using IAM</i> guide.
gPath :: Lens' Group Text
data AttachedPolicy

-- | <a>AttachedPolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>apPolicyArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>apPolicyName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
attachedPolicy :: AttachedPolicy
apPolicyArn :: Lens' AttachedPolicy (Maybe Text)

-- | The friendly name of the attached policy.
apPolicyName :: Lens' AttachedPolicy (Maybe Text)
data MFADevice

-- | <a>MFADevice</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>mfadEnableDate</a> <tt>::</tt> <a>UTCTime</a></li>
--   <li><a>mfadSerialNumber</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>mfadUserName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
mfadevice :: Text -> Text -> UTCTime -> MFADevice

-- | The date when the MFA device was enabled for the user.
mfadEnableDate :: Lens' MFADevice UTCTime

-- | The serial number that uniquely identifies the MFA device. For virtual
--   MFA devices, the serial number is the device ARN.
mfadSerialNumber :: Lens' MFADevice Text

-- | The user with whom the MFA device is associated.
mfadUserName :: Lens' MFADevice Text
data PolicyVersion

-- | <a>PolicyVersion</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pvCreateDate</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>pvDocument</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pvIsDefaultVersion</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>pvVersionId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
policyVersion :: PolicyVersion

-- | The date and time, in <a>ISO 8601 date-time format</a>, when the
--   policy version was created.
pvCreateDate :: Lens' PolicyVersion (Maybe UTCTime)

-- | The policy document.
--   
--   The policy document is returned in the response to the
--   <tt>GetPolicyVersion</tt> and <tt>GetAccountAuthorizationDetails</tt>
--   operations. It is not returned in the response to the
--   <tt>CreatePolicyVersion</tt> or <tt>ListPolicyVersions</tt>
--   operations.
pvDocument :: Lens' PolicyVersion (Maybe Text)

-- | Specifies whether the policy version is set as the policy's default
--   version.
pvIsDefaultVersion :: Lens' PolicyVersion (Maybe Bool)

-- | The identifier for the policy version.
--   
--   Policy version identifiers always begin with <tt>v</tt> (always
--   lowercase). When a policy is created, the first policy version is
--   <tt>v1</tt>.
pvVersionId :: Lens' PolicyVersion (Maybe Text)
data InstanceProfile

-- | <a>InstanceProfile</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ipArn</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ipCreateDate</a> <tt>::</tt> <a>UTCTime</a></li>
--   <li><a>ipInstanceProfileId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ipInstanceProfileName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ipPath</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ipRoles</a> <tt>::</tt> [<a>Role</a>]</li>
--   </ul>
instanceProfile :: Text -> Text -> Text -> Text -> UTCTime -> InstanceProfile

-- | The Amazon Resource Name (ARN) specifying the instance profile. For
--   more information about ARNs and how to use them in policies, see
--   <a>IAM Identifiers</a> in the <i>Using IAM</i> guide.
ipArn :: Lens' InstanceProfile Text

-- | The date when the instance profile was created.
ipCreateDate :: Lens' InstanceProfile UTCTime

-- | The stable and unique string identifying the instance profile. For
--   more information about IDs, see <a>IAM Identifiers</a> in the <i>Using
--   IAM</i> guide.
ipInstanceProfileId :: Lens' InstanceProfile Text

-- | The name identifying the instance profile.
ipInstanceProfileName :: Lens' InstanceProfile Text

-- | The path to the instance profile. For more information about paths,
--   see <a>IAMIdentifiers</a> in the <i>Using IAM</i> guide.
ipPath :: Lens' InstanceProfile Text

-- | The role associated with the instance profile.
ipRoles :: Lens' InstanceProfile [Role]
data RoleDetail

-- | <a>RoleDetail</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rdArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rdAssumeRolePolicyDocument</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>rdAttachedManagedPolicies</a> <tt>::</tt>
--   [<a>AttachedPolicy</a>]</li>
--   <li><a>rdCreateDate</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>rdInstanceProfileList</a> <tt>::</tt>
--   [<a>InstanceProfile</a>]</li>
--   <li><a>rdPath</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rdRoleId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rdRoleName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rdRolePolicyList</a> <tt>::</tt> [<a>PolicyDetail</a>]</li>
--   </ul>
roleDetail :: RoleDetail
rdArn :: Lens' RoleDetail (Maybe Text)

-- | The trust policy that grants permission to assume the role.
rdAssumeRolePolicyDocument :: Lens' RoleDetail (Maybe Text)

-- | A list of managed policies attached to the role. These policies are
--   the role's access (permissions) policies.
rdAttachedManagedPolicies :: Lens' RoleDetail [AttachedPolicy]

-- | The date and time, in <a>ISO 8601 date-time format</a>, when the role
--   was created.
rdCreateDate :: Lens' RoleDetail (Maybe UTCTime)
rdInstanceProfileList :: Lens' RoleDetail [InstanceProfile]

-- | The path to the role. For more information about paths, see <a>IAM
--   Identifiers</a> in the <i>Using IAM</i> guide.
rdPath :: Lens' RoleDetail (Maybe Text)

-- | The stable and unique string identifying the role. For more
--   information about IDs, see <a>IAM Identifiers</a> in the <i>Using
--   IAM</i> guide.
rdRoleId :: Lens' RoleDetail (Maybe Text)

-- | The friendly name that identifies the role.
rdRoleName :: Lens' RoleDetail (Maybe Text)

-- | A list of inline policies embedded in the role. These policies are the
--   role's access (permissions) policies.
rdRolePolicyList :: Lens' RoleDetail [PolicyDetail]
data ReportFormatType

-- | text/csv
TextCsv :: ReportFormatType
data ServerCertificateMetadata

-- | <a>ServerCertificateMetadata</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>scmArn</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>scmExpiration</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>scmPath</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>scmServerCertificateId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>scmServerCertificateName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>scmUploadDate</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   </ul>
serverCertificateMetadata :: Text -> Text -> Text -> Text -> ServerCertificateMetadata

-- | The Amazon Resource Name (ARN) specifying the server certificate. For
--   more information about ARNs and how to use them in policies, see
--   <a>IAM Identifiers</a> in the <i>Using IAM</i> guide.
scmArn :: Lens' ServerCertificateMetadata Text

-- | The date on which the certificate is set to expire.
scmExpiration :: Lens' ServerCertificateMetadata (Maybe UTCTime)

-- | The path to the server certificate. For more information about paths,
--   see <a>IAM Identifiers</a> in the <i>Using IAM</i> guide.
scmPath :: Lens' ServerCertificateMetadata Text

-- | The stable and unique string identifying the server certificate. For
--   more information about IDs, see <a>IAM Identifiers</a> in the <i>Using
--   IAM</i> guide.
scmServerCertificateId :: Lens' ServerCertificateMetadata Text

-- | The name that identifies the server certificate.
scmServerCertificateName :: Lens' ServerCertificateMetadata Text

-- | The date when the server certificate was uploaded.
scmUploadDate :: Lens' ServerCertificateMetadata (Maybe UTCTime)
data OpenIDConnectProviderListEntry

-- | <a>OpenIDConnectProviderListEntry</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>oidcpleArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
openIDConnectProviderListEntry :: OpenIDConnectProviderListEntry
oidcpleArn :: Lens' OpenIDConnectProviderListEntry (Maybe Text)
data LoginProfile

-- | <a>LoginProfile</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lpCreateDate</a> <tt>::</tt> <a>UTCTime</a></li>
--   <li><a>lpPasswordResetRequired</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>lpUserName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
loginProfile :: Text -> UTCTime -> LoginProfile

-- | The date when the password for the user was created.
lpCreateDate :: Lens' LoginProfile UTCTime

-- | Specifies whether the user is required to set a new password on next
--   sign-in.
lpPasswordResetRequired :: Lens' LoginProfile (Maybe Bool)

-- | The name of the user, which can be used for signing in to the AWS
--   Management Console.
lpUserName :: Lens' LoginProfile Text
data EntityType

-- | AWSManagedPolicy
ETAWSManagedPolicy :: EntityType

-- | Group
ETGroup :: EntityType

-- | LocalManagedPolicy
ETLocalManagedPolicy :: EntityType

-- | Role
ETRole :: EntityType

-- | User
ETUser :: EntityType
data SummaryKeyType

-- | AccessKeysPerUserQuota
AccessKeysPerUserQuota :: SummaryKeyType

-- | AccountAccessKeysPresent
AccountAccessKeysPresent :: SummaryKeyType

-- | AccountMFAEnabled
AccountMFAEnabled :: SummaryKeyType

-- | AccountSigningCertificatesPresent
AccountSigningCertificatesPresent :: SummaryKeyType

-- | AttachedPoliciesPerGroupQuota
AttachedPoliciesPerGroupQuota :: SummaryKeyType

-- | AttachedPoliciesPerRoleQuota
AttachedPoliciesPerRoleQuota :: SummaryKeyType

-- | AttachedPoliciesPerUserQuota
AttachedPoliciesPerUserQuota :: SummaryKeyType

-- | GroupPolicySizeQuota
GroupPolicySizeQuota :: SummaryKeyType

-- | Groups
Groups :: SummaryKeyType

-- | GroupsPerUserQuota
GroupsPerUserQuota :: SummaryKeyType

-- | GroupsQuota
GroupsQuota :: SummaryKeyType

-- | MFADevices
MFADevices :: SummaryKeyType

-- | MFADevicesInUse
MFADevicesInUse :: SummaryKeyType

-- | Policies
Policies :: SummaryKeyType

-- | PoliciesQuota
PoliciesQuota :: SummaryKeyType

-- | PolicySizeQuota
PolicySizeQuota :: SummaryKeyType

-- | PolicyVersionsInUse
PolicyVersionsInUse :: SummaryKeyType

-- | PolicyVersionsInUseQuota
PolicyVersionsInUseQuota :: SummaryKeyType

-- | ServerCertificates
ServerCertificates :: SummaryKeyType

-- | ServerCertificatesQuota
ServerCertificatesQuota :: SummaryKeyType

-- | SigningCertificatesPerUserQuota
SigningCertificatesPerUserQuota :: SummaryKeyType

-- | UserPolicySizeQuota
UserPolicySizeQuota :: SummaryKeyType

-- | Users
Users :: SummaryKeyType

-- | UsersQuota
UsersQuota :: SummaryKeyType

-- | VersionsPerPolicyQuota
VersionsPerPolicyQuota :: SummaryKeyType
data GroupDetail

-- | <a>GroupDetail</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gdArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gdAttachedManagedPolicies</a> <tt>::</tt>
--   [<a>AttachedPolicy</a>]</li>
--   <li><a>gdCreateDate</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>gdGroupId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gdGroupName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gdGroupPolicyList</a> <tt>::</tt> [<a>PolicyDetail</a>]</li>
--   <li><a>gdPath</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
groupDetail :: GroupDetail
gdArn :: Lens' GroupDetail (Maybe Text)

-- | A list of the managed policies attached to the group.
gdAttachedManagedPolicies :: Lens' GroupDetail [AttachedPolicy]

-- | The date and time, in <a>ISO 8601 date-time format</a>, when the group
--   was created.
gdCreateDate :: Lens' GroupDetail (Maybe UTCTime)

-- | The stable and unique string identifying the group. For more
--   information about IDs, see <a>IAM Identifiers</a> in the <i>Using
--   IAM</i> guide.
gdGroupId :: Lens' GroupDetail (Maybe Text)

-- | The friendly name that identifies the group.
gdGroupName :: Lens' GroupDetail (Maybe Text)

-- | A list of the inline policies embedded in the group.
gdGroupPolicyList :: Lens' GroupDetail [PolicyDetail]

-- | The path to the group. For more information about paths, see <a>IAM
--   Identifiers</a> in the <i>Using IAM</i> guide.
gdPath :: Lens' GroupDetail (Maybe Text)
data ReportStateType

-- | COMPLETE
Complete :: ReportStateType

-- | INPROGRESS
Inprogress :: ReportStateType

-- | STARTED
Started :: ReportStateType
data User

-- | <a>User</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uArn</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>uCreateDate</a> <tt>::</tt> <a>UTCTime</a></li>
--   <li><a>uPasswordLastUsed</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>uPath</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>uUserId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>uUserName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
user :: Text -> Text -> Text -> UTCTime -> User

-- | The Amazon Resource Name (ARN) that identifies the user. For more
--   information about ARNs and how to use ARNs in policies, see <a>IAM
--   Identifiers</a> in the <i>UsingIAM</i> guide.
uArn :: Lens' User Text

-- | The date and time, in <a>ISO 8601 date-time format</a>, when the user
--   was created.
uCreateDate :: Lens' User UTCTime

-- | The date and time, in <a>ISO 8601 date-time format</a>, when the
--   user's password was last used to sign in to an AWS website. For a list
--   of AWS websites that capture a user's last sign-in time, see the
--   <a>Credential Reports</a> topic in the <i>Using IAM</i> guide. If a
--   password is used more than once in a five-minute span, only the first
--   use is returned in this field. When the user does not have a password,
--   this field is null (not present). When a user's password exists but
--   has never been used, or when there is no sign-in data associated with
--   the user, this field is null (not present).
--   
--   This value is returned only in the <tt>GetUser</tt> and
--   <tt>ListUsers</tt> actions.
uPasswordLastUsed :: Lens' User (Maybe UTCTime)

-- | The path to the user. For more information about paths, see <a>IAM
--   Identifiers</a> in the <i>Using IAM</i> guide.
uPath :: Lens' User (Maybe Text)

-- | The stable and unique string identifying the user. For more
--   information about IDs, see <a>IAM Identifiers</a> in the <i>Using
--   IAM</i> guide.
uUserId :: Lens' User Text

-- | The friendly name identifying the user.
uUserName :: Lens' User Text
data PolicyDetail

-- | <a>PolicyDetail</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pdPolicyDocument</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pdPolicyName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
policyDetail :: PolicyDetail

-- | The policy document.
pdPolicyDocument :: Lens' PolicyDetail (Maybe Text)

-- | The name of the policy.
pdPolicyName :: Lens' PolicyDetail (Maybe Text)
data StatusType

-- | Active
Active :: StatusType

-- | Inactive
Inactive :: StatusType
data SAMLProviderListEntry

-- | <a>SAMLProviderListEntry</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>samlpleArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>samlpleCreateDate</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>samlpleValidUntil</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   </ul>
samlproviderListEntry :: SAMLProviderListEntry

-- | The Amazon Resource Name (ARN) of the SAML provider.
samlpleArn :: Lens' SAMLProviderListEntry (Maybe Text)

-- | The date and time when the SAML provider was created.
samlpleCreateDate :: Lens' SAMLProviderListEntry (Maybe UTCTime)

-- | The expiration date and time for the SAML provider.
samlpleValidUntil :: Lens' SAMLProviderListEntry (Maybe UTCTime)
data Role

-- | <a>Role</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rArn</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rAssumeRolePolicyDocument</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>rCreateDate</a> <tt>::</tt> <a>UTCTime</a></li>
--   <li><a>rPath</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rRoleId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rRoleName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
role :: Text -> Text -> Text -> Text -> UTCTime -> Role

-- | The Amazon Resource Name (ARN) specifying the role. For more
--   information about ARNs and how to use them in policies, see <a>IAM
--   Identifiers</a> in the <i>UsingIAM</i> guide.
rArn :: Lens' Role Text

-- | The policy that grants an entity permission to assume the role.
rAssumeRolePolicyDocument :: Lens' Role (Maybe Text)

-- | The date and time, in <a>ISO 8601 date-time format</a>, when the role
--   was created.
rCreateDate :: Lens' Role UTCTime

-- | The path to the role. For more information about paths, see <a>IAM
--   Identifiers</a> in the <i>Using IAM</i> guide.
rPath :: Lens' Role Text

-- | The stable and unique string identifying the role. For more
--   information about IDs, see <a>IAM Identifiers</a> in the <i>Using
--   IAM</i> guide.
rRoleId :: Lens' Role Text

-- | The friendly name that identifies the role.
rRoleName :: Lens' Role Text
data PolicyGroup

-- | <a>PolicyGroup</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pgGroupName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
policyGroup :: PolicyGroup

-- | The name (friendly name, not ARN) identifying the group.
pgGroupName :: Lens' PolicyGroup (Maybe Text)
data PolicyScopeType

-- | All
All :: PolicyScopeType

-- | AWS
Aws :: PolicyScopeType

-- | Local
Local :: PolicyScopeType
data UserDetail

-- | <a>UserDetail</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>udArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>udAttachedManagedPolicies</a> <tt>::</tt>
--   [<a>AttachedPolicy</a>]</li>
--   <li><a>udCreateDate</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>udGroupList</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>udPath</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>udUserId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>udUserName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>udUserPolicyList</a> <tt>::</tt> [<a>PolicyDetail</a>]</li>
--   </ul>
userDetail :: UserDetail
udArn :: Lens' UserDetail (Maybe Text)

-- | A list of the managed policies attached to the user.
udAttachedManagedPolicies :: Lens' UserDetail [AttachedPolicy]

-- | The date and time, in <a>ISO 8601 date-time format</a>, when the user
--   was created.
udCreateDate :: Lens' UserDetail (Maybe UTCTime)

-- | A list of IAM groups that the user is in.
udGroupList :: Lens' UserDetail [Text]

-- | The path to the user. For more information about paths, see <a>IAM
--   Identifiers</a> in the <i>Using IAM</i> guide.
udPath :: Lens' UserDetail (Maybe Text)

-- | The stable and unique string identifying the user. For more
--   information about IDs, see <a>IAM Identifiers</a> in the <i>Using
--   IAM</i> guide.
udUserId :: Lens' UserDetail (Maybe Text)

-- | The friendly name identifying the user.
udUserName :: Lens' UserDetail (Maybe Text)

-- | A list of the inline policies embedded in the user.
udUserPolicyList :: Lens' UserDetail [PolicyDetail]
data Policy

-- | <a>Policy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pAttachmentCount</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>pCreateDate</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>pDefaultVersionId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pIsAttachable</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>pPath</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pPolicyId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pPolicyName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pUpdateDate</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   </ul>
policy :: Policy
pArn :: Lens' Policy (Maybe Text)

-- | The number of entities (users, groups, and roles) that the policy is
--   attached to.
pAttachmentCount :: Lens' Policy (Maybe Int)

-- | The date and time, in <a>ISO 8601 date-time format</a>, when the
--   policy was created.
pCreateDate :: Lens' Policy (Maybe UTCTime)

-- | The identifier for the version of the policy that is set as the
--   default version.
pDefaultVersionId :: Lens' Policy (Maybe Text)

-- | A friendly description of the policy.
--   
--   This element is included in the response to the <tt>GetPolicy</tt>
--   operation. It is not included in the response to the
--   <tt>ListPolicies</tt> operation.
pDescription :: Lens' Policy (Maybe Text)

-- | Specifies whether the policy can be attached to an IAM user, group, or
--   role.
pIsAttachable :: Lens' Policy (Maybe Bool)

-- | The path to the policy.
--   
--   For more information about paths, see <a>IAM Identifiers</a> in the
--   <i>Using IAM</i> guide.
pPath :: Lens' Policy (Maybe Text)

-- | The stable and unique string identifying the policy.
--   
--   For more information about IDs, see <a>IAM Identifiers</a> in the
--   <i>Using IAM</i> guide.
pPolicyId :: Lens' Policy (Maybe Text)

-- | The friendly name (not ARN) identifying the policy.
pPolicyName :: Lens' Policy (Maybe Text)

-- | The date and time, in <a>ISO 8601 date-time format</a>, when the
--   policy was last updated.
--   
--   When a policy has only one version, this field contains the date and
--   time when the policy was created. When a policy has more than one
--   version, this field contains the date and time when the most recent
--   policy version was created.
pUpdateDate :: Lens' Policy (Maybe UTCTime)
data ServerCertificate

-- | <a>ServerCertificate</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>scCertificateBody</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>scCertificateChain</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>scServerCertificateMetadata</a> <tt>::</tt>
--   <a>ServerCertificateMetadata</a></li>
--   </ul>
serverCertificate :: ServerCertificateMetadata -> Text -> ServerCertificate

-- | The contents of the public key certificate.
scCertificateBody :: Lens' ServerCertificate Text

-- | The contents of the public key certificate chain.
scCertificateChain :: Lens' ServerCertificate (Maybe Text)

-- | The meta information of the server certificate, such as its name,
--   path, ID, and ARN.
scServerCertificateMetadata :: Lens' ServerCertificate ServerCertificateMetadata
data AccessKey

-- | <a>AccessKey</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>akAccessKeyId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>akCreateDate</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>akSecretAccessKey</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>akStatus</a> <tt>::</tt> <a>StatusType</a></li>
--   <li><a>akUserName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
accessKey :: Text -> Text -> StatusType -> Text -> AccessKey

-- | The ID for this access key.
akAccessKeyId :: Lens' AccessKey Text

-- | The date when the access key was created.
akCreateDate :: Lens' AccessKey (Maybe UTCTime)

-- | The secret key used to sign requests.
akSecretAccessKey :: Lens' AccessKey Text

-- | The status of the access key. <a>Active</a> means the key is valid for
--   API calls, while <a>Inactive</a> means it is not.
akStatus :: Lens' AccessKey StatusType

-- | The name of the IAM user that the access key is associated with.
akUserName :: Lens' AccessKey Text
data VirtualMFADevice

-- | <a>VirtualMFADevice</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vmfadBase32StringSeed</a> <tt>::</tt> <a>Maybe</a>
--   <a>Base64</a></li>
--   <li><a>vmfadEnableDate</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>vmfadQRCodePNG</a> <tt>::</tt> <a>Maybe</a> <a>Base64</a></li>
--   <li><a>vmfadSerialNumber</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>vmfadUser</a> <tt>::</tt> <a>Maybe</a> <a>User</a></li>
--   </ul>
virtualMFADevice :: Text -> VirtualMFADevice

-- | The Base32 seed defined as specified in <a>RFC3548</a>. The
--   <tt>Base32StringSeed</tt> is Base64-encoded.
vmfadBase32StringSeed :: Lens' VirtualMFADevice (Maybe Base64)

-- | The date and time on which the virtual MFA device was enabled.
vmfadEnableDate :: Lens' VirtualMFADevice (Maybe UTCTime)

-- | A QR code PNG image that encodes
--   'otpauth://totp/$virtualMFADeviceName@$AccountName?secret=$Base32String'
--   where '$virtualMFADeviceName' is one of the create call arguments,
--   <tt>AccountName</tt> is the user name if set (otherwise, the account
--   ID otherwise), and <tt>Base32String</tt> is the seed in Base32 format.
--   The <tt>Base32String</tt> value is Base64-encoded.
vmfadQRCodePNG :: Lens' VirtualMFADevice (Maybe Base64)

-- | The serial number associated with <a>VirtualMFADevice</a>.
vmfadSerialNumber :: Lens' VirtualMFADevice Text
vmfadUser :: Lens' VirtualMFADevice (Maybe User)
data SigningCertificate

-- | <a>SigningCertificate</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sc1CertificateBody</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>sc1CertificateId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>sc1Status</a> <tt>::</tt> <a>StatusType</a></li>
--   <li><a>sc1UploadDate</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>sc1UserName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
signingCertificate :: Text -> Text -> Text -> StatusType -> SigningCertificate

-- | The contents of the signing certificate.
sc1CertificateBody :: Lens' SigningCertificate Text

-- | The ID for the signing certificate.
sc1CertificateId :: Lens' SigningCertificate Text

-- | The status of the signing certificate. <a>Active</a> means the key is
--   valid for API calls, while <a>Inactive</a> means it is not.
sc1Status :: Lens' SigningCertificate StatusType

-- | The date when the signing certificate was uploaded.
sc1UploadDate :: Lens' SigningCertificate (Maybe UTCTime)

-- | The name of the user the signing certificate is associated with.
sc1UserName :: Lens' SigningCertificate Text
data AccessKeyLastUsed

-- | <a>AccessKeyLastUsed</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>akluLastUsedDate</a> <tt>::</tt> <a>UTCTime</a></li>
--   <li><a>akluRegion</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>akluServiceName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
accessKeyLastUsed :: UTCTime -> Text -> Text -> AccessKeyLastUsed

-- | The date and time, in <a>ISO 8601 date-time format</a>, when the
--   access key was most recently used.
akluLastUsedDate :: Lens' AccessKeyLastUsed UTCTime

-- | The AWS region where this access key was most recently used.
--   
--   For more information about AWS regions, see <a>Regions and
--   Endpoints</a> in the Amazon Web Services General Reference.
akluRegion :: Lens' AccessKeyLastUsed Text

-- | The name of the AWS service with which this access key was most
--   recently used.
akluServiceName :: Lens' AccessKeyLastUsed Text
data AccessKeyMetadata

-- | <a>AccessKeyMetadata</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>akmAccessKeyId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>akmCreateDate</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>akmStatus</a> <tt>::</tt> <a>Maybe</a> <a>StatusType</a></li>
--   <li><a>akmUserName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
accessKeyMetadata :: AccessKeyMetadata

-- | The ID for this access key.
akmAccessKeyId :: Lens' AccessKeyMetadata (Maybe Text)

-- | The date when the access key was created.
akmCreateDate :: Lens' AccessKeyMetadata (Maybe UTCTime)

-- | The status of the access key. <a>Active</a> means the key is valid for
--   API calls; <a>Inactive</a> means it is not.
akmStatus :: Lens' AccessKeyMetadata (Maybe StatusType)

-- | The name of the IAM user that the key is associated with.
akmUserName :: Lens' AccessKeyMetadata (Maybe Text)
data PolicyUser

-- | <a>PolicyUser</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>puUserName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
policyUser :: PolicyUser

-- | The name (friendly name, not ARN) identifying the user.
puUserName :: Lens' PolicyUser (Maybe Text)
instance Eq PolicyRole
instance Ord PolicyRole
instance Read PolicyRole
instance Show PolicyRole
instance Monoid PolicyRole
instance Eq AssignmentStatusType
instance Ord AssignmentStatusType
instance Read AssignmentStatusType
instance Show AssignmentStatusType
instance Generic AssignmentStatusType
instance Enum AssignmentStatusType
instance Eq PasswordPolicy
instance Ord PasswordPolicy
instance Read PasswordPolicy
instance Show PasswordPolicy
instance Eq Group
instance Ord Group
instance Read Group
instance Show Group
instance Eq AttachedPolicy
instance Ord AttachedPolicy
instance Read AttachedPolicy
instance Show AttachedPolicy
instance Eq MFADevice
instance Ord MFADevice
instance Read MFADevice
instance Show MFADevice
instance Eq PolicyVersion
instance Ord PolicyVersion
instance Read PolicyVersion
instance Show PolicyVersion
instance Eq ManagedPolicyDetail
instance Read ManagedPolicyDetail
instance Show ManagedPolicyDetail
instance Eq ReportFormatType
instance Ord ReportFormatType
instance Read ReportFormatType
instance Show ReportFormatType
instance Generic ReportFormatType
instance Enum ReportFormatType
instance Eq ServerCertificateMetadata
instance Ord ServerCertificateMetadata
instance Read ServerCertificateMetadata
instance Show ServerCertificateMetadata
instance Eq OpenIDConnectProviderListEntry
instance Ord OpenIDConnectProviderListEntry
instance Read OpenIDConnectProviderListEntry
instance Show OpenIDConnectProviderListEntry
instance Monoid OpenIDConnectProviderListEntry
instance Eq LoginProfile
instance Ord LoginProfile
instance Read LoginProfile
instance Show LoginProfile
instance Eq EntityType
instance Ord EntityType
instance Read EntityType
instance Show EntityType
instance Generic EntityType
instance Enum EntityType
instance Eq SummaryKeyType
instance Ord SummaryKeyType
instance Read SummaryKeyType
instance Show SummaryKeyType
instance Generic SummaryKeyType
instance Enum SummaryKeyType
instance Eq ReportStateType
instance Ord ReportStateType
instance Read ReportStateType
instance Show ReportStateType
instance Generic ReportStateType
instance Enum ReportStateType
instance Eq User
instance Ord User
instance Read User
instance Show User
instance Eq PolicyDetail
instance Ord PolicyDetail
instance Read PolicyDetail
instance Show PolicyDetail
instance Eq GroupDetail
instance Read GroupDetail
instance Show GroupDetail
instance Eq StatusType
instance Ord StatusType
instance Read StatusType
instance Show StatusType
instance Generic StatusType
instance Enum StatusType
instance Eq SAMLProviderListEntry
instance Ord SAMLProviderListEntry
instance Read SAMLProviderListEntry
instance Show SAMLProviderListEntry
instance Eq Role
instance Ord Role
instance Read Role
instance Show Role
instance Eq InstanceProfile
instance Read InstanceProfile
instance Show InstanceProfile
instance Eq RoleDetail
instance Read RoleDetail
instance Show RoleDetail
instance Eq PolicyGroup
instance Ord PolicyGroup
instance Read PolicyGroup
instance Show PolicyGroup
instance Monoid PolicyGroup
instance Eq PolicyScopeType
instance Ord PolicyScopeType
instance Read PolicyScopeType
instance Show PolicyScopeType
instance Generic PolicyScopeType
instance Enum PolicyScopeType
instance Eq UserDetail
instance Read UserDetail
instance Show UserDetail
instance Eq Policy
instance Ord Policy
instance Read Policy
instance Show Policy
instance Eq ServerCertificate
instance Read ServerCertificate
instance Show ServerCertificate
instance Eq AccessKey
instance Read AccessKey
instance Show AccessKey
instance Eq VirtualMFADevice
instance Read VirtualMFADevice
instance Show VirtualMFADevice
instance Eq SigningCertificate
instance Read SigningCertificate
instance Show SigningCertificate
instance Eq AccessKeyLastUsed
instance Ord AccessKeyLastUsed
instance Read AccessKeyLastUsed
instance Show AccessKeyLastUsed
instance Eq AccessKeyMetadata
instance Read AccessKeyMetadata
instance Show AccessKeyMetadata
instance Eq PolicyUser
instance Ord PolicyUser
instance Read PolicyUser
instance Show PolicyUser
instance Monoid PolicyUser
instance Datatype D1AssignmentStatusType
instance Constructor C1_0AssignmentStatusType
instance Constructor C1_1AssignmentStatusType
instance Constructor C1_2AssignmentStatusType
instance Datatype D1ReportFormatType
instance Constructor C1_0ReportFormatType
instance Datatype D1EntityType
instance Constructor C1_0EntityType
instance Constructor C1_1EntityType
instance Constructor C1_2EntityType
instance Constructor C1_3EntityType
instance Constructor C1_4EntityType
instance Datatype D1SummaryKeyType
instance Constructor C1_0SummaryKeyType
instance Constructor C1_1SummaryKeyType
instance Constructor C1_2SummaryKeyType
instance Constructor C1_3SummaryKeyType
instance Constructor C1_4SummaryKeyType
instance Constructor C1_5SummaryKeyType
instance Constructor C1_6SummaryKeyType
instance Constructor C1_7SummaryKeyType
instance Constructor C1_8SummaryKeyType
instance Constructor C1_9SummaryKeyType
instance Constructor C1_10SummaryKeyType
instance Constructor C1_11SummaryKeyType
instance Constructor C1_12SummaryKeyType
instance Constructor C1_13SummaryKeyType
instance Constructor C1_14SummaryKeyType
instance Constructor C1_15SummaryKeyType
instance Constructor C1_16SummaryKeyType
instance Constructor C1_17SummaryKeyType
instance Constructor C1_18SummaryKeyType
instance Constructor C1_19SummaryKeyType
instance Constructor C1_20SummaryKeyType
instance Constructor C1_21SummaryKeyType
instance Constructor C1_22SummaryKeyType
instance Constructor C1_23SummaryKeyType
instance Constructor C1_24SummaryKeyType
instance Datatype D1ReportStateType
instance Constructor C1_0ReportStateType
instance Constructor C1_1ReportStateType
instance Constructor C1_2ReportStateType
instance Datatype D1StatusType
instance Constructor C1_0StatusType
instance Constructor C1_1StatusType
instance Datatype D1PolicyScopeType
instance Constructor C1_0PolicyScopeType
instance Constructor C1_1PolicyScopeType
instance Constructor C1_2PolicyScopeType
instance ToQuery PolicyUser
instance FromXML PolicyUser
instance ToQuery AccessKeyMetadata
instance FromXML AccessKeyMetadata
instance ToQuery AccessKeyLastUsed
instance FromXML AccessKeyLastUsed
instance ToQuery SigningCertificate
instance FromXML SigningCertificate
instance ToQuery VirtualMFADevice
instance FromXML VirtualMFADevice
instance ToQuery AccessKey
instance FromXML AccessKey
instance ToQuery ServerCertificate
instance FromXML ServerCertificate
instance ToQuery Policy
instance FromXML Policy
instance ToQuery UserDetail
instance FromXML UserDetail
instance FromXML PolicyScopeType
instance ToQuery PolicyScopeType
instance ToHeader PolicyScopeType
instance ToByteString PolicyScopeType
instance ToText PolicyScopeType
instance FromText PolicyScopeType
instance Hashable PolicyScopeType
instance ToQuery PolicyGroup
instance FromXML PolicyGroup
instance ToQuery Role
instance FromXML Role
instance ToQuery SAMLProviderListEntry
instance FromXML SAMLProviderListEntry
instance FromXML StatusType
instance ToQuery StatusType
instance ToHeader StatusType
instance ToByteString StatusType
instance ToText StatusType
instance FromText StatusType
instance Hashable StatusType
instance ToQuery PolicyDetail
instance FromXML PolicyDetail
instance ToQuery User
instance FromXML User
instance FromXML ReportStateType
instance ToQuery ReportStateType
instance ToHeader ReportStateType
instance ToByteString ReportStateType
instance ToText ReportStateType
instance FromText ReportStateType
instance Hashable ReportStateType
instance ToQuery GroupDetail
instance FromXML GroupDetail
instance FromXML SummaryKeyType
instance ToQuery SummaryKeyType
instance ToHeader SummaryKeyType
instance ToByteString SummaryKeyType
instance ToText SummaryKeyType
instance FromText SummaryKeyType
instance Hashable SummaryKeyType
instance FromXML EntityType
instance ToQuery EntityType
instance ToHeader EntityType
instance ToByteString EntityType
instance ToText EntityType
instance FromText EntityType
instance Hashable EntityType
instance ToQuery LoginProfile
instance FromXML LoginProfile
instance ToQuery OpenIDConnectProviderListEntry
instance FromXML OpenIDConnectProviderListEntry
instance ToQuery ServerCertificateMetadata
instance FromXML ServerCertificateMetadata
instance FromXML ReportFormatType
instance ToQuery ReportFormatType
instance ToHeader ReportFormatType
instance ToByteString ReportFormatType
instance ToText ReportFormatType
instance FromText ReportFormatType
instance Hashable ReportFormatType
instance ToQuery RoleDetail
instance FromXML RoleDetail
instance ToQuery InstanceProfile
instance FromXML InstanceProfile
instance ToQuery PolicyVersion
instance FromXML PolicyVersion
instance ToQuery MFADevice
instance FromXML MFADevice
instance ToQuery AttachedPolicy
instance FromXML AttachedPolicy
instance ToQuery Group
instance FromXML Group
instance ToQuery PasswordPolicy
instance FromXML PasswordPolicy
instance FromXML AssignmentStatusType
instance ToQuery AssignmentStatusType
instance ToHeader AssignmentStatusType
instance ToByteString AssignmentStatusType
instance ToText AssignmentStatusType
instance FromText AssignmentStatusType
instance Hashable AssignmentStatusType
instance ToQuery PolicyRole
instance FromXML PolicyRole
instance ToQuery ManagedPolicyDetail
instance FromXML ManagedPolicyDetail
instance AWSService IAM


-- | Changes the status of the specified access key from Active to
--   Inactive, or vice versa. This action can be used to disable a user's
--   key as part of a key rotation work flow.
--   
--   If the <tt>UserName</tt> field is not specified, the UserName is
--   determined implicitly based on the AWS access key ID used to sign the
--   request. Because this action works for access keys under the AWS
--   account, you can use this action to manage root credentials even if
--   the AWS account has no associated users.
--   
--   For information about rotating keys, see <a>Managing Keys and
--   Certificates</a> in the <i>Using IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateAccessKey.html</a>
module Network.AWS.IAM.UpdateAccessKey
data UpdateAccessKey

-- | <a>UpdateAccessKey</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uakAccessKeyId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>uakStatus</a> <tt>::</tt> <a>StatusType</a></li>
--   <li><a>uakUserName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
updateAccessKey :: Text -> StatusType -> UpdateAccessKey

-- | The access key ID of the secret access key you want to update.
uakAccessKeyId :: Lens' UpdateAccessKey Text

-- | The status you want to assign to the secret access key. <a>Active</a>
--   means the key can be used for API calls to AWS, while <a>Inactive</a>
--   means the key cannot be used.
uakStatus :: Lens' UpdateAccessKey StatusType

-- | The name of the user whose key you want to update.
uakUserName :: Lens' UpdateAccessKey (Maybe Text)
data UpdateAccessKeyResponse

-- | <a>UpdateAccessKeyResponse</a> constructor.
updateAccessKeyResponse :: UpdateAccessKeyResponse
instance Eq UpdateAccessKey
instance Read UpdateAccessKey
instance Show UpdateAccessKey
instance Eq UpdateAccessKeyResponse
instance Ord UpdateAccessKeyResponse
instance Read UpdateAccessKeyResponse
instance Show UpdateAccessKeyResponse
instance Generic UpdateAccessKeyResponse
instance Datatype D1UpdateAccessKeyResponse
instance Constructor C1_0UpdateAccessKeyResponse
instance AWSRequest UpdateAccessKey
instance ToHeaders UpdateAccessKey
instance ToQuery UpdateAccessKey
instance ToPath UpdateAccessKey


-- | Updates the password policy settings for the AWS account.
--   
--   This action does not support partial updates. No parameters are
--   required, but if you do not specify a parameter, that parameter's
--   value reverts to its default value. See the Request Parameters section
--   for each parameter's default value.
--   
--   For more information about using a password policy, see <a>Managing an
--   IAMPassword Policy</a> in the <i>Using IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateAccountPasswordPolicy.html</a>
module Network.AWS.IAM.UpdateAccountPasswordPolicy
data UpdateAccountPasswordPolicy

-- | <a>UpdateAccountPasswordPolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uappAllowUsersToChangePassword</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>uappHardExpiry</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>uappMaxPasswordAge</a> <tt>::</tt> <a>Maybe</a>
--   <a>Natural</a></li>
--   <li><a>uappMinimumPasswordLength</a> <tt>::</tt> <a>Maybe</a>
--   <a>Natural</a></li>
--   <li><a>uappPasswordReusePrevention</a> <tt>::</tt> <a>Maybe</a>
--   <a>Natural</a></li>
--   <li><a>uappRequireLowercaseCharacters</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>uappRequireNumbers</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>uappRequireSymbols</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>uappRequireUppercaseCharacters</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   </ul>
updateAccountPasswordPolicy :: UpdateAccountPasswordPolicy

-- | Allows all IAM users in your account to use the AWS Management Console
--   to change their own passwords. For more information, see <a>Letting
--   IAM UsersChange Their Own Passwords</a> in the <i>Using IAM</i> guide.
--   
--   Default value: false
uappAllowUsersToChangePassword :: Lens' UpdateAccountPasswordPolicy (Maybe Bool)

-- | Prevents IAM users from setting a new password after their password
--   has expired.
--   
--   Default value: false
uappHardExpiry :: Lens' UpdateAccountPasswordPolicy (Maybe Bool)

-- | The number of days that an IAM user password is valid. The default
--   value of 0 means IAM user passwords never expire.
--   
--   Default value: 0
uappMaxPasswordAge :: Lens' UpdateAccountPasswordPolicy (Maybe Natural)

-- | The minimum number of characters allowed in an IAM user password.
--   
--   Default value: 6
uappMinimumPasswordLength :: Lens' UpdateAccountPasswordPolicy (Maybe Natural)

-- | Specifies the number of previous passwords that IAM users are
--   prevented from reusing. The default value of 0 means IAM users are not
--   prevented from reusing previous passwords.
--   
--   Default value: 0
uappPasswordReusePrevention :: Lens' UpdateAccountPasswordPolicy (Maybe Natural)

-- | Specifies whether IAM user passwords must contain at least one
--   lowercase character from the ISO basic Latin alphabet (a to z).
--   
--   Default value: false
uappRequireLowercaseCharacters :: Lens' UpdateAccountPasswordPolicy (Maybe Bool)

-- | Specifies whether IAM user passwords must contain at least one numeric
--   character (0 to 9).
--   
--   Default value: false
uappRequireNumbers :: Lens' UpdateAccountPasswordPolicy (Maybe Bool)

-- | Specifies whether IAM user passwords must contain at least one of the
--   following non-alphanumeric characters:
--   
--   ! @ # $ % ^ &amp;amp; * ( ) _ + - = [ ] { } | '
--   
--   Default value: false
uappRequireSymbols :: Lens' UpdateAccountPasswordPolicy (Maybe Bool)

-- | Specifies whether IAM user passwords must contain at least one
--   uppercase character from the ISO basic Latin alphabet (A to Z).
--   
--   Default value: false
uappRequireUppercaseCharacters :: Lens' UpdateAccountPasswordPolicy (Maybe Bool)
data UpdateAccountPasswordPolicyResponse

-- | <a>UpdateAccountPasswordPolicyResponse</a> constructor.
updateAccountPasswordPolicyResponse :: UpdateAccountPasswordPolicyResponse
instance Eq UpdateAccountPasswordPolicy
instance Ord UpdateAccountPasswordPolicy
instance Read UpdateAccountPasswordPolicy
instance Show UpdateAccountPasswordPolicy
instance Eq UpdateAccountPasswordPolicyResponse
instance Ord UpdateAccountPasswordPolicyResponse
instance Read UpdateAccountPasswordPolicyResponse
instance Show UpdateAccountPasswordPolicyResponse
instance Generic UpdateAccountPasswordPolicyResponse
instance Datatype D1UpdateAccountPasswordPolicyResponse
instance Constructor C1_0UpdateAccountPasswordPolicyResponse
instance AWSRequest UpdateAccountPasswordPolicy
instance ToHeaders UpdateAccountPasswordPolicy
instance ToQuery UpdateAccountPasswordPolicy
instance ToPath UpdateAccountPasswordPolicy


-- | Updates the policy that grants an entity permission to assume a role.
--   For more information about roles, go to <a>Using Roles to Delegate
--   Permissions andFederate Identities</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateAssumeRolePolicy.html</a>
module Network.AWS.IAM.UpdateAssumeRolePolicy
data UpdateAssumeRolePolicy

-- | <a>UpdateAssumeRolePolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uarpPolicyDocument</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>uarpRoleName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
updateAssumeRolePolicy :: Text -> Text -> UpdateAssumeRolePolicy

-- | The policy that grants an entity permission to assume the role.
uarpPolicyDocument :: Lens' UpdateAssumeRolePolicy Text

-- | The name of the role to update.
uarpRoleName :: Lens' UpdateAssumeRolePolicy Text
data UpdateAssumeRolePolicyResponse

-- | <a>UpdateAssumeRolePolicyResponse</a> constructor.
updateAssumeRolePolicyResponse :: UpdateAssumeRolePolicyResponse
instance Eq UpdateAssumeRolePolicy
instance Ord UpdateAssumeRolePolicy
instance Read UpdateAssumeRolePolicy
instance Show UpdateAssumeRolePolicy
instance Eq UpdateAssumeRolePolicyResponse
instance Ord UpdateAssumeRolePolicyResponse
instance Read UpdateAssumeRolePolicyResponse
instance Show UpdateAssumeRolePolicyResponse
instance Generic UpdateAssumeRolePolicyResponse
instance Datatype D1UpdateAssumeRolePolicyResponse
instance Constructor C1_0UpdateAssumeRolePolicyResponse
instance AWSRequest UpdateAssumeRolePolicy
instance ToHeaders UpdateAssumeRolePolicy
instance ToQuery UpdateAssumeRolePolicy
instance ToPath UpdateAssumeRolePolicy


-- | Updates the name and/or the path of the specified group.
--   
--   You should understand the implications of changing a group's path or
--   name. For more information, see <a>Renaming Users and Groups</a> in
--   the <i>Using IAM</i> guide. To change a group name the requester must
--   have appropriate permissions on both the source object and the target
--   object. For example, to change Managers to MGRs, the entity making the
--   request must have permission on Managers and MGRs, or must have
--   permission on all (*). For more information about permissions, see
--   Permissions and Policies.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateGroup.html</a>
module Network.AWS.IAM.UpdateGroup
data UpdateGroup

-- | <a>UpdateGroup</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ugGroupName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ugNewGroupName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ugNewPath</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
updateGroup :: Text -> UpdateGroup

-- | Name of the group to update. If you're changing the name of the group,
--   this is the original name.
ugGroupName :: Lens' UpdateGroup Text

-- | New name for the group. Only include this if changing the group's
--   name.
ugNewGroupName :: Lens' UpdateGroup (Maybe Text)

-- | New path for the group. Only include this if changing the group's
--   path.
ugNewPath :: Lens' UpdateGroup (Maybe Text)
data UpdateGroupResponse

-- | <a>UpdateGroupResponse</a> constructor.
updateGroupResponse :: UpdateGroupResponse
instance Eq UpdateGroup
instance Ord UpdateGroup
instance Read UpdateGroup
instance Show UpdateGroup
instance Eq UpdateGroupResponse
instance Ord UpdateGroupResponse
instance Read UpdateGroupResponse
instance Show UpdateGroupResponse
instance Generic UpdateGroupResponse
instance Datatype D1UpdateGroupResponse
instance Constructor C1_0UpdateGroupResponse
instance AWSRequest UpdateGroup
instance ToHeaders UpdateGroup
instance ToQuery UpdateGroup
instance ToPath UpdateGroup


-- | Changes the password for the specified user.
--   
--   Users can change their own passwords by calling
--   <tt>ChangePassword</tt>. For more information about modifying
--   passwords, see <a>Managing Passwords</a> in the <i>Using IAM</i>
--   guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateLoginProfile.html</a>
module Network.AWS.IAM.UpdateLoginProfile
data UpdateLoginProfile

-- | <a>UpdateLoginProfile</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ulpPassword</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ulpPasswordResetRequired</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>ulpUserName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
updateLoginProfile :: Text -> UpdateLoginProfile

-- | The new password for the specified user.
ulpPassword :: Lens' UpdateLoginProfile (Maybe Text)

-- | Require the specified user to set a new password on next sign-in.
ulpPasswordResetRequired :: Lens' UpdateLoginProfile (Maybe Bool)

-- | The name of the user whose password you want to update.
ulpUserName :: Lens' UpdateLoginProfile Text
data UpdateLoginProfileResponse

-- | <a>UpdateLoginProfileResponse</a> constructor.
updateLoginProfileResponse :: UpdateLoginProfileResponse
instance Eq UpdateLoginProfile
instance Ord UpdateLoginProfile
instance Read UpdateLoginProfile
instance Show UpdateLoginProfile
instance Eq UpdateLoginProfileResponse
instance Ord UpdateLoginProfileResponse
instance Read UpdateLoginProfileResponse
instance Show UpdateLoginProfileResponse
instance Generic UpdateLoginProfileResponse
instance Datatype D1UpdateLoginProfileResponse
instance Constructor C1_0UpdateLoginProfileResponse
instance AWSRequest UpdateLoginProfile
instance ToHeaders UpdateLoginProfile
instance ToQuery UpdateLoginProfile
instance ToPath UpdateLoginProfile


-- | Replaces the existing list of server certificate thumbprints with a
--   new list.
--   
--   The list that you pass with this action completely replaces the
--   existing list of thumbprints. (The lists are not merged.)
--   
--   Typically, you need to update a thumbprint only when the identity
--   provider's certificate changes, which occurs rarely. However, if the
--   provider's certificate <i>does</i> change, any attempt to assume an
--   IAM role that specifies the OIDC provider as a principal will fail
--   until the certificate thumbprint is updated.
--   
--   Because trust for the OpenID Connect provider is ultimately derived
--   from the provider's certificate and is validated by the thumbprint, it
--   is a best practice to limit access to the
--   <a>UpdateOpenIDConnectProviderThumbprint</a> action to
--   highly-privileged users.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateOpenIDConnectProviderThumbprint.html</a>
module Network.AWS.IAM.UpdateOpenIDConnectProviderThumbprint
data UpdateOpenIDConnectProviderThumbprint

-- | <a>UpdateOpenIDConnectProviderThumbprint</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uoidcptOpenIDConnectProviderArn</a> <tt>::</tt>
--   <a>Text</a></li>
--   <li><a>uoidcptThumbprintList</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
updateOpenIDConnectProviderThumbprint :: Text -> UpdateOpenIDConnectProviderThumbprint

-- | The Amazon Resource Name (ARN) of the IAM OpenID Connect (OIDC)
--   provider to update the thumbprint for. You can get a list of OIDC
--   provider ARNs by using the <tt>ListOpenIDConnectProviders</tt> action.
uoidcptOpenIDConnectProviderArn :: Lens' UpdateOpenIDConnectProviderThumbprint Text

-- | A list of certificate thumbprints that are associated with the
--   specified IAM OpenID Connect provider. For more information, see
--   <tt>CreateOpenIDConnectProvider</tt> .
uoidcptThumbprintList :: Lens' UpdateOpenIDConnectProviderThumbprint [Text]
data UpdateOpenIDConnectProviderThumbprintResponse

-- | <a>UpdateOpenIDConnectProviderThumbprintResponse</a> constructor.
updateOpenIDConnectProviderThumbprintResponse :: UpdateOpenIDConnectProviderThumbprintResponse
instance Eq UpdateOpenIDConnectProviderThumbprint
instance Ord UpdateOpenIDConnectProviderThumbprint
instance Read UpdateOpenIDConnectProviderThumbprint
instance Show UpdateOpenIDConnectProviderThumbprint
instance Eq UpdateOpenIDConnectProviderThumbprintResponse
instance Ord UpdateOpenIDConnectProviderThumbprintResponse
instance Read UpdateOpenIDConnectProviderThumbprintResponse
instance Show UpdateOpenIDConnectProviderThumbprintResponse
instance Generic UpdateOpenIDConnectProviderThumbprintResponse
instance Datatype D1UpdateOpenIDConnectProviderThumbprintResponse
instance Constructor C1_0UpdateOpenIDConnectProviderThumbprintResponse
instance AWSRequest UpdateOpenIDConnectProviderThumbprint
instance ToHeaders UpdateOpenIDConnectProviderThumbprint
instance ToQuery UpdateOpenIDConnectProviderThumbprint
instance ToPath UpdateOpenIDConnectProviderThumbprint


-- | Updates the metadata document for an existing SAML provider.
--   
--   This operation requires <a>Signature Version 4</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateSAMLProvider.html</a>
module Network.AWS.IAM.UpdateSAMLProvider
data UpdateSAMLProvider

-- | <a>UpdateSAMLProvider</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>usamlpSAMLMetadataDocument</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>usamlpSAMLProviderArn</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
updateSAMLProvider :: Text -> Text -> UpdateSAMLProvider

-- | An XML document generated by an identity provider (IdP) that supports
--   SAML 2.0. The document includes the issuer's name, expiration
--   information, and keys that can be used to validate the SAML
--   authentication response (assertions) that are received from the IdP.
--   You must generate the metadata document using the identity management
--   software that is used as your organization's IdP.
usamlpSAMLMetadataDocument :: Lens' UpdateSAMLProvider Text

-- | The Amazon Resource Name (ARN) of the SAML provider to update.
usamlpSAMLProviderArn :: Lens' UpdateSAMLProvider Text
data UpdateSAMLProviderResponse

-- | <a>UpdateSAMLProviderResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>usamlprSAMLProviderArn</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
updateSAMLProviderResponse :: UpdateSAMLProviderResponse

-- | The Amazon Resource Name (ARN) of the SAML provider that was updated.
usamlprSAMLProviderArn :: Lens' UpdateSAMLProviderResponse (Maybe Text)
instance Eq UpdateSAMLProvider
instance Ord UpdateSAMLProvider
instance Read UpdateSAMLProvider
instance Show UpdateSAMLProvider
instance Eq UpdateSAMLProviderResponse
instance Ord UpdateSAMLProviderResponse
instance Read UpdateSAMLProviderResponse
instance Show UpdateSAMLProviderResponse
instance Monoid UpdateSAMLProviderResponse
instance FromXML UpdateSAMLProviderResponse
instance AWSRequest UpdateSAMLProvider
instance ToHeaders UpdateSAMLProvider
instance ToQuery UpdateSAMLProvider
instance ToPath UpdateSAMLProvider


-- | Updates the name and/or the path of the specified server certificate.
--   
--   You should understand the implications of changing a server
--   certificate's path or name. For more information, see <a>Managing
--   Server Certificates</a> in the <i>Using IAM</i> guide. To change a
--   server certificate name the requester must have appropriate
--   permissions on both the source object and the target object. For
--   example, to change the name from ProductionCert to ProdCert, the
--   entity making the request must have permission on ProductionCert and
--   ProdCert, or must have permission on all (*). For more information
--   about permissions, see Permissions and Policies .
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateServerCertificate.html</a>
module Network.AWS.IAM.UpdateServerCertificate
data UpdateServerCertificate

-- | <a>UpdateServerCertificate</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>usc1NewPath</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>usc1NewServerCertificateName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>usc1ServerCertificateName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
updateServerCertificate :: Text -> UpdateServerCertificate

-- | The new path for the server certificate. Include this only if you are
--   updating the server certificate's path.
usc1NewPath :: Lens' UpdateServerCertificate (Maybe Text)

-- | The new name for the server certificate. Include this only if you are
--   updating the server certificate's name.
usc1NewServerCertificateName :: Lens' UpdateServerCertificate (Maybe Text)

-- | The name of the server certificate that you want to update.
usc1ServerCertificateName :: Lens' UpdateServerCertificate Text
data UpdateServerCertificateResponse

-- | <a>UpdateServerCertificateResponse</a> constructor.
updateServerCertificateResponse :: UpdateServerCertificateResponse
instance Eq UpdateServerCertificate
instance Ord UpdateServerCertificate
instance Read UpdateServerCertificate
instance Show UpdateServerCertificate
instance Eq UpdateServerCertificateResponse
instance Ord UpdateServerCertificateResponse
instance Read UpdateServerCertificateResponse
instance Show UpdateServerCertificateResponse
instance Generic UpdateServerCertificateResponse
instance Datatype D1UpdateServerCertificateResponse
instance Constructor C1_0UpdateServerCertificateResponse
instance AWSRequest UpdateServerCertificate
instance ToHeaders UpdateServerCertificate
instance ToQuery UpdateServerCertificate
instance ToPath UpdateServerCertificate


-- | Changes the status of the specified signing certificate from active to
--   disabled, or vice versa. This action can be used to disable a user's
--   signing certificate as part of a certificate rotation work flow.
--   
--   If the <tt>UserName</tt> field is not specified, the UserName is
--   determined implicitly based on the AWS access key ID used to sign the
--   request. Because this action works for access keys under the AWS
--   account, you can use this action to manage root credentials even if
--   the AWS account has no associated users.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateSigningCertificate.html</a>
module Network.AWS.IAM.UpdateSigningCertificate
data UpdateSigningCertificate

-- | <a>UpdateSigningCertificate</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uscCertificateId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>uscStatus</a> <tt>::</tt> <a>StatusType</a></li>
--   <li><a>uscUserName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
updateSigningCertificate :: Text -> StatusType -> UpdateSigningCertificate

-- | The ID of the signing certificate you want to update.
uscCertificateId :: Lens' UpdateSigningCertificate Text

-- | The status you want to assign to the certificate. <a>Active</a> means
--   the certificate can be used for API calls to AWS, while
--   <a>Inactive</a> means the certificate cannot be used.
uscStatus :: Lens' UpdateSigningCertificate StatusType

-- | The name of the user the signing certificate belongs to.
uscUserName :: Lens' UpdateSigningCertificate (Maybe Text)
data UpdateSigningCertificateResponse

-- | <a>UpdateSigningCertificateResponse</a> constructor.
updateSigningCertificateResponse :: UpdateSigningCertificateResponse
instance Eq UpdateSigningCertificate
instance Read UpdateSigningCertificate
instance Show UpdateSigningCertificate
instance Eq UpdateSigningCertificateResponse
instance Ord UpdateSigningCertificateResponse
instance Read UpdateSigningCertificateResponse
instance Show UpdateSigningCertificateResponse
instance Generic UpdateSigningCertificateResponse
instance Datatype D1UpdateSigningCertificateResponse
instance Constructor C1_0UpdateSigningCertificateResponse
instance AWSRequest UpdateSigningCertificate
instance ToHeaders UpdateSigningCertificate
instance ToQuery UpdateSigningCertificate
instance ToPath UpdateSigningCertificate


-- | Updates the name and/or the path of the specified user.
--   
--   You should understand the implications of changing a user's path or
--   name. For more information, see <a>Renaming Users and Groups</a> in
--   the <i>Using IAM</i> guide. To change a user name the requester must
--   have appropriate permissions on both the source object and the target
--   object. For example, to change Bob to Robert, the entity making the
--   request must have permission on Bob and Robert, or must have
--   permission on all (*). For more information about permissions, see
--   Permissions and Policies.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateUser.html</a>
module Network.AWS.IAM.UpdateUser
data UpdateUser

-- | <a>UpdateUser</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uuNewPath</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>uuNewUserName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>uuUserName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
updateUser :: Text -> UpdateUser

-- | New path for the user. Include this parameter only if you're changing
--   the user's path.
uuNewPath :: Lens' UpdateUser (Maybe Text)

-- | New name for the user. Include this parameter only if you're changing
--   the user's name.
uuNewUserName :: Lens' UpdateUser (Maybe Text)

-- | Name of the user to update. If you're changing the name of the user,
--   this is the original user name.
uuUserName :: Lens' UpdateUser Text
data UpdateUserResponse

-- | <a>UpdateUserResponse</a> constructor.
updateUserResponse :: UpdateUserResponse
instance Eq UpdateUser
instance Ord UpdateUser
instance Read UpdateUser
instance Show UpdateUser
instance Eq UpdateUserResponse
instance Ord UpdateUserResponse
instance Read UpdateUserResponse
instance Show UpdateUserResponse
instance Generic UpdateUserResponse
instance Datatype D1UpdateUserResponse
instance Constructor C1_0UpdateUserResponse
instance AWSRequest UpdateUser
instance ToHeaders UpdateUser
instance ToQuery UpdateUser
instance ToPath UpdateUser


-- | Uploads a server certificate entity for the AWS account. The server
--   certificate entity includes a public key certificate, a private key,
--   and an optional certificate chain, which should all be PEM-encoded.
--   
--   For information about the number of server certificates you can
--   upload, see <a>Limitations on IAM Entities</a> in the <i>Using IAM</i>
--   guide.
--   
--   Because the body of the public key certificate, private key, and the
--   certificate chain can be large, you should use POST rather than GET
--   when calling <a>UploadServerCertificate</a>. For information about
--   setting up signatures and authorization through the API, go to
--   <a>Signing AWS API Requests</a> in the <i>AWSGeneral Reference</i>.
--   For general information about using the Query API with IAM, go to
--   <a>Making Query Requests</a> in the <i>Using IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_UploadServerCertificate.html</a>
module Network.AWS.IAM.UploadServerCertificate
data UploadServerCertificate

-- | <a>UploadServerCertificate</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uscCertificateBody</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>uscCertificateChain</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>uscPath</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>uscPrivateKey</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>uscServerCertificateName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
uploadServerCertificate :: Text -> Text -> Text -> UploadServerCertificate

-- | The contents of the public key certificate in PEM-encoded format.
uscCertificateBody :: Lens' UploadServerCertificate Text

-- | The contents of the certificate chain. This is typically a
--   concatenation of the PEM-encoded public key certificates of the chain.
uscCertificateChain :: Lens' UploadServerCertificate (Maybe Text)

-- | The path for the server certificate. For more information about paths,
--   see <a>IAM Identifiers</a> in the <i>Using IAM</i> guide.
--   
--   This parameter is optional. If it is not included, it defaults to a
--   slash (/).
--   
--   If you are uploading a server certificate specifically for use with
--   Amazon CloudFront distributions, you must specify a path using the
--   '--path' option. The path must begin with '/cloudfront' and must
--   include a trailing slash (for example, '/cloudfront/test/').
uscPath :: Lens' UploadServerCertificate (Maybe Text)

-- | The contents of the private key in PEM-encoded format.
uscPrivateKey :: Lens' UploadServerCertificate Text

-- | The name for the server certificate. Do not include the path in this
--   value.
uscServerCertificateName :: Lens' UploadServerCertificate Text
data UploadServerCertificateResponse

-- | <a>UploadServerCertificateResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uscrServerCertificateMetadata</a> <tt>::</tt> <a>Maybe</a>
--   <a>ServerCertificateMetadata</a></li>
--   </ul>
uploadServerCertificateResponse :: UploadServerCertificateResponse

-- | The meta information of the uploaded server certificate without its
--   certificate body, certificate chain, and private key.
uscrServerCertificateMetadata :: Lens' UploadServerCertificateResponse (Maybe ServerCertificateMetadata)
instance Eq UploadServerCertificate
instance Ord UploadServerCertificate
instance Read UploadServerCertificate
instance Show UploadServerCertificate
instance Eq UploadServerCertificateResponse
instance Read UploadServerCertificateResponse
instance Show UploadServerCertificateResponse
instance FromXML UploadServerCertificateResponse
instance AWSRequest UploadServerCertificate
instance ToHeaders UploadServerCertificate
instance ToQuery UploadServerCertificate
instance ToPath UploadServerCertificate


-- | Uploads an X.509 signing certificate and associates it with the
--   specified user. Some AWS services use X.509 signing certificates to
--   validate requests that are signed with a corresponding private key.
--   When you upload the certificate, its default status is <a>Active</a>.
--   
--   If the <tt>UserName</tt> field is not specified, the user name is
--   determined implicitly based on the AWS access key ID used to sign the
--   request. Because this action works for access keys under the AWS
--   account, you can use this action to manage root credentials even if
--   the AWS account has no associated users.
--   
--   Because the body of a X.509 certificate can be large, you should use
--   POST rather than GET when calling <a>UploadSigningCertificate</a>. For
--   information about setting up signatures and authorization through the
--   API, go to <a>Signing AWSAPI Requests</a> in the <i>AWS General
--   Reference</i>. For general information about using the Query API with
--   IAM, go to <a>Making Query Requests</a> in the <i>Using IAM</i>guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_UploadSigningCertificate.html</a>
module Network.AWS.IAM.UploadSigningCertificate
data UploadSigningCertificate

-- | <a>UploadSigningCertificate</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>usc1CertificateBody</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>usc1UserName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
uploadSigningCertificate :: Text -> UploadSigningCertificate

-- | The contents of the signing certificate.
usc1CertificateBody :: Lens' UploadSigningCertificate Text

-- | The name of the user the signing certificate is for.
usc1UserName :: Lens' UploadSigningCertificate (Maybe Text)
data UploadSigningCertificateResponse

-- | <a>UploadSigningCertificateResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uscrCertificate</a> <tt>::</tt> <a>SigningCertificate</a></li>
--   </ul>
uploadSigningCertificateResponse :: SigningCertificate -> UploadSigningCertificateResponse

-- | Information about the certificate.
uscrCertificate :: Lens' UploadSigningCertificateResponse SigningCertificate
instance Eq UploadSigningCertificate
instance Ord UploadSigningCertificate
instance Read UploadSigningCertificate
instance Show UploadSigningCertificate
instance Eq UploadSigningCertificateResponse
instance Read UploadSigningCertificateResponse
instance Show UploadSigningCertificateResponse
instance FromXML UploadSigningCertificateResponse
instance AWSRequest UploadSigningCertificate
instance ToHeaders UploadSigningCertificate
instance ToQuery UploadSigningCertificate
instance ToPath UploadSigningCertificate


-- | Sets the specified version of the specified policy as the policy's
--   default (operative) version.
--   
--   This action affects all users, groups, and roles that the policy is
--   attached to. To list the users, groups, and roles that the policy is
--   attached to, use the <tt>ListEntitiesForPolicy</tt> API.
--   
--   For information about managed policies, refer to <a>Managed Policies
--   and InlinePolicies</a> in the <i>Using IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_SetDefaultPolicyVersion.html</a>
module Network.AWS.IAM.SetDefaultPolicyVersion
data SetDefaultPolicyVersion

-- | <a>SetDefaultPolicyVersion</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sdpvPolicyArn</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>sdpvVersionId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
setDefaultPolicyVersion :: Text -> Text -> SetDefaultPolicyVersion
sdpvPolicyArn :: Lens' SetDefaultPolicyVersion Text

-- | The version of the policy to set as the default (operative) version.
--   
--   For more information about managed policy versions, see <a>Versioning
--   forManaged Policies</a> in the <i>Using IAM</i> guide.
sdpvVersionId :: Lens' SetDefaultPolicyVersion Text
data SetDefaultPolicyVersionResponse

-- | <a>SetDefaultPolicyVersionResponse</a> constructor.
setDefaultPolicyVersionResponse :: SetDefaultPolicyVersionResponse
instance Eq SetDefaultPolicyVersion
instance Ord SetDefaultPolicyVersion
instance Read SetDefaultPolicyVersion
instance Show SetDefaultPolicyVersion
instance Eq SetDefaultPolicyVersionResponse
instance Ord SetDefaultPolicyVersionResponse
instance Read SetDefaultPolicyVersionResponse
instance Show SetDefaultPolicyVersionResponse
instance Generic SetDefaultPolicyVersionResponse
instance Datatype D1SetDefaultPolicyVersionResponse
instance Constructor C1_0SetDefaultPolicyVersionResponse
instance AWSRequest SetDefaultPolicyVersion
instance ToHeaders SetDefaultPolicyVersion
instance ToQuery SetDefaultPolicyVersion
instance ToPath SetDefaultPolicyVersion


-- | Synchronizes the specified MFA device with AWS servers.
--   
--   For more information about creating and working with virtual MFA
--   devices, go to <a>Using a Virtual MFA Device</a> in the <i>Using
--   IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_ResyncMFADevice.html</a>
module Network.AWS.IAM.ResyncMFADevice
data ResyncMFADevice

-- | <a>ResyncMFADevice</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rmfadAuthenticationCode1</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rmfadAuthenticationCode2</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rmfadSerialNumber</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rmfadUserName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
resyncMFADevice :: Text -> Text -> Text -> Text -> ResyncMFADevice

-- | An authentication code emitted by the device.
rmfadAuthenticationCode1 :: Lens' ResyncMFADevice Text

-- | A subsequent authentication code emitted by the device.
rmfadAuthenticationCode2 :: Lens' ResyncMFADevice Text

-- | Serial number that uniquely identifies the MFA device.
rmfadSerialNumber :: Lens' ResyncMFADevice Text

-- | The name of the user whose MFA device you want to resynchronize.
rmfadUserName :: Lens' ResyncMFADevice Text
data ResyncMFADeviceResponse

-- | <a>ResyncMFADeviceResponse</a> constructor.
resyncMFADeviceResponse :: ResyncMFADeviceResponse
instance Eq ResyncMFADevice
instance Ord ResyncMFADevice
instance Read ResyncMFADevice
instance Show ResyncMFADevice
instance Eq ResyncMFADeviceResponse
instance Ord ResyncMFADeviceResponse
instance Read ResyncMFADeviceResponse
instance Show ResyncMFADeviceResponse
instance Generic ResyncMFADeviceResponse
instance Datatype D1ResyncMFADeviceResponse
instance Constructor C1_0ResyncMFADeviceResponse
instance AWSRequest ResyncMFADevice
instance ToHeaders ResyncMFADevice
instance ToQuery ResyncMFADevice
instance ToPath ResyncMFADevice


-- | Removes the specified user from the specified group.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_RemoveUserFromGroup.html</a>
module Network.AWS.IAM.RemoveUserFromGroup
data RemoveUserFromGroup

-- | <a>RemoveUserFromGroup</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rufgGroupName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rufgUserName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
removeUserFromGroup :: Text -> Text -> RemoveUserFromGroup

-- | The name of the group to update.
rufgGroupName :: Lens' RemoveUserFromGroup Text

-- | The name of the user to remove.
rufgUserName :: Lens' RemoveUserFromGroup Text
data RemoveUserFromGroupResponse

-- | <a>RemoveUserFromGroupResponse</a> constructor.
removeUserFromGroupResponse :: RemoveUserFromGroupResponse
instance Eq RemoveUserFromGroup
instance Ord RemoveUserFromGroup
instance Read RemoveUserFromGroup
instance Show RemoveUserFromGroup
instance Eq RemoveUserFromGroupResponse
instance Ord RemoveUserFromGroupResponse
instance Read RemoveUserFromGroupResponse
instance Show RemoveUserFromGroupResponse
instance Generic RemoveUserFromGroupResponse
instance Datatype D1RemoveUserFromGroupResponse
instance Constructor C1_0RemoveUserFromGroupResponse
instance AWSRequest RemoveUserFromGroup
instance ToHeaders RemoveUserFromGroup
instance ToQuery RemoveUserFromGroup
instance ToPath RemoveUserFromGroup


-- | Removes the specified role from the specified instance profile.
--   
--   Make sure you do not have any Amazon EC2 instances running with the
--   role you are about to remove from the instance profile. Removing a
--   role from an instance profile that is associated with a running
--   instance will break any applications running on the instance. For more
--   information about roles, go to <a>Working with Roles</a>. For more
--   information about instance profiles, go to <a>About Instance
--   Profiles</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_RemoveRoleFromInstanceProfile.html</a>
module Network.AWS.IAM.RemoveRoleFromInstanceProfile
data RemoveRoleFromInstanceProfile

-- | <a>RemoveRoleFromInstanceProfile</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rrfipInstanceProfileName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rrfipRoleName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
removeRoleFromInstanceProfile :: Text -> Text -> RemoveRoleFromInstanceProfile

-- | The name of the instance profile to update.
rrfipInstanceProfileName :: Lens' RemoveRoleFromInstanceProfile Text

-- | The name of the role to remove.
rrfipRoleName :: Lens' RemoveRoleFromInstanceProfile Text
data RemoveRoleFromInstanceProfileResponse

-- | <a>RemoveRoleFromInstanceProfileResponse</a> constructor.
removeRoleFromInstanceProfileResponse :: RemoveRoleFromInstanceProfileResponse
instance Eq RemoveRoleFromInstanceProfile
instance Ord RemoveRoleFromInstanceProfile
instance Read RemoveRoleFromInstanceProfile
instance Show RemoveRoleFromInstanceProfile
instance Eq RemoveRoleFromInstanceProfileResponse
instance Ord RemoveRoleFromInstanceProfileResponse
instance Read RemoveRoleFromInstanceProfileResponse
instance Show RemoveRoleFromInstanceProfileResponse
instance Generic RemoveRoleFromInstanceProfileResponse
instance Datatype D1RemoveRoleFromInstanceProfileResponse
instance Constructor C1_0RemoveRoleFromInstanceProfileResponse
instance AWSRequest RemoveRoleFromInstanceProfile
instance ToHeaders RemoveRoleFromInstanceProfile
instance ToQuery RemoveRoleFromInstanceProfile
instance ToPath RemoveRoleFromInstanceProfile


-- | Removes the specified client ID (also known as audience) from the list
--   of client IDs registered for the specified IAM OpenID Connect
--   provider.
--   
--   This action is idempotent; it does not fail or return an error if you
--   try to remove a client ID that was removed previously.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_RemoveClientIDFromOpenIDConnectProvider.html</a>
module Network.AWS.IAM.RemoveClientIDFromOpenIDConnectProvider
data RemoveClientIDFromOpenIDConnectProvider

-- | <a>RemoveClientIDFromOpenIDConnectProvider</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rcidfoidcpClientID</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rcidfoidcpOpenIDConnectProviderArn</a> <tt>::</tt>
--   <a>Text</a></li>
--   </ul>
removeClientIDFromOpenIDConnectProvider :: Text -> Text -> RemoveClientIDFromOpenIDConnectProvider

-- | The client ID (also known as audience) to remove from the IAM OpenID
--   Connect provider. For more information about client IDs, see
--   <tt>CreateOpenIDConnectProvider</tt>.
rcidfoidcpClientID :: Lens' RemoveClientIDFromOpenIDConnectProvider Text

-- | The Amazon Resource Name (ARN) of the IAM OpenID Connect (OIDC)
--   provider to remove the client ID from. You can get a list of OIDC
--   provider ARNs by using the <tt>ListOpenIDConnectProviders</tt> action.
rcidfoidcpOpenIDConnectProviderArn :: Lens' RemoveClientIDFromOpenIDConnectProvider Text
data RemoveClientIDFromOpenIDConnectProviderResponse

-- | <a>RemoveClientIDFromOpenIDConnectProviderResponse</a> constructor.
removeClientIDFromOpenIDConnectProviderResponse :: RemoveClientIDFromOpenIDConnectProviderResponse
instance Eq RemoveClientIDFromOpenIDConnectProvider
instance Ord RemoveClientIDFromOpenIDConnectProvider
instance Read RemoveClientIDFromOpenIDConnectProvider
instance Show RemoveClientIDFromOpenIDConnectProvider
instance Eq RemoveClientIDFromOpenIDConnectProviderResponse
instance Ord RemoveClientIDFromOpenIDConnectProviderResponse
instance Read RemoveClientIDFromOpenIDConnectProviderResponse
instance Show RemoveClientIDFromOpenIDConnectProviderResponse
instance Generic RemoveClientIDFromOpenIDConnectProviderResponse
instance Datatype D1RemoveClientIDFromOpenIDConnectProviderResponse
instance Constructor C1_0RemoveClientIDFromOpenIDConnectProviderResponse
instance AWSRequest RemoveClientIDFromOpenIDConnectProvider
instance ToHeaders RemoveClientIDFromOpenIDConnectProvider
instance ToQuery RemoveClientIDFromOpenIDConnectProvider
instance ToPath RemoveClientIDFromOpenIDConnectProvider


-- | Adds (or updates) an inline policy document that is embedded in the
--   specified user.
--   
--   A user can also have a managed policy attached to it. To attach a
--   managed policy to a user, use <tt>AttachUserPolicy</tt>. To create a
--   new managed policy, use <tt>CreatePolicy</tt>. For information about
--   policies, refer to <a>Managed Policies and InlinePolicies</a> in the
--   <i>Using IAM</i> guide.
--   
--   For information about limits on the number of inline policies that you
--   can embed in a user, see <a>Limitations on IAM Entities</a> in the
--   <i>Using IAM</i> guide.
--   
--   Because policy documents can be large, you should use POST rather than
--   GET when calling <a>PutUserPolicy</a>. For general information about
--   using the Query API with IAM, go to <a>Making Query Requests</a> in
--   the <i>Using IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_PutUserPolicy.html</a>
module Network.AWS.IAM.PutUserPolicy
data PutUserPolicy

-- | <a>PutUserPolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pupPolicyDocument</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>pupPolicyName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>pupUserName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
putUserPolicy :: Text -> Text -> Text -> PutUserPolicy

-- | The policy document.
pupPolicyDocument :: Lens' PutUserPolicy Text

-- | The name of the policy document.
pupPolicyName :: Lens' PutUserPolicy Text

-- | The name of the user to associate the policy with.
pupUserName :: Lens' PutUserPolicy Text
data PutUserPolicyResponse

-- | <a>PutUserPolicyResponse</a> constructor.
putUserPolicyResponse :: PutUserPolicyResponse
instance Eq PutUserPolicy
instance Ord PutUserPolicy
instance Read PutUserPolicy
instance Show PutUserPolicy
instance Eq PutUserPolicyResponse
instance Ord PutUserPolicyResponse
instance Read PutUserPolicyResponse
instance Show PutUserPolicyResponse
instance Generic PutUserPolicyResponse
instance Datatype D1PutUserPolicyResponse
instance Constructor C1_0PutUserPolicyResponse
instance AWSRequest PutUserPolicy
instance ToHeaders PutUserPolicy
instance ToQuery PutUserPolicy
instance ToPath PutUserPolicy


-- | Adds (or updates) an inline policy document that is embedded in the
--   specified role.
--   
--   When you embed an inline policy in a role, the inline policy is used
--   as the role's access (permissions) policy. The role's trust policy is
--   created at the same time as the role, using <tt>CreateRole</tt>. You
--   can update a role's trust policy using
--   <tt>UpdateAssumeRolePolicy</tt>. For more information about roles, go
--   to <a>UsingRoles to Delegate Permissions and Federate Identities</a>.
--   
--   A role can also have a managed policy attached to it. To attach a
--   managed policy to a role, use <tt>AttachRolePolicy</tt>. To create a
--   new managed policy, use <tt>CreatePolicy</tt>. For information about
--   policies, refer to <a>Managed Policies and InlinePolicies</a> in the
--   <i>Using IAM</i> guide.
--   
--   For information about limits on the number of inline policies that you
--   can embed with a role, see <a>Limitations on IAM Entities</a> in the
--   <i>Using IAM</i> guide.
--   
--   Because policy documents can be large, you should use POST rather than
--   GET when calling <a>PutRolePolicy</a>. For general information about
--   using the Query API with IAM, go to <a>Making Query Requests</a> in
--   the <i>Using IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_PutRolePolicy.html</a>
module Network.AWS.IAM.PutRolePolicy
data PutRolePolicy

-- | <a>PutRolePolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>prpPolicyDocument</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>prpPolicyName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>prpRoleName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
putRolePolicy :: Text -> Text -> Text -> PutRolePolicy

-- | The policy document.
prpPolicyDocument :: Lens' PutRolePolicy Text

-- | The name of the policy document.
prpPolicyName :: Lens' PutRolePolicy Text

-- | The name of the role to associate the policy with.
prpRoleName :: Lens' PutRolePolicy Text
data PutRolePolicyResponse

-- | <a>PutRolePolicyResponse</a> constructor.
putRolePolicyResponse :: PutRolePolicyResponse
instance Eq PutRolePolicy
instance Ord PutRolePolicy
instance Read PutRolePolicy
instance Show PutRolePolicy
instance Eq PutRolePolicyResponse
instance Ord PutRolePolicyResponse
instance Read PutRolePolicyResponse
instance Show PutRolePolicyResponse
instance Generic PutRolePolicyResponse
instance Datatype D1PutRolePolicyResponse
instance Constructor C1_0PutRolePolicyResponse
instance AWSRequest PutRolePolicy
instance ToHeaders PutRolePolicy
instance ToQuery PutRolePolicy
instance ToPath PutRolePolicy


-- | Adds (or updates) an inline policy document that is embedded in the
--   specified group.
--   
--   A user can also have managed policies attached to it. To attach a
--   managed policy to a group, use <tt>AttachGroupPolicy</tt>. To create a
--   new managed policy, use <tt>CreatePolicy</tt>. For information about
--   policies, refer to <a>Managed Policies andInline Policies</a> in the
--   <i>Using IAM</i> guide.
--   
--   For information about limits on the number of inline policies that you
--   can embed in a group, see <a>Limitations on IAM Entities</a> in the
--   <i>Using IAM</i> guide.
--   
--   Because policy documents can be large, you should use POST rather than
--   GET when calling <a>PutGroupPolicy</a>. For general information about
--   using the Query API with IAM, go to <a>Making Query Requests</a> in
--   the <i>Using IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_PutGroupPolicy.html</a>
module Network.AWS.IAM.PutGroupPolicy
data PutGroupPolicy

-- | <a>PutGroupPolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pgpGroupName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>pgpPolicyDocument</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>pgpPolicyName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
putGroupPolicy :: Text -> Text -> Text -> PutGroupPolicy

-- | The name of the group to associate the policy with.
pgpGroupName :: Lens' PutGroupPolicy Text

-- | The policy document.
pgpPolicyDocument :: Lens' PutGroupPolicy Text

-- | The name of the policy document.
pgpPolicyName :: Lens' PutGroupPolicy Text
data PutGroupPolicyResponse

-- | <a>PutGroupPolicyResponse</a> constructor.
putGroupPolicyResponse :: PutGroupPolicyResponse
instance Eq PutGroupPolicy
instance Ord PutGroupPolicy
instance Read PutGroupPolicy
instance Show PutGroupPolicy
instance Eq PutGroupPolicyResponse
instance Ord PutGroupPolicyResponse
instance Read PutGroupPolicyResponse
instance Show PutGroupPolicyResponse
instance Generic PutGroupPolicyResponse
instance Datatype D1PutGroupPolicyResponse
instance Constructor C1_0PutGroupPolicyResponse
instance AWSRequest PutGroupPolicy
instance ToHeaders PutGroupPolicy
instance ToQuery PutGroupPolicy
instance ToPath PutGroupPolicy


-- | Lists the virtual MFA devices under the AWS account by assignment
--   status. If you do not specify an assignment status, the action returns
--   a list of all virtual MFA devices. Assignment status can be
--   <a>Assigned</a>, <a>Unassigned</a>, or <a>Any</a>.
--   
--   You can paginate the results using the <tt>MaxItems</tt> and
--   <tt>Marker</tt> parameters.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListVirtualMFADevices.html</a>
module Network.AWS.IAM.ListVirtualMFADevices
data ListVirtualMFADevices

-- | <a>ListVirtualMFADevices</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lvmfadAssignmentStatus</a> <tt>::</tt> <a>Maybe</a>
--   <a>AssignmentStatusType</a></li>
--   <li><a>lvmfadMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lvmfadMaxItems</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   </ul>
listVirtualMFADevices :: ListVirtualMFADevices

-- | The status (unassigned or assigned) of the devices to list. If you do
--   not specify an <tt>AssignmentStatus</tt>, the action defaults to
--   <a>Any</a> which lists both assigned and unassigned virtual MFA
--   devices.
lvmfadAssignmentStatus :: Lens' ListVirtualMFADevices (Maybe AssignmentStatusType)

-- | Use this parameter only when paginating results, and only in a
--   subsequent request after you've received a response where the results
--   are truncated. Set it to the value of the <tt>Marker</tt> element in
--   the response you just received.
lvmfadMarker :: Lens' ListVirtualMFADevices (Maybe Text)

-- | Use this parameter only when paginating results to indicate the
--   maximum number of MFA devices you want in the response. If there are
--   additional MFA devices beyond the maximum you specify, the
--   <tt>IsTruncated</tt> response element is <tt>true</tt>. This parameter
--   is optional. If you do not include it, it defaults to 100.
lvmfadMaxItems :: Lens' ListVirtualMFADevices (Maybe Natural)
data ListVirtualMFADevicesResponse

-- | <a>ListVirtualMFADevicesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lvmfadrIsTruncated</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>lvmfadrMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lvmfadrVirtualMFADevices</a> <tt>::</tt>
--   [<a>VirtualMFADevice</a>]</li>
--   </ul>
listVirtualMFADevicesResponse :: ListVirtualMFADevicesResponse

-- | A flag that indicates whether there are more items to list. If your
--   results were truncated, you can make a subsequent pagination request
--   using the <tt>Marker</tt> request parameter to retrieve more items the
--   list.
lvmfadrIsTruncated :: Lens' ListVirtualMFADevicesResponse (Maybe Bool)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, this element is present and
--   contains the value to use for the <tt>Marker</tt> parameter in a
--   subsequent pagination request.
lvmfadrMarker :: Lens' ListVirtualMFADevicesResponse (Maybe Text)

-- | The list of virtual MFA devices in the current account that match the
--   <tt>AssignmentStatus</tt> value that was passed in the request.
lvmfadrVirtualMFADevices :: Lens' ListVirtualMFADevicesResponse [VirtualMFADevice]
instance Eq ListVirtualMFADevices
instance Read ListVirtualMFADevices
instance Show ListVirtualMFADevices
instance Eq ListVirtualMFADevicesResponse
instance Read ListVirtualMFADevicesResponse
instance Show ListVirtualMFADevicesResponse
instance AWSPager ListVirtualMFADevices
instance FromXML ListVirtualMFADevicesResponse
instance AWSRequest ListVirtualMFADevices
instance ToHeaders ListVirtualMFADevices
instance ToQuery ListVirtualMFADevices
instance ToPath ListVirtualMFADevices


-- | Lists the IAM users that have the specified path prefix. If no path
--   prefix is specified, the action returns all users in the AWS account.
--   If there are none, the action returns an empty list.
--   
--   You can paginate the results using the <tt>MaxItems</tt> and
--   <tt>Marker</tt> parameters.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListUsers.html</a>
module Network.AWS.IAM.ListUsers
data ListUsers

-- | <a>ListUsers</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>luMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>luMaxItems</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>luPathPrefix</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listUsers :: ListUsers

-- | Use this parameter only when paginating results, and only in a
--   subsequent request after you've received a response where the results
--   are truncated. Set it to the value of the <tt>Marker</tt> element in
--   the response you just received.
luMarker :: Lens' ListUsers (Maybe Text)

-- | Use this parameter only when paginating results to indicate the
--   maximum number of user names you want in the response. If there are
--   additional user names beyond the maximum you specify, the
--   <tt>IsTruncated</tt> response element is <tt>true</tt> . This
--   parameter is optional. If you do not include it, it defaults to 100.
luMaxItems :: Lens' ListUsers (Maybe Natural)

-- | The path prefix for filtering the results. For example:
--   '/division_abc/subdivision_xyz/', which would get all user names whose
--   path starts with '/division_abc/subdivision_xyz/'.
--   
--   This parameter is optional. If it is not included, it defaults to a
--   slash (/), listing all user names.
luPathPrefix :: Lens' ListUsers (Maybe Text)
data ListUsersResponse

-- | <a>ListUsersResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lurIsTruncated</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>lurMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lurUsers</a> <tt>::</tt> [<a>User</a>]</li>
--   </ul>
listUsersResponse :: ListUsersResponse

-- | A flag that indicates whether there are more user names to list. If
--   your results were truncated, you can make a subsequent pagination
--   request using the <tt>Marker</tt> request parameter to retrieve more
--   users in the list.
lurIsTruncated :: Lens' ListUsersResponse (Maybe Bool)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, this element is present and
--   contains the value to use for the <tt>Marker</tt> parameter in a
--   subsequent pagination request.
lurMarker :: Lens' ListUsersResponse (Maybe Text)

-- | A list of users.
lurUsers :: Lens' ListUsersResponse [User]
instance Eq ListUsers
instance Ord ListUsers
instance Read ListUsers
instance Show ListUsers
instance Eq ListUsersResponse
instance Read ListUsersResponse
instance Show ListUsersResponse
instance AWSPager ListUsers
instance FromXML ListUsersResponse
instance AWSRequest ListUsers
instance ToHeaders ListUsers
instance ToQuery ListUsers
instance ToPath ListUsers


-- | Lists the names of the inline policies embedded in the specified user.
--   
--   A user can also have managed policies attached to it. To list the
--   managed policies that are attached to a user, use
--   <tt>ListAttachedUserPolicies</tt>. For more information about
--   policies, refer to <a>Managed Policies and Inline Policies</a> in the
--   <i>Using IAM</i> guide.
--   
--   You can paginate the results using the <tt>MaxItems</tt> and
--   <tt>Marker</tt> parameters. If there are no inline policies embedded
--   with the specified user, the action returns an empty list.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListUserPolicies.html</a>
module Network.AWS.IAM.ListUserPolicies
data ListUserPolicies

-- | <a>ListUserPolicies</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lupMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lupMaxItems</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>lupUserName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
listUserPolicies :: Text -> ListUserPolicies

-- | Use this only when paginating results, and only in a subsequent
--   request after you've received a response where the results are
--   truncated. Set it to the value of the <tt>Marker</tt> element in the
--   response you just received.
lupMarker :: Lens' ListUserPolicies (Maybe Text)

-- | Use this only when paginating results to indicate the maximum number
--   of policy names you want in the response. If there are additional
--   policy names beyond the maximum you specify, the <tt>IsTruncated</tt>
--   response element is <tt>true</tt>. This parameter is optional. If you
--   do not include it, it defaults to 100.
lupMaxItems :: Lens' ListUserPolicies (Maybe Natural)

-- | The name of the user to list policies for.
lupUserName :: Lens' ListUserPolicies Text
data ListUserPoliciesResponse

-- | <a>ListUserPoliciesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>luprIsTruncated</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>luprMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>luprPolicyNames</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
listUserPoliciesResponse :: ListUserPoliciesResponse

-- | A flag that indicates whether there are more policy names to list. If
--   your results were truncated, you can make a subsequent pagination
--   request using the <tt>Marker</tt> request parameter to retrieve more
--   policy names in the list.
luprIsTruncated :: Lens' ListUserPoliciesResponse (Maybe Bool)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, this element is present and
--   contains the value to use for the <tt>Marker</tt> parameter in a
--   subsequent pagination request.
luprMarker :: Lens' ListUserPoliciesResponse (Maybe Text)

-- | A list of policy names.
luprPolicyNames :: Lens' ListUserPoliciesResponse [Text]
instance Eq ListUserPolicies
instance Ord ListUserPolicies
instance Read ListUserPolicies
instance Show ListUserPolicies
instance Eq ListUserPoliciesResponse
instance Ord ListUserPoliciesResponse
instance Read ListUserPoliciesResponse
instance Show ListUserPoliciesResponse
instance AWSPager ListUserPolicies
instance FromXML ListUserPoliciesResponse
instance AWSRequest ListUserPolicies
instance ToHeaders ListUserPolicies
instance ToQuery ListUserPolicies
instance ToPath ListUserPolicies


-- | Returns information about the signing certificates associated with the
--   specified user. If there are none, the action returns an empty list.
--   
--   Although each user is limited to a small number of signing
--   certificates, you can still paginate the results using the
--   <tt>MaxItems</tt> and <tt>Marker</tt> parameters.
--   
--   If the <tt>UserName</tt> field is not specified, the user name is
--   determined implicitly based on the AWS access key ID used to sign the
--   request. Because this action works for access keys under the AWS
--   account, you can use this action to manage root credentials even if
--   the AWS account has no associated users.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListSigningCertificates.html</a>
module Network.AWS.IAM.ListSigningCertificates
data ListSigningCertificates

-- | <a>ListSigningCertificates</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lsc1Marker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lsc1MaxItems</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>lsc1UserName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listSigningCertificates :: ListSigningCertificates

-- | Use this only when paginating results, and only in a subsequent
--   request after you've received a response where the results are
--   truncated. Set it to the value of the <tt>Marker</tt> element in the
--   response you just received.
lsc1Marker :: Lens' ListSigningCertificates (Maybe Text)

-- | Use this only when paginating results to indicate the maximum number
--   of certificate IDs you want in the response. If there are additional
--   certificate IDs beyond the maximum you specify, the
--   <tt>IsTruncated</tt> response element is <tt>true</tt>. This parameter
--   is optional. If you do not include it, it defaults to 100.
lsc1MaxItems :: Lens' ListSigningCertificates (Maybe Natural)

-- | The name of the user.
lsc1UserName :: Lens' ListSigningCertificates (Maybe Text)
data ListSigningCertificatesResponse

-- | <a>ListSigningCertificatesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lscr1Certificates</a> <tt>::</tt>
--   [<a>SigningCertificate</a>]</li>
--   <li><a>lscr1IsTruncated</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>lscr1Marker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listSigningCertificatesResponse :: ListSigningCertificatesResponse

-- | A list of the user's signing certificate information.
lscr1Certificates :: Lens' ListSigningCertificatesResponse [SigningCertificate]

-- | A flag that indicates whether there are more certificate IDs to list.
--   If your results were truncated, you can make a subsequent pagination
--   request using the <tt>Marker</tt> request parameter to retrieve more
--   certificates in the list.
lscr1IsTruncated :: Lens' ListSigningCertificatesResponse (Maybe Bool)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, this element is present and
--   contains the value to use for the <tt>Marker</tt> parameter in a
--   subsequent pagination request.
lscr1Marker :: Lens' ListSigningCertificatesResponse (Maybe Text)
instance Eq ListSigningCertificates
instance Ord ListSigningCertificates
instance Read ListSigningCertificates
instance Show ListSigningCertificates
instance Eq ListSigningCertificatesResponse
instance Read ListSigningCertificatesResponse
instance Show ListSigningCertificatesResponse
instance AWSPager ListSigningCertificates
instance FromXML ListSigningCertificatesResponse
instance AWSRequest ListSigningCertificates
instance ToHeaders ListSigningCertificates
instance ToQuery ListSigningCertificates
instance ToPath ListSigningCertificates


-- | Lists the server certificates that have the specified path prefix. If
--   none exist, the action returns an empty list.
--   
--   You can paginate the results using the <tt>MaxItems</tt> and
--   <tt>Marker</tt> parameters.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListServerCertificates.html</a>
module Network.AWS.IAM.ListServerCertificates
data ListServerCertificates

-- | <a>ListServerCertificates</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lscMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lscMaxItems</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>lscPathPrefix</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listServerCertificates :: ListServerCertificates

-- | Use this only when paginating results, and only in a subsequent
--   request after you've received a response where the results are
--   truncated. Set it to the value of the <tt>Marker</tt> element in the
--   response you just received.
lscMarker :: Lens' ListServerCertificates (Maybe Text)

-- | Use this only when paginating results to indicate the maximum number
--   of server certificates you want in the response. If there are
--   additional server certificates beyond the maximum you specify, the
--   <tt>IsTruncated</tt> response element will be set to <tt>true</tt>.
--   This parameter is optional. If you do not include it, it defaults to
--   100.
lscMaxItems :: Lens' ListServerCertificates (Maybe Natural)

-- | The path prefix for filtering the results. For example:
--   '/company/servercerts' would get all server certificates for which the
--   path starts with '/company/servercerts'.
--   
--   This parameter is optional. If it is not included, it defaults to a
--   slash (/), listing all server certificates.
lscPathPrefix :: Lens' ListServerCertificates (Maybe Text)
data ListServerCertificatesResponse

-- | <a>ListServerCertificatesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lscrIsTruncated</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>lscrMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lscrServerCertificateMetadataList</a> <tt>::</tt>
--   [<a>ServerCertificateMetadata</a>]</li>
--   </ul>
listServerCertificatesResponse :: ListServerCertificatesResponse

-- | A flag that indicates whether there are more server certificates to
--   list. If your results were truncated, you can make a subsequent
--   pagination request using the <tt>Marker</tt> request parameter to
--   retrieve more server certificates in the list.
lscrIsTruncated :: Lens' ListServerCertificatesResponse (Maybe Bool)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, this element is present and
--   contains the value to use for the <tt>Marker</tt> parameter in a
--   subsequent pagination request.
lscrMarker :: Lens' ListServerCertificatesResponse (Maybe Text)

-- | A list of server certificates.
lscrServerCertificateMetadataList :: Lens' ListServerCertificatesResponse [ServerCertificateMetadata]
instance Eq ListServerCertificates
instance Ord ListServerCertificates
instance Read ListServerCertificates
instance Show ListServerCertificates
instance Eq ListServerCertificatesResponse
instance Read ListServerCertificatesResponse
instance Show ListServerCertificatesResponse
instance AWSPager ListServerCertificates
instance FromXML ListServerCertificatesResponse
instance AWSRequest ListServerCertificates
instance ToHeaders ListServerCertificates
instance ToQuery ListServerCertificates
instance ToPath ListServerCertificates


-- | Lists the SAML providers in the account.
--   
--   This operation requires <a>Signature Version 4</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListSAMLProviders.html</a>
module Network.AWS.IAM.ListSAMLProviders
data ListSAMLProviders

-- | <a>ListSAMLProviders</a> constructor.
listSAMLProviders :: ListSAMLProviders
data ListSAMLProvidersResponse

-- | <a>ListSAMLProvidersResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lsamlprSAMLProviderList</a> <tt>::</tt>
--   [<a>SAMLProviderListEntry</a>]</li>
--   </ul>
listSAMLProvidersResponse :: ListSAMLProvidersResponse

-- | The list of SAML providers for this account.
lsamlprSAMLProviderList :: Lens' ListSAMLProvidersResponse [SAMLProviderListEntry]
instance Eq ListSAMLProviders
instance Ord ListSAMLProviders
instance Read ListSAMLProviders
instance Show ListSAMLProviders
instance Generic ListSAMLProviders
instance Eq ListSAMLProvidersResponse
instance Read ListSAMLProvidersResponse
instance Show ListSAMLProvidersResponse
instance Monoid ListSAMLProvidersResponse
instance Semigroup ListSAMLProvidersResponse
instance Datatype D1ListSAMLProviders
instance Constructor C1_0ListSAMLProviders
instance FromXML ListSAMLProvidersResponse
instance AWSRequest ListSAMLProviders
instance ToHeaders ListSAMLProviders
instance ToQuery ListSAMLProviders
instance ToPath ListSAMLProviders
instance IsList ListSAMLProvidersResponse


-- | Lists the roles that have the specified path prefix. If there are
--   none, the action returns an empty list. For more information about
--   roles, go to <a>Workingwith Roles</a>.
--   
--   You can paginate the results using the <tt>MaxItems</tt> and
--   <tt>Marker</tt> parameters.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListRoles.html</a>
module Network.AWS.IAM.ListRoles
data ListRoles

-- | <a>ListRoles</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lrMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lrMaxItems</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>lrPathPrefix</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listRoles :: ListRoles

-- | Use this parameter only when paginating results, and only in a
--   subsequent request after you've received a response where the results
--   are truncated. Set it to the value of the <tt>Marker</tt> element in
--   the response you just received.
lrMarker :: Lens' ListRoles (Maybe Text)

-- | Use this parameter only when paginating results to indicate the
--   maximum number of roles you want in the response. If there are
--   additional roles beyond the maximum you specify, the
--   <tt>IsTruncated</tt> response element is <tt>true</tt>. This parameter
--   is optional. If you do not include it, it defaults to 100.
lrMaxItems :: Lens' ListRoles (Maybe Natural)

-- | The path prefix for filtering the results. For example, the prefix
--   '/application_abc/component_xyz/' gets all roles whose path starts
--   with '/application_abc/component_xyz/'.
--   
--   This parameter is optional. If it is not included, it defaults to a
--   slash (/), listing all roles.
lrPathPrefix :: Lens' ListRoles (Maybe Text)
data ListRolesResponse

-- | <a>ListRolesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lrrIsTruncated</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>lrrMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lrrRoles</a> <tt>::</tt> [<a>Role</a>]</li>
--   </ul>
listRolesResponse :: ListRolesResponse

-- | A flag that indicates whether there are more roles to list. If your
--   results were truncated, you can make a subsequent pagination request
--   using the <tt>Marker</tt> request parameter to retrieve more roles in
--   the list.
lrrIsTruncated :: Lens' ListRolesResponse (Maybe Bool)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, this element is present and
--   contains the value to use for the <tt>Marker</tt> parameter in a
--   subsequent pagination request.
lrrMarker :: Lens' ListRolesResponse (Maybe Text)

-- | A list of roles.
lrrRoles :: Lens' ListRolesResponse [Role]
instance Eq ListRoles
instance Ord ListRoles
instance Read ListRoles
instance Show ListRoles
instance Eq ListRolesResponse
instance Read ListRolesResponse
instance Show ListRolesResponse
instance AWSPager ListRoles
instance FromXML ListRolesResponse
instance AWSRequest ListRoles
instance ToHeaders ListRoles
instance ToQuery ListRoles
instance ToPath ListRoles


-- | Lists the names of the inline policies that are embedded in the
--   specified role.
--   
--   A role can also have managed policies attached to it. To list the
--   managed policies that are attached to a role, use
--   <tt>ListAttachedRolePolicies</tt>. For more information about
--   policies, refer to <a>Managed Policies and Inline Policies</a> in the
--   <i>Using IAM</i> guide.
--   
--   You can paginate the results using the <tt>MaxItems</tt> and
--   <tt>Marker</tt> parameters. If there are no inline policies embedded
--   with the specified role, the action returns an empty list.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListRolePolicies.html</a>
module Network.AWS.IAM.ListRolePolicies
data ListRolePolicies

-- | <a>ListRolePolicies</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lrpMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lrpMaxItems</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>lrpRoleName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
listRolePolicies :: Text -> ListRolePolicies

-- | Use this parameter only when paginating results, and only in a
--   subsequent request after you've received a response where the results
--   are truncated. Set it to the value of the <tt>Marker</tt> element in
--   the response you just received.
lrpMarker :: Lens' ListRolePolicies (Maybe Text)

-- | Use this parameter only when paginating results to indicate the
--   maximum number of role policies you want in the response. If there are
--   additional role policies beyond the maximum you specify, the
--   <tt>IsTruncated</tt> response element is <tt>true</tt>. This parameter
--   is optional. If you do not include it, it defaults to 100.
lrpMaxItems :: Lens' ListRolePolicies (Maybe Natural)

-- | The name of the role to list policies for.
lrpRoleName :: Lens' ListRolePolicies Text
data ListRolePoliciesResponse

-- | <a>ListRolePoliciesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lrprIsTruncated</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>lrprMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lrprPolicyNames</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
listRolePoliciesResponse :: ListRolePoliciesResponse

-- | A flag that indicates whether there are more policy names to list. If
--   your results were truncated, you can make a subsequent pagination
--   request using the <tt>Marker</tt> request parameter to retrieve more
--   policy names in the list.
lrprIsTruncated :: Lens' ListRolePoliciesResponse (Maybe Bool)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, this element is present and
--   contains the value to use for the <tt>Marker</tt> parameter in a
--   subsequent pagination request.
lrprMarker :: Lens' ListRolePoliciesResponse (Maybe Text)

-- | A list of policy names.
lrprPolicyNames :: Lens' ListRolePoliciesResponse [Text]
instance Eq ListRolePolicies
instance Ord ListRolePolicies
instance Read ListRolePolicies
instance Show ListRolePolicies
instance Eq ListRolePoliciesResponse
instance Ord ListRolePoliciesResponse
instance Read ListRolePoliciesResponse
instance Show ListRolePoliciesResponse
instance AWSPager ListRolePolicies
instance FromXML ListRolePoliciesResponse
instance AWSRequest ListRolePolicies
instance ToHeaders ListRolePolicies
instance ToQuery ListRolePolicies
instance ToPath ListRolePolicies


-- | Lists information about the versions of the specified managed policy,
--   including the version that is set as the policy's default version.
--   
--   For more information about managed policies, refer to <a>Managed
--   Policies andInline Policies</a> in the <i>Using IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListPolicyVersions.html</a>
module Network.AWS.IAM.ListPolicyVersions
data ListPolicyVersions

-- | <a>ListPolicyVersions</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lpvMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lpvMaxItems</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>lpvPolicyArn</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
listPolicyVersions :: Text -> ListPolicyVersions

-- | Use this parameter only when paginating results, and only in a
--   subsequent request after you've received a response where the results
--   are truncated. Set it to the value of the <tt>Marker</tt> element in
--   the response you just received.
lpvMarker :: Lens' ListPolicyVersions (Maybe Text)

-- | Use this parameter only when paginating results to indicate the
--   maximum number of policy versions you want in the response. If there
--   are additional policy versions beyond the maximum you specify, the
--   <tt>IsTruncated</tt> response element is <tt>true</tt>. This parameter
--   is optional. If you do not include it, it defaults to 100.
lpvMaxItems :: Lens' ListPolicyVersions (Maybe Natural)
lpvPolicyArn :: Lens' ListPolicyVersions Text
data ListPolicyVersionsResponse

-- | <a>ListPolicyVersionsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lpvrIsTruncated</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>lpvrMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lpvrVersions</a> <tt>::</tt> [<a>PolicyVersion</a>]</li>
--   </ul>
listPolicyVersionsResponse :: ListPolicyVersionsResponse

-- | A flag that indicates whether there are more policy versions to list.
--   If your results were truncated, you can make a subsequent pagination
--   request using the <tt>Marker</tt> request parameter to retrieve more
--   policy versions in the list.
lpvrIsTruncated :: Lens' ListPolicyVersionsResponse (Maybe Bool)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, this element is present and
--   contains the value to use for the <tt>Marker</tt> parameter in a
--   subsequent pagination request.
lpvrMarker :: Lens' ListPolicyVersionsResponse (Maybe Text)

-- | A list of policy versions.
--   
--   For more information about managed policy versions, see <a>Versioning
--   forManaged Policies</a> in the <i>Using IAM</i> guide.
lpvrVersions :: Lens' ListPolicyVersionsResponse [PolicyVersion]
instance Eq ListPolicyVersions
instance Ord ListPolicyVersions
instance Read ListPolicyVersions
instance Show ListPolicyVersions
instance Eq ListPolicyVersionsResponse
instance Read ListPolicyVersionsResponse
instance Show ListPolicyVersionsResponse
instance FromXML ListPolicyVersionsResponse
instance AWSRequest ListPolicyVersions
instance ToHeaders ListPolicyVersions
instance ToQuery ListPolicyVersions
instance ToPath ListPolicyVersions


-- | Lists all the managed policies that are available to your account,
--   including your own customer managed policies and all AWS managed
--   policies.
--   
--   You can filter the list of policies that is returned using the
--   optional <tt>OnlyAttached</tt>, <tt>Scope</tt>, and
--   <tt>PathPrefix</tt> parameters. For example, to list only the customer
--   managed policies in your AWS account, set <tt>Scope</tt> to
--   <a>Local</a>. To list only AWS managed policies, set <tt>Scope</tt> to
--   <tt>AWS</tt>.
--   
--   You can paginate the results using the <tt>MaxItems</tt> and
--   <tt>Marker</tt> parameters.
--   
--   For more information about managed policies, refer to <a>Managed
--   Policies andInline Policies</a> in the <i>Using IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListPolicies.html</a>
module Network.AWS.IAM.ListPolicies
data ListPolicies

-- | <a>ListPolicies</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lpMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lpMaxItems</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>lpOnlyAttached</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>lpPathPrefix</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lpScope</a> <tt>::</tt> <a>Maybe</a>
--   <a>PolicyScopeType</a></li>
--   </ul>
listPolicies :: ListPolicies

-- | Use this parameter only when paginating results, and only in a
--   subsequent request after you've received a response where the results
--   are truncated. Set it to the value of the <tt>Marker</tt> element in
--   the response you just received.
lpMarker :: Lens' ListPolicies (Maybe Text)

-- | Use this parameter only when paginating results to indicate the
--   maximum number of policies you want in the response. If there are
--   additional policies beyond the maximum you specify, the
--   <tt>IsTruncated</tt> response element is <tt>true</tt>. This parameter
--   is optional. If you do not include it, it defaults to 100.
lpMaxItems :: Lens' ListPolicies (Maybe Natural)

-- | A flag to filter the results to only the attached policies.
--   
--   When <tt>OnlyAttached</tt> is <tt>true</tt>, the returned list
--   contains only the policies that are attached to a user, group, or
--   role. When <tt>OnlyAttached</tt> is <tt>false</tt>, or when the
--   parameter is not included, all policies are returned.
lpOnlyAttached :: Lens' ListPolicies (Maybe Bool)

-- | The path prefix for filtering the results. This parameter is optional.
--   If it is not included, it defaults to a slash (/), listing all
--   policies.
lpPathPrefix :: Lens' ListPolicies (Maybe Text)

-- | The scope to use for filtering the results.
--   
--   To list only AWS managed policies, set <tt>Scope</tt> to <tt>AWS</tt>.
--   To list only the customer managed policies in your AWS account, set
--   <tt>Scope</tt> to <a>Local</a>.
--   
--   This parameter is optional. If it is not included, or if it is set to
--   <a>All</a>, all policies are returned.
lpScope :: Lens' ListPolicies (Maybe PolicyScopeType)
data ListPoliciesResponse

-- | <a>ListPoliciesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lprIsTruncated</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>lprMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lprPolicies</a> <tt>::</tt> [<a>Policy</a>]</li>
--   </ul>
listPoliciesResponse :: ListPoliciesResponse

-- | A flag that indicates whether there are more policies to list. If your
--   results were truncated, you can make a subsequent pagination request
--   using the <tt>Marker</tt> request parameter to retrieve more policies
--   in the list.
lprIsTruncated :: Lens' ListPoliciesResponse (Maybe Bool)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, this element is present and
--   contains the value to use for the <tt>Marker</tt> parameter in a
--   subsequent pagination request.
lprMarker :: Lens' ListPoliciesResponse (Maybe Text)

-- | A list of policies.
lprPolicies :: Lens' ListPoliciesResponse [Policy]
instance Eq ListPolicies
instance Read ListPolicies
instance Show ListPolicies
instance Eq ListPoliciesResponse
instance Read ListPoliciesResponse
instance Show ListPoliciesResponse
instance FromXML ListPoliciesResponse
instance AWSRequest ListPolicies
instance ToHeaders ListPolicies
instance ToQuery ListPolicies
instance ToPath ListPolicies


-- | Lists information about the OpenID Connect providers in the AWS
--   account.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListOpenIDConnectProviders.html</a>
module Network.AWS.IAM.ListOpenIDConnectProviders
data ListOpenIDConnectProviders

-- | <a>ListOpenIDConnectProviders</a> constructor.
listOpenIDConnectProviders :: ListOpenIDConnectProviders
data ListOpenIDConnectProvidersResponse

-- | <a>ListOpenIDConnectProvidersResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>loidcprOpenIDConnectProviderList</a> <tt>::</tt>
--   [<a>OpenIDConnectProviderListEntry</a>]</li>
--   </ul>
listOpenIDConnectProvidersResponse :: ListOpenIDConnectProvidersResponse

-- | The list of IAM OpenID Connect providers in the AWS account.
loidcprOpenIDConnectProviderList :: Lens' ListOpenIDConnectProvidersResponse [OpenIDConnectProviderListEntry]
instance Eq ListOpenIDConnectProviders
instance Ord ListOpenIDConnectProviders
instance Read ListOpenIDConnectProviders
instance Show ListOpenIDConnectProviders
instance Generic ListOpenIDConnectProviders
instance Eq ListOpenIDConnectProvidersResponse
instance Read ListOpenIDConnectProvidersResponse
instance Show ListOpenIDConnectProvidersResponse
instance Monoid ListOpenIDConnectProvidersResponse
instance Semigroup ListOpenIDConnectProvidersResponse
instance Datatype D1ListOpenIDConnectProviders
instance Constructor C1_0ListOpenIDConnectProviders
instance FromXML ListOpenIDConnectProvidersResponse
instance AWSRequest ListOpenIDConnectProviders
instance ToHeaders ListOpenIDConnectProviders
instance ToQuery ListOpenIDConnectProviders
instance ToPath ListOpenIDConnectProviders
instance IsList ListOpenIDConnectProvidersResponse


-- | Lists the MFA devices. If the request includes the user name, then
--   this action lists all the MFA devices associated with the specified
--   user name. If you do not specify a user name, IAM determines the user
--   name implicitly based on the AWS access key ID signing the request.
--   
--   You can paginate the results using the <tt>MaxItems</tt> and
--   <tt>Marker</tt> parameters.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListMFADevices.html</a>
module Network.AWS.IAM.ListMFADevices
data ListMFADevices

-- | <a>ListMFADevices</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lmfadMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lmfadMaxItems</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>lmfadUserName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listMFADevices :: ListMFADevices

-- | Use this only when paginating results, and only in a subsequent
--   request after you've received a response where the results are
--   truncated. Set it to the value of the <tt>Marker</tt> element in the
--   response you just received.
lmfadMarker :: Lens' ListMFADevices (Maybe Text)

-- | Use this only when paginating results to indicate the maximum number
--   of MFA devices you want in the response. If there are additional MFA
--   devices beyond the maximum you specify, the <tt>IsTruncated</tt>
--   response element is <tt>true</tt>. This parameter is optional. If you
--   do not include it, it defaults to 100.
lmfadMaxItems :: Lens' ListMFADevices (Maybe Natural)

-- | The name of the user whose MFA devices you want to list.
lmfadUserName :: Lens' ListMFADevices (Maybe Text)
data ListMFADevicesResponse

-- | <a>ListMFADevicesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lmfadrIsTruncated</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>lmfadrMFADevices</a> <tt>::</tt> [<a>MFADevice</a>]</li>
--   <li><a>lmfadrMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listMFADevicesResponse :: ListMFADevicesResponse

-- | A flag that indicates whether there are more MFA devices to list. If
--   your results were truncated, you can make a subsequent pagination
--   request using the <tt>Marker</tt> request parameter to retrieve more
--   MFA devices in the list.
lmfadrIsTruncated :: Lens' ListMFADevicesResponse (Maybe Bool)

-- | A list of MFA devices.
lmfadrMFADevices :: Lens' ListMFADevicesResponse [MFADevice]

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, this element is present and
--   contains the value to use for the <tt>Marker</tt> parameter in a
--   subsequent pagination request.
lmfadrMarker :: Lens' ListMFADevicesResponse (Maybe Text)
instance Eq ListMFADevices
instance Ord ListMFADevices
instance Read ListMFADevices
instance Show ListMFADevices
instance Eq ListMFADevicesResponse
instance Read ListMFADevicesResponse
instance Show ListMFADevicesResponse
instance AWSPager ListMFADevices
instance FromXML ListMFADevicesResponse
instance AWSRequest ListMFADevices
instance ToHeaders ListMFADevices
instance ToQuery ListMFADevices
instance ToPath ListMFADevices


-- | Lists the instance profiles that have the specified associated role.
--   If there are none, the action returns an empty list. For more
--   information about instance profiles, go to <a>About Instance
--   Profiles</a>.
--   
--   You can paginate the results using the <tt>MaxItems</tt> and
--   <tt>Marker</tt> parameters.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListInstanceProfilesForRole.html</a>
module Network.AWS.IAM.ListInstanceProfilesForRole
data ListInstanceProfilesForRole

-- | <a>ListInstanceProfilesForRole</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lipfrMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lipfrMaxItems</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>lipfrRoleName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
listInstanceProfilesForRole :: Text -> ListInstanceProfilesForRole

-- | Use this parameter only when paginating results, and only in a
--   subsequent request after you've received a response where the results
--   are truncated. Set it to the value of the <tt>Marker</tt> element in
--   the response you just received.
lipfrMarker :: Lens' ListInstanceProfilesForRole (Maybe Text)

-- | Use this parameter only when paginating results to indicate the
--   maximum number of instance profiles you want in the response. If there
--   are additional instance profiles beyond the maximum you specify, the
--   <tt>IsTruncated</tt> response element is <tt>true</tt>. This parameter
--   is optional. If you do not include it, it defaults to 100.
lipfrMaxItems :: Lens' ListInstanceProfilesForRole (Maybe Natural)

-- | The name of the role to list instance profiles for.
lipfrRoleName :: Lens' ListInstanceProfilesForRole Text
data ListInstanceProfilesForRoleResponse

-- | <a>ListInstanceProfilesForRoleResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lipfrrInstanceProfiles</a> <tt>::</tt>
--   [<a>InstanceProfile</a>]</li>
--   <li><a>lipfrrIsTruncated</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>lipfrrMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listInstanceProfilesForRoleResponse :: ListInstanceProfilesForRoleResponse

-- | A list of instance profiles.
lipfrrInstanceProfiles :: Lens' ListInstanceProfilesForRoleResponse [InstanceProfile]

-- | A flag that indicates whether there are more instance profiles to
--   list. If your results were truncated, you can make a subsequent
--   pagination request using the <tt>Marker</tt> request parameter to
--   retrieve more instance profiles in the list.
lipfrrIsTruncated :: Lens' ListInstanceProfilesForRoleResponse (Maybe Bool)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, this element is present and
--   contains the value to use for the <tt>Marker</tt> parameter in a
--   subsequent pagination request.
lipfrrMarker :: Lens' ListInstanceProfilesForRoleResponse (Maybe Text)
instance Eq ListInstanceProfilesForRole
instance Ord ListInstanceProfilesForRole
instance Read ListInstanceProfilesForRole
instance Show ListInstanceProfilesForRole
instance Eq ListInstanceProfilesForRoleResponse
instance Read ListInstanceProfilesForRoleResponse
instance Show ListInstanceProfilesForRoleResponse
instance AWSPager ListInstanceProfilesForRole
instance FromXML ListInstanceProfilesForRoleResponse
instance AWSRequest ListInstanceProfilesForRole
instance ToHeaders ListInstanceProfilesForRole
instance ToQuery ListInstanceProfilesForRole
instance ToPath ListInstanceProfilesForRole


-- | Lists the instance profiles that have the specified path prefix. If
--   there are none, the action returns an empty list. For more information
--   about instance profiles, go to <a>About Instance Profiles</a>.
--   
--   You can paginate the results using the <tt>MaxItems</tt> and
--   <tt>Marker</tt> parameters.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListInstanceProfiles.html</a>
module Network.AWS.IAM.ListInstanceProfiles
data ListInstanceProfiles

-- | <a>ListInstanceProfiles</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lipMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lipMaxItems</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>lipPathPrefix</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listInstanceProfiles :: ListInstanceProfiles

-- | Use this parameter only when paginating results, and only in a
--   subsequent request after you've received a response where the results
--   are truncated. Set it to the value of the <tt>Marker</tt> element in
--   the response you just received.
lipMarker :: Lens' ListInstanceProfiles (Maybe Text)

-- | Use this parameter only when paginating results to indicate the
--   maximum number of instance profiles you want in the response. If there
--   are additional instance profiles beyond the maximum you specify, the
--   <tt>IsTruncated</tt> response element is <tt>true</tt>. This parameter
--   is optional. If you do not include it, it defaults to 100.
lipMaxItems :: Lens' ListInstanceProfiles (Maybe Natural)

-- | The path prefix for filtering the results. For example, the prefix
--   '/application_abc/component_xyz/' gets all instance profiles whose
--   path starts with '/application_abc/component_xyz/'.
--   
--   This parameter is optional. If it is not included, it defaults to a
--   slash (/), listing all instance profiles.
lipPathPrefix :: Lens' ListInstanceProfiles (Maybe Text)
data ListInstanceProfilesResponse

-- | <a>ListInstanceProfilesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>liprInstanceProfiles</a> <tt>::</tt>
--   [<a>InstanceProfile</a>]</li>
--   <li><a>liprIsTruncated</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>liprMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listInstanceProfilesResponse :: ListInstanceProfilesResponse

-- | A list of instance profiles.
liprInstanceProfiles :: Lens' ListInstanceProfilesResponse [InstanceProfile]

-- | A flag that indicates whether there are more instance profiles to
--   list. If your results were truncated, you can make a subsequent
--   pagination request using the <tt>Marker</tt> request parameter to
--   retrieve more instance profiles in the list.
liprIsTruncated :: Lens' ListInstanceProfilesResponse (Maybe Bool)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, this element is present and
--   contains the value to use for the <tt>Marker</tt> parameter in a
--   subsequent pagination request.
liprMarker :: Lens' ListInstanceProfilesResponse (Maybe Text)
instance Eq ListInstanceProfiles
instance Ord ListInstanceProfiles
instance Read ListInstanceProfiles
instance Show ListInstanceProfiles
instance Eq ListInstanceProfilesResponse
instance Read ListInstanceProfilesResponse
instance Show ListInstanceProfilesResponse
instance AWSPager ListInstanceProfiles
instance FromXML ListInstanceProfilesResponse
instance AWSRequest ListInstanceProfiles
instance ToHeaders ListInstanceProfiles
instance ToQuery ListInstanceProfiles
instance ToPath ListInstanceProfiles


-- | Lists the groups the specified user belongs to.
--   
--   You can paginate the results using the <tt>MaxItems</tt> and
--   <tt>Marker</tt> parameters.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListGroupsForUser.html</a>
module Network.AWS.IAM.ListGroupsForUser
data ListGroupsForUser

-- | <a>ListGroupsForUser</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lgfuMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lgfuMaxItems</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>lgfuUserName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
listGroupsForUser :: Text -> ListGroupsForUser

-- | Use this only when paginating results, and only in a subsequent
--   request after you've received a response where the results are
--   truncated. Set it to the value of the <tt>Marker</tt> element in the
--   response you just received.
lgfuMarker :: Lens' ListGroupsForUser (Maybe Text)

-- | Use this only when paginating results to indicate the maximum number
--   of groups you want in the response. If there are additional groups
--   beyond the maximum you specify, the <tt>IsTruncated</tt> response
--   element is <tt>true</tt>. This parameter is optional. If you do not
--   include it, it defaults to 100.
lgfuMaxItems :: Lens' ListGroupsForUser (Maybe Natural)

-- | The name of the user to list groups for.
lgfuUserName :: Lens' ListGroupsForUser Text
data ListGroupsForUserResponse

-- | <a>ListGroupsForUserResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lgfurGroups</a> <tt>::</tt> [<a>Group</a>]</li>
--   <li><a>lgfurIsTruncated</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>lgfurMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listGroupsForUserResponse :: ListGroupsForUserResponse

-- | A list of groups.
lgfurGroups :: Lens' ListGroupsForUserResponse [Group]

-- | A flag that indicates whether there are more groups to list. If your
--   results were truncated, you can make a subsequent pagination request
--   using the <tt>Marker</tt> request parameter to retrieve more groups in
--   the list.
lgfurIsTruncated :: Lens' ListGroupsForUserResponse (Maybe Bool)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, this element is present and
--   contains the value to use for the <tt>Marker</tt> parameter in a
--   subsequent pagination request.
lgfurMarker :: Lens' ListGroupsForUserResponse (Maybe Text)
instance Eq ListGroupsForUser
instance Ord ListGroupsForUser
instance Read ListGroupsForUser
instance Show ListGroupsForUser
instance Eq ListGroupsForUserResponse
instance Read ListGroupsForUserResponse
instance Show ListGroupsForUserResponse
instance AWSPager ListGroupsForUser
instance FromXML ListGroupsForUserResponse
instance AWSRequest ListGroupsForUser
instance ToHeaders ListGroupsForUser
instance ToQuery ListGroupsForUser
instance ToPath ListGroupsForUser


-- | Lists the groups that have the specified path prefix.
--   
--   You can paginate the results using the <tt>MaxItems</tt> and
--   <tt>Marker</tt> parameters.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListGroups.html</a>
module Network.AWS.IAM.ListGroups
data ListGroups

-- | <a>ListGroups</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lgMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lgMaxItems</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>lgPathPrefix</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listGroups :: ListGroups

-- | Use this only when paginating results, and only in a subsequent
--   request after you've received a response where the results are
--   truncated. Set it to the value of the <tt>Marker</tt> element in the
--   response you just received.
lgMarker :: Lens' ListGroups (Maybe Text)

-- | Use this only when paginating results to indicate the maximum number
--   of groups you want in the response. If there are additional groups
--   beyond the maximum you specify, the <tt>IsTruncated</tt> response
--   element is <tt>true</tt>. This parameter is optional. If you do not
--   include it, it defaults to 100.
lgMaxItems :: Lens' ListGroups (Maybe Natural)

-- | The path prefix for filtering the results. For example, the prefix
--   '/division_abc/subdivision_xyz/' gets all groups whose path starts
--   with '/division_abc/subdivision_xyz/'.
--   
--   This parameter is optional. If it is not included, it defaults to a
--   slash (/), listing all groups.
lgPathPrefix :: Lens' ListGroups (Maybe Text)
data ListGroupsResponse

-- | <a>ListGroupsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lgrGroups</a> <tt>::</tt> [<a>Group</a>]</li>
--   <li><a>lgrIsTruncated</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>lgrMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listGroupsResponse :: ListGroupsResponse

-- | A list of groups.
lgrGroups :: Lens' ListGroupsResponse [Group]

-- | A flag that indicates whether there are more groups to list. If your
--   results were truncated, you can make a subsequent pagination request
--   using the <tt>Marker</tt> request parameter to retrieve more groups in
--   the list.
lgrIsTruncated :: Lens' ListGroupsResponse (Maybe Bool)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, this element is present and
--   contains the value to use for the <tt>Marker</tt> parameter in a
--   subsequent pagination request.
lgrMarker :: Lens' ListGroupsResponse (Maybe Text)
instance Eq ListGroups
instance Ord ListGroups
instance Read ListGroups
instance Show ListGroups
instance Eq ListGroupsResponse
instance Read ListGroupsResponse
instance Show ListGroupsResponse
instance AWSPager ListGroups
instance FromXML ListGroupsResponse
instance AWSRequest ListGroups
instance ToHeaders ListGroups
instance ToQuery ListGroups
instance ToPath ListGroups


-- | Lists the names of the inline policies that are embedded in the
--   specified group.
--   
--   A group can also have managed policies attached to it. To list the
--   managed policies that are attached to a group, use
--   <tt>ListAttachedGroupPolicies</tt>. For more information about
--   policies, refer to <a>Managed Policies and Inline Policies</a> in the
--   <i>Using IAM</i> guide.
--   
--   You can paginate the results using the <tt>MaxItems</tt> and
--   <tt>Marker</tt> parameters. If there are no inline policies embedded
--   with the specified group, the action returns an empty list.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListGroupPolicies.html</a>
module Network.AWS.IAM.ListGroupPolicies
data ListGroupPolicies

-- | <a>ListGroupPolicies</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lgpGroupName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>lgpMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lgpMaxItems</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   </ul>
listGroupPolicies :: Text -> ListGroupPolicies

-- | The name of the group to list policies for.
lgpGroupName :: Lens' ListGroupPolicies Text

-- | Use this only when paginating results, and only in a subsequent
--   request after you've received a response where the results are
--   truncated. Set it to the value of the <tt>Marker</tt> element in the
--   response you just received.
lgpMarker :: Lens' ListGroupPolicies (Maybe Text)

-- | Use this only when paginating results to indicate the maximum number
--   of policy names you want in the response. If there are additional
--   policy names beyond the maximum you specify, the <tt>IsTruncated</tt>
--   response element is <tt>true</tt>. This parameter is optional. If you
--   do not include it, it defaults to 100.
lgpMaxItems :: Lens' ListGroupPolicies (Maybe Natural)
data ListGroupPoliciesResponse

-- | <a>ListGroupPoliciesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lgprIsTruncated</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>lgprMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lgprPolicyNames</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
listGroupPoliciesResponse :: ListGroupPoliciesResponse

-- | A flag that indicates whether there are more policy names to list. If
--   your results were truncated, you can make a subsequent pagination
--   request using the <tt>Marker</tt> request parameter to retrieve more
--   policy names in the list.
lgprIsTruncated :: Lens' ListGroupPoliciesResponse (Maybe Bool)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, this element is present and
--   contains the value to use for the <tt>Marker</tt> parameter in a
--   subsequent pagination request.
lgprMarker :: Lens' ListGroupPoliciesResponse (Maybe Text)

-- | A list of policy names.
lgprPolicyNames :: Lens' ListGroupPoliciesResponse [Text]
instance Eq ListGroupPolicies
instance Ord ListGroupPolicies
instance Read ListGroupPolicies
instance Show ListGroupPolicies
instance Eq ListGroupPoliciesResponse
instance Ord ListGroupPoliciesResponse
instance Read ListGroupPoliciesResponse
instance Show ListGroupPoliciesResponse
instance AWSPager ListGroupPolicies
instance FromXML ListGroupPoliciesResponse
instance AWSRequest ListGroupPolicies
instance ToHeaders ListGroupPolicies
instance ToQuery ListGroupPolicies
instance ToPath ListGroupPolicies


-- | Lists all users, groups, and roles that the specified managed policy
--   is attached to.
--   
--   You can use the optional <tt>EntityFilter</tt> parameter to limit the
--   results to a particular type of entity (users, groups, or roles). For
--   example, to list only the roles that are attached to the specified
--   policy, set <tt>EntityFilter</tt> to <a>Role</a>.
--   
--   You can paginate the results using the <tt>MaxItems</tt> and
--   <tt>Marker</tt> parameters.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListEntitiesForPolicy.html</a>
module Network.AWS.IAM.ListEntitiesForPolicy
data ListEntitiesForPolicy

-- | <a>ListEntitiesForPolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lefpEntityFilter</a> <tt>::</tt> <a>Maybe</a>
--   <a>EntityType</a></li>
--   <li><a>lefpMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lefpMaxItems</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>lefpPathPrefix</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lefpPolicyArn</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
listEntitiesForPolicy :: Text -> ListEntitiesForPolicy

-- | The entity type to use for filtering the results.
--   
--   For example, when <tt>EntityFilter</tt> is <a>Role</a>, only the roles
--   that are attached to the specified policy are returned. This parameter
--   is optional. If it is not included, all attached entities (users,
--   groups, and roles) are returned.
lefpEntityFilter :: Lens' ListEntitiesForPolicy (Maybe EntityType)

-- | Use this only when paginating results, and only in a subsequent
--   request after you've received a response where the results are
--   truncated. Set it to the value of the <tt>Marker</tt> element in the
--   response you just received.
lefpMarker :: Lens' ListEntitiesForPolicy (Maybe Text)

-- | Use this only when paginating results to indicate the maximum number
--   of entities you want in the response. If there are additional entities
--   beyond the maximum you specify, the <tt>IsTruncated</tt> response
--   element is <tt>true</tt>. This parameter is optional. If you do not
--   include it, it defaults to 100.
lefpMaxItems :: Lens' ListEntitiesForPolicy (Maybe Natural)

-- | The path prefix for filtering the results. This parameter is optional.
--   If it is not included, it defaults to a slash (/), listing all
--   entities.
lefpPathPrefix :: Lens' ListEntitiesForPolicy (Maybe Text)
lefpPolicyArn :: Lens' ListEntitiesForPolicy Text
data ListEntitiesForPolicyResponse

-- | <a>ListEntitiesForPolicyResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lefprIsTruncated</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>lefprMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lefprPolicyGroups</a> <tt>::</tt> [<a>PolicyGroup</a>]</li>
--   <li><a>lefprPolicyRoles</a> <tt>::</tt> [<a>PolicyRole</a>]</li>
--   <li><a>lefprPolicyUsers</a> <tt>::</tt> [<a>PolicyUser</a>]</li>
--   </ul>
listEntitiesForPolicyResponse :: ListEntitiesForPolicyResponse

-- | A flag that indicates whether there are more entities to list. If your
--   results were truncated, you can make a subsequent pagination request
--   using the <tt>Marker</tt> request parameter to retrieve more entities
--   in the list.
lefprIsTruncated :: Lens' ListEntitiesForPolicyResponse (Maybe Bool)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, this element is present and
--   contains the value to use for the <tt>Marker</tt> parameter in a
--   subsequent pagination request.
lefprMarker :: Lens' ListEntitiesForPolicyResponse (Maybe Text)

-- | A list of groups that the policy is attached to.
lefprPolicyGroups :: Lens' ListEntitiesForPolicyResponse [PolicyGroup]

-- | A list of roles that the policy is attached to.
lefprPolicyRoles :: Lens' ListEntitiesForPolicyResponse [PolicyRole]

-- | A list of users that the policy is attached to.
lefprPolicyUsers :: Lens' ListEntitiesForPolicyResponse [PolicyUser]
instance Eq ListEntitiesForPolicy
instance Read ListEntitiesForPolicy
instance Show ListEntitiesForPolicy
instance Eq ListEntitiesForPolicyResponse
instance Read ListEntitiesForPolicyResponse
instance Show ListEntitiesForPolicyResponse
instance FromXML ListEntitiesForPolicyResponse
instance AWSRequest ListEntitiesForPolicy
instance ToHeaders ListEntitiesForPolicy
instance ToQuery ListEntitiesForPolicy
instance ToPath ListEntitiesForPolicy


-- | Lists all managed policies that are attached to the specified user.
--   
--   A user can also have inline policies embedded with it. To list the
--   inline policies for a user, use the <tt>ListUserPolicies</tt> API. For
--   information about policies, refer to <a>Managed Policies and Inline
--   Policies</a> in the <i>Using IAM</i> guide.
--   
--   You can paginate the results using the <tt>MaxItems</tt> and
--   <tt>Marker</tt> parameters. You can use the <tt>PathPrefix</tt>
--   parameter to limit the list of policies to only those matching the
--   specified path prefix. If there are no policies attached to the
--   specified group (or none that match the specified path prefix), the
--   action returns an empty list.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListAttachedUserPolicies.html</a>
module Network.AWS.IAM.ListAttachedUserPolicies
data ListAttachedUserPolicies

-- | <a>ListAttachedUserPolicies</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>laupMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>laupMaxItems</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>laupPathPrefix</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>laupUserName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
listAttachedUserPolicies :: Text -> ListAttachedUserPolicies

-- | Use this only when paginating results, and only in a subsequent
--   request after you've received a response where the results are
--   truncated. Set it to the value of the <tt>Marker</tt> element in the
--   response you just received.
laupMarker :: Lens' ListAttachedUserPolicies (Maybe Text)

-- | Use this only when paginating results to indicate the maximum number
--   of policies you want in the response. If there are additional policies
--   beyond the maximum you specify, the <tt>IsTruncated</tt> response
--   element is <tt>true</tt>. This parameter is optional. If you do not
--   include it, it defaults to 100.
laupMaxItems :: Lens' ListAttachedUserPolicies (Maybe Natural)

-- | The path prefix for filtering the results. This parameter is optional.
--   If it is not included, it defaults to a slash (/), listing all
--   policies.
laupPathPrefix :: Lens' ListAttachedUserPolicies (Maybe Text)

-- | The name (friendly name, not ARN) of the user to list attached
--   policies for.
laupUserName :: Lens' ListAttachedUserPolicies Text
data ListAttachedUserPoliciesResponse

-- | <a>ListAttachedUserPoliciesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lauprAttachedPolicies</a> <tt>::</tt>
--   [<a>AttachedPolicy</a>]</li>
--   <li><a>lauprIsTruncated</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>lauprMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listAttachedUserPoliciesResponse :: ListAttachedUserPoliciesResponse

-- | A list of the attached policies.
lauprAttachedPolicies :: Lens' ListAttachedUserPoliciesResponse [AttachedPolicy]

-- | A flag that indicates whether there are more policies to list. If your
--   results were truncated, you can make a subsequent pagination request
--   using the <tt>Marker</tt> request parameter to retrieve more policies
--   in the list.
lauprIsTruncated :: Lens' ListAttachedUserPoliciesResponse (Maybe Bool)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, this element is present and
--   contains the value to use for the <tt>Marker</tt> parameter in a
--   subsequent pagination request.
lauprMarker :: Lens' ListAttachedUserPoliciesResponse (Maybe Text)
instance Eq ListAttachedUserPolicies
instance Ord ListAttachedUserPolicies
instance Read ListAttachedUserPolicies
instance Show ListAttachedUserPolicies
instance Eq ListAttachedUserPoliciesResponse
instance Read ListAttachedUserPoliciesResponse
instance Show ListAttachedUserPoliciesResponse
instance FromXML ListAttachedUserPoliciesResponse
instance AWSRequest ListAttachedUserPolicies
instance ToHeaders ListAttachedUserPolicies
instance ToQuery ListAttachedUserPolicies
instance ToPath ListAttachedUserPolicies


-- | Lists all managed policies that are attached to the specified role.
--   
--   A role can also have inline policies embedded with it. To list the
--   inline policies for a role, use the <tt>ListRolePolicies</tt> API. For
--   information about policies, refer to <a>Managed Policies and Inline
--   Policies</a> in the <i>Using IAM</i> guide.
--   
--   You can paginate the results using the <tt>MaxItems</tt> and
--   <tt>Marker</tt> parameters. You can use the <tt>PathPrefix</tt>
--   parameter to limit the list of policies to only those matching the
--   specified path prefix. If there are no policies attached to the
--   specified role (or none that match the specified path prefix), the
--   action returns an empty list.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListAttachedRolePolicies.html</a>
module Network.AWS.IAM.ListAttachedRolePolicies
data ListAttachedRolePolicies

-- | <a>ListAttachedRolePolicies</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>larpMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>larpMaxItems</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>larpPathPrefix</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>larpRoleName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
listAttachedRolePolicies :: Text -> ListAttachedRolePolicies

-- | Use this only when paginating results, and only in a subsequent
--   request after you've received a response where the results are
--   truncated. Set it to the value of the <tt>Marker</tt> element in the
--   response you just received.
larpMarker :: Lens' ListAttachedRolePolicies (Maybe Text)

-- | Use this only when paginating results to indicate the maximum number
--   of policies you want in the response. If there are additional policies
--   beyond the maximum you specify, the <tt>IsTruncated</tt> response
--   element is <tt>true</tt>. This parameter is optional. If you do not
--   include it, it defaults to 100.
larpMaxItems :: Lens' ListAttachedRolePolicies (Maybe Natural)

-- | The path prefix for filtering the results. This parameter is optional.
--   If it is not included, it defaults to a slash (/), listing all
--   policies.
larpPathPrefix :: Lens' ListAttachedRolePolicies (Maybe Text)

-- | The name (friendly name, not ARN) of the role to list attached
--   policies for.
larpRoleName :: Lens' ListAttachedRolePolicies Text
data ListAttachedRolePoliciesResponse

-- | <a>ListAttachedRolePoliciesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>larprAttachedPolicies</a> <tt>::</tt>
--   [<a>AttachedPolicy</a>]</li>
--   <li><a>larprIsTruncated</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>larprMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listAttachedRolePoliciesResponse :: ListAttachedRolePoliciesResponse

-- | A list of the attached policies.
larprAttachedPolicies :: Lens' ListAttachedRolePoliciesResponse [AttachedPolicy]

-- | A flag that indicates whether there are more policies to list. If your
--   results were truncated, you can make a subsequent pagination request
--   using the <tt>Marker</tt> request parameter to retrieve more policies
--   in the list.
larprIsTruncated :: Lens' ListAttachedRolePoliciesResponse (Maybe Bool)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, this element is present and
--   contains the value to use for the <tt>Marker</tt> parameter in a
--   subsequent pagination request.
larprMarker :: Lens' ListAttachedRolePoliciesResponse (Maybe Text)
instance Eq ListAttachedRolePolicies
instance Ord ListAttachedRolePolicies
instance Read ListAttachedRolePolicies
instance Show ListAttachedRolePolicies
instance Eq ListAttachedRolePoliciesResponse
instance Read ListAttachedRolePoliciesResponse
instance Show ListAttachedRolePoliciesResponse
instance FromXML ListAttachedRolePoliciesResponse
instance AWSRequest ListAttachedRolePolicies
instance ToHeaders ListAttachedRolePolicies
instance ToQuery ListAttachedRolePolicies
instance ToPath ListAttachedRolePolicies


-- | Lists all managed policies that are attached to the specified group.
--   
--   A group can also have inline policies embedded with it. To list the
--   inline policies for a group, use the <tt>ListGroupPolicies</tt> API.
--   For information about policies, refer to <a>Managed Policies and
--   Inline Policies</a> in the <i>Using IAM</i> guide.
--   
--   You can paginate the results using the <tt>MaxItems</tt> and
--   <tt>Marker</tt> parameters. You can use the <tt>PathPrefix</tt>
--   parameter to limit the list of policies to only those matching the
--   specified path prefix. If there are no policies attached to the
--   specified group (or none that match the specified path prefix), the
--   action returns an empty list.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListAttachedGroupPolicies.html</a>
module Network.AWS.IAM.ListAttachedGroupPolicies
data ListAttachedGroupPolicies

-- | <a>ListAttachedGroupPolicies</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lagpGroupName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>lagpMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lagpMaxItems</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>lagpPathPrefix</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listAttachedGroupPolicies :: Text -> ListAttachedGroupPolicies

-- | The name (friendly name, not ARN) of the group to list attached
--   policies for.
lagpGroupName :: Lens' ListAttachedGroupPolicies Text

-- | Use this only when paginating results, and only in a subsequent
--   request after you've received a response where the results are
--   truncated. Set it to the value of the <tt>Marker</tt> element in the
--   response you just received.
lagpMarker :: Lens' ListAttachedGroupPolicies (Maybe Text)

-- | Use this only when paginating results to indicate the maximum number
--   of policies you want in the response. If there are additional policies
--   beyond the maximum you specify, the <tt>IsTruncated</tt> response
--   element is <tt>true</tt>. This parameter is optional. If you do not
--   include it, it defaults to 100.
lagpMaxItems :: Lens' ListAttachedGroupPolicies (Maybe Natural)

-- | The path prefix for filtering the results. This parameter is optional.
--   If it is not included, it defaults to a slash (/), listing all
--   policies.
lagpPathPrefix :: Lens' ListAttachedGroupPolicies (Maybe Text)
data ListAttachedGroupPoliciesResponse

-- | <a>ListAttachedGroupPoliciesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lagprAttachedPolicies</a> <tt>::</tt>
--   [<a>AttachedPolicy</a>]</li>
--   <li><a>lagprIsTruncated</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>lagprMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listAttachedGroupPoliciesResponse :: ListAttachedGroupPoliciesResponse

-- | A list of the attached policies.
lagprAttachedPolicies :: Lens' ListAttachedGroupPoliciesResponse [AttachedPolicy]

-- | A flag that indicates whether there are more policies to list. If your
--   results were truncated, you can make a subsequent pagination request
--   using the <tt>Marker</tt> request parameter to retrieve more policies
--   in the list.
lagprIsTruncated :: Lens' ListAttachedGroupPoliciesResponse (Maybe Bool)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, this element is present and
--   contains the value to use for the <tt>Marker</tt> parameter in a
--   subsequent pagination request.
lagprMarker :: Lens' ListAttachedGroupPoliciesResponse (Maybe Text)
instance Eq ListAttachedGroupPolicies
instance Ord ListAttachedGroupPolicies
instance Read ListAttachedGroupPolicies
instance Show ListAttachedGroupPolicies
instance Eq ListAttachedGroupPoliciesResponse
instance Read ListAttachedGroupPoliciesResponse
instance Show ListAttachedGroupPoliciesResponse
instance FromXML ListAttachedGroupPoliciesResponse
instance AWSRequest ListAttachedGroupPolicies
instance ToHeaders ListAttachedGroupPolicies
instance ToQuery ListAttachedGroupPolicies
instance ToPath ListAttachedGroupPolicies


-- | Lists the account aliases associated with the account. For information
--   about using an AWS account alias, see <a>Using an Alias for Your AWS
--   Account ID</a> in the <i>Using IAM</i> guide.
--   
--   You can paginate the results using the <tt>MaxItems</tt> and
--   <tt>Marker</tt> parameters.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListAccountAliases.html</a>
module Network.AWS.IAM.ListAccountAliases
data ListAccountAliases

-- | <a>ListAccountAliases</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>laaMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>laaMaxItems</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   </ul>
listAccountAliases :: ListAccountAliases

-- | Use this only when paginating results, and only in a subsequent
--   request after you've received a response where the results are
--   truncated. Set it to the value of the <tt>Marker</tt> element in the
--   response you just received.
laaMarker :: Lens' ListAccountAliases (Maybe Text)

-- | Use this only when paginating results to indicate the maximum number
--   of account aliases you want in the response. If there are additional
--   account aliases beyond the maximum you specify, the
--   <tt>IsTruncated</tt> response element is <tt>true</tt>. This parameter
--   is optional. If you do not include it, it defaults to 100.
laaMaxItems :: Lens' ListAccountAliases (Maybe Natural)
data ListAccountAliasesResponse

-- | <a>ListAccountAliasesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>laarAccountAliases</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>laarIsTruncated</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>laarMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listAccountAliasesResponse :: ListAccountAliasesResponse

-- | A list of aliases associated with the account.
laarAccountAliases :: Lens' ListAccountAliasesResponse [Text]

-- | A flag that indicates whether there are more account aliases to list.
--   If your results were truncated, you can make a subsequent pagination
--   request using the <tt>Marker</tt> request parameter to retrieve more
--   account aliases in the list.
laarIsTruncated :: Lens' ListAccountAliasesResponse (Maybe Bool)

-- | Use this only when paginating results, and only in a subsequent
--   request after you've received a response where the results are
--   truncated. Set it to the value of the <tt>Marker</tt> element in the
--   response you just received.
laarMarker :: Lens' ListAccountAliasesResponse (Maybe Text)
instance Eq ListAccountAliases
instance Ord ListAccountAliases
instance Read ListAccountAliases
instance Show ListAccountAliases
instance Eq ListAccountAliasesResponse
instance Ord ListAccountAliasesResponse
instance Read ListAccountAliasesResponse
instance Show ListAccountAliasesResponse
instance AWSPager ListAccountAliases
instance FromXML ListAccountAliasesResponse
instance AWSRequest ListAccountAliases
instance ToHeaders ListAccountAliases
instance ToQuery ListAccountAliases
instance ToPath ListAccountAliases


-- | Returns information about the access key IDs associated with the
--   specified user. If there are none, the action returns an empty list.
--   
--   Although each user is limited to a small number of keys, you can still
--   paginate the results using the <tt>MaxItems</tt> and <tt>Marker</tt>
--   parameters.
--   
--   If the <tt>UserName</tt> field is not specified, the UserName is
--   determined implicitly based on the AWS access key ID used to sign the
--   request. Because this action works for access keys under the AWS
--   account, you can use this action to manage root credentials even if
--   the AWS account has no associated users.
--   
--   To ensure the security of your AWS account, the secret access key is
--   accessible only during key and user creation.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListAccessKeys.html</a>
module Network.AWS.IAM.ListAccessKeys
data ListAccessKeys

-- | <a>ListAccessKeys</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lakMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lakMaxItems</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>lakUserName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listAccessKeys :: ListAccessKeys

-- | Use this parameter only when paginating results, and only in a
--   subsequent request after you've received a response where the results
--   are truncated. Set it to the value of the <tt>Marker</tt> element in
--   the response you just received.
lakMarker :: Lens' ListAccessKeys (Maybe Text)

-- | Use this parameter only when paginating results to indicate the
--   maximum number of keys you want in the response. If there are
--   additional keys beyond the maximum you specify, the
--   <tt>IsTruncated</tt> response element is <tt>true</tt>. This parameter
--   is optional. If you do not include it, it defaults to 100.
lakMaxItems :: Lens' ListAccessKeys (Maybe Natural)

-- | The name of the user.
lakUserName :: Lens' ListAccessKeys (Maybe Text)
data ListAccessKeysResponse

-- | <a>ListAccessKeysResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lakrAccessKeyMetadata</a> <tt>::</tt>
--   [<a>AccessKeyMetadata</a>]</li>
--   <li><a>lakrIsTruncated</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>lakrMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listAccessKeysResponse :: ListAccessKeysResponse

-- | A list of access key metadata.
lakrAccessKeyMetadata :: Lens' ListAccessKeysResponse [AccessKeyMetadata]

-- | A flag that indicates whether there are more keys to list. If your
--   results were truncated, you can make a subsequent pagination request
--   using the <tt>Marker</tt> request parameter to retrieve more keys in
--   the list.
lakrIsTruncated :: Lens' ListAccessKeysResponse (Maybe Bool)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, this element is present and
--   contains the value to use for the <tt>Marker</tt> parameter in a
--   subsequent pagination request.
lakrMarker :: Lens' ListAccessKeysResponse (Maybe Text)
instance Eq ListAccessKeys
instance Ord ListAccessKeys
instance Read ListAccessKeys
instance Show ListAccessKeys
instance Eq ListAccessKeysResponse
instance Read ListAccessKeysResponse
instance Show ListAccessKeysResponse
instance AWSPager ListAccessKeys
instance FromXML ListAccessKeysResponse
instance AWSRequest ListAccessKeys
instance ToHeaders ListAccessKeys
instance ToQuery ListAccessKeys
instance ToPath ListAccessKeys


-- | Retrieves the specified inline policy document that is embedded in the
--   specified user.
--   
--   A user can also have managed policies attached to it. To retrieve a
--   managed policy document that is attached to a user, use
--   <tt>GetPolicy</tt> to determine the policy's default version, then use
--   <tt>GetPolicyVersion</tt> to retrieve the policy document.
--   
--   For more information about policies, refer to <a>Managed Policies and
--   InlinePolicies</a> in the <i>Using IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetUserPolicy.html</a>
module Network.AWS.IAM.GetUserPolicy
data GetUserPolicy

-- | <a>GetUserPolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gupPolicyName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>gupUserName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getUserPolicy :: Text -> Text -> GetUserPolicy

-- | The name of the policy document to get.
gupPolicyName :: Lens' GetUserPolicy Text

-- | The name of the user who the policy is associated with.
gupUserName :: Lens' GetUserPolicy Text
data GetUserPolicyResponse

-- | <a>GetUserPolicyResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>guprPolicyDocument</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>guprPolicyName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>guprUserName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getUserPolicyResponse :: Text -> Text -> Text -> GetUserPolicyResponse

-- | The policy document.
guprPolicyDocument :: Lens' GetUserPolicyResponse Text

-- | The name of the policy.
guprPolicyName :: Lens' GetUserPolicyResponse Text

-- | The user the policy is associated with.
guprUserName :: Lens' GetUserPolicyResponse Text
instance Eq GetUserPolicy
instance Ord GetUserPolicy
instance Read GetUserPolicy
instance Show GetUserPolicy
instance Eq GetUserPolicyResponse
instance Ord GetUserPolicyResponse
instance Read GetUserPolicyResponse
instance Show GetUserPolicyResponse
instance FromXML GetUserPolicyResponse
instance AWSRequest GetUserPolicy
instance ToHeaders GetUserPolicy
instance ToQuery GetUserPolicy
instance ToPath GetUserPolicy


-- | Retrieves information about the specified user, including the user's
--   creation date, path, unique ID, and ARN.
--   
--   If you do not specify a user name, IAM determines the user name
--   implicitly based on the AWS access key ID used to sign the request.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetUser.html</a>
module Network.AWS.IAM.GetUser
data GetUser

-- | <a>GetUser</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>guUserName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
getUser :: GetUser

-- | The name of the user to get information about.
--   
--   This parameter is optional. If it is not included, it defaults to the
--   user making the request.
guUserName :: Lens' GetUser (Maybe Text)
data GetUserResponse

-- | <a>GetUserResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gurUser</a> <tt>::</tt> <a>User</a></li>
--   </ul>
getUserResponse :: User -> GetUserResponse

-- | Information about the user.
gurUser :: Lens' GetUserResponse User
instance Eq GetUser
instance Ord GetUser
instance Read GetUser
instance Show GetUser
instance Monoid GetUser
instance Eq GetUserResponse
instance Read GetUserResponse
instance Show GetUserResponse
instance FromXML GetUserResponse
instance AWSRequest GetUser
instance ToHeaders GetUser
instance ToQuery GetUser
instance ToPath GetUser


-- | Retrieves information about the specified server certificate.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetServerCertificate.html</a>
module Network.AWS.IAM.GetServerCertificate
data GetServerCertificate

-- | <a>GetServerCertificate</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gscServerCertificateName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getServerCertificate :: Text -> GetServerCertificate

-- | The name of the server certificate you want to retrieve information
--   about.
gscServerCertificateName :: Lens' GetServerCertificate Text
data GetServerCertificateResponse

-- | <a>GetServerCertificateResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gscrServerCertificate</a> <tt>::</tt>
--   <a>ServerCertificate</a></li>
--   </ul>
getServerCertificateResponse :: ServerCertificate -> GetServerCertificateResponse

-- | Information about the server certificate.
gscrServerCertificate :: Lens' GetServerCertificateResponse ServerCertificate
instance Eq GetServerCertificate
instance Ord GetServerCertificate
instance Read GetServerCertificate
instance Show GetServerCertificate
instance Monoid GetServerCertificate
instance IsString GetServerCertificate
instance Eq GetServerCertificateResponse
instance Read GetServerCertificateResponse
instance Show GetServerCertificateResponse
instance FromXML GetServerCertificateResponse
instance AWSRequest GetServerCertificate
instance ToHeaders GetServerCertificate
instance ToQuery GetServerCertificate
instance ToPath GetServerCertificate


-- | Returns the SAML provider metadocument that was uploaded when the
--   provider was created or updated.
--   
--   This operation requires <a>Signature Version 4</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetSAMLProvider.html</a>
module Network.AWS.IAM.GetSAMLProvider
data GetSAMLProvider

-- | <a>GetSAMLProvider</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gsamlpSAMLProviderArn</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getSAMLProvider :: Text -> GetSAMLProvider

-- | The Amazon Resource Name (ARN) of the SAML provider to get information
--   about.
gsamlpSAMLProviderArn :: Lens' GetSAMLProvider Text
data GetSAMLProviderResponse

-- | <a>GetSAMLProviderResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gsamlprCreateDate</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>gsamlprSAMLMetadataDocument</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>gsamlprValidUntil</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   </ul>
getSAMLProviderResponse :: GetSAMLProviderResponse

-- | The date and time when the SAML provider was created.
gsamlprCreateDate :: Lens' GetSAMLProviderResponse (Maybe UTCTime)

-- | The XML metadata document that includes information about an identity
--   provider.
gsamlprSAMLMetadataDocument :: Lens' GetSAMLProviderResponse (Maybe Text)

-- | The expiration date and time for the SAML provider.
gsamlprValidUntil :: Lens' GetSAMLProviderResponse (Maybe UTCTime)
instance Eq GetSAMLProvider
instance Ord GetSAMLProvider
instance Read GetSAMLProvider
instance Show GetSAMLProvider
instance Monoid GetSAMLProvider
instance IsString GetSAMLProvider
instance Eq GetSAMLProviderResponse
instance Ord GetSAMLProviderResponse
instance Read GetSAMLProviderResponse
instance Show GetSAMLProviderResponse
instance FromXML GetSAMLProviderResponse
instance AWSRequest GetSAMLProvider
instance ToHeaders GetSAMLProvider
instance ToQuery GetSAMLProvider
instance ToPath GetSAMLProvider


-- | Retrieves the specified inline policy document that is embedded with
--   the specified role.
--   
--   A role can also have managed policies attached to it. To retrieve a
--   managed policy document that is attached to a role, use
--   <tt>GetPolicy</tt> to determine the policy's default version, then use
--   <tt>GetPolicyVersion</tt> to retrieve the policy document.
--   
--   For more information about policies, refer to <a>Managed Policies and
--   InlinePolicies</a> in the <i>Using IAM</i> guide.
--   
--   For more information about roles, go to <a>Using Roles to Delegate
--   Permissionsand Federate Identities</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetRolePolicy.html</a>
module Network.AWS.IAM.GetRolePolicy
data GetRolePolicy

-- | <a>GetRolePolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>grpPolicyName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>grpRoleName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getRolePolicy :: Text -> Text -> GetRolePolicy

-- | The name of the policy document to get.
grpPolicyName :: Lens' GetRolePolicy Text

-- | The name of the role associated with the policy.
grpRoleName :: Lens' GetRolePolicy Text
data GetRolePolicyResponse

-- | <a>GetRolePolicyResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>grprPolicyDocument</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>grprPolicyName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>grprRoleName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getRolePolicyResponse :: Text -> Text -> Text -> GetRolePolicyResponse

-- | The policy document.
grprPolicyDocument :: Lens' GetRolePolicyResponse Text

-- | The name of the policy.
grprPolicyName :: Lens' GetRolePolicyResponse Text

-- | The role the policy is associated with.
grprRoleName :: Lens' GetRolePolicyResponse Text
instance Eq GetRolePolicy
instance Ord GetRolePolicy
instance Read GetRolePolicy
instance Show GetRolePolicy
instance Eq GetRolePolicyResponse
instance Ord GetRolePolicyResponse
instance Read GetRolePolicyResponse
instance Show GetRolePolicyResponse
instance FromXML GetRolePolicyResponse
instance AWSRequest GetRolePolicy
instance ToHeaders GetRolePolicy
instance ToQuery GetRolePolicy
instance ToPath GetRolePolicy


-- | Retrieves information about the specified role, including the role's
--   path, GUID, ARN, and the policy granting permission to assume the
--   role. For more information about ARNs, go to <a>ARNs</a>. For more
--   information about roles, go to <a>Working with Roles</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetRole.html</a>
module Network.AWS.IAM.GetRole
data GetRole

-- | <a>GetRole</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>grRoleName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getRole :: Text -> GetRole

-- | The name of the role to get information about.
grRoleName :: Lens' GetRole Text
data GetRoleResponse

-- | <a>GetRoleResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>grrRole</a> <tt>::</tt> <a>Role</a></li>
--   </ul>
getRoleResponse :: Role -> GetRoleResponse

-- | Information about the role.
grrRole :: Lens' GetRoleResponse Role
instance Eq GetRole
instance Ord GetRole
instance Read GetRole
instance Show GetRole
instance Monoid GetRole
instance IsString GetRole
instance Eq GetRoleResponse
instance Read GetRoleResponse
instance Show GetRoleResponse
instance FromXML GetRoleResponse
instance AWSRequest GetRole
instance ToHeaders GetRole
instance ToQuery GetRole
instance ToPath GetRole


-- | Retrieves information about the specified version of the specified
--   managed policy, including the policy document.
--   
--   To list the available versions for a policy, use
--   <tt>ListPolicyVersions</tt>.
--   
--   This API retrieves information about managed policies. To retrieve
--   information about an inline policy that is embedded in a user, group,
--   or role, use the <tt>GetUserPolicy</tt>, <tt>GetGroupPolicy</tt>, or
--   <tt>GetRolePolicy</tt> API.
--   
--   For more information about the types of policies, refer to <a>Managed
--   Policiesand Inline Policies</a> in the <i>Using IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetPolicyVersion.html</a>
module Network.AWS.IAM.GetPolicyVersion
data GetPolicyVersion

-- | <a>GetPolicyVersion</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gpvPolicyArn</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>gpvVersionId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getPolicyVersion :: Text -> Text -> GetPolicyVersion
gpvPolicyArn :: Lens' GetPolicyVersion Text

-- | Identifies the policy version to retrieve.
gpvVersionId :: Lens' GetPolicyVersion Text
data GetPolicyVersionResponse

-- | <a>GetPolicyVersionResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gpvrPolicyVersion</a> <tt>::</tt> <a>Maybe</a>
--   <a>PolicyVersion</a></li>
--   </ul>
getPolicyVersionResponse :: GetPolicyVersionResponse

-- | Information about the policy version.
--   
--   For more information about managed policy versions, see <a>Versioning
--   forManaged Policies</a> in the <i>Using IAM</i> guide.
gpvrPolicyVersion :: Lens' GetPolicyVersionResponse (Maybe PolicyVersion)
instance Eq GetPolicyVersion
instance Ord GetPolicyVersion
instance Read GetPolicyVersion
instance Show GetPolicyVersion
instance Eq GetPolicyVersionResponse
instance Read GetPolicyVersionResponse
instance Show GetPolicyVersionResponse
instance FromXML GetPolicyVersionResponse
instance AWSRequest GetPolicyVersion
instance ToHeaders GetPolicyVersion
instance ToQuery GetPolicyVersion
instance ToPath GetPolicyVersion


-- | Retrieves information about the specified managed policy, including
--   the policy's default version and the total number of users, groups,
--   and roles that the policy is attached to. For a list of the specific
--   users, groups, and roles that the policy is attached to, use the
--   <tt>ListEntitiesForPolicy</tt> API. This API returns metadata about
--   the policy. To retrieve the policy document for a specific version of
--   the policy, use <tt>GetPolicyVersion</tt>.
--   
--   This API retrieves information about managed policies. To retrieve
--   information about an inline policy that is embedded with a user,
--   group, or role, use the <tt>GetUserPolicy</tt>,
--   <tt>GetGroupPolicy</tt>, or <tt>GetRolePolicy</tt> API.
--   
--   For more information about policies, refer to <a>Managed Policies and
--   InlinePolicies</a> in the <i>Using IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetPolicy.html</a>
module Network.AWS.IAM.GetPolicy
data GetPolicy

-- | <a>GetPolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gpPolicyArn</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getPolicy :: Text -> GetPolicy
gpPolicyArn :: Lens' GetPolicy Text
data GetPolicyResponse

-- | <a>GetPolicyResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gprPolicy</a> <tt>::</tt> <a>Maybe</a> <a>Policy</a></li>
--   </ul>
getPolicyResponse :: GetPolicyResponse

-- | Information about the policy.
gprPolicy :: Lens' GetPolicyResponse (Maybe Policy)
instance Eq GetPolicy
instance Ord GetPolicy
instance Read GetPolicy
instance Show GetPolicy
instance Monoid GetPolicy
instance IsString GetPolicy
instance Eq GetPolicyResponse
instance Read GetPolicyResponse
instance Show GetPolicyResponse
instance FromXML GetPolicyResponse
instance AWSRequest GetPolicy
instance ToHeaders GetPolicy
instance ToQuery GetPolicy
instance ToPath GetPolicy


-- | Returns information about the specified OpenID Connect provider.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetOpenIDConnectProvider.html</a>
module Network.AWS.IAM.GetOpenIDConnectProvider
data GetOpenIDConnectProvider

-- | <a>GetOpenIDConnectProvider</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>goidcpOpenIDConnectProviderArn</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getOpenIDConnectProvider :: Text -> GetOpenIDConnectProvider

-- | The Amazon Resource Name (ARN) of the IAM OpenID Connect (OIDC)
--   provider to get information for. You can get a list of OIDC provider
--   ARNs by using the <tt>ListOpenIDConnectProviders</tt> action.
goidcpOpenIDConnectProviderArn :: Lens' GetOpenIDConnectProvider Text
data GetOpenIDConnectProviderResponse

-- | <a>GetOpenIDConnectProviderResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>goidcprClientIDList</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>goidcprCreateDate</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>goidcprThumbprintList</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>goidcprUrl</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
getOpenIDConnectProviderResponse :: GetOpenIDConnectProviderResponse

-- | A list of client IDs (also known as audiences) that are associated
--   with the specified IAM OpenID Connect provider. For more information,
--   see <tt>CreateOpenIDConnectProvider</tt>.
goidcprClientIDList :: Lens' GetOpenIDConnectProviderResponse [Text]

-- | The date and time when the IAM OpenID Connect provider entity was
--   created in the AWS account.
goidcprCreateDate :: Lens' GetOpenIDConnectProviderResponse (Maybe UTCTime)

-- | A list of certificate thumbprints that are associated with the
--   specified IAM OpenID Connect provider. For more information, see
--   <tt>CreateOpenIDConnectProvider</tt> .
goidcprThumbprintList :: Lens' GetOpenIDConnectProviderResponse [Text]

-- | The URL that the IAM OpenID Connect provider is associated with. For
--   more information, see <tt>CreateOpenIDConnectProvider</tt>.
goidcprUrl :: Lens' GetOpenIDConnectProviderResponse (Maybe Text)
instance Eq GetOpenIDConnectProvider
instance Ord GetOpenIDConnectProvider
instance Read GetOpenIDConnectProvider
instance Show GetOpenIDConnectProvider
instance Monoid GetOpenIDConnectProvider
instance IsString GetOpenIDConnectProvider
instance Eq GetOpenIDConnectProviderResponse
instance Ord GetOpenIDConnectProviderResponse
instance Read GetOpenIDConnectProviderResponse
instance Show GetOpenIDConnectProviderResponse
instance FromXML GetOpenIDConnectProviderResponse
instance AWSRequest GetOpenIDConnectProvider
instance ToHeaders GetOpenIDConnectProvider
instance ToQuery GetOpenIDConnectProvider
instance ToPath GetOpenIDConnectProvider


-- | Retrieves the user name and password-creation date for the specified
--   user. If the user has not been assigned a password, the action returns
--   a 404 (<tt>NoSuchEntity</tt>) error.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetLoginProfile.html</a>
module Network.AWS.IAM.GetLoginProfile
data GetLoginProfile

-- | <a>GetLoginProfile</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>glpUserName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getLoginProfile :: Text -> GetLoginProfile

-- | The name of the user whose login profile you want to retrieve.
glpUserName :: Lens' GetLoginProfile Text
data GetLoginProfileResponse

-- | <a>GetLoginProfileResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>glprLoginProfile</a> <tt>::</tt> <a>LoginProfile</a></li>
--   </ul>
getLoginProfileResponse :: LoginProfile -> GetLoginProfileResponse

-- | The user name and password create date for the user.
glprLoginProfile :: Lens' GetLoginProfileResponse LoginProfile
instance Eq GetLoginProfile
instance Ord GetLoginProfile
instance Read GetLoginProfile
instance Show GetLoginProfile
instance Monoid GetLoginProfile
instance IsString GetLoginProfile
instance Eq GetLoginProfileResponse
instance Read GetLoginProfileResponse
instance Show GetLoginProfileResponse
instance FromXML GetLoginProfileResponse
instance AWSRequest GetLoginProfile
instance ToHeaders GetLoginProfile
instance ToQuery GetLoginProfile
instance ToPath GetLoginProfile


-- | Retrieves information about the specified instance profile, including
--   the instance profile's path, GUID, ARN, and role. For more information
--   about instance profiles, go to <a>About Instance Profiles</a>. For
--   more information about ARNs, go to <a>ARNs</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetInstanceProfile.html</a>
module Network.AWS.IAM.GetInstanceProfile
data GetInstanceProfile

-- | <a>GetInstanceProfile</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gipInstanceProfileName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getInstanceProfile :: Text -> GetInstanceProfile

-- | The name of the instance profile to get information about.
gipInstanceProfileName :: Lens' GetInstanceProfile Text
data GetInstanceProfileResponse

-- | <a>GetInstanceProfileResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>giprInstanceProfile</a> <tt>::</tt> <a>InstanceProfile</a></li>
--   </ul>
getInstanceProfileResponse :: InstanceProfile -> GetInstanceProfileResponse

-- | Information about the instance profile.
giprInstanceProfile :: Lens' GetInstanceProfileResponse InstanceProfile
instance Eq GetInstanceProfile
instance Ord GetInstanceProfile
instance Read GetInstanceProfile
instance Show GetInstanceProfile
instance Monoid GetInstanceProfile
instance IsString GetInstanceProfile
instance Eq GetInstanceProfileResponse
instance Read GetInstanceProfileResponse
instance Show GetInstanceProfileResponse
instance FromXML GetInstanceProfileResponse
instance AWSRequest GetInstanceProfile
instance ToHeaders GetInstanceProfile
instance ToQuery GetInstanceProfile
instance ToPath GetInstanceProfile


-- | Retrieves the specified inline policy document that is embedded in the
--   specified group.
--   
--   A group can also have managed policies attached to it. To retrieve a
--   managed policy document that is attached to a group, use
--   <tt>GetPolicy</tt> to determine the policy's default version, then use
--   <tt>GetPolicyVersion</tt> to retrieve the policy document.
--   
--   For more information about policies, refer to <a>Managed Policies and
--   InlinePolicies</a> in the <i>Using IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetGroupPolicy.html</a>
module Network.AWS.IAM.GetGroupPolicy
data GetGroupPolicy

-- | <a>GetGroupPolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ggpGroupName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ggpPolicyName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getGroupPolicy :: Text -> Text -> GetGroupPolicy

-- | The name of the group the policy is associated with.
ggpGroupName :: Lens' GetGroupPolicy Text

-- | The name of the policy document to get.
ggpPolicyName :: Lens' GetGroupPolicy Text
data GetGroupPolicyResponse

-- | <a>GetGroupPolicyResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ggprGroupName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ggprPolicyDocument</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ggprPolicyName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getGroupPolicyResponse :: Text -> Text -> Text -> GetGroupPolicyResponse

-- | The group the policy is associated with.
ggprGroupName :: Lens' GetGroupPolicyResponse Text

-- | The policy document.
ggprPolicyDocument :: Lens' GetGroupPolicyResponse Text

-- | The name of the policy.
ggprPolicyName :: Lens' GetGroupPolicyResponse Text
instance Eq GetGroupPolicy
instance Ord GetGroupPolicy
instance Read GetGroupPolicy
instance Show GetGroupPolicy
instance Eq GetGroupPolicyResponse
instance Ord GetGroupPolicyResponse
instance Read GetGroupPolicyResponse
instance Show GetGroupPolicyResponse
instance FromXML GetGroupPolicyResponse
instance AWSRequest GetGroupPolicy
instance ToHeaders GetGroupPolicy
instance ToQuery GetGroupPolicy
instance ToPath GetGroupPolicy


-- | Returns a list of users that are in the specified group. You can
--   paginate the results using the <tt>MaxItems</tt> and <tt>Marker</tt>
--   parameters.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetGroup.html</a>
module Network.AWS.IAM.GetGroup
data GetGroup

-- | <a>GetGroup</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ggGroupName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ggMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ggMaxItems</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   </ul>
getGroup :: Text -> GetGroup

-- | The name of the group.
ggGroupName :: Lens' GetGroup Text

-- | Use this only when paginating results, and only in a subsequent
--   request after you've received a response where the results are
--   truncated. Set it to the value of the <tt>Marker</tt> element in the
--   response you just received.
ggMarker :: Lens' GetGroup (Maybe Text)

-- | Use this only when paginating results to indicate the maximum number
--   of groups you want in the response. If there are additional groups
--   beyond the maximum you specify, the <tt>IsTruncated</tt> response
--   element is <tt>true</tt>. This parameter is optional. If you do not
--   include it, it defaults to 100.
ggMaxItems :: Lens' GetGroup (Maybe Natural)
data GetGroupResponse

-- | <a>GetGroupResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ggrGroup</a> <tt>::</tt> <a>Group</a></li>
--   <li><a>ggrIsTruncated</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>ggrMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ggrUsers</a> <tt>::</tt> [<a>User</a>]</li>
--   </ul>
getGroupResponse :: Group -> GetGroupResponse

-- | Information about the group.
ggrGroup :: Lens' GetGroupResponse Group

-- | A flag that indicates whether there are more user names to list. If
--   your results were truncated, you can make a subsequent pagination
--   request using the <tt>Marker</tt> request parameter to retrieve more
--   user names in the list.
ggrIsTruncated :: Lens' GetGroupResponse (Maybe Bool)

-- | If IsTruncated is <tt>true</tt>, then this element is present and
--   contains the value to use for the <tt>Marker</tt> parameter in a
--   subsequent pagination request.
ggrMarker :: Lens' GetGroupResponse (Maybe Text)

-- | A list of users in the group.
ggrUsers :: Lens' GetGroupResponse [User]
instance Eq GetGroup
instance Ord GetGroup
instance Read GetGroup
instance Show GetGroup
instance Eq GetGroupResponse
instance Read GetGroupResponse
instance Show GetGroupResponse
instance AWSPager GetGroup
instance FromXML GetGroupResponse
instance AWSRequest GetGroup
instance ToHeaders GetGroup
instance ToQuery GetGroup
instance ToPath GetGroup


-- | Retrieves a credential report for the AWS account. For more
--   information about the credential report, see <a>Getting Credential
--   Reports</a> in the <i>Using IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetCredentialReport.html</a>
module Network.AWS.IAM.GetCredentialReport
data GetCredentialReport

-- | <a>GetCredentialReport</a> constructor.
getCredentialReport :: GetCredentialReport
data GetCredentialReportResponse

-- | <a>GetCredentialReportResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gcrrContent</a> <tt>::</tt> <a>Maybe</a> <a>Base64</a></li>
--   <li><a>gcrrGeneratedTime</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>gcrrReportFormat</a> <tt>::</tt> <a>Maybe</a>
--   <a>ReportFormatType</a></li>
--   </ul>
getCredentialReportResponse :: GetCredentialReportResponse

-- | Contains the credential report. The report is Base64-encoded.
gcrrContent :: Lens' GetCredentialReportResponse (Maybe Base64)

-- | The date and time when the credential report was created, in <a>ISO
--   8601date-time format</a>.
gcrrGeneratedTime :: Lens' GetCredentialReportResponse (Maybe UTCTime)

-- | The format (MIME type) of the credential report.
gcrrReportFormat :: Lens' GetCredentialReportResponse (Maybe ReportFormatType)
instance Eq GetCredentialReport
instance Ord GetCredentialReport
instance Read GetCredentialReport
instance Show GetCredentialReport
instance Generic GetCredentialReport
instance Eq GetCredentialReportResponse
instance Read GetCredentialReportResponse
instance Show GetCredentialReportResponse
instance Datatype D1GetCredentialReport
instance Constructor C1_0GetCredentialReport
instance FromXML GetCredentialReportResponse
instance AWSRequest GetCredentialReport
instance ToHeaders GetCredentialReport
instance ToQuery GetCredentialReport
instance ToPath GetCredentialReport


-- | Retrieves information about IAM entity usage and IAM quotas in the AWS
--   account.
--   
--   For information about limitations on IAM entities, see <a>Limitations
--   on IAMEntities</a> in the <i>Using IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetAccountSummary.html</a>
module Network.AWS.IAM.GetAccountSummary
data GetAccountSummary

-- | <a>GetAccountSummary</a> constructor.
getAccountSummary :: GetAccountSummary
data GetAccountSummaryResponse

-- | <a>GetAccountSummaryResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gasrSummaryMap</a> <tt>::</tt> <a>HashMap</a>
--   <a>SummaryKeyType</a> <a>Int</a></li>
--   </ul>
getAccountSummaryResponse :: GetAccountSummaryResponse

-- | A set of key value pairs containing information about IAM entity usage
--   and IAM quotas.
--   
--   <tt>SummaryMap</tt> contains the following keys:
--   AccessKeysPerUserQuota
--   
--   The maximum number of active access keys allowed for each IAM user.
--   
--   AccountAccessKeysPresent
--   
--   This value is 1 if the AWS account (root) has an access key, otherwise
--   it is 0.
--   
--   AccountMFAEnabled
--   
--   This value is 1 if the AWS account (root) has an MFA device assigned,
--   otherwise it is 0.
--   
--   AccountSigningCertificatesPresent
--   
--   This value is 1 if the AWS account (root) has a signing certificate,
--   otherwise it is 0.
--   
--   AssumeRolePolicySizeQuota
--   
--   The maximum allowed size for assume role policy documents (trust
--   policies), in non-whitespace characters.
--   
--   AttachedPoliciesPerGroupQuota
--   
--   The maximum number of managed policies that can be attached to an IAM
--   group.
--   
--   AttachedPoliciesPerRoleQuota
--   
--   The maximum number of managed policies that can be attached to an IAM
--   role.
--   
--   AttachedPoliciesPerUserQuota
--   
--   The maximum number of managed policies that can be attached to an IAM
--   user.
--   
--   GroupPolicySizeQuota
--   
--   The maximum allowed size for the aggregate of all inline policies
--   embedded in an IAM group, in non-whitespace characters.
--   
--   Groups
--   
--   The number of IAM groups in the AWS account.
--   
--   GroupsPerUserQuota
--   
--   The maximum number of IAM groups each IAM user can belong to.
--   
--   GroupsQuota
--   
--   The maximum number of IAM groups allowed in the AWS account.
--   
--   InstanceProfiles
--   
--   The number of instance profiles in the AWS account.
--   
--   InstanceProfilesQuota
--   
--   The maximum number of instance profiles allowed in the AWS account.
--   
--   MFADevices
--   
--   The number of MFA devices in the AWS account, including those assigned
--   and unassigned.
--   
--   MFADevicesInUse
--   
--   The number of MFA devices that have been assigned to an IAM user or to
--   the AWS account (root).
--   
--   Policies
--   
--   The number of customer managed policies in the AWS account.
--   
--   PoliciesQuota
--   
--   The maximum number of customer managed policies allowed in the AWS
--   account.
--   
--   PolicySizeQuota
--   
--   The maximum allowed size of a customer managed policy, in
--   non-whitespace characters.
--   
--   PolicyVersionsInUse
--   
--   The number of managed policies that are attached to IAM users, groups,
--   or roles in the AWS account.
--   
--   PolicyVersionsInUseQuota
--   
--   The maximum number of managed policies that can be attached to IAM
--   users, groups, or roles in the AWS account.
--   
--   Providers
--   
--   The number of identity providers in the AWS account.
--   
--   RolePolicySizeQuota
--   
--   The maximum allowed size for the aggregate of all inline policies
--   (access policies, not the trust policy) embedded in an IAM role, in
--   non-whitespace characters.
--   
--   Roles
--   
--   The number of IAM roles in the AWS account.
--   
--   RolesQuota
--   
--   The maximum number of IAM roles allowed in the AWS account.
--   
--   ServerCertificates
--   
--   The number of server certificates in the AWS account.
--   
--   ServerCertificatesQuota
--   
--   The maximum number of server certificates allowed in the AWS account.
--   
--   SigningCertificatesPerUserQuota
--   
--   The maximum number of X.509 signing certificates allowed for each IAM
--   user.
--   
--   UserPolicySizeQuota
--   
--   The maximum allowed size for the aggregate of all inline policies
--   embedded in an IAM user, in non-whitespace characters.
--   
--   Users
--   
--   The number of IAM users in the AWS account.
--   
--   UsersQuota
--   
--   The maximum number of IAM users allowed in the AWS account.
--   
--   VersionsPerPolicyQuota
--   
--   The maximum number of policy versions allowed for each managed policy.
gasrSummaryMap :: Lens' GetAccountSummaryResponse (HashMap SummaryKeyType Int)
instance Eq GetAccountSummary
instance Ord GetAccountSummary
instance Read GetAccountSummary
instance Show GetAccountSummary
instance Generic GetAccountSummary
instance Eq GetAccountSummaryResponse
instance Read GetAccountSummaryResponse
instance Show GetAccountSummaryResponse
instance Monoid GetAccountSummaryResponse
instance Semigroup GetAccountSummaryResponse
instance Datatype D1GetAccountSummary
instance Constructor C1_0GetAccountSummary
instance FromXML GetAccountSummaryResponse
instance AWSRequest GetAccountSummary
instance ToHeaders GetAccountSummary
instance ToQuery GetAccountSummary
instance ToPath GetAccountSummary


-- | Retrieves the password policy for the AWS account. For more
--   information about using a password policy, go to <a>Managing an IAM
--   Password Policy</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetAccountPasswordPolicy.html</a>
module Network.AWS.IAM.GetAccountPasswordPolicy
data GetAccountPasswordPolicy

-- | <a>GetAccountPasswordPolicy</a> constructor.
getAccountPasswordPolicy :: GetAccountPasswordPolicy
data GetAccountPasswordPolicyResponse

-- | <a>GetAccountPasswordPolicyResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gapprPasswordPolicy</a> <tt>::</tt> <a>PasswordPolicy</a></li>
--   </ul>
getAccountPasswordPolicyResponse :: PasswordPolicy -> GetAccountPasswordPolicyResponse
gapprPasswordPolicy :: Lens' GetAccountPasswordPolicyResponse PasswordPolicy
instance Eq GetAccountPasswordPolicy
instance Ord GetAccountPasswordPolicy
instance Read GetAccountPasswordPolicy
instance Show GetAccountPasswordPolicy
instance Generic GetAccountPasswordPolicy
instance Eq GetAccountPasswordPolicyResponse
instance Read GetAccountPasswordPolicyResponse
instance Show GetAccountPasswordPolicyResponse
instance Datatype D1GetAccountPasswordPolicy
instance Constructor C1_0GetAccountPasswordPolicy
instance FromXML GetAccountPasswordPolicyResponse
instance AWSRequest GetAccountPasswordPolicy
instance ToHeaders GetAccountPasswordPolicy
instance ToQuery GetAccountPasswordPolicy
instance ToPath GetAccountPasswordPolicy


-- | Retrieves information about all IAM users, groups, roles, and policies
--   in your account, including their relationships to one another. Use
--   this API to obtain a snapshot of the configuration of IAM permissions
--   (users, groups, roles, and policies) in your account.
--   
--   You can optionally filter the results using the <tt>Filter</tt>
--   parameter. You can paginate the results using the <tt>MaxItems</tt>
--   and <tt>Marker</tt> parameters.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetAccountAuthorizationDetails.html</a>
module Network.AWS.IAM.GetAccountAuthorizationDetails
data GetAccountAuthorizationDetails

-- | <a>GetAccountAuthorizationDetails</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gaadFilter</a> <tt>::</tt> [<a>EntityType</a>]</li>
--   <li><a>gaadMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gaadMaxItems</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   </ul>
getAccountAuthorizationDetails :: GetAccountAuthorizationDetails

-- | A list of entity types (user, group, role, local managed policy, or
--   AWS managed policy) for filtering the results.
gaadFilter :: Lens' GetAccountAuthorizationDetails [EntityType]

-- | Use this only when paginating results, and only in a subsequent
--   request after you've received a response where the results are
--   truncated. Set it to the value of the <tt>Marker</tt> element in the
--   response you just received.
gaadMarker :: Lens' GetAccountAuthorizationDetails (Maybe Text)

-- | Use this only when paginating results to indicate the maximum number
--   of items you want in the response. If there are additional items
--   beyond the maximum you specify, the <tt>IsTruncated</tt> response
--   element is <tt>true</tt>. This parameter is optional. If you do not
--   include it, it defaults to 100.
gaadMaxItems :: Lens' GetAccountAuthorizationDetails (Maybe Natural)
data GetAccountAuthorizationDetailsResponse

-- | <a>GetAccountAuthorizationDetailsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gaadrGroupDetailList</a> <tt>::</tt> [<a>GroupDetail</a>]</li>
--   <li><a>gaadrIsTruncated</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>gaadrMarker</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gaadrPolicies</a> <tt>::</tt> [<a>ManagedPolicyDetail</a>]</li>
--   <li><a>gaadrRoleDetailList</a> <tt>::</tt> [<a>RoleDetail</a>]</li>
--   <li><a>gaadrUserDetailList</a> <tt>::</tt> [<a>UserDetail</a>]</li>
--   </ul>
getAccountAuthorizationDetailsResponse :: GetAccountAuthorizationDetailsResponse

-- | A list containing information about IAM groups.
gaadrGroupDetailList :: Lens' GetAccountAuthorizationDetailsResponse [GroupDetail]

-- | A flag that indicates whether there are more items to return. If your
--   results were truncated, you can make a subsequent pagination request
--   using the <tt>Marker</tt> request parameter to retrieve more items.
gaadrIsTruncated :: Lens' GetAccountAuthorizationDetailsResponse (Maybe Bool)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, this element is present and
--   contains the value to use for the <tt>Marker</tt> parameter in a
--   subsequent pagination request.
gaadrMarker :: Lens' GetAccountAuthorizationDetailsResponse (Maybe Text)

-- | A list containing information about managed policies.
gaadrPolicies :: Lens' GetAccountAuthorizationDetailsResponse [ManagedPolicyDetail]

-- | A list containing information about IAM roles.
gaadrRoleDetailList :: Lens' GetAccountAuthorizationDetailsResponse [RoleDetail]

-- | A list containing information about IAM users.
gaadrUserDetailList :: Lens' GetAccountAuthorizationDetailsResponse [UserDetail]
instance Eq GetAccountAuthorizationDetails
instance Read GetAccountAuthorizationDetails
instance Show GetAccountAuthorizationDetails
instance Eq GetAccountAuthorizationDetailsResponse
instance Read GetAccountAuthorizationDetailsResponse
instance Show GetAccountAuthorizationDetailsResponse
instance FromXML GetAccountAuthorizationDetailsResponse
instance AWSRequest GetAccountAuthorizationDetails
instance ToHeaders GetAccountAuthorizationDetails
instance ToQuery GetAccountAuthorizationDetails
instance ToPath GetAccountAuthorizationDetails


-- | Retrieves information about when the specified access key was last
--   used. The information includes the date and time of last use, along
--   with the AWS service and region that were specified in the last
--   request made with that key.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetAccessKeyLastUsed.html</a>
module Network.AWS.IAM.GetAccessKeyLastUsed
data GetAccessKeyLastUsed

-- | <a>GetAccessKeyLastUsed</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gakluAccessKeyId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getAccessKeyLastUsed :: Text -> GetAccessKeyLastUsed

-- | The identifier of an access key.
gakluAccessKeyId :: Lens' GetAccessKeyLastUsed Text
data GetAccessKeyLastUsedResponse

-- | <a>GetAccessKeyLastUsedResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gaklurAccessKeyLastUsed</a> <tt>::</tt> <a>Maybe</a>
--   <a>AccessKeyLastUsed</a></li>
--   <li><a>gaklurUserName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
getAccessKeyLastUsedResponse :: GetAccessKeyLastUsedResponse

-- | Contains information about the last time the access key was used.
gaklurAccessKeyLastUsed :: Lens' GetAccessKeyLastUsedResponse (Maybe AccessKeyLastUsed)

-- | The name of the AWS IAM user that owns this access key.
gaklurUserName :: Lens' GetAccessKeyLastUsedResponse (Maybe Text)
instance Eq GetAccessKeyLastUsed
instance Ord GetAccessKeyLastUsed
instance Read GetAccessKeyLastUsed
instance Show GetAccessKeyLastUsed
instance Monoid GetAccessKeyLastUsed
instance IsString GetAccessKeyLastUsed
instance Eq GetAccessKeyLastUsedResponse
instance Read GetAccessKeyLastUsedResponse
instance Show GetAccessKeyLastUsedResponse
instance FromXML GetAccessKeyLastUsedResponse
instance AWSRequest GetAccessKeyLastUsed
instance ToHeaders GetAccessKeyLastUsed
instance ToQuery GetAccessKeyLastUsed
instance ToPath GetAccessKeyLastUsed


-- | Generates a credential report for the AWS account. For more
--   information about the credential report, see <a>Getting Credential
--   Reports</a> in the <i>Using IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_GenerateCredentialReport.html</a>
module Network.AWS.IAM.GenerateCredentialReport
data GenerateCredentialReport

-- | <a>GenerateCredentialReport</a> constructor.
generateCredentialReport :: GenerateCredentialReport
data GenerateCredentialReportResponse

-- | <a>GenerateCredentialReportResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gcrrDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gcrrState</a> <tt>::</tt> <a>Maybe</a>
--   <a>ReportStateType</a></li>
--   </ul>
generateCredentialReportResponse :: GenerateCredentialReportResponse

-- | Information about the credential report.
gcrrDescription :: Lens' GenerateCredentialReportResponse (Maybe Text)

-- | Information about the state of the credential report.
gcrrState :: Lens' GenerateCredentialReportResponse (Maybe ReportStateType)
instance Eq GenerateCredentialReport
instance Ord GenerateCredentialReport
instance Read GenerateCredentialReport
instance Show GenerateCredentialReport
instance Generic GenerateCredentialReport
instance Eq GenerateCredentialReportResponse
instance Read GenerateCredentialReportResponse
instance Show GenerateCredentialReportResponse
instance Datatype D1GenerateCredentialReport
instance Constructor C1_0GenerateCredentialReport
instance FromXML GenerateCredentialReportResponse
instance AWSRequest GenerateCredentialReport
instance ToHeaders GenerateCredentialReport
instance ToQuery GenerateCredentialReport
instance ToPath GenerateCredentialReport


-- | Enables the specified MFA device and associates it with the specified
--   user name. When enabled, the MFA device is required for every
--   subsequent login by the user name associated with the device.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_EnableMFADevice.html</a>
module Network.AWS.IAM.EnableMFADevice
data EnableMFADevice

-- | <a>EnableMFADevice</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>emfadAuthenticationCode1</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>emfadAuthenticationCode2</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>emfadSerialNumber</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>emfadUserName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
enableMFADevice :: Text -> Text -> Text -> Text -> EnableMFADevice

-- | An authentication code emitted by the device.
emfadAuthenticationCode1 :: Lens' EnableMFADevice Text

-- | A subsequent authentication code emitted by the device.
emfadAuthenticationCode2 :: Lens' EnableMFADevice Text

-- | The serial number that uniquely identifies the MFA device. For virtual
--   MFA devices, the serial number is the device ARN.
emfadSerialNumber :: Lens' EnableMFADevice Text

-- | The name of the user for whom you want to enable the MFA device.
emfadUserName :: Lens' EnableMFADevice Text
data EnableMFADeviceResponse

-- | <a>EnableMFADeviceResponse</a> constructor.
enableMFADeviceResponse :: EnableMFADeviceResponse
instance Eq EnableMFADevice
instance Ord EnableMFADevice
instance Read EnableMFADevice
instance Show EnableMFADevice
instance Eq EnableMFADeviceResponse
instance Ord EnableMFADeviceResponse
instance Read EnableMFADeviceResponse
instance Show EnableMFADeviceResponse
instance Generic EnableMFADeviceResponse
instance Datatype D1EnableMFADeviceResponse
instance Constructor C1_0EnableMFADeviceResponse
instance AWSRequest EnableMFADevice
instance ToHeaders EnableMFADevice
instance ToQuery EnableMFADevice
instance ToPath EnableMFADevice


-- | Removes the specified managed policy from the specified user.
--   
--   A user can also have inline policies embedded with it. To delete an
--   inline policy, use the <tt>DeleteUserPolicy</tt> API. For information
--   about policies, refer to <a>Managed Policies and Inline Policies</a>
--   in the <i>Using IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_DetachUserPolicy.html</a>
module Network.AWS.IAM.DetachUserPolicy
data DetachUserPolicy

-- | <a>DetachUserPolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dup1PolicyArn</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>dup1UserName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
detachUserPolicy :: Text -> Text -> DetachUserPolicy
dup1PolicyArn :: Lens' DetachUserPolicy Text

-- | The name (friendly name, not ARN) of the user to detach the policy
--   from.
dup1UserName :: Lens' DetachUserPolicy Text
data DetachUserPolicyResponse

-- | <a>DetachUserPolicyResponse</a> constructor.
detachUserPolicyResponse :: DetachUserPolicyResponse
instance Eq DetachUserPolicy
instance Ord DetachUserPolicy
instance Read DetachUserPolicy
instance Show DetachUserPolicy
instance Eq DetachUserPolicyResponse
instance Ord DetachUserPolicyResponse
instance Read DetachUserPolicyResponse
instance Show DetachUserPolicyResponse
instance Generic DetachUserPolicyResponse
instance Datatype D1DetachUserPolicyResponse
instance Constructor C1_0DetachUserPolicyResponse
instance AWSRequest DetachUserPolicy
instance ToHeaders DetachUserPolicy
instance ToQuery DetachUserPolicy
instance ToPath DetachUserPolicy


-- | Removes the specified managed policy from the specified role.
--   
--   A role can also have inline policies embedded with it. To delete an
--   inline policy, use the <tt>DeleteRolePolicy</tt> API. For information
--   about policies, refer to <a>Managed Policies and Inline Policies</a>
--   in the <i>Using IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_DetachRolePolicy.html</a>
module Network.AWS.IAM.DetachRolePolicy
data DetachRolePolicy

-- | <a>DetachRolePolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>drpPolicyArn</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>drpRoleName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
detachRolePolicy :: Text -> Text -> DetachRolePolicy
drpPolicyArn :: Lens' DetachRolePolicy Text

-- | The name (friendly name, not ARN) of the role to detach the policy
--   from.
drpRoleName :: Lens' DetachRolePolicy Text
data DetachRolePolicyResponse

-- | <a>DetachRolePolicyResponse</a> constructor.
detachRolePolicyResponse :: DetachRolePolicyResponse
instance Eq DetachRolePolicy
instance Ord DetachRolePolicy
instance Read DetachRolePolicy
instance Show DetachRolePolicy
instance Eq DetachRolePolicyResponse
instance Ord DetachRolePolicyResponse
instance Read DetachRolePolicyResponse
instance Show DetachRolePolicyResponse
instance Generic DetachRolePolicyResponse
instance Datatype D1DetachRolePolicyResponse
instance Constructor C1_0DetachRolePolicyResponse
instance AWSRequest DetachRolePolicy
instance ToHeaders DetachRolePolicy
instance ToQuery DetachRolePolicy
instance ToPath DetachRolePolicy


-- | Removes the specified managed policy from the specified group.
--   
--   A group can also have inline policies embedded with it. To delete an
--   inline policy, use the <tt>DeleteGroupPolicy</tt> API. For information
--   about policies, refer to <a>Managed Policies and Inline Policies</a>
--   in the <i>Using IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_DetachGroupPolicy.html</a>
module Network.AWS.IAM.DetachGroupPolicy
data DetachGroupPolicy

-- | <a>DetachGroupPolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dgpGroupName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>dgpPolicyArn</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
detachGroupPolicy :: Text -> Text -> DetachGroupPolicy

-- | The name (friendly name, not ARN) of the group to detach the policy
--   from.
dgpGroupName :: Lens' DetachGroupPolicy Text
dgpPolicyArn :: Lens' DetachGroupPolicy Text
data DetachGroupPolicyResponse

-- | <a>DetachGroupPolicyResponse</a> constructor.
detachGroupPolicyResponse :: DetachGroupPolicyResponse
instance Eq DetachGroupPolicy
instance Ord DetachGroupPolicy
instance Read DetachGroupPolicy
instance Show DetachGroupPolicy
instance Eq DetachGroupPolicyResponse
instance Ord DetachGroupPolicyResponse
instance Read DetachGroupPolicyResponse
instance Show DetachGroupPolicyResponse
instance Generic DetachGroupPolicyResponse
instance Datatype D1DetachGroupPolicyResponse
instance Constructor C1_0DetachGroupPolicyResponse
instance AWSRequest DetachGroupPolicy
instance ToHeaders DetachGroupPolicy
instance ToQuery DetachGroupPolicy
instance ToPath DetachGroupPolicy


-- | Deletes a virtual MFA device.
--   
--   You must deactivate a user's virtual MFA device before you can delete
--   it. For information about deactivating MFA devices, see
--   <tt>DeactivateMFADevice</tt>.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteVirtualMFADevice.html</a>
module Network.AWS.IAM.DeleteVirtualMFADevice
data DeleteVirtualMFADevice

-- | <a>DeleteVirtualMFADevice</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvmfadSerialNumber</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteVirtualMFADevice :: Text -> DeleteVirtualMFADevice

-- | The serial number that uniquely identifies the MFA device. For virtual
--   MFA devices, the serial number is the same as the ARN.
dvmfadSerialNumber :: Lens' DeleteVirtualMFADevice Text
data DeleteVirtualMFADeviceResponse

-- | <a>DeleteVirtualMFADeviceResponse</a> constructor.
deleteVirtualMFADeviceResponse :: DeleteVirtualMFADeviceResponse
instance Eq DeleteVirtualMFADevice
instance Ord DeleteVirtualMFADevice
instance Read DeleteVirtualMFADevice
instance Show DeleteVirtualMFADevice
instance Monoid DeleteVirtualMFADevice
instance IsString DeleteVirtualMFADevice
instance Eq DeleteVirtualMFADeviceResponse
instance Ord DeleteVirtualMFADeviceResponse
instance Read DeleteVirtualMFADeviceResponse
instance Show DeleteVirtualMFADeviceResponse
instance Generic DeleteVirtualMFADeviceResponse
instance Datatype D1DeleteVirtualMFADeviceResponse
instance Constructor C1_0DeleteVirtualMFADeviceResponse
instance AWSRequest DeleteVirtualMFADevice
instance ToHeaders DeleteVirtualMFADevice
instance ToQuery DeleteVirtualMFADevice
instance ToPath DeleteVirtualMFADevice


-- | Deletes the specified inline policy that is embedded in the specified
--   user.
--   
--   A user can also have managed policies attached to it. To detach a
--   managed policy from a user, use <tt>DetachUserPolicy</tt>. For more
--   information about policies, refer to <a>Managed Policies and Inline
--   Policies</a> in the <i>Using IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteUserPolicy.html</a>
module Network.AWS.IAM.DeleteUserPolicy
data DeleteUserPolicy

-- | <a>DeleteUserPolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dupPolicyName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>dupUserName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteUserPolicy :: Text -> Text -> DeleteUserPolicy

-- | The name identifying the policy document to delete.
dupPolicyName :: Lens' DeleteUserPolicy Text

-- | The name (friendly name, not ARN) identifying the user that the policy
--   is embedded in.
dupUserName :: Lens' DeleteUserPolicy Text
data DeleteUserPolicyResponse

-- | <a>DeleteUserPolicyResponse</a> constructor.
deleteUserPolicyResponse :: DeleteUserPolicyResponse
instance Eq DeleteUserPolicy
instance Ord DeleteUserPolicy
instance Read DeleteUserPolicy
instance Show DeleteUserPolicy
instance Eq DeleteUserPolicyResponse
instance Ord DeleteUserPolicyResponse
instance Read DeleteUserPolicyResponse
instance Show DeleteUserPolicyResponse
instance Generic DeleteUserPolicyResponse
instance Datatype D1DeleteUserPolicyResponse
instance Constructor C1_0DeleteUserPolicyResponse
instance AWSRequest DeleteUserPolicy
instance ToHeaders DeleteUserPolicy
instance ToQuery DeleteUserPolicy
instance ToPath DeleteUserPolicy


-- | Deletes the specified user. The user must not belong to any groups,
--   have any keys or signing certificates, or have any attached policies.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteUser.html</a>
module Network.AWS.IAM.DeleteUser
data DeleteUser

-- | <a>DeleteUser</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>duUserName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteUser :: Text -> DeleteUser

-- | The name of the user to delete.
duUserName :: Lens' DeleteUser Text
data DeleteUserResponse

-- | <a>DeleteUserResponse</a> constructor.
deleteUserResponse :: DeleteUserResponse
instance Eq DeleteUser
instance Ord DeleteUser
instance Read DeleteUser
instance Show DeleteUser
instance Monoid DeleteUser
instance IsString DeleteUser
instance Eq DeleteUserResponse
instance Ord DeleteUserResponse
instance Read DeleteUserResponse
instance Show DeleteUserResponse
instance Generic DeleteUserResponse
instance Datatype D1DeleteUserResponse
instance Constructor C1_0DeleteUserResponse
instance AWSRequest DeleteUser
instance ToHeaders DeleteUser
instance ToQuery DeleteUser
instance ToPath DeleteUser


-- | Deletes the specified signing certificate associated with the
--   specified user.
--   
--   If you do not specify a user name, IAM determines the user name
--   implicitly based on the AWS access key ID signing the request. Because
--   this action works for access keys under the AWS account, you can use
--   this action to manage root credentials even if the AWS account has no
--   associated users.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteSigningCertificate.html</a>
module Network.AWS.IAM.DeleteSigningCertificate
data DeleteSigningCertificate

-- | <a>DeleteSigningCertificate</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dscCertificateId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>dscUserName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
deleteSigningCertificate :: Text -> DeleteSigningCertificate

-- | The ID of the signing certificate to delete.
dscCertificateId :: Lens' DeleteSigningCertificate Text

-- | The name of the user the signing certificate belongs to.
dscUserName :: Lens' DeleteSigningCertificate (Maybe Text)
data DeleteSigningCertificateResponse

-- | <a>DeleteSigningCertificateResponse</a> constructor.
deleteSigningCertificateResponse :: DeleteSigningCertificateResponse
instance Eq DeleteSigningCertificate
instance Ord DeleteSigningCertificate
instance Read DeleteSigningCertificate
instance Show DeleteSigningCertificate
instance Eq DeleteSigningCertificateResponse
instance Ord DeleteSigningCertificateResponse
instance Read DeleteSigningCertificateResponse
instance Show DeleteSigningCertificateResponse
instance Generic DeleteSigningCertificateResponse
instance Datatype D1DeleteSigningCertificateResponse
instance Constructor C1_0DeleteSigningCertificateResponse
instance AWSRequest DeleteSigningCertificate
instance ToHeaders DeleteSigningCertificate
instance ToQuery DeleteSigningCertificate
instance ToPath DeleteSigningCertificate


-- | Deletes the specified server certificate.
--   
--   If you are using a server certificate with Elastic Load Balancing,
--   deleting the certificate could have implications for your application.
--   If Elastic Load Balancing doesn't detect the deletion of bound
--   certificates, it may continue to use the certificates. This could
--   cause Elastic Load Balancing to stop accepting traffic. We recommend
--   that you remove the reference to the certificate from Elastic Load
--   Balancing before using this command to delete the certificate. For
--   more information, go to <a>DeleteLoadBalancerListeners</a> in the
--   <i>Elastic Load Balancing API Reference</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteServerCertificate.html</a>
module Network.AWS.IAM.DeleteServerCertificate
data DeleteServerCertificate

-- | <a>DeleteServerCertificate</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dscServerCertificateName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteServerCertificate :: Text -> DeleteServerCertificate

-- | The name of the server certificate you want to delete.
dscServerCertificateName :: Lens' DeleteServerCertificate Text
data DeleteServerCertificateResponse

-- | <a>DeleteServerCertificateResponse</a> constructor.
deleteServerCertificateResponse :: DeleteServerCertificateResponse
instance Eq DeleteServerCertificate
instance Ord DeleteServerCertificate
instance Read DeleteServerCertificate
instance Show DeleteServerCertificate
instance Monoid DeleteServerCertificate
instance IsString DeleteServerCertificate
instance Eq DeleteServerCertificateResponse
instance Ord DeleteServerCertificateResponse
instance Read DeleteServerCertificateResponse
instance Show DeleteServerCertificateResponse
instance Generic DeleteServerCertificateResponse
instance Datatype D1DeleteServerCertificateResponse
instance Constructor C1_0DeleteServerCertificateResponse
instance AWSRequest DeleteServerCertificate
instance ToHeaders DeleteServerCertificate
instance ToQuery DeleteServerCertificate
instance ToPath DeleteServerCertificate


-- | Deletes a SAML provider.
--   
--   Deleting the provider does not update any roles that reference the
--   SAML provider as a principal in their trust policies. Any attempt to
--   assume a role that references a SAML provider that has been deleted
--   will fail.
--   
--   This operation requires <a>Signature Version 4</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteSAMLProvider.html</a>
module Network.AWS.IAM.DeleteSAMLProvider
data DeleteSAMLProvider

-- | <a>DeleteSAMLProvider</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsamlpSAMLProviderArn</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteSAMLProvider :: Text -> DeleteSAMLProvider

-- | The Amazon Resource Name (ARN) of the SAML provider to delete.
dsamlpSAMLProviderArn :: Lens' DeleteSAMLProvider Text
data DeleteSAMLProviderResponse

-- | <a>DeleteSAMLProviderResponse</a> constructor.
deleteSAMLProviderResponse :: DeleteSAMLProviderResponse
instance Eq DeleteSAMLProvider
instance Ord DeleteSAMLProvider
instance Read DeleteSAMLProvider
instance Show DeleteSAMLProvider
instance Monoid DeleteSAMLProvider
instance IsString DeleteSAMLProvider
instance Eq DeleteSAMLProviderResponse
instance Ord DeleteSAMLProviderResponse
instance Read DeleteSAMLProviderResponse
instance Show DeleteSAMLProviderResponse
instance Generic DeleteSAMLProviderResponse
instance Datatype D1DeleteSAMLProviderResponse
instance Constructor C1_0DeleteSAMLProviderResponse
instance AWSRequest DeleteSAMLProvider
instance ToHeaders DeleteSAMLProvider
instance ToQuery DeleteSAMLProvider
instance ToPath DeleteSAMLProvider


-- | Deletes the specified inline policy that is embedded in the specified
--   role.
--   
--   A role can also have managed policies attached to it. To detach a
--   managed policy from a role, use <tt>DetachRolePolicy</tt>. For more
--   information about policies, refer to <a>Managed Policies and Inline
--   Policies</a> in the <i>Using IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteRolePolicy.html</a>
module Network.AWS.IAM.DeleteRolePolicy
data DeleteRolePolicy

-- | <a>DeleteRolePolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>drp1PolicyName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>drp1RoleName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteRolePolicy :: Text -> Text -> DeleteRolePolicy

-- | The name identifying the policy document to delete.
drp1PolicyName :: Lens' DeleteRolePolicy Text

-- | The name (friendly name, not ARN) identifying the role that the policy
--   is embedded in.
drp1RoleName :: Lens' DeleteRolePolicy Text
data DeleteRolePolicyResponse

-- | <a>DeleteRolePolicyResponse</a> constructor.
deleteRolePolicyResponse :: DeleteRolePolicyResponse
instance Eq DeleteRolePolicy
instance Ord DeleteRolePolicy
instance Read DeleteRolePolicy
instance Show DeleteRolePolicy
instance Eq DeleteRolePolicyResponse
instance Ord DeleteRolePolicyResponse
instance Read DeleteRolePolicyResponse
instance Show DeleteRolePolicyResponse
instance Generic DeleteRolePolicyResponse
instance Datatype D1DeleteRolePolicyResponse
instance Constructor C1_0DeleteRolePolicyResponse
instance AWSRequest DeleteRolePolicy
instance ToHeaders DeleteRolePolicy
instance ToQuery DeleteRolePolicy
instance ToPath DeleteRolePolicy


-- | Deletes the specified role. The role must not have any policies
--   attached. For more information about roles, go to <a>Working with
--   Roles</a>.
--   
--   Make sure you do not have any Amazon EC2 instances running with the
--   role you are about to delete. Deleting a role or instance profile that
--   is associated with a running instance will break any applications
--   running on the instance.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteRole.html</a>
module Network.AWS.IAM.DeleteRole
data DeleteRole

-- | <a>DeleteRole</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>drRoleName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteRole :: Text -> DeleteRole

-- | The name of the role to delete.
drRoleName :: Lens' DeleteRole Text
data DeleteRoleResponse

-- | <a>DeleteRoleResponse</a> constructor.
deleteRoleResponse :: DeleteRoleResponse
instance Eq DeleteRole
instance Ord DeleteRole
instance Read DeleteRole
instance Show DeleteRole
instance Monoid DeleteRole
instance IsString DeleteRole
instance Eq DeleteRoleResponse
instance Ord DeleteRoleResponse
instance Read DeleteRoleResponse
instance Show DeleteRoleResponse
instance Generic DeleteRoleResponse
instance Datatype D1DeleteRoleResponse
instance Constructor C1_0DeleteRoleResponse
instance AWSRequest DeleteRole
instance ToHeaders DeleteRole
instance ToQuery DeleteRole
instance ToPath DeleteRole


-- | Deletes the specified version of the specified managed policy.
--   
--   You cannot delete the default version of a policy using this API. To
--   delete the default version of a policy, use <tt>DeletePolicy</tt>. To
--   find out which version of a policy is marked as the default version,
--   use <tt>ListPolicyVersions</tt>.
--   
--   For information about versions for managed policies, refer to
--   <a>Versioning forManaged Policies</a> in the <i>Using IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeletePolicyVersion.html</a>
module Network.AWS.IAM.DeletePolicyVersion
data DeletePolicyVersion

-- | <a>DeletePolicyVersion</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dpvPolicyArn</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>dpvVersionId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deletePolicyVersion :: Text -> Text -> DeletePolicyVersion
dpvPolicyArn :: Lens' DeletePolicyVersion Text

-- | The policy version to delete.
--   
--   For more information about managed policy versions, see <a>Versioning
--   forManaged Policies</a> in the <i>Using IAM</i> guide.
dpvVersionId :: Lens' DeletePolicyVersion Text
data DeletePolicyVersionResponse

-- | <a>DeletePolicyVersionResponse</a> constructor.
deletePolicyVersionResponse :: DeletePolicyVersionResponse
instance Eq DeletePolicyVersion
instance Ord DeletePolicyVersion
instance Read DeletePolicyVersion
instance Show DeletePolicyVersion
instance Eq DeletePolicyVersionResponse
instance Ord DeletePolicyVersionResponse
instance Read DeletePolicyVersionResponse
instance Show DeletePolicyVersionResponse
instance Generic DeletePolicyVersionResponse
instance Datatype D1DeletePolicyVersionResponse
instance Constructor C1_0DeletePolicyVersionResponse
instance AWSRequest DeletePolicyVersion
instance ToHeaders DeletePolicyVersion
instance ToQuery DeletePolicyVersion
instance ToPath DeletePolicyVersion


-- | Deletes the specified managed policy.
--   
--   Before you can delete a managed policy, you must detach the policy
--   from all users, groups, and roles that it is attached to, and you must
--   delete all of the policy's versions. The following steps describe the
--   process for deleting a managed policy: Detach the policy from all
--   users, groups, and roles that the policy is attached to, using the
--   <tt>DetachUserPolicy</tt>, <tt>DetachGroupPolicy</tt>, or
--   <tt>DetachRolePolicy</tt> APIs. To list all the users, groups, and
--   roles that a policy is attached to, use
--   <tt>ListEntitiesForPolicy</tt>. Delete all versions of the policy
--   using <tt>DeletePolicyVersion</tt>. To list the policy's versions, use
--   <tt>ListPolicyVersions</tt>. You cannot use
--   <tt>DeletePolicyVersion</tt> to delete the version that is marked as
--   the default version. You delete the policy's default version in the
--   next step of the process. Delete the policy (this automatically
--   deletes the policy's default version) using this API.
--   
--   For information about managed policies, refer to <a>Managed Policies
--   and InlinePolicies</a> in the <i>Using IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeletePolicy.html</a>
module Network.AWS.IAM.DeletePolicy
data DeletePolicy

-- | <a>DeletePolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dpPolicyArn</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deletePolicy :: Text -> DeletePolicy
dpPolicyArn :: Lens' DeletePolicy Text
data DeletePolicyResponse

-- | <a>DeletePolicyResponse</a> constructor.
deletePolicyResponse :: DeletePolicyResponse
instance Eq DeletePolicy
instance Ord DeletePolicy
instance Read DeletePolicy
instance Show DeletePolicy
instance Monoid DeletePolicy
instance IsString DeletePolicy
instance Eq DeletePolicyResponse
instance Ord DeletePolicyResponse
instance Read DeletePolicyResponse
instance Show DeletePolicyResponse
instance Generic DeletePolicyResponse
instance Datatype D1DeletePolicyResponse
instance Constructor C1_0DeletePolicyResponse
instance AWSRequest DeletePolicy
instance ToHeaders DeletePolicy
instance ToQuery DeletePolicy
instance ToPath DeletePolicy


-- | Deletes an IAM OpenID Connect identity provider.
--   
--   Deleting an OIDC provider does not update any roles that reference the
--   provider as a principal in their trust policies. Any attempt to assume
--   a role that references a provider that has been deleted will fail.
--   
--   This action is idempotent; it does not fail or return an error if you
--   call the action for a provider that was already deleted.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteOpenIDConnectProvider.html</a>
module Network.AWS.IAM.DeleteOpenIDConnectProvider
data DeleteOpenIDConnectProvider

-- | <a>DeleteOpenIDConnectProvider</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>doidcpOpenIDConnectProviderArn</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteOpenIDConnectProvider :: Text -> DeleteOpenIDConnectProvider

-- | The Amazon Resource Name (ARN) of the IAM OpenID Connect provider to
--   delete. You can get a list of OpenID Connect provider ARNs by using
--   the <tt>ListOpenIDConnectProviders</tt> action.
doidcpOpenIDConnectProviderArn :: Lens' DeleteOpenIDConnectProvider Text
data DeleteOpenIDConnectProviderResponse

-- | <a>DeleteOpenIDConnectProviderResponse</a> constructor.
deleteOpenIDConnectProviderResponse :: DeleteOpenIDConnectProviderResponse
instance Eq DeleteOpenIDConnectProvider
instance Ord DeleteOpenIDConnectProvider
instance Read DeleteOpenIDConnectProvider
instance Show DeleteOpenIDConnectProvider
instance Monoid DeleteOpenIDConnectProvider
instance IsString DeleteOpenIDConnectProvider
instance Eq DeleteOpenIDConnectProviderResponse
instance Ord DeleteOpenIDConnectProviderResponse
instance Read DeleteOpenIDConnectProviderResponse
instance Show DeleteOpenIDConnectProviderResponse
instance Generic DeleteOpenIDConnectProviderResponse
instance Datatype D1DeleteOpenIDConnectProviderResponse
instance Constructor C1_0DeleteOpenIDConnectProviderResponse
instance AWSRequest DeleteOpenIDConnectProvider
instance ToHeaders DeleteOpenIDConnectProvider
instance ToQuery DeleteOpenIDConnectProvider
instance ToPath DeleteOpenIDConnectProvider


-- | Deletes the password for the specified user, which terminates the
--   user's ability to access AWS services through the AWS Management
--   Console.
--   
--   Deleting a user's password does not prevent a user from accessing IAM
--   through the command line interface or the API. To prevent all user
--   access you must also either make the access key inactive or delete it.
--   For more information about making keys inactive or deleting them, see
--   <tt>UpdateAccessKey</tt> and <tt>DeleteAccessKey</tt>.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteLoginProfile.html</a>
module Network.AWS.IAM.DeleteLoginProfile
data DeleteLoginProfile

-- | <a>DeleteLoginProfile</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dlpUserName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteLoginProfile :: Text -> DeleteLoginProfile

-- | The name of the user whose password you want to delete.
dlpUserName :: Lens' DeleteLoginProfile Text
data DeleteLoginProfileResponse

-- | <a>DeleteLoginProfileResponse</a> constructor.
deleteLoginProfileResponse :: DeleteLoginProfileResponse
instance Eq DeleteLoginProfile
instance Ord DeleteLoginProfile
instance Read DeleteLoginProfile
instance Show DeleteLoginProfile
instance Monoid DeleteLoginProfile
instance IsString DeleteLoginProfile
instance Eq DeleteLoginProfileResponse
instance Ord DeleteLoginProfileResponse
instance Read DeleteLoginProfileResponse
instance Show DeleteLoginProfileResponse
instance Generic DeleteLoginProfileResponse
instance Datatype D1DeleteLoginProfileResponse
instance Constructor C1_0DeleteLoginProfileResponse
instance AWSRequest DeleteLoginProfile
instance ToHeaders DeleteLoginProfile
instance ToQuery DeleteLoginProfile
instance ToPath DeleteLoginProfile


-- | Deletes the specified instance profile. The instance profile must not
--   have an associated role.
--   
--   Make sure you do not have any Amazon EC2 instances running with the
--   instance profile you are about to delete. Deleting a role or instance
--   profile that is associated with a running instance will break any
--   applications running on the instance. For more information about
--   instance profiles, go to <a>About Instance Profiles</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteInstanceProfile.html</a>
module Network.AWS.IAM.DeleteInstanceProfile
data DeleteInstanceProfile

-- | <a>DeleteInstanceProfile</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dipInstanceProfileName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteInstanceProfile :: Text -> DeleteInstanceProfile

-- | The name of the instance profile to delete.
dipInstanceProfileName :: Lens' DeleteInstanceProfile Text
data DeleteInstanceProfileResponse

-- | <a>DeleteInstanceProfileResponse</a> constructor.
deleteInstanceProfileResponse :: DeleteInstanceProfileResponse
instance Eq DeleteInstanceProfile
instance Ord DeleteInstanceProfile
instance Read DeleteInstanceProfile
instance Show DeleteInstanceProfile
instance Monoid DeleteInstanceProfile
instance IsString DeleteInstanceProfile
instance Eq DeleteInstanceProfileResponse
instance Ord DeleteInstanceProfileResponse
instance Read DeleteInstanceProfileResponse
instance Show DeleteInstanceProfileResponse
instance Generic DeleteInstanceProfileResponse
instance Datatype D1DeleteInstanceProfileResponse
instance Constructor C1_0DeleteInstanceProfileResponse
instance AWSRequest DeleteInstanceProfile
instance ToHeaders DeleteInstanceProfile
instance ToQuery DeleteInstanceProfile
instance ToPath DeleteInstanceProfile


-- | Deletes the specified inline policy that is embedded in the specified
--   group.
--   
--   A group can also have managed policies attached to it. To detach a
--   managed policy from a group, use <tt>DetachGroupPolicy</tt>. For more
--   information about policies, refer to <a>Managed Policies and Inline
--   Policies</a> in the <i>Using IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteGroupPolicy.html</a>
module Network.AWS.IAM.DeleteGroupPolicy
data DeleteGroupPolicy

-- | <a>DeleteGroupPolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dgp1GroupName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>dgp1PolicyName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteGroupPolicy :: Text -> Text -> DeleteGroupPolicy

-- | The name (friendly name, not ARN) identifying the group that the
--   policy is embedded in.
dgp1GroupName :: Lens' DeleteGroupPolicy Text

-- | The name identifying the policy document to delete.
dgp1PolicyName :: Lens' DeleteGroupPolicy Text
data DeleteGroupPolicyResponse

-- | <a>DeleteGroupPolicyResponse</a> constructor.
deleteGroupPolicyResponse :: DeleteGroupPolicyResponse
instance Eq DeleteGroupPolicy
instance Ord DeleteGroupPolicy
instance Read DeleteGroupPolicy
instance Show DeleteGroupPolicy
instance Eq DeleteGroupPolicyResponse
instance Ord DeleteGroupPolicyResponse
instance Read DeleteGroupPolicyResponse
instance Show DeleteGroupPolicyResponse
instance Generic DeleteGroupPolicyResponse
instance Datatype D1DeleteGroupPolicyResponse
instance Constructor C1_0DeleteGroupPolicyResponse
instance AWSRequest DeleteGroupPolicy
instance ToHeaders DeleteGroupPolicy
instance ToQuery DeleteGroupPolicy
instance ToPath DeleteGroupPolicy


-- | Deletes the specified group. The group must not contain any users or
--   have any attached policies.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteGroup.html</a>
module Network.AWS.IAM.DeleteGroup
data DeleteGroup

-- | <a>DeleteGroup</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dgGroupName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteGroup :: Text -> DeleteGroup

-- | The name of the group to delete.
dgGroupName :: Lens' DeleteGroup Text
data DeleteGroupResponse

-- | <a>DeleteGroupResponse</a> constructor.
deleteGroupResponse :: DeleteGroupResponse
instance Eq DeleteGroup
instance Ord DeleteGroup
instance Read DeleteGroup
instance Show DeleteGroup
instance Monoid DeleteGroup
instance IsString DeleteGroup
instance Eq DeleteGroupResponse
instance Ord DeleteGroupResponse
instance Read DeleteGroupResponse
instance Show DeleteGroupResponse
instance Generic DeleteGroupResponse
instance Datatype D1DeleteGroupResponse
instance Constructor C1_0DeleteGroupResponse
instance AWSRequest DeleteGroup
instance ToHeaders DeleteGroup
instance ToQuery DeleteGroup
instance ToPath DeleteGroup


-- | Deletes the password policy for the AWS account.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteAccountPasswordPolicy.html</a>
module Network.AWS.IAM.DeleteAccountPasswordPolicy
data DeleteAccountPasswordPolicy

-- | <a>DeleteAccountPasswordPolicy</a> constructor.
deleteAccountPasswordPolicy :: DeleteAccountPasswordPolicy
data DeleteAccountPasswordPolicyResponse

-- | <a>DeleteAccountPasswordPolicyResponse</a> constructor.
deleteAccountPasswordPolicyResponse :: DeleteAccountPasswordPolicyResponse
instance Eq DeleteAccountPasswordPolicy
instance Ord DeleteAccountPasswordPolicy
instance Read DeleteAccountPasswordPolicy
instance Show DeleteAccountPasswordPolicy
instance Generic DeleteAccountPasswordPolicy
instance Eq DeleteAccountPasswordPolicyResponse
instance Ord DeleteAccountPasswordPolicyResponse
instance Read DeleteAccountPasswordPolicyResponse
instance Show DeleteAccountPasswordPolicyResponse
instance Generic DeleteAccountPasswordPolicyResponse
instance Datatype D1DeleteAccountPasswordPolicy
instance Constructor C1_0DeleteAccountPasswordPolicy
instance Datatype D1DeleteAccountPasswordPolicyResponse
instance Constructor C1_0DeleteAccountPasswordPolicyResponse
instance AWSRequest DeleteAccountPasswordPolicy
instance ToHeaders DeleteAccountPasswordPolicy
instance ToQuery DeleteAccountPasswordPolicy
instance ToPath DeleteAccountPasswordPolicy


-- | Deletes the specified AWS account alias. For information about using
--   an AWS account alias, see <a>Using an Alias for Your AWS Account
--   ID</a> in the <i>Using IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteAccountAlias.html</a>
module Network.AWS.IAM.DeleteAccountAlias
data DeleteAccountAlias

-- | <a>DeleteAccountAlias</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>daaAccountAlias</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteAccountAlias :: Text -> DeleteAccountAlias

-- | The name of the account alias to delete.
daaAccountAlias :: Lens' DeleteAccountAlias Text
data DeleteAccountAliasResponse

-- | <a>DeleteAccountAliasResponse</a> constructor.
deleteAccountAliasResponse :: DeleteAccountAliasResponse
instance Eq DeleteAccountAlias
instance Ord DeleteAccountAlias
instance Read DeleteAccountAlias
instance Show DeleteAccountAlias
instance Monoid DeleteAccountAlias
instance IsString DeleteAccountAlias
instance Eq DeleteAccountAliasResponse
instance Ord DeleteAccountAliasResponse
instance Read DeleteAccountAliasResponse
instance Show DeleteAccountAliasResponse
instance Generic DeleteAccountAliasResponse
instance Datatype D1DeleteAccountAliasResponse
instance Constructor C1_0DeleteAccountAliasResponse
instance AWSRequest DeleteAccountAlias
instance ToHeaders DeleteAccountAlias
instance ToQuery DeleteAccountAlias
instance ToPath DeleteAccountAlias


-- | Deletes the access key associated with the specified user.
--   
--   If you do not specify a user name, IAM determines the user name
--   implicitly based on the AWS access key ID signing the request. Because
--   this action works for access keys under the AWS account, you can use
--   this action to manage root credentials even if the AWS account has no
--   associated users.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteAccessKey.html</a>
module Network.AWS.IAM.DeleteAccessKey
data DeleteAccessKey

-- | <a>DeleteAccessKey</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dakAccessKeyId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>dakUserName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
deleteAccessKey :: Text -> DeleteAccessKey

-- | The access key ID for the access key ID and secret access key you want
--   to delete.
dakAccessKeyId :: Lens' DeleteAccessKey Text

-- | The name of the user whose key you want to delete.
dakUserName :: Lens' DeleteAccessKey (Maybe Text)
data DeleteAccessKeyResponse

-- | <a>DeleteAccessKeyResponse</a> constructor.
deleteAccessKeyResponse :: DeleteAccessKeyResponse
instance Eq DeleteAccessKey
instance Ord DeleteAccessKey
instance Read DeleteAccessKey
instance Show DeleteAccessKey
instance Eq DeleteAccessKeyResponse
instance Ord DeleteAccessKeyResponse
instance Read DeleteAccessKeyResponse
instance Show DeleteAccessKeyResponse
instance Generic DeleteAccessKeyResponse
instance Datatype D1DeleteAccessKeyResponse
instance Constructor C1_0DeleteAccessKeyResponse
instance AWSRequest DeleteAccessKey
instance ToHeaders DeleteAccessKey
instance ToQuery DeleteAccessKey
instance ToPath DeleteAccessKey


-- | Deactivates the specified MFA device and removes it from association
--   with the user name for which it was originally enabled.
--   
--   For more information about creating and working with virtual MFA
--   devices, go to <a>Using a Virtual MFA Device</a> in the <i>Using
--   IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeactivateMFADevice.html</a>
module Network.AWS.IAM.DeactivateMFADevice
data DeactivateMFADevice

-- | <a>DeactivateMFADevice</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dmfadSerialNumber</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>dmfadUserName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deactivateMFADevice :: Text -> Text -> DeactivateMFADevice

-- | The serial number that uniquely identifies the MFA device. For virtual
--   MFA devices, the serial number is the device ARN.
dmfadSerialNumber :: Lens' DeactivateMFADevice Text

-- | The name of the user whose MFA device you want to deactivate.
dmfadUserName :: Lens' DeactivateMFADevice Text
data DeactivateMFADeviceResponse

-- | <a>DeactivateMFADeviceResponse</a> constructor.
deactivateMFADeviceResponse :: DeactivateMFADeviceResponse
instance Eq DeactivateMFADevice
instance Ord DeactivateMFADevice
instance Read DeactivateMFADevice
instance Show DeactivateMFADevice
instance Eq DeactivateMFADeviceResponse
instance Ord DeactivateMFADeviceResponse
instance Read DeactivateMFADeviceResponse
instance Show DeactivateMFADeviceResponse
instance Generic DeactivateMFADeviceResponse
instance Datatype D1DeactivateMFADeviceResponse
instance Constructor C1_0DeactivateMFADeviceResponse
instance AWSRequest DeactivateMFADevice
instance ToHeaders DeactivateMFADevice
instance ToQuery DeactivateMFADevice
instance ToPath DeactivateMFADevice


-- | Creates a new virtual MFA device for the AWS account. After creating
--   the virtual MFA, use <tt>EnableMFADevice</tt> to attach the MFA device
--   to an IAM user. For more information about creating and working with
--   virtual MFA devices, go to <a>Using a Virtual MFA Device</a> in the
--   <i>Using IAM</i> guide.
--   
--   For information about limits on the number of MFA devices you can
--   create, see <a>Limitations on Entities</a> in the <i>Using IAM</i>
--   guide.
--   
--   The seed information contained in the QR code and the Base32 string
--   should be treated like any other secret access information, such as
--   your AWS access keys or your passwords. After you provision your
--   virtual device, you should ensure that the information is destroyed
--   following secure procedures.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateVirtualMFADevice.html</a>
module Network.AWS.IAM.CreateVirtualMFADevice
data CreateVirtualMFADevice

-- | <a>CreateVirtualMFADevice</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cvmfadPath</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cvmfadVirtualMFADeviceName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createVirtualMFADevice :: Text -> CreateVirtualMFADevice

-- | The path for the virtual MFA device. For more information about paths,
--   see <a>IAM Identifiers</a> in the <i>Using IAM</i> guide.
--   
--   This parameter is optional. If it is not included, it defaults to a
--   slash (/).
cvmfadPath :: Lens' CreateVirtualMFADevice (Maybe Text)

-- | The name of the virtual MFA device. Use with path to uniquely identify
--   a virtual MFA device.
cvmfadVirtualMFADeviceName :: Lens' CreateVirtualMFADevice Text
data CreateVirtualMFADeviceResponse

-- | <a>CreateVirtualMFADeviceResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cvmfadrVirtualMFADevice</a> <tt>::</tt>
--   <a>VirtualMFADevice</a></li>
--   </ul>
createVirtualMFADeviceResponse :: VirtualMFADevice -> CreateVirtualMFADeviceResponse

-- | A newly created virtual MFA device.
cvmfadrVirtualMFADevice :: Lens' CreateVirtualMFADeviceResponse VirtualMFADevice
instance Eq CreateVirtualMFADevice
instance Ord CreateVirtualMFADevice
instance Read CreateVirtualMFADevice
instance Show CreateVirtualMFADevice
instance Eq CreateVirtualMFADeviceResponse
instance Read CreateVirtualMFADeviceResponse
instance Show CreateVirtualMFADeviceResponse
instance FromXML CreateVirtualMFADeviceResponse
instance AWSRequest CreateVirtualMFADevice
instance ToHeaders CreateVirtualMFADevice
instance ToQuery CreateVirtualMFADevice
instance ToPath CreateVirtualMFADevice


-- | Creates a new user for your AWS account.
--   
--   For information about limitations on the number of users you can
--   create, see <a>Limitations on IAM Entities</a> in the <i>Using IAM</i>
--   guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateUser.html</a>
module Network.AWS.IAM.CreateUser
data CreateUser

-- | <a>CreateUser</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cuPath</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cuUserName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createUser :: Text -> CreateUser

-- | The path for the user name. For more information about paths, see
--   <a>IAMIdentifiers</a> in the <i>Using IAM</i> guide.
--   
--   This parameter is optional. If it is not included, it defaults to a
--   slash (/).
cuPath :: Lens' CreateUser (Maybe Text)

-- | The name of the user to create.
cuUserName :: Lens' CreateUser Text
data CreateUserResponse

-- | <a>CreateUserResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>curUser</a> <tt>::</tt> <a>Maybe</a> <a>User</a></li>
--   </ul>
createUserResponse :: CreateUserResponse

-- | Information about the user.
curUser :: Lens' CreateUserResponse (Maybe User)
instance Eq CreateUser
instance Ord CreateUser
instance Read CreateUser
instance Show CreateUser
instance Eq CreateUserResponse
instance Read CreateUserResponse
instance Show CreateUserResponse
instance FromXML CreateUserResponse
instance AWSRequest CreateUser
instance ToHeaders CreateUser
instance ToQuery CreateUser
instance ToPath CreateUser


-- | Creates an IAM entity to describe an identity provider (IdP) that
--   supports SAML 2.0.
--   
--   The SAML provider that you create with this operation can be used as a
--   principal in a role's trust policy to establish a trust relationship
--   between AWS and a SAML identity provider. You can create an IAM role
--   that supports Web-based single sign-on (SSO) to the AWS Management
--   Console or one that supports API access to AWS.
--   
--   When you create the SAML provider, you upload an a SAML metadata
--   document that you get from your IdP and that includes the issuer's
--   name, expiration information, and keys that can be used to validate
--   the SAML authentication response (assertions) that are received from
--   the IdP. You must generate the metadata document using the identity
--   management software that is used as your organization's IdP.
--   
--   This operation requires <a>Signature Version 4</a>. For more
--   information, see <a>Giving Console Access Using SAML</a> and
--   <a>Creating Temporary Security Credentials for SAML Federation</a> in
--   the <i>UsingTemporary Credentials</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateSAMLProvider.html</a>
module Network.AWS.IAM.CreateSAMLProvider
data CreateSAMLProvider

-- | <a>CreateSAMLProvider</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>csamlpName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>csamlpSAMLMetadataDocument</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createSAMLProvider :: Text -> Text -> CreateSAMLProvider

-- | The name of the provider to create.
csamlpName :: Lens' CreateSAMLProvider Text

-- | An XML document generated by an identity provider (IdP) that supports
--   SAML 2.0. The document includes the issuer's name, expiration
--   information, and keys that can be used to validate the SAML
--   authentication response (assertions) that are received from the IdP.
--   You must generate the metadata document using the identity management
--   software that is used as your organization's IdP.
--   
--   For more information, see <a>Creating Temporary Security Credentials
--   for SAMLFederation</a> in the <i>Using Temporary Security
--   Credentials</i> guide.
csamlpSAMLMetadataDocument :: Lens' CreateSAMLProvider Text
data CreateSAMLProviderResponse

-- | <a>CreateSAMLProviderResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>csamlprSAMLProviderArn</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
createSAMLProviderResponse :: CreateSAMLProviderResponse

-- | The Amazon Resource Name (ARN) of the SAML provider.
csamlprSAMLProviderArn :: Lens' CreateSAMLProviderResponse (Maybe Text)
instance Eq CreateSAMLProvider
instance Ord CreateSAMLProvider
instance Read CreateSAMLProvider
instance Show CreateSAMLProvider
instance Eq CreateSAMLProviderResponse
instance Ord CreateSAMLProviderResponse
instance Read CreateSAMLProviderResponse
instance Show CreateSAMLProviderResponse
instance Monoid CreateSAMLProviderResponse
instance FromXML CreateSAMLProviderResponse
instance AWSRequest CreateSAMLProvider
instance ToHeaders CreateSAMLProvider
instance ToQuery CreateSAMLProvider
instance ToPath CreateSAMLProvider


-- | Creates a new role for your AWS account. For more information about
--   roles, go to <a>Working with Roles</a>. For information about
--   limitations on role names and the number of roles you can create, go
--   to <a>Limitations on IAM Entities</a> in the <i>Using IAM</i> guide.
--   
--   The policy in the following example grants permission to an EC2
--   instance to assume the role.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html</a>
module Network.AWS.IAM.CreateRole
data CreateRole

-- | <a>CreateRole</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>crAssumeRolePolicyDocument</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>crPath</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>crRoleName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createRole :: Text -> Text -> CreateRole

-- | The policy that grants an entity permission to assume the role.
crAssumeRolePolicyDocument :: Lens' CreateRole Text

-- | The path to the role. For more information about paths, see <a>IAM
--   Identifiers</a> in the <i>Using IAM</i> guide.
--   
--   This parameter is optional. If it is not included, it defaults to a
--   slash (/).
crPath :: Lens' CreateRole (Maybe Text)

-- | The name of the role to create.
crRoleName :: Lens' CreateRole Text
data CreateRoleResponse

-- | <a>CreateRoleResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>crrRole</a> <tt>::</tt> <a>Role</a></li>
--   </ul>
createRoleResponse :: Role -> CreateRoleResponse

-- | Information about the role.
crrRole :: Lens' CreateRoleResponse Role
instance Eq CreateRole
instance Ord CreateRole
instance Read CreateRole
instance Show CreateRole
instance Eq CreateRoleResponse
instance Read CreateRoleResponse
instance Show CreateRoleResponse
instance FromXML CreateRoleResponse
instance AWSRequest CreateRole
instance ToHeaders CreateRole
instance ToQuery CreateRole
instance ToPath CreateRole


-- | Creates a new version of the specified managed policy. To update a
--   managed policy, you create a new policy version. A managed policy can
--   have up to five versions. If the policy has five versions, you must
--   delete an existing version using <tt>DeletePolicyVersion</tt> before
--   you create a new version.
--   
--   Optionally, you can set the new version as the policy's default
--   version. The default version is the operative version; that is, the
--   version that is in effect for the IAM users, groups, and roles that
--   the policy is attached to.
--   
--   For more information about managed policy versions, see <a>Versioning
--   forManaged Policies</a> in the <i>Using IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreatePolicyVersion.html</a>
module Network.AWS.IAM.CreatePolicyVersion
data CreatePolicyVersion

-- | <a>CreatePolicyVersion</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cpvPolicyArn</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cpvPolicyDocument</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cpvSetAsDefault</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   </ul>
createPolicyVersion :: Text -> Text -> CreatePolicyVersion
cpvPolicyArn :: Lens' CreatePolicyVersion Text

-- | The policy document.
cpvPolicyDocument :: Lens' CreatePolicyVersion Text

-- | Specifies whether to set this version as the policy's default version.
--   
--   When this parameter is <tt>true</tt>, the new policy version becomes
--   the operative version; that is, the version that is in effect for the
--   IAM users, groups, and roles that the policy is attached to.
--   
--   For more information about managed policy versions, see <a>Versioning
--   forManaged Policies</a> in the <i>Using IAM</i> guide.
cpvSetAsDefault :: Lens' CreatePolicyVersion (Maybe Bool)
data CreatePolicyVersionResponse

-- | <a>CreatePolicyVersionResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cpvrPolicyVersion</a> <tt>::</tt> <a>Maybe</a>
--   <a>PolicyVersion</a></li>
--   </ul>
createPolicyVersionResponse :: CreatePolicyVersionResponse

-- | Information about the policy version.
cpvrPolicyVersion :: Lens' CreatePolicyVersionResponse (Maybe PolicyVersion)
instance Eq CreatePolicyVersion
instance Ord CreatePolicyVersion
instance Read CreatePolicyVersion
instance Show CreatePolicyVersion
instance Eq CreatePolicyVersionResponse
instance Read CreatePolicyVersionResponse
instance Show CreatePolicyVersionResponse
instance FromXML CreatePolicyVersionResponse
instance AWSRequest CreatePolicyVersion
instance ToHeaders CreatePolicyVersion
instance ToQuery CreatePolicyVersion
instance ToPath CreatePolicyVersion


-- | Creates a new managed policy for your AWS account.
--   
--   This operation creates a policy version with a version identifier of
--   <tt>v1</tt> and sets v1 as the policy's default version. For more
--   information about policy versions, see <a>Versioning for Managed
--   Policies</a> in the <i>Using IAM</i> guide.
--   
--   For more information about managed policies in general, refer to
--   <a>ManagedPolicies and Inline Policies</a> in the <i>Using IAM</i>
--   guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreatePolicy.html</a>
module Network.AWS.IAM.CreatePolicy
data CreatePolicy

-- | <a>CreatePolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cpDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cpPath</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cpPolicyDocument</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cpPolicyName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createPolicy :: Text -> Text -> CreatePolicy

-- | A friendly description of the policy.
--   
--   Typically used to store information about the permissions defined in
--   the policy. For example, "Grants access to production DynamoDB
--   tables."
--   
--   The policy description is immutable. After a value is assigned, it
--   cannot be changed.
cpDescription :: Lens' CreatePolicy (Maybe Text)

-- | The path for the policy.
--   
--   For more information about paths, see <a>IAM Identifiers</a> in the
--   <i>Using IAM</i> guide.
--   
--   This parameter is optional. If it is not included, it defaults to a
--   slash (/).
cpPath :: Lens' CreatePolicy (Maybe Text)

-- | The policy document.
cpPolicyDocument :: Lens' CreatePolicy Text

-- | The name of the policy document.
cpPolicyName :: Lens' CreatePolicy Text
data CreatePolicyResponse

-- | <a>CreatePolicyResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cprPolicy</a> <tt>::</tt> <a>Maybe</a> <a>Policy</a></li>
--   </ul>
createPolicyResponse :: CreatePolicyResponse

-- | Information about the policy.
cprPolicy :: Lens' CreatePolicyResponse (Maybe Policy)
instance Eq CreatePolicy
instance Ord CreatePolicy
instance Read CreatePolicy
instance Show CreatePolicy
instance Eq CreatePolicyResponse
instance Read CreatePolicyResponse
instance Show CreatePolicyResponse
instance FromXML CreatePolicyResponse
instance AWSRequest CreatePolicy
instance ToHeaders CreatePolicy
instance ToQuery CreatePolicy
instance ToPath CreatePolicy


-- | Creates an IAM entity to describe an identity provider (IdP) that
--   supports <a>OpenID Connect (OIDC)</a>.
--   
--   The OIDC provider that you create with this operation can be used as a
--   principal in a role's trust policy to establish a trust relationship
--   between AWS and the OIDC provider.
--   
--   When you create the IAM OIDC provider, you specify the URL of the OIDC
--   identity provider (IdP) to trust, a list of client IDs (also known as
--   audiences) that identify the application or applications that are
--   allowed to authenticate using the OIDC provider, and a list of
--   thumbprints of the server certificate(s) that the IdP uses. You get
--   all of this information from the OIDC IdP that you want to use for
--   access to AWS.
--   
--   Because trust for the OIDC provider is ultimately derived from the IAM
--   provider that this action creates, it is a best practice to limit
--   access to the <a>CreateOpenIDConnectProvider</a> action to
--   highly-privileged users.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateOpenIDConnectProvider.html</a>
module Network.AWS.IAM.CreateOpenIDConnectProvider
data CreateOpenIDConnectProvider

-- | <a>CreateOpenIDConnectProvider</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>coidcpClientIDList</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>coidcpThumbprintList</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>coidcpUrl</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createOpenIDConnectProvider :: Text -> CreateOpenIDConnectProvider

-- | A list of client IDs (also known as audiences). When a mobile or web
--   app registers with an OpenID Connect provider, they establish a value
--   that identifies the application. (This is the value that's sent as the
--   <tt>client_id</tt> parameter on OAuth requests.)
--   
--   You can register multiple client IDs with the same provider. For
--   example, you might have multiple applications that use the same OIDC
--   provider. You cannot register more than 100 client IDs with a single
--   IAM OIDC provider.
--   
--   There is no defined format for a client ID. The
--   <tt>CreateOpenIDConnectProviderRequest</tt> action accepts client IDs
--   up to 255 characters long.
coidcpClientIDList :: Lens' CreateOpenIDConnectProvider [Text]

-- | A list of server certificate thumbprints for the OpenID Connect (OIDC)
--   identity provider's server certificate(s). Typically this list
--   includes only one entry. However, IAM lets you have up to five
--   thumbprints for an OIDC provider. This lets you maintain multiple
--   thumbprints if the identity provider is rotating certificates.
--   
--   The server certificate thumbprint is the hex-encoded SHA-1 hash value
--   of the X.509 certificate used by the domain where the OpenID Connect
--   provider makes its keys available. It is always a 40-character string.
--   
--   You must provide at least one thumbprint when creating an IAM OIDC
--   provider. For example, if the OIDC provider is 'server.example.com'
--   and the provider stores its keys at
--   "<a>https://keys.server.example.com/openid-connect"</a>, the
--   thumbprint string would be the hex-encoded SHA-1 hash value of the
--   certificate used by <a>https://keys.server.example.com</a>.
--   
--   For more information about obtaining the OIDC provider's thumbprint,
--   see <a>Obtaining the Thumbprint for an OpenID Connect Provider</a> in
--   the <i>Using IAM</i> guide.
coidcpThumbprintList :: Lens' CreateOpenIDConnectProvider [Text]

-- | The URL of the identity provider. The URL must begin with
--   "<a>https://"</a> and should correspond to the <tt>iss</tt> claim in
--   the provider's OpenID Connect ID tokens. Per the OIDC standard, path
--   components are allowed but query parameters are not. Typically the URL
--   consists of only a host name, like "<a>https://server.example.org"</a>
--   or "<a>https://example.com"</a>.
--   
--   You cannot register the same provider multiple times in a single AWS
--   account. If you try to submit a URL that has already been used for an
--   OpenID Connect provider in the AWS account, you will get an error.
coidcpUrl :: Lens' CreateOpenIDConnectProvider Text
data CreateOpenIDConnectProviderResponse

-- | <a>CreateOpenIDConnectProviderResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>coidcprOpenIDConnectProviderArn</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
createOpenIDConnectProviderResponse :: CreateOpenIDConnectProviderResponse

-- | The Amazon Resource Name (ARN) of the IAM OpenID Connect provider that
--   was created. For more information, see
--   <a>OpenIDConnectProviderListEntry</a>.
coidcprOpenIDConnectProviderArn :: Lens' CreateOpenIDConnectProviderResponse (Maybe Text)
instance Eq CreateOpenIDConnectProvider
instance Ord CreateOpenIDConnectProvider
instance Read CreateOpenIDConnectProvider
instance Show CreateOpenIDConnectProvider
instance Eq CreateOpenIDConnectProviderResponse
instance Ord CreateOpenIDConnectProviderResponse
instance Read CreateOpenIDConnectProviderResponse
instance Show CreateOpenIDConnectProviderResponse
instance Monoid CreateOpenIDConnectProviderResponse
instance FromXML CreateOpenIDConnectProviderResponse
instance AWSRequest CreateOpenIDConnectProvider
instance ToHeaders CreateOpenIDConnectProvider
instance ToQuery CreateOpenIDConnectProvider
instance ToPath CreateOpenIDConnectProvider


-- | Creates a password for the specified user, giving the user the ability
--   to access AWS services through the AWS Management Console. For more
--   information about managing passwords, see <a>Managing Passwords</a> in
--   the <i>Using IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateLoginProfile.html</a>
module Network.AWS.IAM.CreateLoginProfile
data CreateLoginProfile

-- | <a>CreateLoginProfile</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>clpPassword</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>clpPasswordResetRequired</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>clpUserName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createLoginProfile :: Text -> Text -> CreateLoginProfile

-- | The new password for the user.
clpPassword :: Lens' CreateLoginProfile Text

-- | Specifies whether the user is required to set a new password on next
--   sign-in.
clpPasswordResetRequired :: Lens' CreateLoginProfile (Maybe Bool)

-- | The name of the user to create a password for.
clpUserName :: Lens' CreateLoginProfile Text
data CreateLoginProfileResponse

-- | <a>CreateLoginProfileResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>clprLoginProfile</a> <tt>::</tt> <a>LoginProfile</a></li>
--   </ul>
createLoginProfileResponse :: LoginProfile -> CreateLoginProfileResponse

-- | The user name and password create date.
clprLoginProfile :: Lens' CreateLoginProfileResponse LoginProfile
instance Eq CreateLoginProfile
instance Ord CreateLoginProfile
instance Read CreateLoginProfile
instance Show CreateLoginProfile
instance Eq CreateLoginProfileResponse
instance Read CreateLoginProfileResponse
instance Show CreateLoginProfileResponse
instance FromXML CreateLoginProfileResponse
instance AWSRequest CreateLoginProfile
instance ToHeaders CreateLoginProfile
instance ToQuery CreateLoginProfile
instance ToPath CreateLoginProfile


-- | Creates a new instance profile. For information about instance
--   profiles, go to <a>About Instance Profiles</a>.
--   
--   For information about the number of instance profiles you can create,
--   see <a>Limitations on IAM Entities</a> in the <i>Using IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateInstanceProfile.html</a>
module Network.AWS.IAM.CreateInstanceProfile
data CreateInstanceProfile

-- | <a>CreateInstanceProfile</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cipInstanceProfileName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cipPath</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
createInstanceProfile :: Text -> CreateInstanceProfile

-- | The name of the instance profile to create.
cipInstanceProfileName :: Lens' CreateInstanceProfile Text

-- | The path to the instance profile. For more information about paths,
--   see <a>IAMIdentifiers</a> in the <i>Using IAM</i> guide.
--   
--   This parameter is optional. If it is not included, it defaults to a
--   slash (/).
cipPath :: Lens' CreateInstanceProfile (Maybe Text)
data CreateInstanceProfileResponse

-- | <a>CreateInstanceProfileResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ciprInstanceProfile</a> <tt>::</tt> <a>InstanceProfile</a></li>
--   </ul>
createInstanceProfileResponse :: InstanceProfile -> CreateInstanceProfileResponse

-- | Information about the instance profile.
ciprInstanceProfile :: Lens' CreateInstanceProfileResponse InstanceProfile
instance Eq CreateInstanceProfile
instance Ord CreateInstanceProfile
instance Read CreateInstanceProfile
instance Show CreateInstanceProfile
instance Eq CreateInstanceProfileResponse
instance Read CreateInstanceProfileResponse
instance Show CreateInstanceProfileResponse
instance FromXML CreateInstanceProfileResponse
instance AWSRequest CreateInstanceProfile
instance ToHeaders CreateInstanceProfile
instance ToQuery CreateInstanceProfile
instance ToPath CreateInstanceProfile


-- | Creates a new group.
--   
--   For information about the number of groups you can create, see
--   <a>Limitationson IAM Entities</a> in the <i>Using IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateGroup.html</a>
module Network.AWS.IAM.CreateGroup
data CreateGroup

-- | <a>CreateGroup</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cgGroupName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cgPath</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
createGroup :: Text -> CreateGroup

-- | The name of the group to create. Do not include the path in this
--   value.
cgGroupName :: Lens' CreateGroup Text

-- | The path to the group. For more information about paths, see <a>IAM
--   Identifiers</a> in the <i>Using IAM</i> guide.
--   
--   This parameter is optional. If it is not included, it defaults to a
--   slash (/).
cgPath :: Lens' CreateGroup (Maybe Text)
data CreateGroupResponse

-- | <a>CreateGroupResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cgrGroup</a> <tt>::</tt> <a>Group</a></li>
--   </ul>
createGroupResponse :: Group -> CreateGroupResponse

-- | Information about the group.
cgrGroup :: Lens' CreateGroupResponse Group
instance Eq CreateGroup
instance Ord CreateGroup
instance Read CreateGroup
instance Show CreateGroup
instance Eq CreateGroupResponse
instance Read CreateGroupResponse
instance Show CreateGroupResponse
instance FromXML CreateGroupResponse
instance AWSRequest CreateGroup
instance ToHeaders CreateGroup
instance ToQuery CreateGroup
instance ToPath CreateGroup


-- | Creates an alias for your AWS account. For information about using an
--   AWS account alias, see <a>Using an Alias for Your AWS Account ID</a>
--   in the <i>Using IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateAccountAlias.html</a>
module Network.AWS.IAM.CreateAccountAlias
data CreateAccountAlias

-- | <a>CreateAccountAlias</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>caaAccountAlias</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createAccountAlias :: Text -> CreateAccountAlias

-- | The account alias to create.
caaAccountAlias :: Lens' CreateAccountAlias Text
data CreateAccountAliasResponse

-- | <a>CreateAccountAliasResponse</a> constructor.
createAccountAliasResponse :: CreateAccountAliasResponse
instance Eq CreateAccountAlias
instance Ord CreateAccountAlias
instance Read CreateAccountAlias
instance Show CreateAccountAlias
instance Monoid CreateAccountAlias
instance IsString CreateAccountAlias
instance Eq CreateAccountAliasResponse
instance Ord CreateAccountAliasResponse
instance Read CreateAccountAliasResponse
instance Show CreateAccountAliasResponse
instance Generic CreateAccountAliasResponse
instance Datatype D1CreateAccountAliasResponse
instance Constructor C1_0CreateAccountAliasResponse
instance AWSRequest CreateAccountAlias
instance ToHeaders CreateAccountAlias
instance ToQuery CreateAccountAlias
instance ToPath CreateAccountAlias


-- | Creates a new AWS secret access key and corresponding AWS access key
--   ID for the specified user. The default status for new keys is
--   <a>Active</a>.
--   
--   If you do not specify a user name, IAM determines the user name
--   implicitly based on the AWS access key ID signing the request. Because
--   this action works for access keys under the AWS account, you can use
--   this action to manage root credentials even if the AWS account has no
--   associated users.
--   
--   For information about limits on the number of keys you can create, see
--   <a>Limitations on IAM Entities</a> in the <i>Using IAM</i> guide.
--   
--   To ensure the security of your AWS account, the secret access key is
--   accessible only during key and user creation. You must save the key
--   (for example, in a text file) if you want to be able to access it
--   again. If a secret key is lost, you can delete the access keys for the
--   associated user and then create new keys.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateAccessKey.html</a>
module Network.AWS.IAM.CreateAccessKey
data CreateAccessKey

-- | <a>CreateAccessKey</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cakUserName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
createAccessKey :: CreateAccessKey

-- | The user name that the new key will belong to.
cakUserName :: Lens' CreateAccessKey (Maybe Text)
data CreateAccessKeyResponse

-- | <a>CreateAccessKeyResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cakrAccessKey</a> <tt>::</tt> <a>AccessKey</a></li>
--   </ul>
createAccessKeyResponse :: AccessKey -> CreateAccessKeyResponse

-- | Information about the access key.
cakrAccessKey :: Lens' CreateAccessKeyResponse AccessKey
instance Eq CreateAccessKey
instance Ord CreateAccessKey
instance Read CreateAccessKey
instance Show CreateAccessKey
instance Monoid CreateAccessKey
instance Eq CreateAccessKeyResponse
instance Read CreateAccessKeyResponse
instance Show CreateAccessKeyResponse
instance FromXML CreateAccessKeyResponse
instance AWSRequest CreateAccessKey
instance ToHeaders CreateAccessKey
instance ToQuery CreateAccessKey
instance ToPath CreateAccessKey


-- | Changes the password of the IAM user who is calling this action. The
--   root account password is not affected by this action.
--   
--   To change the password for a different user, see
--   <tt>UpdateLoginProfile</tt>. For more information about modifying
--   passwords, see <a>Managing Passwords</a> in the <i>Using IAM</i>
--   guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_ChangePassword.html</a>
module Network.AWS.IAM.ChangePassword
data ChangePassword

-- | <a>ChangePassword</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cpNewPassword</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cpOldPassword</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
changePassword :: Text -> Text -> ChangePassword

-- | The new password. The new password must conform to the AWS account's
--   password policy, if one exists.
cpNewPassword :: Lens' ChangePassword Text

-- | The IAM user's current password.
cpOldPassword :: Lens' ChangePassword Text
data ChangePasswordResponse

-- | <a>ChangePasswordResponse</a> constructor.
changePasswordResponse :: ChangePasswordResponse
instance Eq ChangePassword
instance Ord ChangePassword
instance Read ChangePassword
instance Show ChangePassword
instance Eq ChangePasswordResponse
instance Ord ChangePasswordResponse
instance Read ChangePasswordResponse
instance Show ChangePasswordResponse
instance Generic ChangePasswordResponse
instance Datatype D1ChangePasswordResponse
instance Constructor C1_0ChangePasswordResponse
instance AWSRequest ChangePassword
instance ToHeaders ChangePassword
instance ToQuery ChangePassword
instance ToPath ChangePassword


-- | Attaches the specified managed policy to the specified user.
--   
--   You use this API to attach a managed policy to a user. To embed an
--   inline policy in a user, use <tt>PutUserPolicy</tt>.
--   
--   For more information about policies, refer to <a>Managed Policies and
--   InlinePolicies</a> in the <i>Using IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachUserPolicy.html</a>
module Network.AWS.IAM.AttachUserPolicy
data AttachUserPolicy

-- | <a>AttachUserPolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>aupPolicyArn</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>aupUserName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
attachUserPolicy :: Text -> Text -> AttachUserPolicy
aupPolicyArn :: Lens' AttachUserPolicy Text

-- | The name (friendly name, not ARN) of the user to attach the policy to.
aupUserName :: Lens' AttachUserPolicy Text
data AttachUserPolicyResponse

-- | <a>AttachUserPolicyResponse</a> constructor.
attachUserPolicyResponse :: AttachUserPolicyResponse
instance Eq AttachUserPolicy
instance Ord AttachUserPolicy
instance Read AttachUserPolicy
instance Show AttachUserPolicy
instance Eq AttachUserPolicyResponse
instance Ord AttachUserPolicyResponse
instance Read AttachUserPolicyResponse
instance Show AttachUserPolicyResponse
instance Generic AttachUserPolicyResponse
instance Datatype D1AttachUserPolicyResponse
instance Constructor C1_0AttachUserPolicyResponse
instance AWSRequest AttachUserPolicy
instance ToHeaders AttachUserPolicy
instance ToQuery AttachUserPolicy
instance ToPath AttachUserPolicy


-- | Attaches the specified managed policy to the specified role.
--   
--   When you attach a managed policy to a role, the managed policy is used
--   as the role's access (permissions) policy. You cannot use a managed
--   policy as the role's trust policy. The role's trust policy is created
--   at the same time as the role, using <tt>CreateRole</tt>. You can
--   update a role's trust policy using <tt>UpdateAssumeRolePolicy</tt>.
--   
--   Use this API to attach a managed policy to a role. To embed an inline
--   policy in a role, use <tt>PutRolePolicy</tt>. For more information
--   about policies, refer to <a>Managed Policies and Inline Policies</a>
--   in the <i>Using IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachRolePolicy.html</a>
module Network.AWS.IAM.AttachRolePolicy
data AttachRolePolicy

-- | <a>AttachRolePolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>arpPolicyArn</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>arpRoleName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
attachRolePolicy :: Text -> Text -> AttachRolePolicy
arpPolicyArn :: Lens' AttachRolePolicy Text

-- | The name (friendly name, not ARN) of the role to attach the policy to.
arpRoleName :: Lens' AttachRolePolicy Text
data AttachRolePolicyResponse

-- | <a>AttachRolePolicyResponse</a> constructor.
attachRolePolicyResponse :: AttachRolePolicyResponse
instance Eq AttachRolePolicy
instance Ord AttachRolePolicy
instance Read AttachRolePolicy
instance Show AttachRolePolicy
instance Eq AttachRolePolicyResponse
instance Ord AttachRolePolicyResponse
instance Read AttachRolePolicyResponse
instance Show AttachRolePolicyResponse
instance Generic AttachRolePolicyResponse
instance Datatype D1AttachRolePolicyResponse
instance Constructor C1_0AttachRolePolicyResponse
instance AWSRequest AttachRolePolicy
instance ToHeaders AttachRolePolicy
instance ToQuery AttachRolePolicy
instance ToPath AttachRolePolicy


-- | Attaches the specified managed policy to the specified group.
--   
--   You use this API to attach a managed policy to a group. To embed an
--   inline policy in a group, use <tt>PutGroupPolicy</tt>.
--   
--   For more information about policies, refer to <a>Managed Policies and
--   InlinePolicies</a> in the <i>Using IAM</i> guide.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachGroupPolicy.html</a>
module Network.AWS.IAM.AttachGroupPolicy
data AttachGroupPolicy

-- | <a>AttachGroupPolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>agpGroupName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>agpPolicyArn</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
attachGroupPolicy :: Text -> Text -> AttachGroupPolicy

-- | The name (friendly name, not ARN) of the group to attach the policy
--   to.
agpGroupName :: Lens' AttachGroupPolicy Text
agpPolicyArn :: Lens' AttachGroupPolicy Text
data AttachGroupPolicyResponse

-- | <a>AttachGroupPolicyResponse</a> constructor.
attachGroupPolicyResponse :: AttachGroupPolicyResponse
instance Eq AttachGroupPolicy
instance Ord AttachGroupPolicy
instance Read AttachGroupPolicy
instance Show AttachGroupPolicy
instance Eq AttachGroupPolicyResponse
instance Ord AttachGroupPolicyResponse
instance Read AttachGroupPolicyResponse
instance Show AttachGroupPolicyResponse
instance Generic AttachGroupPolicyResponse
instance Datatype D1AttachGroupPolicyResponse
instance Constructor C1_0AttachGroupPolicyResponse
instance AWSRequest AttachGroupPolicy
instance ToHeaders AttachGroupPolicy
instance ToQuery AttachGroupPolicy
instance ToPath AttachGroupPolicy


-- | Adds the specified user to the specified group.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_AddUserToGroup.html</a>
module Network.AWS.IAM.AddUserToGroup
data AddUserToGroup

-- | <a>AddUserToGroup</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>autgGroupName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>autgUserName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
addUserToGroup :: Text -> Text -> AddUserToGroup

-- | The name of the group to update.
autgGroupName :: Lens' AddUserToGroup Text

-- | The name of the user to add.
autgUserName :: Lens' AddUserToGroup Text
data AddUserToGroupResponse

-- | <a>AddUserToGroupResponse</a> constructor.
addUserToGroupResponse :: AddUserToGroupResponse
instance Eq AddUserToGroup
instance Ord AddUserToGroup
instance Read AddUserToGroup
instance Show AddUserToGroup
instance Eq AddUserToGroupResponse
instance Ord AddUserToGroupResponse
instance Read AddUserToGroupResponse
instance Show AddUserToGroupResponse
instance Generic AddUserToGroupResponse
instance Datatype D1AddUserToGroupResponse
instance Constructor C1_0AddUserToGroupResponse
instance AWSRequest AddUserToGroup
instance ToHeaders AddUserToGroup
instance ToQuery AddUserToGroup
instance ToPath AddUserToGroup


-- | Adds the specified role to the specified instance profile. For more
--   information about roles, go to <a>Working with Roles</a>. For more
--   information about instance profiles, go to <a>About Instance
--   Profiles</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_AddRoleToInstanceProfile.html</a>
module Network.AWS.IAM.AddRoleToInstanceProfile
data AddRoleToInstanceProfile

-- | <a>AddRoleToInstanceProfile</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>artipInstanceProfileName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>artipRoleName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
addRoleToInstanceProfile :: Text -> Text -> AddRoleToInstanceProfile

-- | The name of the instance profile to update.
artipInstanceProfileName :: Lens' AddRoleToInstanceProfile Text

-- | The name of the role to add.
artipRoleName :: Lens' AddRoleToInstanceProfile Text
data AddRoleToInstanceProfileResponse

-- | <a>AddRoleToInstanceProfileResponse</a> constructor.
addRoleToInstanceProfileResponse :: AddRoleToInstanceProfileResponse
instance Eq AddRoleToInstanceProfile
instance Ord AddRoleToInstanceProfile
instance Read AddRoleToInstanceProfile
instance Show AddRoleToInstanceProfile
instance Eq AddRoleToInstanceProfileResponse
instance Ord AddRoleToInstanceProfileResponse
instance Read AddRoleToInstanceProfileResponse
instance Show AddRoleToInstanceProfileResponse
instance Generic AddRoleToInstanceProfileResponse
instance Datatype D1AddRoleToInstanceProfileResponse
instance Constructor C1_0AddRoleToInstanceProfileResponse
instance AWSRequest AddRoleToInstanceProfile
instance ToHeaders AddRoleToInstanceProfile
instance ToQuery AddRoleToInstanceProfile
instance ToPath AddRoleToInstanceProfile


-- | Adds a new client ID (also known as audience) to the list of client
--   IDs already registered for the specified IAM OpenID Connect provider.
--   
--   This action is idempotent; it does not fail or return an error if you
--   add an existing client ID to the provider.
--   
--   
--   <a>http://docs.aws.amazon.com/IAM/latest/APIReference/API_AddClientIDToOpenIDConnectProvider.html</a>
module Network.AWS.IAM.AddClientIDToOpenIDConnectProvider
data AddClientIDToOpenIDConnectProvider

-- | <a>AddClientIDToOpenIDConnectProvider</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>acidtoidcpClientID</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>acidtoidcpOpenIDConnectProviderArn</a> <tt>::</tt>
--   <a>Text</a></li>
--   </ul>
addClientIDToOpenIDConnectProvider :: Text -> Text -> AddClientIDToOpenIDConnectProvider

-- | The client ID (also known as audience) to add to the IAM OpenID
--   Connect provider.
acidtoidcpClientID :: Lens' AddClientIDToOpenIDConnectProvider Text

-- | The Amazon Resource Name (ARN) of the IAM OpenID Connect (OIDC)
--   provider to add the client ID to. You can get a list of OIDC provider
--   ARNs by using the <tt>ListOpenIDConnectProviders</tt> action.
acidtoidcpOpenIDConnectProviderArn :: Lens' AddClientIDToOpenIDConnectProvider Text
data AddClientIDToOpenIDConnectProviderResponse

-- | <a>AddClientIDToOpenIDConnectProviderResponse</a> constructor.
addClientIDToOpenIDConnectProviderResponse :: AddClientIDToOpenIDConnectProviderResponse
instance Eq AddClientIDToOpenIDConnectProvider
instance Ord AddClientIDToOpenIDConnectProvider
instance Read AddClientIDToOpenIDConnectProvider
instance Show AddClientIDToOpenIDConnectProvider
instance Eq AddClientIDToOpenIDConnectProviderResponse
instance Ord AddClientIDToOpenIDConnectProviderResponse
instance Read AddClientIDToOpenIDConnectProviderResponse
instance Show AddClientIDToOpenIDConnectProviderResponse
instance Generic AddClientIDToOpenIDConnectProviderResponse
instance Datatype D1AddClientIDToOpenIDConnectProviderResponse
instance Constructor C1_0AddClientIDToOpenIDConnectProviderResponse
instance AWSRequest AddClientIDToOpenIDConnectProvider
instance ToHeaders AddClientIDToOpenIDConnectProvider
instance ToQuery AddClientIDToOpenIDConnectProvider
instance ToPath AddClientIDToOpenIDConnectProvider


-- | AWS Identity and Access Management (IAM) enables you to securely
--   control access to AWS services and resources for your users. Using
--   IAM, you can create and manage AWS users and groups and use
--   permissions to allow and deny their access to AWS resources.
module Network.AWS.IAM
