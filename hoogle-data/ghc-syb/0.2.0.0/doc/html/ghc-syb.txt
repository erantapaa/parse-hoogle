-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Data and Typeable instances for the GHC API.
--   
--   Data and Typeable instances for the GHC API.
@package ghc-syb
@version 0.2.0.0


-- | <a>GHC.Syb.Instances</a> provides instances of Data/Typeable for Ghc
--   Api types, using standalone deriving.
--   
--   Most instances are standard; to provide <a>Data</a> instances abstract
--   types, we use one of two schemes:
--   
--   <ul>
--   <li>no traversal: <a>SrcSpan</a>, <a>Module</a>, <a>ModuleName</a>,
--   <a>OccName</a>, <a>Name</a>, <a>FastString</a>, <a>DataCon</a>,
--   <a>Var</a>, <a>TyCon</a>, <a>Class</a></li>
--   </ul>
--   
--   <pre>
--   abstractConstr   n = mkConstr (abstractDataType n) (<a>{abstract:</a>++n++<a>}</a>) [] Prefix
--   abstractDataType n = mkDataType n [abstractConstr n]
--   </pre>
--   
--   <pre>
--   instance Data SrcSpan where
--     -- don't traverse?
--     toConstr _   = abstractConstr <a>SrcSpan</a>
--     gunfold _ _  = error <a>gunfold</a>
--     dataTypeOf _ = mkNoRepType <a>SrcSpan</a>
--   </pre>
--   
--   <ul>
--   <li>abstract traversal: <a>NameSet</a>, <a>Bag</a></li>
--   </ul>
--   
--   <pre>
--   instance Data NameSet where
--     gfoldl k z s = z mkNameSet <tt>k</tt> nameSetToList s -- traverse abstractly
--     toConstr _   = abstractConstr <a>NameSet</a>
--     gunfold _ _  = error <a>gunfold</a>
--     dataTypeOf _ = mkNoRepType <a>NameSet</a>
--   </pre>
--   
--   Please report any issues, either with these abstract instances or with
--   these modules going out of sync with GHC head, to the package
--   maintainer.
module GHC.SYB.Instances
srcSpanTc :: TyCon
moduleTc :: TyCon
moduleNameTc :: TyCon
occNameTc :: TyCon
nameTc :: TyCon
dataConTc :: TyCon
varTc :: TyCon
nameSetTc :: TyCon
tyConTc :: TyCon
classTc :: TyCon
bagTc :: TyCon
instance Typeable1 AnnProvenance
instance (Data a) => Data (AnnProvenance a)
instance Typeable1 AnnDecl
instance (Data a) => Data (AnnDecl a)
instance (Data a, Data b) => Data (HsRecField a b)
instance Typeable2 HsRecField
instance (Data a, Data b) => Data (HsRecFields a b)
instance Typeable2 HsRecFields
instance (Data a, Data b) => Data (HsConDetails a b)
instance Typeable2 HsConDetails
instance (Data a, Data b) => Data (HsValBindsLR a b)
instance Typeable2 HsValBindsLR
instance (Data a, Data b) => Data (HsLocalBindsLR a b)
instance Typeable2 HsLocalBindsLR
instance (Data a, Data b) => Data (StmtLR a b)
instance Typeable2 StmtLR
instance (Data a, Data b) => Data (HsBindLR a b)
instance Typeable2 HsBindLR
instance (Data a) => Data (HsTupArg a)
instance Typeable1 HsTupArg
instance (Data a) => Data (Expr a)
instance Typeable1 Expr
instance (Data a) => Data (Bind a)
instance Typeable1 Bind
instance (Data a) => Data (RuleBndr a)
instance Typeable1 RuleBndr
instance (Data a) => Data (Match a)
instance Typeable1 Match
instance (Data a) => Data (GRHS a)
instance Typeable1 GRHS
instance (Data a) => Data (HsMatchContext a)
instance Typeable1 HsMatchContext
instance (Data a) => Data (HsStmtContext a)
instance Typeable1 HsStmtContext
instance (Data a) => Data (GroupByClause a)
instance Typeable1 GroupByClause
instance (Data a) => Data (IPBind a)
instance Typeable1 IPBind
instance (Data a) => Data (HsIPBinds a)
instance Typeable1 HsIPBinds
instance (Data a) => Data (FixitySig a)
instance Typeable1 FixitySig
instance (Data a) => Data (HsGroup a)
instance Typeable1 HsGroup
instance (Data a) => Data (HsCmdTop a)
instance Typeable1 HsCmdTop
instance (Data a) => Data (HsBracket a)
instance Typeable1 HsBracket
instance (Data a) => Data (ArithSeqInfo a)
instance Typeable1 ArithSeqInfo
instance (Data a) => Data (HsOverLit a)
instance Typeable1 HsOverLit
instance (Data a) => Data (HsQuasiQuote a)
instance Typeable1 HsQuasiQuote
instance (Data a) => Data (HsExpr a)
instance Typeable1 HsExpr
instance (Data a) => Data (GRHSs a)
instance Typeable1 GRHSs
instance (Data a) => Data (Pat a)
instance Typeable1 Pat
instance (Data a) => Data (MatchGroup a)
instance Typeable1 MatchGroup
instance (Data a) => Data (IPName a)
instance Typeable1 IPName
instance (Data a) => Data (ConDeclField a)
instance Typeable1 ConDeclField
instance (Data a) => Data (HsSplice a)
instance Typeable1 HsSplice
instance (Data a) => Data (ResType a)
instance Typeable1 ResType
instance (Data a) => Data (HsTyVarBndr a)
instance Typeable1 HsTyVarBndr
instance (Data a) => Data (ConDecl a)
instance Typeable1 ConDecl
instance (Data a) => Data (HsType a)
instance Typeable1 HsType
instance (Data a) => Data (HsPred a)
instance Typeable1 HsPred
instance (Data a) => Data (InstDecl a)
instance Typeable1 InstDecl
instance (Data a) => Data (DerivDecl a)
instance Typeable1 DerivDecl
instance (Data a) => Data (Sig a)
instance Typeable1 Sig
instance (Data a) => Data (DefaultDecl a)
instance Typeable1 DefaultDecl
instance (Data a) => Data (ForeignDecl a)
instance Typeable1 ForeignDecl
instance (Data a) => Data (WarnDecl a)
instance Typeable1 WarnDecl
instance Data WarningTxt
instance Typeable WarningTxt
instance (Data a) => Data (RuleDecl a)
instance Typeable1 RuleDecl
instance (Data a) => Data (SpliceDecl a)
instance Typeable1 SpliceDecl
instance (Data a) => Data (TyClDecl a)
instance Typeable1 TyClDecl
instance (Data a) => Data (IE a)
instance Typeable1 IE
instance (Data a) => Data (ImportDecl a)
instance Typeable1 ImportDecl
instance (Data a) => Data (HsDecl a)
instance Typeable1 HsDecl
instance (Data a) => Data (HsModule a)
instance Typeable1 HsModule
instance (Data e) => Data (Located e)
instance Typeable1 Located
instance Data DocDecl
instance Typeable DocDecl
instance Data HsDocString
instance Typeable HsDocString
instance Data IsCafCC
instance Typeable IsCafCC
instance Data IsDupdCC
instance Typeable IsDupdCC
instance Data FunctionOrData
instance Typeable FunctionOrData
instance Data CostCentre
instance Typeable CostCentre
instance Data Literal
instance Typeable Literal
instance Data AltCon
instance Typeable AltCon
instance Data Note
instance Typeable Note
instance Data HsLit
instance Typeable HsLit
instance Data Type
instance Typeable Type
instance Data PredType
instance Typeable PredType
instance Data HsWrapper
instance Typeable HsWrapper
instance Data Prag
instance Typeable Prag
instance Data NewOrData
instance Typeable NewOrData
instance Data FamilyFlavour
instance Typeable FamilyFlavour
instance Data Activation
instance Typeable Activation
instance Data CCallTarget
instance Typeable CCallTarget
instance Data CCallConv
instance Typeable CCallConv
instance Data Safety
instance Typeable Safety
instance Data CExportSpec
instance Typeable CExportSpec
instance Data CImportSpec
instance Typeable CImportSpec
instance Data ForeignExport
instance Typeable ForeignExport
instance Data ForeignImport
instance Typeable ForeignImport
instance Data RuleMatchInfo
instance Typeable RuleMatchInfo
instance Data InlinePragma
instance Typeable InlinePragma
instance Data InlineSpec
instance Typeable InlineSpec
instance Data FixityDirection
instance Typeable FixityDirection
instance Data HsArrAppType
instance Typeable HsArrAppType
instance Data Fixity
instance Typeable Fixity
instance Data RecFlag
instance Typeable RecFlag
instance Data OverLitVal
instance Typeable OverLitVal
instance Data Boxity
instance Typeable Boxity
instance Data HsBang
instance Typeable HsBang
instance Data HsExplicitForAll
instance Typeable HsExplicitForAll
instance Typeable FastString
instance Data RdrName
instance Typeable RdrName
instance (Data a) => Data (Bag a)
instance Typeable1 Bag
instance Data Class
instance Typeable Class
instance Data TyCon
instance Typeable TyCon
instance Data NameSet
instance Typeable NameSet
instance Data Var
instance Typeable Var
instance Data DataCon
instance Typeable DataCon
instance Data FastString
instance Data Name
instance Typeable Name
instance Data OccName
instance Typeable OccName
instance Data ModuleName
instance Typeable ModuleName
instance Data Module
instance Typeable Module
instance Data SrcSpan
instance Typeable SrcSpan
