-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Some miscellaneous basic string parsers.
--   
--   Basic string parsers for integer numbers and case-insensitive string
--   parsing. Also an alternative parse function, which throws a monadic
--   error on parse failure.
@package parsec-extra
@version 0.1.0.5

module Text.Parsec.Extra

-- | Parse "end of line": one of "\n", "\r\n", or "\r".
eol :: GenParser Char state ()

-- | A decimal digit.
digit :: Integral a => GenParser Char state a

-- | A natural (i.e. non-negative integer) number, in decimal notation.
natural :: Integral a => GenParser Char state a

-- | An integer number, in decimal notation (possibly prefixed with "-").
integer :: Integral a => GenParser Char state a

-- | Parse the given character, or the same character in another case
--   (upper or lower).
caseInsensitiveChar :: Char -> GenParser Char state Char

-- | Parse the given string, but with any combination of upper and lower
--   case characters.
caseInsensitiveString :: String -> GenParser Char state String

-- | Parsing function. Uses the <a>MonadError</a> class to throw a monadic
--   error when parsing fails. (Useful in a stack of monad transformers
--   from the transformers package
--   <a>http://hackage.haskell.org/package/transformers</a>.)
parseM :: (MonadError m, Error (ErrorType m)) => GenParser t () a -> String -> [t] -> m a
