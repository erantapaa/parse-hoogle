-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Kansas Lava support files for the Papilio FPGA board
--   
@package kansas-lava-papilio
@version 0.3.1

module Hardware.KansasLava.Xilinx.DCM

-- | Interface to the Xilinx Digital Clock Manager module.
--   
--   The DCM definition itself must be created separately in the Xilinx ISE
--   as a <tt>.xaw</tt> file.
--   
--   The following example creates a circuit running at 16 MHz with a
--   native clock signal of 32 MHz.
--   
--   <pre>
--   kleg &lt;- reifyFabric $ do
--       theClk "CLK_16MHZ"
--       fabric
--   mod &lt;- netlistCircuit modName kleg
--   let mod' = dcm "dcm_32_to_16" "CLK_32MHZ" "CLK_16MHZ" mod
--       vhdl = genVHDL mod' ["work.lava.all", "work.all"]
--   return vhdl
--   </pre>
dcm :: Ident -> Ident -> Ident -> Module -> Module

module Hardware.KansasLava.Boards.Papilio.UCF
toUCF :: FilePath -> Maybe String -> KLEG -> IO String

module Hardware.KansasLava.Boards.Papilio
data Model
PapilioOne :: Model
PapilioPro :: Model
class MonadFix fabric => Papilio fabric
board_init :: Papilio fabric => fabric ()
tickTock :: (Papilio fabric, Size w) => Witness w -> Integer -> fabric (Seq Bool)

-- | The clock rate on the Papilio (32MHz), in hertz.
clockRate :: Integer
instance Papilio Fabric

module Language.KansasLava.Signal.Utils
splitByte :: sig ~ Signal c => sig (Unsigned X8) -> (sig (Unsigned X4), sig (Unsigned X4))
debounce :: (Clock c, sig ~ Signal c, Size n) => Witness n -> sig Bool -> (sig Bool, sig Bool, sig Bool)
nary :: (Clock clk, sig ~ Signal clk, Rep a, Size n, Rep n) => sig n -> Matrix n (sig a) -> sig a
divideClk :: (Clock c, sig ~ Signal c, Size ix) => Witness ix -> sig Bool
counter :: (Rep a, Num a, Bounded a, Eq a, Clock c, sig ~ Signal c) => sig Bool -> sig a
rotatorL :: (Clock c, sig ~ Signal c, Size ix, Integral ix) => sig Bool -> Matrix ix (sig Bool)
fromUnsigned :: (sig ~ Signal c, Size ix) => sig (Unsigned ix) -> Matrix ix (sig Bool)
toUnsigned :: (sig ~ Signal c, Size ix) => Matrix ix (sig Bool) -> sig (Unsigned ix)
parity :: (Clock clk, Size n, Rep n, Integral n, Enum n) => Signal clk (Unsigned n) -> Signal clk Bool
whenEnabled :: (Clock clk, Rep a) => Signal clk (Enabled a) -> (Signal clk a -> RTL s clk ()) -> RTL s clk ()

module Hardware.KansasLava.SevenSegment
data Active
ActiveHigh :: Active
ActiveLow :: Active
data SevenSegment clk (active :: Active) n
SevenSegment :: Matrix n (Signal clk Bool) -> Matrix X7 (Signal clk Bool) -> Signal clk Bool -> SevenSegment clk n
ssAnodes :: SevenSegment clk n -> Matrix n (Signal clk Bool)
ssSegments :: SevenSegment clk n -> Matrix X7 (Signal clk Bool)
ssDecimalPoint :: SevenSegment clk n -> Signal clk Bool
encodeHexSS :: Unsigned X4 -> Matrix X7 Bool
showSS :: Matrix X7 Bool -> String
driveSS :: (Clock clk, sig ~ Signal clk, Size n, Rep n, Num n, Integral n) => Matrix n (sig Bool) -> Matrix n (Matrix X7 (sig Bool)) -> SevenSegment clk ActiveLow n
driveSS_ :: (Clock clk, sig ~ Signal clk, Size n, Rep n, Num n, Integral n) => Matrix n (Maybe (Matrix X7 (sig Bool))) -> SevenSegment clk ActiveLow n

module Hardware.KansasLava.PS2
data PS2 clk
PS2 :: Signal clk Bool -> Signal clk Bool -> PS2 clk
ps2Clock :: PS2 clk -> Signal clk Bool
ps2Data :: PS2 clk -> Signal clk Bool
samplePS2 :: Clock clk => PS2 clk -> Signal clk (Enabled Bool)
decodePS2 :: Clock clk => Signal clk (Enabled Bool) -> Signal clk (Enabled U8)
instance Eq PS2State
instance Enum PS2State
instance Bounded PS2State
instance Rep PS2State

module Hardware.KansasLava.VGA
data VGA clk r g b
VGA :: Signal clk (Enabled r) -> Signal clk (Enabled g) -> Signal clk (Enabled b) -> Signal clk Bool -> Signal clk Bool -> VGA clk r g b
vgaR :: VGA clk r g b -> Signal clk (Enabled r)
vgaG :: VGA clk r g b -> Signal clk (Enabled g)
vgaB :: VGA clk r g b -> Signal clk (Enabled b)
vgaVSync :: VGA clk r g b -> Signal clk Bool
vgaHSync :: VGA clk r g b -> Signal clk Bool
data RawVGA clk r g b
RawVGA :: Matrix r (Signal clk Bool) -> Matrix g (Signal clk Bool) -> Matrix b (Signal clk Bool) -> Signal clk Bool -> Signal clk Bool -> RawVGA clk r g b
vgaRawR :: RawVGA clk r g b -> Matrix r (Signal clk Bool)
vgaRawG :: RawVGA clk r g b -> Matrix g (Signal clk Bool)
vgaRawB :: RawVGA clk r g b -> Matrix b (Signal clk Bool)
vgaRawVSync :: RawVGA clk r g b -> Signal clk Bool
vgaRawHSync :: RawVGA clk r g b -> Signal clk Bool
encodeVGA :: (Size r, Size g, Size b) => VGA clk (Unsigned r) (Unsigned g) (Unsigned b) -> RawVGA clk r g b

module Hardware.KansasLava.VGA.Driver
data VGAParams w h
VGAParams :: VGATiming w -> VGATiming h -> VGAParams w h
vgaHorizTiming :: VGAParams w h -> VGATiming w
vgaVertTiming :: VGAParams w h -> VGATiming h
data VGATiming a
VGATiming :: Unsigned a -> Unsigned a -> Unsigned a -> Unsigned a -> VGATiming a
visibleSize :: VGATiming a -> Unsigned a
pre :: VGATiming a -> Unsigned a
syncPulse :: VGATiming a -> Unsigned a
post :: VGATiming a -> Unsigned a
data VGADriverIn clk r g b
VGADriverIn :: Signal clk r -> Signal clk g -> Signal clk b -> VGADriverIn clk r g b
vgaInR :: VGADriverIn clk r g b -> Signal clk r
vgaInG :: VGADriverIn clk r g b -> Signal clk g
vgaInB :: VGADriverIn clk r g b -> Signal clk b
data VGADriverOut clk w h r g b
VGADriverOut :: VGA clk r g b -> Signal clk Bool -> Signal clk Bool -> Signal clk (Enabled (Unsigned w)) -> Signal clk (Enabled (Unsigned h)) -> VGADriverOut clk w h r g b
vgaOut :: VGADriverOut clk w h r g b -> VGA clk r g b
vgaOutClkPhase :: VGADriverOut clk w h r g b -> Signal clk Bool
vgaOutVBlank :: VGADriverOut clk w h r g b -> Signal clk Bool
vgaOutX :: VGADriverOut clk w h r g b -> Signal clk (Enabled (Unsigned w))
vgaOutY :: VGADriverOut clk w h r g b -> Signal clk (Enabled (Unsigned h))
driveVGA :: (Clock clk, Rep n, Eq n, Num n, Bounded n, Rep r, Rep g, Rep b, Size w, Size h) => Witness n -> VGAParams w h -> VGADriverIn clk r g b -> VGADriverOut clk w h r g b

-- | VGA 640*480@60Hz, 25.175 MHz pixel clock
vga640x480at60 :: VGAParams X10 X10

-- | VGA 800x600@72Hz, 50 MHz pixel clock
vga800x600at72 :: VGAParams X11 X10

-- | VGA 800x600@60Hz, 40 MHz pixel clock
vga800x600at60 :: VGAParams X11 X10

module Hardware.KansasLava.Boards.Papilio.LogicStart
data Model
PapilioOne :: Model
PapilioPro :: Model
class Papilio fabric => LogicStart fabric
switches :: LogicStart fabric => fabric (Matrix X8 (Signal CLK Bool))
buttons :: LogicStart fabric => fabric (Buttons CLK)
leds :: LogicStart fabric => Matrix X8 (Signal CLK Bool) -> fabric ()
sseg :: LogicStart fabric => SevenSegment CLK ActiveLow X4 -> fabric ()
vga :: LogicStart fabric => RawVGA CLK X3 X3 X2 -> fabric ()

-- | The clock rate on the Papilio (32MHz), in hertz.
clockRate :: Integer

-- | <a>board_init</a> sets up the use of default clock, which is the
--   native 32MHz on-board clock.
board_init :: Papilio fabric => fabric ()
toUCF :: Model -> KLEG -> IO String
data Active
ActiveHigh :: Active
ActiveLow :: Active
data SevenSegment clk (active :: Active) n
SevenSegment :: Matrix n (Signal clk Bool) -> Matrix X7 (Signal clk Bool) -> Signal clk Bool -> SevenSegment clk n
ssAnodes :: SevenSegment clk n -> Matrix n (Signal clk Bool)
ssSegments :: SevenSegment clk n -> Matrix X7 (Signal clk Bool)
ssDecimalPoint :: SevenSegment clk n -> Signal clk Bool
data Buttons clk
Buttons :: Signal clk Bool -> Signal clk Bool -> Signal clk Bool -> Signal clk Bool -> Signal clk Bool -> Buttons clk
buttonUp :: Buttons clk -> Signal clk Bool
buttonDown :: Buttons clk -> Signal clk Bool
buttonLeft :: Buttons clk -> Signal clk Bool
buttonRight :: Buttons clk -> Signal clk Bool
buttonCenter :: Buttons clk -> Signal clk Bool
data VGA clk r g b
VGA :: Signal clk (Enabled r) -> Signal clk (Enabled g) -> Signal clk (Enabled b) -> Signal clk Bool -> Signal clk Bool -> VGA clk r g b
vgaR :: VGA clk r g b -> Signal clk (Enabled r)
vgaG :: VGA clk r g b -> Signal clk (Enabled g)
vgaB :: VGA clk r g b -> Signal clk (Enabled b)
vgaVSync :: VGA clk r g b -> Signal clk Bool
vgaHSync :: VGA clk r g b -> Signal clk Bool

-- | <a>switchesP</a> gives a patch-level API for the toggle switches.
switchesP :: LogicStart fabric => fabric (Patch () (Matrix X8 (Seq Bool)) () (Matrix X8 ()))

-- | <tt>ledP</tt> gives a patch-level API for the leds.
ledsP :: LogicStart fabric => Patch (Matrix X8 (Seq Bool)) (fabric ()) (Matrix X8 ()) ()
instance LogicStart Fabric

module Hardware.KansasLava.Boards.Papilio.Arcade
data Model
PapilioOne :: Model
PapilioPro :: Model
class Papilio fabric => Arcade fabric
wing_init :: Arcade fabric => fabric ()
resetButton :: Arcade fabric => fabric (Signal CLK Bool)
buttons :: Arcade fabric => fabric (Buttons CLK)
leds :: Arcade fabric => Matrix X4 (Signal CLK Bool) -> fabric ()
vga :: Arcade fabric => RawVGA CLK X4 X4 X4 -> fabric ()
ps2 :: Arcade fabric => fabric (PS2 CLK, PS2 CLK)

-- | The clock rate on the Papilio (32MHz), in hertz.
clockRate :: Integer

-- | <a>board_init</a> sets up the use of default clock, which is the
--   native 32MHz on-board clock.
board_init :: Papilio fabric => fabric ()
toUCF :: Model -> KLEG -> IO String
data Buttons clk
Buttons :: Signal clk Bool -> Signal clk Bool -> Signal clk Bool -> Signal clk Bool -> Buttons clk
buttonUp :: Buttons clk -> Signal clk Bool
buttonDown :: Buttons clk -> Signal clk Bool
buttonLeft :: Buttons clk -> Signal clk Bool
buttonRight :: Buttons clk -> Signal clk Bool
data RawVGA clk r g b
RawVGA :: Matrix r (Signal clk Bool) -> Matrix g (Signal clk Bool) -> Matrix b (Signal clk Bool) -> Signal clk Bool -> Signal clk Bool -> RawVGA clk r g b
vgaRawR :: RawVGA clk r g b -> Matrix r (Signal clk Bool)
vgaRawG :: RawVGA clk r g b -> Matrix g (Signal clk Bool)
vgaRawB :: RawVGA clk r g b -> Matrix b (Signal clk Bool)
vgaRawVSync :: RawVGA clk r g b -> Signal clk Bool
vgaRawHSync :: RawVGA clk r g b -> Signal clk Bool
data PS2 clk
PS2 :: Signal clk Bool -> Signal clk Bool -> PS2 clk
ps2Clock :: PS2 clk -> Signal clk Bool
ps2Data :: PS2 clk -> Signal clk Bool
instance Arcade Fabric
