-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Create and control scsynth processes
--   
--   This library allows to create and control scsynth processes.
--   
--   ChangeLog:
--   <a>https://github.com/kaoskorobase/hsc3-process/blob/master/ChangeLog.md</a>
@package hsc3-process
@version 0.9.0

module Sound.SC3.Server.Process.Options

-- | Used with the <a>verbosity</a> field in <a>ServerOptions</a>.
data Verbosity
Silent :: Verbosity
Quiet :: Verbosity
Normal :: Verbosity
Verbose :: Verbosity
VeryVerbose :: Verbosity
ExtremelyVerbose :: Verbosity

-- | Specify general server options used both in realtime and non-realtime
--   mode.
data ServerOptions
ServerOptions :: FilePath -> Int -> Int -> Int -> Int -> Int -> Int -> Int -> Int -> Int -> Int -> Int -> Bool -> Verbosity -> Maybe [FilePath] -> Maybe FilePath -> ServerOptions

-- | Path to the <tt>scsynth</tt> program
serverProgram :: ServerOptions -> FilePath

-- | Number of allocated control bus channels
numberOfControlBusChannels :: ServerOptions -> Int

-- | Number of allocated audio bus channels
numberOfAudioBusChannels :: ServerOptions -> Int

-- | Number of physical input channels
numberOfInputBusChannels :: ServerOptions -> Int

-- | Number of physical output channels
numberOfOutputBusChannels :: ServerOptions -> Int

-- | Synthesis block size
blockSize :: ServerOptions -> Int

-- | Number of allocated sample buffers
numberOfSampleBuffers :: ServerOptions -> Int

-- | Maximum number of synthesis nodes
maxNumberOfNodes :: ServerOptions -> Int

-- | Maximum number of synth definitions
maxNumberOfSynthDefs :: ServerOptions -> Int

-- | Realtime memory size in bytes
realtimeMemorySize :: ServerOptions -> Int

-- | Number of unit generator connection buffers
numberOfWireBuffers :: ServerOptions -> Int

-- | Number of random number generator seeds
numberOfRandomSeeds :: ServerOptions -> Int

-- | If <a>True</a>, load synth definitions from <i>synthdefs</i> directory
--   on startup
loadSynthDefs :: ServerOptions -> Bool

-- | <a>Verbosity</a> level
verbosity :: ServerOptions -> Verbosity

-- | List of UGen plugin search paths
ugenPluginPath :: ServerOptions -> Maybe [FilePath]

-- | Sandbox path to restrict OSC command filesystem access
restrictedPath :: ServerOptions -> Maybe FilePath

-- | Default server options.
defaultServerOptions :: ServerOptions

-- | Run <tt>scsynth</tt> from a SuperCollider build directory.
--   
--   Since 0.8.0
fromBuildDirectory :: FilePath -> ServerOptions -> ServerOptions

-- | Run <tt>scsynth</tt> from a Linux installation prefix.
--   
--   Since 0.8.0
fromPrefix :: FilePath -> ServerOptions -> ServerOptions

-- | Run <tt>scsynth</tt> from an OSX application bundle.
--   
--   Since 0.8.0
fromApplicationBundle :: FilePath -> ServerOptions -> ServerOptions

-- | Network port.
data NetworkPort
UDPPort :: Int -> NetworkPort
TCPPort :: Int -> NetworkPort

-- | Default UDP port.
defaultUDPPort :: NetworkPort

-- | Default TCP port.
defaultTCPPort :: NetworkPort

-- | Realtime server options, parameterized by the OpenSoundControl
--   <tt>Transport</tt> to be used.
data RTOptions
RTOptions :: NetworkPort -> Bool -> Int -> Maybe String -> Maybe String -> Int -> Int -> Maybe Int -> Maybe Int -> RTOptions

-- | Network port
networkPort :: RTOptions -> NetworkPort

-- | If <a>True</a>, publish scsynth service through Zeroconf
useZeroconf :: RTOptions -> Bool

-- | Max number of supported logins if <a>sessionPassword</a> is set
maxNumberOfLogins :: RTOptions -> Int

-- | Session password Audio device control
sessionPassword :: RTOptions -> Maybe String

-- | Hardware device name (see also <a>jackDeviceName</a>)
hardwareDeviceName :: RTOptions -> Maybe String

-- | Hardware buffer size (no effect with JACK)
hardwareBufferSize :: RTOptions -> Int

-- | Hardware buffer size (no effect with JACK)
hardwareSampleRate :: RTOptions -> Int

-- | Enabled input streams (CoreAudio only)
inputStreamsEnabled :: RTOptions -> Maybe Int

-- | Enabled output streams (CoreAudio only)
outputStreamsEnabled :: RTOptions -> Maybe Int

-- | Create RTOptions with a specific network port.
--   
--   Since 0.8.0
onPort :: NetworkPort -> RTOptions

-- | Create a JACK hardware device name from an optional server name and a
--   client name.
--   
--   Since 0.8.0
jackDeviceName :: Maybe String -> String -> String

-- | Modify options to use a jack device name based on an optional server
--   name and a client name.
--   
--   Since 0.8.0
withJackDeviceName :: Maybe String -> String -> RTOptions -> RTOptions

-- | Default realtime server options.
defaultRTOptions :: RTOptions

-- | Default realtime server options (UDP transport).

-- | <i>Deprecated: Use 'onPort defaultUDPPort' instead</i>
defaultRTOptionsUDP :: RTOptions

-- | Default realtime server options (TCP transport).

-- | <i>Deprecated: Use 'onPort defaultTCPPort' instead</i>
defaultRTOptionsTCP :: RTOptions

-- | Non-realtime server options.
data NRTOptions
NRTOptions :: Maybe FilePath -> FilePath -> Int -> SoundFileFormat -> SampleFormat -> NRTOptions

-- | Path to input sound file (<a>Nothing</a> for no audio input)
inputFilePath :: NRTOptions -> Maybe FilePath

-- | Path to output sound file
outputFilePath :: NRTOptions -> FilePath

-- | Output sound file sample rate
outputSampleRate :: NRTOptions -> Int

-- | Output sound file header format (since 0.8.0)
outputSoundFileFormat :: NRTOptions -> SoundFileFormat

-- | Output sound file sample format
outputSampleFormat :: NRTOptions -> SampleFormat

-- | Default non-realtime server options.
defaultNRTOptions :: NRTOptions
instance Eq Verbosity
instance Read Verbosity
instance Show Verbosity
instance Eq ServerOptions
instance Show ServerOptions
instance Eq NetworkPort
instance Show NetworkPort
instance Eq RTOptions
instance Show RTOptions
instance Eq NRTOptions
instance Show NRTOptions
instance Default NRTOptions
instance Default RTOptions
instance Default NetworkPort
instance Default ServerOptions
instance Default Verbosity
instance Enum Verbosity

module Sound.SC3.Server.Process.CommandLine

-- | Construct the scsynth command line from <a>ServerOptions</a> and
--   <a>RTOptions</a>.
rtCommandLine :: ServerOptions -> RTOptions -> [String]

-- | Construct the scsynth command line from <a>ServerOptions</a> and
--   <a>NRTOptions</a>.
nrtCommandLine :: ServerOptions -> NRTOptions -> Maybe FilePath -> [String]
instance Option SampleFormat
instance Option SoundFileFormat
instance Option NetworkPort
instance Option [FilePath]
instance Option Verbosity
instance Option a => Option (Maybe a)
instance Option Bool
instance Option Int
instance Option String

module Sound.SC3.Server.Process.Make

-- | Render NRT <tt>scsynth</tt> score via <a>rawSystem</a>, returning the
--   process' exit code.
--   
--   Since 0.8.0
renderNRT :: ServerOptions -> NRTOptions -> FilePath -> IO ExitCode

-- | Variant of <a>renderNRT</a> with simple modification-time
--   dependencies. If the output file exists, and is more recent than both
--   the command file and the input audio file, rendering is not performed.
--   It is an error if either the command file or the input audio file, if
--   specified, do not exist.
--   
--   Since 0.8.0
makeNRT :: ServerOptions -> NRTOptions -> FilePath -> IO ExitCode


-- | This module includes utilities for spawning an external scsynth
--   process, either for realtime or non-realtime execution, and for
--   connecting to existing processes.
module Sound.SC3.Server.Process

-- | Handle output of external <tt>scsynth</tt> processes.
data OutputHandler
OutputHandler :: (String -> IO ()) -> (String -> IO ()) -> OutputHandler

-- | Handle one line of normal output
onPutString :: OutputHandler -> String -> IO ()

-- | Handle one line of error output
onPutError :: OutputHandler -> String -> IO ()

-- | Default IO handler, writing to stdout and stderr, respectively.
defaultOutputHandler :: OutputHandler

-- | Network transport wrapper.
data NetworkTransport

-- | Open a transport to a running <tt>scsynth</tt> process determined by
--   <a>networkPort</a>.
withTransport :: ServerOptions -> RTOptions -> Maybe String -> (NetworkTransport -> IO a) -> IO a

-- | Execute a realtime instance of <tt>scsynth</tt> with <a>Transport</a>
--   t.
--   
--   The spawned <tt>scsynth</tt> is sent a <tt>/quit</tt> message after
--   the supplied action returns.
--   
--   GHC Note: in order to call <tt>withSynth</tt> without blocking all the
--   other threads in the system, you must compile the program with
--   <tt>-threaded</tt>.
withSynth :: ServerOptions -> RTOptions -> OutputHandler -> (NetworkTransport -> IO a) -> IO a

-- | Render a NRT score by executing an instance of <tt>scsynth</tt>.
--   
--   Since 0.8.0
runNRT :: ServerOptions -> NRTOptions -> OutputHandler -> FilePath -> IO ()

-- | Execute a non-realtime instance of <tt>scsynth</tt> and pass the
--   process' input handle to <i>Action</i> and return the result.
--   
--   GHC Note: in order to call <tt>withNRT</tt> without blocking all the
--   other threads in the system, you must compile the program with
--   <tt>-threaded</tt>.
--   
--   Since 0.8.0
withNRT :: ServerOptions -> NRTOptions -> OutputHandler -> (Handle -> IO a) -> IO a
instance Default OutputHandler
instance Transport NetworkTransport
