-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Unicode alternatives for common functions and operators
--   
--   This package defines new symbols for a number of functions and
--   operators in the containers package.
--   
--   All symbols are documented with their actual definition and
--   information regarding their Unicode code point. They should be
--   completely interchangeable with their definitions.
@package containers-unicode-symbols
@version 0.3.1.1


module Data.Set.Unicode

-- | (∈) = <a>member</a>
--   
--   U+2208, ELEMENT OF
(∈) :: Ord α => α -> Set α -> Bool

-- | (∋) = <a>flip</a> (∈)
--   
--   U+220B, CONTAINS AS MEMBER
(∋) :: Ord α => Set α -> α -> Bool

-- | (∉) = <a>notMember</a>
--   
--   U+2209, NOT AN ELEMENT OF
(∉) :: Ord α => α -> Set α -> Bool

-- | (∌) = <a>flip</a> (∉)
--   
--   U+220C, DOES NOT CONTAIN AS MEMBER
(∌) :: Ord α => Set α -> α -> Bool

-- | (∅) = <a>empty</a>
--   
--   U+2205, EMPTY SET
(∅) :: Set α

-- | (∪) = <a>union</a>
--   
--   U+222A, UNION
(∪) :: Ord α => Set α -> Set α -> Set α

-- | (∖) = <a>difference</a>
--   
--   U+2216, SET MINUS
(∖) :: Ord α => Set α -> Set α -> Set α

-- | Symmetric difference
--   
--   a ∆ b = (a ∖ b) ∪ (b ∖ a)
--   
--   U+2206, INCREMENT
(∆) :: Ord α => Set α -> Set α -> Set α

-- | (∩) = <a>intersection</a>
--   
--   U+2229, INTERSECTION
(∩) :: Ord α => Set α -> Set α -> Set α

-- | (⊆) = <a>isSubsetOf</a>
--   
--   U+2286, SUBSET OF OR EQUAL TO
(⊆) :: Ord α => Set α -> Set α -> Bool

-- | (⊇) = <a>flip</a> (⊆)
--   
--   U+2287, SUPERSET OF OR EQUAL TO
(⊇) :: Ord α => Set α -> Set α -> Bool

-- | a ⊈ b = (a ≢ b) ∧ (a ⊄ b)
--   
--   U+2288, NEITHER A SUBSET OF NOR EQUAL TO
(⊈) :: Ord α => Set α -> Set α -> Bool

-- | a ⊉ b = (a ≢ b) ∧ (a ⊅ b)
--   
--   U+2289, NEITHER A SUPERSET OF NOR EQUAL TO
(⊉) :: Ord α => Set α -> Set α -> Bool

-- | (⊂) = <a>isProperSubsetOf</a>
--   
--   U+2282, SUBSET OF
(⊂) :: Ord α => Set α -> Set α -> Bool

-- | (⊃) = <a>flip</a> (⊂)
--   
--   U+2283, SUPERSET OF
(⊃) :: Ord α => Set α -> Set α -> Bool

-- | a ⊄ b = <a>not</a> (a ⊂ b)
--   
--   U+2284, NOT A SUBSET OF
(⊄) :: Ord α => Set α -> Set α -> Bool

-- | a ⊅ b = <a>not</a> (a ⊃ b)
--   
--   U+2285, NOT A SUPERSET OF
(⊅) :: Ord α => Set α -> Set α -> Bool


module Data.Sequence.Unicode

-- | (∅) = <a>empty</a>
--   
--   U+2205, EMPTY SET
(∅) :: Seq α

-- | (⊲) = (<a>&lt;|</a>)
--   
--   U+22B2, NORMAL SUBGROUP OF
(⊲) :: α -> Seq α -> Seq α

-- | (⊳) = (<a>|&gt;</a>)
--   
--   U+22B3, CONTAINS AS NORMAL SUBGROUP
(⊳) :: Seq α -> α -> Seq α

-- | (⋈) = (<a>&gt;&lt;</a>)
--   
--   U+22C8, BOWTIE
(⋈) :: Seq α -> Seq α -> Seq α


module Data.IntSet.Unicode

-- | (∈) = <a>member</a>
--   
--   U+2208, ELEMENT OF
(∈) :: Int -> IntSet -> Bool

-- | (∋) = <a>flip</a> (∈)
--   
--   U+220B, CONTAINS AS MEMBER
(∋) :: IntSet -> Int -> Bool

-- | (∉) = <a>notMember</a>
--   
--   U+2209, NOT AN ELEMENT OF
(∉) :: Int -> IntSet -> Bool

-- | (∌) = <a>flip</a> (∉)
--   
--   U+220C, DOES NOT CONTAIN AS MEMBER
(∌) :: IntSet -> Int -> Bool

-- | (∅) = <a>empty</a>
--   
--   U+2205, EMPTY SET
(∅) :: IntSet

-- | (∪) = <a>union</a>
--   
--   U+222A, UNION
(∪) :: IntSet -> IntSet -> IntSet

-- | (∖) = <a>difference</a>
--   
--   U+2216, SET MINUS
(∖) :: IntSet -> IntSet -> IntSet

-- | Symmetric difference
--   
--   a ∆ b = (a ∖ b) ∪ (b ∖ a)
--   
--   U+2206, INCREMENT
(∆) :: IntSet -> IntSet -> IntSet

-- | (∩) = <a>intersection</a>
--   
--   U+2229, INTERSECTION
(∩) :: IntSet -> IntSet -> IntSet

-- | (⊆) = <a>isSubsetOf</a>
--   
--   U+2286, SUBSET OF OR EQUAL TO
(⊆) :: IntSet -> IntSet -> Bool

-- | (⊇) = <a>flip</a> (⊆)
--   
--   U+2287, SUPERSET OF OR EQUAL TO
(⊇) :: IntSet -> IntSet -> Bool

-- | a ⊈ b = (a ≢ b) ∧ (a ⊄ b)
--   
--   U+2288, NEITHER A SUBSET OF NOR EQUAL TO
(⊈) :: IntSet -> IntSet -> Bool

-- | a ⊉ b = (a ≢ b) ∧ (a ⊅ b)
--   
--   U+2289, NEITHER A SUPERSET OF NOR EQUAL TO
(⊉) :: IntSet -> IntSet -> Bool

-- | (⊂) = <a>isProperSubsetOf</a>
--   
--   U+2282, SUBSET OF
(⊂) :: IntSet -> IntSet -> Bool

-- | (⊃) = <a>flip</a> (⊂)
--   
--   U+2283, SUPERSET OF
(⊃) :: IntSet -> IntSet -> Bool

-- | a ⊄ b = <a>not</a> (a ⊂ b)
--   
--   U+2284, NOT A SUBSET OF
(⊄) :: IntSet -> IntSet -> Bool

-- | a ⊅ b = <a>not</a> (a ⊃ b)
--   
--   U+2285, NOT A SUPERSET OF
(⊅) :: IntSet -> IntSet -> Bool


module Data.Map.Strict.Unicode

-- | (∈) = <a>member</a>
--   
--   U+2208, ELEMENT OF
(∈) :: Ord k => k -> Map k α -> Bool

-- | (∋) = <a>flip</a> (∈)
--   
--   U+220B, CONTAINS AS MEMBER
(∋) :: Ord k => Map k α -> k -> Bool

-- | (∉) = <a>notMember</a>
--   
--   U+2209, NOT AN ELEMENT OF
(∉) :: Ord k => k -> Map k α -> Bool

-- | (∌) = <a>flip</a> (∉)
--   
--   U+220C, DOES NOT CONTAIN AS MEMBER
(∌) :: Ord k => Map k α -> k -> Bool

-- | (∅) = <a>empty</a>
--   
--   U+2205, EMPTY SET
(∅) :: Map k α

-- | (∪) = <a>union</a>
--   
--   U+222A, UNION
(∪) :: Ord k => Map k α -> Map k α -> Map k α

-- | (∖) = <a>difference</a>
--   
--   U+2216, SET MINUS
(∖) :: Ord k => Map k α -> Map k β -> Map k α

-- | Symmetric difference
--   
--   a ∆ b = (a ∖ b) ∪ (b ∖ a)
--   
--   U+2206, INCREMENT
(∆) :: Ord k => Map k α -> Map k α -> Map k α

-- | (∩) = <a>intersection</a>
--   
--   U+2229, INTERSECTION
(∩) :: Ord k => Map k α -> Map k β -> Map k α


module Data.Map.Lazy.Unicode

-- | (∈) = <a>member</a>
--   
--   U+2208, ELEMENT OF
(∈) :: Ord k => k -> Map k α -> Bool

-- | (∋) = <a>flip</a> (∈)
--   
--   U+220B, CONTAINS AS MEMBER
(∋) :: Ord k => Map k α -> k -> Bool

-- | (∉) = <a>notMember</a>
--   
--   U+2209, NOT AN ELEMENT OF
(∉) :: Ord k => k -> Map k α -> Bool

-- | (∌) = <a>flip</a> (∉)
--   
--   U+220C, DOES NOT CONTAIN AS MEMBER
(∌) :: Ord k => Map k α -> k -> Bool

-- | (∅) = <a>empty</a>
--   
--   U+2205, EMPTY SET
(∅) :: Map k α

-- | (∪) = <a>union</a>
--   
--   U+222A, UNION
(∪) :: Ord k => Map k α -> Map k α -> Map k α

-- | (∖) = <a>difference</a>
--   
--   U+2216, SET MINUS
(∖) :: Ord k => Map k α -> Map k β -> Map k α

-- | Symmetric difference
--   
--   a ∆ b = (a ∖ b) ∪ (b ∖ a)
--   
--   U+2206, INCREMENT
(∆) :: Ord k => Map k α -> Map k α -> Map k α

-- | (∩) = <a>intersection</a>
--   
--   U+2229, INTERSECTION
(∩) :: Ord k => Map k α -> Map k β -> Map k α


module Data.Map.Unicode


module Data.IntMap.Strict.Unicode

-- | (∈) = <a>member</a>
--   
--   U+2208, ELEMENT OF
(∈) :: Int -> IntMap α -> Bool

-- | (∋) = <a>flip</a> (∈)
--   
--   U+220B, CONTAINS AS MEMBER
(∋) :: IntMap α -> Int -> Bool

-- | (∉) = <a>notMember</a>
--   
--   U+2209, NOT AN ELEMENT OF
(∉) :: Int -> IntMap α -> Bool

-- | (∌) = <a>flip</a> (∉)
--   
--   U+220C, DOES NOT CONTAIN AS MEMBER
(∌) :: IntMap α -> Int -> Bool

-- | (∅) = <a>empty</a>
--   
--   U+2205, EMPTY SET
(∅) :: IntMap α

-- | (∪) = <a>union</a>
--   
--   U+222A, UNION
(∪) :: IntMap α -> IntMap α -> IntMap α

-- | (∖) = <a>difference</a>
--   
--   U+2216, SET MINUS
(∖) :: IntMap α -> IntMap β -> IntMap α

-- | Symmetric difference
--   
--   a ∆ b = (a ∖ b) ∪ (b ∖ a)
--   
--   U+2206, INCREMENT
(∆) :: IntMap α -> IntMap α -> IntMap α

-- | (∩) = <a>intersection</a>
--   
--   U+2229, INTERSECTION
(∩) :: IntMap α -> IntMap β -> IntMap α


module Data.IntMap.Lazy.Unicode

-- | (∈) = <a>member</a>
--   
--   U+2208, ELEMENT OF
(∈) :: Int -> IntMap α -> Bool

-- | (∋) = <a>flip</a> (∈)
--   
--   U+220B, CONTAINS AS MEMBER
(∋) :: IntMap α -> Int -> Bool

-- | (∉) = <a>notMember</a>
--   
--   U+2209, NOT AN ELEMENT OF
(∉) :: Int -> IntMap α -> Bool

-- | (∌) = <a>flip</a> (∉)
--   
--   U+220C, DOES NOT CONTAIN AS MEMBER
(∌) :: IntMap α -> Int -> Bool

-- | (∅) = <a>empty</a>
--   
--   U+2205, EMPTY SET
(∅) :: IntMap α

-- | (∪) = <a>union</a>
--   
--   U+222A, UNION
(∪) :: IntMap α -> IntMap α -> IntMap α

-- | (∖) = <a>difference</a>
--   
--   U+2216, SET MINUS
(∖) :: IntMap α -> IntMap β -> IntMap α

-- | Symmetric difference
--   
--   a ∆ b = (a ∖ b) ∪ (b ∖ a)
--   
--   U+2206, INCREMENT
(∆) :: IntMap α -> IntMap α -> IntMap α

-- | (∩) = <a>intersection</a>
--   
--   U+2229, INTERSECTION
(∩) :: IntMap α -> IntMap β -> IntMap α


module Data.IntMap.Unicode
