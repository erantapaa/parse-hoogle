-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Low level bindings to libffi.
--   
--   Low level bindings to libffi.
@package bindings-libffi
@version 0.3


-- | <a>http://sourceware.org/libffi</a>.
module Bindings.Libffi
c'ffi_prep_cif :: Ptr C'ffi_cif -> C'ffi_abi -> CUInt -> Ptr C'ffi_type -> Ptr (Ptr C'ffi_type) -> IO C'ffi_status
p'ffi_prep_cif :: FunPtr (Ptr C'ffi_cif -> C'ffi_abi -> CUInt -> Ptr C'ffi_type -> Ptr (Ptr C'ffi_type) -> IO C'ffi_status)
c'ffi_call :: Ptr C'ffi_cif -> FunPtr (IO ()) -> Ptr () -> Ptr (Ptr ()) -> IO ()
p'ffi_call :: FunPtr (Ptr C'ffi_cif -> FunPtr (IO ()) -> Ptr () -> Ptr (Ptr ()) -> IO ())
data C'ffi_cif
C'ffi_cif :: C'ffi_cif
type C'ffi_abi = CUInt
type C'ffi_arg = CUInt
type C'ffi_sarg = CInt
type C'ffi_status = CUInt
data C'ffi_type
C'ffi_type :: C'ffi_type
c'FFI_OK :: Num a => a
c'FFI_BAD_TYPEDEF :: Num a => a
c'FFI_BAD_ABI :: Num a => a
c'FFI_FIRST_ABI :: Num a => a
c'FFI_DEFAULT_ABI :: Num a => a
c'FFI_LAST_ABI :: Num a => a
p'ffi_type_void :: Ptr (C'ffi_type)
p'ffi_type_uint8 :: Ptr (C'ffi_type)
p'ffi_type_sint8 :: Ptr (C'ffi_type)
p'ffi_type_uint16 :: Ptr (C'ffi_type)
p'ffi_type_sint16 :: Ptr (C'ffi_type)
p'ffi_type_uint32 :: Ptr (C'ffi_type)
p'ffi_type_sint32 :: Ptr (C'ffi_type)
p'ffi_type_uint64 :: Ptr (C'ffi_type)
p'ffi_type_sint64 :: Ptr (C'ffi_type)
p'ffi_type_float :: Ptr (C'ffi_type)
p'ffi_type_double :: Ptr (C'ffi_type)
p'ffi_type_pointer :: Ptr (C'ffi_type)
instance Eq C'ffi_cif
instance Show C'ffi_cif
instance Storable C'ffi_cif
