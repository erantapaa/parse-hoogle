-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Simple implementation of the generic spine view
--   
--   This package contains the basic representation types for defining
--   generic functions with the spine view. It is currently incomplete with
--   respect to the papers. We hope to rectify that in the future.
--   
--   See the following publications for details.
--   
--   R. Hinze and A. Löh. <a>Scrap Your Boilerplate: Reloaded</a> In
--   Functional and Logic Programming. 2006. pp. 13-29.
--   
--   R. Hinze and A. Löh. <a>Scrap Your Boilerplate: Revolutions</a> In
--   Mathematics and Program Construction. 2006. pp. 180-208.
@package spine
@version 0.1

module Generics.Spine.Base
data Type :: * -> *
Char :: Type Char
Int :: Type Int
Bool :: Type Bool
List :: Type a -> Type [a]
Pair :: Type a -> Type b -> Type (a, b)
data Typed a
(:>) :: Type a -> a -> Typed a
typeOf :: Typed a -> Type a
val :: Typed a -> a
data Constr a
Constr :: a -> String -> Constr a
constr :: Constr a -> a
name :: Constr a -> String
data Spine :: * -> *
Con :: Constr a -> Spine a
(:<>:) :: Spine (a -> b) -> Typed a -> Spine b
type Datatype a = [Signature a]
data Signature :: * -> *
Sig :: Constr a -> Signature a
(:&:) :: Signature (a -> b) -> Type a -> Signature b

module Generics.Spine
