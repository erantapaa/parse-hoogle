-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Scotty backend for the digestive-functors library
--   
--   Scotty backend for the digestive-functors library
@package digestive-functors-scotty
@version 0.2.0.2


-- | Module providing the scotty backend for the digestive-functors library
--   
--   <pre>
--   import Web.Scotty
--   
--   import Text.Digestive
--   import Text.Digestive.Scotty
--   
--   import Control.Applicative ((&lt;$&gt;), (&lt;*&gt;))
--   
--   data FormData = FormData { field1 :: String
--                            , field2 :: Integer
--                            }
--   
--   testForm :: Monad m =&gt; Form String m FormData
--   testForm = FormData
--              &lt;$&gt; "field1" .: string Nothing
--              &lt;*&gt; "field2" .: stringRead "read failed" Nothing
--   
--   main :: IO ()
--   main = scotty 3000 $ do
--       get "/" $ do
--           setHeader "Content-Type" "text/html"
--           raw " &lt;html&gt;&lt;body&gt;&lt;form enctype='multipart/form-data' method='post'&gt; \
--                 \ &lt;input type='text' name='test-form.field1'/&gt; \
--                 \ &lt;input type='text' name='test-form.field2'/&gt; \
--                 \ &lt;input type='submit'/&gt; \
--                 \ &lt;/form&gt;&lt;/body&gt;&lt;/html&gt;"
--   
--       post "/" $ do
--           (view, result) &lt;- runForm "test-form" testForm
--           case result of
--               Just d -&gt; ... Success! `d` contains constructed FormData.
--               _ -&gt; ... Failure! Use `view` variable to access error messages.
--   </pre>
module Text.Digestive.Scotty

-- | Runs a form with the HTTP input provided by Scotty.
runForm :: (Monad m, ScottyError e) => Text -> Form v (ActionT e m) a -> (ActionT e m) (View v, Maybe a)
