-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | (deprecated in favor of 'threads') Simple thread management
--   
--   This package is useful, but deprecated. In new code, please use
--   <a>threads</a> instead.
--   
--   A simple thread management API inspired by the one in <a>chapter 24 of
--   Real World Haskell</a>.
@package threadmanager
@version 0.1.7


-- | Intended to be imported qualified, as in
--   
--   <pre>
--   import qualified Control.Concurrent.ThreadManager as TM
--   </pre>
module Control.Concurrent.ThreadManager
data ThreadManager
data ThreadStatus
Running :: ThreadStatus
Finished :: ThreadStatus
Threw :: SomeException -> ThreadStatus

-- | Make a thread manager.
make :: IO ThreadManager

-- | Make a managed thread. Uses <a>forkIO</a>.
fork :: ThreadManager -> IO () -> IO ThreadId

-- | Make the given number of managed threads.
forkn :: ThreadManager -> Int -> IO () -> IO [ThreadId]

-- | Get the status of a managed thread.
getStatus :: ThreadManager -> ThreadId -> IO (Maybe ThreadStatus)

-- | Block until a specific managed thread terminates.
waitFor :: ThreadManager -> ThreadId -> IO (Maybe ThreadStatus)

-- | Block until all managed threads terminate.
waitForAll :: ThreadManager -> IO ()
instance Show ThreadStatus
instance Eq ThreadManager
