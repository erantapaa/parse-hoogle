-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Library for reading ace assembly files
--   
--   Library for reading ace assembly files
@package bioace
@version 0.0.1


-- | Read ACE format assembly files
--   
--   These are typically output by sequence assembly tools, like CAP3 or
--   Phrap.
--   
--   Documented in the section labelled "ACE FILE FORMAT" at
--   <a>http://bozeman.mbt.washington.edu/consed/distributions/README.14.0.txt</a>
--   
--   Briefly: each field is a line starting with a two letter code, in some
--   cases followed by data lines termintated by a blank line. Here's an
--   brief example how an ACE file looks like:
--   
--   <pre>
--   AS contigs reads
--   CO contig_name bases reads segments compl (CAP3: segments=0)
--   sequence
--   BQ base_qualities
--   AF read1 compl padded_start_consensus (negatives meaning?)
--   AF read2 ..
--   BS segments
--   RD read1 bases info_items info_tags (latter two set to 0 by CAP3)
--   sequence
--   QA read1 qual_start qual_end align_start align_end
--   DS (phred header? left empty by CAP3)
--   RD read2 ...
--   </pre>
--   
--   As far as I know, this is only used for nucleotide sequences.
module Bio.Alignment.Ace

-- | Reading an ACE file.
readACE :: FilePath -> IO [[Assembly]]
writeACE :: FilePath -> [Assembly] -> IO ()
data Assembly
Asm :: (Sequence, Gaps) -> Alignment -> Assembly
contig :: Assembly -> (Sequence, Gaps)
fragments :: Assembly -> Alignment

-- | Test parser p on a list of ACE elements
ptest :: Show a => String -> AceParser a -> [ACE] -> IO ()
reads :: Assembly -> Alignment
instance Show Assembly
instance Eq ACE
instance Show ACE
instance Show Sequence
