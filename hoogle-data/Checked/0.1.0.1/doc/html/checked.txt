-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Bounds-checking integer types.
--   
--   Includes replacements for all of the <a>Data.Int</a> and
--   <a>Data.Word</a> types. No effort has been made towards performance.
@package checked
@version 0.1.0.1


-- | A drop-in replacements for the Data.Word types. Exceptions are thrown
--   whenever an operation would over-flow.
module Data.Word.Checked
data Word
data Word8
data Word16
data Word32
data Word64
instance Bits Word64
instance Bounded Word64
instance Eq Word64
instance Integral Word64
instance Ix Word64
instance Ord Word64
instance PrintfArg Word64
instance Real Word64
instance Storable Word64
instance Bits Word32
instance Bounded Word32
instance Eq Word32
instance Integral Word32
instance Ix Word32
instance Ord Word32
instance PrintfArg Word32
instance Real Word32
instance Storable Word32
instance Bits Word16
instance Bounded Word16
instance Eq Word16
instance Integral Word16
instance Ix Word16
instance Ord Word16
instance PrintfArg Word16
instance Real Word16
instance Storable Word16
instance Bits Word8
instance Bounded Word8
instance Eq Word8
instance Integral Word8
instance Ix Word8
instance Ord Word8
instance PrintfArg Word8
instance Real Word8
instance Storable Word8
instance Bits Word
instance Bounded Word
instance Eq Word
instance Integral Word
instance Ix Word
instance Ord Word
instance PrintfArg Word
instance Real Word
instance Storable Word
instance Enum Word64
instance Num Word64
instance Read Word64
instance Show Word64
instance Typeable Word64
instance Enum Word32
instance Num Word32
instance Read Word32
instance Show Word32
instance Typeable Word32
instance Enum Word16
instance Num Word16
instance Read Word16
instance Show Word16
instance Typeable Word16
instance Enum Word8
instance Num Word8
instance Read Word8
instance Show Word8
instance Typeable Word8
instance Enum Word
instance Num Word
instance Read Word
instance Show Word
instance Typeable Word


-- | A drop-in replacements for the Data.Int types. Exceptions are thrown
--   whenever an operation would over-flow.
module Data.Int.Checked
data Int
data Int8
data Int16
data Int32
data Int64
instance Bits Int64
instance Bounded Int64
instance Eq Int64
instance Integral Int64
instance Ix Int64
instance Ord Int64
instance PrintfArg Int64
instance Real Int64
instance Storable Int64
instance Bits Int32
instance Bounded Int32
instance Eq Int32
instance Integral Int32
instance Ix Int32
instance Ord Int32
instance PrintfArg Int32
instance Real Int32
instance Storable Int32
instance Bits Int16
instance Bounded Int16
instance Eq Int16
instance Integral Int16
instance Ix Int16
instance Ord Int16
instance PrintfArg Int16
instance Real Int16
instance Storable Int16
instance Bits Int8
instance Bounded Int8
instance Eq Int8
instance Integral Int8
instance Ix Int8
instance Ord Int8
instance PrintfArg Int8
instance Real Int8
instance Storable Int8
instance Bits Int
instance Bounded Int
instance Eq Int
instance Integral Int
instance Ix Int
instance Ord Int
instance PrintfArg Int
instance Real Int
instance Storable Int
instance Enum Int64
instance Num Int64
instance Read Int64
instance Show Int64
instance Typeable Int64
instance Enum Int32
instance Num Int32
instance Read Int32
instance Show Int32
instance Typeable Int32
instance Enum Int16
instance Num Int16
instance Read Int16
instance Show Int16
instance Typeable Int16
instance Enum Int8
instance Num Int8
instance Read Int8
instance Show Int8
instance Typeable Int8
instance Enum Int
instance Num Int
instance Read Int
instance Show Int
instance Typeable Int
