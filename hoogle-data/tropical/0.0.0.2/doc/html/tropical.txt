-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A library for tropical mathematics.
--   
@package tropical
@version 0.0.0.2


-- | This is a module for Tropical numbers. If you don't know what those
--   are, read <a>this Wikipedia entry</a>.
--   
--   Tropical numbers form a <a>Semiring</a>. Semirings are like <a>normal
--   rings</a>, but you can't subtract.
--   
--   The Tropical semiring, or 𝕋, is {ℝ ∪ {∞}, ⊕, ⊙}. Those are, in Haskell
--   terms, <a>Real</a>, <a>Infinity</a>, '(.+.)', and '(.*.)',
--   respectively.
--   
--   Tropical addition and multiplication are
--   
--   a ⊕ b = min {a, b}, ∀ a, b ∈ 𝕋
--   
--   a ⊙ b = a + b, ∀ a, b ∈ 𝕋
module Data.Semiring.Tropical

-- | Tropical numbers are like real numbers, except zero is the same thing
--   as Infinity, and you can't subtract.
data Real t => Tropical t

-- | Any tropical number
Tropical :: t -> Tropical t
realValue :: Tropical t -> t

-- | Infinity
Infinity :: Tropical t
(.+.) :: Semiring s => s -> s -> s
(.*.) :: Semiring s => s -> s -> s

-- | Tropical division. Remember, if Infinity is tropical zero, then you
--   can't divide by it!
(./.) :: Real a => TropicalOperator a

-- | Tropical exponentiation - same as classical multiplication. A mildly
--   interesting correlary is that tropical exponentiation is commutative.
--   That is, y .^. x = x .^. y, for x and y tropical.
(.^.) :: Real a => TropicalOperator a

-- | Helper type for binary operators
type Operator a = a -> a -> a

-- | An operator over something tropical
type TropicalOperator a = Operator (Tropical a)
zero :: Semiring s => s
one :: Semiring s => s
instance Real t => Eq (Tropical t)
instance Real t => Ord (Tropical t)
instance (Real t, Show t) => Show (Tropical t)
instance Real a => Semiring (Tropical a)
