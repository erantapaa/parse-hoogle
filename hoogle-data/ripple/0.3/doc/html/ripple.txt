-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Ripple payment system library
--   
--   Interact with Ripple servers, sign transactions, etc.
@package ripple
@version 0.3

module Ripple.Seed

-- | Derive the secret key for the given secret seed and address
getSecret :: RippleAddress -> PrivateKey

module Ripple.Amount
data Amount
Amount :: Rational -> Currency -> Amount
data Currency
XRP :: Currency
Currency :: (Char, Char, Char) -> RippleAddress -> Currency

-- | The raw 160-bit currency specifier, no issuer
newtype CurrencySpecifier
CurrencySpecifier :: (Char, Char, Char) -> CurrencySpecifier
instance Eq Currency
instance Show CurrencySpecifier
instance Eq CurrencySpecifier
instance Eq Amount
instance Binary Amount
instance FromJSON Amount
instance ToJSON Amount
instance Show Amount
instance Binary CurrencySpecifier
instance Binary Currency
instance Show Currency

module Ripple.Path
newtype PathSet
PathSet :: [Path] -> PathSet
newtype Path
Path :: [PathEntry] -> Path
data PathEntry
PathEntry :: Maybe RippleAddress -> Maybe CurrencySpecifier -> Maybe RippleAddress -> PathEntry
account :: PathEntry -> Maybe RippleAddress
toCurrency :: PathEntry -> Maybe CurrencySpecifier
issuer :: PathEntry -> Maybe RippleAddress
instance Show PathEntry
instance Eq PathEntry
instance Show Path
instance Eq Path
instance Show PathSet
instance Eq PathSet
instance Binary PathEntry
instance Binary PathSet

module Ripple.Transaction
newtype Transaction
Transaction :: [Field] -> Transaction
data TransactionType
Payment :: TransactionType
AccountSet :: TransactionType
SetRegularKey :: TransactionType
OfferCreate :: TransactionType
OfferCancel :: TransactionType
Sign :: TransactionType
TrustSet :: TransactionType
OtherTransaction :: Word16 -> TransactionType
data Field
LedgerEntryType :: Word16 -> Field
TransactionType :: TransactionType -> Field
Flags :: Word32 -> Field
SourceTag :: Word32 -> Field
SequenceNumber :: Word32 -> Field
PreviousTransactionLedgerSequence :: Word32 -> Field
LedgerSequence :: Word32 -> Field
LedgerCloseTime :: Word32 -> Field
ParentLedgerCloseTime :: Word32 -> Field
SigningTime :: Word32 -> Field
ExpirationTime :: Word32 -> Field
TransferRate :: Word32 -> Field
WalletSize :: Word32 -> Field
OwnerCount :: Word32 -> Field
DestinationTag :: Word32 -> Field
LedgerHash :: Word256 -> Field
ParentHash :: Word256 -> Field
TransactionHash :: Word256 -> Field
AccountHash :: Word256 -> Field
PreviousTxnID :: Word256 -> Field
LedgerIndex :: Word256 -> Field
WalletLocator :: Word256 -> Field
RootIndex :: Word256 -> Field
AccountTxnID :: Word256 -> Field
InvoiceID :: Word256 -> Field
Amount :: Amount -> Field
Balance :: Amount -> Field
Limit :: Amount -> Field
TakerPays :: Amount -> Field
TakerGets :: Amount -> Field
LowLimit :: Amount -> Field
HighLimit :: Amount -> Field
Fee :: Amount -> Field
SendMaximum :: Amount -> Field
DeliveredAmount :: Amount -> Field
PublicKey :: ByteString -> Field
MessageKey :: ByteString -> Field
SigningPublicKey :: ByteString -> Field
TransactionSignature :: ByteString -> Field
Generator :: ByteString -> Field
Signature :: ByteString -> Field
Domain :: ByteString -> Field
FundScript :: ByteString -> Field
RemoveScript :: ByteString -> Field
ExpireScript :: ByteString -> Field
CreateScript :: ByteString -> Field
LedgerCloseTimeResolution :: Word8 -> Field
Account :: RippleAddress -> Field
Owner :: RippleAddress -> Field
Destination :: RippleAddress -> Field
Issuer :: RippleAddress -> Field
Target :: RippleAddress -> Field
AuthorizedKey :: RippleAddress -> Field
ModifiedNode :: [Field] -> Field
AffectedNodes :: [Field] -> Field
TemplateEntryType :: Word8 -> Field
TransactionResult :: Word8 -> Field
UnknownField :: Word8 -> TypedField -> Field
instance Show TransactionType
instance Read TransactionType
instance Eq TransactionType
instance Show VariableLengthData
instance Eq VariableLengthData
instance Show Field
instance Eq Field
instance Show TypedField
instance Eq TypedField
instance Show Transaction
instance Eq Transaction
instance FromJSON Transaction
instance Binary Transaction
instance Binary Field
instance Ord Field
instance Binary VariableLengthData
instance Enum TransactionType

module Ripple.Sign
signTransaction :: CryptoRandomGen g => Transaction -> PrivateKey -> g -> Either GenError (Transaction, g)

module Ripple.WebSockets
receiveJSON :: (FromJSON j, MonadIO m) => Connection -> m (Either String j)
sendJSON :: (ToJSON j, MonadIO m) => Connection -> j -> m ()

-- | Ripple server error codes
data RippleError
UnknownCommand :: RippleError
ResponseParseError :: String -> RippleError
OtherRippleError :: Int -> String -> String -> RippleError

-- | The result of a WebSocket command -- either error or a response
data RippleResult id a
RippleResult :: (Maybe id) -> (Either RippleError a) -> RippleResult id a
getRippleResult :: Either String (RippleResult () a) -> Either RippleError a
getRippleResult' :: Either String (RippleResult id a) -> Either RippleError a
data CommandRipplePathFind
CommandRipplePathFind :: RippleAddress -> RippleAddress -> Amount -> CommandRipplePathFind
source_account :: CommandRipplePathFind -> RippleAddress
destination_account :: CommandRipplePathFind -> RippleAddress
destination_amount :: CommandRipplePathFind -> Amount
data ResultRipplePathFind
ResultRipplePathFind :: [Alternative] -> RippleAddress -> ResultRipplePathFind
alternatives :: ResultRipplePathFind -> [Alternative]
response_destination_account :: ResultRipplePathFind -> RippleAddress
data Alternative
Alternative :: Amount -> Alternative
source_amount :: Alternative -> Amount
data CommandAccountTX
CommandAccountTX :: RippleAddress -> Int -> Maybe Int -> Maybe Integer -> Maybe Integer -> Bool -> Bool -> CommandAccountTX
account :: CommandAccountTX -> RippleAddress
limit :: CommandAccountTX -> Int
offset :: CommandAccountTX -> Maybe Int
ledgerIndexMin :: CommandAccountTX -> Maybe Integer
ledgerIndexMax :: CommandAccountTX -> Maybe Integer
descending :: CommandAccountTX -> Bool
binary :: CommandAccountTX -> Bool

-- | <ul>
--   <li><i>(ledger_index, transaction+meta)</i></li>
--   </ul>
data ResultAccountTX
ResultAccountTX :: [(Integer, Transaction)] -> ResultAccountTX
data CommandLedger
CommandLedger :: Maybe Integer -> Bool -> Bool -> CommandLedger
ledger_index :: CommandLedger -> Maybe Integer
transactions :: CommandLedger -> Bool
expand :: CommandLedger -> Bool
data ResultLedger
ResultLedger :: Bool -> Bool -> Integer -> ByteString -> ByteString -> Integer -> UTCTime -> ResultLedger
result_ledger_closed :: ResultLedger -> Bool
result_ledger_accepted :: ResultLedger -> Bool
result_ledger_index :: ResultLedger -> Integer
result_parent_hash :: ResultLedger -> ByteString
result_ledger_hash :: ResultLedger -> ByteString
result_total_coins :: ResultLedger -> Integer
result_close_time :: ResultLedger -> UTCTime
data CommandLedgerClosed
CommandLedgerClosed :: CommandLedgerClosed
data ResultLedgerClosed
ResultLedgerClosed :: ByteString -> Integer -> ResultLedgerClosed
instance Show RippleError
instance Eq RippleError
instance (Show id, Show a) => Show (RippleResult id a)
instance (Eq id, Eq a) => Eq (RippleResult id a)
instance Show CommandRipplePathFind
instance Eq CommandRipplePathFind
instance Show Alternative
instance Eq Alternative
instance Show ResultRipplePathFind
instance Eq ResultRipplePathFind
instance Show ResultAccountTX
instance Eq ResultAccountTX
instance Show CommandLedger
instance Eq CommandLedger
instance Show ResultLedger
instance Eq ResultLedger
instance Show CommandLedgerClosed
instance Eq CommandLedgerClosed
instance Show ResultLedgerClosed
instance Eq ResultLedgerClosed
instance FromJSON ResultLedgerClosed
instance ToJSON CommandLedgerClosed
instance FromJSON ResultLedger
instance ToJSON CommandLedger
instance FromJSON ResultAccountTX
instance ToJSON CommandAccountTX
instance FromJSON Alternative
instance FromJSON ResultRipplePathFind
instance ToJSON CommandRipplePathFind
instance (FromJSON a, FromJSON id) => FromJSON (RippleResult id a)
