-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A slightly extended Kalman filter
--   
--   A slightly extended Kalman filter
@package Kalman
@version 0.1.0.1


-- | An extended Kalman filter. Note that this could be generalized
--   further. If you need a Kalman filter and have a state update matrix
--   &lt;math&gt; then you can just use <tt>const bigA</tt> as the function
--   which returns the Jacobian.
module Kalman

-- | The model for the extended Kalman filter is given by
--   
--   &lt;math&gt;
--   
--   where
--   
--   <ul>
--   <li>&lt;math&gt; is some non-linear vector-valued state update
--   function.</li>
--   <li>&lt;math&gt; are independent identically normally distributed
--   random variables with mean 0 representing the fact that the state
--   update is noisy: &lt;math&gt;.</li>
--   <li>&lt;math&gt; is a matrix which represents how we observe the
--   hidden state process.</li>
--   <li>&lt;math&gt; are independent identically normally distributed
--   random variables with mean 0 represent the fact that the observations
--   are noisy: &lt;math&gt;.</li>
--   </ul>
--   
--   We assume the whole process starts at 0 with our belief of the state
--   (aka the prior state) being given by &lt;math&gt;
extKalman :: (KnownNat m, KnownNat n, (1 <=? n) ~ True, (1 <=? m) ~ True) => R n -> Sq n -> L m n -> Sq m -> (R n -> R n) -> (R n -> Sq n) -> Sq n -> [R m] -> [(R n, Sq n)]
