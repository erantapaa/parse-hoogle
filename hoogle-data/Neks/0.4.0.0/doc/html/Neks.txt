-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Simple networked key/value store
--   
@package Neks
@version 0.4.0.0

module Network.Neks.NetPack
netWrite :: Handle -> ByteString -> IO ()
netRead :: Handle -> IO (Either String ByteString)

module Network.Neks.DataStore
data DataStore k v
createStore :: STM (DataStore k v)
dump :: DataStore k v -> STM [Map k v]
load :: [Map k v] -> STM (DataStore k v)
insert :: (Hashable k, Ord k) => k -> v -> DataStore k v -> STM ()
get :: (Hashable k, Ord k) => k -> DataStore k v -> STM (Maybe v)
delete :: (Hashable k, Ord k) => k -> DataStore k v -> STM ()

module Network.Neks.Disk
saveTo :: (Serialize a, Ord a, Serialize b) => String -> DataStore a b -> IO ()
loadFrom :: (Serialize a, Ord a, Serialize b) => String -> IO (Maybe (DataStore a b))

module Network.Neks.Actions
data Request
Set :: ByteString -> ByteString -> Request
Get :: ByteString -> Request
Delete :: ByteString -> Request
Atomic :: [Request] -> Request
data Reply
Found :: ByteString -> Reply
NotFound :: Reply
instance Show Request
instance Eq Request
instance Show Reply
instance Eq Reply

module Network.Neks.Message
parseRequests :: ByteString -> Either String [Request]
formatRequests :: [Request] -> ByteString
parseResponses :: ByteString -> Either String [Reply]
formatResponses :: [Reply] -> ByteString
