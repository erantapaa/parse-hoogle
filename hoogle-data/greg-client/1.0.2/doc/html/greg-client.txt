-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A scalable distributed logger with a high-precision global time axis.
--   
--   Haskell client to the "greg" distributed logger with a high-precision
--   global time axis (<a>http://code.google.com/p/greg/</a>).
@package greg-client
@version 1.0.2


-- | This module provides a binding to the greg distributed logger, which
--   provides a high-precision global time axis and is very performant.
--   
--   See project home page at <a>http://code.google.com/p/greg</a> for an
--   explanation of how to use the server, the features, motivation and
--   design.
module System.Log.Greg

-- | Client configuration. You probably only need to change
--   <tt>server</tt>.
data Configuration
Configuration :: String -> Int -> Int -> Int -> String -> Int -> Bool -> Int -> Configuration

-- | Server hostname (default <tt>localhost</tt>)
server :: Configuration -> String

-- | Message port (default <tt>5676</tt>)
port :: Configuration -> Int

-- | Calibration port (default <tt>5677</tt>)
calibrationPort :: Configuration -> Int

-- | How often to send message batches to server (default <tt>1000</tt>)
flushPeriodMs :: Configuration -> Int

-- | Arbitrary identifier, will show up in logs. For example,
--   <tt>"DataService"</tt> (default <tt>"unknown"</tt>)
clientId :: Configuration -> String

-- | How many records to store between flushes (more will be dropped)
--   (default <tt>100000</tt>)
maxBufferedRecords :: Configuration -> Int

-- | Whether to use gzip compression (default <tt>False</tt>, <tt>True</tt>
--   is unsupported)
useCompression :: Configuration -> Bool

-- | How often to initiate calibration exchanges (default <tt>10</tt>)
calibrationPeriodSec :: Configuration -> Int

-- | Log a message. The message will show up in server's output annotated
--   with a global timestamp (client's clock offset does not matter).
logMessage :: String -> IO ()

-- | Perform an IO action with logging (will wait for all messages to
--   flush).
withGregDo :: Configuration -> IO () -> IO ()

-- | The default configuration, suitable for most needs.
defaultConfiguration :: Configuration
