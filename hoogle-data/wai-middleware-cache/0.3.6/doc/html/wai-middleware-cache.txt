-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Caching middleware for WAI.
--   
--   This package provides cache middleware and abstract type for creating
--   cache backends.
@package wai-middleware-cache
@version 0.3.6


-- | Transparent front cache middleware for <a>Wai</a>.
--   
--   Instead caching internal data, this middleware caches entire
--   responses. Of course, this creates additional costs. However, the
--   simplification of the internal structure and concentration of caching
--   in the immediate vicinity of the request is more than redeem them.
--   
--   <pre>
--   cache (debugBackend True)
--         ourFrivolousApplication
--   </pre>
module Network.Wai.Middleware.Cache

-- | Abstract cache backend. Result may be <a>Nothing</a> you need to
--   respond with status <tt>304 - Not Modified</tt>.
type CacheBackend = Application -> Request -> ResourceT IO (Maybe Response)

-- | Cache backend can throw errors. For handle this, use, for example,
--   <a>Network.Wai.Middleware.Catch</a>.
data CacheBackendError
CacheBackendError :: ByteString -> CacheBackendError

-- | Cache middleware. Use it with conjuction with <a>CacheBackend</a> and
--   <a>headerETag</a>.
--   
--   <pre>
--   -- Simplest backend. Suggests @304 - Not Modified@ with site root.
--   rootBackend app req = do 
--       case rawPathInfo req of
--           "/" -&gt; return Nothing
--           _ -&gt; do
--               res &lt;- app req 
--               return $ Just res
--   app = responseLBS ok200 [] "someresponse"
--   
--   cachedApp = cache rootBackend $ headerETag $ app
--   </pre>
cache :: CacheBackend -> Middleware

-- | Add "ETag" header to response if it not present. Value of header is
--   <tt>MD5</tt> hash of response body.
headerETag :: Middleware

-- | Helper for extract <tt>If-None-Match</tt> header from <a>Request</a>.
--   Use this with backends.
lookupETag :: Request -> Maybe ByteString
instance Typeable CacheBackendError
instance Show CacheBackendError
instance Eq CacheBackendError
instance Exception CacheBackendError
