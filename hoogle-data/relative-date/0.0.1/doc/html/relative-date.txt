-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Durations and generalized time parsing
--   
--   Relative-date provides two modules. Data.Duration gives functions for
--   the creation of durations of time, represented as functions from
--   DateTime to DateTime. Data.DateTime.Parser presents miscellaneous
--   parsers for handling time descriptions of varying levels of detail.
--   The library also can parse descriptions of repeated times, returning a
--   (possibly infinite) list of DateTimes.
@package relative-date
@version 0.0.1

module Data.Duration
type Duration = DateTime -> DateTime

-- | Used as values for <a>toDuration</a>
data Days
Day :: Days
Week :: Days
Month :: Days
Year :: Days

-- | Creates a duration for the number of periods of days specified
toDuration :: Integer -> Days -> Duration

-- | Increments a DateTime to be on the weekday (0-6) given
fixTime :: DateTime -> Int -> DateTime

-- | Given year, month and day, gives the (0 based) day of the week
zellerCongruence :: Integer -> Int -> Int -> Integer

-- | Creates a list of DateTimes given a start date, an interval duration,
--   and an end duration from the start date
assemble :: DateTime -> Duration -> Maybe Duration -> [DateTime]
addDays :: Integer -> DateTime -> DateTime
addWeeks :: Integer -> DateTime -> DateTime
addMonths :: Integer -> DateTime -> DateTime
addYears :: Integer -> DateTime -> DateTime
instance Eq Days
instance Show Days
instance Ord Days

module Data.DateTime.Parser
data Format
US :: Format
World :: Format
expr :: Parser [DateTime]
time :: Parser Integer
weekday :: Parser Int
month :: Parser Int
duration :: Parser Days
date :: Parser DateTime
parseDate :: ParsecT String () (Reader (Format, DateTime)) DateTime
repetition :: DateTime -> Parser [DateTime]
exprs :: Parser [DateTime]
limExpr :: Parser [DateTime]
instance Eq Format
instance Show Format
instance Read Format
