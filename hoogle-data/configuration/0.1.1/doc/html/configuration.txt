-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Simple data type for application configuration.
--   
--   Simple data type to store Typeable values.
@package configuration
@version 0.1.1

module Data.Configuration
data Conf
as :: a
valueForKey :: Typeable a => String -> Conf -> a -> Maybe a
(<@>) :: Typeable a => String -> a -> (String, Dynamic)
keys :: Conf -> [String]
(!) :: Typeable a => Conf -> String -> a
toConf :: [(String, Dynamic)] -> Conf

-- | Converts an arbitrary value into an object of type <a>Dynamic</a>.
--   
--   The type of the object must be an instance of <a>Typeable</a>, which
--   ensures that only monomorphically-typed objects may be converted to
--   <a>Dynamic</a>. To convert a polymorphic object into <a>Dynamic</a>,
--   give it a monomorphic type signature. For example:
--   
--   <pre>
--   toDyn (id :: Int -&gt; Int)
--   </pre>
toDyn :: Typeable a => a -> Dynamic
toMap :: Conf -> Map String Dynamic
instance Typeable Conf
