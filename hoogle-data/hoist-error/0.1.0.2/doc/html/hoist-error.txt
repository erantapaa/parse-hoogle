-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Some convenience facilities for hoisting errors into a monad
--   
@package hoist-error
@version 0.1.0.2

module Control.Monad.Error.Hoist

-- | A tricky class for easily hoisting errors out of partiality types
--   (e.g. <a>Maybe</a>, <tt><a>Either</a> e</tt>) into a monad. The
--   parameter <tt>e</tt> represents the error information carried by the
--   partiality type <tt>t</tt>, and <tt>e'</tt> represents the type of
--   error expected in the monad <tt>m</tt>.
class Monad m => HoistError m t e e' | t -> e
hoistError :: HoistError m t e e' => (e -> e') -> t α -> m α

-- | A flipped synonym for <a>hoistError</a>.
(<%?>) :: HoistError m t e e' => t α -> (e -> e') -> m α

-- | A version of <a>&lt;%?&gt;</a> that operates on values already in the
--   monad.
(<%!?>) :: HoistError m t e e' => m (t α) -> (e -> e') -> m α

-- | A version of <tt>hoistError</tt> that ignores the error in <tt>t
--   α</tt> and replaces it with a new one in <tt>e'</tt>.
(<?>) :: HoistError m t e e' => t α -> e' -> m α

-- | A version of <tt><a>?</a></tt> that operates on values already in the
--   monad.
(<!?>) :: HoistError m t e e' => m (t α) -> e' -> m α
instance (m ~ n, MonadError e' m) => HoistError m (EitherT e n) e e'
instance MonadError e' m => HoistError m (Either e) e e'
instance MonadError e m => HoistError m Maybe () e
