-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | PureScript integration for Yesod
--   
--   PureScript is an awesome statically typed language that compiles to JS
--   and runs in your browser, and this module makes it easier to use
--   PureScript in Yesod.
@package yesod-purescript
@version 0.0.5

module Yesod.PureScript

-- | Yesod sub site for PureScript.
data PureScriptSite

-- | Things that are Yesod master can also be YesodPureScript master.
class Yesod master => YesodPureScript master

-- | Options for Yesod PureScript.
data YesodPureScriptOptions
YesodPureScriptOptions :: Mode -> [Text] -> [Text] -> [CompileOptions] -> Maybe Text -> Bool -> YesodPureScriptOptions

-- | Mode of compilation: dynamic or static.
ypsoMode :: YesodPureScriptOptions -> Mode

-- | Source directories to look for ".purs" files.
ypsoSourceDirectories :: YesodPureScriptOptions -> [Text]

-- | Ignores, list of regexps that prevent parsing.
ypsoSourceIgnores :: YesodPureScriptOptions -> [Text]

-- | Defines what and how to compile.
ypsoCompileOptions :: YesodPureScriptOptions -> [CompileOptions]

-- | Optionally specifies div id in parent page that will be used to
--   display compilation error if any. This is because usually resulting JS
--   is loaded by HTML page, and it might save a time (esp for trivial
--   errors) if error is displayed directly in HTML.
ypsoErrorDivId :: YesodPureScriptOptions -> Maybe Text

-- | Option passed to PureScript compiler, makes errors verbose.
ypsoVerboseErrors :: YesodPureScriptOptions -> Bool

-- | PureScript Template Haskell
addPureScriptWidget :: YesodPureScriptOptions -> Text -> Q Exp

-- | Create pure script site. Initialises MVar of compiled modules to empty
--   map.
createYesodPureScriptSite :: YesodPureScriptOptions -> IO PureScriptSite

-- | Default options for YesodPureScript. Needed when creating
--   PureScriptSite. Please don't create YesodPureScriptOptions by calling
--   constructor directly, so I can add more options without breaking your
--   code.
defaultYesodPureScriptOptions :: YesodPureScriptOptions

-- | For convenience: turns a path as list into a route.
getPureScriptRoute :: [Text] -> Route PureScriptSite

-- | Either add link to dynamically compiled PureScript or return
--   statically compiled PureScript. yesodPureScript :: Bool -&gt; Route
--   -&gt; YesodPureScriptOptions -&gt; Text -&gt; Q Exp
yesodPureScript :: Bool -> Name -> YesodPureScriptOptions -> Text -> ExpQ
instance Default YesodPureScriptOptions
instance YesodPureScript master => YesodSubDispatch PureScriptSite (HandlerT master IO)
