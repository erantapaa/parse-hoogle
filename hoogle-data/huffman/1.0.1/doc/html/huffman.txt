-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Pure Haskell implementation of the Huffman encoding algorithm
--   
--   A simple and pure Haskell implementation of the Huffman encoding
--   algorithm.
--   
--   The <tt>huffman</tt> function provides the original O(n log n)
--   algorithm implemented with a priority queue. If the input symbols are
--   sorted by probability, the O(n) <tt>huffmanSorted</tt> function can be
--   used instead.
@package huffman
@version 1.0.1

module Data.Compression.Huffman
data HuffmanTree a
Empty :: HuffmanTree a
Node :: (HuffmanTree a) -> (HuffmanTree a) -> HuffmanTree a
Leaf :: a -> HuffmanTree a
data Bit
Zero :: Bit
One :: Bit
type Code a = [(a, [Bit])]
huffman :: (Ord w, Num w) => [(a, w)] -> HuffmanTree a
huffmanSorted :: (Ord w, Num w) => [(a, w)] -> HuffmanTree a
codewords :: HuffmanTree a -> Code a
ppCode :: Show a => Code a -> String
instance Show a => Show (HuffmanTree a)
instance Show Bit
