-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Haskell IDE written in Haskell
--   
@package leksah
@version 0.15.1.1


module IDE.Command.VCS.Common.GUI


module IDE.Command.VCS


module IDE.TextEditor.Yi
data Yi
Yi :: Yi
instance Typeable Yi
instance Show Yi

module IDE.YiConfig
defaultYiConfig :: Config
data Config
data Control
data ControlM a
data YiM a
start :: Config -> (Control -> IO a) -> IO a
runControl :: ControlM a -> Control -> IO a
liftYi :: YiM a -> ControlM a


-- | The core state of ide. This module is imported from every other
--   module, | and all data structures of the state are declared here, to
--   avoid circular | module dependencies.
module IDE.Core.Types

-- | The IDE state
data IDE
IDE :: FrameState IDEM -> [PaneName] -> SpecialKeyTable IDERef -> SpecialKeyCons IDERef -> CandyTable -> Prefs -> Maybe Workspace -> Maybe IDEPackage -> Maybe Text -> Map FilePath [IDEPackage] -> [LogRef] -> (Maybe LogRef, Maybe LogRef, Maybe LogRef) -> Int -> Maybe GenScope -> Maybe (GenScope, GenScope) -> Maybe (GenScope, GenScope) -> PackageDescrCache -> Map Text [(Unique, IDEEvent -> IDEM IDEEvent)] -> IDEState -> (Bool, [GUIHistory], Int) -> (Bool, Maybe (Toolbar, ListStore Text)) -> (Bool, Maybe Toolbar) -> [FilePath] -> [FilePath] -> Maybe ProcessHandle -> Maybe (IDEPackage, ToolState) -> ((Int, Int), Maybe CompletionWindow) -> Control -> Maybe (MVar (ServerCommand, ServerAnswer -> IDEM ())) -> Maybe Handle -> Maybe (TVar [Either FilePath FilePath]) -> (Map FilePath MenuItem, Maybe (Maybe Text)) -> Map Text LogLaunchData -> IDEAction -> Maybe Text -> IDE

-- | state of the windows framework
frameState :: IDE -> FrameState IDEM

-- | a list of panes which were selected last
recentPanes :: IDE -> [PaneName]

-- | a structure for emacs like keystrokes
specialKeys :: IDE -> SpecialKeyTable IDERef

-- | the first of a double keystroke
specialKey :: IDE -> SpecialKeyCons IDERef

-- | table for source candy
candy :: IDE -> CandyTable

-- | configuration preferences
prefs :: IDE -> Prefs

-- | may be a workspace (set of packages)
workspace :: IDE -> Maybe Workspace
activePack :: IDE -> Maybe IDEPackage
activeExe :: IDE -> Maybe Text
bufferProjCache :: IDE -> Map FilePath [IDEPackage]
allLogRefs :: IDE -> [LogRef]
currentEBC :: IDE -> (Maybe LogRef, Maybe LogRef, Maybe LogRef)
currentHist :: IDE -> Int

-- | the system scope
systemInfo :: IDE -> Maybe GenScope

-- | the second are the imports
packageInfo :: IDE -> Maybe (GenScope, GenScope)

-- | the second are the imports
workspaceInfo :: IDE -> Maybe (GenScope, GenScope)
workspInfoCache :: IDE -> PackageDescrCache

-- | event handling table
handlers :: IDE -> Map Text [(Unique, IDEEvent -> IDEM IDEEvent)]
currentState :: IDE -> IDEState
guiHistory :: IDE -> (Bool, [GUIHistory], Int)
findbar :: IDE -> (Bool, Maybe (Toolbar, ListStore Text))
toolbar :: IDE -> (Bool, Maybe Toolbar)
recentFiles :: IDE -> [FilePath]
recentWorkspaces :: IDE -> [FilePath]
runningTool :: IDE -> Maybe ProcessHandle
debugState :: IDE -> Maybe (IDEPackage, ToolState)
completion :: IDE -> ((Int, Int), Maybe CompletionWindow)
yiControl :: IDE -> Control
serverQueue :: IDE -> Maybe (MVar (ServerCommand, ServerAnswer -> IDEM ()))
server :: IDE -> Maybe Handle
hlintQueue :: IDE -> Maybe (TVar [Either FilePath FilePath])
vcsData :: IDE -> (Map FilePath MenuItem, Maybe (Maybe Text))
logLaunches :: IDE -> Map Text LogLaunchData
autoCommand :: IDE -> IDEAction
autoURI :: IDE -> Maybe Text
data IDEState

-- | Leksah is in startup mode
IsStartingUp :: IDEState

-- | Leksah is about to go down
IsShuttingDown :: IDEState

-- | Leksah is running
IsRunning :: IDEState

-- | The flipper is used to switch between sources
IsFlipping :: TreeView -> IDEState

-- | The completion feature is used
IsCompleting :: Connections -> IDEState

-- | A mutable reference to the IDE state
type IDERef = IORef IDE

-- | The IDE Monad
type IDEM = ReaderT IDERef IO
type IDEEventM t = ReaderT IDERef (ReaderT (Ptr t) IO)

-- | A shorthand for a reader monad for a mutable reference to the IDE
--   state which does not return a value
type IDEAction = IDEM ()
data IDEEvent
InfoChanged :: Bool -> IDEEvent
UpdateWorkspaceInfo :: IDEEvent
SelectInfo :: Text -> Bool -> IDEEvent
SelectIdent :: Descr -> IDEEvent
LogMessage :: Text -> LogTag -> IDEEvent
RecordHistory :: GUIHistory -> IDEEvent
Sensitivity :: [(SensitivityMask, Bool)] -> IDEEvent
SearchMeta :: Text -> IDEEvent
StartFindInitial :: IDEEvent
GotoDefinition :: Descr -> IDEEvent
LoadSession :: FilePath -> IDEEvent
SaveSession :: FilePath -> IDEEvent
UpdateRecent :: IDEEvent
VariablesChanged :: IDEEvent
ErrorChanged :: Bool -> IDEEvent
CurrentErrorChanged :: (Maybe LogRef) -> IDEEvent
BreakpointChanged :: IDEEvent
CurrentBreakChanged :: (Maybe LogRef) -> IDEEvent
TraceChanged :: IDEEvent
GetTextPopup :: (Maybe (IDERef -> Menu -> IO ())) -> IDEEvent
StatusbarChanged :: [StatusbarCompartment] -> IDEEvent

-- | showPane updateFileCache
WorkspaceChanged :: Bool -> Bool -> IDEEvent
SelectSrcSpan :: (Maybe SrcSpan) -> IDEEvent
SavedFile :: FilePath -> IDEEvent
class (Functor m, Monad m, MonadIO m) => MonadIDE m
liftIDE :: MonadIDE m => IDEM a -> m a
(?>>=) :: Monad m => m (Maybe a) -> (a -> m ()) -> m ()
type WorkspaceM = ReaderT Workspace IDEM
type WorkspaceAction = WorkspaceM ()
runWorkspace :: WorkspaceM a -> Workspace -> IDEM a
type PackageM = ReaderT IDEPackage WorkspaceM
type PackageAction = PackageM ()
runPackage :: PackageM a -> IDEPackage -> WorkspaceM a
type DebugM = ReaderT (IDEPackage, ToolState) IDEM
type DebugAction = DebugM ()
runDebug :: DebugM a -> (IDEPackage, ToolState) -> IDEM a
data IDEPackage
IDEPackage :: PackageIdentifier -> FilePath -> [Dependency] -> Map ModuleName BuildInfo -> Bool -> [Text] -> [Text] -> [Text] -> [(FilePath, BuildInfo, Bool)] -> Set FilePath -> [FilePath] -> [Extension] -> [Text] -> [Text] -> [Text] -> [Text] -> [Text] -> [Text] -> [Text] -> [Text] -> [Text] -> [IDEPackage] -> IDEPackage
ipdPackageId :: IDEPackage -> PackageIdentifier
ipdCabalFile :: IDEPackage -> FilePath
ipdDepends :: IDEPackage -> [Dependency]
ipdModules :: IDEPackage -> Map ModuleName BuildInfo
ipdHasLibs :: IDEPackage -> Bool
ipdExes :: IDEPackage -> [Text]
ipdTests :: IDEPackage -> [Text]
ipdBenchmarks :: IDEPackage -> [Text]
ipdMain :: IDEPackage -> [(FilePath, BuildInfo, Bool)]
ipdExtraSrcs :: IDEPackage -> Set FilePath
ipdSrcDirs :: IDEPackage -> [FilePath]
ipdExtensions :: IDEPackage -> [Extension]
ipdConfigFlags :: IDEPackage -> [Text]
ipdBuildFlags :: IDEPackage -> [Text]
ipdTestFlags :: IDEPackage -> [Text]
ipdHaddockFlags :: IDEPackage -> [Text]
ipdExeFlags :: IDEPackage -> [Text]
ipdInstallFlags :: IDEPackage -> [Text]
ipdRegisterFlags :: IDEPackage -> [Text]
ipdUnregisterFlags :: IDEPackage -> [Text]
ipdSdistFlags :: IDEPackage -> [Text]
ipdSandboxSources :: IDEPackage -> [IDEPackage]
ipdBuildDir :: IDEPackage -> FilePath
ipdAllDirs :: IDEPackage -> [FilePath]
data Workspace
Workspace :: Int -> Text -> Text -> FilePath -> [IDEPackage] -> [FilePath] -> Maybe FilePath -> Maybe Text -> [IDEPackage] -> Map FilePath VCSConf -> Workspace
wsVersion :: Workspace -> Int
wsSaveTime :: Workspace -> Text
wsName :: Workspace -> Text
wsFile :: Workspace -> FilePath
wsPackages :: Workspace -> [IDEPackage]
wsPackagesFiles :: Workspace -> [FilePath]
wsActivePackFile :: Workspace -> Maybe FilePath
wsActiveExe :: Workspace -> Maybe Text
wsNobuildPack :: Workspace -> [IDEPackage]

-- | (FilePath to package, Version-Control-System Configuration)
packageVcsConf :: Workspace -> Map FilePath VCSConf

-- | Includes sandbox sources
wsAllPackages :: Workspace -> [IDEPackage]
type VCSConf = (VCSType, Config, Maybe MergeTool)

-- | ActionDescr is a data structure from which GtkActions are build, which
--   are used for menus, toolbars, and accelerator keystrokes
data ActionDescr alpha
AD :: ActionString -> Text -> Maybe Text -> Maybe Text -> ReaderT alpha IO () -> [KeyString] -> Bool -> ActionDescr alpha
name :: ActionDescr alpha -> ActionString
label :: ActionDescr alpha -> Text
tooltip :: ActionDescr alpha -> Maybe Text
stockID :: ActionDescr alpha -> Maybe Text
action :: ActionDescr alpha -> ReaderT alpha IO ()
accelerator :: ActionDescr alpha -> [KeyString]
isToggle :: ActionDescr alpha -> Bool
type ActionString = Text
type KeyString = Text

-- | Preferences is a data structure to hold configuration data
data Prefs
Prefs :: Int -> Text -> Bool -> (Bool, Int) -> Int -> Bool -> (Bool, Text) -> Text -> Bool -> Bool -> Maybe Text -> (Bool, Text) -> Color -> Color -> Color -> Color -> Color -> Color -> Color -> Color -> Color -> Color -> Bool -> Text -> Maybe Text -> (Int, Int) -> Text -> [(Text, PanePath)] -> PanePath -> [(Text, Text)] -> [Dependency] -> Bool -> Bool -> Text -> Bool -> Bool -> Bool -> Bool -> Bool -> Bool -> Bool -> Bool -> Bool -> Bool -> Bool -> Bool -> Bool -> Bool -> Text -> Bool -> Int -> [FilePath] -> Maybe FilePath -> Text -> RetrieveStrategy -> Bool -> Prefs
prefsFormat :: Prefs -> Int
prefsSaveTime :: Prefs -> Text
showLineNumbers :: Prefs -> Bool
rightMargin :: Prefs -> (Bool, Int)
tabWidth :: Prefs -> Int
wrapLines :: Prefs -> Bool
sourceCandy :: Prefs -> (Bool, Text)
keymapName :: Prefs -> Text
forceLineEnds :: Prefs -> Bool
removeTBlanks :: Prefs -> Bool
textviewFont :: Prefs -> Maybe Text
sourceStyle :: Prefs -> (Bool, Text)
foundBackgroundLight :: Prefs -> Color
matchBackgroundLight :: Prefs -> Color
contextBackgroundLight :: Prefs -> Color
breakpointBackgroundLight :: Prefs -> Color
lintBackgroundLight :: Prefs -> Color
foundBackgroundDark :: Prefs -> Color
matchBackgroundDark :: Prefs -> Color
contextBackgroundDark :: Prefs -> Color
breakpointBackgroundDark :: Prefs -> Color
lintBackgroundDark :: Prefs -> Color
autoLoad :: Prefs -> Bool
textEditorType :: Prefs -> Text
logviewFont :: Prefs -> Maybe Text
defaultSize :: Prefs -> (Int, Int)
browser :: Prefs -> Text
pathForCategory :: Prefs -> [(Text, PanePath)]
defaultPath :: Prefs -> PanePath
categoryForPane :: Prefs -> [(Text, Text)]
packageBlacklist :: Prefs -> [Dependency]
collectAtStart :: Prefs -> Bool
useCtrlTabFlipping :: Prefs -> Bool
docuSearchURL :: Prefs -> Text
completeRestricted :: Prefs -> Bool
saveAllBeforeBuild :: Prefs -> Bool
jumpToWarnings :: Prefs -> Bool
useVado :: Prefs -> Bool
useCabalDev :: Prefs -> Bool
backgroundBuild :: Prefs -> Bool
runUnitTests :: Prefs -> Bool
makeMode :: Prefs -> Bool
singleBuildWithoutLinking :: Prefs -> Bool
dontInstallLast :: Prefs -> Bool
printEvldWithShow :: Prefs -> Bool
breakOnException :: Prefs -> Bool
breakOnError :: Prefs -> Bool
printBindResult :: Prefs -> Bool
serverIP :: Prefs -> Text
showHiddenFiles :: Prefs -> Bool
serverPort :: Prefs -> Int
sourceDirectories :: Prefs -> [FilePath]
unpackDirectory :: Prefs -> Maybe FilePath
retrieveURL :: Prefs -> Text
retrieveStrategy :: Prefs -> RetrieveStrategy
endWithLastConn :: Prefs -> Bool
cabalCommand :: Prefs -> FilePath
data EditorStyle
EditorStyle :: Maybe Text -> Bool -> (Color, Color) -> (Color, Color) -> (Color, Color) -> (Color, Color) -> (Color, Color) -> EditorStyle
styleName :: EditorStyle -> Maybe Text
preferDark :: EditorStyle -> Bool
foundBG :: EditorStyle -> (Color, Color)
matchBG :: EditorStyle -> (Color, Color)
contextBG :: EditorStyle -> (Color, Color)
breakpointBG :: EditorStyle -> (Color, Color)
lintBG :: EditorStyle -> (Color, Color)
editorStyle :: Bool -> Prefs -> EditorStyle
data LogRefType
ContextRef :: LogRefType
BreakpointRef :: LogRefType
ErrorRef :: LogRefType
TestFailureRef :: LogRefType
WarningRef :: LogRefType
LintRef :: LogRefType
data LogRef
LogRef :: SrcSpan -> IDEPackage -> Text -> Maybe (Text, Idea) -> Maybe (Int, Int) -> LogRefType -> LogRef
logRefSrcSpan :: LogRef -> SrcSpan
logRefPackage :: LogRef -> IDEPackage
refDescription :: LogRef -> Text
logRefIdea :: LogRef -> Maybe (Text, Idea)
logLines :: LogRef -> Maybe (Int, Int)
logRefType :: LogRef -> LogRefType
logRefRootPath :: LogRef -> FilePath
logRefFilePath :: LogRef -> FilePath
logRefFullFilePath :: LogRef -> FilePath
isError :: LogRef -> Bool
isBreakpoint :: LogRef -> Bool
displaySrcSpan :: SrcSpan -> [Char]
colorHexString :: Color -> [Char]
data SearchHint
Forward :: SearchHint
Backward :: SearchHint
Insert :: SearchHint
Delete :: SearchHint
Initial :: SearchHint
newtype CandyTable
CT :: (CandyTableForth, CandyTableBack) -> CandyTable
type CandyTableForth = [(Bool, Text, Text)]
type CandyTableBack = [(Text, Text, Int)]
newtype KeymapI
KM :: (Map ActionString [(Maybe (Either KeyString (KeyString, KeyString)), Maybe Text)]) -> KeymapI
type SpecialKeyTable alpha = Map (KeyVal, [Modifier]) (Map (KeyVal, [Modifier]) (ActionDescr alpha))
type SpecialKeyCons alpha = Maybe (Map (KeyVal, [Modifier]) (ActionDescr alpha), Text)
type PackageDescrCache = Map PackageIdentifier ModuleDescrCache
type ModuleDescrCache = Map ModuleName (UTCTime, Maybe FilePath, ModuleDescr)
data CompletionWindow
CompletionWindow :: Window -> TreeView -> ListStore Text -> CompletionWindow
cwWindow :: CompletionWindow -> Window
cwTreeView :: CompletionWindow -> TreeView
cwListStore :: CompletionWindow -> ListStore Text
data LogLaunch
LogLaunch :: TextBuffer -> LogLaunch
logBuffer :: LogLaunch -> TextBuffer

-- | Other types
data LogLaunchData
LogLaunchData :: LogLaunch -> Maybe ProcessHandle -> LogLaunchData
logLaunch :: LogLaunchData -> LogLaunch
mbPid :: LogLaunchData -> Maybe ProcessHandle
data LogTag
LogTag :: LogTag
ErrorTag :: LogTag
FrameTag :: LogTag
InputTag :: LogTag
InfoTag :: LogTag

-- | the first one is the new and the second the old state
type GUIHistory = (GUIHistory', GUIHistory')
data GUIHistory'
ModuleSelected :: Maybe ModuleName -> Maybe Text -> GUIHistory'
moduleS :: GUIHistory' -> Maybe ModuleName
facetS :: GUIHistory' -> Maybe Text
ScopeSelected :: Scope -> Bool -> GUIHistory'
scope :: GUIHistory' -> Scope
blacklist :: GUIHistory' -> Bool
InfoElementSelected :: Maybe Descr -> GUIHistory'
mbInfo :: GUIHistory' -> Maybe Descr
PaneSelected :: Maybe Text -> GUIHistory'
paneN :: GUIHistory' -> Maybe Text
data SensitivityMask
SensitivityForwardHist :: SensitivityMask
SensitivityBackwardHist :: SensitivityMask
SensitivityProjectActive :: SensitivityMask
SensitivityWorkspaceOpen :: SensitivityMask
SensitivityError :: SensitivityMask
SensitivityEditor :: SensitivityMask
SensitivityInterpreting :: SensitivityMask
data SearchMode
Exact :: Bool -> SearchMode
caseSense :: SearchMode -> Bool
Prefix :: Bool -> SearchMode
caseSense :: SearchMode -> Bool
Regex :: Bool -> SearchMode
caseSense :: SearchMode -> Bool
data StatusbarCompartment
CompartmentCommand :: Text -> StatusbarCompartment
CompartmentPane :: (Maybe (IDEPane IDEM)) -> StatusbarCompartment
CompartmentPackage :: Text -> StatusbarCompartment
CompartmentState :: Text -> StatusbarCompartment
CompartmentOverlay :: Bool -> StatusbarCompartment
CompartmentBufferPos :: (Int, Int) -> StatusbarCompartment
CompartmentBuild :: Bool -> StatusbarCompartment
CompartmentCollect :: Bool -> StatusbarCompartment
instance Typeable LogLaunch
instance Eq IDEPackage
instance Eq Prefs
instance Show Prefs
instance Eq SearchHint
instance Show Workspace
instance Eq LogRefType
instance Ord LogRefType
instance Show LogRefType
instance Enum LogRefType
instance Bounded LogRefType
instance Eq LogRef
instance Eq GUIHistory'
instance Ord GUIHistory'
instance Show GUIHistory'
instance Eq SensitivityMask
instance Ord SensitivityMask
instance Show SensitivityMask
instance Eq SearchMode
instance Ord SearchMode
instance Read SearchMode
instance Show SearchMode
instance Show LogRef
instance Ord Modifier
instance Ord IDEPackage
instance Show IDEPackage
instance EventSelector Text
instance EventSource IDERef IDEEvent IDEM Text
instance Event IDEEvent Text
instance MonadIDE PackageM
instance MonadIDE (IDEEventM t)
instance MonadIDE WorkspaceM
instance MonadIDE IDEM


-- | The core state of ide. This module is imported from every other
--   module, | and all data structures of the state are declared here, to
--   avoid circular | module dependencies.
module IDE.Core.State
window :: FrameState delta -> Window
errorRefs :: IDE -> [LogRef]
breakpointRefs :: IDE -> [LogRef]
contextRefs :: IDE -> [LogRef]
currentError :: IDE -> Maybe LogRef
currentBreak :: IDE -> Maybe LogRef
currentContext :: IDE -> Maybe LogRef
setCurrentError :: MonadIDE m => Maybe LogRef -> m ()
setCurrentBreak :: MonadIDE m => Maybe LogRef -> m ()
setCurrentContext :: MonadIDE m => Maybe LogRef -> m ()
isInterpreting :: MonadIDE m => m Bool
isStartingOrClosing :: IDEState -> Bool
triggerEventIDE :: MonadIDE m => IDEEvent -> m IDEEvent
triggerEventIDE_ :: MonadIDE m => IDEEvent -> m ()
deactivatePane :: IDEAction

-- | Read an attribute of the contents
readIDE :: MonadIDE m => (IDE -> beta) -> m beta

-- | Variation on modifyIDE_ that lets you return a value
modifyIDE :: MonadIDE m => (IDE -> (IDE, beta)) -> m beta

-- | Modify the contents, without returning a value
modifyIDE_ :: MonadIDE m => (IDE -> IDE) -> m ()
withIDE :: MonadIDE m => (IDE -> IO alpha) -> m alpha
getIDE :: MonadIDE m => m IDE
throwIDE :: Text -> a

-- | A reader monad for a mutable reference to the IDE state
reifyIDE :: MonadIDE m => (IDERef -> IO a) -> m a
reflectIDE :: IDEM a -> IDERef -> IO a
reflectIDEI :: Sink a IDEM () -> IDERef -> Sink a IO ()
catchIDE :: (MonadIDE m, Exception e) => IDEM a -> (e -> IO a) -> m a
postSyncIDE :: MonadIDE m => IDEM a -> m a
postAsyncIDE :: MonadIDE m => IDEM () -> m ()
onIDE :: MonadIO m => object -> Signal object (m1 a) -> ReaderT r m1 a -> ReaderT r m (ConnectId object)
forkIDE :: MonadIDE m => IDEAction -> m ()
sysMessage :: MonadIO m => MessageLevel -> Text -> m ()
data MessageLevel
Silent :: MessageLevel
Normal :: MessageLevel
High :: MessageLevel
ideMessage :: MonadIDE m => MessageLevel -> Text -> m ()
logMessage :: MonadIDE m => Text -> LogTag -> m ()
withoutRecordingDo :: IDEAction -> IDEAction
changePackage :: IDEPackage -> IDEAction
liftYiControl :: ControlM a -> IDEM a
liftYi :: YiM a -> IDEM a

-- | Find a directory relative to the leksah install directory
leksahSubDir :: FilePath -> IO (Maybe FilePath)

-- | Get the leksah data dir based on the executable name or if that fails
--   use the directroy for the package. This is allows us to make binary
--   packages where the data directory id relative to the leksah
--   executable. This is important for Wind32 where setting environment
--   variables for the locations in a launch script causes problems (you
--   can't pin the exe).
leksahOrPackageDir :: FilePath -> IO FilePath -> IO FilePath
getDataDir :: IO FilePath
version :: Version
instance Typeable IDEException
instance Eq MessageLevel
instance Ord MessageLevel
instance Show MessageLevel
instance Exception IDEException
instance Show IDEException
instance PaneMonad IDEM

module IDE.OSX
applicationNew :: IO Application
updateMenu :: Application -> UIManager -> IDEM ()
applicationReady :: Application -> IO ()
allowFullscreen :: DrawWindowClass window => window -> IO ()


-- | Module for handling keymaps, | deals with gtk accelerators and double
--   (emacs-like) keystrokes
module IDE.Keymap
class Keymap alpha
parseKeymap :: Keymap alpha => FilePath -> IO alpha
setKeymap :: Keymap alpha => alpha -> [ActionDescr IDERef] -> [ActionDescr IDERef]
buildSpecialKeys :: Keymap alpha => alpha -> [ActionDescr IDERef] -> IO (SpecialKeyTable IDERef)
instance Keymap KeymapI


module IDE.Utils.GUIUtils
chooseFile :: Window -> Text -> Maybe FilePath -> IO (Maybe FilePath)
chooseDir :: Window -> Text -> Maybe FilePath -> IO (Maybe FilePath)
chooseSaveFile :: Window -> Text -> Maybe FilePath -> IO (Maybe FilePath)
openBrowser :: Text -> IDEAction
showDialog :: Text -> MessageType -> IO ()
showErrorDialog :: Text -> IO ()
getCandyState :: PaneMonad alpha => alpha Bool
setCandyState :: PaneMonad alpha => Bool -> alpha ()
getFullScreenState :: PaneMonad alpha => alpha Bool
setFullScreenState :: PaneMonad alpha => Bool -> alpha ()
getDarkState :: PaneMonad alpha => alpha Bool
setDarkState :: PaneMonad alpha => Bool -> alpha ()
getForgetSession :: PaneMonad alpha => alpha Bool
getBackgroundBuildToggled :: PaneMonad alpha => alpha Bool
setBackgroundBuildToggled :: PaneMonad alpha => Bool -> alpha ()
getRunUnitTests :: PaneMonad alpha => alpha Bool
setRunUnitTests :: PaneMonad alpha => Bool -> alpha ()
getMakeModeToggled :: PaneMonad alpha => alpha Bool
setMakeModeToggled :: PaneMonad alpha => Bool -> alpha ()
getDebugToggled :: PaneMonad alpha => alpha Bool
setDebugToggled :: PaneMonad alpha => Bool -> alpha ()
getRecentFiles :: IDEM MenuItem
getRecentWorkspaces :: IDEM MenuItem
getVCS :: IDEM MenuItem
stockIdFromType :: DescrType -> StockId
mapControlCommand :: t -> t
treeViewContextMenu :: TreeViewClass treeView => treeView -> (Menu -> IO ()) -> IO (ConnectId treeView, ConnectId treeView)

-- | For i18n support. Not included in this build.
__ :: Text -> Text
fontDescription :: Maybe Text -> IDEM FontDescription


-- | Server functionality
module IDE.Utils.ServerConnection
doServerCommand :: ServerCommand -> (ServerAnswer -> IDEM ()) -> IDEAction


-- | This module provides the infos collected by the server before
module IDE.Metainfo.Provider

-- | Lookup of an identifier description
getIdentifierDescr :: (SymbolTable alpha, SymbolTable beta) => Text -> alpha -> beta -> [Descr]

-- | Lookup of an identifiers starting with the specified prefix and return
--   a list.
getIdentifiersStartingWith :: (SymbolTable alpha, SymbolTable beta) => Text -> alpha -> beta -> [Text]
getCompletionOptions :: Text -> IDEM [Text]
getDescription :: Text -> IDEM Text
getActivePackageDescr :: IDEM (Maybe PackageDescr)

-- | Searching of metadata
searchMeta :: Scope -> Text -> SearchMode -> IDEM [Descr]

-- | Update and initialize metadata for the world -- Called at startup
initInfo :: IDEAction -> IDEAction
updateSystemInfo :: IDEAction
rebuildSystemInfo :: IDEAction
updateWorkspaceInfo :: IDEAction
rebuildWorkspaceInfo :: IDEAction
getPackageInfo :: IDEM (Maybe (GenScope, GenScope))
getWorkspaceInfo :: IDEM (Maybe (GenScope, GenScope))
getSystemInfo :: IDEM (Maybe GenScope)

-- | Only exported items
getPackageImportInfo :: IDEPackage -> IDEM (Maybe (GenScope, GenScope))


-- | Module for saving, restoring and editing projectFlags
module IDE.Pane.PackageFlags
readFlags :: FilePath -> IDEPackage -> IO IDEPackage
writeFlags :: FilePath -> IDEPackage -> IO ()
data IDEFlags
IDEFlags :: VBox -> IDEFlags
flagsBox :: IDEFlags -> VBox
data FlagsState
getFlags :: Maybe PanePath -> IDEM IDEFlags
instance Typeable IDEFlags
instance Typeable FlagsState
instance Eq FlagsState
instance Ord FlagsState
instance Read FlagsState
instance Show FlagsState
instance RecoverablePane IDEFlags FlagsState IDEM
instance Pane IDEFlags IDEM


-- | The pane of ide where metadata searches can be done
module IDE.Pane.Search

-- | A search pane description
data IDESearch
IDESearch :: ScrolledWindow -> TreeView -> ListStore Descr -> IORef Scope -> IORef SearchMode -> VBox -> Entry -> (Scope -> IDEAction) -> (SearchMode -> IDEAction) -> (Text -> IDEAction) -> ([Descr] -> IDEAction) -> IDESearch
scrolledView :: IDESearch -> ScrolledWindow
treeView :: IDESearch -> TreeView
searchStore :: IDESearch -> ListStore Descr
searchScopeRef :: IDESearch -> IORef Scope
searchModeRef :: IDESearch -> IORef SearchMode
topBox :: IDESearch -> VBox
entry :: IDESearch -> Entry
scopeSelection :: IDESearch -> Scope -> IDEAction
modeSelection :: IDESearch -> SearchMode -> IDEAction
searchMetaGUI :: IDESearch -> Text -> IDEAction
setChoices :: IDESearch -> [Descr] -> IDEAction
data SearchState
buildSearchPane :: IDEM (Maybe IDESearch, Connections)
getSearch :: Maybe PanePath -> IDEM IDESearch
instance Typeable IDESearch
instance Typeable SearchState
instance Eq SearchState
instance Ord SearchState
instance Read SearchState
instance Show SearchState
instance RecoverablePane IDESearch SearchState IDEM
instance Pane IDESearch IDEM


-- | Builds and updates the Statusbar, To update the bar triiger the
--   Statusbar changed event.
module IDE.Statusbar
changeStatusbar :: [StatusbarCompartment] -> IDEAction
buildStatusbar :: IO HBox


-- | Deprecated. Kept in to make old session (.lkshs) files work.
module IDE.Pane.HLint
data HLintState
HLintState :: HLintState
instance Typeable IDEHLint
instance Typeable HLintState
instance Eq HLintState
instance Ord HLintState
instance Read HLintState
instance Show HLintState
instance RecoverablePane IDEHLint HLintState IDEM
instance Pane IDEHLint IDEM


module IDE.Pane.WebKit.Documentation
data IDEDocumentation
IDEDocumentation :: ScrolledWindow -> WebView -> IDEDocumentation
scrolledView :: IDEDocumentation -> ScrolledWindow
webView :: IDEDocumentation -> WebView
data DocumentationState
DocumentationState :: Float -> Maybe Text -> DocumentationState
zoom :: DocumentationState -> Float
uri :: DocumentationState -> Maybe Text
getDocumentation :: Maybe PanePath -> IDEM IDEDocumentation
loadDoc :: Text -> IDEAction
reloadDoc :: IDEAction
instance Typeable IDEDocumentation
instance Typeable DocumentationState
instance Eq DocumentationState
instance Ord DocumentationState
instance Read DocumentationState
instance Show DocumentationState
instance RecoverablePane IDEDocumentation DocumentationState IDEM
instance Pane IDEDocumentation IDEM


module IDE.Pane.WebKit.Inspect
data IDEInspect
IDEInspect :: ScrolledWindow -> WebView -> IDEInspect
scrollWin :: IDEInspect -> ScrolledWindow
inspectView :: IDEInspect -> WebView
data InspectState
InspectState :: InspectState
getInspectPane :: Maybe PanePath -> IDEM IDEInspect
instance Typeable IDEInspect
instance Typeable InspectState
instance Eq InspectState
instance Ord InspectState
instance Read InspectState
instance Show InspectState
instance RecoverablePane IDEInspect InspectState IDEM
instance Pane IDEInspect IDEM


module IDE.Pane.WebKit.Output
data IDEOutput
IDEOutput :: VBox -> Entry -> WebView -> IORef Bool -> IDEOutput
vbox :: IDEOutput -> VBox
uriEntry :: IDEOutput -> Entry
webView :: IDEOutput -> WebView
alwaysHtmlRef :: IDEOutput -> IORef Bool
data OutputState
OutputState :: Float -> Bool -> OutputState
zoom :: OutputState -> Float
alwaysHtml :: OutputState -> Bool
getOutputPane :: Maybe PanePath -> IDEM IDEOutput
setOutput :: Text -> Text -> IDEAction
loadOutputUri :: FilePath -> IDEAction
instance Typeable IDEOutput
instance Typeable OutputState
instance Eq OutputState
instance Ord OutputState
instance Read OutputState
instance Show OutputState
instance RecoverablePane IDEOutput OutputState IDEM
instance Pane IDEOutput IDEM


-- | TODO this module should be moved to some other place, maybe utils
module IDE.Command.Print
print :: FilePath -> IO (Either PrintError Text)
data PrintError
PrintError :: Int -> Text -> FilePath -> PrintError
exitCode :: PrintError -> Int
stderr :: PrintError -> Text
printCmd :: PrintError -> FilePath
instance Read PrintError
instance Show PrintError


module IDE.TextEditor.Class
class TextEditor editor where data family EditorBuffer editor data family EditorView editor data family EditorMark editor data family EditorIter editor data family EditorTagTable editor data family EditorTag editor
newBuffer :: TextEditor editor => Maybe FilePath -> Text -> IDEM (EditorBuffer editor)
applyTagByName :: TextEditor editor => EditorBuffer editor -> Text -> EditorIter editor -> EditorIter editor -> IDEM ()
beginNotUndoableAction :: TextEditor editor => EditorBuffer editor -> IDEM ()
beginUserAction :: TextEditor editor => EditorBuffer editor -> IDEM ()
canRedo :: TextEditor editor => EditorBuffer editor -> IDEM Bool
canUndo :: TextEditor editor => EditorBuffer editor -> IDEM Bool
copyClipboard :: TextEditor editor => EditorBuffer editor -> Clipboard -> IDEM ()
createMark :: TextEditor editor => EditorView editor -> LogRefType -> EditorIter editor -> Text -> IDEM ()
cutClipboard :: TextEditor editor => EditorBuffer editor -> Clipboard -> Bool -> IDEM ()
delete :: TextEditor editor => EditorBuffer editor -> EditorIter editor -> EditorIter editor -> IDEM ()
deleteSelection :: TextEditor editor => EditorBuffer editor -> IDEM ()
endNotUndoableAction :: TextEditor editor => EditorBuffer editor -> IDEM ()
endUserAction :: TextEditor editor => EditorBuffer editor -> IDEM ()
getEndIter :: TextEditor editor => EditorBuffer editor -> IDEM (EditorIter editor)
getInsertMark :: TextEditor editor => EditorBuffer editor -> IDEM (EditorMark editor)
getIterAtLine :: TextEditor editor => EditorBuffer editor -> Int -> IDEM (EditorIter editor)
getIterAtMark :: TextEditor editor => EditorBuffer editor -> EditorMark editor -> IDEM (EditorIter editor)
getIterAtOffset :: TextEditor editor => EditorBuffer editor -> Int -> IDEM (EditorIter editor)
getLineCount :: TextEditor editor => EditorBuffer editor -> IDEM Int
getModified :: TextEditor editor => EditorBuffer editor -> IDEM Bool
getSelectionBoundMark :: TextEditor editor => EditorBuffer editor -> IDEM (EditorMark editor)
getSelectionBounds :: TextEditor editor => EditorBuffer editor -> IDEM (EditorIter editor, EditorIter editor)
getInsertIter :: TextEditor editor => EditorBuffer editor -> IDEM (EditorIter editor)
getSlice :: TextEditor editor => EditorBuffer editor -> EditorIter editor -> EditorIter editor -> Bool -> IDEM Text
getStartIter :: TextEditor editor => EditorBuffer editor -> IDEM (EditorIter editor)
getTagTable :: TextEditor editor => EditorBuffer editor -> IDEM (EditorTagTable editor)
getText :: TextEditor editor => EditorBuffer editor -> EditorIter editor -> EditorIter editor -> Bool -> IDEM Text
hasSelection :: TextEditor editor => EditorBuffer editor -> IDEM Bool
insert :: TextEditor editor => EditorBuffer editor -> EditorIter editor -> Text -> IDEM ()
newView :: TextEditor editor => EditorBuffer editor -> Maybe Text -> IDEM (EditorView editor)
pasteClipboard :: TextEditor editor => EditorBuffer editor -> Clipboard -> EditorIter editor -> Bool -> IDEM ()
placeCursor :: TextEditor editor => EditorBuffer editor -> EditorIter editor -> IDEM ()
redo :: TextEditor editor => EditorBuffer editor -> IDEM ()
removeTagByName :: TextEditor editor => EditorBuffer editor -> Text -> IDEM ()
selectRange :: TextEditor editor => EditorBuffer editor -> EditorIter editor -> EditorIter editor -> IDEM ()
setModified :: TextEditor editor => EditorBuffer editor -> Bool -> IDEM ()
setStyle :: TextEditor editor => EditorBuffer editor -> EditorStyle -> IDEM ()
setText :: TextEditor editor => EditorBuffer editor -> Text -> IDEM ()
undo :: TextEditor editor => EditorBuffer editor -> IDEM ()
afterModifiedChanged :: TextEditor editor => EditorBuffer editor -> IDEM () -> IDEM [Connection]
bufferToWindowCoords :: TextEditor editor => EditorView editor -> (Int, Int) -> IDEM (Int, Int)
drawTabs :: TextEditor editor => EditorView editor -> IDEM ()
getBuffer :: TextEditor editor => EditorView editor -> IDEM (EditorBuffer editor)
getWindow :: TextEditor editor => EditorView editor -> IDEM (Maybe DrawWindow)
getIterAtLocation :: TextEditor editor => EditorView editor -> Int -> Int -> IDEM (EditorIter editor)
getIterLocation :: TextEditor editor => EditorView editor -> EditorIter editor -> IDEM Rectangle
getOverwrite :: TextEditor editor => EditorView editor -> IDEM Bool
getScrolledWindow :: TextEditor editor => EditorView editor -> IDEM ScrolledWindow
getEditorWidget :: TextEditor editor => EditorView editor -> IDEM Widget
grabFocus :: TextEditor editor => EditorView editor -> IDEM ()
scrollToMark :: TextEditor editor => EditorView editor -> EditorMark editor -> Double -> Maybe (Double, Double) -> IDEM ()
scrollToIter :: TextEditor editor => EditorView editor -> EditorIter editor -> Double -> Maybe (Double, Double) -> IDEM ()
setFont :: TextEditor editor => EditorView editor -> Maybe Text -> IDEM ()
setIndentWidth :: TextEditor editor => EditorView editor -> Int -> IDEM ()
setWrapMode :: TextEditor editor => EditorView editor -> Bool -> IDEM ()
setRightMargin :: TextEditor editor => EditorView editor -> Maybe Int -> IDEM ()
setShowLineNumbers :: TextEditor editor => EditorView editor -> Bool -> IDEM ()
setTabWidth :: TextEditor editor => EditorView editor -> Int -> IDEM ()
afterFocusIn :: TextEditor editor => EditorView editor -> IDEM () -> IDEM [Connection]
afterMoveCursor :: TextEditor editor => EditorView editor -> IDEM () -> IDEM [Connection]
afterToggleOverwrite :: TextEditor editor => EditorView editor -> IDEM () -> IDEM [Connection]
onButtonPress :: TextEditor editor => EditorView editor -> IDEEventM EButton Bool -> IDEM [Connection]
onButtonRelease :: TextEditor editor => EditorView editor -> IDEEventM EButton Bool -> IDEM [Connection]
onCompletion :: TextEditor editor => EditorView editor -> IDEM () -> IDEM () -> IDEM [Connection]
onKeyPress :: TextEditor editor => EditorView editor -> IDEEventM EKey Bool -> IDEM [Connection]
onMotionNotify :: TextEditor editor => EditorView editor -> IDEEventM EMotion Bool -> IDEM [Connection]
onLeaveNotify :: TextEditor editor => EditorView editor -> IDEEventM ECrossing Bool -> IDEM [Connection]
onKeyRelease :: TextEditor editor => EditorView editor -> IDEEventM EKey Bool -> IDEM [Connection]
onLookupInfo :: TextEditor editor => EditorView editor -> IDEEventM EButton Bool -> IDEM [Connection]
onMotionNotifyEvent :: TextEditor editor => EditorView editor -> IDEEventM EMotion Bool -> IDEM [Connection]
onPopulatePopup :: TextEditor editor => EditorView editor -> (Menu -> IDEM ()) -> IDEM [Connection]
onSelectionChanged :: TextEditor editor => EditorBuffer editor -> IDEM () -> IDEM [Connection]
backwardCharC :: TextEditor editor => EditorIter editor -> IDEM (EditorIter editor)
backwardFindCharC :: TextEditor editor => EditorIter editor -> (Char -> Bool) -> Maybe (EditorIter editor) -> IDEM (Maybe (EditorIter editor))
backwardWordStartC :: TextEditor editor => EditorIter editor -> IDEM (Maybe (EditorIter editor))
backwardToLineStartC :: TextEditor editor => EditorIter editor -> IDEM (EditorIter editor)
endsWord :: TextEditor editor => EditorIter editor -> IDEM Bool
forwardCharC :: TextEditor editor => EditorIter editor -> IDEM (EditorIter editor)
forwardCharsC :: TextEditor editor => EditorIter editor -> Int -> IDEM (EditorIter editor)
forwardFindCharC :: TextEditor editor => EditorIter editor -> (Char -> Bool) -> Maybe (EditorIter editor) -> IDEM (Maybe (EditorIter editor))
forwardSearch :: TextEditor editor => EditorIter editor -> Text -> [TextSearchFlags] -> Maybe (EditorIter editor) -> IDEM (Maybe (EditorIter editor, EditorIter editor))
forwardToLineEndC :: TextEditor editor => EditorIter editor -> IDEM (EditorIter editor)
forwardWordEndC :: TextEditor editor => EditorIter editor -> IDEM (Maybe (EditorIter editor))
getChar :: TextEditor editor => EditorIter editor -> IDEM (Maybe Char)
getCharsInLine :: TextEditor editor => EditorIter editor -> IDEM Int
getLine :: TextEditor editor => EditorIter editor -> IDEM Int
getLineOffset :: TextEditor editor => EditorIter editor -> IDEM Int
getOffset :: TextEditor editor => EditorIter editor -> IDEM Int
isStart :: TextEditor editor => EditorIter editor -> IDEM Bool
isEnd :: TextEditor editor => EditorIter editor -> IDEM Bool
iterEqual :: TextEditor editor => EditorIter editor -> EditorIter editor -> IDEM Bool
startsLine :: TextEditor editor => EditorIter editor -> IDEM Bool
startsWord :: TextEditor editor => EditorIter editor -> IDEM Bool
atEnd :: TextEditor editor => EditorIter editor -> IDEM (EditorIter editor)
atLine :: TextEditor editor => EditorIter editor -> Int -> IDEM (EditorIter editor)
atLineOffset :: TextEditor editor => EditorIter editor -> Int -> IDEM (EditorIter editor)
atOffset :: TextEditor editor => EditorIter editor -> Int -> IDEM (EditorIter editor)
atStart :: TextEditor editor => EditorIter editor -> IDEM (EditorIter editor)
newTag :: TextEditor editor => EditorTagTable editor -> Text -> IDEM (EditorTag editor)
lookupTag :: TextEditor editor => EditorTagTable editor -> Text -> IDEM (Maybe (EditorTag editor))
background :: TextEditor editor => EditorTag editor -> Color -> IDEM ()
underline :: TextEditor editor => EditorTag editor -> Underline -> IDEM ()
data EditorStyle
EditorStyle :: Maybe Text -> Bool -> (Color, Color) -> (Color, Color) -> (Color, Color) -> (Color, Color) -> (Color, Color) -> EditorStyle
styleName :: EditorStyle -> Maybe Text
preferDark :: EditorStyle -> Bool
foundBG :: EditorStyle -> (Color, Color)
matchBG :: EditorStyle -> (Color, Color)
contextBG :: EditorStyle -> (Color, Color)
breakpointBG :: EditorStyle -> (Color, Color)
lintBG :: EditorStyle -> (Color, Color)
updateStyle :: TextEditor editor => EditorBuffer editor -> IDEAction


module IDE.TextEditor.GtkSourceView
class TextEditor editor where data family EditorBuffer editor data family EditorView editor data family EditorMark editor data family EditorIter editor data family EditorTagTable editor data family EditorTag editor
newBuffer :: TextEditor editor => Maybe FilePath -> Text -> IDEM (EditorBuffer editor)
applyTagByName :: TextEditor editor => EditorBuffer editor -> Text -> EditorIter editor -> EditorIter editor -> IDEM ()
beginNotUndoableAction :: TextEditor editor => EditorBuffer editor -> IDEM ()
beginUserAction :: TextEditor editor => EditorBuffer editor -> IDEM ()
canRedo :: TextEditor editor => EditorBuffer editor -> IDEM Bool
canUndo :: TextEditor editor => EditorBuffer editor -> IDEM Bool
copyClipboard :: TextEditor editor => EditorBuffer editor -> Clipboard -> IDEM ()
createMark :: TextEditor editor => EditorView editor -> LogRefType -> EditorIter editor -> Text -> IDEM ()
cutClipboard :: TextEditor editor => EditorBuffer editor -> Clipboard -> Bool -> IDEM ()
delete :: TextEditor editor => EditorBuffer editor -> EditorIter editor -> EditorIter editor -> IDEM ()
deleteSelection :: TextEditor editor => EditorBuffer editor -> IDEM ()
endNotUndoableAction :: TextEditor editor => EditorBuffer editor -> IDEM ()
endUserAction :: TextEditor editor => EditorBuffer editor -> IDEM ()
getEndIter :: TextEditor editor => EditorBuffer editor -> IDEM (EditorIter editor)
getInsertMark :: TextEditor editor => EditorBuffer editor -> IDEM (EditorMark editor)
getIterAtLine :: TextEditor editor => EditorBuffer editor -> Int -> IDEM (EditorIter editor)
getIterAtMark :: TextEditor editor => EditorBuffer editor -> EditorMark editor -> IDEM (EditorIter editor)
getIterAtOffset :: TextEditor editor => EditorBuffer editor -> Int -> IDEM (EditorIter editor)
getLineCount :: TextEditor editor => EditorBuffer editor -> IDEM Int
getModified :: TextEditor editor => EditorBuffer editor -> IDEM Bool
getSelectionBoundMark :: TextEditor editor => EditorBuffer editor -> IDEM (EditorMark editor)
getSelectionBounds :: TextEditor editor => EditorBuffer editor -> IDEM (EditorIter editor, EditorIter editor)
getInsertIter :: TextEditor editor => EditorBuffer editor -> IDEM (EditorIter editor)
getSlice :: TextEditor editor => EditorBuffer editor -> EditorIter editor -> EditorIter editor -> Bool -> IDEM Text
getStartIter :: TextEditor editor => EditorBuffer editor -> IDEM (EditorIter editor)
getTagTable :: TextEditor editor => EditorBuffer editor -> IDEM (EditorTagTable editor)
getText :: TextEditor editor => EditorBuffer editor -> EditorIter editor -> EditorIter editor -> Bool -> IDEM Text
hasSelection :: TextEditor editor => EditorBuffer editor -> IDEM Bool
insert :: TextEditor editor => EditorBuffer editor -> EditorIter editor -> Text -> IDEM ()
newView :: TextEditor editor => EditorBuffer editor -> Maybe Text -> IDEM (EditorView editor)
pasteClipboard :: TextEditor editor => EditorBuffer editor -> Clipboard -> EditorIter editor -> Bool -> IDEM ()
placeCursor :: TextEditor editor => EditorBuffer editor -> EditorIter editor -> IDEM ()
redo :: TextEditor editor => EditorBuffer editor -> IDEM ()
removeTagByName :: TextEditor editor => EditorBuffer editor -> Text -> IDEM ()
selectRange :: TextEditor editor => EditorBuffer editor -> EditorIter editor -> EditorIter editor -> IDEM ()
setModified :: TextEditor editor => EditorBuffer editor -> Bool -> IDEM ()
setStyle :: TextEditor editor => EditorBuffer editor -> EditorStyle -> IDEM ()
setText :: TextEditor editor => EditorBuffer editor -> Text -> IDEM ()
undo :: TextEditor editor => EditorBuffer editor -> IDEM ()
afterModifiedChanged :: TextEditor editor => EditorBuffer editor -> IDEM () -> IDEM [Connection]
bufferToWindowCoords :: TextEditor editor => EditorView editor -> (Int, Int) -> IDEM (Int, Int)
drawTabs :: TextEditor editor => EditorView editor -> IDEM ()
getBuffer :: TextEditor editor => EditorView editor -> IDEM (EditorBuffer editor)
getWindow :: TextEditor editor => EditorView editor -> IDEM (Maybe DrawWindow)
getIterAtLocation :: TextEditor editor => EditorView editor -> Int -> Int -> IDEM (EditorIter editor)
getIterLocation :: TextEditor editor => EditorView editor -> EditorIter editor -> IDEM Rectangle
getOverwrite :: TextEditor editor => EditorView editor -> IDEM Bool
getScrolledWindow :: TextEditor editor => EditorView editor -> IDEM ScrolledWindow
getEditorWidget :: TextEditor editor => EditorView editor -> IDEM Widget
grabFocus :: TextEditor editor => EditorView editor -> IDEM ()
scrollToMark :: TextEditor editor => EditorView editor -> EditorMark editor -> Double -> Maybe (Double, Double) -> IDEM ()
scrollToIter :: TextEditor editor => EditorView editor -> EditorIter editor -> Double -> Maybe (Double, Double) -> IDEM ()
setFont :: TextEditor editor => EditorView editor -> Maybe Text -> IDEM ()
setIndentWidth :: TextEditor editor => EditorView editor -> Int -> IDEM ()
setWrapMode :: TextEditor editor => EditorView editor -> Bool -> IDEM ()
setRightMargin :: TextEditor editor => EditorView editor -> Maybe Int -> IDEM ()
setShowLineNumbers :: TextEditor editor => EditorView editor -> Bool -> IDEM ()
setTabWidth :: TextEditor editor => EditorView editor -> Int -> IDEM ()
afterFocusIn :: TextEditor editor => EditorView editor -> IDEM () -> IDEM [Connection]
afterMoveCursor :: TextEditor editor => EditorView editor -> IDEM () -> IDEM [Connection]
afterToggleOverwrite :: TextEditor editor => EditorView editor -> IDEM () -> IDEM [Connection]
onButtonPress :: TextEditor editor => EditorView editor -> IDEEventM EButton Bool -> IDEM [Connection]
onButtonRelease :: TextEditor editor => EditorView editor -> IDEEventM EButton Bool -> IDEM [Connection]
onCompletion :: TextEditor editor => EditorView editor -> IDEM () -> IDEM () -> IDEM [Connection]
onKeyPress :: TextEditor editor => EditorView editor -> IDEEventM EKey Bool -> IDEM [Connection]
onMotionNotify :: TextEditor editor => EditorView editor -> IDEEventM EMotion Bool -> IDEM [Connection]
onLeaveNotify :: TextEditor editor => EditorView editor -> IDEEventM ECrossing Bool -> IDEM [Connection]
onKeyRelease :: TextEditor editor => EditorView editor -> IDEEventM EKey Bool -> IDEM [Connection]
onLookupInfo :: TextEditor editor => EditorView editor -> IDEEventM EButton Bool -> IDEM [Connection]
onMotionNotifyEvent :: TextEditor editor => EditorView editor -> IDEEventM EMotion Bool -> IDEM [Connection]
onPopulatePopup :: TextEditor editor => EditorView editor -> (Menu -> IDEM ()) -> IDEM [Connection]
onSelectionChanged :: TextEditor editor => EditorBuffer editor -> IDEM () -> IDEM [Connection]
backwardCharC :: TextEditor editor => EditorIter editor -> IDEM (EditorIter editor)
backwardFindCharC :: TextEditor editor => EditorIter editor -> (Char -> Bool) -> Maybe (EditorIter editor) -> IDEM (Maybe (EditorIter editor))
backwardWordStartC :: TextEditor editor => EditorIter editor -> IDEM (Maybe (EditorIter editor))
backwardToLineStartC :: TextEditor editor => EditorIter editor -> IDEM (EditorIter editor)
endsWord :: TextEditor editor => EditorIter editor -> IDEM Bool
forwardCharC :: TextEditor editor => EditorIter editor -> IDEM (EditorIter editor)
forwardCharsC :: TextEditor editor => EditorIter editor -> Int -> IDEM (EditorIter editor)
forwardFindCharC :: TextEditor editor => EditorIter editor -> (Char -> Bool) -> Maybe (EditorIter editor) -> IDEM (Maybe (EditorIter editor))
forwardSearch :: TextEditor editor => EditorIter editor -> Text -> [TextSearchFlags] -> Maybe (EditorIter editor) -> IDEM (Maybe (EditorIter editor, EditorIter editor))
forwardToLineEndC :: TextEditor editor => EditorIter editor -> IDEM (EditorIter editor)
forwardWordEndC :: TextEditor editor => EditorIter editor -> IDEM (Maybe (EditorIter editor))
getChar :: TextEditor editor => EditorIter editor -> IDEM (Maybe Char)
getCharsInLine :: TextEditor editor => EditorIter editor -> IDEM Int
getLine :: TextEditor editor => EditorIter editor -> IDEM Int
getLineOffset :: TextEditor editor => EditorIter editor -> IDEM Int
getOffset :: TextEditor editor => EditorIter editor -> IDEM Int
isStart :: TextEditor editor => EditorIter editor -> IDEM Bool
isEnd :: TextEditor editor => EditorIter editor -> IDEM Bool
iterEqual :: TextEditor editor => EditorIter editor -> EditorIter editor -> IDEM Bool
startsLine :: TextEditor editor => EditorIter editor -> IDEM Bool
startsWord :: TextEditor editor => EditorIter editor -> IDEM Bool
atEnd :: TextEditor editor => EditorIter editor -> IDEM (EditorIter editor)
atLine :: TextEditor editor => EditorIter editor -> Int -> IDEM (EditorIter editor)
atLineOffset :: TextEditor editor => EditorIter editor -> Int -> IDEM (EditorIter editor)
atOffset :: TextEditor editor => EditorIter editor -> Int -> IDEM (EditorIter editor)
atStart :: TextEditor editor => EditorIter editor -> IDEM (EditorIter editor)
newTag :: TextEditor editor => EditorTagTable editor -> Text -> IDEM (EditorTag editor)
lookupTag :: TextEditor editor => EditorTagTable editor -> Text -> IDEM (Maybe (EditorTag editor))
background :: TextEditor editor => EditorTag editor -> Color -> IDEM ()
underline :: TextEditor editor => EditorTag editor -> Underline -> IDEM ()
data GtkSourceView
GtkSourceView :: GtkSourceView
newGtkBuffer :: Maybe FilePath -> Text -> IDEM (EditorBuffer GtkSourceView)
instance Typeable GtkSourceView
instance Show GtkSourceView
instance TextEditor GtkSourceView


module IDE.TextEditor.CodeMirror
data CodeMirror
CodeMirror :: CodeMirror
class TextEditor editor where data family EditorBuffer editor data family EditorView editor data family EditorMark editor data family EditorIter editor data family EditorTagTable editor data family EditorTag editor
newBuffer :: TextEditor editor => Maybe FilePath -> Text -> IDEM (EditorBuffer editor)
applyTagByName :: TextEditor editor => EditorBuffer editor -> Text -> EditorIter editor -> EditorIter editor -> IDEM ()
beginNotUndoableAction :: TextEditor editor => EditorBuffer editor -> IDEM ()
beginUserAction :: TextEditor editor => EditorBuffer editor -> IDEM ()
canRedo :: TextEditor editor => EditorBuffer editor -> IDEM Bool
canUndo :: TextEditor editor => EditorBuffer editor -> IDEM Bool
copyClipboard :: TextEditor editor => EditorBuffer editor -> Clipboard -> IDEM ()
createMark :: TextEditor editor => EditorView editor -> LogRefType -> EditorIter editor -> Text -> IDEM ()
cutClipboard :: TextEditor editor => EditorBuffer editor -> Clipboard -> Bool -> IDEM ()
delete :: TextEditor editor => EditorBuffer editor -> EditorIter editor -> EditorIter editor -> IDEM ()
deleteSelection :: TextEditor editor => EditorBuffer editor -> IDEM ()
endNotUndoableAction :: TextEditor editor => EditorBuffer editor -> IDEM ()
endUserAction :: TextEditor editor => EditorBuffer editor -> IDEM ()
getEndIter :: TextEditor editor => EditorBuffer editor -> IDEM (EditorIter editor)
getInsertMark :: TextEditor editor => EditorBuffer editor -> IDEM (EditorMark editor)
getIterAtLine :: TextEditor editor => EditorBuffer editor -> Int -> IDEM (EditorIter editor)
getIterAtMark :: TextEditor editor => EditorBuffer editor -> EditorMark editor -> IDEM (EditorIter editor)
getIterAtOffset :: TextEditor editor => EditorBuffer editor -> Int -> IDEM (EditorIter editor)
getLineCount :: TextEditor editor => EditorBuffer editor -> IDEM Int
getModified :: TextEditor editor => EditorBuffer editor -> IDEM Bool
getSelectionBoundMark :: TextEditor editor => EditorBuffer editor -> IDEM (EditorMark editor)
getSelectionBounds :: TextEditor editor => EditorBuffer editor -> IDEM (EditorIter editor, EditorIter editor)
getInsertIter :: TextEditor editor => EditorBuffer editor -> IDEM (EditorIter editor)
getSlice :: TextEditor editor => EditorBuffer editor -> EditorIter editor -> EditorIter editor -> Bool -> IDEM Text
getStartIter :: TextEditor editor => EditorBuffer editor -> IDEM (EditorIter editor)
getTagTable :: TextEditor editor => EditorBuffer editor -> IDEM (EditorTagTable editor)
getText :: TextEditor editor => EditorBuffer editor -> EditorIter editor -> EditorIter editor -> Bool -> IDEM Text
hasSelection :: TextEditor editor => EditorBuffer editor -> IDEM Bool
insert :: TextEditor editor => EditorBuffer editor -> EditorIter editor -> Text -> IDEM ()
newView :: TextEditor editor => EditorBuffer editor -> Maybe Text -> IDEM (EditorView editor)
pasteClipboard :: TextEditor editor => EditorBuffer editor -> Clipboard -> EditorIter editor -> Bool -> IDEM ()
placeCursor :: TextEditor editor => EditorBuffer editor -> EditorIter editor -> IDEM ()
redo :: TextEditor editor => EditorBuffer editor -> IDEM ()
removeTagByName :: TextEditor editor => EditorBuffer editor -> Text -> IDEM ()
selectRange :: TextEditor editor => EditorBuffer editor -> EditorIter editor -> EditorIter editor -> IDEM ()
setModified :: TextEditor editor => EditorBuffer editor -> Bool -> IDEM ()
setStyle :: TextEditor editor => EditorBuffer editor -> EditorStyle -> IDEM ()
setText :: TextEditor editor => EditorBuffer editor -> Text -> IDEM ()
undo :: TextEditor editor => EditorBuffer editor -> IDEM ()
afterModifiedChanged :: TextEditor editor => EditorBuffer editor -> IDEM () -> IDEM [Connection]
bufferToWindowCoords :: TextEditor editor => EditorView editor -> (Int, Int) -> IDEM (Int, Int)
drawTabs :: TextEditor editor => EditorView editor -> IDEM ()
getBuffer :: TextEditor editor => EditorView editor -> IDEM (EditorBuffer editor)
getWindow :: TextEditor editor => EditorView editor -> IDEM (Maybe DrawWindow)
getIterAtLocation :: TextEditor editor => EditorView editor -> Int -> Int -> IDEM (EditorIter editor)
getIterLocation :: TextEditor editor => EditorView editor -> EditorIter editor -> IDEM Rectangle
getOverwrite :: TextEditor editor => EditorView editor -> IDEM Bool
getScrolledWindow :: TextEditor editor => EditorView editor -> IDEM ScrolledWindow
getEditorWidget :: TextEditor editor => EditorView editor -> IDEM Widget
grabFocus :: TextEditor editor => EditorView editor -> IDEM ()
scrollToMark :: TextEditor editor => EditorView editor -> EditorMark editor -> Double -> Maybe (Double, Double) -> IDEM ()
scrollToIter :: TextEditor editor => EditorView editor -> EditorIter editor -> Double -> Maybe (Double, Double) -> IDEM ()
setFont :: TextEditor editor => EditorView editor -> Maybe Text -> IDEM ()
setIndentWidth :: TextEditor editor => EditorView editor -> Int -> IDEM ()
setWrapMode :: TextEditor editor => EditorView editor -> Bool -> IDEM ()
setRightMargin :: TextEditor editor => EditorView editor -> Maybe Int -> IDEM ()
setShowLineNumbers :: TextEditor editor => EditorView editor -> Bool -> IDEM ()
setTabWidth :: TextEditor editor => EditorView editor -> Int -> IDEM ()
afterFocusIn :: TextEditor editor => EditorView editor -> IDEM () -> IDEM [Connection]
afterMoveCursor :: TextEditor editor => EditorView editor -> IDEM () -> IDEM [Connection]
afterToggleOverwrite :: TextEditor editor => EditorView editor -> IDEM () -> IDEM [Connection]
onButtonPress :: TextEditor editor => EditorView editor -> IDEEventM EButton Bool -> IDEM [Connection]
onButtonRelease :: TextEditor editor => EditorView editor -> IDEEventM EButton Bool -> IDEM [Connection]
onCompletion :: TextEditor editor => EditorView editor -> IDEM () -> IDEM () -> IDEM [Connection]
onKeyPress :: TextEditor editor => EditorView editor -> IDEEventM EKey Bool -> IDEM [Connection]
onMotionNotify :: TextEditor editor => EditorView editor -> IDEEventM EMotion Bool -> IDEM [Connection]
onLeaveNotify :: TextEditor editor => EditorView editor -> IDEEventM ECrossing Bool -> IDEM [Connection]
onKeyRelease :: TextEditor editor => EditorView editor -> IDEEventM EKey Bool -> IDEM [Connection]
onLookupInfo :: TextEditor editor => EditorView editor -> IDEEventM EButton Bool -> IDEM [Connection]
onMotionNotifyEvent :: TextEditor editor => EditorView editor -> IDEEventM EMotion Bool -> IDEM [Connection]
onPopulatePopup :: TextEditor editor => EditorView editor -> (Menu -> IDEM ()) -> IDEM [Connection]
onSelectionChanged :: TextEditor editor => EditorBuffer editor -> IDEM () -> IDEM [Connection]
backwardCharC :: TextEditor editor => EditorIter editor -> IDEM (EditorIter editor)
backwardFindCharC :: TextEditor editor => EditorIter editor -> (Char -> Bool) -> Maybe (EditorIter editor) -> IDEM (Maybe (EditorIter editor))
backwardWordStartC :: TextEditor editor => EditorIter editor -> IDEM (Maybe (EditorIter editor))
backwardToLineStartC :: TextEditor editor => EditorIter editor -> IDEM (EditorIter editor)
endsWord :: TextEditor editor => EditorIter editor -> IDEM Bool
forwardCharC :: TextEditor editor => EditorIter editor -> IDEM (EditorIter editor)
forwardCharsC :: TextEditor editor => EditorIter editor -> Int -> IDEM (EditorIter editor)
forwardFindCharC :: TextEditor editor => EditorIter editor -> (Char -> Bool) -> Maybe (EditorIter editor) -> IDEM (Maybe (EditorIter editor))
forwardSearch :: TextEditor editor => EditorIter editor -> Text -> [TextSearchFlags] -> Maybe (EditorIter editor) -> IDEM (Maybe (EditorIter editor, EditorIter editor))
forwardToLineEndC :: TextEditor editor => EditorIter editor -> IDEM (EditorIter editor)
forwardWordEndC :: TextEditor editor => EditorIter editor -> IDEM (Maybe (EditorIter editor))
getChar :: TextEditor editor => EditorIter editor -> IDEM (Maybe Char)
getCharsInLine :: TextEditor editor => EditorIter editor -> IDEM Int
getLine :: TextEditor editor => EditorIter editor -> IDEM Int
getLineOffset :: TextEditor editor => EditorIter editor -> IDEM Int
getOffset :: TextEditor editor => EditorIter editor -> IDEM Int
isStart :: TextEditor editor => EditorIter editor -> IDEM Bool
isEnd :: TextEditor editor => EditorIter editor -> IDEM Bool
iterEqual :: TextEditor editor => EditorIter editor -> EditorIter editor -> IDEM Bool
startsLine :: TextEditor editor => EditorIter editor -> IDEM Bool
startsWord :: TextEditor editor => EditorIter editor -> IDEM Bool
atEnd :: TextEditor editor => EditorIter editor -> IDEM (EditorIter editor)
atLine :: TextEditor editor => EditorIter editor -> Int -> IDEM (EditorIter editor)
atLineOffset :: TextEditor editor => EditorIter editor -> Int -> IDEM (EditorIter editor)
atOffset :: TextEditor editor => EditorIter editor -> Int -> IDEM (EditorIter editor)
atStart :: TextEditor editor => EditorIter editor -> IDEM (EditorIter editor)
newTag :: TextEditor editor => EditorTagTable editor -> Text -> IDEM (EditorTag editor)
lookupTag :: TextEditor editor => EditorTagTable editor -> Text -> IDEM (Maybe (EditorTag editor))
background :: TextEditor editor => EditorTag editor -> Color -> IDEM ()
underline :: TextEditor editor => EditorTag editor -> Underline -> IDEM ()
newCMBuffer :: Maybe FilePath -> Text -> IDEM (EditorBuffer CodeMirror)
instance Typeable CodeMirror
instance Show CodeMirror
instance TextEditor CodeMirror


module IDE.TextEditor
class TextEditor editor where data family EditorBuffer editor data family EditorView editor data family EditorMark editor data family EditorIter editor data family EditorTagTable editor data family EditorTag editor
newBuffer :: TextEditor editor => Maybe FilePath -> Text -> IDEM (EditorBuffer editor)
applyTagByName :: TextEditor editor => EditorBuffer editor -> Text -> EditorIter editor -> EditorIter editor -> IDEM ()
beginNotUndoableAction :: TextEditor editor => EditorBuffer editor -> IDEM ()
beginUserAction :: TextEditor editor => EditorBuffer editor -> IDEM ()
canRedo :: TextEditor editor => EditorBuffer editor -> IDEM Bool
canUndo :: TextEditor editor => EditorBuffer editor -> IDEM Bool
copyClipboard :: TextEditor editor => EditorBuffer editor -> Clipboard -> IDEM ()
createMark :: TextEditor editor => EditorView editor -> LogRefType -> EditorIter editor -> Text -> IDEM ()
cutClipboard :: TextEditor editor => EditorBuffer editor -> Clipboard -> Bool -> IDEM ()
delete :: TextEditor editor => EditorBuffer editor -> EditorIter editor -> EditorIter editor -> IDEM ()
deleteSelection :: TextEditor editor => EditorBuffer editor -> IDEM ()
endNotUndoableAction :: TextEditor editor => EditorBuffer editor -> IDEM ()
endUserAction :: TextEditor editor => EditorBuffer editor -> IDEM ()
getEndIter :: TextEditor editor => EditorBuffer editor -> IDEM (EditorIter editor)
getInsertMark :: TextEditor editor => EditorBuffer editor -> IDEM (EditorMark editor)
getIterAtLine :: TextEditor editor => EditorBuffer editor -> Int -> IDEM (EditorIter editor)
getIterAtMark :: TextEditor editor => EditorBuffer editor -> EditorMark editor -> IDEM (EditorIter editor)
getIterAtOffset :: TextEditor editor => EditorBuffer editor -> Int -> IDEM (EditorIter editor)
getLineCount :: TextEditor editor => EditorBuffer editor -> IDEM Int
getModified :: TextEditor editor => EditorBuffer editor -> IDEM Bool
getSelectionBoundMark :: TextEditor editor => EditorBuffer editor -> IDEM (EditorMark editor)
getSelectionBounds :: TextEditor editor => EditorBuffer editor -> IDEM (EditorIter editor, EditorIter editor)
getInsertIter :: TextEditor editor => EditorBuffer editor -> IDEM (EditorIter editor)
getSlice :: TextEditor editor => EditorBuffer editor -> EditorIter editor -> EditorIter editor -> Bool -> IDEM Text
getStartIter :: TextEditor editor => EditorBuffer editor -> IDEM (EditorIter editor)
getTagTable :: TextEditor editor => EditorBuffer editor -> IDEM (EditorTagTable editor)
getText :: TextEditor editor => EditorBuffer editor -> EditorIter editor -> EditorIter editor -> Bool -> IDEM Text
hasSelection :: TextEditor editor => EditorBuffer editor -> IDEM Bool
insert :: TextEditor editor => EditorBuffer editor -> EditorIter editor -> Text -> IDEM ()
newView :: TextEditor editor => EditorBuffer editor -> Maybe Text -> IDEM (EditorView editor)
pasteClipboard :: TextEditor editor => EditorBuffer editor -> Clipboard -> EditorIter editor -> Bool -> IDEM ()
placeCursor :: TextEditor editor => EditorBuffer editor -> EditorIter editor -> IDEM ()
redo :: TextEditor editor => EditorBuffer editor -> IDEM ()
removeTagByName :: TextEditor editor => EditorBuffer editor -> Text -> IDEM ()
selectRange :: TextEditor editor => EditorBuffer editor -> EditorIter editor -> EditorIter editor -> IDEM ()
setModified :: TextEditor editor => EditorBuffer editor -> Bool -> IDEM ()
setStyle :: TextEditor editor => EditorBuffer editor -> EditorStyle -> IDEM ()
setText :: TextEditor editor => EditorBuffer editor -> Text -> IDEM ()
undo :: TextEditor editor => EditorBuffer editor -> IDEM ()
afterModifiedChanged :: TextEditor editor => EditorBuffer editor -> IDEM () -> IDEM [Connection]
bufferToWindowCoords :: TextEditor editor => EditorView editor -> (Int, Int) -> IDEM (Int, Int)
drawTabs :: TextEditor editor => EditorView editor -> IDEM ()
getBuffer :: TextEditor editor => EditorView editor -> IDEM (EditorBuffer editor)
getWindow :: TextEditor editor => EditorView editor -> IDEM (Maybe DrawWindow)
getIterAtLocation :: TextEditor editor => EditorView editor -> Int -> Int -> IDEM (EditorIter editor)
getIterLocation :: TextEditor editor => EditorView editor -> EditorIter editor -> IDEM Rectangle
getOverwrite :: TextEditor editor => EditorView editor -> IDEM Bool
getScrolledWindow :: TextEditor editor => EditorView editor -> IDEM ScrolledWindow
getEditorWidget :: TextEditor editor => EditorView editor -> IDEM Widget
grabFocus :: TextEditor editor => EditorView editor -> IDEM ()
scrollToMark :: TextEditor editor => EditorView editor -> EditorMark editor -> Double -> Maybe (Double, Double) -> IDEM ()
scrollToIter :: TextEditor editor => EditorView editor -> EditorIter editor -> Double -> Maybe (Double, Double) -> IDEM ()
setFont :: TextEditor editor => EditorView editor -> Maybe Text -> IDEM ()
setIndentWidth :: TextEditor editor => EditorView editor -> Int -> IDEM ()
setWrapMode :: TextEditor editor => EditorView editor -> Bool -> IDEM ()
setRightMargin :: TextEditor editor => EditorView editor -> Maybe Int -> IDEM ()
setShowLineNumbers :: TextEditor editor => EditorView editor -> Bool -> IDEM ()
setTabWidth :: TextEditor editor => EditorView editor -> Int -> IDEM ()
afterFocusIn :: TextEditor editor => EditorView editor -> IDEM () -> IDEM [Connection]
afterMoveCursor :: TextEditor editor => EditorView editor -> IDEM () -> IDEM [Connection]
afterToggleOverwrite :: TextEditor editor => EditorView editor -> IDEM () -> IDEM [Connection]
onButtonPress :: TextEditor editor => EditorView editor -> IDEEventM EButton Bool -> IDEM [Connection]
onButtonRelease :: TextEditor editor => EditorView editor -> IDEEventM EButton Bool -> IDEM [Connection]
onCompletion :: TextEditor editor => EditorView editor -> IDEM () -> IDEM () -> IDEM [Connection]
onKeyPress :: TextEditor editor => EditorView editor -> IDEEventM EKey Bool -> IDEM [Connection]
onMotionNotify :: TextEditor editor => EditorView editor -> IDEEventM EMotion Bool -> IDEM [Connection]
onLeaveNotify :: TextEditor editor => EditorView editor -> IDEEventM ECrossing Bool -> IDEM [Connection]
onKeyRelease :: TextEditor editor => EditorView editor -> IDEEventM EKey Bool -> IDEM [Connection]
onLookupInfo :: TextEditor editor => EditorView editor -> IDEEventM EButton Bool -> IDEM [Connection]
onMotionNotifyEvent :: TextEditor editor => EditorView editor -> IDEEventM EMotion Bool -> IDEM [Connection]
onPopulatePopup :: TextEditor editor => EditorView editor -> (Menu -> IDEM ()) -> IDEM [Connection]
onSelectionChanged :: TextEditor editor => EditorBuffer editor -> IDEM () -> IDEM [Connection]
backwardCharC :: TextEditor editor => EditorIter editor -> IDEM (EditorIter editor)
backwardFindCharC :: TextEditor editor => EditorIter editor -> (Char -> Bool) -> Maybe (EditorIter editor) -> IDEM (Maybe (EditorIter editor))
backwardWordStartC :: TextEditor editor => EditorIter editor -> IDEM (Maybe (EditorIter editor))
backwardToLineStartC :: TextEditor editor => EditorIter editor -> IDEM (EditorIter editor)
endsWord :: TextEditor editor => EditorIter editor -> IDEM Bool
forwardCharC :: TextEditor editor => EditorIter editor -> IDEM (EditorIter editor)
forwardCharsC :: TextEditor editor => EditorIter editor -> Int -> IDEM (EditorIter editor)
forwardFindCharC :: TextEditor editor => EditorIter editor -> (Char -> Bool) -> Maybe (EditorIter editor) -> IDEM (Maybe (EditorIter editor))
forwardSearch :: TextEditor editor => EditorIter editor -> Text -> [TextSearchFlags] -> Maybe (EditorIter editor) -> IDEM (Maybe (EditorIter editor, EditorIter editor))
forwardToLineEndC :: TextEditor editor => EditorIter editor -> IDEM (EditorIter editor)
forwardWordEndC :: TextEditor editor => EditorIter editor -> IDEM (Maybe (EditorIter editor))
getChar :: TextEditor editor => EditorIter editor -> IDEM (Maybe Char)
getCharsInLine :: TextEditor editor => EditorIter editor -> IDEM Int
getLine :: TextEditor editor => EditorIter editor -> IDEM Int
getLineOffset :: TextEditor editor => EditorIter editor -> IDEM Int
getOffset :: TextEditor editor => EditorIter editor -> IDEM Int
isStart :: TextEditor editor => EditorIter editor -> IDEM Bool
isEnd :: TextEditor editor => EditorIter editor -> IDEM Bool
iterEqual :: TextEditor editor => EditorIter editor -> EditorIter editor -> IDEM Bool
startsLine :: TextEditor editor => EditorIter editor -> IDEM Bool
startsWord :: TextEditor editor => EditorIter editor -> IDEM Bool
atEnd :: TextEditor editor => EditorIter editor -> IDEM (EditorIter editor)
atLine :: TextEditor editor => EditorIter editor -> Int -> IDEM (EditorIter editor)
atLineOffset :: TextEditor editor => EditorIter editor -> Int -> IDEM (EditorIter editor)
atOffset :: TextEditor editor => EditorIter editor -> Int -> IDEM (EditorIter editor)
atStart :: TextEditor editor => EditorIter editor -> IDEM (EditorIter editor)
newTag :: TextEditor editor => EditorTagTable editor -> Text -> IDEM (EditorTag editor)
lookupTag :: TextEditor editor => EditorTagTable editor -> Text -> IDEM (Maybe (EditorTag editor))
background :: TextEditor editor => EditorTag editor -> Color -> IDEM ()
underline :: TextEditor editor => EditorTag editor -> Underline -> IDEM ()
newDefaultBuffer :: Maybe FilePath -> Text -> IDEM (EditorBuffer GtkSourceView)
newYiBuffer :: Maybe FilePath -> Text -> IDEM (EditorBuffer GtkSourceView)


module IDE.SourceCandy
parseCandy :: FilePath -> IO CandyTable
transformToCandy :: TextEditor editor => CandyTable -> EditorBuffer editor -> (Text -> Bool) -> IDEM ()
transformFromCandy :: TextEditor editor => CandyTable -> EditorBuffer editor -> IDEM ()
keystrokeCandy :: TextEditor editor => CandyTable -> Maybe Char -> EditorBuffer editor -> (Text -> Bool) -> IDEM ()
getCandylessText :: TextEditor editor => CandyTable -> EditorBuffer editor -> IDEM Text
getCandylessPart :: TextEditor editor => CandyTable -> EditorBuffer editor -> EditorIter editor -> EditorIter editor -> IDEM Text
stringToCandy :: CandyTable -> Text -> IDEM Text
positionToCandy :: TextEditor editor => CandyTable -> EditorBuffer editor -> (Int, Int) -> IDEM (Int, Int)
positionFromCandy :: TextEditor editor => CandyTable -> EditorBuffer editor -> (Int, Int) -> IDEM (Int, Int)


module IDE.BufferMode

-- | A text editor pane description
data IDEBuffer
IDEBuffer :: Maybe FilePath -> Text -> Int -> EditorView editor -> ScrolledWindow -> IORef (Maybe UTCTime) -> Mode -> IDEBuffer
fileName :: IDEBuffer -> Maybe FilePath
bufferName :: IDEBuffer -> Text
addedIndex :: IDEBuffer -> Int
sourceView :: IDEBuffer -> EditorView editor
scrolledWindow :: IDEBuffer -> ScrolledWindow
modTime :: IDEBuffer -> IORef (Maybe UTCTime)
mode :: IDEBuffer -> Mode
data BufferState
BufferState :: FilePath -> Int -> BufferState
BufferStateTrans :: Text -> Text -> Int -> BufferState
maybeActiveBuf :: IDEM (Maybe IDEBuffer)
lastActiveBufferPane :: IDEM (Maybe PaneName)
recentSourceBuffers :: IDEM [PaneName]
getStartAndEndLineOfSelection :: TextEditor editor => EditorBuffer editor -> IDEM (Int, Int)
inBufContext :: MonadIDE m => alpha -> IDEBuffer -> (forall editor. TextEditor editor => Notebook -> EditorView editor -> EditorBuffer editor -> IDEBuffer -> Int -> m alpha) -> m alpha
inActiveBufContext :: alpha -> (forall editor. TextEditor editor => Notebook -> EditorView editor -> EditorBuffer editor -> IDEBuffer -> Int -> IDEM alpha) -> IDEM alpha
doForSelectedLines :: [a] -> (forall editor. TextEditor editor => EditorBuffer editor -> Int -> IDEM a) -> IDEM [a]
data Mode
Mode :: Text -> IDEAction -> IDEAction -> IDEM (Maybe Text) -> ((Text -> Bool) -> IDEAction) -> (forall editor. TextEditor editor => (Text -> Bool) -> EditorBuffer editor -> IDEAction) -> IDEAction -> (Maybe Char -> (Text -> Bool) -> IDEAction) -> (forall editor. TextEditor editor => Text -> EditorIter editor -> EditorBuffer editor -> IDEAction) -> (Text -> Bool) -> Mode
modeName :: Mode -> Text
modeEditComment :: Mode -> IDEAction
modeEditUncomment :: Mode -> IDEAction
modeSelectedModuleName :: Mode -> IDEM (Maybe Text)
modeEditToCandy :: Mode -> (Text -> Bool) -> IDEAction
modeTransformToCandy :: Mode -> forall editor. TextEditor editor => (Text -> Bool) -> EditorBuffer editor -> IDEAction
modeEditFromCandy :: Mode -> IDEAction
modeEditKeystrokeCandy :: Mode -> Maybe Char -> (Text -> Bool) -> IDEAction
modeEditInsertCode :: Mode -> forall editor. TextEditor editor => Text -> EditorIter editor -> EditorBuffer editor -> IDEAction
modeEditInCommentOrString :: Mode -> Text -> Bool

-- | Assumes
modFromFileName :: Maybe FilePath -> Mode
haskellMode :: Mode
literalHaskellMode :: Mode
cabalMode :: Mode
otherMode :: Mode
isHaskellMode :: Mode -> Bool
withCurrentMode :: alpha -> (Mode -> IDEM alpha) -> IDEM alpha
editComment :: IDEAction
editUncomment :: IDEAction
selectedModuleName :: IDEM (Maybe Text)
editToCandy :: IDEAction
editFromCandy :: IDEAction
editKeystrokeCandy :: Maybe Char -> IDEAction
editInsertCode :: TextEditor editor => EditorBuffer editor -> EditorIter editor -> Text -> IDEAction
instance Typeable BufferState
instance Typeable IDEBuffer
instance Eq BufferState
instance Ord BufferState
instance Read BufferState
instance Show BufferState
instance Pane IDEBuffer IDEM


module IDE.Completion
complete :: TextEditor editor => EditorView editor -> Bool -> IDEAction
cancel :: IDEAction
setCompletionSize :: (Int, Int) -> IDEAction


-- | The source editor part of Leksah
module IDE.SymbolNavigation
createHyperLinkSupport :: TextEditor editor => EditorView editor -> ScrolledWindow -> (Bool -> Bool -> EditorIter editor -> IDEM (EditorIter editor, EditorIter editor)) -> (Bool -> Bool -> Text -> IDEM ()) -> IDEM [Connection]
mapControlCommand :: t -> t
instance Ord Locality
instance Eq Locality
instance Show Locality


-- | The source editor part of Leksah
module IDE.Pane.SourceBuffer

-- | A text editor pane description
data IDEBuffer
IDEBuffer :: Maybe FilePath -> Text -> Int -> EditorView editor -> ScrolledWindow -> IORef (Maybe UTCTime) -> Mode -> IDEBuffer
fileName :: IDEBuffer -> Maybe FilePath
bufferName :: IDEBuffer -> Text
addedIndex :: IDEBuffer -> Int
sourceView :: IDEBuffer -> EditorView editor
scrolledWindow :: IDEBuffer -> ScrolledWindow
modTime :: IDEBuffer -> IORef (Maybe UTCTime)
mode :: IDEBuffer -> Mode
data BufferState
BufferState :: FilePath -> Int -> BufferState
BufferStateTrans :: Text -> Text -> Int -> BufferState
allBuffers :: MonadIDE m => m [IDEBuffer]
maybeActiveBuf :: IDEM (Maybe IDEBuffer)
selectSourceBuf :: FilePath -> ReaderT IDERef IO (Maybe IDEBuffer)
goToSourceDefinition :: FilePath -> Location -> IDEM (Maybe IDEBuffer)
goToSourceDefinition' :: FilePath -> Location -> IDEM (Maybe IDEBuffer)
goToDefinition :: Descr -> IDEAction
insertInBuffer :: Descr -> IDEAction
fileNew :: IDEAction
fileOpenThis :: FilePath -> IDEAction
fileOpen :: IDEAction
filePrint :: IDEAction
fileRevert :: IDEAction
fileClose :: IDEM Bool
fileCloseAll :: (IDEBuffer -> IDEM Bool) -> IDEM Bool
fileCloseAllButPackage :: IDEAction
fileCloseAllButWorkspace :: IDEAction
fileSave :: Bool -> IDEM Bool
fileSaveAll :: MonadIDE m => (IDEBuffer -> m Bool) -> m Bool
fileSaveBuffer :: MonadIDE m => TextEditor editor => Bool -> Notebook -> EditorView editor -> EditorBuffer editor -> IDEBuffer -> Int -> m Bool
fileCheckAll :: MonadIDE m => (IDEBuffer -> m [alpha]) -> m [alpha]
editUndo :: IDEAction
editRedo :: IDEAction
editCut :: IDEAction
editCopy :: IDEAction
editPaste :: IDEAction
editDelete :: IDEAction
editSelectAll :: IDEAction
editComment :: IDEAction
editUncomment :: IDEAction
editShiftRight :: IDEAction
editShiftLeft :: IDEAction
editToCandy :: IDEAction
editFromCandy :: IDEAction
editKeystrokeCandy :: Maybe Char -> IDEAction
editCandy :: ReaderT IDERef IO ()
updateStyle :: TextEditor editor => EditorBuffer editor -> IDEAction
updateStyle' :: IDEBuffer -> IDEAction
addLogRef :: Bool -> Bool -> LogRef -> IDEAction
removeLogRefs :: (FilePath -> FilePath -> Bool) -> [LogRefType] -> IDEAction
removeBuildLogRefs :: FilePath -> FilePath -> IDEAction
removeTestLogRefs :: FilePath -> IDEAction
removeLintLogRefs :: FilePath -> FilePath -> IDEAction
markRefInSourceBuf :: IDEBuffer -> LogRef -> Bool -> IDEAction
inBufContext :: MonadIDE m => alpha -> IDEBuffer -> (forall editor. TextEditor editor => Notebook -> EditorView editor -> EditorBuffer editor -> IDEBuffer -> Int -> m alpha) -> m alpha
inActiveBufContext :: alpha -> (forall editor. TextEditor editor => Notebook -> EditorView editor -> EditorBuffer editor -> IDEBuffer -> Int -> IDEM alpha) -> IDEM alpha
align :: Char -> IDEAction
startComplete :: ReaderT IDERef IO ()
selectedText :: IDEM (Maybe Text)
selectedTextOrCurrentLine :: IDEM (Maybe Text)
insertTextAfterSelection :: Text -> IDEAction
selectedModuleName :: IDEM (Maybe Text)
selectedLocation :: IDEM (Maybe (Int, Int))
recentSourceBuffers :: IDEM [PaneName]

-- | Tries to create a new text buffer, fails when the given filepath does
--   not exist or when it is not a text file.
newTextBuffer :: PanePath -> Text -> Maybe FilePath -> IDEM (Maybe IDEBuffer)

-- | Returns the package, to which this buffer belongs, if possible
belongsToPackages :: MonadIDE m => IDEBuffer -> m [IDEPackage]

-- | Including files in sandbox source dirs
belongsToPackage :: FilePath -> IDEPackage -> Bool
belongsToWorkspace :: MonadIDE m => IDEBuffer -> m Bool
getIdentifierUnderCursorFromIter :: TextEditor editor => (EditorIter editor, EditorIter editor) -> IDEM (EditorIter editor, EditorIter editor)
useCandyFor :: MonadIDE m => IDEBuffer -> m Bool
instance Eq CharacterCategory
instance RecoverablePane IDEBuffer BufferState IDEM


module IDE.Utils.ExternalTool
runExternalTool' :: MonadIDE m => Text -> FilePath -> [Text] -> FilePath -> Sink ToolOutput IDEM () -> m ()
runExternalTool :: MonadIDE m => m Bool -> (ProcessHandle -> IDEM ()) -> Text -> FilePath -> [Text] -> FilePath -> Sink ToolOutput IDEM () -> m ()

-- | Handling of Compiler errors
isRunning :: MonadIDE m => m Bool
interruptBuild :: MonadIDE m => m ()
showProcessHandle :: ProcessHandle -> IO String


-- | Module for editing of cabal packages and build infos
module IDE.Pane.PackageEditor
packageNew' :: FilePath -> Sink ToolOutput IDEM () -> (Bool -> FilePath -> IDEAction) -> IDEAction
packageClone :: FilePath -> Sink ToolOutput IDEM () -> (FilePath -> IDEAction) -> IDEAction
packageEdit :: PackageAction
packageEditText :: PackageAction
choosePackageDir :: Window -> Maybe FilePath -> IO (Maybe FilePath)
choosePackageFile :: Window -> Maybe FilePath -> IO (Maybe FilePath)
hasConfigs :: GenericPackageDescription -> Bool
standardSetup :: Text
instance Typeable PackagePane
instance Typeable PackageState
instance Read PackageState
instance Show PackageState
instance Show Library'
instance Eq Library'
instance Show Executable'
instance Eq Executable'
instance Show Test'
instance Eq Test'
instance Show Benchmark'
instance Eq Benchmark'
instance Eq PackageDescriptionEd
instance Default BuildType
instance Default SourceRepo
instance Default RepoKind
instance Default RepoType
instance Default Executable
instance Default Library
instance Default BuildInfo
instance Default CompilerFlavor
instance Default Benchmark'
instance Default Test'
instance Default Executable'
instance Default Library'
instance RecoverablePane PackagePane PackageState IDEM
instance Pane PackagePane IDEM


-- | The pane of ide that shows a list of all the files in the workspace
module IDE.Pane.Files

-- | A files pane description
data IDEFiles
IDEFiles :: ScrolledWindow -> TreeView -> TreeStore FileRecord -> IDEFiles
scrolledView :: IDEFiles -> ScrolledWindow
treeView :: IDEFiles -> TreeView
fileStore :: IDEFiles -> TreeStore FileRecord
data FilesState
FilesState :: FilesState
getFiles :: Maybe PanePath -> IDEM IDEFiles

-- | Refreshes the Files pane, lists all package directories and
--   synchronizes the expanded folders with the file system
refreshFiles :: IDEAction
instance Typeable IDEFiles
instance Typeable FilesState
instance Eq FileRecord
instance Eq FilesState
instance Ord FilesState
instance Read FilesState
instance Show FilesState
instance RecoverablePane IDEFiles FilesState IDEM
instance Pane IDEFiles IDEM
instance Ord FileRecord


module IDE.NotebookFlipper
flipDown :: IDEAction
flipUp :: IDEAction


-- | The GUI stuff for infos
module IDE.Pane.Info

-- | An info pane description
data IDEInfo
data InfoState
InfoState :: (Maybe Descr) -> InfoState
showInfo :: IDEAction
setInfo :: Descr -> IDEAction
setInfoStyle :: IDEAction
replayInfoHistory :: Maybe Descr -> IDEAction
openDocu :: IDEAction
instance Typeable IDEInfo
instance Typeable InfoState
instance Eq InfoState
instance Ord InfoState
instance Read InfoState
instance Show InfoState
instance RecoverablePane IDEInfo InfoState IDEM
instance Pane IDEInfo IDEM


module IDE.Command.VCS.Types
newtype VCSAction a
VCSAction :: (ReaderT (VCSConf, FilePath) IDEM a) -> VCSAction a
askIDERef :: VCSAction IDERef
readIDE' :: (IDE -> a) -> VCSAction a
reflectIDE' :: IDEM a -> IDERef -> IO a
instance Functor VCSAction
instance Applicative VCSAction
instance Monad VCSAction
instance MonadIO VCSAction
instance MonadReader (VCSConf, FilePath) VCSAction


module IDE.HLint
hlintSettings :: IDEPackage -> IDEM (ParseFlags, [Classify], Hint)
scheduleHLint :: Either FilePath FilePath -> IDEAction
packageHLint :: PackageAction
resolveActiveHLint :: IDEM Bool


-- | Help for constructing import statements
module IDE.ImportTool

-- | Add all imports which gave error messages ...
resolveErrors :: IDEAction

-- | Add import for current error ...
addOneImport :: IDEAction
addResolveMenuItems :: MenuShellClass self => IDERef -> self -> LogRef -> IO ()
parseHiddenModule :: Text -> Maybe HiddenModuleResult
data HiddenModuleResult
HiddenModuleResult :: Text -> PackageId -> HiddenModuleResult
hiddenModule :: HiddenModuleResult -> Text
missingPackage :: HiddenModuleResult -> PackageId
instance Eq NotInScopeParseResult
instance Eq HiddenModuleResult
instance Show HiddenModuleResult


-- | Log pane
module IDE.Pane.Log

-- | The Log pane
data IDELog
IDELog :: VBox -> TextView -> HBox -> ComboBox -> IDELog
logMainContainer :: IDELog -> VBox
logLaunchTextView :: IDELog -> TextView
logButtons :: IDELog -> HBox
logLaunchBox :: IDELog -> ComboBox
data LogState
LogState :: LogState
data LogTag
LogTag :: LogTag
ErrorTag :: LogTag
FrameTag :: LogTag
InputTag :: LogTag
InfoTag :: LogTag
showLog :: IDEAction
clearLog :: IDEAction
getLog :: IDEM IDELog
appendLog :: IDELog -> LogLaunch -> Text -> LogTag -> IO Int
markErrorInLog :: IDELog -> (Int, Int) -> IDEAction
getActiveOrDefaultLogLaunch :: IDEM LogLaunch
getDefaultLogLaunch :: MonadIDE m => m LogLaunch
buildLogLaunchByName :: Text -> IDEM (LogLaunch, Text)
buildLogLaunchByPackage :: IDEPackage -> IDEM (LogLaunch, Text)
buildLogLaunchByPackageId :: PackageIdentifier -> IDEM (LogLaunch, Text)
addLogLaunchData :: Text -> LogLaunch -> ProcessHandle -> IDEM ()
showLogLaunch :: Text -> IDEM ()
showDefaultLogLaunch :: ComboBox -> IO ()
showDefaultLogLaunch' :: IDEM ()
instance Typeable IDELog
instance Typeable LogState
instance Eq LogState
instance Ord LogState
instance Read LogState
instance Show LogState
instance RecoverablePane IDELog LogState IDEM
instance Pane IDELog IDEM


module IDE.LogRef
nextError :: IDEAction
previousError :: IDEAction
nextBreakpoint :: IDEAction
previousBreakpoint :: IDEAction
markLogRefs :: IDEAction
unmarkLogRefs :: IDEAction
defaultLineLogger :: IDELog -> LogLaunch -> ToolOutput -> IDEM Int
defaultLineLogger' :: IDELog -> LogLaunch -> ToolOutput -> IO Int
logOutputLines :: LogLaunch -> (IDELog -> LogLaunch -> ToolOutput -> IDEM a) -> Sink ToolOutput IDEM [a]
logOutputLines_ :: LogLaunch -> (IDELog -> LogLaunch -> ToolOutput -> IDEM a) -> Sink ToolOutput IDEM ()
logOutputLinesDefault_ :: (IDELog -> LogLaunch -> ToolOutput -> IDEM a) -> Sink ToolOutput IDEM ()
logOutput :: LogLaunch -> Sink ToolOutput IDEM ()
logOutputDefault :: Sink ToolOutput IDEM ()
logOutputPane :: Text -> IORef [Text] -> Sink ToolOutput IDEM ()
logOutputForBuild :: IDEPackage -> Bool -> Bool -> Sink ToolOutput IDEM [LogRef]
logOutputForBreakpoints :: IDEPackage -> LogLaunch -> Sink ToolOutput IDEM ()
logOutputForSetBreakpoint :: IDEPackage -> LogLaunch -> Sink ToolOutput IDEM ()
logOutputForSetBreakpointDefault :: IDEPackage -> Sink ToolOutput IDEM ()
logOutputForLiveContext :: IDEPackage -> LogLaunch -> Sink ToolOutput IDEM ()
logOutputForLiveContextDefault :: IDEPackage -> Sink ToolOutput IDEM ()
logOutputForHistoricContext :: IDEPackage -> LogLaunch -> Sink ToolOutput IDEM ()
logOutputForHistoricContextDefault :: IDEPackage -> Sink ToolOutput IDEM ()
selectRef :: Maybe LogRef -> IDEAction
setBreakpointList :: [LogRef] -> IDEAction
showSourceSpan :: LogRef -> Text
srcSpanParser :: CharParser () SrcSpan


-- | The pane of ide where grep results are displayed
module IDE.Pane.Grep

-- | A grep pane description
data IDEGrep
IDEGrep :: ScrolledWindow -> TreeView -> TreeStore GrepRecord -> MVar Bool -> MVar Bool -> IDEGrep
scrolledView :: IDEGrep -> ScrolledWindow
treeView :: IDEGrep -> TreeView
grepStore :: IDEGrep -> TreeStore GrepRecord
waitingGrep :: IDEGrep -> MVar Bool
activeGrep :: IDEGrep -> MVar Bool
grepWorkspace :: Text -> Bool -> WorkspaceAction
data GrepState
GrepState :: GrepState
getGrep :: Maybe PanePath -> IDEM IDEGrep
instance Typeable IDEGrep
instance Typeable GrepState
instance Eq GrepState
instance Ord GrepState
instance Read GrepState
instance Show GrepState
instance RecoverablePane IDEGrep GrepState IDEM
instance Pane IDEGrep IDEM


-- | The packages methods of ide.
module IDE.Package
packageConfig :: PackageAction
packageConfig' :: IDEPackage -> (Bool -> IDEAction) -> IDEAction
buildPackage :: Bool -> Bool -> Bool -> IDEPackage -> (Bool -> IDEAction) -> IDEAction
packageDoc :: PackageAction
packageDoc' :: Bool -> Bool -> IDEPackage -> (Bool -> IDEAction) -> IDEAction
packageClean :: PackageAction
packageClean' :: IDEPackage -> (Bool -> IDEAction) -> IDEAction
packageCopy :: PackageAction
packageCopy' :: IDEPackage -> (Bool -> IDEAction) -> IDEAction
packageRun :: PackageAction
packageRunJavaScript :: PackageAction
activatePackage :: Maybe FilePath -> Maybe IDEPackage -> Maybe Text -> IDEM ()
deactivatePackage :: IDEAction
packageInstallDependencies :: PackageAction
packageRegister :: PackageAction
packageRegister' :: IDEPackage -> (Bool -> IDEAction) -> IDEAction
packageTest :: PackageAction
packageTest' :: Bool -> Bool -> IDEPackage -> Bool -> (Bool -> IDEAction) -> IDEAction
packageSdist :: PackageAction
packageOpenDoc :: PackageAction

-- | <ul>
--   <li>Utility functions/procedures, that have to do with packages</li>
--   </ul>
getPackageDescriptionAndPath :: IDEM (Maybe (PackageDescription, FilePath))
getEmptyModuleTemplate :: PackageDescription -> Text -> IO Text
getModuleTemplate :: FilePath -> PackageDescription -> Text -> Text -> Text -> IO Text
data ModuleLocation
LibExposedMod :: ModuleLocation
LibOtherMod :: ModuleLocation
ExeOrTestMod :: Text -> ModuleLocation
addModuleToPackageDescr :: ModuleName -> [ModuleLocation] -> PackageAction
delModuleFromPackageDescr :: ModuleName -> PackageAction
backgroundBuildToggled :: IDEAction
runUnitTestsToggled :: IDEAction
makeModeToggled :: IDEAction
debugStart :: PackageAction
printBindResultFlag :: Bool -> Text
breakOnErrorFlag :: Bool -> Text
breakOnExceptionFlag :: Bool -> Text
printEvldWithShowFlag :: Bool -> Text
tryDebug :: DebugAction -> PackageAction
tryDebugQuiet :: DebugAction -> PackageAction
executeDebugCommand :: Text -> Sink ToolOutput IDEM () -> DebugAction
choosePackageFile :: Window -> Maybe FilePath -> IO (Maybe FilePath)
idePackageFromPath :: Sink ToolOutput IDEM () -> FilePath -> IDEM (Maybe IDEPackage)
refreshPackage :: Sink ToolOutput IDEM () -> PackageM (Maybe IDEPackage)


-- | Simple build system for packages
module IDE.Build
data MakeSettings
MakeSettings :: Bool -> Bool -> Bool -> Bool -> Bool -> Bool -> Bool -> MakeSettings
msMakeMode :: MakeSettings -> Bool
msSingleBuildWithoutLinking :: MakeSettings -> Bool
msSaveAllBeforeBuild :: MakeSettings -> Bool
msBackgroundBuild :: MakeSettings -> Bool
msRunUnitTests :: MakeSettings -> Bool
msJumpToWarnings :: MakeSettings -> Bool
msDontInstallLast :: MakeSettings -> Bool

-- | a make operation
data MakeOp
MoConfigure :: MakeOp
MoBuild :: MakeOp
MoTest :: MakeOp
MoCopy :: MakeOp
MoRegister :: MakeOp
MoClean :: MakeOp
MoDocu :: MakeOp
MoOther :: Text -> MakeOp
MoMetaInfo :: MakeOp
MoComposed :: [MakeOp] -> MakeOp
moNoOp :: MakeOp

-- | The interface to the build system Consumes settings, a list of targets
--   and a the operation to perform. The firstOp will be applied to the
--   first target The restOp will be applied to all other targets The
--   finishOp will be applied to the last target after any op succeeded,
--   but it is applied after restOp has been tried on the last target
makePackages :: MakeSettings -> [IDEPackage] -> MakeOp -> MakeOp -> MakeOp -> WorkspaceAction

-- | Take make settings from preferences
defaultMakeSettings :: Prefs -> MakeSettings
instance Eq MakeOp
instance Ord MakeOp
instance Show MakeOp
instance (Show alpha, Show beta) => Show (Chain alpha beta)


module IDE.Workspaces.Writer
writeWorkspace :: Workspace -> IDEAction
setWorkspace :: Maybe Workspace -> IDEAction
workspaceDescr :: [FieldDescriptionS Workspace]
workspaceVersion :: Int


module IDE.Command.VCS.Common.Helper

-- | Creates an <a>eMergeToolSetter</a> (Either MergeTool or MT-Setter)
--   from given parameters.
eMergeToolSetter :: IDERef -> FilePath -> Maybe MergeTool -> Either MergeTool (MergeTool -> IO ())

-- | Runs given vcs-action using the vcs-conf set in the ReaderT. Provides
--   a basic exception handler for any errors occuring.
createActionFromContext :: Ctx () -> VCSAction ()


module IDE.Command.VCS.GIT
commitAction :: VCSAction ()
viewLogAction :: VCSAction ()
pushAction :: VCSAction ()
pullAction :: VCSAction ()
mkGITActions :: [(Text, VCSAction ())]


-- | TODO use new runActionWithContext
module IDE.Command.VCS.SVN
commitAction :: VCSAction ()
updateAction :: VCSAction ()
viewLogAction :: VCSAction ()
mkSVNActions :: [(Text, VCSAction ())]


module IDE.Command.VCS.Mercurial
mkMercurialActions :: [(Text, VCSAction ())]


module IDE.Command.VCS.Common
setMenuForPackage :: Menu -> FilePath -> Maybe VCSConf -> IDEAction

-- | vcs conf for given package in given workspace.
getVCSConf' :: Workspace -> FilePath -> IDEM (Either Text (Maybe VCSConf))


module IDE.Command.VCS.Common.Workspaces
onWorkspaceOpen :: Workspace -> IDEAction
onWorkspaceClose :: IDEAction


-- | Represents a workspace, a work unit, which can be composed of multiple
--   packages
module IDE.Workspaces

-- | Constructs a new workspace and makes it the current workspace
workspaceNew :: IDEAction
workspaceOpen :: IDEAction
workspaceTry :: WorkspaceAction -> IDEAction
workspaceOpenThis :: Bool -> Maybe FilePath -> IDEAction

-- | Closes a workspace
workspaceClose :: IDEAction
workspaceClean :: WorkspaceAction
workspaceMake :: WorkspaceAction
workspaceActivatePackage :: IDEPackage -> Maybe Text -> WorkspaceAction
workspaceAddPackage :: WorkspaceAction
workspaceAddPackage' :: FilePath -> WorkspaceM (Maybe IDEPackage)
workspaceRemovePackage :: IDEPackage -> WorkspaceAction
workspacePackageNew :: WorkspaceAction
workspacePackageClone :: WorkspaceAction
workspaceTryQuiet :: WorkspaceAction -> IDEAction
workspaceNewHere :: FilePath -> IDEAction
packageTry :: PackageAction -> IDEAction
packageTryQuiet :: PackageAction -> IDEAction
backgroundMake :: IDEAction
makePackage :: PackageAction


-- | The toolbar for searching and replacing in a text buffer
module IDE.Find
toggleFindbar :: IDEAction
constructFindReplace :: IDEM Toolbar
hideFindbar :: IDEAction
showFindbar :: IDEAction
focusFindEntry :: IDEAction
editFindInc :: SearchHint -> IDEAction
editGotoLine :: IDEAction
data FindState
FindState :: Text -> [Text] -> Text -> [Text] -> Bool -> Bool -> Bool -> Bool -> Int -> FindState
entryStr :: FindState -> Text
entryHist :: FindState -> [Text]
replaceStr :: FindState -> Text
replaceHist :: FindState -> [Text]
caseSensitive :: FindState -> Bool
entireWord :: FindState -> Bool
wrapAround :: FindState -> Bool
regex :: FindState -> Bool
lineNr :: FindState -> Int
getFindState :: IDEM FindState
setFindState :: FindState -> IDEAction
editFind :: Bool -> Bool -> Bool -> Bool -> Text -> Text -> SearchHint -> IDEM Bool
showToolbar :: IDEAction
hideToolbar :: IDEAction
toggleToolbar :: IDEAction
instance Eq FindState
instance Ord FindState
instance Show FindState
instance Read FindState


module IDE.Sandbox
sandboxInit :: PackageAction
sandboxInitShared :: PackageAction
sandboxDelete :: PackageAction
sandboxAddSource :: Bool -> PackageAction


-- | The pane of ide where modules are presented in tree form with their
--   packages and exports
module IDE.Pane.Modules
data IDEModules
IDEModules :: VBox -> HPaned -> TreeView -> TreeStore ModuleRecord -> TreeView -> TreeStore Descr -> TypedTreeModelSort Descr -> RadioButton -> RadioButton -> RadioButton -> CheckButton -> CheckButton -> IORef SelectionState -> IORef ExpanderState -> IDEModules
outer :: IDEModules -> VBox
paned :: IDEModules -> HPaned
treeView :: IDEModules -> TreeView
treeStore :: IDEModules -> TreeStore ModuleRecord
descrView :: IDEModules -> TreeView
descrStore :: IDEModules -> TreeStore Descr

-- | The sorted model for descrs
descrSortedStore :: IDEModules -> TypedTreeModelSort Descr
packageScopeB :: IDEModules -> RadioButton
workspaceScopeB :: IDEModules -> RadioButton
systemScopeB :: IDEModules -> RadioButton
dependsB :: IDEModules -> CheckButton
blacklistB :: IDEModules -> CheckButton
oldSelection :: IDEModules -> IORef SelectionState
expanderState :: IDEModules -> IORef ExpanderState
data ModulesState
ModulesState :: Int -> (Scope, Bool) -> (Maybe ModuleName, Maybe Text) -> ExpanderState -> ModulesState
data ExpanderState
ExpanderState :: ExpanderFacet -> ExpanderFacet -> ExpanderFacet -> ExpanderFacet -> ExpanderFacet -> ExpanderFacet -> ExpanderFacet -> ExpanderFacet -> ExpanderFacet -> ExpanderFacet -> ExpanderState
packageExp :: ExpanderState -> ExpanderFacet
packageExpNoBlack :: ExpanderState -> ExpanderFacet
packageDExp :: ExpanderState -> ExpanderFacet
packageDExpNoBlack :: ExpanderState -> ExpanderFacet
workspaceExp :: ExpanderState -> ExpanderFacet
workspaceExpNoBlack :: ExpanderState -> ExpanderFacet
workspaceDExp :: ExpanderState -> ExpanderFacet
workspaceDExpNoBlack :: ExpanderState -> ExpanderFacet
systemExp :: ExpanderState -> ExpanderFacet
systemExpNoBlack :: ExpanderState -> ExpanderFacet
showModules :: IDEAction
selectIdentifier :: Descr -> Bool -> IDEAction
reloadKeepSelection :: Bool -> IDEAction
replaySelHistory :: Maybe ModuleName -> Maybe Text -> IDEAction
replayScopeHistory :: Scope -> Bool -> IDEAction
addModule :: [ModuleRecord] -> PackageAction
instance Typeable ModulesState
instance Typeable IDEModules
instance Eq ExpanderState
instance Ord ExpanderState
instance Show ExpanderState
instance Read ExpanderState
instance Eq ModulesState
instance Ord ModulesState
instance Read ModulesState
instance Show ModulesState
instance Eq SelectionState
instance Ord SelectionState
instance Show SelectionState
instance Ord a => Ord (Tree a)
instance RecoverablePane IDEModules ModulesState IDEM
instance Pane IDEModules IDEM


-- | Recording the history for going back and forth
module IDE.GUIHistory
recordHistory :: GUIHistory -> IDEAction
historyBack :: IDEAction
historyForward :: IDEAction
withoutRecordingDo :: IDEAction -> IDEAction


module IDE.Pane.Workspace

-- | Nothing to remember here, everything comes from the IDE state
data WorkspaceState
WorkspaceState :: WorkspaceState
data IDEWorkspace
updateWorkspace :: Bool -> Bool -> IDEAction
getWorkspace :: Maybe PanePath -> IDEM IDEWorkspace
showWorkspace :: IDEAction
instance Typeable IDEWorkspace
instance Typeable WorkspaceState
instance Eq WorkspaceState
instance Ord WorkspaceState
instance Read WorkspaceState
instance Show WorkspaceState
instance RecoverablePane IDEWorkspace WorkspaceState IDEM
instance Pane IDEWorkspace IDEM


-- | The debug methods of ide.
module IDE.Debug
debugCommand :: Text -> Sink ToolOutput IDEM () -> DebugAction
debugCommand' :: Text -> Sink ToolOutput IDEM () -> DebugAction
debugToggled :: IDEAction
debugQuit :: IDEAction
debugExecuteSelection :: IDEAction
debugExecuteAndShowSelection :: IDEAction
debugSetBreakpoint :: IDEAction
debugDeleteAllBreakpoints :: IDEAction
debugDeleteBreakpoint :: Text -> LogRef -> IDEAction
debugContinue :: IDEAction
debugAbandon :: IDEAction
debugStop :: IDEAction
debugStep :: IDEAction
debugStepExpression :: IDEAction
debugStepExpr :: Maybe Text -> DebugAction
debugStepLocal :: IDEAction
debugStepModule :: IDEAction
debugTrace :: IDEAction
debugTraceExpression :: IDEAction
debugTraceExpr :: Maybe Text -> DebugAction
debugHistory :: IDEAction
debugBack :: IDEAction
debugForward :: IDEAction
debugForce :: IDEAction
debugPrint :: IDEAction
debugSimplePrint :: IDEAction
debugShowBindings :: IDEAction
debugShowBreakpoints :: IDEAction
debugShowContext :: IDEAction
debugShowModules :: IDEAction
debugShowPackages :: IDEAction
debugShowLanguages :: IDEAction
debugInformation :: IDEAction
debugKind :: IDEAction
debugType :: IDEAction
debugSetPrintEvldWithShow :: Bool -> IDEAction
debugSetBreakOnException :: Bool -> IDEAction
debugSetBreakOnError :: Bool -> IDEAction
debugSetPrintBindResult :: Bool -> IDEAction


-- | Module for saving, restoring and editing preferences
module IDE.Pane.Preferences

-- | The Preferences Pane
data IDEPrefs
IDEPrefs :: VBox -> IDEPrefs
prefsBox :: IDEPrefs -> VBox
data PrefsState
readPrefs :: FilePath -> IO Prefs
writePrefs :: FilePath -> Prefs -> IO ()
defaultPrefs :: Prefs
prefsDescription :: FilePath -> [PackageIdentifier] -> FieldDescriptionPP Prefs IDEM
getPrefs :: Maybe PanePath -> IDEM IDEPrefs
instance Typeable IDEPrefs
instance Typeable PrefsState
instance Eq PrefsState
instance Ord PrefsState
instance Read PrefsState
instance Show PrefsState
instance RecoverablePane IDEPrefs PrefsState IDEM
instance Pane IDEPrefs IDEM


module IDE.Pane.Breakpoints

-- | A breakpoints pane description
data IDEBreakpoints
data BreakpointsState
showBreakpoints :: IDEAction
fillBreakpointList :: IDEAction
selectBreak :: Maybe LogRef -> IDEAction
instance Typeable IDEBreakpoints
instance Typeable BreakpointsState
instance Eq BreakpointsState
instance Ord BreakpointsState
instance Read BreakpointsState
instance Show BreakpointsState
instance RecoverablePane IDEBreakpoints BreakpointsState IDEM
instance Pane IDEBreakpoints IDEM


module IDE.Pane.Trace

-- | A debugger pane description
data IDETrace
data TraceState
showTrace :: IDEAction
fillTraceList :: IDEAction
instance Typeable TraceState
instance Typeable IDETrace
instance Eq TraceState
instance Ord TraceState
instance Read TraceState
instance Show TraceState
instance RecoverablePane IDETrace TraceState IDEM
instance Pane IDETrace IDEM


module IDE.Pane.Variables

-- | A variables pane description
data IDEVariables
data VariablesState
showVariables :: IDEAction
fillVariablesList :: IDEAction
fillVariablesListQuiet :: IDEAction
instance Typeable IDEVariables
instance Typeable VariablesState
instance Eq VariablesState
instance Ord VariablesState
instance Read VariablesState
instance Show VariablesState
instance RecoverablePane IDEVariables VariablesState IDEM
instance Pane IDEVariables IDEM


module IDE.PaneGroups
showBrowser :: IDEAction
setSensitivityDebugger :: Bool -> IDEAction
showDebugger :: IDEAction


-- | A pane which displays a list of errors
module IDE.Pane.Errors

-- | A breakpoints pane description
data IDEErrors
data ErrorsState
fillErrorList :: Bool -> IDEAction
selectError :: Maybe LogRef -> IDEAction
getErrors :: Maybe PanePath -> IDEM IDEErrors
selectMatchingErrors :: Maybe SrcSpan -> IDEM ()
instance Typeable IDEErrors
instance Typeable ErrorsState
instance Eq ErrorsState
instance Ord ErrorsState
instance Read ErrorsState
instance Show ErrorsState
instance RecoverablePane IDEErrors ErrorsState IDEM
instance Pane IDEErrors IDEM


-- | Module for saving and recovering the layout
module IDE.Session

-- | Get and save the current session
saveSession :: IDEAction
saveSessionAs :: FilePath -> Maybe FilePath -> IDEAction
saveSessionAsPrompt :: IDEAction

-- | Read and apply the saved layout
recoverSession :: FilePath -> IDEM (Bool, Bool)

-- | <ul>
--   <li>Implementation</li>
--   </ul>
sessionClosePane :: IDEAction
loadSession :: FilePath -> IDEAction
loadSessionPrompt :: IDEAction
viewFullScreen :: IDEAction
viewDark :: IDEAction
instance Eq PaneState
instance Ord PaneState
instance Read PaneState
instance Show PaneState


-- | Module for actions, menus and toolbars and the rest ...
module IDE.Command

-- | The Actions known to the system (they can be activated by keystrokes
--   or menus)
mkActions :: [ActionDescr IDERef]

-- | The menu description in XML Syntax as defined by GTK
menuDescription :: IO Text

-- | Building the Menu
makeMenu :: UIManager -> [ActionDescr IDERef] -> Text -> IDEAction
canQuit :: IDEM Bool

-- | Quit ide
quit :: IDEAction

-- | Show the about dialog
aboutDialog :: IO ()
buildStatusbar :: IO HBox
newIcons :: IO ()
setSensitivity :: [(SensitivityMask, Bool)] -> IDEAction
updateRecentEntries :: IDEAction

-- | Callback function for onKeyPress of the main window, so
--   <tt>preprocess</tt> any key
handleSpecialKeystrokes :: IDERef -> EventM EKey Bool

-- | Register handlers for IDE events
registerLeksahEvents :: IDEAction
instrumentWindow :: Window -> Prefs -> Widget -> IDEAction
instrumentSecWindow :: Window -> IDEAction

module IDE.Leksah

-- | Main function
leksah :: Config -> IO ()
instance Show Flag
instance Eq Flag
