-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Support for manipulating NTFS junction points.
--   
--   This package provides the ability to manipulate NTFS junction points
--   as supported by Windows 2000 and above. Junction points, along with
--   NTFS hard links and NTFS symbolic links, are a type of symbolic link
--   that can be made between folders existing on the same filesystem.
--   Please read Microsoft KB205524 [1] for more information on junction
--   points.
--   
--   Junction points have always been left undocumented in the Win32 SDK.
--   The Windows 2000 Resource Kit came with a command-line utility named
--   linkd.exe to work with them. Later, Mark Russinovich of SysInternals
--   distributed a replacement utility named Junction [2] which
--   accomplished the same thing.
--   
--   This source code is based on an article [3] and C++ library [4]
--   written by Mike Nordell at codeproject.com.
--   
--   It is against Microsoft's recommendation to make use of undocumented
--   API features. Use this library at your own risk.
--   
--   <ol>
--   <li><a>http://support.microsoft.com/?kbid=205524</a></li>
--   
--   <li><a>http://technet.microsoft.com/en-us/sysinternals/bb896768</a></li>
--   
--   <li><a>http://www.codeproject.com/script/Articles/ViewDownloads.aspx?aid=194</a></li>
--   
--   <li><a>http://www.codeproject.com/KB/winsdk/junctionpoints.aspx</a></li>
--   </ol>
@package Win32-junction-point
@version 0.2.1.1

module System.Win32.JunctionPoint

-- | Create a junction point between two folders on the same filesystem.
--   
--   <tt>mountDir</tt> should be the full file path to an empty folder.
--   This folder should be on a local filesystem.
--   
--   <tt>destDir</tt> should be the full file path to the junction point's
--   target. The target must be a folder on the same filesystem as its
--   source. The path should also be preceeded by "\??\". This indicates to
--   Windows not to try validating the path before using it.
--   
--   <pre>
--   &gt;&gt;&gt; createJunctionPoint "c:\\Windows\\System32" "\\??\\c:\\System32"
--   </pre>
createJunctionPoint :: Text -> Text -> IO ()

-- | This <a>Deletes</a> the junction point at the supplied path. An empty
--   folder will be left in its place on success. A <a>Win32Exception</a>
--   exception will be thrown in the event of an error condition.
deleteJunctionPoint :: Text -> IO ()

-- | Discover the target of a junction point at the supplied path. A
--   <a>Win32Exception</a> exception will be thrown if the target is either
--   invalid or not a junction point. The returned path will be prefixed by
--   "\??\".
getJunctionPointInfo :: Text -> IO Text
instance Storable TMN_REPARSE_DATA_BUFFER
