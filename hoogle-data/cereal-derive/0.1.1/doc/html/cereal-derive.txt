-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Automatic deriving of Serialize using GHC.Generics
--   
--   This package provides deriveGet and derivePut which can be used to
--   quickly create an instance of Serialize for any type which implements
--   Generic. Naturally, this can be used with -XDeriveGeneric to not have
--   to write any boilerplate code.
@package cereal-derive
@version 0.1.1

module Data.Serialize.Derive

-- | Derives a <a>put</a> function for an instance of Serialize. Normally
--   you won't call this from anywhere except that <a>put</a> function in
--   your instance declaration.
derivePut :: (Generic t, GSerialize (Rep t)) => t -> Put

-- | Derives a <a>get</a> value for an instance of Serialize. Normally you
--   won't use this from anywhere except that <a>get</a> value in your
--   instance declaration.
deriveGet :: (Generic t, GSerialize (Rep t)) => Get t
instance (GSerialize a, GSerialize b) => GSerialize (a :*: b)
instance (GSerialize a, GSerialize b) => GSerialize (a :+: b)
instance GSerialize t => GSerialize (M1 i c t)
instance Serialize t => GSerialize (K1 i t)
instance GSerialize U1
instance Serialize ConsChoice
