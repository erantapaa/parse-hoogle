-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Haskell implementation of the PBKDF functions from RFC-2898.
--   
--   The Password Based Key Derivation Functions described in RFC-2898 with
--   a test suite to verify that it works with the test vectors published
--   in RFC6070.
@package pbkdf
@version 1.1.0.1

module Crypto.PBKDF.Core

-- | SHA-1 generator
sha1PBKDF :: String -> String -> Int -> Int -> PBKDF

-- | SHA-256 generator
sha256PBKDF :: String -> String -> Int -> Int -> PBKDF

-- | SHA-512 generator
sha512PBKDF :: String -> String -> Int -> Int -> PBKDF

-- | construct a PBKDF generator from a HMAC function
pbkdf :: PRF -> String -> String -> Int -> Int -> PBKDF

-- | PBKDF generator parameters
data PBKDF
PBKDF :: PRF -> ByteString -> ByteString -> Int -> Int -> PBKDF

-- | the psuedo-random (i.e., HMAC) function
pbkdf_PRF :: PBKDF -> PRF

-- | the password (will be UTF-8 encoded)
pbkdf_P :: PBKDF -> ByteString

-- | the salt (will be UTF-8 encoded)
pbkdf_S :: PBKDF -> ByteString

-- | iteration count for applying the HMAC
pbkdf_c :: PBKDF -> Int

-- | the length of the o/p derived key
pbkdf_dkLen :: PBKDF -> Int

-- | the HMAC function and its underlying HASH function
data PRF
PRF :: (ByteString -> ByteString -> ByteString) -> (ByteString -> ByteString) -> Int -> PRF

-- | the PR/HMAC function
prf_hmac :: PRF -> ByteString -> ByteString -> ByteString

-- | the underlying hash function
prf_hash :: PRF -> ByteString -> ByteString

-- | number of octets in o/p hash
prf_hLen :: PRF -> Int

-- | the pbkdf1_ core function
pbkdf1 :: PBKDF -> ByteString

-- | the pbkdf2_ core function
pbkdf2 :: PBKDF -> ByteString

module Crypto.PBKDF
sha1PBKDF1 :: String -> String -> Int -> String
sha256PBKDF1 :: String -> String -> Int -> String
sha512PBKDF1 :: String -> String -> Int -> String
sha1PBKDF2 :: String -> String -> Int -> Int -> String
sha256PBKDF2 :: String -> String -> Int -> Int -> String
sha512PBKDF2 :: String -> String -> Int -> Int -> String
