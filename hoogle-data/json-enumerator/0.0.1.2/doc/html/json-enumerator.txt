-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Pure-Haskell utilities for dealing with JSON with the enumerator package. (deprecated)
--   
--   Provides the ability to render JSON in a streaming manner using the
--   enumerator package.
@package json-enumerator
@version 0.0.1.2

module Text.JSON.ToJson
class ToJson a
toJson :: ToJson a => a -> Value
toJsons :: ToJson a => [a] -> Value
instance ToJson Double
instance ToJson Float
instance ToJson Int
instance ToJson Int64
instance ToJson Int32
instance ToJson Text
instance ToJson Text
instance ToJson ByteString
instance ToJson ByteString
instance ToJson Char
instance ToJson Bool
instance ToJson Value
instance (ToJson a, ToJson b, ToJson c, ToJson d) => ToJson (a, b, c, d)
instance (ToJson a, ToJson b, ToJson c) => ToJson (a, b, c)
instance (ToJson a, ToJson b) => ToJson (a, b)
instance ToJson ()
instance ToJson a => ToJson [a]

module Text.JSON.Enumerator
renderEvents :: Monad m => Enumeratee Event Builder m b
renderEventsToBytes :: MonadIO m => Enumeratee Event ByteString m b
renderValue :: Value -> Builder
renderAtom :: Atom -> Builder
data JsonException
UnexpectedEndArray :: GState -> JsonException
UnexpectedEndObject :: GState -> JsonException
UnexpectedAttributeName :: Text -> GState -> JsonException
ExpectedAttributeName :: GState -> JsonException
instance Typeable JsonException
instance Show GState
instance Show JsonException
instance Exception JsonException
