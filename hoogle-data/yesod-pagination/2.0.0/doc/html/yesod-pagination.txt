-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Pagination in Yesod
--   
@package yesod-pagination
@version 2.0.0


-- | Easy pagination for Yesod.
module Yesod.Paginate

-- | Paginate a model, given a configuration. This just performs a
--   <tt>SELECT *</tt>.
paginate :: (From SqlQuery SqlExpr SqlBackend a, SqlSelect a a1, YesodPersist site, YesodPersistBackend site ~ Connection) => PageConfig app -> HandlerT site IO (Page (Route app) a1)

-- | Paginate a model, given a configuration and an esqueleto query.
paginateWith :: (From SqlQuery SqlExpr SqlBackend a1, SqlSelect a a2, YesodPersist site, YesodPersistBackend site ~ Connection) => PageConfig app -> (a1 -> SqlQuery a) -> HandlerT site IO (Page (Route app) a2)

-- | Metadata about how pagination should work.
data PageConfig app
PageConfig :: Int -> Int -> Route app -> (Int -> Route app) -> PageConfig app
pageSize :: PageConfig app -> Int
currentPage :: PageConfig app -> Int
firstPageRoute :: PageConfig app -> Route app
pageRoute :: PageConfig app -> Int -> Route app

-- | Returned by <a>paginate</a> and friends.
data Page route r
Page :: [r] -> Maybe route -> Maybe route -> Maybe route -> Page route r

-- | Returned entities.
pageResults :: Page route r -> [r]

-- | Link to first page.
firstPage :: Page route r -> Maybe route

-- | Link to next page.
nextPage :: Page route r -> Maybe route

-- | Link to previous page.
previousPage :: Page route r -> Maybe route
instance (Eq route, Eq r) => Eq (Page route r)
instance (Read route, Read r) => Read (Page route r)
instance (Show route, Show r) => Show (Page route r)
