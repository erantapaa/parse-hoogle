-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Amazon CloudFormation SDK.
--   
@package amazonka-cloudformation
@version 0.3.6

module Network.AWS.CloudFormation.Types

-- | Version <tt>2010-05-15</tt> of the Amazon CloudFormation service.
data CloudFormation
data RESTError :: *
ns :: Text
data Tag

-- | <a>Tag</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>tagKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>tagValue</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
tag :: Tag

-- | <i>Required</i>. A string used to identify this tag. You can specify a
--   maximum of 128 characters for a tag key. Tags owned by Amazon Web
--   Services (AWS) have the reserved prefix: 'aws:'.
tagKey :: Lens' Tag (Maybe Text)

-- | <i>Required</i>. A string containing the value for this tag. You can
--   specify a maximum of 256 characters for a tag value.
tagValue :: Lens' Tag (Maybe Text)
data StackStatus

-- | CREATE_COMPLETE
CreateComplete :: StackStatus

-- | CREATE_FAILED
CreateFailed :: StackStatus

-- | CREATE_IN_PROGRESS
CreateInProgress :: StackStatus

-- | DELETE_COMPLETE
DeleteComplete :: StackStatus

-- | DELETE_FAILED
DeleteFailed :: StackStatus

-- | DELETE_IN_PROGRESS
DeleteInProgress :: StackStatus

-- | ROLLBACK_COMPLETE
RollbackComplete :: StackStatus

-- | ROLLBACK_FAILED
RollbackFailed :: StackStatus

-- | ROLLBACK_IN_PROGRESS
RollbackInProgress :: StackStatus

-- | UPDATE_COMPLETE
UpdateComplete :: StackStatus

-- | UPDATE_COMPLETE_CLEANUP_IN_PROGRESS
UpdateCompleteCleanupInProgress :: StackStatus

-- | UPDATE_IN_PROGRESS
UpdateInProgress :: StackStatus

-- | UPDATE_ROLLBACK_COMPLETE
UpdateRollbackComplete :: StackStatus

-- | UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS
UpdateRollbackCompleteCleanupInProgress :: StackStatus

-- | UPDATE_ROLLBACK_FAILED
UpdateRollbackFailed :: StackStatus

-- | UPDATE_ROLLBACK_IN_PROGRESS
UpdateRollbackInProgress :: StackStatus
data StackEvent

-- | <a>StackEvent</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>seEventId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>seLogicalResourceId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>sePhysicalResourceId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>seResourceProperties</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>seResourceStatus</a> <tt>::</tt> <a>Maybe</a>
--   <a>ResourceStatus</a></li>
--   <li><a>seResourceStatusReason</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>seResourceType</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>seStackId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>seStackName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>seTimestamp</a> <tt>::</tt> <a>UTCTime</a></li>
--   </ul>
stackEvent :: Text -> Text -> Text -> UTCTime -> StackEvent

-- | The unique ID of this event.
seEventId :: Lens' StackEvent Text

-- | The logical name of the resource specified in the template.
seLogicalResourceId :: Lens' StackEvent (Maybe Text)

-- | The name or unique identifier associated with the physical instance of
--   the resource.
sePhysicalResourceId :: Lens' StackEvent (Maybe Text)

-- | BLOB of the properties used to create the resource.
seResourceProperties :: Lens' StackEvent (Maybe Text)

-- | Current status of the resource.
seResourceStatus :: Lens' StackEvent (Maybe ResourceStatus)

-- | Success/failure message associated with the resource.
seResourceStatusReason :: Lens' StackEvent (Maybe Text)

-- | Type of resource. (For more information, go to <a>AWS Resource Types
--   Reference</a> in the AWS CloudFormation User Guide.)
seResourceType :: Lens' StackEvent (Maybe Text)

-- | The unique ID name of the instance of the stack.
seStackId :: Lens' StackEvent Text

-- | The name associated with a stack.
seStackName :: Lens' StackEvent Text

-- | Time the status was updated.
seTimestamp :: Lens' StackEvent UTCTime
data StackSummary

-- | <a>StackSummary</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ssCreationTime</a> <tt>::</tt> <a>UTCTime</a></li>
--   <li><a>ssDeletionTime</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>ssLastUpdatedTime</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>ssStackId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ssStackName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ssStackStatus</a> <tt>::</tt> <a>StackStatus</a></li>
--   <li><a>ssStackStatusReason</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>ssTemplateDescription</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
stackSummary :: Text -> UTCTime -> StackStatus -> StackSummary

-- | The time the stack was created.
ssCreationTime :: Lens' StackSummary UTCTime

-- | The time the stack was deleted.
ssDeletionTime :: Lens' StackSummary (Maybe UTCTime)

-- | The time the stack was last updated. This field will only be returned
--   if the stack has been updated at least once.
ssLastUpdatedTime :: Lens' StackSummary (Maybe UTCTime)

-- | Unique stack identifier.
ssStackId :: Lens' StackSummary (Maybe Text)

-- | The name associated with the stack.
ssStackName :: Lens' StackSummary Text

-- | The current status of the stack.
ssStackStatus :: Lens' StackSummary StackStatus

-- | Success/Failure message associated with the stack status.
ssStackStatusReason :: Lens' StackSummary (Maybe Text)

-- | The template description of the template used to create the stack.
ssTemplateDescription :: Lens' StackSummary (Maybe Text)
data StackResourceDetail

-- | <a>StackResourceDetail</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>srdDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>srdLastUpdatedTimestamp</a> <tt>::</tt> <a>UTCTime</a></li>
--   <li><a>srdLogicalResourceId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>srdMetadata</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>srdPhysicalResourceId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>srdResourceStatus</a> <tt>::</tt> <a>ResourceStatus</a></li>
--   <li><a>srdResourceStatusReason</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>srdResourceType</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>srdStackId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>srdStackName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
stackResourceDetail :: Text -> Text -> UTCTime -> ResourceStatus -> StackResourceDetail

-- | User defined description associated with the resource.
srdDescription :: Lens' StackResourceDetail (Maybe Text)

-- | Time the status was updated.
srdLastUpdatedTimestamp :: Lens' StackResourceDetail UTCTime

-- | The logical name of the resource specified in the template.
srdLogicalResourceId :: Lens' StackResourceDetail Text

-- | The JSON format content of the <tt>Metadata</tt> attribute declared
--   for the resource. For more information, see <a>Metadata Attribute</a>
--   in the AWS CloudFormation User Guide.
srdMetadata :: Lens' StackResourceDetail (Maybe Text)

-- | The name or unique identifier that corresponds to a physical instance
--   ID of a resource supported by AWS CloudFormation.
srdPhysicalResourceId :: Lens' StackResourceDetail (Maybe Text)

-- | Current status of the resource.
srdResourceStatus :: Lens' StackResourceDetail ResourceStatus

-- | Success/failure message associated with the resource.
srdResourceStatusReason :: Lens' StackResourceDetail (Maybe Text)

-- | Type of resource. ((For more information, go to <a>AWS Resource Types
--   Reference</a> in the AWS CloudFormation User Guide.)
srdResourceType :: Lens' StackResourceDetail Text

-- | Unique identifier of the stack.
srdStackId :: Lens' StackResourceDetail (Maybe Text)

-- | The name associated with the stack.
srdStackName :: Lens' StackResourceDetail (Maybe Text)
data ResourceStatus

-- | CREATE_COMPLETE
RSCreateComplete :: ResourceStatus

-- | CREATE_FAILED
RSCreateFailed :: ResourceStatus

-- | CREATE_IN_PROGRESS
RSCreateInProgress :: ResourceStatus

-- | DELETE_COMPLETE
RSDeleteComplete :: ResourceStatus

-- | DELETE_FAILED
RSDeleteFailed :: ResourceStatus

-- | DELETE_IN_PROGRESS
RSDeleteInProgress :: ResourceStatus

-- | DELETE_SKIPPED
RSDeleteSkipped :: ResourceStatus

-- | UPDATE_COMPLETE
RSUpdateComplete :: ResourceStatus

-- | UPDATE_FAILED
RSUpdateFailed :: ResourceStatus

-- | UPDATE_IN_PROGRESS
RSUpdateInProgress :: ResourceStatus
data TemplateParameter

-- | <a>TemplateParameter</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>tpDefaultValue</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>tpDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>tpNoEcho</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>tpParameterKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
templateParameter :: TemplateParameter

-- | The default value associated with the parameter.
tpDefaultValue :: Lens' TemplateParameter (Maybe Text)

-- | User defined description associated with the parameter.
tpDescription :: Lens' TemplateParameter (Maybe Text)

-- | Flag indicating whether the parameter should be displayed as plain
--   text in logs and UIs.
tpNoEcho :: Lens' TemplateParameter (Maybe Bool)

-- | The name associated with the parameter.
tpParameterKey :: Lens' TemplateParameter (Maybe Text)
data ParameterDeclaration

-- | <a>ParameterDeclaration</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pdDefaultValue</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pdDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pdNoEcho</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>pdParameterConstraints</a> <tt>::</tt> <a>Maybe</a>
--   <a>ParameterConstraints</a></li>
--   <li><a>pdParameterKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pdParameterType</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
parameterDeclaration :: ParameterDeclaration

-- | The default value of the parameter.
pdDefaultValue :: Lens' ParameterDeclaration (Maybe Text)

-- | The description that is associate with the parameter.
pdDescription :: Lens' ParameterDeclaration (Maybe Text)

-- | Flag that indicates whether the parameter value is shown as plain text
--   in logs and in the AWS Management Console.
pdNoEcho :: Lens' ParameterDeclaration (Maybe Bool)

-- | The criteria that AWS CloudFormation uses to validate parameter
--   values.
pdParameterConstraints :: Lens' ParameterDeclaration (Maybe ParameterConstraints)

-- | The name that is associated with the parameter.
pdParameterKey :: Lens' ParameterDeclaration (Maybe Text)

-- | The type of parameter.
pdParameterType :: Lens' ParameterDeclaration (Maybe Text)
data StackResource

-- | <a>StackResource</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sr1Description</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>sr1LogicalResourceId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>sr1PhysicalResourceId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>sr1ResourceStatus</a> <tt>::</tt> <a>ResourceStatus</a></li>
--   <li><a>sr1ResourceStatusReason</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>sr1ResourceType</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>sr1StackId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>sr1StackName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>sr1Timestamp</a> <tt>::</tt> <a>UTCTime</a></li>
--   </ul>
stackResource :: Text -> Text -> UTCTime -> ResourceStatus -> StackResource

-- | User defined description associated with the resource.
sr1Description :: Lens' StackResource (Maybe Text)

-- | The logical name of the resource specified in the template.
sr1LogicalResourceId :: Lens' StackResource Text

-- | The name or unique identifier that corresponds to a physical instance
--   ID of a resource supported by AWS CloudFormation.
sr1PhysicalResourceId :: Lens' StackResource (Maybe Text)

-- | Current status of the resource.
sr1ResourceStatus :: Lens' StackResource ResourceStatus

-- | Success/failure message associated with the resource.
sr1ResourceStatusReason :: Lens' StackResource (Maybe Text)

-- | Type of resource. (For more information, go to <a>AWS Resource Types
--   Reference</a> in the AWS CloudFormation User Guide.)
sr1ResourceType :: Lens' StackResource Text

-- | Unique identifier of the stack.
sr1StackId :: Lens' StackResource (Maybe Text)

-- | The name associated with the stack.
sr1StackName :: Lens' StackResource (Maybe Text)

-- | Time the status was updated.
sr1Timestamp :: Lens' StackResource UTCTime
data Output

-- | <a>Output</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>oDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>oOutputKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>oOutputValue</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
output :: Output

-- | User defined description associated with the output.
oDescription :: Lens' Output (Maybe Text)

-- | The key associated with the output.
oOutputKey :: Lens' Output (Maybe Text)

-- | The value associated with the output.
oOutputValue :: Lens' Output (Maybe Text)
data ParameterConstraints

-- | <a>ParameterConstraints</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pcAllowedValues</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
parameterConstraints :: ParameterConstraints

-- | A list of values that are permitted for a parameter.
pcAllowedValues :: Lens' ParameterConstraints [Text]
data StackResourceSummary

-- | <a>StackResourceSummary</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>srsLastUpdatedTimestamp</a> <tt>::</tt> <a>UTCTime</a></li>
--   <li><a>srsLogicalResourceId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>srsPhysicalResourceId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>srsResourceStatus</a> <tt>::</tt> <a>ResourceStatus</a></li>
--   <li><a>srsResourceStatusReason</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>srsResourceType</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
stackResourceSummary :: Text -> Text -> UTCTime -> ResourceStatus -> StackResourceSummary

-- | Time the status was updated.
srsLastUpdatedTimestamp :: Lens' StackResourceSummary UTCTime

-- | The logical name of the resource specified in the template.
srsLogicalResourceId :: Lens' StackResourceSummary Text

-- | The name or unique identifier that corresponds to a physical instance
--   ID of the resource.
srsPhysicalResourceId :: Lens' StackResourceSummary (Maybe Text)

-- | Current status of the resource.
srsResourceStatus :: Lens' StackResourceSummary ResourceStatus

-- | Success/failure message associated with the resource.
srsResourceStatusReason :: Lens' StackResourceSummary (Maybe Text)

-- | Type of resource. (For more information, go to <a>AWS Resource Types
--   Reference</a> in the AWS CloudFormation User Guide.)
srsResourceType :: Lens' StackResourceSummary Text
data Capability

-- | CAPABILITY_IAM
CapabilityIam :: Capability
data ResourceSignalStatus

-- | FAILURE
Failure :: ResourceSignalStatus

-- | SUCCESS
Success :: ResourceSignalStatus
data Stack

-- | <a>Stack</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sCapabilities</a> <tt>::</tt> [<a>Capability</a>]</li>
--   <li><a>sCreationTime</a> <tt>::</tt> <a>UTCTime</a></li>
--   <li><a>sDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>sDisableRollback</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>sLastUpdatedTime</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>sNotificationARNs</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>sOutputs</a> <tt>::</tt> [<a>Output</a>]</li>
--   <li><a>sParameters</a> <tt>::</tt> [<a>Parameter</a>]</li>
--   <li><a>sStackId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>sStackName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>sStackStatus</a> <tt>::</tt> <a>StackStatus</a></li>
--   <li><a>sStackStatusReason</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>sTags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   <li><a>sTimeoutInMinutes</a> <tt>::</tt> <a>Maybe</a>
--   <a>Natural</a></li>
--   </ul>
stack :: Text -> UTCTime -> StackStatus -> Stack

-- | The capabilities allowed in the stack.
sCapabilities :: Lens' Stack [Capability]

-- | Time at which the stack was created.
sCreationTime :: Lens' Stack UTCTime

-- | User defined description associated with the stack.
sDescription :: Lens' Stack (Maybe Text)

-- | Boolean to enable or disable rollback on stack creation failures:
--   
--   <tt>true</tt>: disable rollback <tt>false</tt>: enable rollback
sDisableRollback :: Lens' Stack (Maybe Bool)

-- | The time the stack was last updated. This field will only be returned
--   if the stack has been updated at least once.
sLastUpdatedTime :: Lens' Stack (Maybe UTCTime)

-- | SNS topic ARNs to which stack related events are published.
sNotificationARNs :: Lens' Stack [Text]

-- | A list of output structures.
sOutputs :: Lens' Stack [Output]

-- | A list of <a>Parameter</a> structures.
sParameters :: Lens' Stack [Parameter]

-- | Unique identifier of the stack.
sStackId :: Lens' Stack (Maybe Text)

-- | The name associated with the stack.
sStackName :: Lens' Stack Text

-- | Current status of the stack.
sStackStatus :: Lens' Stack StackStatus

-- | Success/failure message associated with the stack status.
sStackStatusReason :: Lens' Stack (Maybe Text)

-- | A list of <a>Tag</a>s that specify cost allocation information for the
--   stack.
sTags :: Lens' Stack [Tag]

-- | The amount of time within which stack creation should complete.
sTimeoutInMinutes :: Lens' Stack (Maybe Natural)
data OnFailure

-- | DELETE
Delete' :: OnFailure

-- | DO_NOTHING
DoNothing :: OnFailure

-- | ROLLBACK
Rollback :: OnFailure
data Parameter

-- | <a>Parameter</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pParameterKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pParameterValue</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pUsePreviousValue</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   </ul>
parameter :: Parameter

-- | The key associated with the parameter. If you don't specify a key and
--   value for a particular parameter, AWS CloudFormation uses the default
--   value that is specified in your template.
pParameterKey :: Lens' Parameter (Maybe Text)

-- | The value associated with the parameter.
pParameterValue :: Lens' Parameter (Maybe Text)

-- | During a stack update, use the existing parameter value that the stack
--   is using for a given parameter key. If you specify <tt>true</tt>, do
--   not specify a parameter value.
pUsePreviousValue :: Lens' Parameter (Maybe Bool)
instance Eq Tag
instance Ord Tag
instance Read Tag
instance Show Tag
instance Eq StackStatus
instance Ord StackStatus
instance Read StackStatus
instance Show StackStatus
instance Generic StackStatus
instance Enum StackStatus
instance Eq StackSummary
instance Read StackSummary
instance Show StackSummary
instance Eq ResourceStatus
instance Ord ResourceStatus
instance Read ResourceStatus
instance Show ResourceStatus
instance Generic ResourceStatus
instance Enum ResourceStatus
instance Eq StackResourceDetail
instance Read StackResourceDetail
instance Show StackResourceDetail
instance Eq StackEvent
instance Read StackEvent
instance Show StackEvent
instance Eq TemplateParameter
instance Ord TemplateParameter
instance Read TemplateParameter
instance Show TemplateParameter
instance Eq StackResource
instance Read StackResource
instance Show StackResource
instance Eq Output
instance Ord Output
instance Read Output
instance Show Output
instance Eq ParameterConstraints
instance Ord ParameterConstraints
instance Read ParameterConstraints
instance Show ParameterConstraints
instance Monoid ParameterConstraints
instance Semigroup ParameterConstraints
instance Eq ParameterDeclaration
instance Read ParameterDeclaration
instance Show ParameterDeclaration
instance Eq StackResourceSummary
instance Read StackResourceSummary
instance Show StackResourceSummary
instance Eq Capability
instance Ord Capability
instance Read Capability
instance Show Capability
instance Generic Capability
instance Enum Capability
instance Eq ResourceSignalStatus
instance Ord ResourceSignalStatus
instance Read ResourceSignalStatus
instance Show ResourceSignalStatus
instance Generic ResourceSignalStatus
instance Enum ResourceSignalStatus
instance Eq OnFailure
instance Ord OnFailure
instance Read OnFailure
instance Show OnFailure
instance Generic OnFailure
instance Enum OnFailure
instance Eq Parameter
instance Ord Parameter
instance Read Parameter
instance Show Parameter
instance Eq Stack
instance Read Stack
instance Show Stack
instance Datatype D1StackStatus
instance Constructor C1_0StackStatus
instance Constructor C1_1StackStatus
instance Constructor C1_2StackStatus
instance Constructor C1_3StackStatus
instance Constructor C1_4StackStatus
instance Constructor C1_5StackStatus
instance Constructor C1_6StackStatus
instance Constructor C1_7StackStatus
instance Constructor C1_8StackStatus
instance Constructor C1_9StackStatus
instance Constructor C1_10StackStatus
instance Constructor C1_11StackStatus
instance Constructor C1_12StackStatus
instance Constructor C1_13StackStatus
instance Constructor C1_14StackStatus
instance Constructor C1_15StackStatus
instance Datatype D1ResourceStatus
instance Constructor C1_0ResourceStatus
instance Constructor C1_1ResourceStatus
instance Constructor C1_2ResourceStatus
instance Constructor C1_3ResourceStatus
instance Constructor C1_4ResourceStatus
instance Constructor C1_5ResourceStatus
instance Constructor C1_6ResourceStatus
instance Constructor C1_7ResourceStatus
instance Constructor C1_8ResourceStatus
instance Constructor C1_9ResourceStatus
instance Datatype D1Capability
instance Constructor C1_0Capability
instance Datatype D1ResourceSignalStatus
instance Constructor C1_0ResourceSignalStatus
instance Constructor C1_1ResourceSignalStatus
instance Datatype D1OnFailure
instance Constructor C1_0OnFailure
instance Constructor C1_1OnFailure
instance Constructor C1_2OnFailure
instance ToQuery Parameter
instance FromXML Parameter
instance FromXML OnFailure
instance ToQuery OnFailure
instance ToHeader OnFailure
instance ToByteString OnFailure
instance ToText OnFailure
instance FromText OnFailure
instance Hashable OnFailure
instance ToQuery Stack
instance FromXML Stack
instance FromXML ResourceSignalStatus
instance ToQuery ResourceSignalStatus
instance ToHeader ResourceSignalStatus
instance ToByteString ResourceSignalStatus
instance ToText ResourceSignalStatus
instance FromText ResourceSignalStatus
instance Hashable ResourceSignalStatus
instance FromXML Capability
instance ToQuery Capability
instance ToHeader Capability
instance ToByteString Capability
instance ToText Capability
instance FromText Capability
instance Hashable Capability
instance ToQuery StackResourceSummary
instance FromXML StackResourceSummary
instance ToQuery ParameterConstraints
instance FromXML ParameterConstraints
instance IsList ParameterConstraints
instance ToQuery Output
instance FromXML Output
instance ToQuery StackResource
instance FromXML StackResource
instance ToQuery ParameterDeclaration
instance FromXML ParameterDeclaration
instance ToQuery TemplateParameter
instance FromXML TemplateParameter
instance FromXML ResourceStatus
instance ToQuery ResourceStatus
instance ToHeader ResourceStatus
instance ToByteString ResourceStatus
instance ToText ResourceStatus
instance FromText ResourceStatus
instance Hashable ResourceStatus
instance ToQuery StackResourceDetail
instance FromXML StackResourceDetail
instance ToQuery StackSummary
instance FromXML StackSummary
instance ToQuery StackEvent
instance FromXML StackEvent
instance FromXML StackStatus
instance ToQuery StackStatus
instance ToHeader StackStatus
instance ToByteString StackStatus
instance ToText StackStatus
instance FromText StackStatus
instance Hashable StackStatus
instance ToQuery Tag
instance FromXML Tag
instance AWSService CloudFormation


-- | Updates a stack as specified in the template. After the call completes
--   successfully, the stack update starts. You can check the status of the
--   stack via the <tt>DescribeStacks</tt> action.
--   
--   To get a copy of the template for an existing stack, you can use the
--   <tt>GetTemplate</tt> action.
--   
--   Tags that were associated with this stack during creation time will
--   still be associated with the stack after an <a>UpdateStack</a>
--   operation.
--   
--   For more information about creating an update template, updating a
--   stack, and monitoring the progress of the update, see <a>Updating a
--   Stack</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStack.html</a>
module Network.AWS.CloudFormation.UpdateStack
data UpdateStack

-- | <a>UpdateStack</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>usCapabilities</a> <tt>::</tt> [<a>Capability</a>]</li>
--   <li><a>usNotificationARNs</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>usParameters</a> <tt>::</tt> [<a>Parameter</a>]</li>
--   <li><a>usStackName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>usStackPolicyBody</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>usStackPolicyDuringUpdateBody</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>usStackPolicyDuringUpdateURL</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>usStackPolicyURL</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>usTemplateBody</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>usTemplateURL</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>usUsePreviousTemplate</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   </ul>
updateStack :: Text -> UpdateStack

-- | A list of capabilities that you must specify before AWS CloudFormation
--   can create or update certain stacks. Some stack templates might
--   include resources that can affect permissions in your AWS account. For
--   those stacks, you must explicitly acknowledge their capabilities by
--   specifying this parameter. Currently, the only valid value is
--   <tt>CAPABILITY_IAM</tt>, which is required for the following
--   resources: <a>AWS::IAM::AccessKey</a>, <a>AWS::IAM::Group</a>,
--   <a>AWS::IAM::InstanceProfile</a>, <a>AWS::IAM::Policy</a>,
--   <a>AWS::IAM::Role</a>, <a>AWS::IAM::User</a> , and
--   <a>AWS::IAM::UserToGroupAddition</a>. If your stack template contains
--   these resources, we recommend that you review any permissions
--   associated with them. If you don't specify this parameter, this action
--   returns an InsufficientCapabilities error.
usCapabilities :: Lens' UpdateStack [Capability]

-- | Update the ARNs for the Amazon SNS topics that are associated with the
--   stack.
usNotificationARNs :: Lens' UpdateStack [Text]

-- | A list of <a>Parameter</a> structures that specify input parameters
--   for the stack. For more information, see the <a>Parameter</a> data
--   type.
usParameters :: Lens' UpdateStack [Parameter]

-- | The name or unique stack ID of the stack to update.
usStackName :: Lens' UpdateStack Text

-- | Structure containing a new stack policy body. You can specify either
--   the <tt>StackPolicyBody</tt> or the <tt>StackPolicyURL</tt> parameter,
--   but not both.
--   
--   You might update the stack policy, for example, in order to protect a
--   new resource that you created during a stack update. If you do not
--   specify a stack policy, the current policy that is associated with the
--   stack is unchanged.
usStackPolicyBody :: Lens' UpdateStack (Maybe Text)

-- | Structure containing the temporary overriding stack policy body. You
--   can specify either the <tt>StackPolicyDuringUpdateBody</tt> or the
--   <tt>StackPolicyDuringUpdateURL</tt> parameter, but not both.
--   
--   If you want to update protected resources, specify a temporary
--   overriding stack policy during this update. If you do not specify a
--   stack policy, the current policy that is associated with the stack
--   will be used.
usStackPolicyDuringUpdateBody :: Lens' UpdateStack (Maybe Text)

-- | Location of a file containing the temporary overriding stack policy.
--   The URL must point to a policy (max size: 16KB) located in an S3
--   bucket in the same region as the stack. You can specify either the
--   <tt>StackPolicyDuringUpdateBody</tt> or the
--   <tt>StackPolicyDuringUpdateURL</tt> parameter, but not both.
--   
--   If you want to update protected resources, specify a temporary
--   overriding stack policy during this update. If you do not specify a
--   stack policy, the current policy that is associated with the stack
--   will be used.
usStackPolicyDuringUpdateURL :: Lens' UpdateStack (Maybe Text)

-- | Location of a file containing the updated stack policy. The URL must
--   point to a policy (max size: 16KB) located in an S3 bucket in the same
--   region as the stack. You can specify either the
--   <tt>StackPolicyBody</tt> or the <tt>StackPolicyURL</tt> parameter, but
--   not both.
--   
--   You might update the stack policy, for example, in order to protect a
--   new resource that you created during a stack update. If you do not
--   specify a stack policy, the current policy that is associated with the
--   stack is unchanged.
usStackPolicyURL :: Lens' UpdateStack (Maybe Text)

-- | Structure containing the template body with a minimum length of 1 byte
--   and a maximum length of 51,200 bytes. (For more information, go to
--   <a>Template Anatomy</a> in the AWS CloudFormation User Guide.)
--   
--   Conditional: You must specify either the <tt>TemplateBody</tt> or the
--   <tt>TemplateURL</tt> parameter, but not both.
usTemplateBody :: Lens' UpdateStack (Maybe Text)

-- | Location of file containing the template body. The URL must point to a
--   template located in an S3 bucket in the same region as the stack. For
--   more information, go to <a>Template Anatomy</a> in the AWS
--   CloudFormation User Guide.
--   
--   Conditional: You must specify either the <tt>TemplateBody</tt> or the
--   <tt>TemplateURL</tt> parameter, but not both.
usTemplateURL :: Lens' UpdateStack (Maybe Text)

-- | Reuse the existing template that is associated with the stack that you
--   are updating.
usUsePreviousTemplate :: Lens' UpdateStack (Maybe Bool)
data UpdateStackResponse

-- | <a>UpdateStackResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>usrStackId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
updateStackResponse :: UpdateStackResponse

-- | Unique identifier of the stack.
usrStackId :: Lens' UpdateStackResponse (Maybe Text)
instance Eq UpdateStack
instance Read UpdateStack
instance Show UpdateStack
instance Eq UpdateStackResponse
instance Ord UpdateStackResponse
instance Read UpdateStackResponse
instance Show UpdateStackResponse
instance Monoid UpdateStackResponse
instance FromXML UpdateStackResponse
instance AWSRequest UpdateStack
instance ToHeaders UpdateStack
instance ToQuery UpdateStack
instance ToPath UpdateStack


-- | Validates a specified template.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_ValidateTemplate.html</a>
module Network.AWS.CloudFormation.ValidateTemplate
data ValidateTemplate

-- | <a>ValidateTemplate</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vtTemplateBody</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>vtTemplateURL</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
validateTemplate :: ValidateTemplate

-- | Structure containing the template body with a minimum length of 1 byte
--   and a maximum length of 51,200 bytes. For more information, go to
--   <a>Template Anatomy</a> in the AWS CloudFormation User Guide.
--   
--   Conditional: You must pass <tt>TemplateURL</tt> or
--   <tt>TemplateBody</tt>. If both are passed, only <tt>TemplateBody</tt>
--   is used.
vtTemplateBody :: Lens' ValidateTemplate (Maybe Text)

-- | Location of file containing the template body. The URL must point to a
--   template (max size: 460,800 bytes) located in an S3 bucket in the same
--   region as the stack. For more information, go to <a>Template
--   Anatomy</a> in the AWS CloudFormation User Guide.
--   
--   Conditional: You must pass <tt>TemplateURL</tt> or
--   <tt>TemplateBody</tt>. If both are passed, only <tt>TemplateBody</tt>
--   is used.
vtTemplateURL :: Lens' ValidateTemplate (Maybe Text)
data ValidateTemplateResponse

-- | <a>ValidateTemplateResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vtrCapabilities</a> <tt>::</tt> [<a>Capability</a>]</li>
--   <li><a>vtrCapabilitiesReason</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>vtrDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>vtrParameters</a> <tt>::</tt> [<a>TemplateParameter</a>]</li>
--   </ul>
validateTemplateResponse :: ValidateTemplateResponse

-- | The capabilities found within the template. Currently, AWS
--   CloudFormation supports only the CAPABILITY_IAM capability. If your
--   template contains IAM resources, you must specify the CAPABILITY_IAM
--   value for this parameter when you use the <tt>CreateStack</tt> or
--   <tt>UpdateStack</tt> actions with your template; otherwise, those
--   actions return an InsufficientCapabilities error.
vtrCapabilities :: Lens' ValidateTemplateResponse [Capability]

-- | The list of resources that generated the values in the
--   <tt>Capabilities</tt> response element.
vtrCapabilitiesReason :: Lens' ValidateTemplateResponse (Maybe Text)

-- | The description found within the template.
vtrDescription :: Lens' ValidateTemplateResponse (Maybe Text)

-- | A list of <a>TemplateParameter</a> structures.
vtrParameters :: Lens' ValidateTemplateResponse [TemplateParameter]
instance Eq ValidateTemplate
instance Ord ValidateTemplate
instance Read ValidateTemplate
instance Show ValidateTemplate
instance Eq ValidateTemplateResponse
instance Read ValidateTemplateResponse
instance Show ValidateTemplateResponse
instance FromXML ValidateTemplateResponse
instance AWSRequest ValidateTemplate
instance ToHeaders ValidateTemplate
instance ToQuery ValidateTemplate
instance ToPath ValidateTemplate


-- | Sends a signal to the specified resource with a success or failure
--   status. You can use the SignalResource API in conjunction with a
--   creation policy or update policy. AWS CloudFormation doesn't proceed
--   with a stack creation or update until resources receive the required
--   number of signals or the timeout period is exceeded. The
--   SignalResource API is useful in cases where you want to send signals
--   from anywhere other than an Amazon EC2 instance.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_SignalResource.html</a>
module Network.AWS.CloudFormation.SignalResource
data SignalResource

-- | <a>SignalResource</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>srLogicalResourceId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>srStackName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>srStatus</a> <tt>::</tt> <a>ResourceSignalStatus</a></li>
--   <li><a>srUniqueId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
signalResource :: Text -> Text -> Text -> ResourceSignalStatus -> SignalResource

-- | The logical ID of the resource that you want to signal. The logical ID
--   is the name of the resource that given in the template.
srLogicalResourceId :: Lens' SignalResource Text

-- | The stack name or unique stack ID that includes the resource that you
--   want to signal.
srStackName :: Lens' SignalResource Text

-- | The status of the signal, which is either success or failure. A
--   failure signal causes AWS CloudFormation to immediately fail the stack
--   creation or update.
srStatus :: Lens' SignalResource ResourceSignalStatus

-- | A unique ID of the signal. When you signal Amazon EC2 instances or
--   Auto Scaling groups, specify the instance ID that you are signaling as
--   the unique ID. If you send multiple signals to a single resource (such
--   as signaling a wait condition), each signal requires a different
--   unique ID.
srUniqueId :: Lens' SignalResource Text
data SignalResourceResponse

-- | <a>SignalResourceResponse</a> constructor.
signalResourceResponse :: SignalResourceResponse
instance Eq SignalResource
instance Read SignalResource
instance Show SignalResource
instance Eq SignalResourceResponse
instance Ord SignalResourceResponse
instance Read SignalResourceResponse
instance Show SignalResourceResponse
instance Generic SignalResourceResponse
instance Datatype D1SignalResourceResponse
instance Constructor C1_0SignalResourceResponse
instance AWSRequest SignalResource
instance ToHeaders SignalResource
instance ToQuery SignalResource
instance ToPath SignalResource


-- | Sets a stack policy for a specified stack.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_SetStackPolicy.html</a>
module Network.AWS.CloudFormation.SetStackPolicy
data SetStackPolicy

-- | <a>SetStackPolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sspStackName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>sspStackPolicyBody</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>sspStackPolicyURL</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
setStackPolicy :: Text -> SetStackPolicy

-- | The name or unique stack ID that you want to associate a policy with.
sspStackName :: Lens' SetStackPolicy Text

-- | Structure containing the stack policy body. For more information, go
--   to <a>Prevent Updates to Stack Resources</a> in the AWS CloudFormation
--   User Guide. You can specify either the <tt>StackPolicyBody</tt> or the
--   <tt>StackPolicyURL</tt> parameter, but not both.
sspStackPolicyBody :: Lens' SetStackPolicy (Maybe Text)

-- | Location of a file containing the stack policy. The URL must point to
--   a policy (max size: 16KB) located in an S3 bucket in the same region
--   as the stack. You can specify either the <tt>StackPolicyBody</tt> or
--   the <tt>StackPolicyURL</tt> parameter, but not both.
sspStackPolicyURL :: Lens' SetStackPolicy (Maybe Text)
data SetStackPolicyResponse

-- | <a>SetStackPolicyResponse</a> constructor.
setStackPolicyResponse :: SetStackPolicyResponse
instance Eq SetStackPolicy
instance Ord SetStackPolicy
instance Read SetStackPolicy
instance Show SetStackPolicy
instance Eq SetStackPolicyResponse
instance Ord SetStackPolicyResponse
instance Read SetStackPolicyResponse
instance Show SetStackPolicyResponse
instance Generic SetStackPolicyResponse
instance Datatype D1SetStackPolicyResponse
instance Constructor C1_0SetStackPolicyResponse
instance AWSRequest SetStackPolicy
instance ToHeaders SetStackPolicy
instance ToQuery SetStackPolicy
instance ToPath SetStackPolicy


-- | Returns the summary information for stacks whose status matches the
--   specified StackStatusFilter. Summary information for stacks that have
--   been deleted is kept for 90 days after the stack is deleted. If no
--   StackStatusFilter is specified, summary information for all stacks is
--   returned (including existing stacks and stacks that have been
--   deleted).
--   
--   
--   <a>http://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_ListStacks.html</a>
module Network.AWS.CloudFormation.ListStacks
data ListStacks

-- | <a>ListStacks</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lsNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lsStackStatusFilter</a> <tt>::</tt> [<a>StackStatus</a>]</li>
--   </ul>
listStacks :: ListStacks

-- | String that identifies the start of the next list of stacks, if there
--   is one.
--   
--   Default: There is no default value.
lsNextToken :: Lens' ListStacks (Maybe Text)

-- | Stack status to use as a filter. Specify one or more stack status
--   codes to list only stacks with the specified status codes. For a
--   complete list of stack status codes, see the <a>StackStatus</a>
--   parameter of the <a>Stack</a> data type.
lsStackStatusFilter :: Lens' ListStacks [StackStatus]
data ListStacksResponse

-- | <a>ListStacksResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lsr1NextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lsr1StackSummaries</a> <tt>::</tt> [<a>StackSummary</a>]</li>
--   </ul>
listStacksResponse :: ListStacksResponse

-- | String that identifies the start of the next list of stacks, if there
--   is one.
lsr1NextToken :: Lens' ListStacksResponse (Maybe Text)

-- | A list of <a>StackSummary</a> structures containing information about
--   the specified stacks.
lsr1StackSummaries :: Lens' ListStacksResponse [StackSummary]
instance Eq ListStacks
instance Read ListStacks
instance Show ListStacks
instance Eq ListStacksResponse
instance Read ListStacksResponse
instance Show ListStacksResponse
instance AWSPager ListStacks
instance FromXML ListStacksResponse
instance AWSRequest ListStacks
instance ToHeaders ListStacks
instance ToQuery ListStacks
instance ToPath ListStacks


-- | Returns descriptions of all resources of the specified stack.
--   
--   For deleted stacks, ListStackResources returns resource information
--   for up to 90 days after the stack has been deleted.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_ListStackResources.html</a>
module Network.AWS.CloudFormation.ListStackResources
data ListStackResources

-- | <a>ListStackResources</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lsrNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lsrStackName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
listStackResources :: Text -> ListStackResources

-- | String that identifies the start of the next list of stack resource
--   summaries, if there is one.
--   
--   Default: There is no default value.
lsrNextToken :: Lens' ListStackResources (Maybe Text)

-- | The name or the unique stack ID that is associated with the stack,
--   which are not always interchangeable:
--   
--   Running stacks: You can specify either the stack's name or its unique
--   stack ID. Deleted stacks: You must specify the unique stack ID.
--   Default: There is no default value.
lsrStackName :: Lens' ListStackResources Text
data ListStackResourcesResponse

-- | <a>ListStackResourcesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lsrrNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lsrrStackResourceSummaries</a> <tt>::</tt>
--   [<a>StackResourceSummary</a>]</li>
--   </ul>
listStackResourcesResponse :: ListStackResourcesResponse

-- | String that identifies the start of the next list of stack resources,
--   if there is one.
lsrrNextToken :: Lens' ListStackResourcesResponse (Maybe Text)

-- | A list of <a>StackResourceSummary</a> structures.
lsrrStackResourceSummaries :: Lens' ListStackResourcesResponse [StackResourceSummary]
instance Eq ListStackResources
instance Ord ListStackResources
instance Read ListStackResources
instance Show ListStackResources
instance Eq ListStackResourcesResponse
instance Read ListStackResourcesResponse
instance Show ListStackResourcesResponse
instance AWSPager ListStackResources
instance FromXML ListStackResourcesResponse
instance AWSRequest ListStackResources
instance ToHeaders ListStackResources
instance ToQuery ListStackResources
instance ToPath ListStackResources


-- | Returns information about a new or existing template. The
--   <a>GetTemplateSummary</a> action is useful for viewing parameter
--   information, such as default parameter values and parameter types,
--   before you create or update a stack.
--   
--   You can use the <a>GetTemplateSummary</a> action when you submit a
--   template, or you can get template information for a running or deleted
--   stack.
--   
--   For deleted stacks, <a>GetTemplateSummary</a> returns the template
--   information for up to 90 days after the stack has been deleted. If the
--   template does not exist, a <tt>ValidationError</tt> is returned.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_GetTemplateSummary.html</a>
module Network.AWS.CloudFormation.GetTemplateSummary
data GetTemplateSummary

-- | <a>GetTemplateSummary</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gtsStackName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gtsTemplateBody</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gtsTemplateURL</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
getTemplateSummary :: GetTemplateSummary

-- | The name or the stack ID that is associated with the stack, which are
--   not always interchangeable. For running stacks, you can specify either
--   the stack's name or its unique stack ID. For deleted stack, you must
--   specify the unique stack ID.
--   
--   Conditional: You must specify only one of the following parameters:
--   <tt>StackName</tt> , <tt>TemplateBody</tt>, or <tt>TemplateURL</tt>.
gtsStackName :: Lens' GetTemplateSummary (Maybe Text)

-- | Structure containing the template body with a minimum length of 1 byte
--   and a maximum length of 51,200 bytes. For more information about
--   templates, see <a>Template Anatomy</a> in the AWS CloudFormation User
--   Guide.
--   
--   Conditional: You must specify only one of the following parameters:
--   <tt>StackName</tt> , <tt>TemplateBody</tt>, or <tt>TemplateURL</tt>.
gtsTemplateBody :: Lens' GetTemplateSummary (Maybe Text)

-- | Location of file containing the template body. The URL must point to a
--   template (max size: 460,800 bytes) located in an Amazon S3 bucket. For
--   more information about templates, see <a>Template Anatomy</a> in the
--   AWS CloudFormation User Guide.
--   
--   Conditional: You must specify only one of the following parameters:
--   <tt>StackName</tt> , <tt>TemplateBody</tt>, or <tt>TemplateURL</tt>.
gtsTemplateURL :: Lens' GetTemplateSummary (Maybe Text)
data GetTemplateSummaryResponse

-- | <a>GetTemplateSummaryResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gtsrCapabilities</a> <tt>::</tt> [<a>Capability</a>]</li>
--   <li><a>gtsrCapabilitiesReason</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>gtsrDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gtsrMetadata</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gtsrParameters</a> <tt>::</tt>
--   [<a>ParameterDeclaration</a>]</li>
--   <li><a>gtsrVersion</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
getTemplateSummaryResponse :: GetTemplateSummaryResponse

-- | The capabilities found within the template. Currently, AWS
--   CloudFormation supports only the CAPABILITY_IAM capability. If your
--   template contains IAM resources, you must specify the CAPABILITY_IAM
--   value for this parameter when you use the <tt>CreateStack</tt> or
--   <tt>UpdateStack</tt> actions with your template; otherwise, those
--   actions return an InsufficientCapabilities error.
gtsrCapabilities :: Lens' GetTemplateSummaryResponse [Capability]

-- | The list of resources that generated the values in the
--   <tt>Capabilities</tt> response element.
gtsrCapabilitiesReason :: Lens' GetTemplateSummaryResponse (Maybe Text)

-- | The value that is defined in the <tt>Description</tt> property of the
--   template.
gtsrDescription :: Lens' GetTemplateSummaryResponse (Maybe Text)

-- | The value that is defined for the <tt>Metadata</tt> property of the
--   template.
gtsrMetadata :: Lens' GetTemplateSummaryResponse (Maybe Text)

-- | A list of parameter declarations that describe various properties for
--   each parameter.
gtsrParameters :: Lens' GetTemplateSummaryResponse [ParameterDeclaration]

-- | The AWS template format version, which identifies the capabilities of
--   the template.
gtsrVersion :: Lens' GetTemplateSummaryResponse (Maybe Text)
instance Eq GetTemplateSummary
instance Ord GetTemplateSummary
instance Read GetTemplateSummary
instance Show GetTemplateSummary
instance Eq GetTemplateSummaryResponse
instance Read GetTemplateSummaryResponse
instance Show GetTemplateSummaryResponse
instance FromXML GetTemplateSummaryResponse
instance AWSRequest GetTemplateSummary
instance ToHeaders GetTemplateSummary
instance ToQuery GetTemplateSummary
instance ToPath GetTemplateSummary


-- | Returns the template body for a specified stack. You can get the
--   template for running or deleted stacks.
--   
--   For deleted stacks, GetTemplate returns the template for up to 90 days
--   after the stack has been deleted.
--   
--   If the template does not exist, a <tt>ValidationError</tt> is
--   returned.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_GetTemplate.html</a>
module Network.AWS.CloudFormation.GetTemplate
data GetTemplate

-- | <a>GetTemplate</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gtStackName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getTemplate :: Text -> GetTemplate

-- | The name or the unique stack ID that is associated with the stack,
--   which are not always interchangeable:
--   
--   Running stacks: You can specify either the stack's name or its unique
--   stack ID. Deleted stacks: You must specify the unique stack ID.
--   Default: There is no default value.
gtStackName :: Lens' GetTemplate Text
data GetTemplateResponse

-- | <a>GetTemplateResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gtrTemplateBody</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
getTemplateResponse :: GetTemplateResponse

-- | Structure containing the template body. (For more information, go to
--   <a>TemplateAnatomy</a> in the AWS CloudFormation User Guide.)
gtrTemplateBody :: Lens' GetTemplateResponse (Maybe Text)
instance Eq GetTemplate
instance Ord GetTemplate
instance Read GetTemplate
instance Show GetTemplate
instance Monoid GetTemplate
instance IsString GetTemplate
instance Eq GetTemplateResponse
instance Ord GetTemplateResponse
instance Read GetTemplateResponse
instance Show GetTemplateResponse
instance Monoid GetTemplateResponse
instance FromXML GetTemplateResponse
instance AWSRequest GetTemplate
instance ToHeaders GetTemplate
instance ToQuery GetTemplate
instance ToPath GetTemplate


-- | Returns the stack policy for a specified stack. If a stack doesn't
--   have a policy, a null value is returned.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_GetStackPolicy.html</a>
module Network.AWS.CloudFormation.GetStackPolicy
data GetStackPolicy

-- | <a>GetStackPolicy</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gspStackName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getStackPolicy :: Text -> GetStackPolicy

-- | The name or unique stack ID that is associated with the stack whose
--   policy you want to get.
gspStackName :: Lens' GetStackPolicy Text
data GetStackPolicyResponse

-- | <a>GetStackPolicyResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gsprStackPolicyBody</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
getStackPolicyResponse :: GetStackPolicyResponse

-- | Structure containing the stack policy body. (For more information, go
--   to <a>Prevent Updates to Stack Resources</a> in the AWS CloudFormation
--   User Guide.)
gsprStackPolicyBody :: Lens' GetStackPolicyResponse (Maybe Text)
instance Eq GetStackPolicy
instance Ord GetStackPolicy
instance Read GetStackPolicy
instance Show GetStackPolicy
instance Monoid GetStackPolicy
instance IsString GetStackPolicy
instance Eq GetStackPolicyResponse
instance Ord GetStackPolicyResponse
instance Read GetStackPolicyResponse
instance Show GetStackPolicyResponse
instance Monoid GetStackPolicyResponse
instance FromXML GetStackPolicyResponse
instance AWSRequest GetStackPolicy
instance ToHeaders GetStackPolicy
instance ToQuery GetStackPolicy
instance ToPath GetStackPolicy


-- | Returns the estimated monthly cost of a template. The return value is
--   an AWS Simple Monthly Calculator URL with a query string that
--   describes the resources required to run the template.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_EstimateTemplateCost.html</a>
module Network.AWS.CloudFormation.EstimateTemplateCost
data EstimateTemplateCost

-- | <a>EstimateTemplateCost</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>etcParameters</a> <tt>::</tt> [<a>Parameter</a>]</li>
--   <li><a>etcTemplateBody</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>etcTemplateURL</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
estimateTemplateCost :: EstimateTemplateCost

-- | A list of <a>Parameter</a> structures that specify input parameters.
etcParameters :: Lens' EstimateTemplateCost [Parameter]

-- | Structure containing the template body with a minimum length of 1 byte
--   and a maximum length of 51,200 bytes. (For more information, go to
--   <a>Template Anatomy</a> in the AWS CloudFormation User Guide.)
--   
--   Conditional: You must pass <tt>TemplateBody</tt> or
--   <tt>TemplateURL</tt>. If both are passed, only <tt>TemplateBody</tt>
--   is used.
etcTemplateBody :: Lens' EstimateTemplateCost (Maybe Text)

-- | Location of file containing the template body. The URL must point to a
--   template located in an S3 bucket in the same region as the stack. For
--   more information, go to <a>Template Anatomy</a> in the AWS
--   CloudFormation User Guide.
--   
--   Conditional: You must pass <tt>TemplateURL</tt> or
--   <tt>TemplateBody</tt>. If both are passed, only <tt>TemplateBody</tt>
--   is used.
etcTemplateURL :: Lens' EstimateTemplateCost (Maybe Text)
data EstimateTemplateCostResponse

-- | <a>EstimateTemplateCostResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>etcrUrl</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
estimateTemplateCostResponse :: EstimateTemplateCostResponse

-- | An AWS Simple Monthly Calculator URL with a query string that
--   describes the resources required to run the template.
etcrUrl :: Lens' EstimateTemplateCostResponse (Maybe Text)
instance Eq EstimateTemplateCost
instance Read EstimateTemplateCost
instance Show EstimateTemplateCost
instance Eq EstimateTemplateCostResponse
instance Ord EstimateTemplateCostResponse
instance Read EstimateTemplateCostResponse
instance Show EstimateTemplateCostResponse
instance Monoid EstimateTemplateCostResponse
instance FromXML EstimateTemplateCostResponse
instance AWSRequest EstimateTemplateCost
instance ToHeaders EstimateTemplateCost
instance ToQuery EstimateTemplateCost
instance ToPath EstimateTemplateCost


-- | Returns the description for the specified stack; if no stack name was
--   specified, then it returns the description for all the stacks created.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_DescribeStacks.html</a>
module Network.AWS.CloudFormation.DescribeStacks
data DescribeStacks

-- | <a>DescribeStacks</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ds1NextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ds1StackName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
describeStacks :: DescribeStacks

-- | String that identifies the start of the next list of stacks, if there
--   is one.
ds1NextToken :: Lens' DescribeStacks (Maybe Text)

-- | The name or the unique stack ID that is associated with the stack,
--   which are not always interchangeable:
--   
--   Running stacks: You can specify either the stack's name or its unique
--   stack ID. Deleted stacks: You must specify the unique stack ID.
--   Default: There is no default value.
ds1StackName :: Lens' DescribeStacks (Maybe Text)
data DescribeStacksResponse

-- | <a>DescribeStacksResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsrNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dsrStacks</a> <tt>::</tt> [<a>Stack</a>]</li>
--   </ul>
describeStacksResponse :: DescribeStacksResponse

-- | String that identifies the start of the next list of stacks, if there
--   is one.
dsrNextToken :: Lens' DescribeStacksResponse (Maybe Text)

-- | A list of stack structures.
dsrStacks :: Lens' DescribeStacksResponse [Stack]
instance Eq DescribeStacks
instance Ord DescribeStacks
instance Read DescribeStacks
instance Show DescribeStacks
instance Eq DescribeStacksResponse
instance Read DescribeStacksResponse
instance Show DescribeStacksResponse
instance AWSPager DescribeStacks
instance FromXML DescribeStacksResponse
instance AWSRequest DescribeStacks
instance ToHeaders DescribeStacks
instance ToQuery DescribeStacks
instance ToPath DescribeStacks


-- | Returns AWS resource descriptions for running and deleted stacks. If
--   <tt>StackName</tt> is specified, all the associated resources that are
--   part of the stack are returned. If <tt>PhysicalResourceId</tt> is
--   specified, the associated resources of the stack that the resource
--   belongs to are returned.
--   
--   Only the first 100 resources will be returned. If your stack has more
--   resources than this, you should use <tt>ListStackResources</tt>
--   instead. For deleted stacks, <a>DescribeStackResources</a> returns
--   resource information for up to 90 days after the stack has been
--   deleted.
--   
--   You must specify either <tt>StackName</tt> or
--   <tt>PhysicalResourceId</tt>, but not both. In addition, you can
--   specify <tt>LogicalResourceId</tt> to filter the returned result. For
--   more information about resources, the <tt>LogicalResourceId</tt> and
--   <tt>PhysicalResourceId</tt>, go to the <a>AWS CloudFormation User
--   Guide</a>.
--   
--   A <tt>ValidationError</tt> is returned if you specify both
--   <tt>StackName</tt> and <tt>PhysicalResourceId</tt> in the same
--   request.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_DescribeStackResources.html</a>
module Network.AWS.CloudFormation.DescribeStackResources
data DescribeStackResources

-- | <a>DescribeStackResources</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsrLogicalResourceId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>dsrPhysicalResourceId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>dsrStackName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
describeStackResources :: DescribeStackResources

-- | The logical name of the resource as specified in the template.
--   
--   Default: There is no default value.
dsrLogicalResourceId :: Lens' DescribeStackResources (Maybe Text)

-- | The name or unique identifier that corresponds to a physical instance
--   ID of a resource supported by AWS CloudFormation.
--   
--   For example, for an Amazon Elastic Compute Cloud (EC2) instance,
--   <tt>PhysicalResourceId</tt> corresponds to the <tt>InstanceId</tt>.
--   You can pass the EC2 <tt>InstanceId</tt> to
--   <a>DescribeStackResources</a> to find which stack the instance belongs
--   to and what other resources are part of the stack.
--   
--   Required: Conditional. If you do not specify
--   <tt>PhysicalResourceId</tt>, you must specify <tt>StackName</tt>.
--   
--   Default: There is no default value.
dsrPhysicalResourceId :: Lens' DescribeStackResources (Maybe Text)

-- | The name or the unique stack ID that is associated with the stack,
--   which are not always interchangeable:
--   
--   Running stacks: You can specify either the stack's name or its unique
--   stack ID. Deleted stacks: You must specify the unique stack ID.
--   Default: There is no default value.
--   
--   Required: Conditional. If you do not specify <tt>StackName</tt>, you
--   must specify <tt>PhysicalResourceId</tt>.
dsrStackName :: Lens' DescribeStackResources (Maybe Text)
data DescribeStackResourcesResponse

-- | <a>DescribeStackResourcesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsrrStackResources</a> <tt>::</tt> [<a>StackResource</a>]</li>
--   </ul>
describeStackResourcesResponse :: DescribeStackResourcesResponse

-- | A list of <a>StackResource</a> structures.
dsrrStackResources :: Lens' DescribeStackResourcesResponse [StackResource]
instance Eq DescribeStackResources
instance Ord DescribeStackResources
instance Read DescribeStackResources
instance Show DescribeStackResources
instance Eq DescribeStackResourcesResponse
instance Read DescribeStackResourcesResponse
instance Show DescribeStackResourcesResponse
instance Monoid DescribeStackResourcesResponse
instance Semigroup DescribeStackResourcesResponse
instance FromXML DescribeStackResourcesResponse
instance AWSRequest DescribeStackResources
instance ToHeaders DescribeStackResources
instance ToQuery DescribeStackResources
instance ToPath DescribeStackResources
instance IsList DescribeStackResourcesResponse


-- | Returns a description of the specified resource in the specified
--   stack.
--   
--   For deleted stacks, DescribeStackResource returns resource information
--   for up to 90 days after the stack has been deleted.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_DescribeStackResource.html</a>
module Network.AWS.CloudFormation.DescribeStackResource
data DescribeStackResource

-- | <a>DescribeStackResource</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsr1LogicalResourceId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>dsr1StackName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
describeStackResource :: Text -> Text -> DescribeStackResource

-- | The logical name of the resource as specified in the template.
--   
--   Default: There is no default value.
dsr1LogicalResourceId :: Lens' DescribeStackResource Text

-- | The name or the unique stack ID that is associated with the stack,
--   which are not always interchangeable:
--   
--   Running stacks: You can specify either the stack's name or its unique
--   stack ID. Deleted stacks: You must specify the unique stack ID.
--   Default: There is no default value.
dsr1StackName :: Lens' DescribeStackResource Text
data DescribeStackResourceResponse

-- | <a>DescribeStackResourceResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsrrStackResourceDetail</a> <tt>::</tt> <a>Maybe</a>
--   <a>StackResourceDetail</a></li>
--   </ul>
describeStackResourceResponse :: DescribeStackResourceResponse

-- | A <a>StackResourceDetail</a> structure containing the description of
--   the specified resource in the specified stack.
dsrrStackResourceDetail :: Lens' DescribeStackResourceResponse (Maybe StackResourceDetail)
instance Eq DescribeStackResource
instance Ord DescribeStackResource
instance Read DescribeStackResource
instance Show DescribeStackResource
instance Eq DescribeStackResourceResponse
instance Read DescribeStackResourceResponse
instance Show DescribeStackResourceResponse
instance FromXML DescribeStackResourceResponse
instance AWSRequest DescribeStackResource
instance ToHeaders DescribeStackResource
instance ToQuery DescribeStackResource
instance ToPath DescribeStackResource


-- | Returns all stack related events for a specified stack. For more
--   information about a stack's event history, go to <a>Stacks</a> in the
--   AWS CloudFormation User Guide.
--   
--   You can list events for stacks that have failed to create or have been
--   deleted by specifying the unique stack identifier (stack ID).
--   
--   
--   <a>http://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_DescribeStackEvents.html</a>
module Network.AWS.CloudFormation.DescribeStackEvents
data DescribeStackEvents

-- | <a>DescribeStackEvents</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dseNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dseStackName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
describeStackEvents :: DescribeStackEvents

-- | String that identifies the start of the next list of events, if there
--   is one.
--   
--   Default: There is no default value.
dseNextToken :: Lens' DescribeStackEvents (Maybe Text)

-- | The name or the unique stack ID that is associated with the stack,
--   which are not always interchangeable:
--   
--   Running stacks: You can specify either the stack's name or its unique
--   stack ID. Deleted stacks: You must specify the unique stack ID.
--   Default: There is no default value.
dseStackName :: Lens' DescribeStackEvents (Maybe Text)
data DescribeStackEventsResponse

-- | <a>DescribeStackEventsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dserNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dserStackEvents</a> <tt>::</tt> [<a>StackEvent</a>]</li>
--   </ul>
describeStackEventsResponse :: DescribeStackEventsResponse

-- | String that identifies the start of the next list of events, if there
--   is one.
dserNextToken :: Lens' DescribeStackEventsResponse (Maybe Text)

-- | A list of <tt>StackEvents</tt> structures.
dserStackEvents :: Lens' DescribeStackEventsResponse [StackEvent]
instance Eq DescribeStackEvents
instance Ord DescribeStackEvents
instance Read DescribeStackEvents
instance Show DescribeStackEvents
instance Eq DescribeStackEventsResponse
instance Read DescribeStackEventsResponse
instance Show DescribeStackEventsResponse
instance AWSPager DescribeStackEvents
instance FromXML DescribeStackEventsResponse
instance AWSRequest DescribeStackEvents
instance ToHeaders DescribeStackEvents
instance ToQuery DescribeStackEvents
instance ToPath DescribeStackEvents


-- | Deletes a specified stack. Once the call completes successfully, stack
--   deletion starts. Deleted stacks do not show up in the
--   <tt>DescribeStacks</tt> API if the deletion has been completed
--   successfully.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_DeleteStack.html</a>
module Network.AWS.CloudFormation.DeleteStack
data DeleteStack

-- | <a>DeleteStack</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsStackName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteStack :: Text -> DeleteStack

-- | The name or the unique stack ID that is associated with the stack.
dsStackName :: Lens' DeleteStack Text
data DeleteStackResponse

-- | <a>DeleteStackResponse</a> constructor.
deleteStackResponse :: DeleteStackResponse
instance Eq DeleteStack
instance Ord DeleteStack
instance Read DeleteStack
instance Show DeleteStack
instance Monoid DeleteStack
instance IsString DeleteStack
instance Eq DeleteStackResponse
instance Ord DeleteStackResponse
instance Read DeleteStackResponse
instance Show DeleteStackResponse
instance Generic DeleteStackResponse
instance Datatype D1DeleteStackResponse
instance Constructor C1_0DeleteStackResponse
instance AWSRequest DeleteStack
instance ToHeaders DeleteStack
instance ToQuery DeleteStack
instance ToPath DeleteStack


-- | Creates a stack as specified in the template. After the call completes
--   successfully, the stack creation starts. You can check the status of
--   the stack via the <tt>DescribeStacks</tt> API.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStack.html</a>
module Network.AWS.CloudFormation.CreateStack
data CreateStack

-- | <a>CreateStack</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>csCapabilities</a> <tt>::</tt> [<a>Capability</a>]</li>
--   <li><a>csDisableRollback</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>csNotificationARNs</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>csOnFailure</a> <tt>::</tt> <a>Maybe</a> <a>OnFailure</a></li>
--   <li><a>csParameters</a> <tt>::</tt> [<a>Parameter</a>]</li>
--   <li><a>csStackName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>csStackPolicyBody</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>csStackPolicyURL</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>csTags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   <li><a>csTemplateBody</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>csTemplateURL</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>csTimeoutInMinutes</a> <tt>::</tt> <a>Maybe</a>
--   <a>Natural</a></li>
--   </ul>
createStack :: Text -> CreateStack

-- | A list of capabilities that you must specify before AWS CloudFormation
--   can create or update certain stacks. Some stack templates might
--   include resources that can affect permissions in your AWS account. For
--   those stacks, you must explicitly acknowledge their capabilities by
--   specifying this parameter.
--   
--   Currently, the only valid value is <tt>CAPABILITY_IAM</tt>, which is
--   required for the following resources: <a>AWS::IAM::AccessKey</a>,
--   <a>AWS::IAM::Group</a>, <a>AWS::IAM::InstanceProfile</a>,
--   <a>AWS::IAM::Policy</a>, <a>AWS::IAM::Role</a>, <a>AWS::IAM::User</a>
--   , and <a>AWS::IAM::UserToGroupAddition</a>. If your stack template
--   contains these resources, we recommend that you review any permissions
--   associated with them. If you don't specify this parameter, this action
--   returns an <tt>InsufficientCapabilities</tt> error.
csCapabilities :: Lens' CreateStack [Capability]

-- | Set to <tt>true</tt> to disable rollback of the stack if stack
--   creation failed. You can specify either <tt>DisableRollback</tt> or
--   <a>OnFailure</a>, but not both.
--   
--   Default: <tt>false</tt>
csDisableRollback :: Lens' CreateStack (Maybe Bool)

-- | The Simple Notification Service (SNS) topic ARNs to publish stack
--   related events. You can find your SNS topic ARNs using the <a>SNS
--   console</a> or your Command Line Interface (CLI).
csNotificationARNs :: Lens' CreateStack [Text]

-- | Determines what action will be taken if stack creation fails. This
--   must be one of: DO_NOTHING, ROLLBACK, or DELETE. You can specify
--   either <a>OnFailure</a> or <tt>DisableRollback</tt>, but not both.
--   
--   Default: <tt>ROLLBACK</tt>
csOnFailure :: Lens' CreateStack (Maybe OnFailure)

-- | A list of <a>Parameter</a> structures that specify input parameters
--   for the stack.
csParameters :: Lens' CreateStack [Parameter]

-- | The name that is associated with the stack. The name must be unique in
--   the region in which you are creating the stack.
--   
--   A stack name can contain only alphanumeric characters (case sensitive)
--   and hyphens. It must start with an alphabetic character and cannot be
--   longer than 255 characters.
csStackName :: Lens' CreateStack Text

-- | Structure containing the stack policy body. For more information, go
--   to <a>Prevent Updates to Stack Resources</a> in the AWS CloudFormation
--   User Guide. You can specify either the <tt>StackPolicyBody</tt> or the
--   <tt>StackPolicyURL</tt> parameter, but not both.
csStackPolicyBody :: Lens' CreateStack (Maybe Text)

-- | Location of a file containing the stack policy. The URL must point to
--   a policy (max size: 16KB) located in an S3 bucket in the same region
--   as the stack. You can specify either the <tt>StackPolicyBody</tt> or
--   the <tt>StackPolicyURL</tt> parameter, but not both.
csStackPolicyURL :: Lens' CreateStack (Maybe Text)

-- | A set of user-defined <tt>Tags</tt> to associate with this stack,
--   represented by key/value pairs. Tags defined for the stack are
--   propagated to EC2 resources that are created as part of the stack. A
--   maximum number of 10 tags can be specified.
csTags :: Lens' CreateStack [Tag]

-- | Structure containing the template body with a minimum length of 1 byte
--   and a maximum length of 51,200 bytes. For more information, go to
--   <a>Template Anatomy</a> in the AWS CloudFormation User Guide.
--   
--   Conditional: You must specify either the <tt>TemplateBody</tt> or the
--   <tt>TemplateURL</tt> parameter, but not both.
csTemplateBody :: Lens' CreateStack (Maybe Text)

-- | Location of file containing the template body. The URL must point to a
--   template (max size: 460,800 bytes) located in an S3 bucket in the same
--   region as the stack. For more information, go to the <a>Template
--   Anatomy</a> in the AWS CloudFormation User Guide.
--   
--   Conditional: You must specify either the <tt>TemplateBody</tt> or the
--   <tt>TemplateURL</tt> parameter, but not both.
csTemplateURL :: Lens' CreateStack (Maybe Text)

-- | The amount of time that can pass before the stack status becomes
--   CREATE_FAILED; if <tt>DisableRollback</tt> is not set or is set to
--   <tt>false</tt>, the stack will be rolled back.
csTimeoutInMinutes :: Lens' CreateStack (Maybe Natural)
data CreateStackResponse

-- | <a>CreateStackResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>csrStackId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
createStackResponse :: CreateStackResponse

-- | Unique identifier of the stack.
csrStackId :: Lens' CreateStackResponse (Maybe Text)
instance Eq CreateStack
instance Read CreateStack
instance Show CreateStack
instance Eq CreateStackResponse
instance Ord CreateStackResponse
instance Read CreateStackResponse
instance Show CreateStackResponse
instance Monoid CreateStackResponse
instance FromXML CreateStackResponse
instance AWSRequest CreateStack
instance ToHeaders CreateStack
instance ToQuery CreateStack
instance ToPath CreateStack


-- | Cancels an update on the specified stack. If the call completes
--   successfully, the stack will roll back the update and revert to the
--   previous stack configuration.
--   
--   Only stacks that are in the UPDATE_IN_PROGRESS state can be canceled.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CancelUpdateStack.html</a>
module Network.AWS.CloudFormation.CancelUpdateStack
data CancelUpdateStack

-- | <a>CancelUpdateStack</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cusStackName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
cancelUpdateStack :: Text -> CancelUpdateStack

-- | The name or the unique stack ID that is associated with the stack.
cusStackName :: Lens' CancelUpdateStack Text
data CancelUpdateStackResponse

-- | <a>CancelUpdateStackResponse</a> constructor.
cancelUpdateStackResponse :: CancelUpdateStackResponse
instance Eq CancelUpdateStack
instance Ord CancelUpdateStack
instance Read CancelUpdateStack
instance Show CancelUpdateStack
instance Monoid CancelUpdateStack
instance IsString CancelUpdateStack
instance Eq CancelUpdateStackResponse
instance Ord CancelUpdateStackResponse
instance Read CancelUpdateStackResponse
instance Show CancelUpdateStackResponse
instance Generic CancelUpdateStackResponse
instance Datatype D1CancelUpdateStackResponse
instance Constructor C1_0CancelUpdateStackResponse
instance AWSRequest CancelUpdateStack
instance ToHeaders CancelUpdateStack
instance ToQuery CancelUpdateStack
instance ToPath CancelUpdateStack


-- | AWS CloudFormation gives developers and systems administrators an easy
--   way to create and manage a collection of related AWS resources,
--   provisioning and updating them in an orderly and predictable fashion.
--   You can use AWS CloudFormation’s sample templates or create your own
--   templates to describe the AWS resources, and any associated
--   dependencies or runtime parameters, required to run your application.
--   You don’t need to figure out the order for provisioning AWS services
--   or the subtleties of making those dependencies work. CloudFormation
--   takes care of this for you. After the AWS resources are deployed, you
--   can modify and update them in a controlled and predictable way, in
--   effect applying version control to your AWS infrastructure the same
--   way you do with your software.
module Network.AWS.CloudFormation
