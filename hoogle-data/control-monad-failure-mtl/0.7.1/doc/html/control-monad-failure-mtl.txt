-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A class for monads which can fail with an error for mtl 1 (deprecated)
--   
--   A class for monads which can fail with an error. Please note: this
--   package is only applicable for the now-deprecated mtl 1. Since mtl 2
--   is compatible with the transformers package, users of mtl 2 should
--   simply use the control-monad-failure package.
@package control-monad-failure-mtl
@version 0.7.1

module Control.Monad.Failure.MTL
instance (WrapFailure e m, Monoid w, Monad m) => WrapFailure e (RWST r w s m)
instance (WrapFailure e m, Monad m) => WrapFailure e (StateT s m)
instance (WrapFailure e m, Monoid w, Monad m) => WrapFailure e (RWST r w s m)
instance (WrapFailure e m, Monad m) => WrapFailure e (StateT s m)
instance (WrapFailure e m, Monoid w, Monad m) => WrapFailure e (WriterT w m)
instance (WrapFailure e m, Monad m) => WrapFailure e (ReaderT r m)
instance (WrapFailure e m, Monad m) => WrapFailure e (ListT m)
instance (Monoid w, Monad m, Failure e m) => Failure e (RWST r w s m)
instance (Monad m, Failure e m) => Failure e (StateT s m)
instance (Monoid w, Monad m, Failure e m) => Failure e (WriterT w m)
instance (Monoid w, Monad m, Failure e m) => Failure e (RWST r w s m)
instance (Monad m, Failure e m) => Failure e (StateT s m)
instance (Monoid w, Monad m, Failure e m) => Failure e (WriterT w m)
instance (Monad m, Failure e m) => Failure e (ReaderT r m)
instance (Monad m, Failure e m) => Failure e (ListT m)
instance (Error e, Monad m) => Failure e (ErrorT e m)

module Control.Monad.Failure
