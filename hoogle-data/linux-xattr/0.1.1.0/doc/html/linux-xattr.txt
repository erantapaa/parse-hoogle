-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Read, set and list extended attributes
--   
--   Bindings to the Linux syscalls for reading and manipulating extended
--   attributes (<tt><a>setxattr</a></tt>, <tt><a>getxattr</a></tt>,
--   <tt><a>listxattr</a></tt> and <tt><a>removexattr</a></tt>).
@package linux-xattr
@version 0.1.1.0


-- | <tt>linux-xattr</tt> provides bindings to the Linux syscalls for
--   reading and manipulating <a>extended attributes</a>
--   (<tt><a>setxattr</a></tt>, <tt><a>getxattr</a></tt>,
--   <tt><a>listxattr</a></tt> and <tt><a>removexattr</a></tt>).
--   
--   Each function in this module has two variants: one with the name
--   prefixed by <tt>__l__</tt> and one prefixed by <tt>__fd__</tt>. Both
--   of these are identical to the original version except that the
--   <tt>__l__</tt>-variant does not follow symbolic link but acts on the
--   link itself, and the <tt>__fd__</tt>-variant take a file descriptor as
--   argument rather than a <tt><a>FilePath</a></tt>.
--   
--   Moreover, every function has an <tt><i>xxx</i>__UserXAttr__</tt>
--   variant for working transparently in the <tt>__user__</tt> namespace
--   of extended attributes, without worrying about the
--   <tt><a>user.</a></tt> prefix: these functions automatically prepends
--   the string <tt><a>user.</a></tt> to the <tt><a>Name</a></tt> of the
--   attribute when <tt><a>Name</a></tt> is an input value, or strip the
--   prefix <tt><a>user.</a></tt> from it when <tt><a>Name</a></tt> is a
--   returned value. See the documentation of each individual function for
--   details.
module System.Linux.XAttr

-- | Set the <tt><a>Value</a></tt> of the extended attribute identified by
--   <tt><a>Name</a></tt> and associated with the given
--   <tt><a>FilePath</a></tt> in the filesystem.
setXAttr :: FilePath -> Name -> Value -> IO ()

-- | Set the <tt><a>Value</a></tt> of the extended attribute identified by
--   <tt><a>Name</a></tt> and associated with the given
--   <tt><a>FilePath</a></tt> in the filesystem (do not follow symbolic
--   links).
lSetXAttr :: FilePath -> Name -> Value -> IO ()

-- | Set the <tt><a>Value</a></tt> of the extended attribute identified by
--   <tt><a>Name</a></tt> and associated with the given file descriptor in
--   the filesystem.
fdSetXAttr :: Fd -> Name -> Value -> IO ()

-- | <pre>
--   <a>setUserXAttr</a> <a>/some/path</a> <a>foo</a> <a>bar</a> = <a>setXAttr</a> <a>/some/path</a> <a>user.foo</a> <a>bar</a>
--   </pre>
setUserXAttr :: FilePath -> Name -> Value -> IO ()

-- | <pre>
--   <a>lSetUserXAttr</a> <a>/some/link</a> <a>foo</a> <a>bar</a> = <a>lSetXAttr</a> <a>/some/link</a> <a>user.foo</a> <a>bar</a>
--   </pre>
lSetUserXAttr :: FilePath -> Name -> Value -> IO ()

-- | <pre>
--   <a>fdSetUserXAttr</a> (<a>Fd</a> n) <a>foo</a> <a>bar</a> = <a>fdSetXAttr</a> (<a>Fd</a> n) <a>user.foo</a> <a>bar</a>
--   </pre>
fdSetUserXAttr :: Fd -> Name -> Value -> IO ()

-- | Identical to <tt><a>setXAttr</a></tt>, but if the attribute already
--   exists fail with <tt><a>isAlreadyExistsError</a></tt>.
createXAttr :: FilePath -> Name -> Value -> IO ()

-- | Identical to <tt><a>lSetXAttr</a></tt>, but if the attribute already
--   exists fail with <tt><a>isAlreadyExistsError</a></tt>.
lCreateXAttr :: FilePath -> Name -> Value -> IO ()

-- | Identical to <tt><a>fdSetXAttr</a></tt>, but if the attribute already
--   exists fail with <tt><a>isAlreadyExistsError</a></tt>.
fdCreateXAttr :: Fd -> Name -> Value -> IO ()

-- | <pre>
--   <a>createUserXAttr</a> <a>/some/path</a> <a>foo</a> <a>bar</a> = <a>createXAttr</a> <a>/some/path</a> <a>user.foo</a> <a>bar</a>
--   </pre>
createUserXAttr :: FilePath -> Name -> Value -> IO ()

-- | <pre>
--   <a>lCreateUserXAttr</a> <a>/some/link</a> <a>foo</a> <a>bar</a> = <a>lCreateXAttr</a> <a>/some/link</a> <a>user.foo</a> <a>bar</a>
--   </pre>
lCreateUserXAttr :: FilePath -> Name -> Value -> IO ()

-- | <pre>
--   <a>fdCreateUserXAttr</a> (<a>Fd</a> n) <a>foo</a> <a>bar</a> = <a>fdCreateXAttr</a> (<a>Fd</a> n) <a>user.foo</a> <a>bar</a>
--   </pre>
fdCreateUserXAttr :: Fd -> Name -> Value -> IO ()

-- | Identical to <tt><a>setXAttr</a></tt>, but if the attribute does not
--   exist fail with <tt><a>isDoesNotExistError</a></tt>.
replaceXAttr :: FilePath -> Name -> Value -> IO ()

-- | Identical to <tt><a>lSetXAttr</a></tt>, but if the attribute does not
--   exist fail with <tt><a>isDoesNotExistError</a></tt>.
lReplaceXAttr :: FilePath -> Name -> Value -> IO ()

-- | Identical to <tt><a>fdSetXAttr</a></tt>, but if the attribute does not
--   exist fail with <tt><a>isDoesNotExistError</a></tt>.
fdReplaceXAttr :: Fd -> Name -> Value -> IO ()

-- | <pre>
--   <a>replaceUserXAttr</a> <a>/some/path</a> <a>foo</a> <a>bar</a> = <a>replaceXAttr</a> <a>/some/path</a> <a>user.foo</a> <a>bar</a>
--   </pre>
replaceUserXAttr :: FilePath -> Name -> Value -> IO ()

-- | <pre>
--   <a>lReplaceUserXAttr</a> <a>/some/link</a> <a>foo</a> <a>bar</a> = <a>lReplaceXAttr</a> <a>/some/link</a> <a>user.foo</a> <a>bar</a>
--   </pre>
lReplaceUserXAttr :: FilePath -> Name -> Value -> IO ()

-- | <pre>
--   <a>fdReplaceUserXAttr</a> (<a>Fd</a> n) <a>foo</a> <a>bar</a> = <a>fdReplaceXAttr</a> (<a>Fd</a> n) <a>user.foo</a> <a>bar</a>
--   </pre>
fdReplaceUserXAttr :: Fd -> Name -> Value -> IO ()

-- | Retrieve the <tt><a>Value</a></tt> of the extended attribute
--   identified by <tt><a>Name</a></tt> and associated with the given
--   <tt><a>FilePath</a></tt> in the filesystem, or fail with
--   <tt><a>isDoesNotExistError</a></tt> if the attribute does not exist.
getXAttr :: FilePath -> Name -> IO Value

-- | Retrieve the <tt><a>Value</a></tt> of the extended attribute
--   identified by <tt><a>Name</a></tt> and associated with the given
--   <tt><a>FilePath</a></tt> in the filesystem, or fail with
--   <tt><a>isDoesNotExistError</a></tt> if the attribute does not exist
--   (do not follow symbolic links).
lGetXAttr :: FilePath -> Name -> IO Value

-- | Retrieve the <tt><a>Value</a></tt> of the extended attribute
--   identified by <tt><a>Name</a></tt> and associated with the given file
--   descriptor in the filesystem, or fail with
--   <tt><a>isDoesNotExistError</a></tt> if the attribute does not exist.
fdGetXAttr :: Fd -> Name -> IO Value

-- | <pre>
--   <a>getUserXAttr</a> <a>/some/path</a> <a>foo</a> = <a>getXAttr</a> <a>/some/path</a> <a>user.foo</a>
--   </pre>
getUserXAttr :: FilePath -> Name -> IO Value

-- | <pre>
--   <a>lGetUserXAttr</a> <a>/some/link</a> <a>foo</a> = <a>lGetXAttr</a> <a>/some/link</a> <a>user.foo</a>
--   </pre>
lGetUserXAttr :: FilePath -> Name -> IO Value

-- | <pre>
--   <a>fdGetUserXAttr</a> (<a>Fd</a> n) <a>foo</a> = <a>fdGetXAttr</a> (<a>Fd</a> n) <a>user.foo</a>
--   </pre>
fdGetUserXAttr :: Fd -> Name -> IO Value

-- | Get the list of extended attribute <tt><a>Name</a></tt>s associated
--   with the given <tt><a>FilePath</a></tt> in the filesystem.
listXAttr :: FilePath -> IO [Name]

-- | Get the list of extended attribute <tt><a>Name</a></tt>s associated
--   with the given <tt><a>FilePath</a></tt> in the filesystem (do not
--   follow symbolic links).
lListXAttr :: FilePath -> IO [Name]

-- | Get the list of extended attribute <tt><a>Name</a></tt>s associated
--   with the given file descriptor in the filesystem.
fdListXAttr :: Fd -> IO [Name]
listUserXAttr :: FilePath -> IO [Name]
lListUserXAttr :: FilePath -> IO [Name]
fdListUserXAttr :: Fd -> IO [Name]

-- | Remove the extended attribute identified by <tt><a>Name</a></tt> and
--   associated with the given <tt><a>FilePath</a></tt> in the filesystem,
--   or fail with <tt><a>isDoesNotExistError</a></tt> if the attribute does
--   not exist.
removeXAttr :: FilePath -> Name -> IO ()

-- | Remove the extended attribute identified by <tt><a>Name</a></tt> and
--   associated with the given <tt><a>FilePath</a></tt> in the filesystem,
--   or fail with <tt><a>isDoesNotExistError</a></tt> if the attribute does
--   not exist (do not follow symbolic links).
lRemoveXAttr :: FilePath -> Name -> IO ()

-- | Remove the extended attribute identified by <tt><a>Name</a></tt> and
--   associated with the given file descriptor in the filesystem, or fail
--   with <tt><a>isDoesNotExistError</a></tt> if the attribute does not
--   exist.
fdRemoveXAttr :: Fd -> Name -> IO ()

-- | <pre>
--   <a>removeUserXAttr</a> <a>/some/path</a> <a>foo</a> = <a>removeXAttr</a> <a>/some/path</a> <a>user.foo</a>
--   </pre>
removeUserXAttr :: FilePath -> Name -> IO ()

-- | <pre>
--   <a>lRemoveUserXAttr</a> <a>/some/link</a> <a>foo</a> = <a>lRemoveXAttr</a> <a>/some/link</a> <a>user.foo</a>
--   </pre>
lRemoveUserXAttr :: FilePath -> Name -> IO ()

-- | <pre>
--   <a>fdRemoveUserXAttr</a> (<a>Fd</a> n) <a>foo</a> = <a>fdRemoveXAttr</a> (<a>Fd</a> n) <a>user.foo</a>
--   </pre>
fdRemoveUserXAttr :: Fd -> Name -> IO ()

-- | Name of extended attribute.
type Name = String

-- | Value of extended attribute.
type Value = ByteString
