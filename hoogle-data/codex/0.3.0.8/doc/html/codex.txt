-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A ctags file generator for cabal project dependencies.
--   
@package codex
@version 0.3.0.8

module Codex.Internal
defaultTagsFileName :: FilePath
data Codex
Codex :: Bool -> FilePath -> String -> Bool -> Bool -> FilePath -> Codex
currentProjectIncluded :: Codex -> Bool
hackagePath :: Codex -> FilePath
tagsCmd :: Codex -> String
tagsFileHeader :: Codex -> Bool
tagsFileSorted :: Codex -> Bool
tagsFileName :: Codex -> FilePath
packagePath :: Codex -> PackageIdentifier -> FilePath
packageArchive :: Codex -> PackageIdentifier -> FilePath
packageSources :: Codex -> PackageIdentifier -> FilePath
packageTags :: Codex -> PackageIdentifier -> FilePath
packageUrl :: PackageIdentifier -> String
removePrefix :: String -> String -> Maybe String
instance Generic Codex
instance Show Codex
instance Datatype D1Codex
instance Constructor C1_0Codex
instance Selector S1_0_0Codex
instance Selector S1_0_1Codex
instance Selector S1_0_2Codex
instance Selector S1_0_3Codex
instance Selector S1_0_4Codex
instance Selector S1_0_5Codex
instance FromJSON Codex
instance ToJSON Codex

module Distribution.Sandbox.Utils
findSandbox :: FilePath -> IO (Maybe FilePath)
readSandboxSources :: FilePath -> IO [FilePath]

module Codex.Project
newtype Workspace
Workspace :: [WorkspaceProject] -> Workspace
data WorkspaceProject
WorkspaceProject :: PackageIdentifier -> FilePath -> WorkspaceProject
workspaceProjectIdentifier :: WorkspaceProject -> PackageIdentifier
workspaceProjectPath :: WorkspaceProject -> FilePath
type ProjectDependencies = (PackageIdentifier, [PackageIdentifier], [WorkspaceProject])
identifier :: GenericPackageDescription -> PackageIdentifier
allDependencies :: GenericPackageDescription -> [Dependency]
findPackageDescription :: FilePath -> IO (Maybe GenericPackageDescription)
resolveCurrentProjectDependencies :: IO ProjectDependencies
resolveProjectDependencies :: Workspace -> FilePath -> IO ProjectDependencies
resolveInstalledDependencies :: FilePath -> IO (Either SomeException [PackageIdentifier])
resolveHackageDependencies :: Hackage -> GenericPackageDescription -> [GenericPackageDescription]
resolvePackageDependencies :: FilePath -> GenericPackageDescription -> IO [PackageIdentifier]
resolveSandboxDependencies :: FilePath -> IO [WorkspaceProject]
resolveWorkspaceDependencies :: Workspace -> GenericPackageDescription -> [WorkspaceProject]
readWorkspaceProject :: FilePath -> IO (Maybe WorkspaceProject)
getWorkspace :: FilePath -> IO Workspace
instance Eq WorkspaceProject
instance Show WorkspaceProject
instance Eq Workspace
instance Show Workspace

module Codex
data Codex
Codex :: Bool -> FilePath -> String -> Bool -> Bool -> FilePath -> Codex
currentProjectIncluded :: Codex -> Bool
hackagePath :: Codex -> FilePath
tagsCmd :: Codex -> String
tagsFileHeader :: Codex -> Bool
tagsFileSorted :: Codex -> Bool
tagsFileName :: Codex -> FilePath
defaultTagsFileName :: FilePath
data Verbosity :: *
replace :: String -> String -> String -> String
md5hash :: String -> String
data Tagging
Tagged :: Tagging
Untagged :: Tagging
fromBool :: Bool -> Tagging
data Status
Source :: Tagging -> Status
Archive :: Status
Remote :: Status
type Action = EitherT String IO
data Tagger
Ctags :: Tagger
Hasktags :: Tagger
HasktagsEmacs :: Tagger
HasktagsExtended :: Tagger
taggerCmd :: Tagger -> String
taggerCmdRun :: Codex -> FilePath -> FilePath -> Action FilePath
tryIO :: IO a -> Action a
codexHash :: Codex -> String
dependenciesHash :: [PackageIdentifier] -> String
tagsFileHash :: Codex -> [PackageIdentifier] -> String -> String
computeCurrentProjectHash :: Codex -> IO String
isUpdateRequired :: Codex -> [PackageIdentifier] -> String -> Action Bool
status :: Codex -> PackageIdentifier -> Action Status
fetch :: Session -> Codex -> PackageIdentifier -> Action FilePath
openLazyURI :: Session -> String -> IO (Either String ByteString)
extract :: Codex -> PackageIdentifier -> Action FilePath
tags :: Codex -> PackageIdentifier -> Action FilePath
assembly :: Codex -> [PackageIdentifier] -> String -> [WorkspaceProject] -> FilePath -> Action FilePath
instance Eq Tagging
instance Show Tagging
instance Eq Status
instance Show Status
instance Eq Tagger
instance Show Tagger
instance Read Tagger
