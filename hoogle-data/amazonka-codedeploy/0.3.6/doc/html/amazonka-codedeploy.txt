-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Amazon CodeDeploy SDK.
--   
@package amazonka-codedeploy
@version 0.3.6

module Network.AWS.CodeDeploy.Types

-- | Version <tt>2014-10-06</tt> of the Amazon CodeDeploy service.
data CodeDeploy
data JSONError :: *
data GenericRevisionInfo

-- | <a>GenericRevisionInfo</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>griDeploymentGroups</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>griDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>griFirstUsedTime</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>griLastUsedTime</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>griRegisterTime</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   </ul>
genericRevisionInfo :: GenericRevisionInfo

-- | A list of deployment groups that use this revision.
griDeploymentGroups :: Lens' GenericRevisionInfo [Text]

-- | A comment about the revision.
griDescription :: Lens' GenericRevisionInfo (Maybe Text)

-- | When the revision was first used by AWS CodeDeploy.
griFirstUsedTime :: Lens' GenericRevisionInfo (Maybe UTCTime)

-- | When the revision was last used by AWS CodeDeploy.
griLastUsedTime :: Lens' GenericRevisionInfo (Maybe UTCTime)

-- | When the revision was registered with AWS CodeDeploy.
griRegisterTime :: Lens' GenericRevisionInfo (Maybe UTCTime)
data ApplicationInfo

-- | <a>ApplicationInfo</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>aiApplicationId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>aiApplicationName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>aiCreateTime</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>aiLinkedToGitHub</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   </ul>
applicationInfo :: ApplicationInfo

-- | The application ID.
aiApplicationId :: Lens' ApplicationInfo (Maybe Text)

-- | The application name.
aiApplicationName :: Lens' ApplicationInfo (Maybe Text)

-- | The time that the application was created.
aiCreateTime :: Lens' ApplicationInfo (Maybe UTCTime)

-- | True if the user has authenticated with GitHub for the specified
--   application; otherwise, false.
aiLinkedToGitHub :: Lens' ApplicationInfo (Maybe Bool)
data BundleType

-- | tar
Tar :: BundleType

-- | tgz
Tgz :: BundleType

-- | zip
Zip :: BundleType
data Tag

-- | <a>Tag</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>tagKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>tagValue</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
tag :: Tag

-- | The tag's key.
tagKey :: Lens' Tag (Maybe Text)

-- | The tag's value.
tagValue :: Lens' Tag (Maybe Text)
data TagFilterType

-- | KEY_AND_VALUE
KeyAndValue :: TagFilterType

-- | KEY_ONLY
KeyOnly :: TagFilterType

-- | VALUE_ONLY
ValueOnly :: TagFilterType
data TimeRange

-- | <a>TimeRange</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>trEnd</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>trStart</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   </ul>
timeRange :: TimeRange

-- | The time range's end time.
--   
--   Specify null to leave the time range's end time open-ended.
trEnd :: Lens' TimeRange (Maybe UTCTime)

-- | The time range's start time.
--   
--   Specify null to leave the time range's start time open-ended.
trStart :: Lens' TimeRange (Maybe UTCTime)
data DeploymentCreator

-- | autoscaling
Autoscaling :: DeploymentCreator

-- | user
User :: DeploymentCreator
data InstanceSummary

-- | <a>InstanceSummary</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>isDeploymentId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>isInstanceId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>isLastUpdatedAt</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>isLifecycleEvents</a> <tt>::</tt> [<a>LifecycleEvent</a>]</li>
--   <li><a>isStatus</a> <tt>::</tt> <a>Maybe</a>
--   <a>InstanceStatus</a></li>
--   </ul>
instanceSummary :: InstanceSummary

-- | The deployment ID.
isDeploymentId :: Lens' InstanceSummary (Maybe Text)

-- | The instance ID.
isInstanceId :: Lens' InstanceSummary (Maybe Text)

-- | A timestamp indicating when the instance information was last updated.
isLastUpdatedAt :: Lens' InstanceSummary (Maybe UTCTime)

-- | A list of lifecycle events for this instance.
isLifecycleEvents :: Lens' InstanceSummary [LifecycleEvent]

-- | The deployment status for this instance:
--   
--   Pending: The deployment is pending for this instance. In Progress: The
--   deployment is in progress for this instance. Succeeded: The deployment
--   has succeeded for this instance. Failed: The deployment has failed for
--   this instance. Skipped: The deployment has been skipped for this
--   instance. Unknown: The deployment status is unknown for this instance.
isStatus :: Lens' InstanceSummary (Maybe InstanceStatus)
data AutoScalingGroup

-- | <a>AutoScalingGroup</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>asgHook</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>asgName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
autoScalingGroup :: AutoScalingGroup

-- | An Auto Scaling lifecycle event hook name.
asgHook :: Lens' AutoScalingGroup (Maybe Text)

-- | The Auto Scaling group name.
asgName :: Lens' AutoScalingGroup (Maybe Text)
data DeploymentGroupInfo

-- | <a>DeploymentGroupInfo</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dgiApplicationName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>dgiAutoScalingGroups</a> <tt>::</tt>
--   [<a>AutoScalingGroup</a>]</li>
--   <li><a>dgiDeploymentConfigName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>dgiDeploymentGroupId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>dgiDeploymentGroupName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>dgiEc2TagFilters</a> <tt>::</tt> [<a>EC2TagFilter</a>]</li>
--   <li><a>dgiOnPremisesInstanceTagFilters</a> <tt>::</tt>
--   [<a>TagFilter</a>]</li>
--   <li><a>dgiServiceRoleArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dgiTargetRevision</a> <tt>::</tt> <a>Maybe</a>
--   <a>RevisionLocation</a></li>
--   </ul>
deploymentGroupInfo :: DeploymentGroupInfo

-- | The application name.
dgiApplicationName :: Lens' DeploymentGroupInfo (Maybe Text)

-- | A list of associated Auto Scaling groups.
dgiAutoScalingGroups :: Lens' DeploymentGroupInfo [AutoScalingGroup]

-- | The deployment configuration name.
dgiDeploymentConfigName :: Lens' DeploymentGroupInfo (Maybe Text)

-- | The deployment group ID.
dgiDeploymentGroupId :: Lens' DeploymentGroupInfo (Maybe Text)

-- | The deployment group name.
dgiDeploymentGroupName :: Lens' DeploymentGroupInfo (Maybe Text)

-- | The Amazon EC2 tags to filter on.
dgiEc2TagFilters :: Lens' DeploymentGroupInfo [EC2TagFilter]

-- | The on-premises instance tags to filter on.
dgiOnPremisesInstanceTagFilters :: Lens' DeploymentGroupInfo [TagFilter]

-- | A service role ARN.
dgiServiceRoleArn :: Lens' DeploymentGroupInfo (Maybe Text)

-- | Information about the deployment group's target revision, including
--   the revision's type and its location.
dgiTargetRevision :: Lens' DeploymentGroupInfo (Maybe RevisionLocation)
data ApplicationRevisionSortBy

-- | firstUsedTime
FirstUsedTime :: ApplicationRevisionSortBy

-- | lastUsedTime
LastUsedTime :: ApplicationRevisionSortBy

-- | registerTime
RegisterTime :: ApplicationRevisionSortBy
data MinimumHealthyHosts

-- | <a>MinimumHealthyHosts</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>mhhType</a> <tt>::</tt> <a>Maybe</a>
--   <a>MinimumHealthyHostsType</a></li>
--   <li><a>mhhValue</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   </ul>
minimumHealthyHosts :: MinimumHealthyHosts

-- | The minimum healthy instances type:
--   
--   HOST_COUNT: The minimum number of healthy instances, as an absolute
--   value. FLEET_PERCENT: The minimum number of healthy instances, as a
--   percentage of the total number of instances in the deployment. For
--   example, for 9 instances, if a HOST_COUNT of 6 is specified, deploy to
--   up to 3 instances at a time. The deployment succeeds if 6 or more
--   instances are successfully deployed to; otherwise, the deployment
--   fails. If a FLEET_PERCENT of 40 is specified, deploy to up to 5
--   instances at a time. The deployment succeeds if 4 or more instances
--   are successfully deployed to; otherwise, the deployment fails.
--   
--   In a call to the get deployment configuration operation,
--   CodeDeployDefault.OneAtATime will return a minimum healthy instances
--   type of MOST_CONCURRENCY and a value of 1. This means a deployment to
--   only one instances at a time. (You cannot set the type to
--   MOST_CONCURRENCY, only to HOST_COUNT or FLEET_PERCENT.)
mhhType :: Lens' MinimumHealthyHosts (Maybe MinimumHealthyHostsType)

-- | The minimum healthy instances value.
mhhValue :: Lens' MinimumHealthyHosts (Maybe Int)
data ListStateFilterAction

-- | exclude
Exclude :: ListStateFilterAction

-- | ignore
Ignore :: ListStateFilterAction

-- | include
Include :: ListStateFilterAction
data LifecycleErrorCode

-- | ScriptFailed
ScriptFailed :: LifecycleErrorCode

-- | ScriptMissing
ScriptMissing :: LifecycleErrorCode

-- | ScriptNotExecutable
ScriptNotExecutable :: LifecycleErrorCode

-- | ScriptTimedOut
ScriptTimedOut :: LifecycleErrorCode

-- | Success
Success :: LifecycleErrorCode

-- | UnknownError
UnknownError :: LifecycleErrorCode
data RevisionLocation

-- | <a>RevisionLocation</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rlGitHubLocation</a> <tt>::</tt> <a>Maybe</a>
--   <a>GitHubLocation</a></li>
--   <li><a>rlRevisionType</a> <tt>::</tt> <a>Maybe</a>
--   <a>RevisionLocationType</a></li>
--   <li><a>rlS3Location</a> <tt>::</tt> <a>Maybe</a>
--   <a>S3Location</a></li>
--   </ul>
revisionLocation :: RevisionLocation
rlGitHubLocation :: Lens' RevisionLocation (Maybe GitHubLocation)

-- | The application revision's type:
--   
--   S3: An application revision stored in Amazon S3. GitHub: An
--   application revision stored in GitHub.
rlRevisionType :: Lens' RevisionLocation (Maybe RevisionLocationType)
rlS3Location :: Lens' RevisionLocation (Maybe S3Location)
data LifecycleEventStatus

-- | Failed
Failed :: LifecycleEventStatus

-- | InProgress
InProgress :: LifecycleEventStatus

-- | Pending
Pending :: LifecycleEventStatus

-- | Skipped
Skipped :: LifecycleEventStatus

-- | Succeeded
Succeeded :: LifecycleEventStatus

-- | Unknown
Unknown :: LifecycleEventStatus
data EC2TagFilter

-- | <a>EC2TagFilter</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ectfKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ectfType</a> <tt>::</tt> <a>Maybe</a>
--   <a>EC2TagFilterType</a></li>
--   <li><a>ectfValue</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
ec2TagFilter :: EC2TagFilter

-- | The tag filter key.
ectfKey :: Lens' EC2TagFilter (Maybe Text)

-- | The tag filter type:
--   
--   KEY_ONLY: Key only. VALUE_ONLY: Value only. KEY_AND_VALUE: Key and
--   value.
ectfType :: Lens' EC2TagFilter (Maybe EC2TagFilterType)

-- | The tag filter value.
ectfValue :: Lens' EC2TagFilter (Maybe Text)
data Diagnostics

-- | <a>Diagnostics</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dErrorCode</a> <tt>::</tt> <a>Maybe</a>
--   <a>LifecycleErrorCode</a></li>
--   <li><a>dLogTail</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dMessage</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dScriptName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
diagnostics :: Diagnostics

-- | The associated error code:
--   
--   Success: The specified script ran. ScriptMissing: The specified script
--   was not found in the specified location. ScriptNotExecutable: The
--   specified script is not a recognized executable file type.
--   ScriptTimedOut: The specified script did not finish running in the
--   specified time period. ScriptFailed: The specified script failed to
--   run as expected. UnknownError: The specified script did not run for an
--   unknown reason.
dErrorCode :: Lens' Diagnostics (Maybe LifecycleErrorCode)

-- | The last portion of the associated diagnostic log.
dLogTail :: Lens' Diagnostics (Maybe Text)

-- | The message associated with the error.
dMessage :: Lens' Diagnostics (Maybe Text)

-- | The name of the script.
dScriptName :: Lens' Diagnostics (Maybe Text)
data StopStatus

-- | Pending
SSPending :: StopStatus

-- | Succeeded
SSSucceeded :: StopStatus
data ErrorInformation

-- | <a>ErrorInformation</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>eiCode</a> <tt>::</tt> <a>Maybe</a> <a>ErrorCode</a></li>
--   <li><a>eiMessage</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
errorInformation :: ErrorInformation

-- | The error code:
--   
--   APPLICATION_MISSING: The application was missing. Note that this error
--   code will most likely be raised if the application is deleted after
--   the deployment is created but before it starts.
--   DEPLOYMENT_GROUP_MISSING: The deployment group was missing. Note that
--   this error code will most likely be raised if the deployment group is
--   deleted after the deployment is created but before it starts.
--   HEALTH_CONSTRAINTS: The deployment failed on too many instances to be
--   able to successfully deploy within the specified instance health
--   constraints. HEALTH_CONSTRAINTS_INVALID: The revision can never
--   successfully deploy within the instance health constraints as
--   specified. IAM_ROLE_MISSING: The service role cannot be accessed.
--   IAM_ROLE_PERMISSIONS: The service role does not have the correct
--   permissions. INTERNAL_ERROR: There was an internal error.
--   NO_EC2_SUBSCRIPTION: The calling account is not subscribed to the
--   Amazon EC2 service. NO_INSTANCES: No instances were specified, or no
--   instances can be found. OVER_MAX_INSTANCES: The maximum number of
--   instances was exceeded. THROTTLED: The operation was throttled because
--   the calling account exceeded the throttling limits of one or more AWS
--   services. TIMEOUT: The deployment has timed out. REVISION_MISSING: The
--   revision ID was missing. Note that this error code will most likely be
--   raised if the revision is deleted after the deployment is created but
--   before it starts.
eiCode :: Lens' ErrorInformation (Maybe ErrorCode)

-- | An accompanying error message.
eiMessage :: Lens' ErrorInformation (Maybe Text)
data SortOrder

-- | ascending
Ascending :: SortOrder

-- | descending
Descending :: SortOrder
data InstanceInfo

-- | <a>InstanceInfo</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>iiDeregisterTime</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>iiIamUserArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iiInstanceArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iiInstanceName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iiRegisterTime</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>iiTags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   </ul>
instanceInfo :: InstanceInfo

-- | If the on-premises instance was deregistered, the time that the
--   on-premises instance was deregistered.
iiDeregisterTime :: Lens' InstanceInfo (Maybe UTCTime)

-- | The IAM user ARN associated with the on-premises instance.
iiIamUserArn :: Lens' InstanceInfo (Maybe Text)

-- | The ARN of the on-premises instance.
iiInstanceArn :: Lens' InstanceInfo (Maybe Text)

-- | The name of the on-premises instance.
iiInstanceName :: Lens' InstanceInfo (Maybe Text)

-- | The time that the on-premises instance was registered.
iiRegisterTime :: Lens' InstanceInfo (Maybe UTCTime)

-- | The tags that are currently associated with the on-premises instance.
iiTags :: Lens' InstanceInfo [Tag]
data DeploymentInfo

-- | <a>DeploymentInfo</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>diApplicationName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>diCompleteTime</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>diCreateTime</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>diCreator</a> <tt>::</tt> <a>Maybe</a>
--   <a>DeploymentCreator</a></li>
--   <li><a>diDeploymentConfigName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>diDeploymentGroupName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>diDeploymentId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>diDeploymentOverview</a> <tt>::</tt> <a>Maybe</a>
--   <a>DeploymentOverview</a></li>
--   <li><a>diDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>diErrorInformation</a> <tt>::</tt> <a>Maybe</a>
--   <a>ErrorInformation</a></li>
--   <li><a>diIgnoreApplicationStopFailures</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>diRevision</a> <tt>::</tt> <a>Maybe</a>
--   <a>RevisionLocation</a></li>
--   <li><a>diStartTime</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>diStatus</a> <tt>::</tt> <a>Maybe</a>
--   <a>DeploymentStatus</a></li>
--   </ul>
deploymentInfo :: DeploymentInfo

-- | The application name.
diApplicationName :: Lens' DeploymentInfo (Maybe Text)

-- | A timestamp indicating when the deployment was completed.
diCompleteTime :: Lens' DeploymentInfo (Maybe UTCTime)

-- | A timestamp indicating when the deployment was created.
diCreateTime :: Lens' DeploymentInfo (Maybe UTCTime)

-- | How the deployment was created:
--   
--   user: A user created the deployment. autoscaling: Auto Scaling created
--   the deployment.
diCreator :: Lens' DeploymentInfo (Maybe DeploymentCreator)

-- | The deployment configuration name.
diDeploymentConfigName :: Lens' DeploymentInfo (Maybe Text)

-- | The deployment group name.
diDeploymentGroupName :: Lens' DeploymentInfo (Maybe Text)

-- | The deployment ID.
diDeploymentId :: Lens' DeploymentInfo (Maybe Text)

-- | A summary of the deployment status of the instances in the deployment.
diDeploymentOverview :: Lens' DeploymentInfo (Maybe DeploymentOverview)

-- | A comment about the deployment.
diDescription :: Lens' DeploymentInfo (Maybe Text)

-- | Information about any error associated with this deployment.
diErrorInformation :: Lens' DeploymentInfo (Maybe ErrorInformation)

-- | If true, then if the deployment causes the ApplicationStop deployment
--   lifecycle event to fail to a specific instance, the deployment will
--   not be considered to have failed to that instance at that point and
--   will continue on to the BeforeInstall deployment lifecycle event.
--   
--   If false or not specified, then if the deployment causes the
--   ApplicationStop deployment lifecycle event to fail to a specific
--   instance, the deployment will stop to that instance, and the
--   deployment to that instance will be considered to have failed.
diIgnoreApplicationStopFailures :: Lens' DeploymentInfo (Maybe Bool)

-- | Information about the location of application artifacts that are
--   stored and the service to retrieve them from.
diRevision :: Lens' DeploymentInfo (Maybe RevisionLocation)

-- | A timestamp indicating when the deployment began deploying to the
--   deployment group.
--   
--   Note that in some cases, the reported value of the start time may be
--   later than the complete time. This is due to differences in the clock
--   settings of various back-end servers that participate in the overall
--   deployment process.
diStartTime :: Lens' DeploymentInfo (Maybe UTCTime)

-- | The current state of the deployment as a whole.
diStatus :: Lens' DeploymentInfo (Maybe DeploymentStatus)
data TagFilter

-- | <a>TagFilter</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>tfKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>tfType</a> <tt>::</tt> <a>Maybe</a> <a>TagFilterType</a></li>
--   <li><a>tfValue</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
tagFilter :: TagFilter

-- | The on-premises instance tag filter key.
tfKey :: Lens' TagFilter (Maybe Text)

-- | The on-premises instance tag filter type:
--   
--   KEY_ONLY: Key only. VALUE_ONLY: Value only. KEY_AND_VALUE: Key and
--   value.
tfType :: Lens' TagFilter (Maybe TagFilterType)

-- | The on-premises instance tag filter value.
tfValue :: Lens' TagFilter (Maybe Text)
data LifecycleEvent

-- | <a>LifecycleEvent</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>leDiagnostics</a> <tt>::</tt> <a>Maybe</a>
--   <a>Diagnostics</a></li>
--   <li><a>leEndTime</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>leLifecycleEventName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>leStartTime</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>leStatus</a> <tt>::</tt> <a>Maybe</a>
--   <a>LifecycleEventStatus</a></li>
--   </ul>
lifecycleEvent :: LifecycleEvent

-- | Diagnostic information about the deployment lifecycle event.
leDiagnostics :: Lens' LifecycleEvent (Maybe Diagnostics)

-- | A timestamp indicating when the deployment lifecycle event ended.
leEndTime :: Lens' LifecycleEvent (Maybe UTCTime)

-- | The deployment lifecycle event name, such as ApplicationStop,
--   BeforeInstall, AfterInstall, ApplicationStart, or ValidateService.
leLifecycleEventName :: Lens' LifecycleEvent (Maybe Text)

-- | A timestamp indicating when the deployment lifecycle event started.
leStartTime :: Lens' LifecycleEvent (Maybe UTCTime)

-- | The deployment lifecycle event status:
--   
--   Pending: The deployment lifecycle event is pending. InProgress: The
--   deployment lifecycle event is in progress. Succeeded: The deployment
--   lifecycle event has succeeded. Failed: The deployment lifecycle event
--   has failed. Skipped: The deployment lifecycle event has been skipped.
--   Unknown: The deployment lifecycle event is unknown.
leStatus :: Lens' LifecycleEvent (Maybe LifecycleEventStatus)
data DeploymentOverview

-- | <a>DeploymentOverview</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>doFailed</a> <tt>::</tt> <a>Maybe</a> <a>Integer</a></li>
--   <li><a>doInProgress</a> <tt>::</tt> <a>Maybe</a> <a>Integer</a></li>
--   <li><a>doPending</a> <tt>::</tt> <a>Maybe</a> <a>Integer</a></li>
--   <li><a>doSkipped</a> <tt>::</tt> <a>Maybe</a> <a>Integer</a></li>
--   <li><a>doSucceeded</a> <tt>::</tt> <a>Maybe</a> <a>Integer</a></li>
--   </ul>
deploymentOverview :: DeploymentOverview

-- | The number of instances that have failed in the deployment.
doFailed :: Lens' DeploymentOverview (Maybe Integer)

-- | The number of instances that are in progress in the deployment.
doInProgress :: Lens' DeploymentOverview (Maybe Integer)

-- | The number of instances that are pending in the deployment.
doPending :: Lens' DeploymentOverview (Maybe Integer)

-- | The number of instances that have been skipped in the deployment.
doSkipped :: Lens' DeploymentOverview (Maybe Integer)

-- | The number of instances that have succeeded in the deployment.
doSucceeded :: Lens' DeploymentOverview (Maybe Integer)
data ErrorCode

-- | APPLICATION_MISSING
ApplicationMissing :: ErrorCode

-- | DEPLOYMENT_GROUP_MISSING
DeploymentGroupMissing :: ErrorCode

-- | HEALTH_CONSTRAINTS
HealthConstraints :: ErrorCode

-- | HEALTH_CONSTRAINTS_INVALID
HealthConstraintsInvalid :: ErrorCode

-- | IAM_ROLE_MISSING
IamRoleMissing :: ErrorCode

-- | IAM_ROLE_PERMISSIONS
IamRolePermissions :: ErrorCode

-- | INTERNAL_ERROR
InternalError :: ErrorCode

-- | NO_EC2_SUBSCRIPTION
NOEC2SUBSCRIPTION :: ErrorCode

-- | NO_INSTANCES
NoInstances :: ErrorCode

-- | OVER_MAX_INSTANCES
OverMaxInstances :: ErrorCode

-- | REVISION_MISSING
RevisionMissing :: ErrorCode

-- | THROTTLED
Throttled :: ErrorCode

-- | TIMEOUT
Timeout :: ErrorCode
data DeploymentConfigInfo

-- | <a>DeploymentConfigInfo</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dciCreateTime</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>dciDeploymentConfigId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>dciDeploymentConfigName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>dciMinimumHealthyHosts</a> <tt>::</tt> <a>Maybe</a>
--   <a>MinimumHealthyHosts</a></li>
--   </ul>
deploymentConfigInfo :: DeploymentConfigInfo

-- | The time that the deployment configuration was created.
dciCreateTime :: Lens' DeploymentConfigInfo (Maybe UTCTime)

-- | The deployment configuration ID.
dciDeploymentConfigId :: Lens' DeploymentConfigInfo (Maybe Text)

-- | The deployment configuration name.
dciDeploymentConfigName :: Lens' DeploymentConfigInfo (Maybe Text)

-- | Information about the number or percentage of minimum healthy
--   instances.
dciMinimumHealthyHosts :: Lens' DeploymentConfigInfo (Maybe MinimumHealthyHosts)
data InstanceStatus

-- | Failed
ISFailed :: InstanceStatus

-- | InProgress
ISInProgress :: InstanceStatus

-- | Pending
ISPending :: InstanceStatus

-- | Skipped
ISSkipped :: InstanceStatus

-- | Succeeded
ISSucceeded :: InstanceStatus

-- | Unknown
ISUnknown :: InstanceStatus
data DeploymentStatus

-- | Created
DSCreated :: DeploymentStatus

-- | Failed
DSFailed :: DeploymentStatus

-- | InProgress
DSInProgress :: DeploymentStatus

-- | Queued
DSQueued :: DeploymentStatus

-- | Stopped
DSStopped :: DeploymentStatus

-- | Succeeded
DSSucceeded :: DeploymentStatus
data RegistrationStatus

-- | Deregistered
Deregistered :: RegistrationStatus

-- | Registered
Registered :: RegistrationStatus
data S3Location

-- | <a>S3Location</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>slBucket</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>slBundleType</a> <tt>::</tt> <a>Maybe</a>
--   <a>BundleType</a></li>
--   <li><a>slETag</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>slKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>slVersion</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
s3Location :: S3Location

-- | The name of the Amazon S3 bucket where the application revision is
--   stored.
slBucket :: Lens' S3Location (Maybe Text)

-- | The file type of the application revision. Must be one of the
--   following:
--   
--   tar: A tar archive file. tgz: A compressed tar archive file. zip: A
--   zip archive file.
slBundleType :: Lens' S3Location (Maybe BundleType)

-- | The ETag of the Amazon S3 object that represents the bundled artifacts
--   for the application revision.
--   
--   If the ETag is not specified as an input parameter, ETag validation of
--   the object will be skipped.
slETag :: Lens' S3Location (Maybe Text)

-- | The name of the Amazon S3 object that represents the bundled artifacts
--   for the application revision.
slKey :: Lens' S3Location (Maybe Text)

-- | A specific version of the Amazon S3 object that represents the bundled
--   artifacts for the application revision.
--   
--   If the version is not specified, the system will use the most recent
--   version by default.
slVersion :: Lens' S3Location (Maybe Text)
data MinimumHealthyHostsType

-- | FLEET_PERCENT
FleetPercent :: MinimumHealthyHostsType

-- | HOST_COUNT
HostCount :: MinimumHealthyHostsType
data GitHubLocation

-- | <a>GitHubLocation</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ghlCommitId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ghlRepository</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
gitHubLocation :: GitHubLocation

-- | The SHA1 commit ID of the GitHub commit that references the that
--   represents the bundled artifacts for the application revision.
ghlCommitId :: Lens' GitHubLocation (Maybe Text)

-- | The GitHub account and repository pair that stores a reference to the
--   commit that represents the bundled artifacts for the application
--   revision.
--   
--   Specified as account/repository.
ghlRepository :: Lens' GitHubLocation (Maybe Text)
data RevisionLocationType

-- | GitHub
GitHub :: RevisionLocationType

-- | S3
S3 :: RevisionLocationType
data EC2TagFilterType

-- | KEY_AND_VALUE
ECTFTKeyAndValue :: EC2TagFilterType

-- | KEY_ONLY
ECTFTKeyOnly :: EC2TagFilterType

-- | VALUE_ONLY
ECTFTValueOnly :: EC2TagFilterType
instance Eq GenericRevisionInfo
instance Ord GenericRevisionInfo
instance Read GenericRevisionInfo
instance Show GenericRevisionInfo
instance Eq ApplicationInfo
instance Ord ApplicationInfo
instance Read ApplicationInfo
instance Show ApplicationInfo
instance Eq BundleType
instance Ord BundleType
instance Read BundleType
instance Show BundleType
instance Generic BundleType
instance Enum BundleType
instance Eq Tag
instance Ord Tag
instance Read Tag
instance Show Tag
instance Eq TagFilterType
instance Ord TagFilterType
instance Read TagFilterType
instance Show TagFilterType
instance Generic TagFilterType
instance Enum TagFilterType
instance Eq TimeRange
instance Ord TimeRange
instance Read TimeRange
instance Show TimeRange
instance Eq DeploymentCreator
instance Ord DeploymentCreator
instance Read DeploymentCreator
instance Show DeploymentCreator
instance Generic DeploymentCreator
instance Enum DeploymentCreator
instance Eq AutoScalingGroup
instance Ord AutoScalingGroup
instance Read AutoScalingGroup
instance Show AutoScalingGroup
instance Eq ApplicationRevisionSortBy
instance Ord ApplicationRevisionSortBy
instance Read ApplicationRevisionSortBy
instance Show ApplicationRevisionSortBy
instance Generic ApplicationRevisionSortBy
instance Enum ApplicationRevisionSortBy
instance Eq ListStateFilterAction
instance Ord ListStateFilterAction
instance Read ListStateFilterAction
instance Show ListStateFilterAction
instance Generic ListStateFilterAction
instance Enum ListStateFilterAction
instance Eq LifecycleErrorCode
instance Ord LifecycleErrorCode
instance Read LifecycleErrorCode
instance Show LifecycleErrorCode
instance Generic LifecycleErrorCode
instance Enum LifecycleErrorCode
instance Eq LifecycleEventStatus
instance Ord LifecycleEventStatus
instance Read LifecycleEventStatus
instance Show LifecycleEventStatus
instance Generic LifecycleEventStatus
instance Enum LifecycleEventStatus
instance Eq Diagnostics
instance Read Diagnostics
instance Show Diagnostics
instance Eq StopStatus
instance Ord StopStatus
instance Read StopStatus
instance Show StopStatus
instance Generic StopStatus
instance Enum StopStatus
instance Eq SortOrder
instance Ord SortOrder
instance Read SortOrder
instance Show SortOrder
instance Generic SortOrder
instance Enum SortOrder
instance Eq InstanceInfo
instance Read InstanceInfo
instance Show InstanceInfo
instance Eq TagFilter
instance Read TagFilter
instance Show TagFilter
instance Eq LifecycleEvent
instance Read LifecycleEvent
instance Show LifecycleEvent
instance Eq DeploymentOverview
instance Ord DeploymentOverview
instance Read DeploymentOverview
instance Show DeploymentOverview
instance Eq ErrorCode
instance Ord ErrorCode
instance Read ErrorCode
instance Show ErrorCode
instance Generic ErrorCode
instance Enum ErrorCode
instance Eq ErrorInformation
instance Read ErrorInformation
instance Show ErrorInformation
instance Eq InstanceStatus
instance Ord InstanceStatus
instance Read InstanceStatus
instance Show InstanceStatus
instance Generic InstanceStatus
instance Enum InstanceStatus
instance Eq InstanceSummary
instance Read InstanceSummary
instance Show InstanceSummary
instance Eq DeploymentStatus
instance Ord DeploymentStatus
instance Read DeploymentStatus
instance Show DeploymentStatus
instance Generic DeploymentStatus
instance Enum DeploymentStatus
instance Eq RegistrationStatus
instance Ord RegistrationStatus
instance Read RegistrationStatus
instance Show RegistrationStatus
instance Generic RegistrationStatus
instance Enum RegistrationStatus
instance Eq S3Location
instance Read S3Location
instance Show S3Location
instance Eq MinimumHealthyHostsType
instance Ord MinimumHealthyHostsType
instance Read MinimumHealthyHostsType
instance Show MinimumHealthyHostsType
instance Generic MinimumHealthyHostsType
instance Enum MinimumHealthyHostsType
instance Eq MinimumHealthyHosts
instance Read MinimumHealthyHosts
instance Show MinimumHealthyHosts
instance Eq DeploymentConfigInfo
instance Read DeploymentConfigInfo
instance Show DeploymentConfigInfo
instance Eq GitHubLocation
instance Ord GitHubLocation
instance Read GitHubLocation
instance Show GitHubLocation
instance Eq RevisionLocationType
instance Ord RevisionLocationType
instance Read RevisionLocationType
instance Show RevisionLocationType
instance Generic RevisionLocationType
instance Enum RevisionLocationType
instance Eq RevisionLocation
instance Read RevisionLocation
instance Show RevisionLocation
instance Eq DeploymentInfo
instance Read DeploymentInfo
instance Show DeploymentInfo
instance Eq EC2TagFilterType
instance Ord EC2TagFilterType
instance Read EC2TagFilterType
instance Show EC2TagFilterType
instance Generic EC2TagFilterType
instance Enum EC2TagFilterType
instance Eq EC2TagFilter
instance Read EC2TagFilter
instance Show EC2TagFilter
instance Eq DeploymentGroupInfo
instance Read DeploymentGroupInfo
instance Show DeploymentGroupInfo
instance Datatype D1BundleType
instance Constructor C1_0BundleType
instance Constructor C1_1BundleType
instance Constructor C1_2BundleType
instance Datatype D1TagFilterType
instance Constructor C1_0TagFilterType
instance Constructor C1_1TagFilterType
instance Constructor C1_2TagFilterType
instance Datatype D1DeploymentCreator
instance Constructor C1_0DeploymentCreator
instance Constructor C1_1DeploymentCreator
instance Datatype D1ApplicationRevisionSortBy
instance Constructor C1_0ApplicationRevisionSortBy
instance Constructor C1_1ApplicationRevisionSortBy
instance Constructor C1_2ApplicationRevisionSortBy
instance Datatype D1ListStateFilterAction
instance Constructor C1_0ListStateFilterAction
instance Constructor C1_1ListStateFilterAction
instance Constructor C1_2ListStateFilterAction
instance Datatype D1LifecycleErrorCode
instance Constructor C1_0LifecycleErrorCode
instance Constructor C1_1LifecycleErrorCode
instance Constructor C1_2LifecycleErrorCode
instance Constructor C1_3LifecycleErrorCode
instance Constructor C1_4LifecycleErrorCode
instance Constructor C1_5LifecycleErrorCode
instance Datatype D1LifecycleEventStatus
instance Constructor C1_0LifecycleEventStatus
instance Constructor C1_1LifecycleEventStatus
instance Constructor C1_2LifecycleEventStatus
instance Constructor C1_3LifecycleEventStatus
instance Constructor C1_4LifecycleEventStatus
instance Constructor C1_5LifecycleEventStatus
instance Datatype D1StopStatus
instance Constructor C1_0StopStatus
instance Constructor C1_1StopStatus
instance Datatype D1SortOrder
instance Constructor C1_0SortOrder
instance Constructor C1_1SortOrder
instance Datatype D1ErrorCode
instance Constructor C1_0ErrorCode
instance Constructor C1_1ErrorCode
instance Constructor C1_2ErrorCode
instance Constructor C1_3ErrorCode
instance Constructor C1_4ErrorCode
instance Constructor C1_5ErrorCode
instance Constructor C1_6ErrorCode
instance Constructor C1_7ErrorCode
instance Constructor C1_8ErrorCode
instance Constructor C1_9ErrorCode
instance Constructor C1_10ErrorCode
instance Constructor C1_11ErrorCode
instance Constructor C1_12ErrorCode
instance Datatype D1InstanceStatus
instance Constructor C1_0InstanceStatus
instance Constructor C1_1InstanceStatus
instance Constructor C1_2InstanceStatus
instance Constructor C1_3InstanceStatus
instance Constructor C1_4InstanceStatus
instance Constructor C1_5InstanceStatus
instance Datatype D1DeploymentStatus
instance Constructor C1_0DeploymentStatus
instance Constructor C1_1DeploymentStatus
instance Constructor C1_2DeploymentStatus
instance Constructor C1_3DeploymentStatus
instance Constructor C1_4DeploymentStatus
instance Constructor C1_5DeploymentStatus
instance Datatype D1RegistrationStatus
instance Constructor C1_0RegistrationStatus
instance Constructor C1_1RegistrationStatus
instance Datatype D1MinimumHealthyHostsType
instance Constructor C1_0MinimumHealthyHostsType
instance Constructor C1_1MinimumHealthyHostsType
instance Datatype D1RevisionLocationType
instance Constructor C1_0RevisionLocationType
instance Constructor C1_1RevisionLocationType
instance Datatype D1EC2TagFilterType
instance Constructor C1_0EC2TagFilterType
instance Constructor C1_1EC2TagFilterType
instance Constructor C1_2EC2TagFilterType
instance ToJSON EC2TagFilterType
instance FromJSON EC2TagFilterType
instance ToQuery EC2TagFilterType
instance ToHeader EC2TagFilterType
instance ToByteString EC2TagFilterType
instance ToText EC2TagFilterType
instance FromText EC2TagFilterType
instance Hashable EC2TagFilterType
instance ToJSON RevisionLocationType
instance FromJSON RevisionLocationType
instance ToQuery RevisionLocationType
instance ToHeader RevisionLocationType
instance ToByteString RevisionLocationType
instance ToText RevisionLocationType
instance FromText RevisionLocationType
instance Hashable RevisionLocationType
instance ToJSON GitHubLocation
instance FromJSON GitHubLocation
instance ToJSON MinimumHealthyHostsType
instance FromJSON MinimumHealthyHostsType
instance ToQuery MinimumHealthyHostsType
instance ToHeader MinimumHealthyHostsType
instance ToByteString MinimumHealthyHostsType
instance ToText MinimumHealthyHostsType
instance FromText MinimumHealthyHostsType
instance Hashable MinimumHealthyHostsType
instance ToJSON S3Location
instance FromJSON S3Location
instance ToJSON RegistrationStatus
instance FromJSON RegistrationStatus
instance ToQuery RegistrationStatus
instance ToHeader RegistrationStatus
instance ToByteString RegistrationStatus
instance ToText RegistrationStatus
instance FromText RegistrationStatus
instance Hashable RegistrationStatus
instance ToJSON DeploymentStatus
instance FromJSON DeploymentStatus
instance ToQuery DeploymentStatus
instance ToHeader DeploymentStatus
instance ToByteString DeploymentStatus
instance ToText DeploymentStatus
instance FromText DeploymentStatus
instance Hashable DeploymentStatus
instance ToJSON InstanceStatus
instance FromJSON InstanceStatus
instance ToQuery InstanceStatus
instance ToHeader InstanceStatus
instance ToByteString InstanceStatus
instance ToText InstanceStatus
instance FromText InstanceStatus
instance Hashable InstanceStatus
instance ToJSON DeploymentConfigInfo
instance FromJSON DeploymentConfigInfo
instance ToJSON ErrorCode
instance FromJSON ErrorCode
instance ToQuery ErrorCode
instance ToHeader ErrorCode
instance ToByteString ErrorCode
instance ToText ErrorCode
instance FromText ErrorCode
instance Hashable ErrorCode
instance ToJSON DeploymentOverview
instance FromJSON DeploymentOverview
instance ToJSON LifecycleEvent
instance FromJSON LifecycleEvent
instance ToJSON TagFilter
instance FromJSON TagFilter
instance ToJSON DeploymentInfo
instance FromJSON DeploymentInfo
instance ToJSON InstanceInfo
instance FromJSON InstanceInfo
instance ToJSON SortOrder
instance FromJSON SortOrder
instance ToQuery SortOrder
instance ToHeader SortOrder
instance ToByteString SortOrder
instance ToText SortOrder
instance FromText SortOrder
instance Hashable SortOrder
instance ToJSON ErrorInformation
instance FromJSON ErrorInformation
instance ToJSON StopStatus
instance FromJSON StopStatus
instance ToQuery StopStatus
instance ToHeader StopStatus
instance ToByteString StopStatus
instance ToText StopStatus
instance FromText StopStatus
instance Hashable StopStatus
instance ToJSON Diagnostics
instance FromJSON Diagnostics
instance ToJSON EC2TagFilter
instance FromJSON EC2TagFilter
instance ToJSON LifecycleEventStatus
instance FromJSON LifecycleEventStatus
instance ToQuery LifecycleEventStatus
instance ToHeader LifecycleEventStatus
instance ToByteString LifecycleEventStatus
instance ToText LifecycleEventStatus
instance FromText LifecycleEventStatus
instance Hashable LifecycleEventStatus
instance ToJSON RevisionLocation
instance FromJSON RevisionLocation
instance ToJSON LifecycleErrorCode
instance FromJSON LifecycleErrorCode
instance ToQuery LifecycleErrorCode
instance ToHeader LifecycleErrorCode
instance ToByteString LifecycleErrorCode
instance ToText LifecycleErrorCode
instance FromText LifecycleErrorCode
instance Hashable LifecycleErrorCode
instance ToJSON ListStateFilterAction
instance FromJSON ListStateFilterAction
instance ToQuery ListStateFilterAction
instance ToHeader ListStateFilterAction
instance ToByteString ListStateFilterAction
instance ToText ListStateFilterAction
instance FromText ListStateFilterAction
instance Hashable ListStateFilterAction
instance ToJSON MinimumHealthyHosts
instance FromJSON MinimumHealthyHosts
instance ToJSON ApplicationRevisionSortBy
instance FromJSON ApplicationRevisionSortBy
instance ToQuery ApplicationRevisionSortBy
instance ToHeader ApplicationRevisionSortBy
instance ToByteString ApplicationRevisionSortBy
instance ToText ApplicationRevisionSortBy
instance FromText ApplicationRevisionSortBy
instance Hashable ApplicationRevisionSortBy
instance ToJSON DeploymentGroupInfo
instance FromJSON DeploymentGroupInfo
instance ToJSON AutoScalingGroup
instance FromJSON AutoScalingGroup
instance ToJSON InstanceSummary
instance FromJSON InstanceSummary
instance ToJSON DeploymentCreator
instance FromJSON DeploymentCreator
instance ToQuery DeploymentCreator
instance ToHeader DeploymentCreator
instance ToByteString DeploymentCreator
instance ToText DeploymentCreator
instance FromText DeploymentCreator
instance Hashable DeploymentCreator
instance ToJSON TimeRange
instance FromJSON TimeRange
instance ToJSON TagFilterType
instance FromJSON TagFilterType
instance ToQuery TagFilterType
instance ToHeader TagFilterType
instance ToByteString TagFilterType
instance ToText TagFilterType
instance FromText TagFilterType
instance Hashable TagFilterType
instance ToJSON Tag
instance FromJSON Tag
instance ToJSON BundleType
instance FromJSON BundleType
instance ToQuery BundleType
instance ToHeader BundleType
instance ToByteString BundleType
instance ToText BundleType
instance FromText BundleType
instance Hashable BundleType
instance ToJSON ApplicationInfo
instance FromJSON ApplicationInfo
instance ToJSON GenericRevisionInfo
instance FromJSON GenericRevisionInfo
instance AWSService CodeDeploy


-- | Changes an existing application's name.
--   
--   
--   <a>http://docs.aws.amazon.com/codedeploy/latest/APIReference/API_UpdateApplication.html</a>
module Network.AWS.CodeDeploy.UpdateApplication
data UpdateApplication

-- | <a>UpdateApplication</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uaApplicationName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>uaNewApplicationName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
updateApplication :: UpdateApplication

-- | The current name of the application that you want to change.
uaApplicationName :: Lens' UpdateApplication (Maybe Text)

-- | The new name that you want to change the application to.
uaNewApplicationName :: Lens' UpdateApplication (Maybe Text)
data UpdateApplicationResponse

-- | <a>UpdateApplicationResponse</a> constructor.
updateApplicationResponse :: UpdateApplicationResponse
instance Eq UpdateApplication
instance Ord UpdateApplication
instance Read UpdateApplication
instance Show UpdateApplication
instance Eq UpdateApplicationResponse
instance Ord UpdateApplicationResponse
instance Read UpdateApplicationResponse
instance Show UpdateApplicationResponse
instance Generic UpdateApplicationResponse
instance Datatype D1UpdateApplicationResponse
instance Constructor C1_0UpdateApplicationResponse
instance AWSRequest UpdateApplication
instance ToJSON UpdateApplication
instance ToHeaders UpdateApplication
instance ToQuery UpdateApplication
instance ToPath UpdateApplication


-- | Changes information about an existing deployment group.
--   
--   
--   <a>http://docs.aws.amazon.com/codedeploy/latest/APIReference/API_UpdateDeploymentGroup.html</a>
module Network.AWS.CodeDeploy.UpdateDeploymentGroup
data UpdateDeploymentGroup

-- | <a>UpdateDeploymentGroup</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>udgApplicationName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>udgAutoScalingGroups</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>udgCurrentDeploymentGroupName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>udgDeploymentConfigName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>udgEc2TagFilters</a> <tt>::</tt> [<a>EC2TagFilter</a>]</li>
--   <li><a>udgNewDeploymentGroupName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>udgOnPremisesInstanceTagFilters</a> <tt>::</tt>
--   [<a>TagFilter</a>]</li>
--   <li><a>udgServiceRoleArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
updateDeploymentGroup :: Text -> Text -> UpdateDeploymentGroup

-- | The application name corresponding to the deployment group to update.
udgApplicationName :: Lens' UpdateDeploymentGroup Text

-- | The replacement list of Auto Scaling groups to be included in the
--   deployment group, if you want to change them.
udgAutoScalingGroups :: Lens' UpdateDeploymentGroup [Text]

-- | The current name of the existing deployment group.
udgCurrentDeploymentGroupName :: Lens' UpdateDeploymentGroup Text

-- | The replacement deployment configuration name to use, if you want to
--   change it.
udgDeploymentConfigName :: Lens' UpdateDeploymentGroup (Maybe Text)

-- | The replacement set of Amazon EC2 tags to filter on, if you want to
--   change them.
udgEc2TagFilters :: Lens' UpdateDeploymentGroup [EC2TagFilter]

-- | The new name of the deployment group, if you want to change it.
udgNewDeploymentGroupName :: Lens' UpdateDeploymentGroup (Maybe Text)

-- | The replacement set of on-premises instance tags for filter on, if you
--   want to change them.
udgOnPremisesInstanceTagFilters :: Lens' UpdateDeploymentGroup [TagFilter]

-- | A replacement service role's ARN, if you want to change it.
udgServiceRoleArn :: Lens' UpdateDeploymentGroup (Maybe Text)
data UpdateDeploymentGroupResponse

-- | <a>UpdateDeploymentGroupResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>udgrHooksNotCleanedUp</a> <tt>::</tt>
--   [<a>AutoScalingGroup</a>]</li>
--   </ul>
updateDeploymentGroupResponse :: UpdateDeploymentGroupResponse

-- | If the output contains no data, and the corresponding deployment group
--   contained at least one Auto Scaling group, AWS CodeDeploy successfully
--   removed all corresponding Auto Scaling lifecycle event hooks from the
--   AWS account. If the output does contain data, AWS CodeDeploy could not
--   remove some Auto Scaling lifecycle event hooks from the AWS account.
udgrHooksNotCleanedUp :: Lens' UpdateDeploymentGroupResponse [AutoScalingGroup]
instance Eq UpdateDeploymentGroup
instance Read UpdateDeploymentGroup
instance Show UpdateDeploymentGroup
instance Eq UpdateDeploymentGroupResponse
instance Read UpdateDeploymentGroupResponse
instance Show UpdateDeploymentGroupResponse
instance Monoid UpdateDeploymentGroupResponse
instance Semigroup UpdateDeploymentGroupResponse
instance FromJSON UpdateDeploymentGroupResponse
instance AWSRequest UpdateDeploymentGroup
instance ToJSON UpdateDeploymentGroup
instance ToHeaders UpdateDeploymentGroup
instance ToQuery UpdateDeploymentGroup
instance ToPath UpdateDeploymentGroup
instance IsList UpdateDeploymentGroupResponse


-- | Attempts to stop an ongoing deployment.
--   
--   
--   <a>http://docs.aws.amazon.com/codedeploy/latest/APIReference/API_StopDeployment.html</a>
module Network.AWS.CodeDeploy.StopDeployment
data StopDeployment

-- | <a>StopDeployment</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sdDeploymentId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
stopDeployment :: Text -> StopDeployment

-- | The unique ID of a deployment.
sdDeploymentId :: Lens' StopDeployment Text
data StopDeploymentResponse

-- | <a>StopDeploymentResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sdrStatus</a> <tt>::</tt> <a>Maybe</a> <a>StopStatus</a></li>
--   <li><a>sdrStatusMessage</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
stopDeploymentResponse :: StopDeploymentResponse

-- | The status of the stop deployment operation:
--   
--   Pending: The stop operation is pending. Succeeded: The stop operation
--   succeeded.
sdrStatus :: Lens' StopDeploymentResponse (Maybe StopStatus)

-- | An accompanying status message.
sdrStatusMessage :: Lens' StopDeploymentResponse (Maybe Text)
instance Eq StopDeployment
instance Ord StopDeployment
instance Read StopDeployment
instance Show StopDeployment
instance Monoid StopDeployment
instance IsString StopDeployment
instance Eq StopDeploymentResponse
instance Read StopDeploymentResponse
instance Show StopDeploymentResponse
instance FromJSON StopDeploymentResponse
instance AWSRequest StopDeployment
instance ToJSON StopDeployment
instance ToHeaders StopDeployment
instance ToQuery StopDeployment
instance ToPath StopDeployment


-- | Removes one or more tags from one or more on-premises instances.
--   
--   
--   <a>http://docs.aws.amazon.com/codedeploy/latest/APIReference/API_RemoveTagsFromOnPremisesInstances.html</a>
module Network.AWS.CodeDeploy.RemoveTagsFromOnPremisesInstances
data RemoveTagsFromOnPremisesInstances

-- | <a>RemoveTagsFromOnPremisesInstances</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rtfopiInstanceNames</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>rtfopiTags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   </ul>
removeTagsFromOnPremisesInstances :: RemoveTagsFromOnPremisesInstances

-- | The names of the on-premises instances to remove tags from.
rtfopiInstanceNames :: Lens' RemoveTagsFromOnPremisesInstances [Text]

-- | The tag key-value pairs to remove from the on-premises instances.
rtfopiTags :: Lens' RemoveTagsFromOnPremisesInstances [Tag]
data RemoveTagsFromOnPremisesInstancesResponse

-- | <a>RemoveTagsFromOnPremisesInstancesResponse</a> constructor.
removeTagsFromOnPremisesInstancesResponse :: RemoveTagsFromOnPremisesInstancesResponse
instance Eq RemoveTagsFromOnPremisesInstances
instance Read RemoveTagsFromOnPremisesInstances
instance Show RemoveTagsFromOnPremisesInstances
instance Eq RemoveTagsFromOnPremisesInstancesResponse
instance Ord RemoveTagsFromOnPremisesInstancesResponse
instance Read RemoveTagsFromOnPremisesInstancesResponse
instance Show RemoveTagsFromOnPremisesInstancesResponse
instance Generic RemoveTagsFromOnPremisesInstancesResponse
instance Datatype D1RemoveTagsFromOnPremisesInstancesResponse
instance Constructor C1_0RemoveTagsFromOnPremisesInstancesResponse
instance AWSRequest RemoveTagsFromOnPremisesInstances
instance ToJSON RemoveTagsFromOnPremisesInstances
instance ToHeaders RemoveTagsFromOnPremisesInstances
instance ToQuery RemoveTagsFromOnPremisesInstances
instance ToPath RemoveTagsFromOnPremisesInstances


-- | Registers an on-premises instance.
--   
--   
--   <a>http://docs.aws.amazon.com/codedeploy/latest/APIReference/API_RegisterOnPremisesInstance.html</a>
module Network.AWS.CodeDeploy.RegisterOnPremisesInstance
data RegisterOnPremisesInstance

-- | <a>RegisterOnPremisesInstance</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ropiIamUserArn</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ropiInstanceName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
registerOnPremisesInstance :: Text -> Text -> RegisterOnPremisesInstance

-- | The ARN of the IAM user to associate with the on-premises instance.
ropiIamUserArn :: Lens' RegisterOnPremisesInstance Text

-- | The name of the on-premises instance to register.
ropiInstanceName :: Lens' RegisterOnPremisesInstance Text
data RegisterOnPremisesInstanceResponse

-- | <a>RegisterOnPremisesInstanceResponse</a> constructor.
registerOnPremisesInstanceResponse :: RegisterOnPremisesInstanceResponse
instance Eq RegisterOnPremisesInstance
instance Ord RegisterOnPremisesInstance
instance Read RegisterOnPremisesInstance
instance Show RegisterOnPremisesInstance
instance Eq RegisterOnPremisesInstanceResponse
instance Ord RegisterOnPremisesInstanceResponse
instance Read RegisterOnPremisesInstanceResponse
instance Show RegisterOnPremisesInstanceResponse
instance Generic RegisterOnPremisesInstanceResponse
instance Datatype D1RegisterOnPremisesInstanceResponse
instance Constructor C1_0RegisterOnPremisesInstanceResponse
instance AWSRequest RegisterOnPremisesInstance
instance ToJSON RegisterOnPremisesInstance
instance ToHeaders RegisterOnPremisesInstance
instance ToQuery RegisterOnPremisesInstance
instance ToPath RegisterOnPremisesInstance


-- | Registers with AWS CodeDeploy a revision for the specified
--   application.
--   
--   
--   <a>http://docs.aws.amazon.com/codedeploy/latest/APIReference/API_RegisterApplicationRevision.html</a>
module Network.AWS.CodeDeploy.RegisterApplicationRevision
data RegisterApplicationRevision

-- | <a>RegisterApplicationRevision</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rarApplicationName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rarDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rarRevision</a> <tt>::</tt> <a>RevisionLocation</a></li>
--   </ul>
registerApplicationRevision :: Text -> RevisionLocation -> RegisterApplicationRevision

-- | The name of an existing AWS CodeDeploy application associated with the
--   applicable IAM user or AWS account.
rarApplicationName :: Lens' RegisterApplicationRevision Text

-- | A comment about the revision.
rarDescription :: Lens' RegisterApplicationRevision (Maybe Text)

-- | Information about the application revision to register, including the
--   revision's type and its location.
rarRevision :: Lens' RegisterApplicationRevision RevisionLocation
data RegisterApplicationRevisionResponse

-- | <a>RegisterApplicationRevisionResponse</a> constructor.
registerApplicationRevisionResponse :: RegisterApplicationRevisionResponse
instance Eq RegisterApplicationRevision
instance Read RegisterApplicationRevision
instance Show RegisterApplicationRevision
instance Eq RegisterApplicationRevisionResponse
instance Ord RegisterApplicationRevisionResponse
instance Read RegisterApplicationRevisionResponse
instance Show RegisterApplicationRevisionResponse
instance Generic RegisterApplicationRevisionResponse
instance Datatype D1RegisterApplicationRevisionResponse
instance Constructor C1_0RegisterApplicationRevisionResponse
instance AWSRequest RegisterApplicationRevision
instance ToJSON RegisterApplicationRevision
instance ToHeaders RegisterApplicationRevision
instance ToQuery RegisterApplicationRevision
instance ToPath RegisterApplicationRevision


-- | Gets a list of one or more on-premises instance names.
--   
--   Unless otherwise specified, both registered and deregistered
--   on-premises instance names will be listed. To list only registered or
--   deregistered on-premises instance names, use the registration status
--   parameter.
--   
--   
--   <a>http://docs.aws.amazon.com/codedeploy/latest/APIReference/API_ListOnPremisesInstances.html</a>
module Network.AWS.CodeDeploy.ListOnPremisesInstances
data ListOnPremisesInstances

-- | <a>ListOnPremisesInstances</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lopiNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lopiRegistrationStatus</a> <tt>::</tt> <a>Maybe</a>
--   <a>RegistrationStatus</a></li>
--   <li><a>lopiTagFilters</a> <tt>::</tt> [<a>TagFilter</a>]</li>
--   </ul>
listOnPremisesInstances :: ListOnPremisesInstances

-- | An identifier that was returned from the previous list on-premises
--   instances call, which can be used to return the next set of
--   on-premises instances in the list.
lopiNextToken :: Lens' ListOnPremisesInstances (Maybe Text)

-- | The on-premises instances registration status:
--   
--   Deregistered: Include in the resulting list deregistered on-premises
--   instances. Registered: Include in the resulting list registered
--   on-premises instances.
lopiRegistrationStatus :: Lens' ListOnPremisesInstances (Maybe RegistrationStatus)

-- | The on-premises instance tags that will be used to restrict the
--   corresponding on-premises instance names that are returned.
lopiTagFilters :: Lens' ListOnPremisesInstances [TagFilter]
data ListOnPremisesInstancesResponse

-- | <a>ListOnPremisesInstancesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lopirInstanceNames</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>lopirNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listOnPremisesInstancesResponse :: ListOnPremisesInstancesResponse

-- | The list of matching on-premises instance names.
lopirInstanceNames :: Lens' ListOnPremisesInstancesResponse [Text]

-- | If the amount of information that is returned is significantly large,
--   an identifier will also be returned, which can be used in a subsequent
--   list on-premises instances call to return the next set of on-premises
--   instances in the list.
lopirNextToken :: Lens' ListOnPremisesInstancesResponse (Maybe Text)
instance Eq ListOnPremisesInstances
instance Read ListOnPremisesInstances
instance Show ListOnPremisesInstances
instance Eq ListOnPremisesInstancesResponse
instance Ord ListOnPremisesInstancesResponse
instance Read ListOnPremisesInstancesResponse
instance Show ListOnPremisesInstancesResponse
instance FromJSON ListOnPremisesInstancesResponse
instance AWSRequest ListOnPremisesInstances
instance ToJSON ListOnPremisesInstances
instance ToHeaders ListOnPremisesInstances
instance ToQuery ListOnPremisesInstances
instance ToPath ListOnPremisesInstances


-- | Lists the deployments within a deployment group for an application
--   registered with the applicable IAM user or AWS account.
--   
--   
--   <a>http://docs.aws.amazon.com/codedeploy/latest/APIReference/API_ListDeployments.html</a>
module Network.AWS.CodeDeploy.ListDeployments
data ListDeployments

-- | <a>ListDeployments</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ldApplicationName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ldCreateTimeRange</a> <tt>::</tt> <a>Maybe</a>
--   <a>TimeRange</a></li>
--   <li><a>ldDeploymentGroupName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>ldIncludeOnlyStatuses</a> <tt>::</tt>
--   [<a>DeploymentStatus</a>]</li>
--   <li><a>ldNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listDeployments :: ListDeployments

-- | The name of an existing AWS CodeDeploy application associated with the
--   applicable IAM user or AWS account.
ldApplicationName :: Lens' ListDeployments (Maybe Text)

-- | A deployment creation start- and end-time range for returning a subset
--   of the list of deployments.
ldCreateTimeRange :: Lens' ListDeployments (Maybe TimeRange)

-- | The name of an existing deployment group for the specified
--   application.
ldDeploymentGroupName :: Lens' ListDeployments (Maybe Text)

-- | A subset of deployments to list, by status:
--   
--   Created: Include in the resulting list created deployments. Queued:
--   Include in the resulting list queued deployments. In Progress: Include
--   in the resulting list in-progress deployments. Succeeded: Include in
--   the resulting list succeeded deployments. Failed: Include in the
--   resulting list failed deployments. Aborted: Include in the resulting
--   list aborted deployments.
ldIncludeOnlyStatuses :: Lens' ListDeployments [DeploymentStatus]

-- | An identifier that was returned from the previous list deployments
--   call, which can be used to return the next set of deployments in the
--   list.
ldNextToken :: Lens' ListDeployments (Maybe Text)
data ListDeploymentsResponse

-- | <a>ListDeploymentsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ldrDeployments</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>ldrNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listDeploymentsResponse :: ListDeploymentsResponse

-- | A list of deployment IDs.
ldrDeployments :: Lens' ListDeploymentsResponse [Text]

-- | If the amount of information that is returned is significantly large,
--   an identifier will also be returned, which can be used in a subsequent
--   list deployments call to return the next set of deployments in the
--   list.
ldrNextToken :: Lens' ListDeploymentsResponse (Maybe Text)
instance Eq ListDeployments
instance Read ListDeployments
instance Show ListDeployments
instance Eq ListDeploymentsResponse
instance Ord ListDeploymentsResponse
instance Read ListDeploymentsResponse
instance Show ListDeploymentsResponse
instance FromJSON ListDeploymentsResponse
instance AWSRequest ListDeployments
instance ToJSON ListDeployments
instance ToHeaders ListDeployments
instance ToQuery ListDeployments
instance ToPath ListDeployments


-- | Lists the instances for a deployment associated with the applicable
--   IAM user or AWS account.
--   
--   
--   <a>http://docs.aws.amazon.com/codedeploy/latest/APIReference/API_ListDeploymentInstances.html</a>
module Network.AWS.CodeDeploy.ListDeploymentInstances
data ListDeploymentInstances

-- | <a>ListDeploymentInstances</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ldiDeploymentId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ldiInstanceStatusFilter</a> <tt>::</tt>
--   [<a>InstanceStatus</a>]</li>
--   <li><a>ldiNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listDeploymentInstances :: Text -> ListDeploymentInstances

-- | The unique ID of a deployment.
ldiDeploymentId :: Lens' ListDeploymentInstances Text

-- | A subset of instances to list, by status:
--   
--   Pending: Include in the resulting list those instances with pending
--   deployments. InProgress: Include in the resulting list those instances
--   with in-progress deployments. Succeeded: Include in the resulting list
--   those instances with succeeded deployments. Failed: Include in the
--   resulting list those instances with failed deployments. Skipped:
--   Include in the resulting list those instances with skipped
--   deployments. Unknown: Include in the resulting list those instances
--   with deployments in an unknown state.
ldiInstanceStatusFilter :: Lens' ListDeploymentInstances [InstanceStatus]

-- | An identifier that was returned from the previous list deployment
--   instances call, which can be used to return the next set of deployment
--   instances in the list.
ldiNextToken :: Lens' ListDeploymentInstances (Maybe Text)
data ListDeploymentInstancesResponse

-- | <a>ListDeploymentInstancesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ldirInstancesList</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>ldirNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listDeploymentInstancesResponse :: ListDeploymentInstancesResponse

-- | A list of instances IDs.
ldirInstancesList :: Lens' ListDeploymentInstancesResponse [Text]

-- | If the amount of information that is returned is significantly large,
--   an identifier will also be returned, which can be used in a subsequent
--   list deployment instances call to return the next set of deployment
--   instances in the list.
ldirNextToken :: Lens' ListDeploymentInstancesResponse (Maybe Text)
instance Eq ListDeploymentInstances
instance Read ListDeploymentInstances
instance Show ListDeploymentInstances
instance Eq ListDeploymentInstancesResponse
instance Ord ListDeploymentInstancesResponse
instance Read ListDeploymentInstancesResponse
instance Show ListDeploymentInstancesResponse
instance FromJSON ListDeploymentInstancesResponse
instance AWSRequest ListDeploymentInstances
instance ToJSON ListDeploymentInstances
instance ToHeaders ListDeploymentInstances
instance ToQuery ListDeploymentInstances
instance ToPath ListDeploymentInstances


-- | Lists the deployment groups for an application registered with the
--   applicable IAM user or AWS account.
--   
--   
--   <a>http://docs.aws.amazon.com/codedeploy/latest/APIReference/API_ListDeploymentGroups.html</a>
module Network.AWS.CodeDeploy.ListDeploymentGroups
data ListDeploymentGroups

-- | <a>ListDeploymentGroups</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ldgApplicationName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ldgNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listDeploymentGroups :: Text -> ListDeploymentGroups

-- | The name of an existing AWS CodeDeploy application associated with the
--   applicable IAM user or AWS account.
ldgApplicationName :: Lens' ListDeploymentGroups Text

-- | An identifier that was returned from the previous list deployment
--   groups call, which can be used to return the next set of deployment
--   groups in the list.
ldgNextToken :: Lens' ListDeploymentGroups (Maybe Text)
data ListDeploymentGroupsResponse

-- | <a>ListDeploymentGroupsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ldgrApplicationName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>ldgrDeploymentGroups</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>ldgrNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listDeploymentGroupsResponse :: ListDeploymentGroupsResponse

-- | The application name.
ldgrApplicationName :: Lens' ListDeploymentGroupsResponse (Maybe Text)

-- | A list of corresponding deployment group names.
ldgrDeploymentGroups :: Lens' ListDeploymentGroupsResponse [Text]

-- | If the amount of information that is returned is significantly large,
--   an identifier will also be returned, which can be used in a subsequent
--   list deployment groups call to return the next set of deployment
--   groups in the list.
ldgrNextToken :: Lens' ListDeploymentGroupsResponse (Maybe Text)
instance Eq ListDeploymentGroups
instance Ord ListDeploymentGroups
instance Read ListDeploymentGroups
instance Show ListDeploymentGroups
instance Eq ListDeploymentGroupsResponse
instance Ord ListDeploymentGroupsResponse
instance Read ListDeploymentGroupsResponse
instance Show ListDeploymentGroupsResponse
instance FromJSON ListDeploymentGroupsResponse
instance AWSRequest ListDeploymentGroups
instance ToJSON ListDeploymentGroups
instance ToHeaders ListDeploymentGroups
instance ToQuery ListDeploymentGroups
instance ToPath ListDeploymentGroups


-- | Lists the deployment configurations with the applicable IAM user or
--   AWS account.
--   
--   
--   <a>http://docs.aws.amazon.com/codedeploy/latest/APIReference/API_ListDeploymentConfigs.html</a>
module Network.AWS.CodeDeploy.ListDeploymentConfigs
data ListDeploymentConfigs

-- | <a>ListDeploymentConfigs</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ldcNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listDeploymentConfigs :: ListDeploymentConfigs

-- | An identifier that was returned from the previous list deployment
--   configurations call, which can be used to return the next set of
--   deployment configurations in the list.
ldcNextToken :: Lens' ListDeploymentConfigs (Maybe Text)
data ListDeploymentConfigsResponse

-- | <a>ListDeploymentConfigsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ldcrDeploymentConfigsList</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>ldcrNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listDeploymentConfigsResponse :: ListDeploymentConfigsResponse

-- | A list of deployment configurations, including the built-in
--   configurations such as CodeDeployDefault.OneAtATime.
ldcrDeploymentConfigsList :: Lens' ListDeploymentConfigsResponse [Text]

-- | If the amount of information that is returned is significantly large,
--   an identifier will also be returned, which can be used in a subsequent
--   list deployment configurations call to return the next set of
--   deployment configurations in the list.
ldcrNextToken :: Lens' ListDeploymentConfigsResponse (Maybe Text)
instance Eq ListDeploymentConfigs
instance Ord ListDeploymentConfigs
instance Read ListDeploymentConfigs
instance Show ListDeploymentConfigs
instance Monoid ListDeploymentConfigs
instance Eq ListDeploymentConfigsResponse
instance Ord ListDeploymentConfigsResponse
instance Read ListDeploymentConfigsResponse
instance Show ListDeploymentConfigsResponse
instance FromJSON ListDeploymentConfigsResponse
instance AWSRequest ListDeploymentConfigs
instance ToJSON ListDeploymentConfigs
instance ToHeaders ListDeploymentConfigs
instance ToQuery ListDeploymentConfigs
instance ToPath ListDeploymentConfigs


-- | Lists the applications registered with the applicable IAM user or AWS
--   account.
--   
--   
--   <a>http://docs.aws.amazon.com/codedeploy/latest/APIReference/API_ListApplications.html</a>
module Network.AWS.CodeDeploy.ListApplications
data ListApplications

-- | <a>ListApplications</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>laNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listApplications :: ListApplications

-- | An identifier that was returned from the previous list applications
--   call, which can be used to return the next set of applications in the
--   list.
laNextToken :: Lens' ListApplications (Maybe Text)
data ListApplicationsResponse

-- | <a>ListApplicationsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lar1Applications</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>lar1NextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listApplicationsResponse :: ListApplicationsResponse

-- | A list of application names.
lar1Applications :: Lens' ListApplicationsResponse [Text]

-- | If the amount of information that is returned is significantly large,
--   an identifier will also be returned, which can be used in a subsequent
--   list applications call to return the next set of applications in the
--   list.
lar1NextToken :: Lens' ListApplicationsResponse (Maybe Text)
instance Eq ListApplications
instance Ord ListApplications
instance Read ListApplications
instance Show ListApplications
instance Monoid ListApplications
instance Eq ListApplicationsResponse
instance Ord ListApplicationsResponse
instance Read ListApplicationsResponse
instance Show ListApplicationsResponse
instance FromJSON ListApplicationsResponse
instance AWSRequest ListApplications
instance ToJSON ListApplications
instance ToHeaders ListApplications
instance ToQuery ListApplications
instance ToPath ListApplications


-- | Lists information about revisions for an application.
--   
--   
--   <a>http://docs.aws.amazon.com/codedeploy/latest/APIReference/API_ListApplicationRevisions.html</a>
module Network.AWS.CodeDeploy.ListApplicationRevisions
data ListApplicationRevisions

-- | <a>ListApplicationRevisions</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>larApplicationName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>larDeployed</a> <tt>::</tt> <a>Maybe</a>
--   <a>ListStateFilterAction</a></li>
--   <li><a>larNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>larS3Bucket</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>larS3KeyPrefix</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>larSortBy</a> <tt>::</tt> <a>Maybe</a>
--   <a>ApplicationRevisionSortBy</a></li>
--   <li><a>larSortOrder</a> <tt>::</tt> <a>Maybe</a> <a>SortOrder</a></li>
--   </ul>
listApplicationRevisions :: Text -> ListApplicationRevisions

-- | The name of an existing AWS CodeDeploy application associated with the
--   applicable IAM user or AWS account.
larApplicationName :: Lens' ListApplicationRevisions Text

-- | Whether to list revisions based on whether the revision is the target
--   revision of an deployment group:
--   
--   include: List revisions that are target revisions of a deployment
--   group. exclude: Do not list revisions that are target revisions of a
--   deployment group. ignore: List all revisions, regardless of whether
--   they are target revisions of a deployment group.
larDeployed :: Lens' ListApplicationRevisions (Maybe ListStateFilterAction)

-- | An identifier that was returned from the previous list application
--   revisions call, which can be used to return the next set of
--   applications in the list.
larNextToken :: Lens' ListApplicationRevisions (Maybe Text)

-- | A specific Amazon S3 bucket name to limit the search for revisions.
--   
--   If set to null, then all of the user's buckets will be searched.
larS3Bucket :: Lens' ListApplicationRevisions (Maybe Text)

-- | A specific key prefix for the set of Amazon S3 objects to limit the
--   search for revisions.
larS3KeyPrefix :: Lens' ListApplicationRevisions (Maybe Text)

-- | The column name to sort the list results by:
--   
--   registerTime: Sort the list results by when the revisions were
--   registered with AWS CodeDeploy. firstUsedTime: Sort the list results
--   by when the revisions were first used by in a deployment.
--   lastUsedTime: Sort the list results by when the revisions were last
--   used in a deployment. If not specified or set to null, the results
--   will be returned in an arbitrary order.
larSortBy :: Lens' ListApplicationRevisions (Maybe ApplicationRevisionSortBy)

-- | The order to sort the list results by:
--   
--   ascending: Sort the list of results in ascending order. descending:
--   Sort the list of results in descending order. If not specified, the
--   results will be sorted in ascending order.
--   
--   If set to null, the results will be sorted in an arbitrary order.
larSortOrder :: Lens' ListApplicationRevisions (Maybe SortOrder)
data ListApplicationRevisionsResponse

-- | <a>ListApplicationRevisionsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>larrNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>larrRevisions</a> <tt>::</tt> [<a>RevisionLocation</a>]</li>
--   </ul>
listApplicationRevisionsResponse :: ListApplicationRevisionsResponse

-- | If the amount of information that is returned is significantly large,
--   an identifier will also be returned, which can be used in a subsequent
--   list application revisions call to return the next set of application
--   revisions in the list.
larrNextToken :: Lens' ListApplicationRevisionsResponse (Maybe Text)

-- | A list of revision locations that contain the matching revisions.
larrRevisions :: Lens' ListApplicationRevisionsResponse [RevisionLocation]
instance Eq ListApplicationRevisions
instance Read ListApplicationRevisions
instance Show ListApplicationRevisions
instance Eq ListApplicationRevisionsResponse
instance Read ListApplicationRevisionsResponse
instance Show ListApplicationRevisionsResponse
instance FromJSON ListApplicationRevisionsResponse
instance AWSRequest ListApplicationRevisions
instance ToJSON ListApplicationRevisions
instance ToHeaders ListApplicationRevisions
instance ToQuery ListApplicationRevisions
instance ToPath ListApplicationRevisions


-- | Gets information about an on-premises instance.
--   
--   
--   <a>http://docs.aws.amazon.com/codedeploy/latest/APIReference/API_GetOnPremisesInstance.html</a>
module Network.AWS.CodeDeploy.GetOnPremisesInstance
data GetOnPremisesInstance

-- | <a>GetOnPremisesInstance</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gopiInstanceName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getOnPremisesInstance :: Text -> GetOnPremisesInstance

-- | The name of the on-premises instance to get information about
gopiInstanceName :: Lens' GetOnPremisesInstance Text
data GetOnPremisesInstanceResponse

-- | <a>GetOnPremisesInstanceResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gopirInstanceInfo</a> <tt>::</tt> <a>Maybe</a>
--   <a>InstanceInfo</a></li>
--   </ul>
getOnPremisesInstanceResponse :: GetOnPremisesInstanceResponse

-- | Information about the on-premises instance.
gopirInstanceInfo :: Lens' GetOnPremisesInstanceResponse (Maybe InstanceInfo)
instance Eq GetOnPremisesInstance
instance Ord GetOnPremisesInstance
instance Read GetOnPremisesInstance
instance Show GetOnPremisesInstance
instance Monoid GetOnPremisesInstance
instance IsString GetOnPremisesInstance
instance Eq GetOnPremisesInstanceResponse
instance Read GetOnPremisesInstanceResponse
instance Show GetOnPremisesInstanceResponse
instance FromJSON GetOnPremisesInstanceResponse
instance AWSRequest GetOnPremisesInstance
instance ToJSON GetOnPremisesInstance
instance ToHeaders GetOnPremisesInstance
instance ToQuery GetOnPremisesInstance
instance ToPath GetOnPremisesInstance


-- | Gets information about an instance as part of a deployment.
--   
--   
--   <a>http://docs.aws.amazon.com/codedeploy/latest/APIReference/API_GetDeploymentInstance.html</a>
module Network.AWS.CodeDeploy.GetDeploymentInstance
data GetDeploymentInstance

-- | <a>GetDeploymentInstance</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gdiDeploymentId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>gdiInstanceId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getDeploymentInstance :: Text -> Text -> GetDeploymentInstance

-- | The unique ID of a deployment.
gdiDeploymentId :: Lens' GetDeploymentInstance Text

-- | The unique ID of an instance in the deployment's deployment group.
gdiInstanceId :: Lens' GetDeploymentInstance Text
data GetDeploymentInstanceResponse

-- | <a>GetDeploymentInstanceResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gdirInstanceSummary</a> <tt>::</tt> <a>Maybe</a>
--   <a>InstanceSummary</a></li>
--   </ul>
getDeploymentInstanceResponse :: GetDeploymentInstanceResponse

-- | Information about the instance.
gdirInstanceSummary :: Lens' GetDeploymentInstanceResponse (Maybe InstanceSummary)
instance Eq GetDeploymentInstance
instance Ord GetDeploymentInstance
instance Read GetDeploymentInstance
instance Show GetDeploymentInstance
instance Eq GetDeploymentInstanceResponse
instance Read GetDeploymentInstanceResponse
instance Show GetDeploymentInstanceResponse
instance FromJSON GetDeploymentInstanceResponse
instance AWSRequest GetDeploymentInstance
instance ToJSON GetDeploymentInstance
instance ToHeaders GetDeploymentInstance
instance ToQuery GetDeploymentInstance
instance ToPath GetDeploymentInstance


-- | Gets information about a deployment group.
--   
--   
--   <a>http://docs.aws.amazon.com/codedeploy/latest/APIReference/API_GetDeploymentGroup.html</a>
module Network.AWS.CodeDeploy.GetDeploymentGroup
data GetDeploymentGroup

-- | <a>GetDeploymentGroup</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gdgApplicationName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>gdgDeploymentGroupName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getDeploymentGroup :: Text -> Text -> GetDeploymentGroup

-- | The name of an existing AWS CodeDeploy application associated with the
--   applicable IAM user or AWS account.
gdgApplicationName :: Lens' GetDeploymentGroup Text

-- | The name of an existing deployment group for the specified
--   application.
gdgDeploymentGroupName :: Lens' GetDeploymentGroup Text
data GetDeploymentGroupResponse

-- | <a>GetDeploymentGroupResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gdgrDeploymentGroupInfo</a> <tt>::</tt> <a>Maybe</a>
--   <a>DeploymentGroupInfo</a></li>
--   </ul>
getDeploymentGroupResponse :: GetDeploymentGroupResponse

-- | Information about the deployment group.
gdgrDeploymentGroupInfo :: Lens' GetDeploymentGroupResponse (Maybe DeploymentGroupInfo)
instance Eq GetDeploymentGroup
instance Ord GetDeploymentGroup
instance Read GetDeploymentGroup
instance Show GetDeploymentGroup
instance Eq GetDeploymentGroupResponse
instance Read GetDeploymentGroupResponse
instance Show GetDeploymentGroupResponse
instance FromJSON GetDeploymentGroupResponse
instance AWSRequest GetDeploymentGroup
instance ToJSON GetDeploymentGroup
instance ToHeaders GetDeploymentGroup
instance ToQuery GetDeploymentGroup
instance ToPath GetDeploymentGroup


-- | Gets information about a deployment configuration.
--   
--   
--   <a>http://docs.aws.amazon.com/codedeploy/latest/APIReference/API_GetDeploymentConfig.html</a>
module Network.AWS.CodeDeploy.GetDeploymentConfig
data GetDeploymentConfig

-- | <a>GetDeploymentConfig</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gdcDeploymentConfigName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getDeploymentConfig :: Text -> GetDeploymentConfig

-- | The name of an existing deployment configuration associated with the
--   applicable IAM user or AWS account.
gdcDeploymentConfigName :: Lens' GetDeploymentConfig Text
data GetDeploymentConfigResponse

-- | <a>GetDeploymentConfigResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gdcrDeploymentConfigInfo</a> <tt>::</tt> <a>Maybe</a>
--   <a>DeploymentConfigInfo</a></li>
--   </ul>
getDeploymentConfigResponse :: GetDeploymentConfigResponse

-- | Information about the deployment configuration.
gdcrDeploymentConfigInfo :: Lens' GetDeploymentConfigResponse (Maybe DeploymentConfigInfo)
instance Eq GetDeploymentConfig
instance Ord GetDeploymentConfig
instance Read GetDeploymentConfig
instance Show GetDeploymentConfig
instance Monoid GetDeploymentConfig
instance IsString GetDeploymentConfig
instance Eq GetDeploymentConfigResponse
instance Read GetDeploymentConfigResponse
instance Show GetDeploymentConfigResponse
instance FromJSON GetDeploymentConfigResponse
instance AWSRequest GetDeploymentConfig
instance ToJSON GetDeploymentConfig
instance ToHeaders GetDeploymentConfig
instance ToQuery GetDeploymentConfig
instance ToPath GetDeploymentConfig


-- | Gets information about a deployment.
--   
--   
--   <a>http://docs.aws.amazon.com/codedeploy/latest/APIReference/API_GetDeployment.html</a>
module Network.AWS.CodeDeploy.GetDeployment
data GetDeployment

-- | <a>GetDeployment</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gdDeploymentId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getDeployment :: Text -> GetDeployment

-- | An existing deployment ID associated with the applicable IAM user or
--   AWS account.
gdDeploymentId :: Lens' GetDeployment Text
data GetDeploymentResponse

-- | <a>GetDeploymentResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gdrDeploymentInfo</a> <tt>::</tt> <a>Maybe</a>
--   <a>DeploymentInfo</a></li>
--   </ul>
getDeploymentResponse :: GetDeploymentResponse

-- | Information about the deployment.
gdrDeploymentInfo :: Lens' GetDeploymentResponse (Maybe DeploymentInfo)
instance Eq GetDeployment
instance Ord GetDeployment
instance Read GetDeployment
instance Show GetDeployment
instance Monoid GetDeployment
instance IsString GetDeployment
instance Eq GetDeploymentResponse
instance Read GetDeploymentResponse
instance Show GetDeploymentResponse
instance FromJSON GetDeploymentResponse
instance AWSRequest GetDeployment
instance ToJSON GetDeployment
instance ToHeaders GetDeployment
instance ToQuery GetDeployment
instance ToPath GetDeployment


-- | Gets information about an application revision.
--   
--   
--   <a>http://docs.aws.amazon.com/codedeploy/latest/APIReference/API_GetApplicationRevision.html</a>
module Network.AWS.CodeDeploy.GetApplicationRevision
data GetApplicationRevision

-- | <a>GetApplicationRevision</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>garApplicationName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>garRevision</a> <tt>::</tt> <a>RevisionLocation</a></li>
--   </ul>
getApplicationRevision :: Text -> RevisionLocation -> GetApplicationRevision

-- | The name of the application that corresponds to the revision.
garApplicationName :: Lens' GetApplicationRevision Text

-- | Information about the application revision to get, including the
--   revision's type and its location.
garRevision :: Lens' GetApplicationRevision RevisionLocation
data GetApplicationRevisionResponse

-- | <a>GetApplicationRevisionResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>garrApplicationName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>garrRevision</a> <tt>::</tt> <a>Maybe</a>
--   <a>RevisionLocation</a></li>
--   <li><a>garrRevisionInfo</a> <tt>::</tt> <a>Maybe</a>
--   <a>GenericRevisionInfo</a></li>
--   </ul>
getApplicationRevisionResponse :: GetApplicationRevisionResponse

-- | The name of the application that corresponds to the revision.
garrApplicationName :: Lens' GetApplicationRevisionResponse (Maybe Text)

-- | Additional information about the revision, including the revision's
--   type and its location.
garrRevision :: Lens' GetApplicationRevisionResponse (Maybe RevisionLocation)

-- | General information about the revision.
garrRevisionInfo :: Lens' GetApplicationRevisionResponse (Maybe GenericRevisionInfo)
instance Eq GetApplicationRevision
instance Read GetApplicationRevision
instance Show GetApplicationRevision
instance Eq GetApplicationRevisionResponse
instance Read GetApplicationRevisionResponse
instance Show GetApplicationRevisionResponse
instance FromJSON GetApplicationRevisionResponse
instance AWSRequest GetApplicationRevision
instance ToJSON GetApplicationRevision
instance ToHeaders GetApplicationRevision
instance ToQuery GetApplicationRevision
instance ToPath GetApplicationRevision


-- | Gets information about an application.
--   
--   
--   <a>http://docs.aws.amazon.com/codedeploy/latest/APIReference/API_GetApplication.html</a>
module Network.AWS.CodeDeploy.GetApplication
data GetApplication

-- | <a>GetApplication</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gaApplicationName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getApplication :: Text -> GetApplication

-- | The name of an existing AWS CodeDeploy application associated with the
--   applicable IAM user or AWS account.
gaApplicationName :: Lens' GetApplication Text
data GetApplicationResponse

-- | <a>GetApplicationResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>garApplication</a> <tt>::</tt> <a>Maybe</a>
--   <a>ApplicationInfo</a></li>
--   </ul>
getApplicationResponse :: GetApplicationResponse

-- | Information about the application.
garApplication :: Lens' GetApplicationResponse (Maybe ApplicationInfo)
instance Eq GetApplication
instance Ord GetApplication
instance Read GetApplication
instance Show GetApplication
instance Monoid GetApplication
instance IsString GetApplication
instance Eq GetApplicationResponse
instance Read GetApplicationResponse
instance Show GetApplicationResponse
instance FromJSON GetApplicationResponse
instance AWSRequest GetApplication
instance ToJSON GetApplication
instance ToHeaders GetApplication
instance ToQuery GetApplication
instance ToPath GetApplication


-- | Deregisters an on-premises instance.
--   
--   
--   <a>http://docs.aws.amazon.com/codedeploy/latest/APIReference/API_DeregisterOnPremisesInstance.html</a>
module Network.AWS.CodeDeploy.DeregisterOnPremisesInstance
data DeregisterOnPremisesInstance

-- | <a>DeregisterOnPremisesInstance</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dopiInstanceName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deregisterOnPremisesInstance :: Text -> DeregisterOnPremisesInstance

-- | The name of the on-premises instance to deregister.
dopiInstanceName :: Lens' DeregisterOnPremisesInstance Text
data DeregisterOnPremisesInstanceResponse

-- | <a>DeregisterOnPremisesInstanceResponse</a> constructor.
deregisterOnPremisesInstanceResponse :: DeregisterOnPremisesInstanceResponse
instance Eq DeregisterOnPremisesInstance
instance Ord DeregisterOnPremisesInstance
instance Read DeregisterOnPremisesInstance
instance Show DeregisterOnPremisesInstance
instance Monoid DeregisterOnPremisesInstance
instance IsString DeregisterOnPremisesInstance
instance Eq DeregisterOnPremisesInstanceResponse
instance Ord DeregisterOnPremisesInstanceResponse
instance Read DeregisterOnPremisesInstanceResponse
instance Show DeregisterOnPremisesInstanceResponse
instance Generic DeregisterOnPremisesInstanceResponse
instance Datatype D1DeregisterOnPremisesInstanceResponse
instance Constructor C1_0DeregisterOnPremisesInstanceResponse
instance AWSRequest DeregisterOnPremisesInstance
instance ToJSON DeregisterOnPremisesInstance
instance ToHeaders DeregisterOnPremisesInstance
instance ToQuery DeregisterOnPremisesInstance
instance ToPath DeregisterOnPremisesInstance


-- | Deletes a deployment group.
--   
--   
--   <a>http://docs.aws.amazon.com/codedeploy/latest/APIReference/API_DeleteDeploymentGroup.html</a>
module Network.AWS.CodeDeploy.DeleteDeploymentGroup
data DeleteDeploymentGroup

-- | <a>DeleteDeploymentGroup</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ddgApplicationName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ddgDeploymentGroupName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteDeploymentGroup :: Text -> Text -> DeleteDeploymentGroup

-- | The name of an existing AWS CodeDeploy application associated with the
--   applicable IAM user or AWS account.
ddgApplicationName :: Lens' DeleteDeploymentGroup Text

-- | The name of an existing deployment group for the specified
--   application.
ddgDeploymentGroupName :: Lens' DeleteDeploymentGroup Text
data DeleteDeploymentGroupResponse

-- | <a>DeleteDeploymentGroupResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ddgrHooksNotCleanedUp</a> <tt>::</tt>
--   [<a>AutoScalingGroup</a>]</li>
--   </ul>
deleteDeploymentGroupResponse :: DeleteDeploymentGroupResponse

-- | If the output contains no data, and the corresponding deployment group
--   contained at least one Auto Scaling group, AWS CodeDeploy successfully
--   removed all corresponding Auto Scaling lifecycle event hooks from the
--   Amazon EC2 instances in the Auto Scaling. If the output does contain
--   data, AWS CodeDeploy could not remove some Auto Scaling lifecycle
--   event hooks from the Amazon EC2 instances in the Auto Scaling group.
ddgrHooksNotCleanedUp :: Lens' DeleteDeploymentGroupResponse [AutoScalingGroup]
instance Eq DeleteDeploymentGroup
instance Ord DeleteDeploymentGroup
instance Read DeleteDeploymentGroup
instance Show DeleteDeploymentGroup
instance Eq DeleteDeploymentGroupResponse
instance Read DeleteDeploymentGroupResponse
instance Show DeleteDeploymentGroupResponse
instance Monoid DeleteDeploymentGroupResponse
instance Semigroup DeleteDeploymentGroupResponse
instance FromJSON DeleteDeploymentGroupResponse
instance AWSRequest DeleteDeploymentGroup
instance ToJSON DeleteDeploymentGroup
instance ToHeaders DeleteDeploymentGroup
instance ToQuery DeleteDeploymentGroup
instance ToPath DeleteDeploymentGroup
instance IsList DeleteDeploymentGroupResponse


-- | Deletes a deployment configuration.
--   
--   A deployment configuration cannot be deleted if it is currently in
--   use. Also, predefined configurations cannot be deleted.
--   
--   
--   <a>http://docs.aws.amazon.com/codedeploy/latest/APIReference/API_DeleteDeploymentConfig.html</a>
module Network.AWS.CodeDeploy.DeleteDeploymentConfig
data DeleteDeploymentConfig

-- | <a>DeleteDeploymentConfig</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ddcDeploymentConfigName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteDeploymentConfig :: Text -> DeleteDeploymentConfig

-- | The name of an existing deployment configuration associated with the
--   applicable IAM user or AWS account.
ddcDeploymentConfigName :: Lens' DeleteDeploymentConfig Text
data DeleteDeploymentConfigResponse

-- | <a>DeleteDeploymentConfigResponse</a> constructor.
deleteDeploymentConfigResponse :: DeleteDeploymentConfigResponse
instance Eq DeleteDeploymentConfig
instance Ord DeleteDeploymentConfig
instance Read DeleteDeploymentConfig
instance Show DeleteDeploymentConfig
instance Monoid DeleteDeploymentConfig
instance IsString DeleteDeploymentConfig
instance Eq DeleteDeploymentConfigResponse
instance Ord DeleteDeploymentConfigResponse
instance Read DeleteDeploymentConfigResponse
instance Show DeleteDeploymentConfigResponse
instance Generic DeleteDeploymentConfigResponse
instance Datatype D1DeleteDeploymentConfigResponse
instance Constructor C1_0DeleteDeploymentConfigResponse
instance AWSRequest DeleteDeploymentConfig
instance ToJSON DeleteDeploymentConfig
instance ToHeaders DeleteDeploymentConfig
instance ToQuery DeleteDeploymentConfig
instance ToPath DeleteDeploymentConfig


-- | Deletes an application.
--   
--   
--   <a>http://docs.aws.amazon.com/codedeploy/latest/APIReference/API_DeleteApplication.html</a>
module Network.AWS.CodeDeploy.DeleteApplication
data DeleteApplication

-- | <a>DeleteApplication</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>daApplicationName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteApplication :: Text -> DeleteApplication

-- | The name of an existing AWS CodeDeploy application associated with the
--   applicable IAM user or AWS account.
daApplicationName :: Lens' DeleteApplication Text
data DeleteApplicationResponse

-- | <a>DeleteApplicationResponse</a> constructor.
deleteApplicationResponse :: DeleteApplicationResponse
instance Eq DeleteApplication
instance Ord DeleteApplication
instance Read DeleteApplication
instance Show DeleteApplication
instance Monoid DeleteApplication
instance IsString DeleteApplication
instance Eq DeleteApplicationResponse
instance Ord DeleteApplicationResponse
instance Read DeleteApplicationResponse
instance Show DeleteApplicationResponse
instance Generic DeleteApplicationResponse
instance Datatype D1DeleteApplicationResponse
instance Constructor C1_0DeleteApplicationResponse
instance AWSRequest DeleteApplication
instance ToJSON DeleteApplication
instance ToHeaders DeleteApplication
instance ToQuery DeleteApplication
instance ToPath DeleteApplication


-- | Creates a new deployment group for application revisions to be
--   deployed to.
--   
--   
--   <a>http://docs.aws.amazon.com/codedeploy/latest/APIReference/API_CreateDeploymentGroup.html</a>
module Network.AWS.CodeDeploy.CreateDeploymentGroup
data CreateDeploymentGroup

-- | <a>CreateDeploymentGroup</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cdgApplicationName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cdgAutoScalingGroups</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>cdgDeploymentConfigName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cdgDeploymentGroupName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cdgEc2TagFilters</a> <tt>::</tt> [<a>EC2TagFilter</a>]</li>
--   <li><a>cdgOnPremisesInstanceTagFilters</a> <tt>::</tt>
--   [<a>TagFilter</a>]</li>
--   <li><a>cdgServiceRoleArn</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createDeploymentGroup :: Text -> Text -> Text -> CreateDeploymentGroup

-- | The name of an existing AWS CodeDeploy application associated with the
--   applicable IAM user or AWS account.
cdgApplicationName :: Lens' CreateDeploymentGroup Text

-- | A list of associated Auto Scaling groups.
cdgAutoScalingGroups :: Lens' CreateDeploymentGroup [Text]

-- | If specified, the deployment configuration name must be one of the
--   predefined values, or it can be a custom deployment configuration:
--   
--   CodeDeployDefault.AllAtOnce deploys an application revision to up to
--   all of the instances at once. The overall deployment succeeds if the
--   application revision deploys to at least one of the instances. The
--   overall deployment fails after the application revision fails to
--   deploy to all of the instances. For example, for 9 instances, deploy
--   to up to all 9 instances at once. The overall deployment succeeds if
--   any of the 9 instances is successfully deployed to, and it fails if
--   all 9 instances fail to be deployed to. CodeDeployDefault.HalfAtATime
--   deploys to up to half of the instances at a time (with fractions
--   rounded down). The overall deployment succeeds if the application
--   revision deploys to at least half of the instances (with fractions
--   rounded up); otherwise, the deployment fails. For example, for 9
--   instances, deploy to up to 4 instances at a time. The overall
--   deployment succeeds if 5 or more instances are successfully deployed
--   to; otherwise, the deployment fails. Note that the deployment may
--   successfully deploy to some instances, even if the overall deployment
--   fails. CodeDeployDefault.OneAtATime deploys the application revision
--   to only one of the instances at a time. The overall deployment
--   succeeds if the application revision deploys to all of the instances.
--   The overall deployment fails after the application revision first
--   fails to deploy to any one instances. For example, for 9 instances,
--   deploy to one instance at a time. The overall deployment succeeds if
--   all 9 instances are successfully deployed to, and it fails if any of
--   one of the 9 instances fail to be deployed to. Note that the
--   deployment may successfully deploy to some instances, even if the
--   overall deployment fails. This is the default deployment configuration
--   if a configuration isn't specified for either the deployment or the
--   deployment group. To create a custom deployment configuration, call
--   the create deployment configuration operation.
cdgDeploymentConfigName :: Lens' CreateDeploymentGroup (Maybe Text)

-- | The name of an existing deployment group for the specified
--   application.
cdgDeploymentGroupName :: Lens' CreateDeploymentGroup Text

-- | The Amazon EC2 tags to filter on.
cdgEc2TagFilters :: Lens' CreateDeploymentGroup [EC2TagFilter]

-- | The on-premises instance tags to filter on.
cdgOnPremisesInstanceTagFilters :: Lens' CreateDeploymentGroup [TagFilter]

-- | A service role ARN that allows AWS CodeDeploy to act on the user's
--   behalf when interacting with AWS services.
cdgServiceRoleArn :: Lens' CreateDeploymentGroup Text
data CreateDeploymentGroupResponse

-- | <a>CreateDeploymentGroupResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cdgrDeploymentGroupId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
createDeploymentGroupResponse :: CreateDeploymentGroupResponse

-- | A unique deployment group ID.
cdgrDeploymentGroupId :: Lens' CreateDeploymentGroupResponse (Maybe Text)
instance Eq CreateDeploymentGroup
instance Read CreateDeploymentGroup
instance Show CreateDeploymentGroup
instance Eq CreateDeploymentGroupResponse
instance Ord CreateDeploymentGroupResponse
instance Read CreateDeploymentGroupResponse
instance Show CreateDeploymentGroupResponse
instance Monoid CreateDeploymentGroupResponse
instance FromJSON CreateDeploymentGroupResponse
instance AWSRequest CreateDeploymentGroup
instance ToJSON CreateDeploymentGroup
instance ToHeaders CreateDeploymentGroup
instance ToQuery CreateDeploymentGroup
instance ToPath CreateDeploymentGroup


-- | Creates a new deployment configuration.
--   
--   
--   <a>http://docs.aws.amazon.com/codedeploy/latest/APIReference/API_CreateDeploymentConfig.html</a>
module Network.AWS.CodeDeploy.CreateDeploymentConfig
data CreateDeploymentConfig

-- | <a>CreateDeploymentConfig</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cdcDeploymentConfigName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cdcMinimumHealthyHosts</a> <tt>::</tt> <a>Maybe</a>
--   <a>MinimumHealthyHosts</a></li>
--   </ul>
createDeploymentConfig :: Text -> CreateDeploymentConfig

-- | The name of the deployment configuration to create.
cdcDeploymentConfigName :: Lens' CreateDeploymentConfig Text

-- | The minimum number of healthy instances that should be available at
--   any time during the deployment. There are two parameters expected in
--   the input: type and value.
--   
--   The type parameter takes either of the following values:
--   
--   HOST_COUNT: The value parameter represents the minimum number of
--   healthy instances, as an absolute value. FLEET_PERCENT: The value
--   parameter represents the minimum number of healthy instances, as a
--   percentage of the total number of instances in the deployment. If you
--   specify FLEET_PERCENT, then at the start of the deployment AWS
--   CodeDeploy converts the percentage to the equivalent number of
--   instances and rounds fractional instances up. The value parameter
--   takes an integer.
--   
--   For example, to set a minimum of 95% healthy instances, specify a type
--   of FLEET_PERCENT and a value of 95.
cdcMinimumHealthyHosts :: Lens' CreateDeploymentConfig (Maybe MinimumHealthyHosts)
data CreateDeploymentConfigResponse

-- | <a>CreateDeploymentConfigResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cdcrDeploymentConfigId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
createDeploymentConfigResponse :: CreateDeploymentConfigResponse

-- | A unique deployment configuration ID.
cdcrDeploymentConfigId :: Lens' CreateDeploymentConfigResponse (Maybe Text)
instance Eq CreateDeploymentConfig
instance Read CreateDeploymentConfig
instance Show CreateDeploymentConfig
instance Eq CreateDeploymentConfigResponse
instance Ord CreateDeploymentConfigResponse
instance Read CreateDeploymentConfigResponse
instance Show CreateDeploymentConfigResponse
instance Monoid CreateDeploymentConfigResponse
instance FromJSON CreateDeploymentConfigResponse
instance AWSRequest CreateDeploymentConfig
instance ToJSON CreateDeploymentConfig
instance ToHeaders CreateDeploymentConfig
instance ToQuery CreateDeploymentConfig
instance ToPath CreateDeploymentConfig


-- | Deploys an application revision through the specified deployment
--   group.
--   
--   
--   <a>http://docs.aws.amazon.com/codedeploy/latest/APIReference/API_CreateDeployment.html</a>
module Network.AWS.CodeDeploy.CreateDeployment
data CreateDeployment

-- | <a>CreateDeployment</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cdApplicationName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cdDeploymentConfigName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cdDeploymentGroupName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cdDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cdIgnoreApplicationStopFailures</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>cdRevision</a> <tt>::</tt> <a>Maybe</a>
--   <a>RevisionLocation</a></li>
--   </ul>
createDeployment :: Text -> CreateDeployment

-- | The name of an existing AWS CodeDeploy application associated with the
--   applicable IAM user or AWS account.
cdApplicationName :: Lens' CreateDeployment Text

-- | The name of an existing deployment configuration associated with the
--   applicable IAM user or AWS account.
--   
--   If not specified, the value configured in the deployment group will be
--   used as the default. If the deployment group does not have a
--   deployment configuration associated with it, then
--   CodeDeployDefault.OneAtATime will be used by default.
cdDeploymentConfigName :: Lens' CreateDeployment (Maybe Text)

-- | The deployment group's name.
cdDeploymentGroupName :: Lens' CreateDeployment (Maybe Text)

-- | A comment about the deployment.
cdDescription :: Lens' CreateDeployment (Maybe Text)

-- | If set to true, then if the deployment causes the ApplicationStop
--   deployment lifecycle event to fail to a specific instance, the
--   deployment will not be considered to have failed to that instance at
--   that point and will continue on to the BeforeInstall deployment
--   lifecycle event.
--   
--   If set to false or not specified, then if the deployment causes the
--   ApplicationStop deployment lifecycle event to fail to a specific
--   instance, the deployment will stop to that instance, and the
--   deployment to that instance will be considered to have failed.
cdIgnoreApplicationStopFailures :: Lens' CreateDeployment (Maybe Bool)

-- | The type of revision to deploy, along with information about the
--   revision's location.
cdRevision :: Lens' CreateDeployment (Maybe RevisionLocation)
data CreateDeploymentResponse

-- | <a>CreateDeploymentResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cdrDeploymentId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
createDeploymentResponse :: CreateDeploymentResponse

-- | A unique deployment ID.
cdrDeploymentId :: Lens' CreateDeploymentResponse (Maybe Text)
instance Eq CreateDeployment
instance Read CreateDeployment
instance Show CreateDeployment
instance Eq CreateDeploymentResponse
instance Ord CreateDeploymentResponse
instance Read CreateDeploymentResponse
instance Show CreateDeploymentResponse
instance Monoid CreateDeploymentResponse
instance FromJSON CreateDeploymentResponse
instance AWSRequest CreateDeployment
instance ToJSON CreateDeployment
instance ToHeaders CreateDeployment
instance ToQuery CreateDeployment
instance ToPath CreateDeployment


-- | Creates a new application.
--   
--   
--   <a>http://docs.aws.amazon.com/codedeploy/latest/APIReference/API_CreateApplication.html</a>
module Network.AWS.CodeDeploy.CreateApplication
data CreateApplication

-- | <a>CreateApplication</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>caApplicationName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createApplication :: Text -> CreateApplication

-- | The name of the application. This name must be unique with the
--   applicable IAM user or AWS account.
caApplicationName :: Lens' CreateApplication Text
data CreateApplicationResponse

-- | <a>CreateApplicationResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>carApplicationId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
createApplicationResponse :: CreateApplicationResponse

-- | A unique application ID.
carApplicationId :: Lens' CreateApplicationResponse (Maybe Text)
instance Eq CreateApplication
instance Ord CreateApplication
instance Read CreateApplication
instance Show CreateApplication
instance Monoid CreateApplication
instance IsString CreateApplication
instance Eq CreateApplicationResponse
instance Ord CreateApplicationResponse
instance Read CreateApplicationResponse
instance Show CreateApplicationResponse
instance Monoid CreateApplicationResponse
instance FromJSON CreateApplicationResponse
instance AWSRequest CreateApplication
instance ToJSON CreateApplication
instance ToHeaders CreateApplication
instance ToQuery CreateApplication
instance ToPath CreateApplication


-- | Gets information about one or more on-premises instances.
--   
--   
--   <a>http://docs.aws.amazon.com/codedeploy/latest/APIReference/API_BatchGetOnPremisesInstances.html</a>
module Network.AWS.CodeDeploy.BatchGetOnPremisesInstances
data BatchGetOnPremisesInstances

-- | <a>BatchGetOnPremisesInstances</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>bgopiInstanceNames</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
batchGetOnPremisesInstances :: BatchGetOnPremisesInstances

-- | The names of the on-premises instances to get information about.
bgopiInstanceNames :: Lens' BatchGetOnPremisesInstances [Text]
data BatchGetOnPremisesInstancesResponse

-- | <a>BatchGetOnPremisesInstancesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>bgopirInstanceInfos</a> <tt>::</tt> [<a>InstanceInfo</a>]</li>
--   </ul>
batchGetOnPremisesInstancesResponse :: BatchGetOnPremisesInstancesResponse

-- | Information about the on-premises instances.
bgopirInstanceInfos :: Lens' BatchGetOnPremisesInstancesResponse [InstanceInfo]
instance Eq BatchGetOnPremisesInstances
instance Ord BatchGetOnPremisesInstances
instance Read BatchGetOnPremisesInstances
instance Show BatchGetOnPremisesInstances
instance Monoid BatchGetOnPremisesInstances
instance Semigroup BatchGetOnPremisesInstances
instance Eq BatchGetOnPremisesInstancesResponse
instance Read BatchGetOnPremisesInstancesResponse
instance Show BatchGetOnPremisesInstancesResponse
instance Monoid BatchGetOnPremisesInstancesResponse
instance Semigroup BatchGetOnPremisesInstancesResponse
instance FromJSON BatchGetOnPremisesInstancesResponse
instance AWSRequest BatchGetOnPremisesInstances
instance ToJSON BatchGetOnPremisesInstances
instance ToHeaders BatchGetOnPremisesInstances
instance ToQuery BatchGetOnPremisesInstances
instance ToPath BatchGetOnPremisesInstances
instance IsList BatchGetOnPremisesInstancesResponse
instance IsList BatchGetOnPremisesInstances


-- | Gets information about one or more deployments.
--   
--   
--   <a>http://docs.aws.amazon.com/codedeploy/latest/APIReference/API_BatchGetDeployments.html</a>
module Network.AWS.CodeDeploy.BatchGetDeployments
data BatchGetDeployments

-- | <a>BatchGetDeployments</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>bgdDeploymentIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
batchGetDeployments :: BatchGetDeployments

-- | A list of deployment IDs, with multiple deployment IDs separated by
--   spaces.
bgdDeploymentIds :: Lens' BatchGetDeployments [Text]
data BatchGetDeploymentsResponse

-- | <a>BatchGetDeploymentsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>bgdrDeploymentsInfo</a> <tt>::</tt>
--   [<a>DeploymentInfo</a>]</li>
--   </ul>
batchGetDeploymentsResponse :: BatchGetDeploymentsResponse

-- | Information about the deployments.
bgdrDeploymentsInfo :: Lens' BatchGetDeploymentsResponse [DeploymentInfo]
instance Eq BatchGetDeployments
instance Ord BatchGetDeployments
instance Read BatchGetDeployments
instance Show BatchGetDeployments
instance Monoid BatchGetDeployments
instance Semigroup BatchGetDeployments
instance Eq BatchGetDeploymentsResponse
instance Read BatchGetDeploymentsResponse
instance Show BatchGetDeploymentsResponse
instance Monoid BatchGetDeploymentsResponse
instance Semigroup BatchGetDeploymentsResponse
instance FromJSON BatchGetDeploymentsResponse
instance AWSRequest BatchGetDeployments
instance ToJSON BatchGetDeployments
instance ToHeaders BatchGetDeployments
instance ToQuery BatchGetDeployments
instance ToPath BatchGetDeployments
instance IsList BatchGetDeploymentsResponse
instance IsList BatchGetDeployments


-- | Gets information about one or more applications.
--   
--   
--   <a>http://docs.aws.amazon.com/codedeploy/latest/APIReference/API_BatchGetApplications.html</a>
module Network.AWS.CodeDeploy.BatchGetApplications
data BatchGetApplications

-- | <a>BatchGetApplications</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>bgaApplicationNames</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
batchGetApplications :: BatchGetApplications

-- | A list of application names, with multiple application names separated
--   by spaces.
bgaApplicationNames :: Lens' BatchGetApplications [Text]
data BatchGetApplicationsResponse

-- | <a>BatchGetApplicationsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>bgarApplicationsInfo</a> <tt>::</tt>
--   [<a>ApplicationInfo</a>]</li>
--   </ul>
batchGetApplicationsResponse :: BatchGetApplicationsResponse

-- | Information about the applications.
bgarApplicationsInfo :: Lens' BatchGetApplicationsResponse [ApplicationInfo]
instance Eq BatchGetApplications
instance Ord BatchGetApplications
instance Read BatchGetApplications
instance Show BatchGetApplications
instance Monoid BatchGetApplications
instance Semigroup BatchGetApplications
instance Eq BatchGetApplicationsResponse
instance Read BatchGetApplicationsResponse
instance Show BatchGetApplicationsResponse
instance Monoid BatchGetApplicationsResponse
instance Semigroup BatchGetApplicationsResponse
instance FromJSON BatchGetApplicationsResponse
instance AWSRequest BatchGetApplications
instance ToJSON BatchGetApplications
instance ToHeaders BatchGetApplications
instance ToQuery BatchGetApplications
instance ToPath BatchGetApplications
instance IsList BatchGetApplicationsResponse
instance IsList BatchGetApplications


-- | Adds tags to on-premises instances.
--   
--   
--   <a>http://docs.aws.amazon.com/codedeploy/latest/APIReference/API_AddTagsToOnPremisesInstances.html</a>
module Network.AWS.CodeDeploy.AddTagsToOnPremisesInstances
data AddTagsToOnPremisesInstances

-- | <a>AddTagsToOnPremisesInstances</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>attopiInstanceNames</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>attopiTags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   </ul>
addTagsToOnPremisesInstances :: AddTagsToOnPremisesInstances

-- | The names of the on-premises instances to add tags to.
attopiInstanceNames :: Lens' AddTagsToOnPremisesInstances [Text]

-- | The tag key-value pairs to add to the on-premises instances.
--   
--   Keys and values are both required. Keys cannot be nulls or empty
--   strings. Value-only tags are not allowed.
attopiTags :: Lens' AddTagsToOnPremisesInstances [Tag]
data AddTagsToOnPremisesInstancesResponse

-- | <a>AddTagsToOnPremisesInstancesResponse</a> constructor.
addTagsToOnPremisesInstancesResponse :: AddTagsToOnPremisesInstancesResponse
instance Eq AddTagsToOnPremisesInstances
instance Read AddTagsToOnPremisesInstances
instance Show AddTagsToOnPremisesInstances
instance Eq AddTagsToOnPremisesInstancesResponse
instance Ord AddTagsToOnPremisesInstancesResponse
instance Read AddTagsToOnPremisesInstancesResponse
instance Show AddTagsToOnPremisesInstancesResponse
instance Generic AddTagsToOnPremisesInstancesResponse
instance Datatype D1AddTagsToOnPremisesInstancesResponse
instance Constructor C1_0AddTagsToOnPremisesInstancesResponse
instance AWSRequest AddTagsToOnPremisesInstances
instance ToJSON AddTagsToOnPremisesInstances
instance ToHeaders AddTagsToOnPremisesInstances
instance ToQuery AddTagsToOnPremisesInstances
instance ToPath AddTagsToOnPremisesInstances


-- | Amazon CodeDeploy is a service that automates code deployments to
--   Amazon EC2 instances. Amazon CodeDeploy makes it easier for you to
--   rapidly release new features, helps you avoid downtime during
--   deployment, and handles the complexity of updating your applications.
--   You can use Amazon CodeDeploy to automate deployments, eliminating the
--   need for error-prone manual operations, and the service scales with
--   your infrastructure so you can easily deploy to one EC2 instance or
--   thousands.
module Network.AWS.CodeDeploy
