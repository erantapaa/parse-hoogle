-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Geek blog engine
--   
--   A dynamic blog engine, customizable with standard web technology, i.e.
--   HTML, CSS and Javascript (JSON)
@package geek
@version 1.1.0.1

module Web.Geek.DemoMiddlewareStack
debug :: Middleware
demo_middleware_stack :: [Middleware]

module Web.Geek.Type
type Meta = Map Text Text
newtype HTMLText
HTMLText :: Text -> HTMLText
unHTMLText :: HTMLText -> Text
newtype URIEscapedText
URIEscapedText :: Text -> URIEscapedText
unURIEscapedText :: URIEscapedText -> Text
data Post
Post :: Text -> FilePath -> Meta -> Maybe UTCTime -> HTMLText -> Text -> URIEscapedText -> [Text] -> Post
title :: Post -> Text
path :: Post -> FilePath
meta :: Post -> Meta
date :: Post -> Maybe UTCTime
body :: Post -> HTMLText
raw_body :: Post -> Text
link :: Post -> URIEscapedText
tags :: Post -> [Text]
__tags :: :-> Post [Text]
__link :: :-> Post URIEscapedText
__raw_body :: :-> Post Text
__body :: :-> Post HTMLText
__date :: :-> Post (Maybe UTCTime)
__meta :: :-> Post Meta
__path :: :-> Post FilePath
__title :: :-> Post Text
data MarkupEngine
MarkupEngine :: Text -> [Text] -> (Text -> HTMLText) -> MarkupEngine
markup_engine_name :: MarkupEngine -> Text
extensions :: MarkupEngine -> [Text]
transformer :: MarkupEngine -> Text -> HTMLText
data Config
Config :: FilePath -> FilePath -> String -> [Text] -> Text -> Text -> Int -> Map Text [Text] -> Integer -> Integer -> Text -> Bool -> Text -> Text -> Text -> Text -> Config
blog_directory :: Config -> FilePath
post_directory :: Config -> FilePath
post_date_format :: Config -> String
markup_engine_names :: Config -> [Text]
meta_tag_keyword :: Config -> Text
meta_date_keyword :: Config -> Text
server_port :: Config -> Int
static_serve :: Config -> Map Text [Text]
maximum_number_of_posts_per_page :: Config -> Integer
number_of_posts_per_feed :: Config -> Integer
index_file_path :: Config -> Text
full_text_search :: Config -> Bool
rss_site_title :: Config -> Text
rss_site_description :: Config -> Text
rss_site_link :: Config -> Text
rss_site_root_prefix :: Config -> Text
__rss_site_root_prefix :: :-> Config Text
__rss_site_link :: :-> Config Text
__rss_site_description :: :-> Config Text
__rss_site_title :: :-> Config Text
__full_text_search :: :-> Config Bool
__index_file_path :: :-> Config Text
__number_of_posts_per_feed :: :-> Config Integer
__maximum_number_of_posts_per_page :: :-> Config Integer
__static_serve :: :-> Config (Map Text [Text])
__server_port :: :-> Config Int
__meta_date_keyword :: :-> Config Text
__meta_tag_keyword :: :-> Config Text
__markup_engine_names :: :-> Config [Text]
__post_date_format :: :-> Config String
__post_directory :: :-> Config FilePath
__blog_directory :: :-> Config FilePath
pretty_print_config :: Config -> Text
data Runtime
Runtime :: IORef [Post] -> [MarkupEngine] -> Config -> IORef (Map Text [Int]) -> Runtime
posts_ref :: Runtime -> IORef [Post]
markup_engines :: Runtime -> [MarkupEngine]
config :: Runtime -> Config
full_text_search_map_ref :: Runtime -> IORef (Map Text [Int])
data TagCount
TagCount :: Text -> Integer -> TagCount
tag_name :: TagCount -> Text
tag_count :: TagCount -> Integer
instance Default TagCount
instance Typeable TagCount
instance Show TagCount
instance Data TagCount
instance Default Runtime
instance Default Config
instance Typeable Config
instance Show Config
instance Data Config
instance Show MarkupEngine
instance Default MarkupEngine
instance Default Post
instance Typeable HTMLText
instance Typeable URIEscapedText
instance Typeable Post
instance Show HTMLText
instance Eq HTMLText
instance Data HTMLText
instance Show URIEscapedText
instance Eq URIEscapedText
instance Data URIEscapedText
instance Show Post
instance Eq Post
instance Data Post
instance Default URIEscapedText
instance IsString URIEscapedText
instance Default HTMLText
instance IsString HTMLText

module Web.Geek.RSS
rss :: Config -> [Post] -> Maybe Text -> ByteString

module Web.Geek.DefaultConfig
default_config :: Config
main :: IO ()

module Web.Geek.Config
default_config_string :: String
parse_config :: ByteString -> Maybe Config
read_config_from_path :: FilePath -> IO (Maybe Config)
geek_usage :: String
get_config_from_args :: IO Config
post_date_length :: String -> Integer

module Web.Geek.Post
post_tags :: Text -> Post -> [Text]
post_link :: Post -> URIEscapedText
parse_title_and_date_from_path :: String -> FilePath -> (Text, Maybe UTCTime)
markup :: [MarkupEngine] -> FilePath -> Text -> HTMLText
parse_meta :: Text -> (Meta, Text)

module Web.Geek.Runtime
build_markup_engines :: [Text] -> [MarkupEngine] -> [MarkupEngine]
get_post_from_path :: Config -> [MarkupEngine] -> FilePath -> IO Post
glob_dir :: String -> FilePath -> IO [String]
get_posts :: Config -> [MarkupEngine] -> IO [Post]
monitor_posts :: Config -> [MarkupEngine] -> Chan Event -> IORef [Post] -> IORef (Map Text [Int]) -> IO ()
update_full_text_search_map :: Config -> IORef [Post] -> IORef (Map Text [Int]) -> IO ()
initialize_runtime :: Config -> [MarkupEngine] -> IO Runtime
register_monitor :: WatchManager -> FilePath -> (FilePath -> IO ()) -> IO StopListening

module Web.Geek.Application
initialize_geek :: Config -> [MarkupEngine] -> IO Application
geek :: Runtime -> Application

module Web.Geek.Serve
type Port = Int
serve :: [MarkupEngine] -> [Middleware] -> (Application -> Port -> IO ()) -> IO ()
