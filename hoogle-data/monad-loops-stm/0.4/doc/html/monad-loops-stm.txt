-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Monadic loops for STM
--   
--   Some useful control operators for looping.
@package monad-loops-stm
@version 0.4

module Control.Monad.Loops.STM

-- | <a>forever</a> and <a>atomically</a> rolled into one.
atomLoop :: STM a -> IO ()

-- | <a>atomLoop</a> with a <a>forkIO</a>
forkAtomLoop :: STM a -> IO ThreadId

-- | <a>retry</a> until the given condition is true of the given value.
--   Then return the value that satisfied the condition.
waitFor :: (a -> Bool) -> STM a -> STM a

-- | <a>retry</a> until the given value is True.
waitForTrue :: STM Bool -> STM ()

-- | <a>retry</a> until the given value is <a>Just</a> _, returning the
--   contained value.
waitForJust :: STM (Maybe a) -> STM a

-- | <a>waitFor</a> a value satisfying a condition to come out of a
--   <a>TChan</a>, reading and discarding everything else. Returns the
--   winner.
waitForEvent :: (a -> Bool) -> TChan a -> STM a
