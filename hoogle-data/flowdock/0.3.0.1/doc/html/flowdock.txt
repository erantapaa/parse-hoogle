-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Flowdock client library for Haskell
--   
@package flowdock
@version 0.3.0.1

module Chat.Flowdock.Internal
adjustNames :: String -> String
jsonize :: Name -> Q [Dec]
jsonizeAll :: Traversable t => MonadicFold Q (t Name) [Dec]
snakeCase :: String -> String
jsonizeSnake :: Name -> Q [Dec]
jsonizeToSnake :: Name -> Q [Dec]


-- | A client library for the Flowdock API. Currently only implements the
--   push API.
module Chat.Flowdock
data FlowdockClient a
withFlowdockClient :: ClientManagerSettings auth => auth -> (FlowdockClient auth -> IO a) -> IO a
newtype Push
Push :: Text -> Push
pushFlowApiToken :: Push -> Text
newtype User
User :: Text -> User
userAccessToken :: User -> Text
data Flow
QualifiedFlow :: Text -> Text -> Flow
flowOrganization :: Flow -> Text
flowFlow :: Flow -> Text
FlowId :: Text -> Flow
class MessageType a
data Message a
newtype MessageId
MessageId :: Int -> MessageId
message :: Flow -> a -> Message a
comment :: Text -> MessageId -> Comment
data Chat
data FileUpload
data Status
sendMessage :: MessageType a => FlowdockClient User -> Message a -> IO (MessageResponse a)
data Comment
sendComment :: FlowdockClient User -> Message Comment -> IO (MessageResponse Comment)
pushToInbox :: FlowdockClient Push -> InboxPushMessage -> IO ()
newInboxPushMessage :: InboxPushMessage
data MessageResponse c
pushToChat :: FlowdockClient Push -> ChatPushMessage -> IO ()
type Content = Text
type ExternalUserName = Text
newChatPushMessage :: ExternalUserName -> Content -> ChatPushMessage
data FlowFilter
allFlows :: FlowFilter
justFlows :: [Flow] -> FlowFilter
data StreamQuery a
type Event = Object
streamOptions :: a -> StreamQuery a
streamFlow :: FlowdockClient User -> StreamQuery Flow -> (Producer Event IO () -> IO a) -> IO a
streamFlows :: FlowdockClient User -> StreamQuery FlowFilter -> (Producer Event IO () -> IO a) -> IO a
data InboxPushMessage
data InboxPushFormat
Html :: InboxPushFormat
data ChatPushMessage
data Tag
UserTag :: Text -> Tag
HashTag :: Text -> Tag
data JSONError
JSONError :: String -> JSONError
class HasActive s a | s -> a
active :: HasActive s a => Lens' s a
class HasApp s a | s -> a
app :: HasApp s a => Lens' s a
class HasContent s a | s -> a
content :: HasContent s a => Lens' s a
class HasContentType s a | s -> a
contentType :: HasContentType s a => Lens' s a
class HasEvent s a | s -> a
event :: HasEvent s a => Lens' s a
class HasExternalUserName s a | s -> a
externalUserName :: HasExternalUserName s a => Lens' s a
class HasFileName s a | s -> a
fileName :: HasFileName s a => Lens' s a
class HasFlow s a | s -> a
flow :: HasFlow s a => Traversal' s a
class HasFormat s a | s -> a
format :: HasFormat s a => Lens' s a
class HasFromAddress s a | s -> a
fromAddress :: HasFromAddress s a => Lens' s a
class HasFromName s a | s -> a
fromName :: HasFromName s a => Lens' s a
class HasLink s a | s -> a
link :: HasLink s a => Lens' s a
class HasMessageId s a | s -> a
messageId :: HasMessageId s a => Lens' s a
class HasOrganization s a | s -> a
organization :: HasOrganization s a => Traversal' s a
class HasProject s a | s -> a
project :: HasProject s a => Lens' s a
class HasReplyTo s a | s -> a
replyTo :: HasReplyTo s a => Lens' s a
class HasSent s a | s -> a
sent :: HasSent s a => Lens' s a
class HasSource s a | s -> a
source :: HasSource s a => Lens' s a
class HasSubject s a | s -> a
subject :: HasSubject s a => Lens' s a
class HasTags s a | s -> a
tags :: HasTags s a => Lens' s a
class HasUser s a | s -> a
user :: HasUser s a => Lens' s a
class HasUuid s a | s -> a
uuid :: HasUuid s a => Lens' s a
instance ToJSON ChatPushMessage
instance HasTags ChatPushMessage (Maybe [Tag])
instance HasMessageId ChatPushMessage (Maybe Text)
instance HasExternalUserName ChatPushMessage Text
instance HasContent ChatPushMessage Text
instance ToJSON InboxPushMessage
instance HasTags InboxPushMessage (Maybe [Tag])
instance HasSubject InboxPushMessage Text
instance HasSource InboxPushMessage Text
instance HasReplyTo InboxPushMessage (Maybe Text)
instance HasProject InboxPushMessage (Maybe Text)
instance HasLink InboxPushMessage (Maybe Text)
instance HasFromName InboxPushMessage (Maybe Text)
instance HasFromAddress InboxPushMessage Text
instance HasFormat InboxPushMessage (Maybe InboxPushFormat)
instance HasContent InboxPushMessage Text
instance Typeable JSONError
instance Read InboxPushFormat
instance Show InboxPushFormat
instance Read InboxPushMessage
instance Show InboxPushMessage
instance Read ChatPushMessage
instance Show ChatPushMessage
instance Show JSONError
instance ClientManagerSettings User
instance ClientManagerSettings Push
instance Exception JSONError
instance ToJSON InboxPushFormat
instance MessageType FileUpload
instance MessageType Status
instance ToJSON (Message Comment)
instance MessageType Chat
instance StreamParams FlowFilter
instance StreamParams Flow
instance HasSent (MessageResponse c0) Int
instance HasMessageId (MessageResponse c0) MessageId
instance HasApp (MessageResponse c0) Text
instance HasUser (StreamQuery a0) (Maybe Bool)
instance HasSource (StreamQuery a0) a0
instance HasActive (StreamQuery a0) (Maybe Bool)
instance HasContent Status Text
instance HasMessageId Comment MessageId
instance HasContent Comment Text
instance HasFileName FileUpload Text
instance HasContentType FileUpload Text
instance HasContent FileUpload ByteString
instance HasContent Chat Text
instance HasUuid (Message a0) (Maybe UUID)
instance HasTags (Message a0) [Tag]
instance HasFlow (Message a0) Flow
instance HasExternalUserName (Message a0) (Maybe Text)
instance HasEvent (Message a0) a0
instance HasOrganization Flow Text
instance HasFlow Flow Text
instance Read Tag
instance Show Tag
instance Show MessageId
instance ToJSON MessageId
instance FromJSON MessageId
instance Show (MessageResponse c)
instance FromJSON (MessageResponse r)
instance ToJSON Tag
instance ToJSON WrapUUID
