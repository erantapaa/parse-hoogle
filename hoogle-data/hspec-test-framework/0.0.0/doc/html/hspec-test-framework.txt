-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Run test-framework tests with Hspec
--   
--   A `test-framework` compatibility layer on top of Hspec, it allows you
--   to run `test-framework` tests with Hspec unmodified.
--   
--   All that is required is to remove
--   
--   <ul>
--   <li>`test-framework`</li>
--   <li>`test-framework-quickcheck2`</li>
--   <li>`test-framework-hunit`</li>
--   <li>`test-framework-th`</li>
--   </ul>
--   
--   from the `build-depends` section of your cabal file and add
--   
--   <ul>
--   <li>`hspec-test-framework`</li>
--   <li>`hspec-test-framework-th`</li>
--   </ul>
--   
--   in theire place.
--   
--   NOTE: The packages `hspec-test-framework` and
--   `hspec-test-framework-th` are hidden by default, so that they do not
--   interfere with an installed version of `test-framework`. If you want
--   to use them with e.g. <a>ghci</a>, you have to pass the command-line
--   flags <tt>-packagehspec-test-framework
--   -packagehspec-test-framework-th</tt> to GHC.
@package hspec-test-framework
@version 0.0.0

module Test.Framework.Providers.API
type TestName = String
type Test = SpecTree

module Test.Framework.Providers.HUnit
testCase :: TestName -> Assertion -> Test
hUnitTestToTests :: Test -> [Test]

module Test.Framework.Providers.QuickCheck2
testProperty :: Testable a => TestName -> a -> Test

module Test.Framework
defaultMain :: [Test] -> IO ()
testGroup :: TestName -> [Test] -> Test
