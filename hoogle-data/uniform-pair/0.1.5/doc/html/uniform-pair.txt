-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Uniform pairs with class instances
--   
--   Uniform pairs with class instances
@package uniform-pair
@version 0.1.5


-- | Uniform pairs. Because these pairs memoize functions (from
--   Bool)--i.e., they're representable functors--these instances provided
--   are fully determined by the corresponding instances for functions,
--   thanks to the type class morphism principle.
module Data.UniformPair

-- | Uniform pairs
data Pair a
(:#) :: a -> a -> Pair a
fstP :: Pair a -> a
sndP :: Pair a -> a
firstP :: (a -> a) -> (Pair a -> Pair a)
secondP :: (a -> a) -> (Pair a -> Pair a)
compareSwap :: Ord a => Pair a -> Pair a
instance Eq a => Eq (Pair a)
instance Ord a => Ord (Pair a)
instance Show a => Show (Pair a)
instance Functor Pair
instance Foldable Pair
instance Traversable Pair
instance Monad Pair
instance Applicative Pair
instance Monoid a => Monoid (Pair a)
instance ShowF Pair
