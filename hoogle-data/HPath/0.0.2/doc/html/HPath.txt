-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Extract Haskell declarations by name.
--   
--   Extract the source code for Haskell declarations by name, for use in
--   documentation.
@package HPath
@version 0.0.2


-- | Parser for Haskell. Not complete and just parses strings to strings.
module HPath.Parser.Lower

module HPath.Path
data Path
Path :: [String] -> String -> String -> Path
parse :: String -> Either ParseError Path
url :: Path -> String
instance Show Path
instance Ord Path
instance Eq Path

module HPath.Hierarchy

-- | Produce file paths to search for this Haskell name, accomodating JHC
--   style paths as well as GHC style paths. The GHC style path comes first
--   in order.
paths :: Path -> [[Char]]

module HPath.HaskellSrcExts.Classes
class (Annotated ast) => SearchModule ast
declarations :: (SearchModule ast) => Module t -> ast t -> [Decl t]
class (Annotated ast) => HasModuleName ast
module_name :: (HasModuleName ast) => ast t -> String
class (Annotated ast) => MentionsNames ast
match :: (MentionsNames ast) => ast t -> Name t -> Bool
instance MentionsNames Name
instance MentionsNames Match
instance MentionsNames Op
instance MentionsNames DeclHead
instance MentionsNames Decl
instance HasModuleName QOp
instance HasModuleName QName
instance HasModuleName Module
instance HasModuleName ModuleHead
instance HasModuleName ModuleName
instance SearchModule QOp
instance SearchModule Op
instance SearchModule QName
instance SearchModule Name

module HPath.HaskellSrcExts
search :: Path -> [Module SrcSpanInfo] -> [Decl SrcSpanInfo]
qname :: Path -> QName SrcSpanInfo
extension_conversion :: [Extension] -> [Extension]
modules :: [FilePath] -> [Extension] -> IO ([Module SrcSpanInfo], ([(SrcLoc, String)], [(FilePath, IOError)]))

module HPath.Cabal

-- | Open a Cabal file in the given directory and tell us what extensions
--   are in play and what the source directories are.
info :: FilePath -> IO ([Extension], [FilePath])
