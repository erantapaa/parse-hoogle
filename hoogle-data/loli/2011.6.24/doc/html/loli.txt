-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A minimum web dev DSL in Haskell
--   
--   A simple library for fast web prototyping in Haskell.
@package loli
@version 2011.6.24

module Network.Loli.Middleware.LoliRouter
loli_router :: String -> (a -> Application) -> RoutePathT a -> Middleware

module Network.Loli.Type
type RoutePathT a = (RequestMethod, String, a)
type RoutePath = RoutePathT AppUnit
type AppReader = Env
type AppState = Response
type AppUnitT = ReaderT AppReader (StateT AppState IO)
type AppUnit = AppUnitT ()
type Assoc = [(String, String)]
type Context = Assoc
type RouterT a = String -> (a -> Application) -> RoutePathT a -> Middleware
type Router = RouterT AppUnit
data RouteConfig
RouteConfig :: RoutePath -> Router -> RouteConfig
route_path :: RouteConfig -> RoutePath
router :: RouteConfig -> Router
data Loli
Loli :: Router -> [RouteConfig] -> [Middleware] -> Assoc -> Loli
current_router :: Loli -> Router
routes :: Loli -> [RouteConfig]
middlewares :: Loli -> [Middleware]
mimes :: Loli -> Assoc
type UnitT a = State Loli a
type Unit = UnitT ()
class Template a
interpolate :: Template a => a -> String -> Context -> IO String
instance Default Loli

module Network.Loli.Template.TextTemplate
render_text_template :: String -> Context -> IO String
data TextTemplate
TextTemplate :: String -> TextTemplate
text_template :: String -> TextTemplate
instance Template TextTemplate

module Network.Loli.Template.ConstTemplate
data ConstTemplate
ConstTemplate :: String -> ConstTemplate
const_template :: String -> ConstTemplate
instance Template ConstTemplate

module Network.Loli.Utils
namespace :: String -> Env -> [(String, String)]
put_namespace :: String -> [(String, String)] -> Env -> Env
set_namespace :: String -> String -> String -> Env -> Env
delete_namespace :: String -> String -> Env -> Env
insert_last :: a -> [a] -> [a]
update :: (MonadState a m, Functor m) => (a -> a) -> m ()

module Network.Loli.Config
pre_installed_middlewares :: [Middleware]
loli_captures :: String
loli_locals :: String
loli_partials :: String
loli_config :: String
loli_layout :: String
loli_views :: String
loli_default_views :: String
loli_layout_content :: String

module Network.Loli.Engine
run_app :: AppUnit -> Application
loli :: Unit -> Application
add_route_config :: RouteConfig -> Loli -> Loli
add_route :: RequestMethod -> String -> AppUnit -> Unit
set_router :: Router -> Loli -> Loli
add_middleware :: Middleware -> Loli -> Loli
add_mime :: String -> String -> Loli -> Loli

module Network.Loli.DSL
app :: Application -> AppUnit
layout :: String -> Unit
views :: String -> Unit
router :: Router -> Unit
put :: String -> AppUnit -> Unit
post :: String -> AppUnit -> Unit
delete :: String -> AppUnit -> Unit
get :: String -> AppUnit -> Unit
middleware :: Middleware -> Unit
before :: (Env -> IO Env) -> Unit
after :: (Response -> IO Response) -> Unit
mime :: String -> String -> Unit
public :: Maybe String -> [String] -> Unit
io :: MonadIO m => IO a -> m a
context :: Assoc -> AppUnit -> AppUnit
bind :: String -> String -> AppUnit -> AppUnit
locals :: AppUnitT Assoc
captures :: AppUnitT Assoc

module Network.Loli.Template
text :: String -> AppUnit
html :: String -> AppUnit
partial_locals :: AppUnitT Context
template_locals :: AppUnitT Context
render :: Template a => a -> AppUnitT String
output :: Template a => a -> AppUnit
render_layout :: AppUnit
partial :: Template a => String -> a -> AppUnit -> AppUnit
partials :: Template a => [(String, a)] -> AppUnit -> AppUnit
with_layout :: String -> AppUnit -> AppUnit
no_layout :: AppUnit -> AppUnit

module Network.Loli
