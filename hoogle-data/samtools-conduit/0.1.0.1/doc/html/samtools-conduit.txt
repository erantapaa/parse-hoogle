-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Conduit interface to SAM/BAM format files through samtools
--   
--   Conduit interface to SAM/BAM format files through samtools
@package samtools-conduit
@version 0.1.0.1

module Bio.SamTools.Conduit

-- | Streams the alignments read from a <a>InHandle</a>
sourceHandle :: MonadIO m => InHandle -> Producer m Bam1

-- | Streams the alignments read from a BAM format (binary) file
sourceBamInFile :: MonadResource m => FilePath -> Producer m Bam1

-- | Streams the alignments read from a TAM format (tab-delimited text)
--   file
sourceTamInFile :: MonadResource m => FilePath -> Producer m Bam1

-- | Streams the alignments read from a <a>Query</a> set of query results
sourceQuery :: MonadIO m => Query -> Producer m Bam1

-- | Stream incoming alignments into a <a>OutHandle</a>
sinkHandle :: MonadIO m => OutHandle -> Consumer Bam1 m ()

-- | Stream incoming alignments into a BAM-format output file with header
--   specified
sinkBamOutFileWithHeader :: MonadResource m => FilePath -> Header -> Consumer Bam1 m ()

-- | Stream incoming alignments into a BAM-format output file using the
--   target sequence headers from the first <a>Bam1</a> alignment.
sinkBamOutFile :: MonadResource m => FilePath -> Consumer Bam1 m ()

-- | Stream incoming alignments into a TAM-format output file with header
--   specified
sinkTamOutFileWithHeader :: MonadResource m => FilePath -> Header -> Consumer Bam1 m ()

-- | Stream incoming alignments into a TAM-format output file using the
--   target sequence headers from the first <a>Bam1</a> alignment.
sinkTamOutFile :: MonadResource m => FilePath -> Consumer Bam1 m ()
