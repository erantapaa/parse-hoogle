-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Haskell binding for Imlib 2
@package Imlib
@version 0.1.2

module Graphics.Imlib
type ImlibProgressFunction = ImlibImage -> Word8 -> CInt -> CInt -> CInt -> CInt -> IO CInt
type ImlibDataDestructorFunction = ImlibImage -> Ptr () -> IO ()
data ImlibTTFEncoding
ImlibTTFEncodingISO88591 :: ImlibTTFEncoding
ImlibTTFEncodingISO88592 :: ImlibTTFEncoding
ImlibTTFEncodingISO88593 :: ImlibTTFEncoding
ImlibTTFEncodingISO88594 :: ImlibTTFEncoding
ImlibTTFEncodingISO88595 :: ImlibTTFEncoding
data ImlibLoadError
ImlibLoadErrorNone :: ImlibLoadError
ImlibLoadErrorFileDoesNotExist :: ImlibLoadError
ImlibLoadErrorFileIsDirectory :: ImlibLoadError
ImlibLoadErrorPermissionDeniedToRead :: ImlibLoadError
ImlibLoadErrorNoLoaderForFileFormat :: ImlibLoadError
ImlibLoadErrorPathTooLong :: ImlibLoadError
ImlibLoadErrorPathComponentNonExistant :: ImlibLoadError
ImlibLoadErrorPathComponentNotDirectory :: ImlibLoadError
ImlibLoadErrorPathPointsOutsideAddressSpace :: ImlibLoadError
ImlibLoadErrorTooManySymbolicLinks :: ImlibLoadError
ImlibLoadErrorOutOfMemory :: ImlibLoadError
ImlibLoadErrorOutOfFileDescriptors :: ImlibLoadError
ImlibLoadErrorPermissionDeniedToWrite :: ImlibLoadError
ImlibLoadErrorOutOfDiskSpace :: ImlibLoadError
ImlibLoadErrorUnknown :: ImlibLoadError
data ImlibTextDirection
ImlibTextToRight :: ImlibTextDirection
ImlibTextToLeft :: ImlibTextDirection
ImlibTextToDown :: ImlibTextDirection
ImlibTextToUp :: ImlibTextDirection
ImlibTextToAngle :: ImlibTextDirection
data ImlibOperation
ImlibOpCopy :: ImlibOperation
ImlibOpAdd :: ImlibOperation
ImlibOpSubtract :: ImlibOperation
ImlibOpReshade :: ImlibOperation
data ImlibColor
ImlibColor :: Word32 -> Word32 -> Word32 -> Word32 -> ImlibColor
data ImlibBorder
ImlibBorder :: CInt -> CInt -> CInt -> CInt -> ImlibBorder
data ImlibPolygon
data ImlibFilter
data ImlibColorRange
data ImlibFont
data ImlibUpdates
data ImlibColorModifier
data ImlibImage
data ImlibContext
contextSetDitherMask :: Bool -> IO ()
contextSetAntiAlias :: Bool -> IO ()
contextSetDither :: Bool -> IO ()
contextSetBlend :: Bool -> IO ()
contextSetColorModifier :: ImlibColorModifier -> IO ()
contextSetOperation :: ImlibOperation -> IO ()
contextSetFont :: ImlibFont -> IO ()
contextSetDirection :: ImlibTextDirection -> IO ()
contextSetAngle :: Double -> IO ()
contextSetColor :: Int -> Int -> Int -> Int -> IO ()
contextSetColorCmya :: Int -> Int -> Int -> Int -> IO ()
contextSetColorHsva :: (Integral a3, Integral a1, Integral a, Integral a2) => a -> a1 -> a2 -> a3 -> IO ()
contextSetColorHlsa :: (Integral a3, Integral a1, Integral a, Integral a2) => a -> a1 -> a2 -> a3 -> IO ()
contextSetColorRange :: ImlibColorRange -> IO ()
contextSetProgressFunction :: ImlibProgressFunction -> IO ()
contextSetProgressGranularity :: Word8 -> IO ()
contextSetFilter :: ImlibFilter -> IO ()
contextSetImage :: ImlibImage -> IO ()
contextGetDitherMask :: IO Bool
contextGetAntiAlias :: IO Bool
contextGetDither :: IO Bool
contextGetBlend :: IO Bool
contextGetColorModifier :: IO ImlibColorModifier
contextGetOperation :: IO ImlibOperation
contextGetFont :: IO ImlibFont
contextGetAngle :: IO Double
contextGetDirection :: IO ImlibTextDirection
contextGetColor :: IO (Int, Int, Int, Int)
contextGetColorCmya :: IO (Int, Int, Int, Int)
contextGetColorHsva :: IO (Int, Int, Int, Int)
contextGetColorHlsa :: IO (Int, Int, Int, Int)
contextGetImlibColor :: IO ImlibColor
contextGetColorRange :: IO ImlibColorRange
contextGetProgressFunction :: IO (FunPtr ImlibProgressFunction)
contextGetProgressGranularity :: IO Word8
contextGetImage :: IO ImlibImage
contextGetFilter :: IO ImlibFilter
getCacheSize :: IO Int
setCacheSize :: Int -> IO ()
getColorUsage :: IO Int
setColorUsage :: Int -> IO ()
flushLoaders :: IO ()
loadImage :: String -> IO ImlibImage
loadImageImmediately :: String -> IO ImlibImage
loadImageWithoutCache :: String -> IO ImlibImage
loadImageImmediatelyWithoutCache :: String -> IO ImlibImage
loadImageWithErrorReturn :: String -> IO (ImlibImage, ImlibLoadError)
freeImage :: IO ()
freeImageAndDecache :: IO ()
imageGetWidth :: IO Int
imageGetHeight :: IO Int
imageGetFilename :: IO String
imageGetData :: IO (Ptr Word32)
imageGetDataForReadingOnly :: IO (Ptr Word32)
imagePutBackData :: Ptr Word32 -> IO ()
imageWithData :: (Ptr Word32 -> IO a) -> IO a
imageHasAlpha :: IO Bool
imageSetChangesOnDisk :: IO ()
imageGetBorder :: IO ImlibBorder
imageSetBorder :: ImlibBorder -> IO ()
imageSetFormat :: String -> IO ()
imageSetIrrelevantFormat :: Bool -> IO ()
imageSetIrrelevantBorder :: Bool -> IO ()
imageSetIrrelevantAlpha :: Bool -> IO ()
imageFormat :: IO String
imageSetHasAlpha :: Bool -> IO ()
blendImageOntoImage :: (Integral a7, Integral a5, Integral a3, Integral a1, Integral a, Integral a2, Integral a4, Integral a6) => ImlibImage -> Bool -> (a, a1, a2, a3) -> (a4, a5, a6, a7) -> IO ()
createImage :: Int -> Int -> IO ImlibImage
createImageUsingData :: Int -> Int -> Ptr Word32 -> IO ImlibImage
createImageUsingCopiedData :: (Integral a1, Integral a) => a -> a1 -> Ptr Word32 -> IO ImlibImage
cloneImage :: IO ImlibImage
createCroppedImage :: (Integral a3, Integral a1, Integral a, Integral a2) => a -> a1 -> a2 -> a3 -> IO ImlibImage
createCroppedScaledImage :: (Integral a5, Integral a3, Integral a1, Integral a, Integral a2, Integral a4) => a -> a1 -> a2 -> a3 -> a4 -> a5 -> IO ImlibImage
updatesClone :: ImlibUpdates -> IO ImlibUpdates
updateAppendRect :: (Integral a3, Integral a1, Integral a, Integral a2) => ImlibUpdates -> a -> a1 -> a2 -> a3 -> IO ImlibUpdates
updatesMerge :: (Integral a1, Integral a) => ImlibUpdates -> a -> a1 -> IO ImlibUpdates
updatesMergeForRendering :: (Integral a1, Integral a) => ImlibUpdates -> a -> a1 -> IO ImlibUpdates
updatesFree :: ImlibUpdates -> IO ()
updatesGetNext :: ImlibUpdates -> IO ImlibUpdates
updatesGetCoordinates :: ImlibUpdates -> IO (Int, Int, Int, Int)
updatesSetCoordinates :: (Integral a3, Integral a1, Integral a, Integral a2) => ImlibUpdates -> a -> a1 -> a2 -> a3 -> IO ()
updatesInit :: IO ImlibUpdates
updatesAppendUpdates :: ImlibUpdates -> ImlibUpdates -> IO ImlibUpdates
imageFlipHorizontal :: IO ()
imageFlipVertical :: IO ()
imageFlipDiagonal :: IO ()
imageOrientate :: Int -> IO ()
imageBlur :: Int -> IO ()
imageSharpen :: Int -> IO ()
imageTileHorizontal :: IO ()
imageTileVertical :: IO ()
imageTile :: IO ()
loadFont :: String -> IO ImlibFont
freeFont :: t -> IO ()
textDraw :: Int -> Int -> String -> IO ()
textDrawWithReturnMetrics :: (Integral a1, Integral a, Num b) => a -> a1 -> String -> IO (b, b, b, b)
getTextSize :: String -> IO (Int, Int)
getTextAdvance :: String -> IO (Int, Int)
getTextInset :: String -> IO Int
addPathToFontPath :: String -> IO ()
removePathFromFontPath :: String -> IO ()
listFontPath :: IO [String]
textGetIndexAndLocation :: (Num b4, Num b2, Num b, Num b1, Num b3) => String -> CInt -> CInt -> IO (b, b1, b2, b3, b4)
textGetLocationAtIndex :: (Num b3, Num b1, Num b, Num b2) => String -> CInt -> IO (b, b1, b2, b3)
listFonts :: IO [String]
getFontCacheSize :: IO Int
setFontCacheSize :: Int -> IO ()
flushFontCache :: IO ()
getFontAscent :: IO Int
getFontDescent :: IO Int
getMaximumFontAscent :: IO Int
getMaximumFontDescent :: IO Int
createColorModifier :: IO ImlibColorModifier
freeColorModifier :: IO ()
modifyColorModifierGamma :: Double -> IO ()
modifyColorModifierBrightness :: Double -> IO ()
modifyColorModifierContrast :: Double -> IO ()
setColorModifierTables :: [Word8] -> [Word8] -> [Word8] -> [Word8] -> IO ()
getColorModifierTables :: IO ([Word8], [Word8], [Word8], [Word8])
resetColorModifier :: IO ()
applyColorModifier :: IO ()
applyColorModifierToRectangle :: Int -> Int -> Int -> Int -> IO ()
imageDrawLine :: Int -> Int -> Int -> Int -> Bool -> IO ImlibUpdates
imageDrawRectangle :: Int -> Int -> Int -> Int -> IO ()
imageFillRectangle :: Int -> Int -> Int -> Int -> IO ()
imageCopyAlphaToImage :: ImlibImage -> Int -> Int -> IO ()
imageCopyAlphaRectangleToImage :: (Integral a5, Integral a3, Integral a1, Integral a, Integral a2, Integral a4) => ImlibImage -> a -> a1 -> a2 -> a3 -> a4 -> a5 -> IO ()
imageScrollRect :: (Integral a5, Integral a3, Integral a1, Integral a, Integral a2, Integral a4) => a -> a1 -> a2 -> a3 -> a4 -> a5 -> IO ()
imageCopyRect :: (Integral a5, Integral a3, Integral a1, Integral a, Integral a2, Integral a4) => a -> a1 -> a2 -> a3 -> a4 -> a5 -> IO ()
createColorRange :: IO ImlibColorRange
freeColorRange :: IO ()
addColorToColorRange :: Int -> IO ()
imageFillColorRangeRectangle :: (Integral a3, Integral a1, Integral a, Integral a2, Real a4) => a -> a1 -> a2 -> a3 -> a4 -> IO ()
imageFillHsvaColorRangeRectangle :: (Integral a3, Integral a1, Integral a, Integral a2, Real a4) => a -> a1 -> a2 -> a3 -> a4 -> IO ()
imageQueryPixel :: Int -> Int -> IO ImlibColor
imageQueryPixelCmya :: Int -> Int -> IO (Int, Int, Int, Int)
imageQueryPixelHsva :: Int -> Int -> IO (Int, Int, Int, Int)
imageQueryPixelHlsa :: Int -> Int -> IO (Int, Int, Int, Int)
imageAttachDataValue :: String -> Ptr () -> Int -> ImlibDataDestructorFunction -> IO ()
imageGetAttachedData :: String -> IO (Ptr ())
imageGetAttachedValue :: String -> IO Int
imageRemoveAttachedDataValue :: String -> IO ()
imageRemoveAndFreeAttachedDataValue :: String -> IO ()
saveImage :: String -> IO ()
saveImageWithErrorReturn :: String -> IO ImlibLoadError
createRotatedImage :: Double -> IO ImlibImage
blendImageOntoImageAtAngle :: (Integral a7, Integral a5, Integral a3, Integral a1, Integral a, Integral a2, Integral a4, Integral a6) => Ptr ImlibImage -> Bool -> a -> a1 -> a2 -> a3 -> a4 -> a5 -> a6 -> a7 -> IO ()
blendImageOntoImageSkewed :: (Integral a9, Integral a7, Integral a5, Integral a3, Integral a1, Integral a, Integral a2, Integral a4, Integral a6, Integral a8) => Ptr ImlibImage -> Bool -> a -> a1 -> a2 -> a3 -> a4 -> a5 -> a6 -> a7 -> a8 -> a9 -> IO ()
contextSetCliprect :: Int -> Int -> Int -> Int -> IO ()
polygonNew :: IO ()
polygonFree :: ImlibPolygon -> IO ()
polygonAddPoint :: (Integral a1, Integral a) => ImlibPolygon -> a -> a1 -> IO ()
imageDrawPolygon :: ImlibPolygon -> Bool -> IO ()
imageFillPolygon :: ImlibPolygon -> IO ()
polygonGetBounds :: Num b => ImlibPolygon -> IO (b, b, b, b)
polygonContainsPoint :: (Integral a1, Integral a) => ImlibPolygon -> a -> a1 -> IO Bool
imageDrawEllipse :: (Integral a3, Integral a1, Integral a, Integral a2) => a -> a1 -> a2 -> a3 -> IO ()
imageFillEllipse :: (Integral a3, Integral a1, Integral a, Integral a2) => a -> a1 -> a2 -> a3 -> IO ()
imageFilter :: IO ()
createFilter :: Int -> IO ImlibFilter
freeFilter :: IO ()
filterSet :: (Integral a5, Integral a3, Integral a1, Integral a, Integral a2, Integral a4) => a -> a1 -> a2 -> a3 -> a4 -> a5 -> IO ()
filterSetAlpha :: (Integral a5, Integral a3, Integral a1, Integral a, Integral a2, Integral a4) => a -> a1 -> a2 -> a3 -> a4 -> a5 -> IO ()
filterSetRed :: (Integral a5, Integral a3, Integral a1, Integral a, Integral a2, Integral a4) => a -> a1 -> a2 -> a3 -> a4 -> a5 -> IO ()
filterSetGreen :: (Integral a5, Integral a3, Integral a1, Integral a, Integral a2, Integral a4) => a -> a1 -> a2 -> a3 -> a4 -> a5 -> IO ()
filterSetBlue :: (Integral a5, Integral a3, Integral a1, Integral a, Integral a2, Integral a4) => a -> a1 -> a2 -> a3 -> a4 -> a5 -> IO ()
filterConstants :: Int -> Int -> Int -> Int -> IO ()
filterDivisors :: Int -> Int -> Int -> Int -> IO ()
createImageUsingArray :: Array (Int, Int) ImlibColor -> IO ImlibImage
withImageBits :: (Int -> Int -> [Word32] -> [Word32]) -> IO ()
withImage :: (Int -> Int -> [ImlibColor] -> [ImlibColor]) -> IO ()
colorFromBits :: Word32 -> ImlibColor
colorToBits :: ImlibColor -> Word32
instance Enum ImlibTTFEncoding
instance Show ImlibTTFEncoding
instance Eq ImlibTTFEncoding
instance Show ImlibLoadError
instance Enum ImlibLoadError
instance Eq ImlibLoadError
instance Enum ImlibTextDirection
instance Show ImlibTextDirection
instance Eq ImlibTextDirection
instance Enum ImlibOperation
instance Show ImlibOperation
instance Eq ImlibOperation
instance Show ImlibColor
instance Eq ImlibColor
instance Show ImlibBorder
instance Eq ImlibBorder
instance Storable ImlibColor
instance Storable ImlibBorder
