-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Unix memory syscalls
--   
@package unix-memory
@version 0.1.2


-- | Functions defined by the POSIX standards for manipulating memory maps
--   
--   When a function that calls an underlying POSIX function fails, the
--   errno code is converted to an <a>IOError</a> using
--   <a>errnoToIOError</a>. For a list of which errno codes may be
--   generated, consult the POSIX documentation for the underlying
--   function.
module System.Posix.Memory

-- | Map pages of memory.
--   
--   If fd is present, this memory will represent the file associated.
--   Otherwise, the memory will be an anonymous mapping.
--   
--   use <tt>mmap</tt>
memoryMap :: Maybe (Ptr a) -> CSize -> [MemoryProtection] -> MemoryMapFlag -> Maybe Fd -> COff -> IO (Ptr a)
memoryUnmap :: Ptr a -> CSize -> IO ()

-- | give advice to the operating system about use of memory
--   
--   call <tt>madvise</tt>
memoryAdvise :: Ptr a -> CSize -> MemoryAdvice -> IO ()

-- | lock a range of process address space
--   
--   call <tt>mlock</tt>
memoryLock :: Ptr a -> CSize -> IO ()

-- | unlock a range of process address space
--   
--   call <tt>munlock</tt>
memoryUnlock :: Ptr a -> CSize -> IO ()

-- | set protection of memory mapping
--   
--   call <tt>mprotect</tt>
memoryProtect :: Ptr a -> CSize -> [MemoryProtection] -> IO ()

-- | memorySync synchronize memory with physical storage.
--   
--   On an anonymous mapping this function doesn't have any effect. call
--   <tt>msync</tt>
memorySync :: Ptr a -> CSize -> [MemorySyncFlag] -> IO ()

-- | Mapping flag
data MemoryMapFlag

-- | memory changes are shared between process
MemoryMapShared :: MemoryMapFlag

-- | memory changes are private to process
MemoryMapPrivate :: MemoryMapFlag

-- | Memory protection
data MemoryProtection
MemoryProtectionNone :: MemoryProtection
MemoryProtectionRead :: MemoryProtection
MemoryProtectionWrite :: MemoryProtection
MemoryProtectionExecute :: MemoryProtection

-- | Advice to put on memory.
--   
--   only define the posix one.
data MemoryAdvice

-- | no specific advice, the default.
MemoryAdviceNormal :: MemoryAdvice

-- | Expect page references in random order. No readahead should occur.
MemoryAdviceRandom :: MemoryAdvice

-- | Expect page references in sequential order. Page should be readahead
--   aggressively.
MemoryAdviceSequential :: MemoryAdvice

-- | Expect access in the near future. Probably a good idea to readahead
--   early
MemoryAdviceWillNeed :: MemoryAdvice

-- | Do not expect access in the near future.
MemoryAdviceDontNeed :: MemoryAdvice

-- | Memory synchronization flags
data MemorySyncFlag

-- | perform asynchronous write.
MemorySyncAsync :: MemorySyncFlag

-- | perform synchronous write.
MemorySyncSync :: MemorySyncFlag

-- | invalidate cache data.
MemorySyncInvalidate :: MemorySyncFlag

-- | Return the operating system page size.
--   
--   call <tt>sysconf</tt>
sysconfPageSize :: Int
instance Show MemoryMapFlag
instance Read MemoryMapFlag
instance Eq MemoryMapFlag
instance Show MemoryProtection
instance Read MemoryProtection
instance Eq MemoryProtection
instance Show MemoryAdvice
instance Read MemoryAdvice
instance Eq MemoryAdvice
instance Show MemorySyncFlag
instance Read MemorySyncFlag
instance Eq MemorySyncFlag
