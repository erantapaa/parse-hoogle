-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Extension of real numbers with positive/negative infinities
--   
--   Extension of real numbers with positive/negative infinities (±∞). It
--   is useful for describing various limiting behaviors in mathematics.
@package extended-reals
@version 0.2.1.0


-- | Extension of real numbers with positive/negative infinities (±∞). It
--   is useful for describing various limiting behaviors in mathematics.
--   
--   Remarks:
--   
--   <ul>
--   <li><tt>∞ - ∞</tt> is left undefined as usual, but we define <tt>0 × ∞
--   = 0 × -∞ = 0</tt> by following the convention of probability or
--   measure theory.</li>
--   </ul>
--   
--   References:
--   
--   <ul>
--   <li>Wikipedia contributors, "Extended real number line," Wikipedia,
--   The Free Encyclopedia,
--   https:/<i>en.wikipedia.org</i>wiki/Extended_real_number_line (accessed
--   September 1, 2014).</li>
--   </ul>
module Data.ExtendedReal

-- | <tt>Extended r</tt> is an extension of <i>r</i> with positive/negative
--   infinity (±∞).
data Extended r

-- | negative infinity (-∞)
NegInf :: Extended r

-- | finite value
Finite :: !r -> Extended r

-- | positive infinity (+∞)
PosInf :: Extended r

-- | Infinity (∞)
inf :: Extended r

-- | <tt>isFinite x = not (isInfinite x)</tt>.
isFinite :: Extended r -> Bool

-- | <tt>isInfinite x</tt> returns <tt>True</tt> iff <tt>x</tt> is
--   <tt>PosInf</tt> or <tt>NegInf</tt>.
isInfinite :: Extended r -> Bool
instance Typeable Extended
instance Ord r => Ord (Extended r)
instance Eq r => Eq (Extended r)
instance Show r => Show (Extended r)
instance Read r => Read (Extended r)
instance Data r => Data (Extended r)
instance (Fractional r, Ord r) => Fractional (Extended r)
instance (Num r, Ord r) => Num (Extended r)
instance Hashable r => Hashable (Extended r)
instance NFData r => NFData (Extended r)
instance Functor Extended
instance Bounded (Extended r)
