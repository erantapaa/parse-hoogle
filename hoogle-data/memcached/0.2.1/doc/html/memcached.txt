-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | haskell bindings for memcached
--   
--   haskell bindings for memcached
@package memcached
@version 0.2.1

module Network.Memcache.Key
class Key a
hash :: Key a => a -> Int
toKey :: Key a => a -> String
instance KeyElem a => Key [a]
instance KeyElem Char

module Network.Memcache.Serializable
class Serializable a
serialize :: Serializable a => a -> ByteString
deserialize :: Serializable a => ByteString -> Maybe a
instance Serializable a => Serializable [a]
instance Serializable Int
instance Serializable ByteString
instance Serializable Char

module Network.Memcache
class Memcache a
set :: (Memcache a, Key k, Serializable s) => a -> k -> s -> IO Bool
replace :: (Memcache a, Key k, Serializable s) => a -> k -> s -> IO Bool
add :: (Memcache a, Key k, Serializable s) => a -> k -> s -> IO Bool
get :: (Memcache a, Key k, Serializable s) => a -> k -> IO (Maybe s)
delete :: (Memcache a, Key k) => a -> k -> Int -> IO Bool
incr :: (Memcache a, Key k) => a -> k -> Int -> IO (Maybe Int)
decr :: (Memcache a, Key k) => a -> k -> Int -> IO (Maybe Int)

module Network.Memcache.Protocol
data Server
connect :: HostName -> PortNumber -> IO Server
disconnect :: Server -> IO ()
stats :: Server -> IO [(String, String)]
instance Memcache Server

module Network.Memcache.ServerPool
data Server
Server :: Server -> Int -> Server
data Pool
Pool :: (String -> Int) -> Pool
