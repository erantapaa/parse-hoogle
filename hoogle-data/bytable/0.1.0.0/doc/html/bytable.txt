-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | data from/to ByteString
--   
--   You can read data from ByteString.
--   
--   <pre>
--   some = do
--       x &lt;- take 4
--       y &lt;- take 8
--       return (x :: Int, y :: Integer)
--   </pre>
@package bytable
@version 0.1.0.0

module Codec.Bytable.BigEndian
class Bytable b
decode :: Bytable b => ByteString -> Either String b
encode :: Bytable b => b -> ByteString
class Parsable p
parse :: Parsable p => BytableM p
data BytableM a
BytableM :: (ByteString -> Either String (a, ByteString)) -> BytableM a
runBytableM :: BytableM a -> ByteString -> Either String (a, ByteString)
evalBytableM :: BytableM a -> ByteString -> Either String a
execBytableM :: BytableM a -> ByteString -> Either String ByteString
head :: BytableM Word8
take :: Bytable b => Int -> BytableM b
null :: BytableM Bool
list :: Int -> BytableM b -> BytableM [b]
addLen :: (Bytable n, Num n) => n -> ByteString -> ByteString
instance Bytable Word64
instance Bytable Word32
instance Bytable Word24
instance Bytable Word16
instance Bytable Integer
instance Bytable Int
instance Bytable ByteString
instance Bytable Word8
instance Applicative BytableM
instance Functor BytableM
instance Monad BytableM
