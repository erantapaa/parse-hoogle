-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | indexed monads for free
--   
--   A free indexed monad
@package indexed-free
@version 0.2.1

module Control.Monad.Indexed.Free.Class
class IxMonad m => IxMonadFree f m | m -> f
iwrap :: IxMonadFree f m => f i j (m j k a) -> m i k a
iliftFree :: (IxFunctor f, IxMonadFree f m) => f i j a -> m i j a

module Control.Monad.Indexed.Trans.Free
data IxFreeF f m i j a
Pure :: a -> IxFreeF f m i i a
Free :: f i j (IxFreeT f m j k a) -> IxFreeF f m i k a
newtype IxFreeT f m i j a
IxFreeT :: m (IxFreeF f m i j a) -> IxFreeT f m i j a
runIxFreeT :: IxFreeT f m i j a -> m (IxFreeF f m i j a)
transIxFreeT :: (IxFunctor g, Monad m) => (forall i j x. f i j x -> g i j x) -> IxFreeT f m i j a -> IxFreeT g m i j a
instance (Monad m, IxFunctor f) => Monad (IxFreeT f m i i)
instance (Monad m, IxFunctor f) => Applicative (IxFreeT f m i i)
instance (Monad m, IxFunctor f) => Functor (IxFreeT f m i i)
instance (Monad m, IxFunctor f) => IxMonadFree f (IxFreeT f m)
instance (Monad m, IxFunctor f) => IxMonad (IxFreeT f m)
instance (Monad m, IxFunctor f) => IxApplicative (IxFreeT f m)
instance (Monad m, IxFunctor f) => IxPointed (IxFreeT f m)
instance (Monad m, IxFunctor f) => IxFunctor (IxFreeT f m)


module Control.Monad.Indexed.Free
data IxFree f i j x
Pure :: a -> IxFree f i i a
Free :: f i j (IxFree f j k a) -> IxFree f i k a
hoistIxFree :: (IxFunctor g, IxMonadFree g m) => (forall i j x. f i j x -> g i j x) -> IxFree f i j a -> m i j a
instance IxFunctor f => Monad (IxFree f i i)
instance IxFunctor f => Applicative (IxFree f i i)
instance IxFunctor f => Functor (IxFree f i i)
instance IxFunctor f => IxMonadFree f (IxFree f)
instance IxFunctor f => IxMonad (IxFree f)
instance IxFunctor f => IxApplicative (IxFree f)
instance IxFunctor f => IxPointed (IxFree f)
instance IxFunctor f => IxFunctor (IxFree f)
