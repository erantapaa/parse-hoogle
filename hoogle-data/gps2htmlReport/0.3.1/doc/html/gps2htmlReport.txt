-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | GPS to HTML Summary Report
--   
--   Generate a HTML summary report of GPS tracks
@package gps2htmlReport
@version 0.3.1


-- | This module provides the JourneyCharts and HTMLGenerator modules with
--   statistics for the charts, and the journey statistics
module Data.GPS.Gps2HtmlReport.JourneyStats

-- | Takes all WayPoints, and creates a list of tuples containing
--   (TimeStamp,Elevation)
ptsElevation :: [WptType] -> [(LocalTime, Double)]

-- | Takes all WayPoints, and creates a list of tuples containing
--   (TimeStamp,AvrSpeedAtThisPoint)
avrSpeedOverTime :: [(LocalTime, Speed)] -> Double -> Double -> [(LocalTime, Speed)] -> [(LocalTime, Speed)]

-- | Takes all WayPoints, and creates a list of tuples containing
--   (TimeStamp,JourneyDistanceAtPoint)
accumDistance :: [WptType] -> Double -> [(LocalTime, Distance)]

-- | Takes all WayPoints, an element in wptType, and an Eq function,
--   returning a single WayPoint
findPoint :: [WptType] -> WptType -> (WptType -> Maybe Double) -> (Double -> Double -> Bool) -> Maybe (LocalTime, Double)

-- | Calculates the total journey distance
journeyDistance :: (Lat a, Lon a) => [a] -> Distance

-- | Calculates the average elevation throughout the journey
meanElevation :: Ele a => [a] -> Double

-- | Calculates the total journey time
journeyTime :: Time a => [a] -> NominalDiffTime

-- | Calculates the maximum speed
maxSpeed :: [WptType] -> Speed

-- | Calculates the average speed of the journey
meanJourneySpeed :: (Lat a, Lon a, Time a) => [a] -> Distance

-- | Extracts the date of the journey (from the first WayPoint)
dateOfJourney :: Time a => [a] -> Maybe Day


-- | This module uses the JourneyStats module to generate the statistics
--   about the journey WayPoints, then uses the Cairo bindings to generate
--   the charts
module Data.GPS.Gps2HtmlReport.JourneyCharts
renderToPng :: (t, OutputType -> Renderable a) -> FilePath -> IO (PickFn a)
chart1 :: [WptType] -> (String, OutputType -> Renderable ())
chart2 :: [WptType] -> (String, OutputType -> Renderable ())

module Data.GPS.Gps2HtmlReport.DrawOsm

-- | Takes the destination directory for the web content, the (Trail
--   WptType), and uses the DrawOsm functions to generate an `osm.png' file
--   showing the trail.
generateOsmMap :: String -> [WptType] -> IO ()


-- | The <tt>HTMLGenerator</tt> module generates the HTML content for the
--   index.html generated
module Data.GPS.Gps2HtmlReport.HTMLGenerator

-- | Takes all the WayPoints and generates the HTML file
generateHtmlPage :: [WptType] -> Html
