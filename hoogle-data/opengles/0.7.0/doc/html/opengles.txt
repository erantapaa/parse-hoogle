-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | OpenGL ES 2.0 and 3.0 with EGL 1.4
--   
@package opengles
@version 0.7.0

module Linear.Graphics
ortho :: Fractional a => (a, a) -> (a, a) -> (a, a) -> M44 a

-- | <a>ortho</a> with a different parametrization.
ortho' :: Fractional a => V3 a -> V3 a -> M44 a

-- | "Perspective projecton" matrix
frustum :: Fractional a => (a, a) -> (a, a) -> (a, a) -> M44 a

-- | <a>frustum</a> with a different parametrization.
frustum' :: Fractional a => V3 a -> V3 a -> M44 a

-- | Inverse of <a>frustum</a>
frustumInv :: Fractional a => (a, a) -> (a, a) -> (a, a) -> M44 a
circle2d :: (Ord a, Enum a, Floating a) => a -> [V2 a]
rectangle :: Num a => a -> a -> a -> a -> [V2 a]
yEqual :: Enum a => (a -> a) -> a -> a -> [V2 a]
xEqual :: Enum a => (a -> a) -> a -> a -> [V2 a]

-- | Billboard helper
simpleQuad :: [V2 Integer]

-- | Whole texture
uvWhole :: [V2 Integer]

-- | Modify 2D aspect raito
scale2 :: Num a => a -> a -> V2 (V2 a)

-- | 2D rotation matrix
rotate2 :: Floating a => a -> V2 (V2 a)


-- | Khronos Texture Container Format
--   
--   See also
--   <a>http://www.khronos.org/opengles/sdk/tools/KTX/file_format_spec/</a>
module Graphics.TextureContainer.KTX
data Ktx
Ktx :: FilePath -> ByteString -> Word32 -> Word32 -> Word32 -> Word32 -> Word32 -> Word32 -> Word32 -> Word32 -> Word32 -> Word32 -> Word32 -> [(ByteString, ByteString)] -> [[ByteString]] -> Ktx

-- | for debugging
ktxName :: Ktx -> FilePath

-- | holding the original ForeignPtr.
ktxContent :: Ktx -> ByteString
ktxGlType :: Ktx -> Word32
ktxGlTypeSize :: Ktx -> Word32
ktxGlFormat :: Ktx -> Word32
ktxGlInternalFormat :: Ktx -> Word32
ktxGlBaseInternalFormat :: Ktx -> Word32
ktxPixelWidth :: Ktx -> Word32
ktxPixelHeight :: Ktx -> Word32
ktxPixelDepth :: Ktx -> Word32
ktxNumElems :: Ktx -> Word32
ktxNumFaces :: Ktx -> Word32
ktxNumMipLevels :: Ktx -> Word32

-- | (utf8, any) Note that if a value is utf8, it is NULL terminated.
ktxMap :: Ktx -> [(ByteString, ByteString)]
ktxImage :: Ktx -> [[ByteString]]
unpackKtx :: FilePath -> ByteString -> Unpacking Ktx
ktxFromFile :: FilePath -> IO Ktx
readKtx :: FilePath -> ByteString -> Ktx
tryKtx :: FilePath -> ByteString -> Either SomeException Ktx
instance Show Ktx


-- | Ericsson's ETC1/ETC2/EAC Texture Container Format
module Graphics.TextureContainer.PKM
data Pkm
Pkm :: FilePath -> ByteString -> Word16 -> Word16 -> Word16 -> Word16 -> Word16 -> Word16 -> ByteString -> Pkm
pkmName :: Pkm -> FilePath
pkmContent :: Pkm -> ByteString
pkmVersion :: Pkm -> Word16
pkmType :: Pkm -> Word16
pkmWidth :: Pkm -> Word16
pkmHeight :: Pkm -> Word16
pkmActiveW :: Pkm -> Word16
pkmActiveH :: Pkm -> Word16
pkmImage :: Pkm -> ByteString
unpackPkm :: FilePath -> ByteString -> Unpacking Pkm
pkmToKtx :: Pkm -> Ktx
fromPkmFile :: FilePath -> IO Pkm
readPkm :: FilePath -> ByteString -> Pkm
instance Show Pkm

module Graphics.EGL.Base

-- | 32-bit signed integer
type EGLint = Int32
type EGLboolean = Word32
type EGLenum = Word32
type EGLConfig = Ptr ()
type EGLContext = Ptr ()
type EGLDisplay = Ptr ()
type EGLSurface = Ptr ()
type EGLClientBuffer = Ptr ()
type EGLNativeWindow = Ptr ()
type EGLNativePixmap = Ptr ()
type EGLNativeDisplay = Ptr ()
eglGetError :: IO EGLint
eglGetDisplay :: EGLNativeDisplay -> IO EGLDisplay
eglInitialize :: EGLDisplay -> Ptr EGLint -> Ptr EGLint -> IO EGLboolean
eglTerminate :: EGLDisplay -> IO EGLboolean
eglQueryString :: EGLDisplay -> EGLint -> IO CString
eglGetConfigs :: EGLDisplay -> Ptr EGLConfig -> EGLint -> Ptr EGLint -> IO EGLboolean
eglChooseConfig :: EGLDisplay -> Ptr EGLint -> Ptr EGLConfig -> EGLint -> Ptr EGLint -> IO EGLboolean
eglGetConfigAttrib :: EGLDisplay -> EGLConfig -> EGLint -> Ptr EGLint -> IO EGLboolean
eglCreateWindowSurface :: EGLDisplay -> EGLConfig -> EGLNativeWindow -> Ptr EGLint -> IO EGLSurface
eglCreatePbufferSurface :: EGLDisplay -> EGLConfig -> Ptr EGLint -> IO EGLSurface
eglCreatePixmapSurface :: EGLDisplay -> EGLConfig -> EGLNativePixmap -> Ptr EGLint -> IO EGLSurface
eglDestroySurface :: EGLDisplay -> EGLSurface -> IO EGLboolean
eglQuerySurface :: EGLDisplay -> EGLSurface -> EGLint -> Ptr EGLint -> IO EGLboolean
eglBindAPI :: EGLenum -> IO EGLboolean
eglQueryAPI :: IO EGLenum
eglWaitClient :: IO EGLboolean
eglReleaseThread :: IO EGLboolean
eglCreatePbufferFromClientBuffer :: EGLDisplay -> EGLenum -> EGLClientBuffer -> EGLConfig -> Ptr EGLint -> IO EGLSurface
eglSurfaceAttrib :: EGLDisplay -> EGLSurface -> EGLint -> EGLint -> IO EGLboolean
eglBindTexImage :: EGLDisplay -> EGLSurface -> EGLint -> IO EGLboolean
eglReleaseTexImage :: EGLDisplay -> EGLSurface -> EGLint -> IO EGLboolean
eglSwapInterval :: EGLDisplay -> EGLint -> IO EGLboolean
eglCreateContext :: EGLDisplay -> EGLConfig -> EGLContext -> Ptr EGLint -> IO EGLContext
eglDestroyContext :: EGLDisplay -> EGLContext -> IO EGLboolean
eglMakeCurrent :: EGLDisplay -> EGLSurface -> EGLSurface -> EGLContext -> IO EGLboolean
eglGetCurrentContext :: IO EGLContext
eglGetCurrentSurface :: EGLint -> IO EGLSurface
eglGetCurrentDisplay :: IO EGLDisplay
eglQueryContext :: EGLDisplay -> EGLContext -> EGLint -> Ptr EGLint -> IO EGLboolean
eglWaitNative :: EGLint -> IO EGLboolean
eglSwapBuffers :: EGLDisplay -> EGLSurface -> IO EGLboolean
eglCopyBuffers :: EGLDisplay -> EGLSurface -> EGLNativePixmap -> IO EGLboolean

-- | Just like unsafePerformIO, but we inline it. Big performance gains as
--   it exposes lots of things to further inlining. <i>Very unsafe</i>. In
--   particular, you should do no memory allocation inside an
--   <a>inlinePerformIO</a> block.
inlinePerformIO :: IO a -> a
c_eglGetProcAddress :: CString -> IO (FunPtr a)
eglGetProcAddress :: String -> FunPtr a
newtype EGLConfAttr
EGLConfAttr :: EGLint -> EGLConfAttr
newtype EGLSurfAttr
EGLSurfAttr :: EGLint -> EGLSurfAttr
newtype EGLContextAttr
EGLContextAttr :: EGLint -> EGLContextAttr
queryString :: EGLint -> Egl -> IO String
queryContext :: EGLint -> Egl -> IO EGLint
type Egl = IORef EglCurrent
data EglCurrent
EglCurrent :: EGLDisplay -> EGLConfig -> EGLContext -> EGLSurface -> EGLSurface -> EGLNativeWindow -> (Int32, Int32) -> Maybe EGLNativeDisplay -> [[(EGLConfAttr, Int32)]] -> [(EGLContextAttr, Int32)] -> EglCurrent
disp :: EglCurrent -> EGLDisplay
chosen :: EglCurrent -> EGLConfig
context :: EglCurrent -> EGLContext
dsurf :: EglCurrent -> EGLSurface
rsurf :: EglCurrent -> EGLSurface
nwin :: EglCurrent -> EGLNativeWindow
screenDims :: EglCurrent -> (Int32, Int32)
ndisp :: EglCurrent -> Maybe EGLNativeDisplay
confcand :: EglCurrent -> [[(EGLConfAttr, Int32)]]
cxtconf :: EglCurrent -> [(EGLContextAttr, Int32)]
initial :: Maybe EGLNativeDisplay -> [[(EGLConfAttr, Int32)]] -> [(EGLContextAttr, Int32)] -> EglCurrent
showEglError :: EGLint -> String
withAttrList :: [(EGLint, Int32)] -> (Ptr EGLint -> IO b) -> IO b

-- | Get an EGLDisplay and choose a suitable config
setupEgl :: Maybe EGLNativeDisplay -> [[(EGLConfAttr, Int32)]] -> IO (EGLDisplay, EGLConfig)
setSurface :: EGLDisplay -> EGLConfig -> EGLNativeWindow -> IO (EGLSurface, EGLint, EGLint)


-- | definition from gl3.h
module Graphics.OpenGLES.Base

-- | IO actions run in GL thread.
type GL = IO

-- | Name of a shader, program, and variable.
type GLName = String

-- | 1bit boolean
type GLboolean = Word8

-- | 8bit signed two's complement binary integer
type GLbyte = Int8

-- | 8bit unsigned binary integer
type GLubyte = Word8

-- | (Unused) 8bit characters making up strings
type GLchar = Int8

-- | 16bit signed two's complement binary integer
type GLshort = Int16

-- | 16bit unsigned binary integer
type GLushort = Word16

-- | 32bit signed two's complement binary integer
type GLint = Int32

-- | 32bit unsigned binary integer
type GLuint = Word32

-- | 32bit signed two's complement 16.16 scaled integer
type GLfixed = Int32

-- | 32bit non-negative binary integer size
type GLsizei = Int32

-- | 32bit enumerated binary integer value
type GLenum = Word32

-- | Pointer-sized signed two's complement binary integer
type GLintptr = Int

-- | Pointer-sized non-negative binary integer size
type GLsizeiptr = Int

-- | 32bit bit field
type GLbitfield = Word32

-- | 32bit floating-point value
type GLfloat = Float

-- | 32bit floating-point value clamped to [0,1]
type GLclampf = Float

-- | 64bit signed two's complement binary integer
type GLint64 = Int64

-- | 64bit unsigned binary integer
type GLuint64 = Word64

-- | Pointer-sized sync object handle
type GLsync = Ptr ()

-- | 16bit half-precision floating-point value encoded in an unsigned
--   scalar
type GLhalf = Word16
glActiveTexture :: GLenum -> GL ()
glAttachShader :: GLuint -> GLuint -> GL ()
glBindAttribLocation :: GLuint -> GLuint -> CString -> GL ()
glBindBuffer :: GLenum -> GLuint -> GL ()
glBindFramebuffer :: GLenum -> GLuint -> GL ()
glBindRenderbuffer :: GLenum -> GLuint -> GL ()
glBindTexture :: GLenum -> GLuint -> GL ()
glBlendColor :: GLclampf -> GLclampf -> GLclampf -> GLclampf -> GL ()
glBlendEquation :: GLenum -> GL ()
glBlendEquationSeparate :: GLenum -> GLenum -> GL ()
glBlendFunc :: GLenum -> GLenum -> GL ()
glBlendFuncSeparate :: GLenum -> GLenum -> GLenum -> GLenum -> GL ()
glBufferData :: GLenum -> GLsizeiptr -> Ptr () -> GLenum -> GL ()
glBufferSubData :: GLenum -> GLintptr -> GLsizeiptr -> Ptr () -> GL ()
glCheckFramebufferStatus :: GLenum -> GL GLenum
glClear :: GLbitfield -> GL ()
glClearColor :: GLclampf -> GLclampf -> GLclampf -> GLclampf -> GL ()
glClearDepthf :: GLclampf -> GL ()
glClearStencil :: GLint -> GL ()
glColorMask :: GLboolean -> GLboolean -> GLboolean -> GLboolean -> GL ()
glCompileShader :: GLuint -> GL ()
glCompressedTexImage2D :: GLenum -> GLint -> GLenum -> GLuint -> GLuint -> GLint -> GLsizei -> CString -> GL ()
glCompressedTexSubImage2D :: GLenum -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLenum -> GLsizei -> Ptr () -> GL ()
glCopyTexImage2D :: GLenum -> GLint -> GLenum -> GLint -> GLint -> GLsizei -> GLsizei -> GLint -> GL ()
glCopyTexSubImage2D :: GLenum -> GLint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GL ()
glCreateProgram :: GL GLuint
glCreateShader :: GLenum -> GL GLuint
glCullFace :: GLenum -> GL ()
glDeleteBuffers :: GLsizei -> Ptr GLuint -> GL ()
glDeleteFramebuffers :: GLsizei -> Ptr GLuint -> GL ()
glDeleteProgram :: GLuint -> GL ()
glDeleteRenderbuffers :: GLsizei -> Ptr GLuint -> GL ()
glDeleteShader :: GLuint -> GL ()
glDeleteTextures :: GLsizei -> Ptr GLuint -> GL ()
glDepthFunc :: GLenum -> GL ()
glDepthMask :: GLboolean -> GL ()
glDepthRangef :: GLclampf -> GLclampf -> GL ()
glDetachShader :: GLuint -> GLuint -> GL ()
glDisable :: GLenum -> GL ()
glDisableVertexAttribArray :: GLuint -> GL ()
glDrawArrays :: GLenum -> GLint -> GLsizei -> GL ()
glDrawElements :: GLenum -> GLsizei -> GLenum -> Ptr () -> GL ()
glEnable :: GLenum -> GL ()
glEnableVertexAttribArray :: GLuint -> GL ()
glFinish :: GL ()
glFlush :: GL ()
glFramebufferRenderbuffer :: GLenum -> GLenum -> GLenum -> GLuint -> GL ()
glFramebufferTexture2D :: GLenum -> GLenum -> GLenum -> GLuint -> GLint -> GL ()
glFrontFace :: GLenum -> GL ()
glGenBuffers :: GLsizei -> Ptr GLuint -> GL ()
glGenerateMipmap :: GLenum -> GL ()
glGenFramebuffers :: GLsizei -> Ptr GLuint -> GL ()
glGenRenderbuffers :: GLsizei -> Ptr GLuint -> GL ()
glGenTextures :: GLsizei -> Ptr GLuint -> GL ()
glGetActiveAttrib :: GLuint -> GLuint -> GLsizei -> Ptr GLsizei -> Ptr GLint -> Ptr GLenum -> CString -> GL ()
glGetActiveUniform :: GLuint -> GLuint -> GLsizei -> Ptr GLsizei -> Ptr GLint -> Ptr GLenum -> CString -> GL ()
glGetAttachedShaders :: GLuint -> GLsizei -> Ptr GLsizei -> Ptr GLuint -> GL ()
glGetAttribLocation :: GLuint -> CString -> GL GLint
glGetBooleanv :: GLenum -> Ptr GLboolean -> GL ()
glGetBufferParameteriv :: GLenum -> GLenum -> Ptr GLint -> GL ()
glGetError :: GL GLenum
glGetFloatv :: GLenum -> Ptr GLfloat -> GL ()
glGetFramebufferAttachmentParameteriv :: GLenum -> GLenum -> GLenum -> Ptr GLint -> GL ()
glGetIntegerv :: GLenum -> Ptr GLint -> GL ()
glGetProgramiv :: GLuint -> GLenum -> Ptr GLint -> GL ()
glGetProgramInfoLog :: GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()
glGetRenderbufferParameteriv :: GLenum -> GLenum -> Ptr GLint -> GL ()
glGetShaderiv :: GLuint -> GLenum -> Ptr GLint -> GL ()
glGetShaderInfoLog :: GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()
glGetShaderPrecisionFormat :: GLenum -> GLenum -> Ptr GLint -> Ptr GLint -> GL ()
glGetShaderSource :: GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()
glGetString :: GLenum -> GL CString
glGetTexParameterfv :: GLenum -> GLenum -> Ptr GLfloat -> GL ()
glGetTexParameteriv :: GLenum -> GLenum -> Ptr GLint -> GL ()
glGetUniformfv :: GLuint -> GLint -> Ptr GLfloat -> GL ()
glGetUniformiv :: GLuint -> GLint -> Ptr GLint -> GL ()
glGetUniformLocation :: GLuint -> CString -> GL GLint
glGetVertexAttribfv :: GLuint -> GLenum -> Ptr GLfloat -> GL ()
glGetVertexAttribiv :: GLuint -> GLenum -> Ptr GLint -> GL ()
glGetVertexAttribPointerv :: GLuint -> GLenum -> Ptr (Ptr ()) -> GL ()
glHint :: GLenum -> GLenum -> GL ()
glIsBuffer :: GLuint -> GL GLboolean
glIsEnabled :: GLenum -> GL GLboolean
glIsFramebuffer :: GLuint -> GL GLboolean
glIsProgram :: GLuint -> GL GLboolean
glIsRenderbuffer :: GLuint -> GL GLboolean
glIsShader :: GLuint -> GL GLboolean
glIsTexture :: GLuint -> GL GLboolean
glLineWidth :: GLfloat -> GL ()
glLinkProgram :: GLuint -> GL ()
glPixelStorei :: GLenum -> GLint -> GL ()
glPolygonOffset :: GLfloat -> GLfloat -> GL ()
glReadPixels :: GLint -> GLint -> GLsizei -> GLsizei -> GLenum -> GLenum -> Ptr () -> GL ()
glReleaseShaderCompiler :: GL ()
glRenderbufferStorage :: GLenum -> GLenum -> GLsizei -> GLsizei -> GL ()
glSampleCoverage :: GLclampf -> GLboolean -> GL ()
glScissor :: GLint -> GLint -> GLsizei -> GLsizei -> GL ()
glShaderBinary :: GLsizei -> Ptr GLuint -> GLenum -> Ptr () -> GLsizei -> GL ()
glShaderSource :: GLuint -> GLsizei -> Ptr CString -> Ptr GLint -> GL ()
glStencilFunc :: GLenum -> GLint -> GLuint -> GL ()
glStencilFuncSeparate :: GLenum -> GLenum -> GLint -> GLuint -> GL ()
glStencilMask :: GLuint -> GL ()
glStencilMaskSeparate :: GLenum -> GLuint -> GL ()
glStencilOp :: GLenum -> GLenum -> GLenum -> GL ()
glStencilOpSeparate :: GLenum -> GLenum -> GLenum -> GLenum -> GL ()
glTexImage2D :: GLenum -> GLint -> GLenum -> GLuint -> GLuint -> GLint -> GLenum -> GLenum -> CString -> GL ()
glTexParameterf :: GLenum -> GLenum -> GLfloat -> GL ()
glTexParameterfv :: GLenum -> GLenum -> Ptr GLfloat -> GL ()
glTexParameteri :: GLenum -> GLenum -> GLint -> GL ()
glTexParameteriv :: GLenum -> GLenum -> Ptr GLint -> GL ()
glTexSubImage2D :: GLenum -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLenum -> GLenum -> Ptr () -> GL ()
glUniform1f :: GLint -> GLfloat -> GL ()
glUniform1fv :: GLint -> GLsizei -> Ptr GLfloat -> GL ()
glUniform1i :: GLint -> GLint -> GL ()
glUniform1iv :: GLint -> GLsizei -> Ptr GLint -> GL ()
glUniform2f :: GLint -> GLfloat -> GLfloat -> GL ()
glUniform2fv :: GLint -> GLsizei -> Ptr GLfloat -> GL ()
glUniform2i :: GLint -> GLint -> GLint -> GL ()
glUniform2iv :: GLint -> GLsizei -> Ptr GLint -> GL ()
glUniform3f :: GLint -> GLfloat -> GLfloat -> GLfloat -> GL ()
glUniform3fv :: GLint -> GLsizei -> Ptr GLfloat -> GL ()
glUniform3i :: GLint -> GLint -> GLint -> GLint -> GL ()
glUniform3iv :: GLint -> GLsizei -> Ptr GLint -> GL ()
glUniform4f :: GLint -> GLfloat -> GLfloat -> GLfloat -> GLfloat -> GL ()
glUniform4fv :: GLint -> GLsizei -> Ptr GLfloat -> GL ()
glUniform4i :: GLint -> GLint -> GLint -> GLint -> GLint -> GL ()
glUniform4iv :: GLint -> GLsizei -> Ptr GLint -> GL ()
glUniformMatrix2fv :: GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glUniformMatrix3fv :: GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glUniformMatrix4fv :: GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glUseProgram :: GLuint -> GL ()
glValidateProgram :: GLuint -> GL ()
glVertexAttrib1f :: GLuint -> GLfloat -> GL ()
glVertexAttrib1fv :: GLuint -> Ptr GLfloat -> GL ()
glVertexAttrib2f :: GLuint -> GLfloat -> GLfloat -> GL ()
glVertexAttrib2fv :: GLuint -> Ptr GLfloat -> GL ()
glVertexAttrib3f :: GLuint -> GLfloat -> GLfloat -> GLfloat -> GL ()
glVertexAttrib3fv :: GLuint -> Ptr GLfloat -> GL ()
glVertexAttrib4f :: GLuint -> GLfloat -> GLfloat -> GLfloat -> GLfloat -> GL ()
glVertexAttrib4fv :: GLuint -> Ptr GLfloat -> GL ()
glVertexAttribPointer :: GLuint -> GLint -> GLenum -> GLboolean -> GLsizei -> Ptr () -> GL ()
glViewport :: GLint -> GLint -> GLsizei -> GLsizei -> GL ()
glReadBuffer :: GLenum -> GL ()
glDrawRangeElements :: GLenum -> GLuint -> GLuint -> GLsizei -> GLenum -> Ptr (()) -> GL ()
glTexImage3D :: GLenum -> GLint -> GLenum -> GLuint -> GLuint -> GLuint -> GLint -> GLenum -> GLenum -> CString -> GL ()
glTexSubImage3D :: GLenum -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GLenum -> GLenum -> Ptr () -> GL ()
glCopyTexSubImage3D :: GLenum -> GLint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GL ()
glCompressedTexImage3D :: GLenum -> GLint -> GLenum -> GLuint -> GLuint -> GLuint -> GLint -> GLsizei -> CString -> GL ()
glCompressedTexSubImage3D :: GLenum -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GLenum -> GLsizei -> Ptr () -> GL ()
glGenQueries :: GLsizei -> Ptr GLuint -> GL ()
glDeleteQueries :: GLsizei -> Ptr GLuint -> GL ()
glIsQuery :: GLuint -> GL GLboolean
glBeginQuery :: GLenum -> GLuint -> GL ()
glEndQuery :: GLenum -> GL ()
glGetQueryiv :: GLenum -> GLenum -> Ptr GLint -> GL ()
glGetQueryObjectuiv :: GLuint -> GLenum -> Ptr GLuint -> GL ()
glUnmapBuffer :: GLenum -> GL GLboolean
glGetBufferPointerv :: GLenum -> GLenum -> Ptr (Ptr ()) -> GL ()
glDrawBuffers :: GLsizei -> Ptr GLenum -> GL ()
glUniformMatrix2x3fv :: GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glUniformMatrix3x2fv :: GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glUniformMatrix2x4fv :: GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glUniformMatrix4x2fv :: GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glUniformMatrix3x4fv :: GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glUniformMatrix4x3fv :: GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glBlitFramebuffer :: GLint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLbitfield -> GLenum -> GL ()
glRenderbufferStorageMultisample :: GLenum -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GL ()
glFramebufferTextureLayer :: GLenum -> GLenum -> GLuint -> GLint -> GLint -> GL ()
glMapBufferRange :: GLenum -> GLintptr -> GLsizeiptr -> GLbitfield -> GL (Ptr ())
glFlushMappedBufferRange :: GLenum -> GLintptr -> GLsizeiptr -> GL ()
glBindVertexArray :: GLuint -> GL ()
glDeleteVertexArrays :: GLsizei -> Ptr GLuint -> GL ()
glGenVertexArrays :: GLsizei -> Ptr GLuint -> GL ()
glIsVertexArray :: GLuint -> GL GLboolean
glGetIntegeri_v :: GLenum -> GLuint -> Ptr GLint -> GL ()
glBeginTransformFeedback :: GLenum -> GL ()
glEndTransformFeedback :: GL ()
glBindBufferRange :: GLenum -> GLuint -> GLuint -> GLintptr -> GLsizeiptr -> GL ()
glBindBufferBase :: GLenum -> GLuint -> GLuint -> GL ()
glTransformFeedbackVaryings :: GLuint -> GLsizei -> Ptr CString -> GLenum -> GL ()
glGetTransformFeedbackVarying :: GLuint -> GLuint -> GLsizei -> Ptr GLsizei -> Ptr GLsizei -> Ptr GLenum -> CString -> GL ()
glVertexAttribIPointer :: GLuint -> GLint -> GLenum -> GLsizei -> Ptr () -> GL ()
glGetVertexAttribIiv :: GLuint -> GLenum -> Ptr GLint -> GL ()
glGetVertexAttribIuiv :: GLuint -> GLenum -> Ptr GLuint -> GL ()
glVertexAttribI4i :: GLuint -> GLint -> GLint -> GLint -> GLint -> GL ()
glVertexAttribI4ui :: GLuint -> GLuint -> GLuint -> GLuint -> GLuint -> GL ()
glVertexAttribI4iv :: GLuint -> Ptr GLint -> GL ()
glVertexAttribI4uiv :: GLuint -> Ptr GLuint -> GL ()
glGetUniformuiv :: GLuint -> GLint -> Ptr GLuint -> GL ()
glGetFragDataLocation :: GLuint -> CString -> GL GLint
glUniform1ui :: GLint -> GLuint -> GL ()
glUniform2ui :: GLint -> GLuint -> GLuint -> GL ()
glUniform3ui :: GLint -> GLuint -> GLuint -> GLuint -> GL ()
glUniform4ui :: GLint -> GLuint -> GLuint -> GLuint -> GLuint -> GL ()
glUniform1uiv :: GLint -> GLsizei -> Ptr GLuint -> GL ()
glUniform2uiv :: GLint -> GLsizei -> Ptr GLuint -> GL ()
glUniform3uiv :: GLint -> GLsizei -> Ptr GLuint -> GL ()
glUniform4uiv :: GLint -> GLsizei -> Ptr GLuint -> GL ()
glClearBufferiv :: GLenum -> GLint -> Ptr GLint -> GL ()
glClearBufferuiv :: GLenum -> GLint -> Ptr GLuint -> GL ()
glClearBufferfv :: GLenum -> GLint -> Ptr GLfloat -> GL ()
glClearBufferfi :: GLenum -> GLint -> GLfloat -> GLint -> GL ()
glGetStringi :: GLenum -> GLuint -> GL CString
glCopyBufferSubData :: GLenum -> GLenum -> GLintptr -> GLintptr -> GLsizeiptr -> GL ()
glGetUniformIndices :: GLuint -> GLsizei -> Ptr CString -> Ptr GLuint -> GL ()
glGetActiveUniformsiv :: GLuint -> GLsizei -> Ptr GLuint -> GLenum -> Ptr GLint -> GL ()
glGetUniformBlockIndex :: GLuint -> CString -> GL GLuint
glGetActiveUniformBlockiv :: GLuint -> GLuint -> GLenum -> Ptr GLint -> GL ()
glGetActiveUniformBlockName :: GLuint -> GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()
glUniformBlockBinding :: GLuint -> GLuint -> GLuint -> GL ()
glDrawArraysInstanced :: GLenum -> GLint -> GLsizei -> GLsizei -> GL ()
glDrawElementsInstanced :: GLenum -> GLsizei -> GLenum -> Ptr () -> GLsizei -> GL ()
glFenceSync :: GLenum -> GLbitfield -> GL GLsync
glIsSync :: GLsync -> GL GLboolean
glDeleteSync :: GLsync -> GL ()
glClientWaitSync :: GLsync -> GLbitfield -> GLuint64 -> GL GLenum
glWaitSync :: GLsync -> GLbitfield -> GLuint64 -> GL ()
glGetInteger64v :: GLenum -> Ptr GLint64 -> GL ()
glGetSynciv :: GLsync -> GLenum -> GLsizei -> Ptr GLsizei -> Ptr GLint -> GL ()
glGetInteger64i_v :: GLenum -> GLuint -> Ptr GLint64 -> GL ()
glGetBufferParameteri64v :: GLenum -> GLenum -> Ptr GLint64 -> GL ()
glGenSamplers :: GLsizei -> Ptr GLuint -> GL ()
glDeleteSamplers :: GLsizei -> Ptr GLuint -> GL ()
glIsSampler :: GLuint -> GL GLboolean
glBindSampler :: GLuint -> GLuint -> GL ()
glSamplerParameteri :: GLuint -> GLenum -> GLint -> GL ()
glSamplerParameteriv :: GLuint -> GLenum -> Ptr GLint -> GL ()
glSamplerParameterf :: GLuint -> GLenum -> GLfloat -> GL ()
glSamplerParameterfv :: GLuint -> GLenum -> Ptr GLfloat -> GL ()
glGetSamplerParameteriv :: GLuint -> GLenum -> Ptr GLint -> GL ()
glGetSamplerParameterfv :: GLuint -> GLenum -> Ptr GLfloat -> GL ()
glVertexAttribDivisor :: GLuint -> GLuint -> GL ()
glBindTransformFeedback :: GLenum -> GLuint -> GL ()
glDeleteTransformFeedbacks :: GLsizei -> Ptr GLuint -> GL ()
glGenTransformFeedbacks :: GLsizei -> Ptr GLuint -> GL ()
glIsTransformFeedback :: GLuint -> GL GLboolean
glPauseTransformFeedback :: GL ()
glResumeTransformFeedback :: GL ()
glGetProgramBinary :: GLuint -> GLsizei -> Ptr GLsizei -> Ptr GLenum -> Ptr () -> GL ()
glProgramBinary :: GLuint -> GLenum -> Ptr () -> GLsizei -> GL ()
glProgramParameteri :: GLuint -> GLenum -> GLint -> GL ()
glInvalidateFramebuffer :: GLenum -> GLsizei -> Ptr GLenum -> GL ()
glInvalidateSubFramebuffer :: GLenum -> GLsizei -> Ptr GLenum -> GLint -> GLint -> GLsizei -> GLsizei -> GL ()
glTexStorage2D :: GLenum -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GL ()
glTexStorage3D :: GLenum -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GLsizei -> GL ()
glGetInternalformativ :: GLenum -> GLenum -> GLenum -> GLsizei -> Ptr GLint -> GL ()
glDrawTexiOES :: GLint -> GLint -> GLint -> GLint -> GLint -> GL ()
glMultiDrawArraysEXT :: GLenum -> Ptr GLint -> Ptr GLsizei -> GLsizei -> GL ()
glMultiDrawElementsEXT :: GLenum -> Ptr GLsizei -> GLenum -> Ptr (Ptr ()) -> GLsizei -> GL ()
glGenVertexArraysOES :: GLsizei -> Ptr GLuint -> GL ()
glBindVertexArrayOES :: GLuint -> GL ()
glDeleteVertexArraysOES :: GLsizei -> Ptr GLuint -> GL ()
glIsVertexArrayOES :: GLuint -> GL GLboolean
glDispatchCompute :: GLuint -> GLuint -> GLuint -> GL ()
glDispatchComputeIndirect :: GLintptr -> GL ()
glDrawArraysIndirect :: GLenum -> Ptr () -> GL ()
glDrawElementsIndirect :: GLenum -> GLenum -> Ptr () -> GL ()
glFramebufferParameteri :: GLenum -> GLenum -> GLint -> GL ()
glGetFramebufferParameteriv :: GLenum -> GLenum -> Ptr GLint -> GL ()
glGetProgramInterfaceiv :: GLuint -> GLenum -> GLenum -> Ptr GLint -> GL ()
glGetProgramResourceIndex :: GLuint -> GLenum -> Ptr GLchar -> GL ()
glGetProgramResourceName :: GLuint -> GLenum -> GLuint -> GLsizei -> Ptr GLsizei -> Ptr GLchar -> GL ()
glGetProgramResourceiv :: GLuint -> GLenum -> GLuint -> GLsizei -> Ptr GLenum -> GLsizei -> Ptr GLsizei -> Ptr GLint -> GL ()
glGetProgramResourceLocation :: GLuint -> GLenum -> Ptr GLchar -> GL ()
glUseProgramStages :: GLuint -> GLbitfield -> GLuint -> GL ()
glActiveShaderProgram :: GLuint -> GLuint -> GL ()
glCreateShaderProgramv :: GLenum -> GLsizei -> Ptr CString -> GL ()
glBindProgramPipeline :: GLuint -> GL ()
glDeleteProgramPipelines :: GLsizei -> Ptr GLuint -> GL ()
glGenProgramPipelines :: GLsizei -> Ptr GLuint -> GL ()
glIsProgramPipeline :: GLuint -> GL ()
glGetProgramPipelineiv :: GLuint -> GLenum -> Ptr GLint -> GL ()
glProgramUniform1i :: GLuint -> GLint -> GLint -> GL ()
glProgramUniform2i :: GLuint -> GLint -> GLint -> GLint -> GL ()
glProgramUniform3i :: GLuint -> GLint -> GLint -> GLint -> GLint -> GL ()
glProgramUniform4i :: GLuint -> GLint -> GLint -> GLint -> GLint -> GLint -> GL ()
glProgramUniform1ui :: GLuint -> GLint -> GLuint -> GL ()
glProgramUniform2ui :: GLuint -> GLint -> GLuint -> GLuint -> GL ()
glProgramUniform3ui :: GLuint -> GLint -> GLuint -> GLuint -> GLuint -> GL ()
glProgramUniform4ui :: GLuint -> GLint -> GLuint -> GLuint -> GLuint -> GLuint -> GL ()
glProgramUniform1f :: GLuint -> GLint -> GLfloat -> GL ()
glProgramUniform2f :: GLuint -> GLint -> GLfloat -> GLfloat -> GL ()
glProgramUniform3f :: GLuint -> GLint -> GLfloat -> GLfloat -> GLfloat -> GL ()
glProgramUniform4f :: GLuint -> GLint -> GLfloat -> GLfloat -> GLfloat -> GLfloat -> GL ()
glProgramUniform1iv :: GLuint -> GLint -> GLsizei -> Ptr GLint -> GL ()
glProgramUniform2iv :: GLuint -> GLint -> GLsizei -> Ptr GLint -> GL ()
glProgramUniform3iv :: GLuint -> GLint -> GLsizei -> Ptr GLint -> GL ()
glProgramUniform4iv :: GLuint -> GLint -> GLsizei -> Ptr GLint -> GL ()
glProgramUniform1uiv :: GLuint -> GLint -> GLsizei -> Ptr GLuint -> GL ()
glProgramUniform2uiv :: GLuint -> GLint -> GLsizei -> Ptr GLuint -> GL ()
glProgramUniform3uiv :: GLuint -> GLint -> GLsizei -> Ptr GLuint -> GL ()
glProgramUniform4uiv :: GLuint -> GLint -> GLsizei -> Ptr GLuint -> GL ()
glProgramUniform1fv :: GLuint -> GLint -> GLsizei -> Ptr GLfloat -> GL ()
glProgramUniform2fv :: GLuint -> GLint -> GLsizei -> Ptr GLfloat -> GL ()
glProgramUniform3fv :: GLuint -> GLint -> GLsizei -> Ptr GLfloat -> GL ()
glProgramUniform4fv :: GLuint -> GLint -> GLsizei -> Ptr GLfloat -> GL ()
glProgramUniformMatrix2fv :: GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glProgramUniformMatrix3fv :: GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glProgramUniformMatrix4fv :: GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glProgramUniformMatrix2x3fv :: GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glProgramUniformMatrix3x2fv :: GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glProgramUniformMatrix2x4fv :: GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glProgramUniformMatrix4x2fv :: GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glProgramUniformMatrix3x4fv :: GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glProgramUniformMatrix4x3fv :: GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glValidateProgramPipeline :: GLuint -> GL ()
glGetProgramPipelineInfoLog :: GLuint -> GLsizei -> Ptr GLsizei -> Ptr GLchar -> GL ()
glBindImageTexture :: GLuint -> GLuint -> GLint -> GLboolean -> GLint -> GLenum -> GLenum -> GL ()
glGetBooleani_v :: GLenum -> GLuint -> Ptr GLboolean -> GL ()
glMemoryBarrier :: GLbitfield -> GL ()
glMemoryBarrierByRegion :: GLbitfield -> GL ()
glTexStorage2DMultisample :: GLenum -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GLboolean -> GL ()
glGetMultisamplefv :: GLenum -> GLuint -> Ptr GLfloat -> GL ()
glSampleMaski :: GLuint -> GLbitfield -> GL ()
glGetTexLevelParameteriv :: GLenum -> GLint -> GLenum -> Ptr GLint -> GL ()
glGetTexLevelParameterfv :: GLenum -> GLint -> GLenum -> Ptr GLfloat -> GL ()
glBindVertexBuffer :: GLuint -> GLuint -> GLintptr -> GLsizei -> GL ()
glVertexAttribFormat :: GLuint -> GLint -> GLenum -> GLboolean -> GLuint -> GL ()
glVertexAttribIFormat :: GLuint -> GLint -> GLenum -> GLuint -> GL ()
glVertexAttribBinding :: GLuint -> GLuint -> GL ()
glVertexBindingDivisor :: GLuint -> GLuint -> GL ()

module Graphics.OpenGLES.Internal
frameCounter :: IORef Int64
errorQueue :: Chan String
glLog :: String -> IO ()
data GLError
InvalidEnum :: GLError
InvalidValue :: GLError
InvalidOperation :: GLError
OutOfMemory :: GLError
InvalidFrameBufferOperation :: GLError
getError :: GL (Maybe GLError)
showError :: String -> GL Bool
type GLO = IORef GLObj
data GLObj
GLObj :: GLuint -> (GL GLObj) -> (ForeignPtr GLuint) -> GLObj
getObjId :: IORef GLObj -> IO GLuint
newGLO :: (GLsizei -> Ptr GLuint -> GL ()) -> (GLsizei -> Ptr GLuint -> GL ()) -> (GLuint -> GL ()) -> GL GLO

-- | genObj glo glGenBuffers glDeleteBuffers
genObj :: (GLsizei -> Ptr GLuint -> GL ()) -> (GLsizei -> Ptr GLuint -> GL ()) -> (GLuint -> GL ()) -> GL GLObj
newtype HalfFloat
HalfFloat :: Word16 -> HalfFloat
newtype FixedFloat
FixedFloat :: Int32 -> FixedFloat
newtype Int2_10x3
Int210x3 :: Int32 -> Int2_10x3
newtype Word2_10x3
Word2_10x3 :: Int32 -> Word2_10x3
newtype Word4444
Word4444 :: Word16 -> Word4444
newtype Word5551
Word5551 :: Word16 -> Word5551
newtype Word565
Word565 :: Word16 -> Word565
newtype Word10f11f11f
Word10f11f11f :: Word32 -> Word10f11f11f
newtype Word5999
Word5999 :: Word32 -> Word5999
newtype Word24_8
Word24_8 :: Word32 -> Word24_8
newtype FloatWord24_8
FloatWord24_8 :: (Float, Word32) -> FloatWord24_8
class GLType a
glType :: GLType a => m a -> Word32
r :: GLenum
depth_stencil :: GLenum
depth_component :: GLenum
rgba_integer :: GLenum
rgb_integer :: GLenum
rg_integer :: GLenum
r_integer :: GLenum
rgba :: GLenum
rgb :: GLenum
rg :: GLenum
type GLArray a = Vector a
data Buffer a
Buffer :: (IORef (Either (GLArray a) Int)) -> GLO -> Buffer a
newtype BufferUsage
BufferUsage :: GLenum -> BufferUsage
newtype BufferSlot
BufferSlot :: GLenum -> BufferSlot
newtype DrawMode
DrawMode :: GLenum -> DrawMode

-- | See <a>Graphics.OpenGLES.State</a>
type RenderConfig = GL ()
newtype Capability
Capability :: GLenum -> Capability
newtype CullFace
Culling :: GLenum -> CullFace
newtype CompFunc
CompFunc :: GLenum -> CompFunc
newtype StencilOp
StencilOp :: GLenum -> StencilOp
newtype BlendOp
BlendOp :: GLenum -> BlendOp
newtype BlendingFactor
BlendingFactor :: GLenum -> BlendingFactor
newtype Hint
Hint :: GLenum -> Hint
type ShaderType = GLenum
data Shader
Shader :: ShaderType -> GLName -> ByteString -> Shader
data TransformFeedback
NoFeedback :: TransformFeedback
FeedbackArrays :: [String] -> TransformFeedback
FeedbackPacked :: [String] -> TransformFeedback
data Program p
Program :: GLO -> TransformFeedback -> [Shader] -> ([VarDesc], [VarDesc]) -> Program p
programGLO :: Program p -> GLO
programTF :: Program p -> TransformFeedback
programShaders :: Program p -> [Shader]
programVariables :: Program p -> ([VarDesc], [VarDesc])
type ProgramBinary = ByteString

-- | name: (location, length of array, type)
type VarDesc = (String, (GLint, GLsizei, GLenum))
programDict :: IORef [(String, Program ())]
lookupVarDesc :: TypeRep -> IO (Maybe ([VarDesc], [VarDesc]))
loadProgram :: Typeable p => Program p -> (Int -> String -> Maybe ProgramBinary -> GL ()) -> GL (Progress [String] (Program p))
postLink :: Typeable p => String -> Int -> Program p -> GLuint -> (Int -> String -> Maybe ProgramBinary -> GL ()) -> GL (Progress [String] (Program p))
c_link_status :: GLenum
c_info_log_length :: GLenum
loadShader :: (Int -> String -> Maybe ProgramBinary -> GL ()) -> (Int, Shader) -> GL (Progress [String] GLuint)
c_compile_status :: GLenum
getActiveVariables :: GLuint -> GL ([VarDesc], [VarDesc])
c_active_uniform_max_length :: GLenum
c_active_attribute_max_length :: GLenum
c_active_uniforms :: GLenum
c_active_attributes :: GLenum
newtype Uniform p a
Uniform :: (GLint, GLsizei, Ptr ()) -> Uniform p a
class UnifVal a
glUniform :: UnifVal a => (GLint, GLsizei, Ptr ()) -> a -> GL ()
class UnifMat a
glUnifMat :: UnifMat a => GLint -> GLsizei -> GLboolean -> Ptr a -> GL ()
newtype Attrib p a
Attrib :: (GLuint, GLsizei, GLboolean, GLuint) -> Attrib p a

-- | GLSL vertex attribute type
class VertexAttribute a
glVertexAttrib :: VertexAttribute a => GLuint -> a -> GL ()

-- | A set of <a>VertexAttribute</a>s packed in a <a>Buffer</a>
class AttrStruct a p b | a -> p
glVertexBuffer :: AttrStruct a p b => a -> Buffer b -> GL ()

-- | The 3rd argument of glVertexAttribI?Pointer
class GLType a => AttrElement a
newtype VertexArray p
VertexArray :: (GLO, GL ()) -> VertexArray p
newtype VertexPicker
VertexPicker :: (GLenum -> GL Bool) -> VertexPicker
class VertexIx a
vxix :: VertexIx a => m a -> (GLenum, GLint)
newtype BufferMask
BufferMask :: GLenum -> BufferMask
drawOrExit :: IORef (Maybe (GL ()))
drawQueue :: Chan (GL ())
data Framebuffer
Framebuffer :: (IORef (V2 GLsizei)) -> GLO -> Framebuffer
data Renderbuffer a
Renderbuffer :: GLint -> GLenum -> (IORef (V2 GLsizei)) -> GLO -> Renderbuffer a
class Attachable a b
glAttachToFramebuffer :: Attachable a b => GLenum -> a b -> IORef (V2 GLsizei) -> GL ()
defaultFramebuffer :: Framebuffer
data Texture a
Texture :: GLenum -> (IORef Ktx) -> GLO -> Texture a
texture_2d :: Word32
texture_cube_map_positive_x :: Word32
texture_3d :: Word32
texture_2d_array :: Word32
texture_cube_map :: Word32
instance Show GLError
instance Num HalfFloat
instance Storable HalfFloat
instance Num FixedFloat
instance Storable FixedFloat
instance Num Int2_10x3
instance Storable Int2_10x3
instance Num Word2_10x3
instance Storable Word2_10x3
instance Num Word4444
instance Storable Word4444
instance Num Word5551
instance Storable Word5551
instance Num Word565
instance Storable Word565
instance Num Word10f11f11f
instance Storable Word10f11f11f
instance Num Word5999
instance Storable Word5999
instance Num Word24_8
instance Storable Word24_8
instance Show Shader
instance Show TransformFeedback
instance Show (Program p)
instance Show (Attrib p a)
instance Num BufferMask
instance VertexIx Word32
instance VertexIx Word16
instance VertexIx Word8
instance GLType FloatWord24_8
instance GLType Word24_8
instance GLType Word5999
instance GLType Word10f11f11f
instance GLType Word565
instance GLType Word5551
instance GLType Word4444
instance GLType Word2_10x3
instance GLType Int2_10x3
instance GLType FixedFloat
instance GLType HalfFloat
instance GLType Double
instance GLType Float
instance GLType Word32
instance GLType Int32
instance GLType Word16
instance GLType Int16
instance GLType Word8
instance GLType Int8
instance Show GLO


-- | OpenGL 4.5 Core Profile
--   <a>https://www.opengl.org/registry/api/GL/glcorearb.h</a>
module Graphics.OpenGL.CoreArb

-- | 64bit floating-point value
type GLdouble = Double
type GLuint64EXT = GLuint64
type GLDebugProc = GLenum -> GLenum -> GLuint -> GLenum -> GLsizei -> CString -> Ptr () -> GL ()
wrap_GLDebugProc :: GLDebugProc -> IO (FunPtr GLDebugProc)
unwrap_glCullFace :: FunPtr (GLenum -> GL ()) -> GLenum -> GL ()
glCullFace :: GLenum -> GL ()
unwrap_glFrontFace :: FunPtr (GLenum -> GL ()) -> GLenum -> GL ()
glFrontFace :: GLenum -> GL ()
unwrap_glHint :: FunPtr (GLenum -> GLenum -> GL ()) -> GLenum -> GLenum -> GL ()
glHint :: GLenum -> GLenum -> GL ()
unwrap_glLineWidth :: FunPtr (GLfloat -> GL ()) -> GLfloat -> GL ()
glLineWidth :: GLfloat -> GL ()
unwrap_glPointSize :: FunPtr (GLfloat -> GL ()) -> GLfloat -> GL ()
glPointSize :: GLfloat -> GL ()
unwrap_glPolygonMode :: FunPtr (GLenum -> GLenum -> GL ()) -> GLenum -> GLenum -> GL ()
glPolygonMode :: GLenum -> GLenum -> GL ()
unwrap_glScissor :: FunPtr (GLint -> GLint -> GLsizei -> GLsizei -> GL ()) -> GLint -> GLint -> GLsizei -> GLsizei -> GL ()
glScissor :: GLint -> GLint -> GLsizei -> GLsizei -> GL ()
unwrap_glTexParameterf :: FunPtr (GLenum -> GLenum -> GLfloat -> GL ()) -> GLenum -> GLenum -> GLfloat -> GL ()
glTexParameterf :: GLenum -> GLenum -> GLfloat -> GL ()
unwrap_glTexParameterfv :: FunPtr (GLenum -> GLenum -> Ptr GLfloat -> GL ()) -> GLenum -> GLenum -> Ptr GLfloat -> GL ()
glTexParameterfv :: GLenum -> GLenum -> Ptr GLfloat -> GL ()
unwrap_glTexParameteri :: FunPtr (GLenum -> GLenum -> GLint -> GL ()) -> GLenum -> GLenum -> GLint -> GL ()
glTexParameteri :: GLenum -> GLenum -> GLint -> GL ()
unwrap_glTexParameteriv :: FunPtr (GLenum -> GLenum -> Ptr GLint -> GL ()) -> GLenum -> GLenum -> Ptr GLint -> GL ()
glTexParameteriv :: GLenum -> GLenum -> Ptr GLint -> GL ()
unwrap_glTexImage1D :: FunPtr (GLenum -> GLint -> GLint -> GLsizei -> GLint -> GLenum -> GLenum -> Ptr () -> GL ()) -> GLenum -> GLint -> GLint -> GLsizei -> GLint -> GLenum -> GLenum -> Ptr () -> GL ()
glTexImage1D :: GLenum -> GLint -> GLint -> GLsizei -> GLint -> GLenum -> GLenum -> Ptr () -> GL ()
unwrap_glTexImage2D :: FunPtr (GLenum -> GLint -> GLint -> GLsizei -> GLsizei -> GLint -> GLenum -> GLenum -> Ptr () -> GL ()) -> GLenum -> GLint -> GLint -> GLsizei -> GLsizei -> GLint -> GLenum -> GLenum -> Ptr () -> GL ()
glTexImage2D :: GLenum -> GLint -> GLint -> GLsizei -> GLsizei -> GLint -> GLenum -> GLenum -> Ptr () -> GL ()
unwrap_glDrawBuffer :: FunPtr (GLenum -> GL ()) -> GLenum -> GL ()
glDrawBuffer :: GLenum -> GL ()
unwrap_glClear :: FunPtr (GLbitfield -> GL ()) -> GLbitfield -> GL ()
glClear :: GLbitfield -> GL ()
unwrap_glClearColor :: FunPtr (GLfloat -> GLfloat -> GLfloat -> GLfloat -> GL ()) -> GLfloat -> GLfloat -> GLfloat -> GLfloat -> GL ()
glClearColor :: GLfloat -> GLfloat -> GLfloat -> GLfloat -> GL ()
unwrap_glClearStencil :: FunPtr (GLint -> GL ()) -> GLint -> GL ()
glClearStencil :: GLint -> GL ()
unwrap_glClearDepth :: FunPtr (GLdouble -> GL ()) -> GLdouble -> GL ()
glClearDepth :: GLdouble -> GL ()
unwrap_glStencilMask :: FunPtr (GLuint -> GL ()) -> GLuint -> GL ()
glStencilMask :: GLuint -> GL ()
unwrap_glColorMask :: FunPtr (GLboolean -> GLboolean -> GLboolean -> GLboolean -> GL ()) -> GLboolean -> GLboolean -> GLboolean -> GLboolean -> GL ()
glColorMask :: GLboolean -> GLboolean -> GLboolean -> GLboolean -> GL ()
unwrap_glDepthMask :: FunPtr (GLboolean -> GL ()) -> GLboolean -> GL ()
glDepthMask :: GLboolean -> GL ()
unwrap_glDisable :: FunPtr (GLenum -> GL ()) -> GLenum -> GL ()
glDisable :: GLenum -> GL ()
unwrap_glEnable :: FunPtr (GLenum -> GL ()) -> GLenum -> GL ()
glEnable :: GLenum -> GL ()
unwrap_glFinish :: FunPtr (GL ()) -> GL ()
glFinish :: GL ()
unwrap_glFlush :: FunPtr (GL ()) -> GL ()
glFlush :: GL ()
unwrap_glBlendFunc :: FunPtr (GLenum -> GLenum -> GL ()) -> GLenum -> GLenum -> GL ()
glBlendFunc :: GLenum -> GLenum -> GL ()
unwrap_glLogicOp :: FunPtr (GLenum -> GL ()) -> GLenum -> GL ()
glLogicOp :: GLenum -> GL ()
unwrap_glStencilFunc :: FunPtr (GLenum -> GLint -> GLuint -> GL ()) -> GLenum -> GLint -> GLuint -> GL ()
glStencilFunc :: GLenum -> GLint -> GLuint -> GL ()
unwrap_glStencilOp :: FunPtr (GLenum -> GLenum -> GLenum -> GL ()) -> GLenum -> GLenum -> GLenum -> GL ()
glStencilOp :: GLenum -> GLenum -> GLenum -> GL ()
unwrap_glDepthFunc :: FunPtr (GLenum -> GL ()) -> GLenum -> GL ()
glDepthFunc :: GLenum -> GL ()
unwrap_glPixelStoref :: FunPtr (GLenum -> GLfloat -> GL ()) -> GLenum -> GLfloat -> GL ()
glPixelStoref :: GLenum -> GLfloat -> GL ()
unwrap_glPixelStorei :: FunPtr (GLenum -> GLint -> GL ()) -> GLenum -> GLint -> GL ()
glPixelStorei :: GLenum -> GLint -> GL ()
unwrap_glReadBuffer :: FunPtr (GLenum -> GL ()) -> GLenum -> GL ()
glReadBuffer :: GLenum -> GL ()
unwrap_glReadPixels :: FunPtr (GLint -> GLint -> GLsizei -> GLsizei -> GLenum -> GLenum -> Ptr () -> GL ()) -> GLint -> GLint -> GLsizei -> GLsizei -> GLenum -> GLenum -> Ptr () -> GL ()
glReadPixels :: GLint -> GLint -> GLsizei -> GLsizei -> GLenum -> GLenum -> Ptr () -> GL ()
unwrap_glGetBooleanv :: FunPtr (GLenum -> Ptr GLboolean -> GL ()) -> GLenum -> Ptr GLboolean -> GL ()
glGetBooleanv :: GLenum -> Ptr GLboolean -> GL ()
unwrap_glGetDoublev :: FunPtr (GLenum -> Ptr GLdouble -> GL ()) -> GLenum -> Ptr GLdouble -> GL ()
glGetDoublev :: GLenum -> Ptr GLdouble -> GL ()
unwrap_glGetError :: FunPtr (GL GLenum) -> GL GLenum
glGetError :: GL GLenum
unwrap_glGetFloatv :: FunPtr (GLenum -> Ptr GLfloat -> GL ()) -> GLenum -> Ptr GLfloat -> GL ()
glGetFloatv :: GLenum -> Ptr GLfloat -> GL ()
unwrap_glGetIntegerv :: FunPtr (GLenum -> Ptr GLint -> GL ()) -> GLenum -> Ptr GLint -> GL ()
glGetIntegerv :: GLenum -> Ptr GLint -> GL ()
unwrap_glGetString :: FunPtr (GLenum -> GL CString) -> GLenum -> GL CString
glGetString :: GLenum -> GL CString
unwrap_glGetTexImage :: FunPtr (GLenum -> GLint -> GLenum -> GLenum -> Ptr () -> GL ()) -> GLenum -> GLint -> GLenum -> GLenum -> Ptr () -> GL ()
glGetTexImage :: GLenum -> GLint -> GLenum -> GLenum -> Ptr () -> GL ()
unwrap_glGetTexParameterfv :: FunPtr (GLenum -> GLenum -> Ptr GLfloat -> GL ()) -> GLenum -> GLenum -> Ptr GLfloat -> GL ()
glGetTexParameterfv :: GLenum -> GLenum -> Ptr GLfloat -> GL ()
unwrap_glGetTexParameteriv :: FunPtr (GLenum -> GLenum -> Ptr GLint -> GL ()) -> GLenum -> GLenum -> Ptr GLint -> GL ()
glGetTexParameteriv :: GLenum -> GLenum -> Ptr GLint -> GL ()
unwrap_glGetTexLevelParameterfv :: FunPtr (GLenum -> GLint -> GLenum -> Ptr GLfloat -> GL ()) -> GLenum -> GLint -> GLenum -> Ptr GLfloat -> GL ()
glGetTexLevelParameterfv :: GLenum -> GLint -> GLenum -> Ptr GLfloat -> GL ()
unwrap_glGetTexLevelParameteriv :: FunPtr (GLenum -> GLint -> GLenum -> Ptr GLint -> GL ()) -> GLenum -> GLint -> GLenum -> Ptr GLint -> GL ()
glGetTexLevelParameteriv :: GLenum -> GLint -> GLenum -> Ptr GLint -> GL ()
unwrap_glIsEnabled :: FunPtr (GLenum -> GL GLboolean) -> GLenum -> GL GLboolean
glIsEnabled :: GLenum -> GL GLboolean
unwrap_glDepthRange :: FunPtr (GLdouble -> GLdouble -> GL ()) -> GLdouble -> GLdouble -> GL ()
glDepthRange :: GLdouble -> GLdouble -> GL ()
unwrap_glViewport :: FunPtr (GLint -> GLint -> GLsizei -> GLsizei -> GL ()) -> GLint -> GLint -> GLsizei -> GLsizei -> GL ()
glViewport :: GLint -> GLint -> GLsizei -> GLsizei -> GL ()
unwrap_glDrawArrays :: FunPtr (GLenum -> GLint -> GLsizei -> GL ()) -> GLenum -> GLint -> GLsizei -> GL ()
glDrawArrays :: GLenum -> GLint -> GLsizei -> GL ()
unwrap_glDrawElements :: FunPtr (GLenum -> GLsizei -> GLenum -> Ptr () -> GL ()) -> GLenum -> GLsizei -> GLenum -> Ptr () -> GL ()
glDrawElements :: GLenum -> GLsizei -> GLenum -> Ptr () -> GL ()
unwrap_glGetPointerv :: FunPtr (GLenum -> Ptr (Ptr ()) -> GL ()) -> GLenum -> Ptr (Ptr ()) -> GL ()
glGetPointerv :: GLenum -> Ptr (Ptr ()) -> GL ()
unwrap_glPolygonOffset :: FunPtr (GLfloat -> GLfloat -> GL ()) -> GLfloat -> GLfloat -> GL ()
glPolygonOffset :: GLfloat -> GLfloat -> GL ()
unwrap_glCopyTexImage1D :: FunPtr (GLenum -> GLint -> GLenum -> GLint -> GLint -> GLsizei -> GLint -> GL ()) -> GLenum -> GLint -> GLenum -> GLint -> GLint -> GLsizei -> GLint -> GL ()
glCopyTexImage1D :: GLenum -> GLint -> GLenum -> GLint -> GLint -> GLsizei -> GLint -> GL ()
unwrap_glCopyTexImage2D :: FunPtr (GLenum -> GLint -> GLenum -> GLint -> GLint -> GLsizei -> GLsizei -> GLint -> GL ()) -> GLenum -> GLint -> GLenum -> GLint -> GLint -> GLsizei -> GLsizei -> GLint -> GL ()
glCopyTexImage2D :: GLenum -> GLint -> GLenum -> GLint -> GLint -> GLsizei -> GLsizei -> GLint -> GL ()
unwrap_glCopyTexSubImage1D :: FunPtr (GLenum -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GL ()) -> GLenum -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GL ()
glCopyTexSubImage1D :: GLenum -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GL ()
unwrap_glCopyTexSubImage2D :: FunPtr (GLenum -> GLint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GL ()) -> GLenum -> GLint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GL ()
glCopyTexSubImage2D :: GLenum -> GLint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GL ()
unwrap_glTexSubImage1D :: FunPtr (GLenum -> GLint -> GLint -> GLsizei -> GLenum -> GLenum -> Ptr () -> GL ()) -> GLenum -> GLint -> GLint -> GLsizei -> GLenum -> GLenum -> Ptr () -> GL ()
glTexSubImage1D :: GLenum -> GLint -> GLint -> GLsizei -> GLenum -> GLenum -> Ptr () -> GL ()
unwrap_glTexSubImage2D :: FunPtr (GLenum -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLenum -> GLenum -> Ptr () -> GL ()) -> GLenum -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLenum -> GLenum -> Ptr () -> GL ()
glTexSubImage2D :: GLenum -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLenum -> GLenum -> Ptr () -> GL ()
unwrap_glBindTexture :: FunPtr (GLenum -> GLuint -> GL ()) -> GLenum -> GLuint -> GL ()
glBindTexture :: GLenum -> GLuint -> GL ()
unwrap_glDeleteTextures :: FunPtr (GLsizei -> Ptr GLuint -> GL ()) -> GLsizei -> Ptr GLuint -> GL ()
glDeleteTextures :: GLsizei -> Ptr GLuint -> GL ()
unwrap_glGenTextures :: FunPtr (GLsizei -> Ptr GLuint -> GL ()) -> GLsizei -> Ptr GLuint -> GL ()
glGenTextures :: GLsizei -> Ptr GLuint -> GL ()
unwrap_glIsTexture :: FunPtr (GLuint -> GL GLboolean) -> GLuint -> GL GLboolean
glIsTexture :: GLuint -> GL GLboolean
unwrap_glDrawRangeElements :: FunPtr (GLenum -> GLuint -> GLuint -> GLsizei -> GLenum -> Ptr () -> GL ()) -> GLenum -> GLuint -> GLuint -> GLsizei -> GLenum -> Ptr () -> GL ()
glDrawRangeElements :: GLenum -> GLuint -> GLuint -> GLsizei -> GLenum -> Ptr () -> GL ()
unwrap_glTexImage3D :: FunPtr (GLenum -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GLint -> GLenum -> GLenum -> Ptr () -> GL ()) -> GLenum -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GLint -> GLenum -> GLenum -> Ptr () -> GL ()
glTexImage3D :: GLenum -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GLint -> GLenum -> GLenum -> Ptr () -> GL ()
unwrap_glTexSubImage3D :: FunPtr (GLenum -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GLenum -> GLenum -> Ptr () -> GL ()) -> GLenum -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GLenum -> GLenum -> Ptr () -> GL ()
glTexSubImage3D :: GLenum -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GLenum -> GLenum -> Ptr () -> GL ()
unwrap_glCopyTexSubImage3D :: FunPtr (GLenum -> GLint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GL ()) -> GLenum -> GLint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GL ()
glCopyTexSubImage3D :: GLenum -> GLint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GL ()
unwrap_glActiveTexture :: FunPtr (GLenum -> GL ()) -> GLenum -> GL ()
glActiveTexture :: GLenum -> GL ()
unwrap_glSampleCoverage :: FunPtr (GLfloat -> GLboolean -> GL ()) -> GLfloat -> GLboolean -> GL ()
glSampleCoverage :: GLfloat -> GLboolean -> GL ()
unwrap_glCompressedTexImage3D :: FunPtr (GLenum -> GLint -> GLenum -> GLsizei -> GLsizei -> GLsizei -> GLint -> GLsizei -> Ptr () -> GL ()) -> GLenum -> GLint -> GLenum -> GLsizei -> GLsizei -> GLsizei -> GLint -> GLsizei -> Ptr () -> GL ()
glCompressedTexImage3D :: GLenum -> GLint -> GLenum -> GLsizei -> GLsizei -> GLsizei -> GLint -> GLsizei -> Ptr () -> GL ()
unwrap_glCompressedTexImage2D :: FunPtr (GLenum -> GLint -> GLenum -> GLsizei -> GLsizei -> GLint -> GLsizei -> Ptr () -> GL ()) -> GLenum -> GLint -> GLenum -> GLsizei -> GLsizei -> GLint -> GLsizei -> Ptr () -> GL ()
glCompressedTexImage2D :: GLenum -> GLint -> GLenum -> GLsizei -> GLsizei -> GLint -> GLsizei -> Ptr () -> GL ()
unwrap_glCompressedTexImage1D :: FunPtr (GLenum -> GLint -> GLenum -> GLsizei -> GLint -> GLsizei -> Ptr () -> GL ()) -> GLenum -> GLint -> GLenum -> GLsizei -> GLint -> GLsizei -> Ptr () -> GL ()
glCompressedTexImage1D :: GLenum -> GLint -> GLenum -> GLsizei -> GLint -> GLsizei -> Ptr () -> GL ()
unwrap_glCompressedTexSubImage3D :: FunPtr (GLenum -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GLenum -> GLsizei -> Ptr () -> GL ()) -> GLenum -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GLenum -> GLsizei -> Ptr () -> GL ()
glCompressedTexSubImage3D :: GLenum -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GLenum -> GLsizei -> Ptr () -> GL ()
unwrap_glCompressedTexSubImage2D :: FunPtr (GLenum -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLenum -> GLsizei -> Ptr () -> GL ()) -> GLenum -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLenum -> GLsizei -> Ptr () -> GL ()
glCompressedTexSubImage2D :: GLenum -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLenum -> GLsizei -> Ptr () -> GL ()
unwrap_glCompressedTexSubImage1D :: FunPtr (GLenum -> GLint -> GLint -> GLsizei -> GLenum -> GLsizei -> Ptr () -> GL ()) -> GLenum -> GLint -> GLint -> GLsizei -> GLenum -> GLsizei -> Ptr () -> GL ()
glCompressedTexSubImage1D :: GLenum -> GLint -> GLint -> GLsizei -> GLenum -> GLsizei -> Ptr () -> GL ()
unwrap_glGetCompressedTexImage :: FunPtr (GLenum -> GLint -> Ptr () -> GL ()) -> GLenum -> GLint -> Ptr () -> GL ()
glGetCompressedTexImage :: GLenum -> GLint -> Ptr () -> GL ()
unwrap_glBlendFuncSeparate :: FunPtr (GLenum -> GLenum -> GLenum -> GLenum -> GL ()) -> GLenum -> GLenum -> GLenum -> GLenum -> GL ()
glBlendFuncSeparate :: GLenum -> GLenum -> GLenum -> GLenum -> GL ()
unwrap_glMultiDrawArrays :: FunPtr (GLenum -> Ptr GLint -> Ptr GLsizei -> GLsizei -> GL ()) -> GLenum -> Ptr GLint -> Ptr GLsizei -> GLsizei -> GL ()
glMultiDrawArrays :: GLenum -> Ptr GLint -> Ptr GLsizei -> GLsizei -> GL ()
unwrap_glMultiDrawElements :: FunPtr (GLenum -> Ptr GLsizei -> GLenum -> Ptr (Ptr ()) -> GLsizei -> GL ()) -> GLenum -> Ptr GLsizei -> GLenum -> Ptr (Ptr ()) -> GLsizei -> GL ()
glMultiDrawElements :: GLenum -> Ptr GLsizei -> GLenum -> Ptr (Ptr ()) -> GLsizei -> GL ()
unwrap_glPointParameterf :: FunPtr (GLenum -> GLfloat -> GL ()) -> GLenum -> GLfloat -> GL ()
glPointParameterf :: GLenum -> GLfloat -> GL ()
unwrap_glPointParameterfv :: FunPtr (GLenum -> Ptr GLfloat -> GL ()) -> GLenum -> Ptr GLfloat -> GL ()
glPointParameterfv :: GLenum -> Ptr GLfloat -> GL ()
unwrap_glPointParameteri :: FunPtr (GLenum -> GLint -> GL ()) -> GLenum -> GLint -> GL ()
glPointParameteri :: GLenum -> GLint -> GL ()
unwrap_glPointParameteriv :: FunPtr (GLenum -> Ptr GLint -> GL ()) -> GLenum -> Ptr GLint -> GL ()
glPointParameteriv :: GLenum -> Ptr GLint -> GL ()
unwrap_glBlendColor :: FunPtr (GLfloat -> GLfloat -> GLfloat -> GLfloat -> GL ()) -> GLfloat -> GLfloat -> GLfloat -> GLfloat -> GL ()
glBlendColor :: GLfloat -> GLfloat -> GLfloat -> GLfloat -> GL ()
unwrap_glBlendEquation :: FunPtr (GLenum -> GL ()) -> GLenum -> GL ()
glBlendEquation :: GLenum -> GL ()
unwrap_glGenQueries :: FunPtr (GLsizei -> Ptr GLuint -> GL ()) -> GLsizei -> Ptr GLuint -> GL ()
glGenQueries :: GLsizei -> Ptr GLuint -> GL ()
unwrap_glDeleteQueries :: FunPtr (GLsizei -> Ptr GLuint -> GL ()) -> GLsizei -> Ptr GLuint -> GL ()
glDeleteQueries :: GLsizei -> Ptr GLuint -> GL ()
unwrap_glIsQuery :: FunPtr (GLuint -> GL GLboolean) -> GLuint -> GL GLboolean
glIsQuery :: GLuint -> GL GLboolean
unwrap_glBeginQuery :: FunPtr (GLenum -> GLuint -> GL ()) -> GLenum -> GLuint -> GL ()
glBeginQuery :: GLenum -> GLuint -> GL ()
unwrap_glEndQuery :: FunPtr (GLenum -> GL ()) -> GLenum -> GL ()
glEndQuery :: GLenum -> GL ()
unwrap_glGetQueryiv :: FunPtr (GLenum -> GLenum -> Ptr GLint -> GL ()) -> GLenum -> GLenum -> Ptr GLint -> GL ()
glGetQueryiv :: GLenum -> GLenum -> Ptr GLint -> GL ()
unwrap_glGetQueryObjectiv :: FunPtr (GLuint -> GLenum -> Ptr GLint -> GL ()) -> GLuint -> GLenum -> Ptr GLint -> GL ()
glGetQueryObjectiv :: GLuint -> GLenum -> Ptr GLint -> GL ()
unwrap_glGetQueryObjectuiv :: FunPtr (GLuint -> GLenum -> Ptr GLuint -> GL ()) -> GLuint -> GLenum -> Ptr GLuint -> GL ()
glGetQueryObjectuiv :: GLuint -> GLenum -> Ptr GLuint -> GL ()
unwrap_glBindBuffer :: FunPtr (GLenum -> GLuint -> GL ()) -> GLenum -> GLuint -> GL ()
glBindBuffer :: GLenum -> GLuint -> GL ()
unwrap_glDeleteBuffers :: FunPtr (GLsizei -> Ptr GLuint -> GL ()) -> GLsizei -> Ptr GLuint -> GL ()
glDeleteBuffers :: GLsizei -> Ptr GLuint -> GL ()
unwrap_glGenBuffers :: FunPtr (GLsizei -> Ptr GLuint -> GL ()) -> GLsizei -> Ptr GLuint -> GL ()
glGenBuffers :: GLsizei -> Ptr GLuint -> GL ()
unwrap_glIsBuffer :: FunPtr (GLuint -> GL GLboolean) -> GLuint -> GL GLboolean
glIsBuffer :: GLuint -> GL GLboolean
unwrap_glBufferData :: FunPtr (GLenum -> GLsizeiptr -> Ptr () -> GLenum -> GL ()) -> GLenum -> GLsizeiptr -> Ptr () -> GLenum -> GL ()
glBufferData :: GLenum -> GLsizeiptr -> Ptr () -> GLenum -> GL ()
unwrap_glBufferSubData :: FunPtr (GLenum -> GLintptr -> GLsizeiptr -> Ptr () -> GL ()) -> GLenum -> GLintptr -> GLsizeiptr -> Ptr () -> GL ()
glBufferSubData :: GLenum -> GLintptr -> GLsizeiptr -> Ptr () -> GL ()
unwrap_glGetBufferSubData :: FunPtr (GLenum -> GLintptr -> GLsizeiptr -> Ptr () -> GL ()) -> GLenum -> GLintptr -> GLsizeiptr -> Ptr () -> GL ()
glGetBufferSubData :: GLenum -> GLintptr -> GLsizeiptr -> Ptr () -> GL ()
unwrap_glMapBuffer :: FunPtr (GLenum -> GLenum -> GL (Ptr ())) -> GLenum -> GLenum -> GL (Ptr ())
glMapBuffer :: GLenum -> GLenum -> GL (Ptr ())
unwrap_glUnmapBuffer :: FunPtr (GLenum -> GL GLboolean) -> GLenum -> GL GLboolean
glUnmapBuffer :: GLenum -> GL GLboolean
unwrap_glGetBufferParameteriv :: FunPtr (GLenum -> GLenum -> Ptr GLint -> GL ()) -> GLenum -> GLenum -> Ptr GLint -> GL ()
glGetBufferParameteriv :: GLenum -> GLenum -> Ptr GLint -> GL ()
unwrap_glGetBufferPointerv :: FunPtr (GLenum -> GLenum -> Ptr (Ptr ()) -> GL ()) -> GLenum -> GLenum -> Ptr (Ptr ()) -> GL ()
glGetBufferPointerv :: GLenum -> GLenum -> Ptr (Ptr ()) -> GL ()
unwrap_glBlendEquationSeparate :: FunPtr (GLenum -> GLenum -> GL ()) -> GLenum -> GLenum -> GL ()
glBlendEquationSeparate :: GLenum -> GLenum -> GL ()
unwrap_glDrawBuffers :: FunPtr (GLsizei -> Ptr GLenum -> GL ()) -> GLsizei -> Ptr GLenum -> GL ()
glDrawBuffers :: GLsizei -> Ptr GLenum -> GL ()
unwrap_glStencilOpSeparate :: FunPtr (GLenum -> GLenum -> GLenum -> GLenum -> GL ()) -> GLenum -> GLenum -> GLenum -> GLenum -> GL ()
glStencilOpSeparate :: GLenum -> GLenum -> GLenum -> GLenum -> GL ()
unwrap_glStencilFuncSeparate :: FunPtr (GLenum -> GLenum -> GLint -> GLuint -> GL ()) -> GLenum -> GLenum -> GLint -> GLuint -> GL ()
glStencilFuncSeparate :: GLenum -> GLenum -> GLint -> GLuint -> GL ()
unwrap_glStencilMaskSeparate :: FunPtr (GLenum -> GLuint -> GL ()) -> GLenum -> GLuint -> GL ()
glStencilMaskSeparate :: GLenum -> GLuint -> GL ()
unwrap_glAttachShader :: FunPtr (GLuint -> GLuint -> GL ()) -> GLuint -> GLuint -> GL ()
glAttachShader :: GLuint -> GLuint -> GL ()
unwrap_glBindAttribLocation :: FunPtr (GLuint -> GLuint -> CString -> GL ()) -> GLuint -> GLuint -> CString -> GL ()
glBindAttribLocation :: GLuint -> GLuint -> CString -> GL ()
unwrap_glCompileShader :: FunPtr (GLuint -> GL ()) -> GLuint -> GL ()
glCompileShader :: GLuint -> GL ()
unwrap_glCreateProgram :: FunPtr (GL GLuint) -> GL GLuint
glCreateProgram :: GL GLuint
unwrap_glCreateShader :: FunPtr (GLenum -> GL GLuint) -> GLenum -> GL GLuint
glCreateShader :: GLenum -> GL GLuint
unwrap_glDeleteProgram :: FunPtr (GLuint -> GL ()) -> GLuint -> GL ()
glDeleteProgram :: GLuint -> GL ()
unwrap_glDeleteShader :: FunPtr (GLuint -> GL ()) -> GLuint -> GL ()
glDeleteShader :: GLuint -> GL ()
unwrap_glDetachShader :: FunPtr (GLuint -> GLuint -> GL ()) -> GLuint -> GLuint -> GL ()
glDetachShader :: GLuint -> GLuint -> GL ()
unwrap_glDisableVertexAttribArray :: FunPtr (GLuint -> GL ()) -> GLuint -> GL ()
glDisableVertexAttribArray :: GLuint -> GL ()
unwrap_glEnableVertexAttribArray :: FunPtr (GLuint -> GL ()) -> GLuint -> GL ()
glEnableVertexAttribArray :: GLuint -> GL ()
unwrap_glGetActiveAttrib :: FunPtr (GLuint -> GLuint -> GLsizei -> Ptr GLsizei -> Ptr GLint -> Ptr GLenum -> CString -> GL ()) -> GLuint -> GLuint -> GLsizei -> Ptr GLsizei -> Ptr GLint -> Ptr GLenum -> CString -> GL ()
glGetActiveAttrib :: GLuint -> GLuint -> GLsizei -> Ptr GLsizei -> Ptr GLint -> Ptr GLenum -> CString -> GL ()
unwrap_glGetActiveUniform :: FunPtr (GLuint -> GLuint -> GLsizei -> Ptr GLsizei -> Ptr GLint -> Ptr GLenum -> CString -> GL ()) -> GLuint -> GLuint -> GLsizei -> Ptr GLsizei -> Ptr GLint -> Ptr GLenum -> CString -> GL ()
glGetActiveUniform :: GLuint -> GLuint -> GLsizei -> Ptr GLsizei -> Ptr GLint -> Ptr GLenum -> CString -> GL ()
unwrap_glGetAttachedShaders :: FunPtr (GLuint -> GLsizei -> Ptr GLsizei -> Ptr GLuint -> GL ()) -> GLuint -> GLsizei -> Ptr GLsizei -> Ptr GLuint -> GL ()
glGetAttachedShaders :: GLuint -> GLsizei -> Ptr GLsizei -> Ptr GLuint -> GL ()
unwrap_glGetAttribLocation :: FunPtr (GLuint -> CString -> GL GLint) -> GLuint -> CString -> GL GLint
glGetAttribLocation :: GLuint -> CString -> GL GLint
unwrap_glGetProgramiv :: FunPtr (GLuint -> GLenum -> Ptr GLint -> GL ()) -> GLuint -> GLenum -> Ptr GLint -> GL ()
glGetProgramiv :: GLuint -> GLenum -> Ptr GLint -> GL ()
unwrap_glGetProgramInfoLog :: FunPtr (GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()) -> GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()
glGetProgramInfoLog :: GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()
unwrap_glGetShaderiv :: FunPtr (GLuint -> GLenum -> Ptr GLint -> GL ()) -> GLuint -> GLenum -> Ptr GLint -> GL ()
glGetShaderiv :: GLuint -> GLenum -> Ptr GLint -> GL ()
unwrap_glGetShaderInfoLog :: FunPtr (GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()) -> GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()
glGetShaderInfoLog :: GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()
unwrap_glGetShaderSource :: FunPtr (GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()) -> GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()
glGetShaderSource :: GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()
unwrap_glGetUniformLocation :: FunPtr (GLuint -> CString -> GL GLint) -> GLuint -> CString -> GL GLint
glGetUniformLocation :: GLuint -> CString -> GL GLint
unwrap_glGetUniformfv :: FunPtr (GLuint -> GLint -> Ptr GLfloat -> GL ()) -> GLuint -> GLint -> Ptr GLfloat -> GL ()
glGetUniformfv :: GLuint -> GLint -> Ptr GLfloat -> GL ()
unwrap_glGetUniformiv :: FunPtr (GLuint -> GLint -> Ptr GLint -> GL ()) -> GLuint -> GLint -> Ptr GLint -> GL ()
glGetUniformiv :: GLuint -> GLint -> Ptr GLint -> GL ()
unwrap_glGetVertexAttribdv :: FunPtr (GLuint -> GLenum -> Ptr GLdouble -> GL ()) -> GLuint -> GLenum -> Ptr GLdouble -> GL ()
glGetVertexAttribdv :: GLuint -> GLenum -> Ptr GLdouble -> GL ()
unwrap_glGetVertexAttribfv :: FunPtr (GLuint -> GLenum -> Ptr GLfloat -> GL ()) -> GLuint -> GLenum -> Ptr GLfloat -> GL ()
glGetVertexAttribfv :: GLuint -> GLenum -> Ptr GLfloat -> GL ()
unwrap_glGetVertexAttribiv :: FunPtr (GLuint -> GLenum -> Ptr GLint -> GL ()) -> GLuint -> GLenum -> Ptr GLint -> GL ()
glGetVertexAttribiv :: GLuint -> GLenum -> Ptr GLint -> GL ()
unwrap_glGetVertexAttribPointerv :: FunPtr (GLuint -> GLenum -> Ptr (Ptr ()) -> GL ()) -> GLuint -> GLenum -> Ptr (Ptr ()) -> GL ()
glGetVertexAttribPointerv :: GLuint -> GLenum -> Ptr (Ptr ()) -> GL ()
unwrap_glIsProgram :: FunPtr (GLuint -> GL GLboolean) -> GLuint -> GL GLboolean
glIsProgram :: GLuint -> GL GLboolean
unwrap_glIsShader :: FunPtr (GLuint -> GL GLboolean) -> GLuint -> GL GLboolean
glIsShader :: GLuint -> GL GLboolean
unwrap_glLinkProgram :: FunPtr (GLuint -> GL ()) -> GLuint -> GL ()
glLinkProgram :: GLuint -> GL ()
unwrap_glShaderSource :: FunPtr (GLuint -> GLsizei -> Ptr CString -> Ptr GLint -> GL ()) -> GLuint -> GLsizei -> Ptr CString -> Ptr GLint -> GL ()
glShaderSource :: GLuint -> GLsizei -> Ptr CString -> Ptr GLint -> GL ()
unwrap_glUseProgram :: FunPtr (GLuint -> GL ()) -> GLuint -> GL ()
glUseProgram :: GLuint -> GL ()
unwrap_glUniform1f :: FunPtr (GLint -> GLfloat -> GL ()) -> GLint -> GLfloat -> GL ()
glUniform1f :: GLint -> GLfloat -> GL ()
unwrap_glUniform2f :: FunPtr (GLint -> GLfloat -> GLfloat -> GL ()) -> GLint -> GLfloat -> GLfloat -> GL ()
glUniform2f :: GLint -> GLfloat -> GLfloat -> GL ()
unwrap_glUniform3f :: FunPtr (GLint -> GLfloat -> GLfloat -> GLfloat -> GL ()) -> GLint -> GLfloat -> GLfloat -> GLfloat -> GL ()
glUniform3f :: GLint -> GLfloat -> GLfloat -> GLfloat -> GL ()
unwrap_glUniform4f :: FunPtr (GLint -> GLfloat -> GLfloat -> GLfloat -> GLfloat -> GL ()) -> GLint -> GLfloat -> GLfloat -> GLfloat -> GLfloat -> GL ()
glUniform4f :: GLint -> GLfloat -> GLfloat -> GLfloat -> GLfloat -> GL ()
unwrap_glUniform1i :: FunPtr (GLint -> GLint -> GL ()) -> GLint -> GLint -> GL ()
glUniform1i :: GLint -> GLint -> GL ()
unwrap_glUniform2i :: FunPtr (GLint -> GLint -> GLint -> GL ()) -> GLint -> GLint -> GLint -> GL ()
glUniform2i :: GLint -> GLint -> GLint -> GL ()
unwrap_glUniform3i :: FunPtr (GLint -> GLint -> GLint -> GLint -> GL ()) -> GLint -> GLint -> GLint -> GLint -> GL ()
glUniform3i :: GLint -> GLint -> GLint -> GLint -> GL ()
unwrap_glUniform4i :: FunPtr (GLint -> GLint -> GLint -> GLint -> GLint -> GL ()) -> GLint -> GLint -> GLint -> GLint -> GLint -> GL ()
glUniform4i :: GLint -> GLint -> GLint -> GLint -> GLint -> GL ()
unwrap_glUniform1fv :: FunPtr (GLint -> GLsizei -> Ptr GLfloat -> GL ()) -> GLint -> GLsizei -> Ptr GLfloat -> GL ()
glUniform1fv :: GLint -> GLsizei -> Ptr GLfloat -> GL ()
unwrap_glUniform2fv :: FunPtr (GLint -> GLsizei -> Ptr GLfloat -> GL ()) -> GLint -> GLsizei -> Ptr GLfloat -> GL ()
glUniform2fv :: GLint -> GLsizei -> Ptr GLfloat -> GL ()
unwrap_glUniform3fv :: FunPtr (GLint -> GLsizei -> Ptr GLfloat -> GL ()) -> GLint -> GLsizei -> Ptr GLfloat -> GL ()
glUniform3fv :: GLint -> GLsizei -> Ptr GLfloat -> GL ()
unwrap_glUniform4fv :: FunPtr (GLint -> GLsizei -> Ptr GLfloat -> GL ()) -> GLint -> GLsizei -> Ptr GLfloat -> GL ()
glUniform4fv :: GLint -> GLsizei -> Ptr GLfloat -> GL ()
unwrap_glUniform1iv :: FunPtr (GLint -> GLsizei -> Ptr GLint -> GL ()) -> GLint -> GLsizei -> Ptr GLint -> GL ()
glUniform1iv :: GLint -> GLsizei -> Ptr GLint -> GL ()
unwrap_glUniform2iv :: FunPtr (GLint -> GLsizei -> Ptr GLint -> GL ()) -> GLint -> GLsizei -> Ptr GLint -> GL ()
glUniform2iv :: GLint -> GLsizei -> Ptr GLint -> GL ()
unwrap_glUniform3iv :: FunPtr (GLint -> GLsizei -> Ptr GLint -> GL ()) -> GLint -> GLsizei -> Ptr GLint -> GL ()
glUniform3iv :: GLint -> GLsizei -> Ptr GLint -> GL ()
unwrap_glUniform4iv :: FunPtr (GLint -> GLsizei -> Ptr GLint -> GL ()) -> GLint -> GLsizei -> Ptr GLint -> GL ()
glUniform4iv :: GLint -> GLsizei -> Ptr GLint -> GL ()
unwrap_glUniformMatrix2fv :: FunPtr (GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()) -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glUniformMatrix2fv :: GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
unwrap_glUniformMatrix3fv :: FunPtr (GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()) -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glUniformMatrix3fv :: GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
unwrap_glUniformMatrix4fv :: FunPtr (GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()) -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glUniformMatrix4fv :: GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
unwrap_glValidateProgram :: FunPtr (GLuint -> GL ()) -> GLuint -> GL ()
glValidateProgram :: GLuint -> GL ()
unwrap_glVertexAttrib1d :: FunPtr (GLuint -> GLdouble -> GL ()) -> GLuint -> GLdouble -> GL ()
glVertexAttrib1d :: GLuint -> GLdouble -> GL ()
unwrap_glVertexAttrib1dv :: FunPtr (GLuint -> Ptr GLdouble -> GL ()) -> GLuint -> Ptr GLdouble -> GL ()
glVertexAttrib1dv :: GLuint -> Ptr GLdouble -> GL ()
unwrap_glVertexAttrib1f :: FunPtr (GLuint -> GLfloat -> GL ()) -> GLuint -> GLfloat -> GL ()
glVertexAttrib1f :: GLuint -> GLfloat -> GL ()
unwrap_glVertexAttrib1fv :: FunPtr (GLuint -> Ptr GLfloat -> GL ()) -> GLuint -> Ptr GLfloat -> GL ()
glVertexAttrib1fv :: GLuint -> Ptr GLfloat -> GL ()
unwrap_glVertexAttrib1s :: FunPtr (GLuint -> GLshort -> GL ()) -> GLuint -> GLshort -> GL ()
glVertexAttrib1s :: GLuint -> GLshort -> GL ()
unwrap_glVertexAttrib1sv :: FunPtr (GLuint -> Ptr GLshort -> GL ()) -> GLuint -> Ptr GLshort -> GL ()
glVertexAttrib1sv :: GLuint -> Ptr GLshort -> GL ()
unwrap_glVertexAttrib2d :: FunPtr (GLuint -> GLdouble -> GLdouble -> GL ()) -> GLuint -> GLdouble -> GLdouble -> GL ()
glVertexAttrib2d :: GLuint -> GLdouble -> GLdouble -> GL ()
unwrap_glVertexAttrib2dv :: FunPtr (GLuint -> Ptr GLdouble -> GL ()) -> GLuint -> Ptr GLdouble -> GL ()
glVertexAttrib2dv :: GLuint -> Ptr GLdouble -> GL ()
unwrap_glVertexAttrib2f :: FunPtr (GLuint -> GLfloat -> GLfloat -> GL ()) -> GLuint -> GLfloat -> GLfloat -> GL ()
glVertexAttrib2f :: GLuint -> GLfloat -> GLfloat -> GL ()
unwrap_glVertexAttrib2fv :: FunPtr (GLuint -> Ptr GLfloat -> GL ()) -> GLuint -> Ptr GLfloat -> GL ()
glVertexAttrib2fv :: GLuint -> Ptr GLfloat -> GL ()
unwrap_glVertexAttrib2s :: FunPtr (GLuint -> GLshort -> GLshort -> GL ()) -> GLuint -> GLshort -> GLshort -> GL ()
glVertexAttrib2s :: GLuint -> GLshort -> GLshort -> GL ()
unwrap_glVertexAttrib2sv :: FunPtr (GLuint -> Ptr GLshort -> GL ()) -> GLuint -> Ptr GLshort -> GL ()
glVertexAttrib2sv :: GLuint -> Ptr GLshort -> GL ()
unwrap_glVertexAttrib3d :: FunPtr (GLuint -> GLdouble -> GLdouble -> GLdouble -> GL ()) -> GLuint -> GLdouble -> GLdouble -> GLdouble -> GL ()
glVertexAttrib3d :: GLuint -> GLdouble -> GLdouble -> GLdouble -> GL ()
unwrap_glVertexAttrib3dv :: FunPtr (GLuint -> Ptr GLdouble -> GL ()) -> GLuint -> Ptr GLdouble -> GL ()
glVertexAttrib3dv :: GLuint -> Ptr GLdouble -> GL ()
unwrap_glVertexAttrib3f :: FunPtr (GLuint -> GLfloat -> GLfloat -> GLfloat -> GL ()) -> GLuint -> GLfloat -> GLfloat -> GLfloat -> GL ()
glVertexAttrib3f :: GLuint -> GLfloat -> GLfloat -> GLfloat -> GL ()
unwrap_glVertexAttrib3fv :: FunPtr (GLuint -> Ptr GLfloat -> GL ()) -> GLuint -> Ptr GLfloat -> GL ()
glVertexAttrib3fv :: GLuint -> Ptr GLfloat -> GL ()
unwrap_glVertexAttrib3s :: FunPtr (GLuint -> GLshort -> GLshort -> GLshort -> GL ()) -> GLuint -> GLshort -> GLshort -> GLshort -> GL ()
glVertexAttrib3s :: GLuint -> GLshort -> GLshort -> GLshort -> GL ()
unwrap_glVertexAttrib3sv :: FunPtr (GLuint -> Ptr GLshort -> GL ()) -> GLuint -> Ptr GLshort -> GL ()
glVertexAttrib3sv :: GLuint -> Ptr GLshort -> GL ()
unwrap_glVertexAttrib4Nbv :: FunPtr (GLuint -> Ptr GLbyte -> GL ()) -> GLuint -> Ptr GLbyte -> GL ()
glVertexAttrib4Nbv :: GLuint -> Ptr GLbyte -> GL ()
unwrap_glVertexAttrib4Niv :: FunPtr (GLuint -> Ptr GLint -> GL ()) -> GLuint -> Ptr GLint -> GL ()
glVertexAttrib4Niv :: GLuint -> Ptr GLint -> GL ()
unwrap_glVertexAttrib4Nsv :: FunPtr (GLuint -> Ptr GLshort -> GL ()) -> GLuint -> Ptr GLshort -> GL ()
glVertexAttrib4Nsv :: GLuint -> Ptr GLshort -> GL ()
unwrap_glVertexAttrib4Nub :: FunPtr (GLuint -> GLubyte -> GLubyte -> GLubyte -> GLubyte -> GL ()) -> GLuint -> GLubyte -> GLubyte -> GLubyte -> GLubyte -> GL ()
glVertexAttrib4Nub :: GLuint -> GLubyte -> GLubyte -> GLubyte -> GLubyte -> GL ()
unwrap_glVertexAttrib4Nubv :: FunPtr (GLuint -> Ptr GLubyte -> GL ()) -> GLuint -> Ptr GLubyte -> GL ()
glVertexAttrib4Nubv :: GLuint -> Ptr GLubyte -> GL ()
unwrap_glVertexAttrib4Nuiv :: FunPtr (GLuint -> Ptr GLuint -> GL ()) -> GLuint -> Ptr GLuint -> GL ()
glVertexAttrib4Nuiv :: GLuint -> Ptr GLuint -> GL ()
unwrap_glVertexAttrib4Nusv :: FunPtr (GLuint -> Ptr GLushort -> GL ()) -> GLuint -> Ptr GLushort -> GL ()
glVertexAttrib4Nusv :: GLuint -> Ptr GLushort -> GL ()
unwrap_glVertexAttrib4bv :: FunPtr (GLuint -> Ptr GLbyte -> GL ()) -> GLuint -> Ptr GLbyte -> GL ()
glVertexAttrib4bv :: GLuint -> Ptr GLbyte -> GL ()
unwrap_glVertexAttrib4d :: FunPtr (GLuint -> GLdouble -> GLdouble -> GLdouble -> GLdouble -> GL ()) -> GLuint -> GLdouble -> GLdouble -> GLdouble -> GLdouble -> GL ()
glVertexAttrib4d :: GLuint -> GLdouble -> GLdouble -> GLdouble -> GLdouble -> GL ()
unwrap_glVertexAttrib4dv :: FunPtr (GLuint -> Ptr GLdouble -> GL ()) -> GLuint -> Ptr GLdouble -> GL ()
glVertexAttrib4dv :: GLuint -> Ptr GLdouble -> GL ()
unwrap_glVertexAttrib4f :: FunPtr (GLuint -> GLfloat -> GLfloat -> GLfloat -> GLfloat -> GL ()) -> GLuint -> GLfloat -> GLfloat -> GLfloat -> GLfloat -> GL ()
glVertexAttrib4f :: GLuint -> GLfloat -> GLfloat -> GLfloat -> GLfloat -> GL ()
unwrap_glVertexAttrib4fv :: FunPtr (GLuint -> Ptr GLfloat -> GL ()) -> GLuint -> Ptr GLfloat -> GL ()
glVertexAttrib4fv :: GLuint -> Ptr GLfloat -> GL ()
unwrap_glVertexAttrib4iv :: FunPtr (GLuint -> Ptr GLint -> GL ()) -> GLuint -> Ptr GLint -> GL ()
glVertexAttrib4iv :: GLuint -> Ptr GLint -> GL ()
unwrap_glVertexAttrib4s :: FunPtr (GLuint -> GLshort -> GLshort -> GLshort -> GLshort -> GL ()) -> GLuint -> GLshort -> GLshort -> GLshort -> GLshort -> GL ()
glVertexAttrib4s :: GLuint -> GLshort -> GLshort -> GLshort -> GLshort -> GL ()
unwrap_glVertexAttrib4sv :: FunPtr (GLuint -> Ptr GLshort -> GL ()) -> GLuint -> Ptr GLshort -> GL ()
glVertexAttrib4sv :: GLuint -> Ptr GLshort -> GL ()
unwrap_glVertexAttrib4ubv :: FunPtr (GLuint -> Ptr GLubyte -> GL ()) -> GLuint -> Ptr GLubyte -> GL ()
glVertexAttrib4ubv :: GLuint -> Ptr GLubyte -> GL ()
unwrap_glVertexAttrib4uiv :: FunPtr (GLuint -> Ptr GLuint -> GL ()) -> GLuint -> Ptr GLuint -> GL ()
glVertexAttrib4uiv :: GLuint -> Ptr GLuint -> GL ()
unwrap_glVertexAttrib4usv :: FunPtr (GLuint -> Ptr GLushort -> GL ()) -> GLuint -> Ptr GLushort -> GL ()
glVertexAttrib4usv :: GLuint -> Ptr GLushort -> GL ()
unwrap_glVertexAttribPointer :: FunPtr (GLuint -> GLint -> GLenum -> GLboolean -> GLsizei -> Ptr () -> GL ()) -> GLuint -> GLint -> GLenum -> GLboolean -> GLsizei -> Ptr () -> GL ()
glVertexAttribPointer :: GLuint -> GLint -> GLenum -> GLboolean -> GLsizei -> Ptr () -> GL ()
unwrap_glUniformMatrix2x3fv :: FunPtr (GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()) -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glUniformMatrix2x3fv :: GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
unwrap_glUniformMatrix3x2fv :: FunPtr (GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()) -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glUniformMatrix3x2fv :: GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
unwrap_glUniformMatrix2x4fv :: FunPtr (GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()) -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glUniformMatrix2x4fv :: GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
unwrap_glUniformMatrix4x2fv :: FunPtr (GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()) -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glUniformMatrix4x2fv :: GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
unwrap_glUniformMatrix3x4fv :: FunPtr (GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()) -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glUniformMatrix3x4fv :: GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
unwrap_glUniformMatrix4x3fv :: FunPtr (GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()) -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glUniformMatrix4x3fv :: GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
unwrap_glColorMaski :: FunPtr (GLuint -> GLboolean -> GLboolean -> GLboolean -> GLboolean -> GL ()) -> GLuint -> GLboolean -> GLboolean -> GLboolean -> GLboolean -> GL ()
glColorMaski :: GLuint -> GLboolean -> GLboolean -> GLboolean -> GLboolean -> GL ()
unwrap_glGetBooleani_v :: FunPtr (GLenum -> GLuint -> Ptr GLboolean -> GL ()) -> GLenum -> GLuint -> Ptr GLboolean -> GL ()
glGetBooleani_v :: GLenum -> GLuint -> Ptr GLboolean -> GL ()
unwrap_glGetIntegeri_v :: FunPtr (GLenum -> GLuint -> Ptr GLint -> GL ()) -> GLenum -> GLuint -> Ptr GLint -> GL ()
glGetIntegeri_v :: GLenum -> GLuint -> Ptr GLint -> GL ()
unwrap_glEnablei :: FunPtr (GLenum -> GLuint -> GL ()) -> GLenum -> GLuint -> GL ()
glEnablei :: GLenum -> GLuint -> GL ()
unwrap_glDisablei :: FunPtr (GLenum -> GLuint -> GL ()) -> GLenum -> GLuint -> GL ()
glDisablei :: GLenum -> GLuint -> GL ()
unwrap_glIsEnabledi :: FunPtr (GLenum -> GLuint -> GL GLboolean) -> GLenum -> GLuint -> GL GLboolean
glIsEnabledi :: GLenum -> GLuint -> GL GLboolean
unwrap_glBeginTransformFeedback :: FunPtr (GLenum -> GL ()) -> GLenum -> GL ()
glBeginTransformFeedback :: GLenum -> GL ()
unwrap_glEndTransformFeedback :: FunPtr (GL ()) -> GL ()
glEndTransformFeedback :: GL ()
unwrap_glBindBufferRange :: FunPtr (GLenum -> GLuint -> GLuint -> GLintptr -> GLsizeiptr -> GL ()) -> GLenum -> GLuint -> GLuint -> GLintptr -> GLsizeiptr -> GL ()
glBindBufferRange :: GLenum -> GLuint -> GLuint -> GLintptr -> GLsizeiptr -> GL ()
unwrap_glBindBufferBase :: FunPtr (GLenum -> GLuint -> GLuint -> GL ()) -> GLenum -> GLuint -> GLuint -> GL ()
glBindBufferBase :: GLenum -> GLuint -> GLuint -> GL ()
unwrap_glTransformFeedbackVaryings :: FunPtr (GLuint -> GLsizei -> Ptr CString -> GLenum -> GL ()) -> GLuint -> GLsizei -> Ptr CString -> GLenum -> GL ()
glTransformFeedbackVaryings :: GLuint -> GLsizei -> Ptr CString -> GLenum -> GL ()
unwrap_glGetTransformFeedbackVarying :: FunPtr (GLuint -> GLuint -> GLsizei -> Ptr GLsizei -> Ptr GLsizei -> Ptr GLenum -> CString -> GL ()) -> GLuint -> GLuint -> GLsizei -> Ptr GLsizei -> Ptr GLsizei -> Ptr GLenum -> CString -> GL ()
glGetTransformFeedbackVarying :: GLuint -> GLuint -> GLsizei -> Ptr GLsizei -> Ptr GLsizei -> Ptr GLenum -> CString -> GL ()
unwrap_glClampColor :: FunPtr (GLenum -> GLenum -> GL ()) -> GLenum -> GLenum -> GL ()
glClampColor :: GLenum -> GLenum -> GL ()
unwrap_glBeginConditionalRender :: FunPtr (GLuint -> GLenum -> GL ()) -> GLuint -> GLenum -> GL ()
glBeginConditionalRender :: GLuint -> GLenum -> GL ()
unwrap_glEndConditionalRender :: FunPtr (GL ()) -> GL ()
glEndConditionalRender :: GL ()
unwrap_glVertexAttribIPointer :: FunPtr (GLuint -> GLint -> GLenum -> GLsizei -> Ptr () -> GL ()) -> GLuint -> GLint -> GLenum -> GLsizei -> Ptr () -> GL ()
glVertexAttribIPointer :: GLuint -> GLint -> GLenum -> GLsizei -> Ptr () -> GL ()
unwrap_glGetVertexAttribIiv :: FunPtr (GLuint -> GLenum -> Ptr GLint -> GL ()) -> GLuint -> GLenum -> Ptr GLint -> GL ()
glGetVertexAttribIiv :: GLuint -> GLenum -> Ptr GLint -> GL ()
unwrap_glGetVertexAttribIuiv :: FunPtr (GLuint -> GLenum -> Ptr GLuint -> GL ()) -> GLuint -> GLenum -> Ptr GLuint -> GL ()
glGetVertexAttribIuiv :: GLuint -> GLenum -> Ptr GLuint -> GL ()
unwrap_glVertexAttribI1i :: FunPtr (GLuint -> GLint -> GL ()) -> GLuint -> GLint -> GL ()
glVertexAttribI1i :: GLuint -> GLint -> GL ()
unwrap_glVertexAttribI2i :: FunPtr (GLuint -> GLint -> GLint -> GL ()) -> GLuint -> GLint -> GLint -> GL ()
glVertexAttribI2i :: GLuint -> GLint -> GLint -> GL ()
unwrap_glVertexAttribI3i :: FunPtr (GLuint -> GLint -> GLint -> GLint -> GL ()) -> GLuint -> GLint -> GLint -> GLint -> GL ()
glVertexAttribI3i :: GLuint -> GLint -> GLint -> GLint -> GL ()
unwrap_glVertexAttribI4i :: FunPtr (GLuint -> GLint -> GLint -> GLint -> GLint -> GL ()) -> GLuint -> GLint -> GLint -> GLint -> GLint -> GL ()
glVertexAttribI4i :: GLuint -> GLint -> GLint -> GLint -> GLint -> GL ()
unwrap_glVertexAttribI1ui :: FunPtr (GLuint -> GLuint -> GL ()) -> GLuint -> GLuint -> GL ()
glVertexAttribI1ui :: GLuint -> GLuint -> GL ()
unwrap_glVertexAttribI2ui :: FunPtr (GLuint -> GLuint -> GLuint -> GL ()) -> GLuint -> GLuint -> GLuint -> GL ()
glVertexAttribI2ui :: GLuint -> GLuint -> GLuint -> GL ()
unwrap_glVertexAttribI3ui :: FunPtr (GLuint -> GLuint -> GLuint -> GLuint -> GL ()) -> GLuint -> GLuint -> GLuint -> GLuint -> GL ()
glVertexAttribI3ui :: GLuint -> GLuint -> GLuint -> GLuint -> GL ()
unwrap_glVertexAttribI4ui :: FunPtr (GLuint -> GLuint -> GLuint -> GLuint -> GLuint -> GL ()) -> GLuint -> GLuint -> GLuint -> GLuint -> GLuint -> GL ()
glVertexAttribI4ui :: GLuint -> GLuint -> GLuint -> GLuint -> GLuint -> GL ()
unwrap_glVertexAttribI1iv :: FunPtr (GLuint -> Ptr GLint -> GL ()) -> GLuint -> Ptr GLint -> GL ()
glVertexAttribI1iv :: GLuint -> Ptr GLint -> GL ()
unwrap_glVertexAttribI2iv :: FunPtr (GLuint -> Ptr GLint -> GL ()) -> GLuint -> Ptr GLint -> GL ()
glVertexAttribI2iv :: GLuint -> Ptr GLint -> GL ()
unwrap_glVertexAttribI3iv :: FunPtr (GLuint -> Ptr GLint -> GL ()) -> GLuint -> Ptr GLint -> GL ()
glVertexAttribI3iv :: GLuint -> Ptr GLint -> GL ()
unwrap_glVertexAttribI4iv :: FunPtr (GLuint -> Ptr GLint -> GL ()) -> GLuint -> Ptr GLint -> GL ()
glVertexAttribI4iv :: GLuint -> Ptr GLint -> GL ()
unwrap_glVertexAttribI1uiv :: FunPtr (GLuint -> Ptr GLuint -> GL ()) -> GLuint -> Ptr GLuint -> GL ()
glVertexAttribI1uiv :: GLuint -> Ptr GLuint -> GL ()
unwrap_glVertexAttribI2uiv :: FunPtr (GLuint -> Ptr GLuint -> GL ()) -> GLuint -> Ptr GLuint -> GL ()
glVertexAttribI2uiv :: GLuint -> Ptr GLuint -> GL ()
unwrap_glVertexAttribI3uiv :: FunPtr (GLuint -> Ptr GLuint -> GL ()) -> GLuint -> Ptr GLuint -> GL ()
glVertexAttribI3uiv :: GLuint -> Ptr GLuint -> GL ()
unwrap_glVertexAttribI4uiv :: FunPtr (GLuint -> Ptr GLuint -> GL ()) -> GLuint -> Ptr GLuint -> GL ()
glVertexAttribI4uiv :: GLuint -> Ptr GLuint -> GL ()
unwrap_glVertexAttribI4bv :: FunPtr (GLuint -> Ptr GLbyte -> GL ()) -> GLuint -> Ptr GLbyte -> GL ()
glVertexAttribI4bv :: GLuint -> Ptr GLbyte -> GL ()
unwrap_glVertexAttribI4sv :: FunPtr (GLuint -> Ptr GLshort -> GL ()) -> GLuint -> Ptr GLshort -> GL ()
glVertexAttribI4sv :: GLuint -> Ptr GLshort -> GL ()
unwrap_glVertexAttribI4ubv :: FunPtr (GLuint -> Ptr GLubyte -> GL ()) -> GLuint -> Ptr GLubyte -> GL ()
glVertexAttribI4ubv :: GLuint -> Ptr GLubyte -> GL ()
unwrap_glVertexAttribI4usv :: FunPtr (GLuint -> Ptr GLushort -> GL ()) -> GLuint -> Ptr GLushort -> GL ()
glVertexAttribI4usv :: GLuint -> Ptr GLushort -> GL ()
unwrap_glGetUniformuiv :: FunPtr (GLuint -> GLint -> Ptr GLuint -> GL ()) -> GLuint -> GLint -> Ptr GLuint -> GL ()
glGetUniformuiv :: GLuint -> GLint -> Ptr GLuint -> GL ()
unwrap_glBindFragDataLocation :: FunPtr (GLuint -> GLuint -> CString -> GL ()) -> GLuint -> GLuint -> CString -> GL ()
glBindFragDataLocation :: GLuint -> GLuint -> CString -> GL ()
unwrap_glGetFragDataLocation :: FunPtr (GLuint -> CString -> GL GLint) -> GLuint -> CString -> GL GLint
glGetFragDataLocation :: GLuint -> CString -> GL GLint
unwrap_glUniform1ui :: FunPtr (GLint -> GLuint -> GL ()) -> GLint -> GLuint -> GL ()
glUniform1ui :: GLint -> GLuint -> GL ()
unwrap_glUniform2ui :: FunPtr (GLint -> GLuint -> GLuint -> GL ()) -> GLint -> GLuint -> GLuint -> GL ()
glUniform2ui :: GLint -> GLuint -> GLuint -> GL ()
unwrap_glUniform3ui :: FunPtr (GLint -> GLuint -> GLuint -> GLuint -> GL ()) -> GLint -> GLuint -> GLuint -> GLuint -> GL ()
glUniform3ui :: GLint -> GLuint -> GLuint -> GLuint -> GL ()
unwrap_glUniform4ui :: FunPtr (GLint -> GLuint -> GLuint -> GLuint -> GLuint -> GL ()) -> GLint -> GLuint -> GLuint -> GLuint -> GLuint -> GL ()
glUniform4ui :: GLint -> GLuint -> GLuint -> GLuint -> GLuint -> GL ()
unwrap_glUniform1uiv :: FunPtr (GLint -> GLsizei -> Ptr GLuint -> GL ()) -> GLint -> GLsizei -> Ptr GLuint -> GL ()
glUniform1uiv :: GLint -> GLsizei -> Ptr GLuint -> GL ()
unwrap_glUniform2uiv :: FunPtr (GLint -> GLsizei -> Ptr GLuint -> GL ()) -> GLint -> GLsizei -> Ptr GLuint -> GL ()
glUniform2uiv :: GLint -> GLsizei -> Ptr GLuint -> GL ()
unwrap_glUniform3uiv :: FunPtr (GLint -> GLsizei -> Ptr GLuint -> GL ()) -> GLint -> GLsizei -> Ptr GLuint -> GL ()
glUniform3uiv :: GLint -> GLsizei -> Ptr GLuint -> GL ()
unwrap_glUniform4uiv :: FunPtr (GLint -> GLsizei -> Ptr GLuint -> GL ()) -> GLint -> GLsizei -> Ptr GLuint -> GL ()
glUniform4uiv :: GLint -> GLsizei -> Ptr GLuint -> GL ()
unwrap_glTexParameterIiv :: FunPtr (GLenum -> GLenum -> Ptr GLint -> GL ()) -> GLenum -> GLenum -> Ptr GLint -> GL ()
glTexParameterIiv :: GLenum -> GLenum -> Ptr GLint -> GL ()
unwrap_glTexParameterIuiv :: FunPtr (GLenum -> GLenum -> Ptr GLuint -> GL ()) -> GLenum -> GLenum -> Ptr GLuint -> GL ()
glTexParameterIuiv :: GLenum -> GLenum -> Ptr GLuint -> GL ()
unwrap_glGetTexParameterIiv :: FunPtr (GLenum -> GLenum -> Ptr GLint -> GL ()) -> GLenum -> GLenum -> Ptr GLint -> GL ()
glGetTexParameterIiv :: GLenum -> GLenum -> Ptr GLint -> GL ()
unwrap_glGetTexParameterIuiv :: FunPtr (GLenum -> GLenum -> Ptr GLuint -> GL ()) -> GLenum -> GLenum -> Ptr GLuint -> GL ()
glGetTexParameterIuiv :: GLenum -> GLenum -> Ptr GLuint -> GL ()
unwrap_glClearBufferiv :: FunPtr (GLenum -> GLint -> Ptr GLint -> GL ()) -> GLenum -> GLint -> Ptr GLint -> GL ()
glClearBufferiv :: GLenum -> GLint -> Ptr GLint -> GL ()
unwrap_glClearBufferuiv :: FunPtr (GLenum -> GLint -> Ptr GLuint -> GL ()) -> GLenum -> GLint -> Ptr GLuint -> GL ()
glClearBufferuiv :: GLenum -> GLint -> Ptr GLuint -> GL ()
unwrap_glClearBufferfv :: FunPtr (GLenum -> GLint -> Ptr GLfloat -> GL ()) -> GLenum -> GLint -> Ptr GLfloat -> GL ()
glClearBufferfv :: GLenum -> GLint -> Ptr GLfloat -> GL ()
unwrap_glClearBufferfi :: FunPtr (GLenum -> GLint -> GLfloat -> GLint -> GL ()) -> GLenum -> GLint -> GLfloat -> GLint -> GL ()
glClearBufferfi :: GLenum -> GLint -> GLfloat -> GLint -> GL ()
unwrap_glGetStringi :: FunPtr (GLenum -> GLuint -> GL CString) -> GLenum -> GLuint -> GL CString
glGetStringi :: GLenum -> GLuint -> GL CString
unwrap_glIsRenderbuffer :: FunPtr (GLuint -> GL GLboolean) -> GLuint -> GL GLboolean
glIsRenderbuffer :: GLuint -> GL GLboolean
unwrap_glBindRenderbuffer :: FunPtr (GLenum -> GLuint -> GL ()) -> GLenum -> GLuint -> GL ()
glBindRenderbuffer :: GLenum -> GLuint -> GL ()
unwrap_glDeleteRenderbuffers :: FunPtr (GLsizei -> Ptr GLuint -> GL ()) -> GLsizei -> Ptr GLuint -> GL ()
glDeleteRenderbuffers :: GLsizei -> Ptr GLuint -> GL ()
unwrap_glGenRenderbuffers :: FunPtr (GLsizei -> Ptr GLuint -> GL ()) -> GLsizei -> Ptr GLuint -> GL ()
glGenRenderbuffers :: GLsizei -> Ptr GLuint -> GL ()
unwrap_glRenderbufferStorage :: FunPtr (GLenum -> GLenum -> GLsizei -> GLsizei -> GL ()) -> GLenum -> GLenum -> GLsizei -> GLsizei -> GL ()
glRenderbufferStorage :: GLenum -> GLenum -> GLsizei -> GLsizei -> GL ()
unwrap_glGetRenderbufferParameteriv :: FunPtr (GLenum -> GLenum -> Ptr GLint -> GL ()) -> GLenum -> GLenum -> Ptr GLint -> GL ()
glGetRenderbufferParameteriv :: GLenum -> GLenum -> Ptr GLint -> GL ()
unwrap_glIsFramebuffer :: FunPtr (GLuint -> GL GLboolean) -> GLuint -> GL GLboolean
glIsFramebuffer :: GLuint -> GL GLboolean
unwrap_glBindFramebuffer :: FunPtr (GLenum -> GLuint -> GL ()) -> GLenum -> GLuint -> GL ()
glBindFramebuffer :: GLenum -> GLuint -> GL ()
unwrap_glDeleteFramebuffers :: FunPtr (GLsizei -> Ptr GLuint -> GL ()) -> GLsizei -> Ptr GLuint -> GL ()
glDeleteFramebuffers :: GLsizei -> Ptr GLuint -> GL ()
unwrap_glGenFramebuffers :: FunPtr (GLsizei -> Ptr GLuint -> GL ()) -> GLsizei -> Ptr GLuint -> GL ()
glGenFramebuffers :: GLsizei -> Ptr GLuint -> GL ()
unwrap_glCheckFramebufferStatus :: FunPtr (GLenum -> GL GLenum) -> GLenum -> GL GLenum
glCheckFramebufferStatus :: GLenum -> GL GLenum
unwrap_glFramebufferTexture1D :: FunPtr (GLenum -> GLenum -> GLenum -> GLuint -> GLint -> GL ()) -> GLenum -> GLenum -> GLenum -> GLuint -> GLint -> GL ()
glFramebufferTexture1D :: GLenum -> GLenum -> GLenum -> GLuint -> GLint -> GL ()
unwrap_glFramebufferTexture2D :: FunPtr (GLenum -> GLenum -> GLenum -> GLuint -> GLint -> GL ()) -> GLenum -> GLenum -> GLenum -> GLuint -> GLint -> GL ()
glFramebufferTexture2D :: GLenum -> GLenum -> GLenum -> GLuint -> GLint -> GL ()
unwrap_glFramebufferTexture3D :: FunPtr (GLenum -> GLenum -> GLenum -> GLuint -> GLint -> GLint -> GL ()) -> GLenum -> GLenum -> GLenum -> GLuint -> GLint -> GLint -> GL ()
glFramebufferTexture3D :: GLenum -> GLenum -> GLenum -> GLuint -> GLint -> GLint -> GL ()
unwrap_glFramebufferRenderbuffer :: FunPtr (GLenum -> GLenum -> GLenum -> GLuint -> GL ()) -> GLenum -> GLenum -> GLenum -> GLuint -> GL ()
glFramebufferRenderbuffer :: GLenum -> GLenum -> GLenum -> GLuint -> GL ()
unwrap_glGetFramebufferAttachmentParameteriv :: FunPtr (GLenum -> GLenum -> GLenum -> Ptr GLint -> GL ()) -> GLenum -> GLenum -> GLenum -> Ptr GLint -> GL ()
glGetFramebufferAttachmentParameteriv :: GLenum -> GLenum -> GLenum -> Ptr GLint -> GL ()
unwrap_glGenerateMipmap :: FunPtr (GLenum -> GL ()) -> GLenum -> GL ()
glGenerateMipmap :: GLenum -> GL ()
unwrap_glBlitFramebuffer :: FunPtr (GLint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLbitfield -> GLenum -> GL ()) -> GLint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLbitfield -> GLenum -> GL ()
glBlitFramebuffer :: GLint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLbitfield -> GLenum -> GL ()
unwrap_glRenderbufferStorageMultisample :: FunPtr (GLenum -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GL ()) -> GLenum -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GL ()
glRenderbufferStorageMultisample :: GLenum -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GL ()
unwrap_glFramebufferTextureLayer :: FunPtr (GLenum -> GLenum -> GLuint -> GLint -> GLint -> GL ()) -> GLenum -> GLenum -> GLuint -> GLint -> GLint -> GL ()
glFramebufferTextureLayer :: GLenum -> GLenum -> GLuint -> GLint -> GLint -> GL ()
unwrap_glMapBufferRange :: FunPtr (GLenum -> GLintptr -> GLsizeiptr -> GLbitfield -> GL (Ptr ())) -> GLenum -> GLintptr -> GLsizeiptr -> GLbitfield -> GL (Ptr ())
glMapBufferRange :: GLenum -> GLintptr -> GLsizeiptr -> GLbitfield -> GL (Ptr ())
unwrap_glFlushMappedBufferRange :: FunPtr (GLenum -> GLintptr -> GLsizeiptr -> GL ()) -> GLenum -> GLintptr -> GLsizeiptr -> GL ()
glFlushMappedBufferRange :: GLenum -> GLintptr -> GLsizeiptr -> GL ()
unwrap_glBindVertexArray :: FunPtr (GLuint -> GL ()) -> GLuint -> GL ()
glBindVertexArray :: GLuint -> GL ()
unwrap_glDeleteVertexArrays :: FunPtr (GLsizei -> Ptr GLuint -> GL ()) -> GLsizei -> Ptr GLuint -> GL ()
glDeleteVertexArrays :: GLsizei -> Ptr GLuint -> GL ()
unwrap_glGenVertexArrays :: FunPtr (GLsizei -> Ptr GLuint -> GL ()) -> GLsizei -> Ptr GLuint -> GL ()
glGenVertexArrays :: GLsizei -> Ptr GLuint -> GL ()
unwrap_glIsVertexArray :: FunPtr (GLuint -> GL GLboolean) -> GLuint -> GL GLboolean
glIsVertexArray :: GLuint -> GL GLboolean
unwrap_glDrawArraysInstanced :: FunPtr (GLenum -> GLint -> GLsizei -> GLsizei -> GL ()) -> GLenum -> GLint -> GLsizei -> GLsizei -> GL ()
glDrawArraysInstanced :: GLenum -> GLint -> GLsizei -> GLsizei -> GL ()
unwrap_glDrawElementsInstanced :: FunPtr (GLenum -> GLsizei -> GLenum -> Ptr () -> GLsizei -> GL ()) -> GLenum -> GLsizei -> GLenum -> Ptr () -> GLsizei -> GL ()
glDrawElementsInstanced :: GLenum -> GLsizei -> GLenum -> Ptr () -> GLsizei -> GL ()
unwrap_glTexBuffer :: FunPtr (GLenum -> GLenum -> GLuint -> GL ()) -> GLenum -> GLenum -> GLuint -> GL ()
glTexBuffer :: GLenum -> GLenum -> GLuint -> GL ()
unwrap_glPrimitiveRestartIndex :: FunPtr (GLuint -> GL ()) -> GLuint -> GL ()
glPrimitiveRestartIndex :: GLuint -> GL ()
unwrap_glCopyBufferSubData :: FunPtr (GLenum -> GLenum -> GLintptr -> GLintptr -> GLsizeiptr -> GL ()) -> GLenum -> GLenum -> GLintptr -> GLintptr -> GLsizeiptr -> GL ()
glCopyBufferSubData :: GLenum -> GLenum -> GLintptr -> GLintptr -> GLsizeiptr -> GL ()
unwrap_glGetUniformIndices :: FunPtr (GLuint -> GLsizei -> Ptr CString -> Ptr GLuint -> GL ()) -> GLuint -> GLsizei -> Ptr CString -> Ptr GLuint -> GL ()
glGetUniformIndices :: GLuint -> GLsizei -> Ptr CString -> Ptr GLuint -> GL ()
unwrap_glGetActiveUniformsiv :: FunPtr (GLuint -> GLsizei -> Ptr GLuint -> GLenum -> Ptr GLint -> GL ()) -> GLuint -> GLsizei -> Ptr GLuint -> GLenum -> Ptr GLint -> GL ()
glGetActiveUniformsiv :: GLuint -> GLsizei -> Ptr GLuint -> GLenum -> Ptr GLint -> GL ()
unwrap_glGetActiveUniformName :: FunPtr (GLuint -> GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()) -> GLuint -> GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()
glGetActiveUniformName :: GLuint -> GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()
unwrap_glGetUniformBlockIndex :: FunPtr (GLuint -> CString -> GL GLuint) -> GLuint -> CString -> GL GLuint
glGetUniformBlockIndex :: GLuint -> CString -> GL GLuint
unwrap_glGetActiveUniformBlockiv :: FunPtr (GLuint -> GLuint -> GLenum -> Ptr GLint -> GL ()) -> GLuint -> GLuint -> GLenum -> Ptr GLint -> GL ()
glGetActiveUniformBlockiv :: GLuint -> GLuint -> GLenum -> Ptr GLint -> GL ()
unwrap_glGetActiveUniformBlockName :: FunPtr (GLuint -> GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()) -> GLuint -> GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()
glGetActiveUniformBlockName :: GLuint -> GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()
unwrap_glUniformBlockBinding :: FunPtr (GLuint -> GLuint -> GLuint -> GL ()) -> GLuint -> GLuint -> GLuint -> GL ()
glUniformBlockBinding :: GLuint -> GLuint -> GLuint -> GL ()
unwrap_glDrawElementsBaseVertex :: FunPtr (GLenum -> GLsizei -> GLenum -> Ptr () -> GLint -> GL ()) -> GLenum -> GLsizei -> GLenum -> Ptr () -> GLint -> GL ()
glDrawElementsBaseVertex :: GLenum -> GLsizei -> GLenum -> Ptr () -> GLint -> GL ()
unwrap_glDrawRangeElementsBaseVertex :: FunPtr (GLenum -> GLuint -> GLuint -> GLsizei -> GLenum -> Ptr () -> GLint -> GL ()) -> GLenum -> GLuint -> GLuint -> GLsizei -> GLenum -> Ptr () -> GLint -> GL ()
glDrawRangeElementsBaseVertex :: GLenum -> GLuint -> GLuint -> GLsizei -> GLenum -> Ptr () -> GLint -> GL ()
unwrap_glDrawElementsInstancedBaseVertex :: FunPtr (GLenum -> GLsizei -> GLenum -> Ptr () -> GLsizei -> GLint -> GL ()) -> GLenum -> GLsizei -> GLenum -> Ptr () -> GLsizei -> GLint -> GL ()
glDrawElementsInstancedBaseVertex :: GLenum -> GLsizei -> GLenum -> Ptr () -> GLsizei -> GLint -> GL ()
unwrap_glMultiDrawElementsBaseVertex :: FunPtr (GLenum -> Ptr GLsizei -> GLenum -> Ptr (Ptr ()) -> GLsizei -> Ptr GLint -> GL ()) -> GLenum -> Ptr GLsizei -> GLenum -> Ptr (Ptr ()) -> GLsizei -> Ptr GLint -> GL ()
glMultiDrawElementsBaseVertex :: GLenum -> Ptr GLsizei -> GLenum -> Ptr (Ptr ()) -> GLsizei -> Ptr GLint -> GL ()
unwrap_glProvokingVertex :: FunPtr (GLenum -> GL ()) -> GLenum -> GL ()
glProvokingVertex :: GLenum -> GL ()
unwrap_glFenceSync :: FunPtr (GLenum -> GLbitfield -> GL GLsync) -> GLenum -> GLbitfield -> GL GLsync
glFenceSync :: GLenum -> GLbitfield -> GL GLsync
unwrap_glIsSync :: FunPtr (GLsync -> GL GLboolean) -> GLsync -> GL GLboolean
glIsSync :: GLsync -> GL GLboolean
unwrap_glDeleteSync :: FunPtr (GLsync -> GL ()) -> GLsync -> GL ()
glDeleteSync :: GLsync -> GL ()
unwrap_glClientWaitSync :: FunPtr (GLsync -> GLbitfield -> GLuint64 -> GL GLenum) -> GLsync -> GLbitfield -> GLuint64 -> GL GLenum
glClientWaitSync :: GLsync -> GLbitfield -> GLuint64 -> GL GLenum
unwrap_glWaitSync :: FunPtr (GLsync -> GLbitfield -> GLuint64 -> GL ()) -> GLsync -> GLbitfield -> GLuint64 -> GL ()
glWaitSync :: GLsync -> GLbitfield -> GLuint64 -> GL ()
unwrap_glGetInteger64v :: FunPtr (GLenum -> Ptr GLint64 -> GL ()) -> GLenum -> Ptr GLint64 -> GL ()
glGetInteger64v :: GLenum -> Ptr GLint64 -> GL ()
unwrap_glGetSynciv :: FunPtr (GLsync -> GLenum -> GLsizei -> Ptr GLsizei -> Ptr GLint -> GL ()) -> GLsync -> GLenum -> GLsizei -> Ptr GLsizei -> Ptr GLint -> GL ()
glGetSynciv :: GLsync -> GLenum -> GLsizei -> Ptr GLsizei -> Ptr GLint -> GL ()
unwrap_glGetInteger64i_v :: FunPtr (GLenum -> GLuint -> Ptr GLint64 -> GL ()) -> GLenum -> GLuint -> Ptr GLint64 -> GL ()
glGetInteger64i_v :: GLenum -> GLuint -> Ptr GLint64 -> GL ()
unwrap_glGetBufferParameteri64v :: FunPtr (GLenum -> GLenum -> Ptr GLint64 -> GL ()) -> GLenum -> GLenum -> Ptr GLint64 -> GL ()
glGetBufferParameteri64v :: GLenum -> GLenum -> Ptr GLint64 -> GL ()
unwrap_glFramebufferTexture :: FunPtr (GLenum -> GLenum -> GLuint -> GLint -> GL ()) -> GLenum -> GLenum -> GLuint -> GLint -> GL ()
glFramebufferTexture :: GLenum -> GLenum -> GLuint -> GLint -> GL ()
unwrap_glTexImage2DMultisample :: FunPtr (GLenum -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GLboolean -> GL ()) -> GLenum -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GLboolean -> GL ()
glTexImage2DMultisample :: GLenum -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GLboolean -> GL ()
unwrap_glTexImage3DMultisample :: FunPtr (GLenum -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GLsizei -> GLboolean -> GL ()) -> GLenum -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GLsizei -> GLboolean -> GL ()
glTexImage3DMultisample :: GLenum -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GLsizei -> GLboolean -> GL ()
unwrap_glGetMultisamplefv :: FunPtr (GLenum -> GLuint -> Ptr GLfloat -> GL ()) -> GLenum -> GLuint -> Ptr GLfloat -> GL ()
glGetMultisamplefv :: GLenum -> GLuint -> Ptr GLfloat -> GL ()
unwrap_glSampleMaski :: FunPtr (GLuint -> GLbitfield -> GL ()) -> GLuint -> GLbitfield -> GL ()
glSampleMaski :: GLuint -> GLbitfield -> GL ()
unwrap_glBindFragDataLocationIndexed :: FunPtr (GLuint -> GLuint -> GLuint -> CString -> GL ()) -> GLuint -> GLuint -> GLuint -> CString -> GL ()
glBindFragDataLocationIndexed :: GLuint -> GLuint -> GLuint -> CString -> GL ()
unwrap_glGetFragDataIndex :: FunPtr (GLuint -> CString -> GL GLint) -> GLuint -> CString -> GL GLint
glGetFragDataIndex :: GLuint -> CString -> GL GLint
unwrap_glGenSamplers :: FunPtr (GLsizei -> Ptr GLuint -> GL ()) -> GLsizei -> Ptr GLuint -> GL ()
glGenSamplers :: GLsizei -> Ptr GLuint -> GL ()
unwrap_glDeleteSamplers :: FunPtr (GLsizei -> Ptr GLuint -> GL ()) -> GLsizei -> Ptr GLuint -> GL ()
glDeleteSamplers :: GLsizei -> Ptr GLuint -> GL ()
unwrap_glIsSampler :: FunPtr (GLuint -> GL GLboolean) -> GLuint -> GL GLboolean
glIsSampler :: GLuint -> GL GLboolean
unwrap_glBindSampler :: FunPtr (GLuint -> GLuint -> GL ()) -> GLuint -> GLuint -> GL ()
glBindSampler :: GLuint -> GLuint -> GL ()
unwrap_glSamplerParameteri :: FunPtr (GLuint -> GLenum -> GLint -> GL ()) -> GLuint -> GLenum -> GLint -> GL ()
glSamplerParameteri :: GLuint -> GLenum -> GLint -> GL ()
unwrap_glSamplerParameteriv :: FunPtr (GLuint -> GLenum -> Ptr GLint -> GL ()) -> GLuint -> GLenum -> Ptr GLint -> GL ()
glSamplerParameteriv :: GLuint -> GLenum -> Ptr GLint -> GL ()
unwrap_glSamplerParameterf :: FunPtr (GLuint -> GLenum -> GLfloat -> GL ()) -> GLuint -> GLenum -> GLfloat -> GL ()
glSamplerParameterf :: GLuint -> GLenum -> GLfloat -> GL ()
unwrap_glSamplerParameterfv :: FunPtr (GLuint -> GLenum -> Ptr GLfloat -> GL ()) -> GLuint -> GLenum -> Ptr GLfloat -> GL ()
glSamplerParameterfv :: GLuint -> GLenum -> Ptr GLfloat -> GL ()
unwrap_glSamplerParameterIiv :: FunPtr (GLuint -> GLenum -> Ptr GLint -> GL ()) -> GLuint -> GLenum -> Ptr GLint -> GL ()
glSamplerParameterIiv :: GLuint -> GLenum -> Ptr GLint -> GL ()
unwrap_glSamplerParameterIuiv :: FunPtr (GLuint -> GLenum -> Ptr GLuint -> GL ()) -> GLuint -> GLenum -> Ptr GLuint -> GL ()
glSamplerParameterIuiv :: GLuint -> GLenum -> Ptr GLuint -> GL ()
unwrap_glGetSamplerParameteriv :: FunPtr (GLuint -> GLenum -> Ptr GLint -> GL ()) -> GLuint -> GLenum -> Ptr GLint -> GL ()
glGetSamplerParameteriv :: GLuint -> GLenum -> Ptr GLint -> GL ()
unwrap_glGetSamplerParameterIiv :: FunPtr (GLuint -> GLenum -> Ptr GLint -> GL ()) -> GLuint -> GLenum -> Ptr GLint -> GL ()
glGetSamplerParameterIiv :: GLuint -> GLenum -> Ptr GLint -> GL ()
unwrap_glGetSamplerParameterfv :: FunPtr (GLuint -> GLenum -> Ptr GLfloat -> GL ()) -> GLuint -> GLenum -> Ptr GLfloat -> GL ()
glGetSamplerParameterfv :: GLuint -> GLenum -> Ptr GLfloat -> GL ()
unwrap_glGetSamplerParameterIuiv :: FunPtr (GLuint -> GLenum -> Ptr GLuint -> GL ()) -> GLuint -> GLenum -> Ptr GLuint -> GL ()
glGetSamplerParameterIuiv :: GLuint -> GLenum -> Ptr GLuint -> GL ()
unwrap_glQueryCounter :: FunPtr (GLuint -> GLenum -> GL ()) -> GLuint -> GLenum -> GL ()
glQueryCounter :: GLuint -> GLenum -> GL ()
unwrap_glGetQueryObjecti64v :: FunPtr (GLuint -> GLenum -> Ptr GLint64 -> GL ()) -> GLuint -> GLenum -> Ptr GLint64 -> GL ()
glGetQueryObjecti64v :: GLuint -> GLenum -> Ptr GLint64 -> GL ()
unwrap_glGetQueryObjectui64v :: FunPtr (GLuint -> GLenum -> Ptr GLuint64 -> GL ()) -> GLuint -> GLenum -> Ptr GLuint64 -> GL ()
glGetQueryObjectui64v :: GLuint -> GLenum -> Ptr GLuint64 -> GL ()
unwrap_glVertexAttribDivisor :: FunPtr (GLuint -> GLuint -> GL ()) -> GLuint -> GLuint -> GL ()
glVertexAttribDivisor :: GLuint -> GLuint -> GL ()
unwrap_glVertexAttribP1ui :: FunPtr (GLuint -> GLenum -> GLboolean -> GLuint -> GL ()) -> GLuint -> GLenum -> GLboolean -> GLuint -> GL ()
glVertexAttribP1ui :: GLuint -> GLenum -> GLboolean -> GLuint -> GL ()
unwrap_glVertexAttribP1uiv :: FunPtr (GLuint -> GLenum -> GLboolean -> Ptr GLuint -> GL ()) -> GLuint -> GLenum -> GLboolean -> Ptr GLuint -> GL ()
glVertexAttribP1uiv :: GLuint -> GLenum -> GLboolean -> Ptr GLuint -> GL ()
unwrap_glVertexAttribP2ui :: FunPtr (GLuint -> GLenum -> GLboolean -> GLuint -> GL ()) -> GLuint -> GLenum -> GLboolean -> GLuint -> GL ()
glVertexAttribP2ui :: GLuint -> GLenum -> GLboolean -> GLuint -> GL ()
unwrap_glVertexAttribP2uiv :: FunPtr (GLuint -> GLenum -> GLboolean -> Ptr GLuint -> GL ()) -> GLuint -> GLenum -> GLboolean -> Ptr GLuint -> GL ()
glVertexAttribP2uiv :: GLuint -> GLenum -> GLboolean -> Ptr GLuint -> GL ()
unwrap_glVertexAttribP3ui :: FunPtr (GLuint -> GLenum -> GLboolean -> GLuint -> GL ()) -> GLuint -> GLenum -> GLboolean -> GLuint -> GL ()
glVertexAttribP3ui :: GLuint -> GLenum -> GLboolean -> GLuint -> GL ()
unwrap_glVertexAttribP3uiv :: FunPtr (GLuint -> GLenum -> GLboolean -> Ptr GLuint -> GL ()) -> GLuint -> GLenum -> GLboolean -> Ptr GLuint -> GL ()
glVertexAttribP3uiv :: GLuint -> GLenum -> GLboolean -> Ptr GLuint -> GL ()
unwrap_glVertexAttribP4ui :: FunPtr (GLuint -> GLenum -> GLboolean -> GLuint -> GL ()) -> GLuint -> GLenum -> GLboolean -> GLuint -> GL ()
glVertexAttribP4ui :: GLuint -> GLenum -> GLboolean -> GLuint -> GL ()
unwrap_glVertexAttribP4uiv :: FunPtr (GLuint -> GLenum -> GLboolean -> Ptr GLuint -> GL ()) -> GLuint -> GLenum -> GLboolean -> Ptr GLuint -> GL ()
glVertexAttribP4uiv :: GLuint -> GLenum -> GLboolean -> Ptr GLuint -> GL ()
unwrap_glMinSampleShading :: FunPtr (GLfloat -> GL ()) -> GLfloat -> GL ()
glMinSampleShading :: GLfloat -> GL ()
unwrap_glBlendEquationi :: FunPtr (GLuint -> GLenum -> GL ()) -> GLuint -> GLenum -> GL ()
glBlendEquationi :: GLuint -> GLenum -> GL ()
unwrap_glBlendEquationSeparatei :: FunPtr (GLuint -> GLenum -> GLenum -> GL ()) -> GLuint -> GLenum -> GLenum -> GL ()
glBlendEquationSeparatei :: GLuint -> GLenum -> GLenum -> GL ()
unwrap_glBlendFunci :: FunPtr (GLuint -> GLenum -> GLenum -> GL ()) -> GLuint -> GLenum -> GLenum -> GL ()
glBlendFunci :: GLuint -> GLenum -> GLenum -> GL ()
unwrap_glBlendFuncSeparatei :: FunPtr (GLuint -> GLenum -> GLenum -> GLenum -> GLenum -> GL ()) -> GLuint -> GLenum -> GLenum -> GLenum -> GLenum -> GL ()
glBlendFuncSeparatei :: GLuint -> GLenum -> GLenum -> GLenum -> GLenum -> GL ()
unwrap_glDrawArraysIndirect :: FunPtr (GLenum -> Ptr () -> GL ()) -> GLenum -> Ptr () -> GL ()
glDrawArraysIndirect :: GLenum -> Ptr () -> GL ()
unwrap_glDrawElementsIndirect :: FunPtr (GLenum -> GLenum -> Ptr () -> GL ()) -> GLenum -> GLenum -> Ptr () -> GL ()
glDrawElementsIndirect :: GLenum -> GLenum -> Ptr () -> GL ()
unwrap_glUniform1d :: FunPtr (GLint -> GLdouble -> GL ()) -> GLint -> GLdouble -> GL ()
glUniform1d :: GLint -> GLdouble -> GL ()
unwrap_glUniform2d :: FunPtr (GLint -> GLdouble -> GLdouble -> GL ()) -> GLint -> GLdouble -> GLdouble -> GL ()
glUniform2d :: GLint -> GLdouble -> GLdouble -> GL ()
unwrap_glUniform3d :: FunPtr (GLint -> GLdouble -> GLdouble -> GLdouble -> GL ()) -> GLint -> GLdouble -> GLdouble -> GLdouble -> GL ()
glUniform3d :: GLint -> GLdouble -> GLdouble -> GLdouble -> GL ()
unwrap_glUniform4d :: FunPtr (GLint -> GLdouble -> GLdouble -> GLdouble -> GLdouble -> GL ()) -> GLint -> GLdouble -> GLdouble -> GLdouble -> GLdouble -> GL ()
glUniform4d :: GLint -> GLdouble -> GLdouble -> GLdouble -> GLdouble -> GL ()
unwrap_glUniform1dv :: FunPtr (GLint -> GLsizei -> Ptr GLdouble -> GL ()) -> GLint -> GLsizei -> Ptr GLdouble -> GL ()
glUniform1dv :: GLint -> GLsizei -> Ptr GLdouble -> GL ()
unwrap_glUniform2dv :: FunPtr (GLint -> GLsizei -> Ptr GLdouble -> GL ()) -> GLint -> GLsizei -> Ptr GLdouble -> GL ()
glUniform2dv :: GLint -> GLsizei -> Ptr GLdouble -> GL ()
unwrap_glUniform3dv :: FunPtr (GLint -> GLsizei -> Ptr GLdouble -> GL ()) -> GLint -> GLsizei -> Ptr GLdouble -> GL ()
glUniform3dv :: GLint -> GLsizei -> Ptr GLdouble -> GL ()
unwrap_glUniform4dv :: FunPtr (GLint -> GLsizei -> Ptr GLdouble -> GL ()) -> GLint -> GLsizei -> Ptr GLdouble -> GL ()
glUniform4dv :: GLint -> GLsizei -> Ptr GLdouble -> GL ()
unwrap_glUniformMatrix2dv :: FunPtr (GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()) -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
glUniformMatrix2dv :: GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
unwrap_glUniformMatrix3dv :: FunPtr (GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()) -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
glUniformMatrix3dv :: GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
unwrap_glUniformMatrix4dv :: FunPtr (GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()) -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
glUniformMatrix4dv :: GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
unwrap_glUniformMatrix2x3dv :: FunPtr (GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()) -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
glUniformMatrix2x3dv :: GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
unwrap_glUniformMatrix2x4dv :: FunPtr (GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()) -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
glUniformMatrix2x4dv :: GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
unwrap_glUniformMatrix3x2dv :: FunPtr (GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()) -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
glUniformMatrix3x2dv :: GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
unwrap_glUniformMatrix3x4dv :: FunPtr (GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()) -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
glUniformMatrix3x4dv :: GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
unwrap_glUniformMatrix4x2dv :: FunPtr (GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()) -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
glUniformMatrix4x2dv :: GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
unwrap_glUniformMatrix4x3dv :: FunPtr (GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()) -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
glUniformMatrix4x3dv :: GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
unwrap_glGetUniformdv :: FunPtr (GLuint -> GLint -> Ptr GLdouble -> GL ()) -> GLuint -> GLint -> Ptr GLdouble -> GL ()
glGetUniformdv :: GLuint -> GLint -> Ptr GLdouble -> GL ()
unwrap_glGetSubroutineUniformLocation :: FunPtr (GLuint -> GLenum -> CString -> GL GLint) -> GLuint -> GLenum -> CString -> GL GLint
glGetSubroutineUniformLocation :: GLuint -> GLenum -> CString -> GL GLint
unwrap_glGetSubroutineIndex :: FunPtr (GLuint -> GLenum -> CString -> GL GLuint) -> GLuint -> GLenum -> CString -> GL GLuint
glGetSubroutineIndex :: GLuint -> GLenum -> CString -> GL GLuint
unwrap_glGetActiveSubroutineUniformiv :: FunPtr (GLuint -> GLenum -> GLuint -> GLenum -> Ptr GLint -> GL ()) -> GLuint -> GLenum -> GLuint -> GLenum -> Ptr GLint -> GL ()
glGetActiveSubroutineUniformiv :: GLuint -> GLenum -> GLuint -> GLenum -> Ptr GLint -> GL ()
unwrap_glGetActiveSubroutineUniformName :: FunPtr (GLuint -> GLenum -> GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()) -> GLuint -> GLenum -> GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()
glGetActiveSubroutineUniformName :: GLuint -> GLenum -> GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()
unwrap_glGetActiveSubroutineName :: FunPtr (GLuint -> GLenum -> GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()) -> GLuint -> GLenum -> GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()
glGetActiveSubroutineName :: GLuint -> GLenum -> GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()
unwrap_glUniformSubroutinesuiv :: FunPtr (GLenum -> GLsizei -> Ptr GLuint -> GL ()) -> GLenum -> GLsizei -> Ptr GLuint -> GL ()
glUniformSubroutinesuiv :: GLenum -> GLsizei -> Ptr GLuint -> GL ()
unwrap_glGetUniformSubroutineuiv :: FunPtr (GLenum -> GLint -> Ptr GLuint -> GL ()) -> GLenum -> GLint -> Ptr GLuint -> GL ()
glGetUniformSubroutineuiv :: GLenum -> GLint -> Ptr GLuint -> GL ()
unwrap_glGetProgramStageiv :: FunPtr (GLuint -> GLenum -> GLenum -> Ptr GLint -> GL ()) -> GLuint -> GLenum -> GLenum -> Ptr GLint -> GL ()
glGetProgramStageiv :: GLuint -> GLenum -> GLenum -> Ptr GLint -> GL ()
unwrap_glPatchParameteri :: FunPtr (GLenum -> GLint -> GL ()) -> GLenum -> GLint -> GL ()
glPatchParameteri :: GLenum -> GLint -> GL ()
unwrap_glPatchParameterfv :: FunPtr (GLenum -> Ptr GLfloat -> GL ()) -> GLenum -> Ptr GLfloat -> GL ()
glPatchParameterfv :: GLenum -> Ptr GLfloat -> GL ()
unwrap_glBindTransformFeedback :: FunPtr (GLenum -> GLuint -> GL ()) -> GLenum -> GLuint -> GL ()
glBindTransformFeedback :: GLenum -> GLuint -> GL ()
unwrap_glDeleteTransformFeedbacks :: FunPtr (GLsizei -> Ptr GLuint -> GL ()) -> GLsizei -> Ptr GLuint -> GL ()
glDeleteTransformFeedbacks :: GLsizei -> Ptr GLuint -> GL ()
unwrap_glGenTransformFeedbacks :: FunPtr (GLsizei -> Ptr GLuint -> GL ()) -> GLsizei -> Ptr GLuint -> GL ()
glGenTransformFeedbacks :: GLsizei -> Ptr GLuint -> GL ()
unwrap_glIsTransformFeedback :: FunPtr (GLuint -> GL GLboolean) -> GLuint -> GL GLboolean
glIsTransformFeedback :: GLuint -> GL GLboolean
unwrap_glPauseTransformFeedback :: FunPtr (GL ()) -> GL ()
glPauseTransformFeedback :: GL ()
unwrap_glResumeTransformFeedback :: FunPtr (GL ()) -> GL ()
glResumeTransformFeedback :: GL ()
unwrap_glDrawTransformFeedback :: FunPtr (GLenum -> GLuint -> GL ()) -> GLenum -> GLuint -> GL ()
glDrawTransformFeedback :: GLenum -> GLuint -> GL ()
unwrap_glDrawTransformFeedbackStream :: FunPtr (GLenum -> GLuint -> GLuint -> GL ()) -> GLenum -> GLuint -> GLuint -> GL ()
glDrawTransformFeedbackStream :: GLenum -> GLuint -> GLuint -> GL ()
unwrap_glBeginQueryIndexed :: FunPtr (GLenum -> GLuint -> GLuint -> GL ()) -> GLenum -> GLuint -> GLuint -> GL ()
glBeginQueryIndexed :: GLenum -> GLuint -> GLuint -> GL ()
unwrap_glEndQueryIndexed :: FunPtr (GLenum -> GLuint -> GL ()) -> GLenum -> GLuint -> GL ()
glEndQueryIndexed :: GLenum -> GLuint -> GL ()
unwrap_glGetQueryIndexediv :: FunPtr (GLenum -> GLuint -> GLenum -> Ptr GLint -> GL ()) -> GLenum -> GLuint -> GLenum -> Ptr GLint -> GL ()
glGetQueryIndexediv :: GLenum -> GLuint -> GLenum -> Ptr GLint -> GL ()
unwrap_glReleaseShaderCompiler :: FunPtr (GL ()) -> GL ()
glReleaseShaderCompiler :: GL ()
unwrap_glShaderBinary :: FunPtr (GLsizei -> Ptr GLuint -> GLenum -> Ptr () -> GLsizei -> GL ()) -> GLsizei -> Ptr GLuint -> GLenum -> Ptr () -> GLsizei -> GL ()
glShaderBinary :: GLsizei -> Ptr GLuint -> GLenum -> Ptr () -> GLsizei -> GL ()
unwrap_glGetShaderPrecisionFormat :: FunPtr (GLenum -> GLenum -> Ptr GLint -> Ptr GLint -> GL ()) -> GLenum -> GLenum -> Ptr GLint -> Ptr GLint -> GL ()
glGetShaderPrecisionFormat :: GLenum -> GLenum -> Ptr GLint -> Ptr GLint -> GL ()
unwrap_glDepthRangef :: FunPtr (GLfloat -> GLfloat -> GL ()) -> GLfloat -> GLfloat -> GL ()
glDepthRangef :: GLfloat -> GLfloat -> GL ()
unwrap_glClearDepthf :: FunPtr (GLfloat -> GL ()) -> GLfloat -> GL ()
glClearDepthf :: GLfloat -> GL ()
unwrap_glGetProgramBinary :: FunPtr (GLuint -> GLsizei -> Ptr GLsizei -> Ptr GLenum -> Ptr () -> GL ()) -> GLuint -> GLsizei -> Ptr GLsizei -> Ptr GLenum -> Ptr () -> GL ()
glGetProgramBinary :: GLuint -> GLsizei -> Ptr GLsizei -> Ptr GLenum -> Ptr () -> GL ()
unwrap_glProgramBinary :: FunPtr (GLuint -> GLenum -> Ptr () -> GLsizei -> GL ()) -> GLuint -> GLenum -> Ptr () -> GLsizei -> GL ()
glProgramBinary :: GLuint -> GLenum -> Ptr () -> GLsizei -> GL ()
unwrap_glProgramParameteri :: FunPtr (GLuint -> GLenum -> GLint -> GL ()) -> GLuint -> GLenum -> GLint -> GL ()
glProgramParameteri :: GLuint -> GLenum -> GLint -> GL ()
unwrap_glUseProgramStages :: FunPtr (GLuint -> GLbitfield -> GLuint -> GL ()) -> GLuint -> GLbitfield -> GLuint -> GL ()
glUseProgramStages :: GLuint -> GLbitfield -> GLuint -> GL ()
unwrap_glActiveShaderProgram :: FunPtr (GLuint -> GLuint -> GL ()) -> GLuint -> GLuint -> GL ()
glActiveShaderProgram :: GLuint -> GLuint -> GL ()
unwrap_glCreateShaderProgramv :: FunPtr (GLenum -> GLsizei -> Ptr CString -> GL GLuint) -> GLenum -> GLsizei -> Ptr CString -> GL GLuint
glCreateShaderProgramv :: GLenum -> GLsizei -> Ptr CString -> GL GLuint
unwrap_glBindProgramPipeline :: FunPtr (GLuint -> GL ()) -> GLuint -> GL ()
glBindProgramPipeline :: GLuint -> GL ()
unwrap_glDeleteProgramPipelines :: FunPtr (GLsizei -> Ptr GLuint -> GL ()) -> GLsizei -> Ptr GLuint -> GL ()
glDeleteProgramPipelines :: GLsizei -> Ptr GLuint -> GL ()
unwrap_glGenProgramPipelines :: FunPtr (GLsizei -> Ptr GLuint -> GL ()) -> GLsizei -> Ptr GLuint -> GL ()
glGenProgramPipelines :: GLsizei -> Ptr GLuint -> GL ()
unwrap_glIsProgramPipeline :: FunPtr (GLuint -> GL GLboolean) -> GLuint -> GL GLboolean
glIsProgramPipeline :: GLuint -> GL GLboolean
unwrap_glGetProgramPipelineiv :: FunPtr (GLuint -> GLenum -> Ptr GLint -> GL ()) -> GLuint -> GLenum -> Ptr GLint -> GL ()
glGetProgramPipelineiv :: GLuint -> GLenum -> Ptr GLint -> GL ()
unwrap_glProgramUniform1i :: FunPtr (GLuint -> GLint -> GLint -> GL ()) -> GLuint -> GLint -> GLint -> GL ()
glProgramUniform1i :: GLuint -> GLint -> GLint -> GL ()
unwrap_glProgramUniform1iv :: FunPtr (GLuint -> GLint -> GLsizei -> Ptr GLint -> GL ()) -> GLuint -> GLint -> GLsizei -> Ptr GLint -> GL ()
glProgramUniform1iv :: GLuint -> GLint -> GLsizei -> Ptr GLint -> GL ()
unwrap_glProgramUniform1f :: FunPtr (GLuint -> GLint -> GLfloat -> GL ()) -> GLuint -> GLint -> GLfloat -> GL ()
glProgramUniform1f :: GLuint -> GLint -> GLfloat -> GL ()
unwrap_glProgramUniform1fv :: FunPtr (GLuint -> GLint -> GLsizei -> Ptr GLfloat -> GL ()) -> GLuint -> GLint -> GLsizei -> Ptr GLfloat -> GL ()
glProgramUniform1fv :: GLuint -> GLint -> GLsizei -> Ptr GLfloat -> GL ()
unwrap_glProgramUniform1d :: FunPtr (GLuint -> GLint -> GLdouble -> GL ()) -> GLuint -> GLint -> GLdouble -> GL ()
glProgramUniform1d :: GLuint -> GLint -> GLdouble -> GL ()
unwrap_glProgramUniform1dv :: FunPtr (GLuint -> GLint -> GLsizei -> Ptr GLdouble -> GL ()) -> GLuint -> GLint -> GLsizei -> Ptr GLdouble -> GL ()
glProgramUniform1dv :: GLuint -> GLint -> GLsizei -> Ptr GLdouble -> GL ()
unwrap_glProgramUniform1ui :: FunPtr (GLuint -> GLint -> GLuint -> GL ()) -> GLuint -> GLint -> GLuint -> GL ()
glProgramUniform1ui :: GLuint -> GLint -> GLuint -> GL ()
unwrap_glProgramUniform1uiv :: FunPtr (GLuint -> GLint -> GLsizei -> Ptr GLuint -> GL ()) -> GLuint -> GLint -> GLsizei -> Ptr GLuint -> GL ()
glProgramUniform1uiv :: GLuint -> GLint -> GLsizei -> Ptr GLuint -> GL ()
unwrap_glProgramUniform2i :: FunPtr (GLuint -> GLint -> GLint -> GLint -> GL ()) -> GLuint -> GLint -> GLint -> GLint -> GL ()
glProgramUniform2i :: GLuint -> GLint -> GLint -> GLint -> GL ()
unwrap_glProgramUniform2iv :: FunPtr (GLuint -> GLint -> GLsizei -> Ptr GLint -> GL ()) -> GLuint -> GLint -> GLsizei -> Ptr GLint -> GL ()
glProgramUniform2iv :: GLuint -> GLint -> GLsizei -> Ptr GLint -> GL ()
unwrap_glProgramUniform2f :: FunPtr (GLuint -> GLint -> GLfloat -> GLfloat -> GL ()) -> GLuint -> GLint -> GLfloat -> GLfloat -> GL ()
glProgramUniform2f :: GLuint -> GLint -> GLfloat -> GLfloat -> GL ()
unwrap_glProgramUniform2fv :: FunPtr (GLuint -> GLint -> GLsizei -> Ptr GLfloat -> GL ()) -> GLuint -> GLint -> GLsizei -> Ptr GLfloat -> GL ()
glProgramUniform2fv :: GLuint -> GLint -> GLsizei -> Ptr GLfloat -> GL ()
unwrap_glProgramUniform2d :: FunPtr (GLuint -> GLint -> GLdouble -> GLdouble -> GL ()) -> GLuint -> GLint -> GLdouble -> GLdouble -> GL ()
glProgramUniform2d :: GLuint -> GLint -> GLdouble -> GLdouble -> GL ()
unwrap_glProgramUniform2dv :: FunPtr (GLuint -> GLint -> GLsizei -> Ptr GLdouble -> GL ()) -> GLuint -> GLint -> GLsizei -> Ptr GLdouble -> GL ()
glProgramUniform2dv :: GLuint -> GLint -> GLsizei -> Ptr GLdouble -> GL ()
unwrap_glProgramUniform2ui :: FunPtr (GLuint -> GLint -> GLuint -> GLuint -> GL ()) -> GLuint -> GLint -> GLuint -> GLuint -> GL ()
glProgramUniform2ui :: GLuint -> GLint -> GLuint -> GLuint -> GL ()
unwrap_glProgramUniform2uiv :: FunPtr (GLuint -> GLint -> GLsizei -> Ptr GLuint -> GL ()) -> GLuint -> GLint -> GLsizei -> Ptr GLuint -> GL ()
glProgramUniform2uiv :: GLuint -> GLint -> GLsizei -> Ptr GLuint -> GL ()
unwrap_glProgramUniform3i :: FunPtr (GLuint -> GLint -> GLint -> GLint -> GLint -> GL ()) -> GLuint -> GLint -> GLint -> GLint -> GLint -> GL ()
glProgramUniform3i :: GLuint -> GLint -> GLint -> GLint -> GLint -> GL ()
unwrap_glProgramUniform3iv :: FunPtr (GLuint -> GLint -> GLsizei -> Ptr GLint -> GL ()) -> GLuint -> GLint -> GLsizei -> Ptr GLint -> GL ()
glProgramUniform3iv :: GLuint -> GLint -> GLsizei -> Ptr GLint -> GL ()
unwrap_glProgramUniform3f :: FunPtr (GLuint -> GLint -> GLfloat -> GLfloat -> GLfloat -> GL ()) -> GLuint -> GLint -> GLfloat -> GLfloat -> GLfloat -> GL ()
glProgramUniform3f :: GLuint -> GLint -> GLfloat -> GLfloat -> GLfloat -> GL ()
unwrap_glProgramUniform3fv :: FunPtr (GLuint -> GLint -> GLsizei -> Ptr GLfloat -> GL ()) -> GLuint -> GLint -> GLsizei -> Ptr GLfloat -> GL ()
glProgramUniform3fv :: GLuint -> GLint -> GLsizei -> Ptr GLfloat -> GL ()
unwrap_glProgramUniform3d :: FunPtr (GLuint -> GLint -> GLdouble -> GLdouble -> GLdouble -> GL ()) -> GLuint -> GLint -> GLdouble -> GLdouble -> GLdouble -> GL ()
glProgramUniform3d :: GLuint -> GLint -> GLdouble -> GLdouble -> GLdouble -> GL ()
unwrap_glProgramUniform3dv :: FunPtr (GLuint -> GLint -> GLsizei -> Ptr GLdouble -> GL ()) -> GLuint -> GLint -> GLsizei -> Ptr GLdouble -> GL ()
glProgramUniform3dv :: GLuint -> GLint -> GLsizei -> Ptr GLdouble -> GL ()
unwrap_glProgramUniform3ui :: FunPtr (GLuint -> GLint -> GLuint -> GLuint -> GLuint -> GL ()) -> GLuint -> GLint -> GLuint -> GLuint -> GLuint -> GL ()
glProgramUniform3ui :: GLuint -> GLint -> GLuint -> GLuint -> GLuint -> GL ()
unwrap_glProgramUniform3uiv :: FunPtr (GLuint -> GLint -> GLsizei -> Ptr GLuint -> GL ()) -> GLuint -> GLint -> GLsizei -> Ptr GLuint -> GL ()
glProgramUniform3uiv :: GLuint -> GLint -> GLsizei -> Ptr GLuint -> GL ()
unwrap_glProgramUniform4i :: FunPtr (GLuint -> GLint -> GLint -> GLint -> GLint -> GLint -> GL ()) -> GLuint -> GLint -> GLint -> GLint -> GLint -> GLint -> GL ()
glProgramUniform4i :: GLuint -> GLint -> GLint -> GLint -> GLint -> GLint -> GL ()
unwrap_glProgramUniform4iv :: FunPtr (GLuint -> GLint -> GLsizei -> Ptr GLint -> GL ()) -> GLuint -> GLint -> GLsizei -> Ptr GLint -> GL ()
glProgramUniform4iv :: GLuint -> GLint -> GLsizei -> Ptr GLint -> GL ()
unwrap_glProgramUniform4f :: FunPtr (GLuint -> GLint -> GLfloat -> GLfloat -> GLfloat -> GLfloat -> GL ()) -> GLuint -> GLint -> GLfloat -> GLfloat -> GLfloat -> GLfloat -> GL ()
glProgramUniform4f :: GLuint -> GLint -> GLfloat -> GLfloat -> GLfloat -> GLfloat -> GL ()
unwrap_glProgramUniform4fv :: FunPtr (GLuint -> GLint -> GLsizei -> Ptr GLfloat -> GL ()) -> GLuint -> GLint -> GLsizei -> Ptr GLfloat -> GL ()
glProgramUniform4fv :: GLuint -> GLint -> GLsizei -> Ptr GLfloat -> GL ()
unwrap_glProgramUniform4d :: FunPtr (GLuint -> GLint -> GLdouble -> GLdouble -> GLdouble -> GLdouble -> GL ()) -> GLuint -> GLint -> GLdouble -> GLdouble -> GLdouble -> GLdouble -> GL ()
glProgramUniform4d :: GLuint -> GLint -> GLdouble -> GLdouble -> GLdouble -> GLdouble -> GL ()
unwrap_glProgramUniform4dv :: FunPtr (GLuint -> GLint -> GLsizei -> Ptr GLdouble -> GL ()) -> GLuint -> GLint -> GLsizei -> Ptr GLdouble -> GL ()
glProgramUniform4dv :: GLuint -> GLint -> GLsizei -> Ptr GLdouble -> GL ()
unwrap_glProgramUniform4ui :: FunPtr (GLuint -> GLint -> GLuint -> GLuint -> GLuint -> GLuint -> GL ()) -> GLuint -> GLint -> GLuint -> GLuint -> GLuint -> GLuint -> GL ()
glProgramUniform4ui :: GLuint -> GLint -> GLuint -> GLuint -> GLuint -> GLuint -> GL ()
unwrap_glProgramUniform4uiv :: FunPtr (GLuint -> GLint -> GLsizei -> Ptr GLuint -> GL ()) -> GLuint -> GLint -> GLsizei -> Ptr GLuint -> GL ()
glProgramUniform4uiv :: GLuint -> GLint -> GLsizei -> Ptr GLuint -> GL ()
unwrap_glProgramUniformMatrix2fv :: FunPtr (GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()) -> GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glProgramUniformMatrix2fv :: GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
unwrap_glProgramUniformMatrix3fv :: FunPtr (GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()) -> GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glProgramUniformMatrix3fv :: GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
unwrap_glProgramUniformMatrix4fv :: FunPtr (GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()) -> GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glProgramUniformMatrix4fv :: GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
unwrap_glProgramUniformMatrix2dv :: FunPtr (GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()) -> GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
glProgramUniformMatrix2dv :: GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
unwrap_glProgramUniformMatrix3dv :: FunPtr (GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()) -> GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
glProgramUniformMatrix3dv :: GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
unwrap_glProgramUniformMatrix4dv :: FunPtr (GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()) -> GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
glProgramUniformMatrix4dv :: GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
unwrap_glProgramUniformMatrix2x3fv :: FunPtr (GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()) -> GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glProgramUniformMatrix2x3fv :: GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
unwrap_glProgramUniformMatrix3x2fv :: FunPtr (GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()) -> GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glProgramUniformMatrix3x2fv :: GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
unwrap_glProgramUniformMatrix2x4fv :: FunPtr (GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()) -> GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glProgramUniformMatrix2x4fv :: GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
unwrap_glProgramUniformMatrix4x2fv :: FunPtr (GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()) -> GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glProgramUniformMatrix4x2fv :: GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
unwrap_glProgramUniformMatrix3x4fv :: FunPtr (GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()) -> GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glProgramUniformMatrix3x4fv :: GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
unwrap_glProgramUniformMatrix4x3fv :: FunPtr (GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()) -> GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
glProgramUniformMatrix4x3fv :: GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLfloat -> GL ()
unwrap_glProgramUniformMatrix2x3dv :: FunPtr (GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()) -> GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
glProgramUniformMatrix2x3dv :: GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
unwrap_glProgramUniformMatrix3x2dv :: FunPtr (GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()) -> GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
glProgramUniformMatrix3x2dv :: GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
unwrap_glProgramUniformMatrix2x4dv :: FunPtr (GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()) -> GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
glProgramUniformMatrix2x4dv :: GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
unwrap_glProgramUniformMatrix4x2dv :: FunPtr (GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()) -> GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
glProgramUniformMatrix4x2dv :: GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
unwrap_glProgramUniformMatrix3x4dv :: FunPtr (GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()) -> GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
glProgramUniformMatrix3x4dv :: GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
unwrap_glProgramUniformMatrix4x3dv :: FunPtr (GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()) -> GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
glProgramUniformMatrix4x3dv :: GLuint -> GLint -> GLsizei -> GLboolean -> Ptr GLdouble -> GL ()
unwrap_glValidateProgramPipeline :: FunPtr (GLuint -> GL ()) -> GLuint -> GL ()
glValidateProgramPipeline :: GLuint -> GL ()
unwrap_glGetProgramPipelineInfoLog :: FunPtr (GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()) -> GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()
glGetProgramPipelineInfoLog :: GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()
unwrap_glVertexAttribL1d :: FunPtr (GLuint -> GLdouble -> GL ()) -> GLuint -> GLdouble -> GL ()
glVertexAttribL1d :: GLuint -> GLdouble -> GL ()
unwrap_glVertexAttribL2d :: FunPtr (GLuint -> GLdouble -> GLdouble -> GL ()) -> GLuint -> GLdouble -> GLdouble -> GL ()
glVertexAttribL2d :: GLuint -> GLdouble -> GLdouble -> GL ()
unwrap_glVertexAttribL3d :: FunPtr (GLuint -> GLdouble -> GLdouble -> GLdouble -> GL ()) -> GLuint -> GLdouble -> GLdouble -> GLdouble -> GL ()
glVertexAttribL3d :: GLuint -> GLdouble -> GLdouble -> GLdouble -> GL ()
unwrap_glVertexAttribL4d :: FunPtr (GLuint -> GLdouble -> GLdouble -> GLdouble -> GLdouble -> GL ()) -> GLuint -> GLdouble -> GLdouble -> GLdouble -> GLdouble -> GL ()
glVertexAttribL4d :: GLuint -> GLdouble -> GLdouble -> GLdouble -> GLdouble -> GL ()
unwrap_glVertexAttribL1dv :: FunPtr (GLuint -> Ptr GLdouble -> GL ()) -> GLuint -> Ptr GLdouble -> GL ()
glVertexAttribL1dv :: GLuint -> Ptr GLdouble -> GL ()
unwrap_glVertexAttribL2dv :: FunPtr (GLuint -> Ptr GLdouble -> GL ()) -> GLuint -> Ptr GLdouble -> GL ()
glVertexAttribL2dv :: GLuint -> Ptr GLdouble -> GL ()
unwrap_glVertexAttribL3dv :: FunPtr (GLuint -> Ptr GLdouble -> GL ()) -> GLuint -> Ptr GLdouble -> GL ()
glVertexAttribL3dv :: GLuint -> Ptr GLdouble -> GL ()
unwrap_glVertexAttribL4dv :: FunPtr (GLuint -> Ptr GLdouble -> GL ()) -> GLuint -> Ptr GLdouble -> GL ()
glVertexAttribL4dv :: GLuint -> Ptr GLdouble -> GL ()
unwrap_glVertexAttribLPointer :: FunPtr (GLuint -> GLint -> GLenum -> GLsizei -> Ptr () -> GL ()) -> GLuint -> GLint -> GLenum -> GLsizei -> Ptr () -> GL ()
glVertexAttribLPointer :: GLuint -> GLint -> GLenum -> GLsizei -> Ptr () -> GL ()
unwrap_glGetVertexAttribLdv :: FunPtr (GLuint -> GLenum -> Ptr GLdouble -> GL ()) -> GLuint -> GLenum -> Ptr GLdouble -> GL ()
glGetVertexAttribLdv :: GLuint -> GLenum -> Ptr GLdouble -> GL ()
unwrap_glViewportArrayv :: FunPtr (GLuint -> GLsizei -> Ptr GLfloat -> GL ()) -> GLuint -> GLsizei -> Ptr GLfloat -> GL ()
glViewportArrayv :: GLuint -> GLsizei -> Ptr GLfloat -> GL ()
unwrap_glViewportIndexedf :: FunPtr (GLuint -> GLfloat -> GLfloat -> GLfloat -> GLfloat -> GL ()) -> GLuint -> GLfloat -> GLfloat -> GLfloat -> GLfloat -> GL ()
glViewportIndexedf :: GLuint -> GLfloat -> GLfloat -> GLfloat -> GLfloat -> GL ()
unwrap_glViewportIndexedfv :: FunPtr (GLuint -> Ptr GLfloat -> GL ()) -> GLuint -> Ptr GLfloat -> GL ()
glViewportIndexedfv :: GLuint -> Ptr GLfloat -> GL ()
unwrap_glScissorArrayv :: FunPtr (GLuint -> GLsizei -> Ptr GLint -> GL ()) -> GLuint -> GLsizei -> Ptr GLint -> GL ()
glScissorArrayv :: GLuint -> GLsizei -> Ptr GLint -> GL ()
unwrap_glScissorIndexed :: FunPtr (GLuint -> GLint -> GLint -> GLsizei -> GLsizei -> GL ()) -> GLuint -> GLint -> GLint -> GLsizei -> GLsizei -> GL ()
glScissorIndexed :: GLuint -> GLint -> GLint -> GLsizei -> GLsizei -> GL ()
unwrap_glScissorIndexedv :: FunPtr (GLuint -> Ptr GLint -> GL ()) -> GLuint -> Ptr GLint -> GL ()
glScissorIndexedv :: GLuint -> Ptr GLint -> GL ()
unwrap_glDepthRangeArrayv :: FunPtr (GLuint -> GLsizei -> Ptr GLdouble -> GL ()) -> GLuint -> GLsizei -> Ptr GLdouble -> GL ()
glDepthRangeArrayv :: GLuint -> GLsizei -> Ptr GLdouble -> GL ()
unwrap_glDepthRangeIndexed :: FunPtr (GLuint -> GLdouble -> GLdouble -> GL ()) -> GLuint -> GLdouble -> GLdouble -> GL ()
glDepthRangeIndexed :: GLuint -> GLdouble -> GLdouble -> GL ()
unwrap_glGetFloati_v :: FunPtr (GLenum -> GLuint -> Ptr GLfloat -> GL ()) -> GLenum -> GLuint -> Ptr GLfloat -> GL ()
glGetFloati_v :: GLenum -> GLuint -> Ptr GLfloat -> GL ()
unwrap_glGetDoublei_v :: FunPtr (GLenum -> GLuint -> Ptr GLdouble -> GL ()) -> GLenum -> GLuint -> Ptr GLdouble -> GL ()
glGetDoublei_v :: GLenum -> GLuint -> Ptr GLdouble -> GL ()
unwrap_glDrawArraysInstancedBaseInstance :: FunPtr (GLenum -> GLint -> GLsizei -> GLsizei -> GLuint -> GL ()) -> GLenum -> GLint -> GLsizei -> GLsizei -> GLuint -> GL ()
glDrawArraysInstancedBaseInstance :: GLenum -> GLint -> GLsizei -> GLsizei -> GLuint -> GL ()
unwrap_glDrawElementsInstancedBaseInstance :: FunPtr (GLenum -> GLsizei -> GLenum -> Ptr () -> GLsizei -> GLuint -> GL ()) -> GLenum -> GLsizei -> GLenum -> Ptr () -> GLsizei -> GLuint -> GL ()
glDrawElementsInstancedBaseInstance :: GLenum -> GLsizei -> GLenum -> Ptr () -> GLsizei -> GLuint -> GL ()
unwrap_glDrawElementsInstancedBaseVertexBaseInstance :: FunPtr (GLenum -> GLsizei -> GLenum -> Ptr () -> GLsizei -> GLint -> GLuint -> GL ()) -> GLenum -> GLsizei -> GLenum -> Ptr () -> GLsizei -> GLint -> GLuint -> GL ()
glDrawElementsInstancedBaseVertexBaseInstance :: GLenum -> GLsizei -> GLenum -> Ptr () -> GLsizei -> GLint -> GLuint -> GL ()
unwrap_glGetInternalformativ :: FunPtr (GLenum -> GLenum -> GLenum -> GLsizei -> Ptr GLint -> GL ()) -> GLenum -> GLenum -> GLenum -> GLsizei -> Ptr GLint -> GL ()
glGetInternalformativ :: GLenum -> GLenum -> GLenum -> GLsizei -> Ptr GLint -> GL ()
unwrap_glGetActiveAtomicCounterBufferiv :: FunPtr (GLuint -> GLuint -> GLenum -> Ptr GLint -> GL ()) -> GLuint -> GLuint -> GLenum -> Ptr GLint -> GL ()
glGetActiveAtomicCounterBufferiv :: GLuint -> GLuint -> GLenum -> Ptr GLint -> GL ()
unwrap_glBindImageTexture :: FunPtr (GLuint -> GLuint -> GLint -> GLboolean -> GLint -> GLenum -> GLenum -> GL ()) -> GLuint -> GLuint -> GLint -> GLboolean -> GLint -> GLenum -> GLenum -> GL ()
glBindImageTexture :: GLuint -> GLuint -> GLint -> GLboolean -> GLint -> GLenum -> GLenum -> GL ()
unwrap_glMemoryBarrier :: FunPtr (GLbitfield -> GL ()) -> GLbitfield -> GL ()
glMemoryBarrier :: GLbitfield -> GL ()
unwrap_glTexStorage1D :: FunPtr (GLenum -> GLsizei -> GLenum -> GLsizei -> GL ()) -> GLenum -> GLsizei -> GLenum -> GLsizei -> GL ()
glTexStorage1D :: GLenum -> GLsizei -> GLenum -> GLsizei -> GL ()
unwrap_glTexStorage2D :: FunPtr (GLenum -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GL ()) -> GLenum -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GL ()
glTexStorage2D :: GLenum -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GL ()
unwrap_glTexStorage3D :: FunPtr (GLenum -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GLsizei -> GL ()) -> GLenum -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GLsizei -> GL ()
glTexStorage3D :: GLenum -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GLsizei -> GL ()
unwrap_glDrawTransformFeedbackInstanced :: FunPtr (GLenum -> GLuint -> GLsizei -> GL ()) -> GLenum -> GLuint -> GLsizei -> GL ()
glDrawTransformFeedbackInstanced :: GLenum -> GLuint -> GLsizei -> GL ()
unwrap_glDrawTransformFeedbackStreamInstanced :: FunPtr (GLenum -> GLuint -> GLuint -> GLsizei -> GL ()) -> GLenum -> GLuint -> GLuint -> GLsizei -> GL ()
glDrawTransformFeedbackStreamInstanced :: GLenum -> GLuint -> GLuint -> GLsizei -> GL ()
unwrap_glClearBufferData :: FunPtr (GLenum -> GLenum -> GLenum -> GLenum -> Ptr () -> GL ()) -> GLenum -> GLenum -> GLenum -> GLenum -> Ptr () -> GL ()
glClearBufferData :: GLenum -> GLenum -> GLenum -> GLenum -> Ptr () -> GL ()
unwrap_glClearBufferSubData :: FunPtr (GLenum -> GLenum -> GLintptr -> GLsizeiptr -> GLenum -> GLenum -> Ptr () -> GL ()) -> GLenum -> GLenum -> GLintptr -> GLsizeiptr -> GLenum -> GLenum -> Ptr () -> GL ()
glClearBufferSubData :: GLenum -> GLenum -> GLintptr -> GLsizeiptr -> GLenum -> GLenum -> Ptr () -> GL ()
unwrap_glDispatchCompute :: FunPtr (GLuint -> GLuint -> GLuint -> GL ()) -> GLuint -> GLuint -> GLuint -> GL ()
glDispatchCompute :: GLuint -> GLuint -> GLuint -> GL ()
unwrap_glDispatchComputeIndirect :: FunPtr (GLintptr -> GL ()) -> GLintptr -> GL ()
glDispatchComputeIndirect :: GLintptr -> GL ()
unwrap_glCopyImageSubData :: FunPtr (GLuint -> GLenum -> GLint -> GLint -> GLint -> GLint -> GLuint -> GLenum -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GL ()) -> GLuint -> GLenum -> GLint -> GLint -> GLint -> GLint -> GLuint -> GLenum -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GL ()
glCopyImageSubData :: GLuint -> GLenum -> GLint -> GLint -> GLint -> GLint -> GLuint -> GLenum -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GL ()
unwrap_glFramebufferParameteri :: FunPtr (GLenum -> GLenum -> GLint -> GL ()) -> GLenum -> GLenum -> GLint -> GL ()
glFramebufferParameteri :: GLenum -> GLenum -> GLint -> GL ()
unwrap_glGetFramebufferParameteriv :: FunPtr (GLenum -> GLenum -> Ptr GLint -> GL ()) -> GLenum -> GLenum -> Ptr GLint -> GL ()
glGetFramebufferParameteriv :: GLenum -> GLenum -> Ptr GLint -> GL ()
unwrap_glGetInternalformati64v :: FunPtr (GLenum -> GLenum -> GLenum -> GLsizei -> Ptr GLint64 -> GL ()) -> GLenum -> GLenum -> GLenum -> GLsizei -> Ptr GLint64 -> GL ()
glGetInternalformati64v :: GLenum -> GLenum -> GLenum -> GLsizei -> Ptr GLint64 -> GL ()
unwrap_glInvalidateTexSubImage :: FunPtr (GLuint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GL ()) -> GLuint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GL ()
glInvalidateTexSubImage :: GLuint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GL ()
unwrap_glInvalidateTexImage :: FunPtr (GLuint -> GLint -> GL ()) -> GLuint -> GLint -> GL ()
glInvalidateTexImage :: GLuint -> GLint -> GL ()
unwrap_glInvalidateBufferSubData :: FunPtr (GLuint -> GLintptr -> GLsizeiptr -> GL ()) -> GLuint -> GLintptr -> GLsizeiptr -> GL ()
glInvalidateBufferSubData :: GLuint -> GLintptr -> GLsizeiptr -> GL ()
unwrap_glInvalidateBufferData :: FunPtr (GLuint -> GL ()) -> GLuint -> GL ()
glInvalidateBufferData :: GLuint -> GL ()
unwrap_glInvalidateFramebuffer :: FunPtr (GLenum -> GLsizei -> Ptr GLenum -> GL ()) -> GLenum -> GLsizei -> Ptr GLenum -> GL ()
glInvalidateFramebuffer :: GLenum -> GLsizei -> Ptr GLenum -> GL ()
unwrap_glInvalidateSubFramebuffer :: FunPtr (GLenum -> GLsizei -> Ptr GLenum -> GLint -> GLint -> GLsizei -> GLsizei -> GL ()) -> GLenum -> GLsizei -> Ptr GLenum -> GLint -> GLint -> GLsizei -> GLsizei -> GL ()
glInvalidateSubFramebuffer :: GLenum -> GLsizei -> Ptr GLenum -> GLint -> GLint -> GLsizei -> GLsizei -> GL ()
unwrap_glMultiDrawArraysIndirect :: FunPtr (GLenum -> Ptr () -> GLsizei -> GLsizei -> GL ()) -> GLenum -> Ptr () -> GLsizei -> GLsizei -> GL ()
glMultiDrawArraysIndirect :: GLenum -> Ptr () -> GLsizei -> GLsizei -> GL ()
unwrap_glMultiDrawElementsIndirect :: FunPtr (GLenum -> GLenum -> Ptr () -> GLsizei -> GLsizei -> GL ()) -> GLenum -> GLenum -> Ptr () -> GLsizei -> GLsizei -> GL ()
glMultiDrawElementsIndirect :: GLenum -> GLenum -> Ptr () -> GLsizei -> GLsizei -> GL ()
unwrap_glGetProgramInterfaceiv :: FunPtr (GLuint -> GLenum -> GLenum -> Ptr GLint -> GL ()) -> GLuint -> GLenum -> GLenum -> Ptr GLint -> GL ()
glGetProgramInterfaceiv :: GLuint -> GLenum -> GLenum -> Ptr GLint -> GL ()
unwrap_glGetProgramResourceIndex :: FunPtr (GLuint -> GLenum -> CString -> GL GLuint) -> GLuint -> GLenum -> CString -> GL GLuint
glGetProgramResourceIndex :: GLuint -> GLenum -> CString -> GL GLuint
unwrap_glGetProgramResourceName :: FunPtr (GLuint -> GLenum -> GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()) -> GLuint -> GLenum -> GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()
glGetProgramResourceName :: GLuint -> GLenum -> GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()
unwrap_glGetProgramResourceiv :: FunPtr (GLuint -> GLenum -> GLuint -> GLsizei -> Ptr GLenum -> GLsizei -> Ptr GLsizei -> Ptr GLint -> GL ()) -> GLuint -> GLenum -> GLuint -> GLsizei -> Ptr GLenum -> GLsizei -> Ptr GLsizei -> Ptr GLint -> GL ()
glGetProgramResourceiv :: GLuint -> GLenum -> GLuint -> GLsizei -> Ptr GLenum -> GLsizei -> Ptr GLsizei -> Ptr GLint -> GL ()
unwrap_glGetProgramResourceLocation :: FunPtr (GLuint -> GLenum -> CString -> GL GLint) -> GLuint -> GLenum -> CString -> GL GLint
glGetProgramResourceLocation :: GLuint -> GLenum -> CString -> GL GLint
unwrap_glGetProgramResourceLocationIndex :: FunPtr (GLuint -> GLenum -> CString -> GL GLint) -> GLuint -> GLenum -> CString -> GL GLint
glGetProgramResourceLocationIndex :: GLuint -> GLenum -> CString -> GL GLint
unwrap_glShaderStorageBlockBinding :: FunPtr (GLuint -> GLuint -> GLuint -> GL ()) -> GLuint -> GLuint -> GLuint -> GL ()
glShaderStorageBlockBinding :: GLuint -> GLuint -> GLuint -> GL ()
unwrap_glTexBufferRange :: FunPtr (GLenum -> GLenum -> GLuint -> GLintptr -> GLsizeiptr -> GL ()) -> GLenum -> GLenum -> GLuint -> GLintptr -> GLsizeiptr -> GL ()
glTexBufferRange :: GLenum -> GLenum -> GLuint -> GLintptr -> GLsizeiptr -> GL ()
unwrap_glTexStorage2DMultisample :: FunPtr (GLenum -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GLboolean -> GL ()) -> GLenum -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GLboolean -> GL ()
glTexStorage2DMultisample :: GLenum -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GLboolean -> GL ()
unwrap_glTexStorage3DMultisample :: FunPtr (GLenum -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GLsizei -> GLboolean -> GL ()) -> GLenum -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GLsizei -> GLboolean -> GL ()
glTexStorage3DMultisample :: GLenum -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GLsizei -> GLboolean -> GL ()
unwrap_glTextureView :: FunPtr (GLuint -> GLenum -> GLuint -> GLenum -> GLuint -> GLuint -> GLuint -> GLuint -> GL ()) -> GLuint -> GLenum -> GLuint -> GLenum -> GLuint -> GLuint -> GLuint -> GLuint -> GL ()
glTextureView :: GLuint -> GLenum -> GLuint -> GLenum -> GLuint -> GLuint -> GLuint -> GLuint -> GL ()
unwrap_glBindVertexBuffer :: FunPtr (GLuint -> GLuint -> GLintptr -> GLsizei -> GL ()) -> GLuint -> GLuint -> GLintptr -> GLsizei -> GL ()
glBindVertexBuffer :: GLuint -> GLuint -> GLintptr -> GLsizei -> GL ()
unwrap_glVertexAttribFormat :: FunPtr (GLuint -> GLint -> GLenum -> GLboolean -> GLuint -> GL ()) -> GLuint -> GLint -> GLenum -> GLboolean -> GLuint -> GL ()
glVertexAttribFormat :: GLuint -> GLint -> GLenum -> GLboolean -> GLuint -> GL ()
unwrap_glVertexAttribIFormat :: FunPtr (GLuint -> GLint -> GLenum -> GLuint -> GL ()) -> GLuint -> GLint -> GLenum -> GLuint -> GL ()
glVertexAttribIFormat :: GLuint -> GLint -> GLenum -> GLuint -> GL ()
unwrap_glVertexAttribLFormat :: FunPtr (GLuint -> GLint -> GLenum -> GLuint -> GL ()) -> GLuint -> GLint -> GLenum -> GLuint -> GL ()
glVertexAttribLFormat :: GLuint -> GLint -> GLenum -> GLuint -> GL ()
unwrap_glVertexAttribBinding :: FunPtr (GLuint -> GLuint -> GL ()) -> GLuint -> GLuint -> GL ()
glVertexAttribBinding :: GLuint -> GLuint -> GL ()
unwrap_glVertexBindingDivisor :: FunPtr (GLuint -> GLuint -> GL ()) -> GLuint -> GLuint -> GL ()
glVertexBindingDivisor :: GLuint -> GLuint -> GL ()
unwrap_glDebugMessageControl :: FunPtr (GLenum -> GLenum -> GLenum -> GLsizei -> Ptr GLuint -> GLboolean -> GL ()) -> GLenum -> GLenum -> GLenum -> GLsizei -> Ptr GLuint -> GLboolean -> GL ()
glDebugMessageControl :: GLenum -> GLenum -> GLenum -> GLsizei -> Ptr GLuint -> GLboolean -> GL ()
unwrap_glDebugMessageInsert :: FunPtr (GLenum -> GLenum -> GLuint -> GLenum -> GLsizei -> CString -> GL ()) -> GLenum -> GLenum -> GLuint -> GLenum -> GLsizei -> CString -> GL ()
glDebugMessageInsert :: GLenum -> GLenum -> GLuint -> GLenum -> GLsizei -> CString -> GL ()
unwrap_glDebugMessageCallback :: FunPtr (FunPtr GLDebugProc -> Ptr () -> GL ()) -> FunPtr GLDebugProc -> Ptr () -> GL ()
glDebugMessageCallback :: FunPtr GLDebugProc -> Ptr () -> GL ()
unwrap_glGetDebugMessageLog :: FunPtr (GLuint -> GLsizei -> Ptr GLenum -> Ptr GLenum -> Ptr GLuint -> Ptr GLenum -> Ptr GLsizei -> CString -> GL GLuint) -> GLuint -> GLsizei -> Ptr GLenum -> Ptr GLenum -> Ptr GLuint -> Ptr GLenum -> Ptr GLsizei -> CString -> GL GLuint
glGetDebugMessageLog :: GLuint -> GLsizei -> Ptr GLenum -> Ptr GLenum -> Ptr GLuint -> Ptr GLenum -> Ptr GLsizei -> CString -> GL GLuint
unwrap_glPushDebugGroup :: FunPtr (GLenum -> GLuint -> GLsizei -> CString -> GL ()) -> GLenum -> GLuint -> GLsizei -> CString -> GL ()
glPushDebugGroup :: GLenum -> GLuint -> GLsizei -> CString -> GL ()
unwrap_glPopDebugGroup :: FunPtr (GL ()) -> GL ()
glPopDebugGroup :: GL ()
unwrap_glObjectLabel :: FunPtr (GLenum -> GLuint -> GLsizei -> CString -> GL ()) -> GLenum -> GLuint -> GLsizei -> CString -> GL ()
glObjectLabel :: GLenum -> GLuint -> GLsizei -> CString -> GL ()
unwrap_glGetObjectLabel :: FunPtr (GLenum -> GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()) -> GLenum -> GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()
glGetObjectLabel :: GLenum -> GLuint -> GLsizei -> Ptr GLsizei -> CString -> GL ()
unwrap_glObjectPtrLabel :: FunPtr (Ptr () -> GLsizei -> CString -> GL ()) -> Ptr () -> GLsizei -> CString -> GL ()
glObjectPtrLabel :: Ptr () -> GLsizei -> CString -> GL ()
unwrap_glGetObjectPtrLabel :: FunPtr (Ptr () -> GLsizei -> Ptr GLsizei -> CString -> GL ()) -> Ptr () -> GLsizei -> Ptr GLsizei -> CString -> GL ()
glGetObjectPtrLabel :: Ptr () -> GLsizei -> Ptr GLsizei -> CString -> GL ()
unwrap_glBufferStorage :: FunPtr (GLenum -> GLsizeiptr -> Ptr () -> GLbitfield -> GL ()) -> GLenum -> GLsizeiptr -> Ptr () -> GLbitfield -> GL ()
glBufferStorage :: GLenum -> GLsizeiptr -> Ptr () -> GLbitfield -> GL ()
unwrap_glClearTexImage :: FunPtr (GLuint -> GLint -> GLenum -> GLenum -> Ptr () -> GL ()) -> GLuint -> GLint -> GLenum -> GLenum -> Ptr () -> GL ()
glClearTexImage :: GLuint -> GLint -> GLenum -> GLenum -> Ptr () -> GL ()
unwrap_glClearTexSubImage :: FunPtr (GLuint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GLenum -> GLenum -> Ptr () -> GL ()) -> GLuint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GLenum -> GLenum -> Ptr () -> GL ()
glClearTexSubImage :: GLuint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GLenum -> GLenum -> Ptr () -> GL ()
unwrap_glBindBuffersBase :: FunPtr (GLenum -> GLuint -> GLsizei -> Ptr GLuint -> GL ()) -> GLenum -> GLuint -> GLsizei -> Ptr GLuint -> GL ()
glBindBuffersBase :: GLenum -> GLuint -> GLsizei -> Ptr GLuint -> GL ()
unwrap_glBindBuffersRange :: FunPtr (GLenum -> GLuint -> GLsizei -> Ptr GLuint -> Ptr GLintptr -> Ptr GLsizeiptr -> GL ()) -> GLenum -> GLuint -> GLsizei -> Ptr GLuint -> Ptr GLintptr -> Ptr GLsizeiptr -> GL ()
glBindBuffersRange :: GLenum -> GLuint -> GLsizei -> Ptr GLuint -> Ptr GLintptr -> Ptr GLsizeiptr -> GL ()
unwrap_glBindTextures :: FunPtr (GLuint -> GLsizei -> Ptr GLuint -> GL ()) -> GLuint -> GLsizei -> Ptr GLuint -> GL ()
glBindTextures :: GLuint -> GLsizei -> Ptr GLuint -> GL ()
unwrap_glBindSamplers :: FunPtr (GLuint -> GLsizei -> Ptr GLuint -> GL ()) -> GLuint -> GLsizei -> Ptr GLuint -> GL ()
glBindSamplers :: GLuint -> GLsizei -> Ptr GLuint -> GL ()
unwrap_glBindImageTextures :: FunPtr (GLuint -> GLsizei -> Ptr GLuint -> GL ()) -> GLuint -> GLsizei -> Ptr GLuint -> GL ()
glBindImageTextures :: GLuint -> GLsizei -> Ptr GLuint -> GL ()
unwrap_glBindVertexBuffers :: FunPtr (GLuint -> GLsizei -> Ptr GLuint -> Ptr GLintptr -> Ptr GLsizei -> GL ()) -> GLuint -> GLsizei -> Ptr GLuint -> Ptr GLintptr -> Ptr GLsizei -> GL ()
glBindVertexBuffers :: GLuint -> GLsizei -> Ptr GLuint -> Ptr GLintptr -> Ptr GLsizei -> GL ()
unwrap_glClipControl :: FunPtr (GLenum -> GLenum -> GL ()) -> GLenum -> GLenum -> GL ()
glClipControl :: GLenum -> GLenum -> GL ()
unwrap_glCreateTransformFeedbacks :: FunPtr (GLsizei -> Ptr GLuint -> GL ()) -> GLsizei -> Ptr GLuint -> GL ()
glCreateTransformFeedbacks :: GLsizei -> Ptr GLuint -> GL ()
unwrap_glTransformFeedbackBufferBase :: FunPtr (GLuint -> GLuint -> GLuint -> GL ()) -> GLuint -> GLuint -> GLuint -> GL ()
glTransformFeedbackBufferBase :: GLuint -> GLuint -> GLuint -> GL ()
unwrap_glTransformFeedbackBufferRange :: FunPtr (GLuint -> GLuint -> GLuint -> GLintptr -> GLsizei -> GL ()) -> GLuint -> GLuint -> GLuint -> GLintptr -> GLsizei -> GL ()
glTransformFeedbackBufferRange :: GLuint -> GLuint -> GLuint -> GLintptr -> GLsizei -> GL ()
unwrap_glGetTransformFeedbackiv :: FunPtr (GLuint -> GLenum -> Ptr GLint -> GL ()) -> GLuint -> GLenum -> Ptr GLint -> GL ()
glGetTransformFeedbackiv :: GLuint -> GLenum -> Ptr GLint -> GL ()
unwrap_glGetTransformFeedbacki_v :: FunPtr (GLuint -> GLenum -> GLuint -> Ptr GLint -> GL ()) -> GLuint -> GLenum -> GLuint -> Ptr GLint -> GL ()
glGetTransformFeedbacki_v :: GLuint -> GLenum -> GLuint -> Ptr GLint -> GL ()
unwrap_glGetTransformFeedbacki64_v :: FunPtr (GLuint -> GLenum -> GLuint -> Ptr GLint64 -> GL ()) -> GLuint -> GLenum -> GLuint -> Ptr GLint64 -> GL ()
glGetTransformFeedbacki64_v :: GLuint -> GLenum -> GLuint -> Ptr GLint64 -> GL ()
unwrap_glCreateBuffers :: FunPtr (GLsizei -> Ptr GLuint -> GL ()) -> GLsizei -> Ptr GLuint -> GL ()
glCreateBuffers :: GLsizei -> Ptr GLuint -> GL ()
unwrap_glNamedBufferStorage :: FunPtr (GLuint -> GLsizei -> Ptr () -> GLbitfield -> GL ()) -> GLuint -> GLsizei -> Ptr () -> GLbitfield -> GL ()
glNamedBufferStorage :: GLuint -> GLsizei -> Ptr () -> GLbitfield -> GL ()
unwrap_glNamedBufferData :: FunPtr (GLuint -> GLsizei -> Ptr () -> GLenum -> GL ()) -> GLuint -> GLsizei -> Ptr () -> GLenum -> GL ()
glNamedBufferData :: GLuint -> GLsizei -> Ptr () -> GLenum -> GL ()
unwrap_glNamedBufferSubData :: FunPtr (GLuint -> GLintptr -> GLsizei -> Ptr () -> GL ()) -> GLuint -> GLintptr -> GLsizei -> Ptr () -> GL ()
glNamedBufferSubData :: GLuint -> GLintptr -> GLsizei -> Ptr () -> GL ()
unwrap_glCopyNamedBufferSubData :: FunPtr (GLuint -> GLuint -> GLintptr -> GLintptr -> GLsizei -> GL ()) -> GLuint -> GLuint -> GLintptr -> GLintptr -> GLsizei -> GL ()
glCopyNamedBufferSubData :: GLuint -> GLuint -> GLintptr -> GLintptr -> GLsizei -> GL ()
unwrap_glClearNamedBufferData :: FunPtr (GLuint -> GLenum -> GLenum -> GLenum -> Ptr () -> GL ()) -> GLuint -> GLenum -> GLenum -> GLenum -> Ptr () -> GL ()
glClearNamedBufferData :: GLuint -> GLenum -> GLenum -> GLenum -> Ptr () -> GL ()
unwrap_glClearNamedBufferSubData :: FunPtr (GLuint -> GLenum -> GLintptr -> GLsizei -> GLenum -> GLenum -> Ptr () -> GL ()) -> GLuint -> GLenum -> GLintptr -> GLsizei -> GLenum -> GLenum -> Ptr () -> GL ()
glClearNamedBufferSubData :: GLuint -> GLenum -> GLintptr -> GLsizei -> GLenum -> GLenum -> Ptr () -> GL ()
unwrap_glMapNamedBuffer :: FunPtr (GLuint -> GLenum -> GL (Ptr ())) -> GLuint -> GLenum -> GL (Ptr ())
glMapNamedBuffer :: GLuint -> GLenum -> GL (Ptr ())
unwrap_glMapNamedBufferRange :: FunPtr (GLuint -> GLintptr -> GLsizei -> GLbitfield -> GL (Ptr ())) -> GLuint -> GLintptr -> GLsizei -> GLbitfield -> GL (Ptr ())
glMapNamedBufferRange :: GLuint -> GLintptr -> GLsizei -> GLbitfield -> GL (Ptr ())
unwrap_glUnmapNamedBuffer :: FunPtr (GLuint -> GL GLboolean) -> GLuint -> GL GLboolean
glUnmapNamedBuffer :: GLuint -> GL GLboolean
unwrap_glFlushMappedNamedBufferRange :: FunPtr (GLuint -> GLintptr -> GLsizei -> GL ()) -> GLuint -> GLintptr -> GLsizei -> GL ()
glFlushMappedNamedBufferRange :: GLuint -> GLintptr -> GLsizei -> GL ()
unwrap_glGetNamedBufferParameteriv :: FunPtr (GLuint -> GLenum -> Ptr GLint -> GL ()) -> GLuint -> GLenum -> Ptr GLint -> GL ()
glGetNamedBufferParameteriv :: GLuint -> GLenum -> Ptr GLint -> GL ()
unwrap_glGetNamedBufferParameteri64v :: FunPtr (GLuint -> GLenum -> Ptr GLint64 -> GL ()) -> GLuint -> GLenum -> Ptr GLint64 -> GL ()
glGetNamedBufferParameteri64v :: GLuint -> GLenum -> Ptr GLint64 -> GL ()
unwrap_glGetNamedBufferPointerv :: FunPtr (GLuint -> GLenum -> Ptr (Ptr ()) -> GL ()) -> GLuint -> GLenum -> Ptr (Ptr ()) -> GL ()
glGetNamedBufferPointerv :: GLuint -> GLenum -> Ptr (Ptr ()) -> GL ()
unwrap_glGetNamedBufferSubData :: FunPtr (GLuint -> GLintptr -> GLsizei -> Ptr () -> GL ()) -> GLuint -> GLintptr -> GLsizei -> Ptr () -> GL ()
glGetNamedBufferSubData :: GLuint -> GLintptr -> GLsizei -> Ptr () -> GL ()
unwrap_glCreateFramebuffers :: FunPtr (GLsizei -> Ptr GLuint -> GL ()) -> GLsizei -> Ptr GLuint -> GL ()
glCreateFramebuffers :: GLsizei -> Ptr GLuint -> GL ()
unwrap_glNamedFramebufferRenderbuffer :: FunPtr (GLuint -> GLenum -> GLenum -> GLuint -> GL ()) -> GLuint -> GLenum -> GLenum -> GLuint -> GL ()
glNamedFramebufferRenderbuffer :: GLuint -> GLenum -> GLenum -> GLuint -> GL ()
unwrap_glNamedFramebufferParameteri :: FunPtr (GLuint -> GLenum -> GLint -> GL ()) -> GLuint -> GLenum -> GLint -> GL ()
glNamedFramebufferParameteri :: GLuint -> GLenum -> GLint -> GL ()
unwrap_glNamedFramebufferTexture :: FunPtr (GLuint -> GLenum -> GLuint -> GLint -> GL ()) -> GLuint -> GLenum -> GLuint -> GLint -> GL ()
glNamedFramebufferTexture :: GLuint -> GLenum -> GLuint -> GLint -> GL ()
unwrap_glNamedFramebufferTextureLayer :: FunPtr (GLuint -> GLenum -> GLuint -> GLint -> GLint -> GL ()) -> GLuint -> GLenum -> GLuint -> GLint -> GLint -> GL ()
glNamedFramebufferTextureLayer :: GLuint -> GLenum -> GLuint -> GLint -> GLint -> GL ()
unwrap_glNamedFramebufferDrawBuffer :: FunPtr (GLuint -> GLenum -> GL ()) -> GLuint -> GLenum -> GL ()
glNamedFramebufferDrawBuffer :: GLuint -> GLenum -> GL ()
unwrap_glNamedFramebufferDrawBuffers :: FunPtr (GLuint -> GLsizei -> Ptr GLenum -> GL ()) -> GLuint -> GLsizei -> Ptr GLenum -> GL ()
glNamedFramebufferDrawBuffers :: GLuint -> GLsizei -> Ptr GLenum -> GL ()
unwrap_glNamedFramebufferReadBuffer :: FunPtr (GLuint -> GLenum -> GL ()) -> GLuint -> GLenum -> GL ()
glNamedFramebufferReadBuffer :: GLuint -> GLenum -> GL ()
unwrap_glInvalidateNamedFramebufferData :: FunPtr (GLuint -> GLsizei -> Ptr GLenum -> GL ()) -> GLuint -> GLsizei -> Ptr GLenum -> GL ()
glInvalidateNamedFramebufferData :: GLuint -> GLsizei -> Ptr GLenum -> GL ()
unwrap_glInvalidateNamedFramebufferSubData :: FunPtr (GLuint -> GLsizei -> Ptr GLenum -> GLint -> GLint -> GLsizei -> GLsizei -> GL ()) -> GLuint -> GLsizei -> Ptr GLenum -> GLint -> GLint -> GLsizei -> GLsizei -> GL ()
glInvalidateNamedFramebufferSubData :: GLuint -> GLsizei -> Ptr GLenum -> GLint -> GLint -> GLsizei -> GLsizei -> GL ()
unwrap_glClearNamedFramebufferiv :: FunPtr (GLuint -> GLenum -> GLint -> Ptr GLint -> GL ()) -> GLuint -> GLenum -> GLint -> Ptr GLint -> GL ()
glClearNamedFramebufferiv :: GLuint -> GLenum -> GLint -> Ptr GLint -> GL ()
unwrap_glClearNamedFramebufferuiv :: FunPtr (GLuint -> GLenum -> GLint -> Ptr GLuint -> GL ()) -> GLuint -> GLenum -> GLint -> Ptr GLuint -> GL ()
glClearNamedFramebufferuiv :: GLuint -> GLenum -> GLint -> Ptr GLuint -> GL ()
unwrap_glClearNamedFramebufferfv :: FunPtr (GLuint -> GLenum -> GLint -> Ptr GLfloat -> GL ()) -> GLuint -> GLenum -> GLint -> Ptr GLfloat -> GL ()
glClearNamedFramebufferfv :: GLuint -> GLenum -> GLint -> Ptr GLfloat -> GL ()
unwrap_glClearNamedFramebufferfi :: FunPtr (GLuint -> GLenum -> GLfloat -> GLint -> GL ()) -> GLuint -> GLenum -> GLfloat -> GLint -> GL ()
glClearNamedFramebufferfi :: GLuint -> GLenum -> GLfloat -> GLint -> GL ()
unwrap_glBlitNamedFramebuffer :: FunPtr (GLuint -> GLuint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLbitfield -> GLenum -> GL ()) -> GLuint -> GLuint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLbitfield -> GLenum -> GL ()
glBlitNamedFramebuffer :: GLuint -> GLuint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLbitfield -> GLenum -> GL ()
unwrap_glCheckNamedFramebufferStatus :: FunPtr (GLuint -> GLenum -> GL GLenum) -> GLuint -> GLenum -> GL GLenum
glCheckNamedFramebufferStatus :: GLuint -> GLenum -> GL GLenum
unwrap_glGetNamedFramebufferParameteriv :: FunPtr (GLuint -> GLenum -> Ptr GLint -> GL ()) -> GLuint -> GLenum -> Ptr GLint -> GL ()
glGetNamedFramebufferParameteriv :: GLuint -> GLenum -> Ptr GLint -> GL ()
unwrap_glGetNamedFramebufferAttachmentParameteriv :: FunPtr (GLuint -> GLenum -> GLenum -> Ptr GLint -> GL ()) -> GLuint -> GLenum -> GLenum -> Ptr GLint -> GL ()
glGetNamedFramebufferAttachmentParameteriv :: GLuint -> GLenum -> GLenum -> Ptr GLint -> GL ()
unwrap_glCreateRenderbuffers :: FunPtr (GLsizei -> Ptr GLuint -> GL ()) -> GLsizei -> Ptr GLuint -> GL ()
glCreateRenderbuffers :: GLsizei -> Ptr GLuint -> GL ()
unwrap_glNamedRenderbufferStorage :: FunPtr (GLuint -> GLenum -> GLsizei -> GLsizei -> GL ()) -> GLuint -> GLenum -> GLsizei -> GLsizei -> GL ()
glNamedRenderbufferStorage :: GLuint -> GLenum -> GLsizei -> GLsizei -> GL ()
unwrap_glNamedRenderbufferStorageMultisample :: FunPtr (GLuint -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GL ()) -> GLuint -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GL ()
glNamedRenderbufferStorageMultisample :: GLuint -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GL ()
unwrap_glGetNamedRenderbufferParameteriv :: FunPtr (GLuint -> GLenum -> Ptr GLint -> GL ()) -> GLuint -> GLenum -> Ptr GLint -> GL ()
glGetNamedRenderbufferParameteriv :: GLuint -> GLenum -> Ptr GLint -> GL ()
unwrap_glCreateTextures :: FunPtr (GLenum -> GLsizei -> Ptr GLuint -> GL ()) -> GLenum -> GLsizei -> Ptr GLuint -> GL ()
glCreateTextures :: GLenum -> GLsizei -> Ptr GLuint -> GL ()
unwrap_glTextureBuffer :: FunPtr (GLuint -> GLenum -> GLuint -> GL ()) -> GLuint -> GLenum -> GLuint -> GL ()
glTextureBuffer :: GLuint -> GLenum -> GLuint -> GL ()
unwrap_glTextureBufferRange :: FunPtr (GLuint -> GLenum -> GLuint -> GLintptr -> GLsizei -> GL ()) -> GLuint -> GLenum -> GLuint -> GLintptr -> GLsizei -> GL ()
glTextureBufferRange :: GLuint -> GLenum -> GLuint -> GLintptr -> GLsizei -> GL ()
unwrap_glTextureStorage1D :: FunPtr (GLuint -> GLsizei -> GLenum -> GLsizei -> GL ()) -> GLuint -> GLsizei -> GLenum -> GLsizei -> GL ()
glTextureStorage1D :: GLuint -> GLsizei -> GLenum -> GLsizei -> GL ()
unwrap_glTextureStorage2D :: FunPtr (GLuint -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GL ()) -> GLuint -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GL ()
glTextureStorage2D :: GLuint -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GL ()
unwrap_glTextureStorage3D :: FunPtr (GLuint -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GLsizei -> GL ()) -> GLuint -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GLsizei -> GL ()
glTextureStorage3D :: GLuint -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GLsizei -> GL ()
unwrap_glTextureStorage2DMultisample :: FunPtr (GLuint -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GLboolean -> GL ()) -> GLuint -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GLboolean -> GL ()
glTextureStorage2DMultisample :: GLuint -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GLboolean -> GL ()
unwrap_glTextureStorage3DMultisample :: FunPtr (GLuint -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GLsizei -> GLboolean -> GL ()) -> GLuint -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GLsizei -> GLboolean -> GL ()
glTextureStorage3DMultisample :: GLuint -> GLsizei -> GLenum -> GLsizei -> GLsizei -> GLsizei -> GLboolean -> GL ()
unwrap_glTextureSubImage1D :: FunPtr (GLuint -> GLint -> GLint -> GLsizei -> GLenum -> GLenum -> Ptr () -> GL ()) -> GLuint -> GLint -> GLint -> GLsizei -> GLenum -> GLenum -> Ptr () -> GL ()
glTextureSubImage1D :: GLuint -> GLint -> GLint -> GLsizei -> GLenum -> GLenum -> Ptr () -> GL ()
unwrap_glTextureSubImage2D :: FunPtr (GLuint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLenum -> GLenum -> Ptr () -> GL ()) -> GLuint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLenum -> GLenum -> Ptr () -> GL ()
glTextureSubImage2D :: GLuint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLenum -> GLenum -> Ptr () -> GL ()
unwrap_glTextureSubImage3D :: FunPtr (GLuint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GLenum -> GLenum -> Ptr () -> GL ()) -> GLuint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GLenum -> GLenum -> Ptr () -> GL ()
glTextureSubImage3D :: GLuint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GLenum -> GLenum -> Ptr () -> GL ()
unwrap_glCompressedTextureSubImage1D :: FunPtr (GLuint -> GLint -> GLint -> GLsizei -> GLenum -> GLsizei -> Ptr () -> GL ()) -> GLuint -> GLint -> GLint -> GLsizei -> GLenum -> GLsizei -> Ptr () -> GL ()
glCompressedTextureSubImage1D :: GLuint -> GLint -> GLint -> GLsizei -> GLenum -> GLsizei -> Ptr () -> GL ()
unwrap_glCompressedTextureSubImage2D :: FunPtr (GLuint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLenum -> GLsizei -> Ptr () -> GL ()) -> GLuint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLenum -> GLsizei -> Ptr () -> GL ()
glCompressedTextureSubImage2D :: GLuint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLenum -> GLsizei -> Ptr () -> GL ()
unwrap_glCompressedTextureSubImage3D :: FunPtr (GLuint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GLenum -> GLsizei -> Ptr () -> GL ()) -> GLuint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GLenum -> GLsizei -> Ptr () -> GL ()
glCompressedTextureSubImage3D :: GLuint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GLenum -> GLsizei -> Ptr () -> GL ()
unwrap_glCopyTextureSubImage1D :: FunPtr (GLuint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GL ()) -> GLuint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GL ()
glCopyTextureSubImage1D :: GLuint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GL ()
unwrap_glCopyTextureSubImage2D :: FunPtr (GLuint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GL ()) -> GLuint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GL ()
glCopyTextureSubImage2D :: GLuint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GL ()
unwrap_glCopyTextureSubImage3D :: FunPtr (GLuint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GL ()) -> GLuint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GL ()
glCopyTextureSubImage3D :: GLuint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GL ()
unwrap_glTextureParameterf :: FunPtr (GLuint -> GLenum -> GLfloat -> GL ()) -> GLuint -> GLenum -> GLfloat -> GL ()
glTextureParameterf :: GLuint -> GLenum -> GLfloat -> GL ()
unwrap_glTextureParameterfv :: FunPtr (GLuint -> GLenum -> Ptr GLfloat -> GL ()) -> GLuint -> GLenum -> Ptr GLfloat -> GL ()
glTextureParameterfv :: GLuint -> GLenum -> Ptr GLfloat -> GL ()
unwrap_glTextureParameteri :: FunPtr (GLuint -> GLenum -> GLint -> GL ()) -> GLuint -> GLenum -> GLint -> GL ()
glTextureParameteri :: GLuint -> GLenum -> GLint -> GL ()
unwrap_glTextureParameterIiv :: FunPtr (GLuint -> GLenum -> Ptr GLint -> GL ()) -> GLuint -> GLenum -> Ptr GLint -> GL ()
glTextureParameterIiv :: GLuint -> GLenum -> Ptr GLint -> GL ()
unwrap_glTextureParameterIuiv :: FunPtr (GLuint -> GLenum -> Ptr GLuint -> GL ()) -> GLuint -> GLenum -> Ptr GLuint -> GL ()
glTextureParameterIuiv :: GLuint -> GLenum -> Ptr GLuint -> GL ()
unwrap_glTextureParameteriv :: FunPtr (GLuint -> GLenum -> Ptr GLint -> GL ()) -> GLuint -> GLenum -> Ptr GLint -> GL ()
glTextureParameteriv :: GLuint -> GLenum -> Ptr GLint -> GL ()
unwrap_glGenerateTextureMipmap :: FunPtr (GLuint -> GL ()) -> GLuint -> GL ()
glGenerateTextureMipmap :: GLuint -> GL ()
unwrap_glBindTextureUnit :: FunPtr (GLuint -> GLuint -> GL ()) -> GLuint -> GLuint -> GL ()
glBindTextureUnit :: GLuint -> GLuint -> GL ()
unwrap_glGetTextureImage :: FunPtr (GLuint -> GLint -> GLenum -> GLenum -> GLsizei -> Ptr () -> GL ()) -> GLuint -> GLint -> GLenum -> GLenum -> GLsizei -> Ptr () -> GL ()
glGetTextureImage :: GLuint -> GLint -> GLenum -> GLenum -> GLsizei -> Ptr () -> GL ()
unwrap_glGetCompressedTextureImage :: FunPtr (GLuint -> GLint -> GLsizei -> Ptr () -> GL ()) -> GLuint -> GLint -> GLsizei -> Ptr () -> GL ()
glGetCompressedTextureImage :: GLuint -> GLint -> GLsizei -> Ptr () -> GL ()
unwrap_glGetTextureLevelParameterfv :: FunPtr (GLuint -> GLint -> GLenum -> Ptr GLfloat -> GL ()) -> GLuint -> GLint -> GLenum -> Ptr GLfloat -> GL ()
glGetTextureLevelParameterfv :: GLuint -> GLint -> GLenum -> Ptr GLfloat -> GL ()
unwrap_glGetTextureLevelParameteriv :: FunPtr (GLuint -> GLint -> GLenum -> Ptr GLint -> GL ()) -> GLuint -> GLint -> GLenum -> Ptr GLint -> GL ()
glGetTextureLevelParameteriv :: GLuint -> GLint -> GLenum -> Ptr GLint -> GL ()
unwrap_glGetTextureParameterfv :: FunPtr (GLuint -> GLenum -> Ptr GLfloat -> GL ()) -> GLuint -> GLenum -> Ptr GLfloat -> GL ()
glGetTextureParameterfv :: GLuint -> GLenum -> Ptr GLfloat -> GL ()
unwrap_glGetTextureParameterIiv :: FunPtr (GLuint -> GLenum -> Ptr GLint -> GL ()) -> GLuint -> GLenum -> Ptr GLint -> GL ()
glGetTextureParameterIiv :: GLuint -> GLenum -> Ptr GLint -> GL ()
unwrap_glGetTextureParameterIuiv :: FunPtr (GLuint -> GLenum -> Ptr GLuint -> GL ()) -> GLuint -> GLenum -> Ptr GLuint -> GL ()
glGetTextureParameterIuiv :: GLuint -> GLenum -> Ptr GLuint -> GL ()
unwrap_glGetTextureParameteriv :: FunPtr (GLuint -> GLenum -> Ptr GLint -> GL ()) -> GLuint -> GLenum -> Ptr GLint -> GL ()
glGetTextureParameteriv :: GLuint -> GLenum -> Ptr GLint -> GL ()
unwrap_glCreateVertexArrays :: FunPtr (GLsizei -> Ptr GLuint -> GL ()) -> GLsizei -> Ptr GLuint -> GL ()
glCreateVertexArrays :: GLsizei -> Ptr GLuint -> GL ()
unwrap_glDisableVertexArrayAttrib :: FunPtr (GLuint -> GLuint -> GL ()) -> GLuint -> GLuint -> GL ()
glDisableVertexArrayAttrib :: GLuint -> GLuint -> GL ()
unwrap_glEnableVertexArrayAttrib :: FunPtr (GLuint -> GLuint -> GL ()) -> GLuint -> GLuint -> GL ()
glEnableVertexArrayAttrib :: GLuint -> GLuint -> GL ()
unwrap_glVertexArrayElementBuffer :: FunPtr (GLuint -> GLuint -> GL ()) -> GLuint -> GLuint -> GL ()
glVertexArrayElementBuffer :: GLuint -> GLuint -> GL ()
unwrap_glVertexArrayVertexBuffer :: FunPtr (GLuint -> GLuint -> GLuint -> GLintptr -> GLsizei -> GL ()) -> GLuint -> GLuint -> GLuint -> GLintptr -> GLsizei -> GL ()
glVertexArrayVertexBuffer :: GLuint -> GLuint -> GLuint -> GLintptr -> GLsizei -> GL ()
unwrap_glVertexArrayVertexBuffers :: FunPtr (GLuint -> GLuint -> GLsizei -> Ptr GLuint -> Ptr GLintptr -> Ptr GLsizei -> GL ()) -> GLuint -> GLuint -> GLsizei -> Ptr GLuint -> Ptr GLintptr -> Ptr GLsizei -> GL ()
glVertexArrayVertexBuffers :: GLuint -> GLuint -> GLsizei -> Ptr GLuint -> Ptr GLintptr -> Ptr GLsizei -> GL ()
unwrap_glVertexArrayAttribBinding :: FunPtr (GLuint -> GLuint -> GLuint -> GL ()) -> GLuint -> GLuint -> GLuint -> GL ()
glVertexArrayAttribBinding :: GLuint -> GLuint -> GLuint -> GL ()
unwrap_glVertexArrayAttribFormat :: FunPtr (GLuint -> GLuint -> GLint -> GLenum -> GLboolean -> GLuint -> GL ()) -> GLuint -> GLuint -> GLint -> GLenum -> GLboolean -> GLuint -> GL ()
glVertexArrayAttribFormat :: GLuint -> GLuint -> GLint -> GLenum -> GLboolean -> GLuint -> GL ()
unwrap_glVertexArrayAttribIFormat :: FunPtr (GLuint -> GLuint -> GLint -> GLenum -> GLuint -> GL ()) -> GLuint -> GLuint -> GLint -> GLenum -> GLuint -> GL ()
glVertexArrayAttribIFormat :: GLuint -> GLuint -> GLint -> GLenum -> GLuint -> GL ()
unwrap_glVertexArrayAttribLFormat :: FunPtr (GLuint -> GLuint -> GLint -> GLenum -> GLuint -> GL ()) -> GLuint -> GLuint -> GLint -> GLenum -> GLuint -> GL ()
glVertexArrayAttribLFormat :: GLuint -> GLuint -> GLint -> GLenum -> GLuint -> GL ()
unwrap_glVertexArrayBindingDivisor :: FunPtr (GLuint -> GLuint -> GLuint -> GL ()) -> GLuint -> GLuint -> GLuint -> GL ()
glVertexArrayBindingDivisor :: GLuint -> GLuint -> GLuint -> GL ()
unwrap_glGetVertexArrayiv :: FunPtr (GLuint -> GLenum -> Ptr GLint -> GL ()) -> GLuint -> GLenum -> Ptr GLint -> GL ()
glGetVertexArrayiv :: GLuint -> GLenum -> Ptr GLint -> GL ()
unwrap_glGetVertexArrayIndexediv :: FunPtr (GLuint -> GLuint -> GLenum -> Ptr GLint -> GL ()) -> GLuint -> GLuint -> GLenum -> Ptr GLint -> GL ()
glGetVertexArrayIndexediv :: GLuint -> GLuint -> GLenum -> Ptr GLint -> GL ()
unwrap_glGetVertexArrayIndexed64iv :: FunPtr (GLuint -> GLuint -> GLenum -> Ptr GLint64 -> GL ()) -> GLuint -> GLuint -> GLenum -> Ptr GLint64 -> GL ()
glGetVertexArrayIndexed64iv :: GLuint -> GLuint -> GLenum -> Ptr GLint64 -> GL ()
unwrap_glCreateSamplers :: FunPtr (GLsizei -> Ptr GLuint -> GL ()) -> GLsizei -> Ptr GLuint -> GL ()
glCreateSamplers :: GLsizei -> Ptr GLuint -> GL ()
unwrap_glCreateProgramPipelines :: FunPtr (GLsizei -> Ptr GLuint -> GL ()) -> GLsizei -> Ptr GLuint -> GL ()
glCreateProgramPipelines :: GLsizei -> Ptr GLuint -> GL ()
unwrap_glCreateQueries :: FunPtr (GLenum -> GLsizei -> Ptr GLuint -> GL ()) -> GLenum -> GLsizei -> Ptr GLuint -> GL ()
glCreateQueries :: GLenum -> GLsizei -> Ptr GLuint -> GL ()
unwrap_glGetQueryBufferObjecti64v :: FunPtr (GLuint -> GLuint -> GLenum -> GLintptr -> GL ()) -> GLuint -> GLuint -> GLenum -> GLintptr -> GL ()
glGetQueryBufferObjecti64v :: GLuint -> GLuint -> GLenum -> GLintptr -> GL ()
unwrap_glGetQueryBufferObjectiv :: FunPtr (GLuint -> GLuint -> GLenum -> GLintptr -> GL ()) -> GLuint -> GLuint -> GLenum -> GLintptr -> GL ()
glGetQueryBufferObjectiv :: GLuint -> GLuint -> GLenum -> GLintptr -> GL ()
unwrap_glGetQueryBufferObjectui64v :: FunPtr (GLuint -> GLuint -> GLenum -> GLintptr -> GL ()) -> GLuint -> GLuint -> GLenum -> GLintptr -> GL ()
glGetQueryBufferObjectui64v :: GLuint -> GLuint -> GLenum -> GLintptr -> GL ()
unwrap_glGetQueryBufferObjectuiv :: FunPtr (GLuint -> GLuint -> GLenum -> GLintptr -> GL ()) -> GLuint -> GLuint -> GLenum -> GLintptr -> GL ()
glGetQueryBufferObjectuiv :: GLuint -> GLuint -> GLenum -> GLintptr -> GL ()
unwrap_glMemoryBarrierByRegion :: FunPtr (GLbitfield -> GL ()) -> GLbitfield -> GL ()
glMemoryBarrierByRegion :: GLbitfield -> GL ()
unwrap_glGetTextureSubImage :: FunPtr (GLuint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GLenum -> GLenum -> GLsizei -> Ptr () -> GL ()) -> GLuint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GLenum -> GLenum -> GLsizei -> Ptr () -> GL ()
glGetTextureSubImage :: GLuint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GLenum -> GLenum -> GLsizei -> Ptr () -> GL ()
unwrap_glGetCompressedTextureSubImage :: FunPtr (GLuint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GLsizei -> Ptr () -> GL ()) -> GLuint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GLsizei -> Ptr () -> GL ()
glGetCompressedTextureSubImage :: GLuint -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GLsizei -> Ptr () -> GL ()
unwrap_glGetGraphicsResetStatus :: FunPtr (GL GLenum) -> GL GLenum
glGetGraphicsResetStatus :: GL GLenum
unwrap_glGetnCompressedTexImage :: FunPtr (GLenum -> GLint -> GLsizei -> Ptr () -> GL ()) -> GLenum -> GLint -> GLsizei -> Ptr () -> GL ()
glGetnCompressedTexImage :: GLenum -> GLint -> GLsizei -> Ptr () -> GL ()
unwrap_glGetnTexImage :: FunPtr (GLenum -> GLint -> GLenum -> GLenum -> GLsizei -> Ptr () -> GL ()) -> GLenum -> GLint -> GLenum -> GLenum -> GLsizei -> Ptr () -> GL ()
glGetnTexImage :: GLenum -> GLint -> GLenum -> GLenum -> GLsizei -> Ptr () -> GL ()
unwrap_glGetnUniformdv :: FunPtr (GLuint -> GLint -> GLsizei -> Ptr GLdouble -> GL ()) -> GLuint -> GLint -> GLsizei -> Ptr GLdouble -> GL ()
glGetnUniformdv :: GLuint -> GLint -> GLsizei -> Ptr GLdouble -> GL ()
unwrap_glGetnUniformfv :: FunPtr (GLuint -> GLint -> GLsizei -> Ptr GLfloat -> GL ()) -> GLuint -> GLint -> GLsizei -> Ptr GLfloat -> GL ()
glGetnUniformfv :: GLuint -> GLint -> GLsizei -> Ptr GLfloat -> GL ()
unwrap_glGetnUniformiv :: FunPtr (GLuint -> GLint -> GLsizei -> Ptr GLint -> GL ()) -> GLuint -> GLint -> GLsizei -> Ptr GLint -> GL ()
glGetnUniformiv :: GLuint -> GLint -> GLsizei -> Ptr GLint -> GL ()
unwrap_glGetnUniformuiv :: FunPtr (GLuint -> GLint -> GLsizei -> Ptr GLuint -> GL ()) -> GLuint -> GLint -> GLsizei -> Ptr GLuint -> GL ()
glGetnUniformuiv :: GLuint -> GLint -> GLsizei -> Ptr GLuint -> GL ()
unwrap_glReadnPixels :: FunPtr (GLint -> GLint -> GLsizei -> GLsizei -> GLenum -> GLenum -> GLsizei -> Ptr () -> GL ()) -> GLint -> GLint -> GLsizei -> GLsizei -> GLenum -> GLenum -> GLsizei -> Ptr () -> GL ()
glReadnPixels :: GLint -> GLint -> GLsizei -> GLsizei -> GLenum -> GLenum -> GLsizei -> Ptr () -> GL ()
unwrap_glTextureBarrier :: FunPtr (GL ()) -> GL ()
glTextureBarrier :: GL ()
unwrap_glGetTextureHandleARB :: FunPtr (GLuint -> GL GLuint64) -> GLuint -> GL GLuint64
glGetTextureHandleARB :: GLuint -> GL GLuint64
unwrap_glGetTextureSamplerHandleARB :: FunPtr (GLuint -> GLuint -> GL GLuint64) -> GLuint -> GLuint -> GL GLuint64
glGetTextureSamplerHandleARB :: GLuint -> GLuint -> GL GLuint64
unwrap_glMakeTextureHandleResidentARB :: FunPtr (GLuint64 -> GL ()) -> GLuint64 -> GL ()
glMakeTextureHandleResidentARB :: GLuint64 -> GL ()
unwrap_glMakeTextureHandleNonResidentARB :: FunPtr (GLuint64 -> GL ()) -> GLuint64 -> GL ()
glMakeTextureHandleNonResidentARB :: GLuint64 -> GL ()
unwrap_glGetImageHandleARB :: FunPtr (GLuint -> GLint -> GLboolean -> GLint -> GLenum -> GL GLuint64) -> GLuint -> GLint -> GLboolean -> GLint -> GLenum -> GL GLuint64
glGetImageHandleARB :: GLuint -> GLint -> GLboolean -> GLint -> GLenum -> GL GLuint64
unwrap_glMakeImageHandleResidentARB :: FunPtr (GLuint64 -> GLenum -> GL ()) -> GLuint64 -> GLenum -> GL ()
glMakeImageHandleResidentARB :: GLuint64 -> GLenum -> GL ()
unwrap_glMakeImageHandleNonResidentARB :: FunPtr (GLuint64 -> GL ()) -> GLuint64 -> GL ()
glMakeImageHandleNonResidentARB :: GLuint64 -> GL ()
unwrap_glUniformHandleui64ARB :: FunPtr (GLint -> GLuint64 -> GL ()) -> GLint -> GLuint64 -> GL ()
glUniformHandleui64ARB :: GLint -> GLuint64 -> GL ()
unwrap_glUniformHandleui64vARB :: FunPtr (GLint -> GLsizei -> Ptr GLuint64 -> GL ()) -> GLint -> GLsizei -> Ptr GLuint64 -> GL ()
glUniformHandleui64vARB :: GLint -> GLsizei -> Ptr GLuint64 -> GL ()
unwrap_glProgramUniformHandleui64ARB :: FunPtr (GLuint -> GLint -> GLuint64 -> GL ()) -> GLuint -> GLint -> GLuint64 -> GL ()
glProgramUniformHandleui64ARB :: GLuint -> GLint -> GLuint64 -> GL ()
unwrap_glProgramUniformHandleui64vARB :: FunPtr (GLuint -> GLint -> GLsizei -> Ptr GLuint64 -> GL ()) -> GLuint -> GLint -> GLsizei -> Ptr GLuint64 -> GL ()
glProgramUniformHandleui64vARB :: GLuint -> GLint -> GLsizei -> Ptr GLuint64 -> GL ()
unwrap_glIsTextureHandleResidentARB :: FunPtr (GLuint64 -> GL GLboolean) -> GLuint64 -> GL GLboolean
glIsTextureHandleResidentARB :: GLuint64 -> GL GLboolean
unwrap_glIsImageHandleResidentARB :: FunPtr (GLuint64 -> GL GLboolean) -> GLuint64 -> GL GLboolean
glIsImageHandleResidentARB :: GLuint64 -> GL GLboolean
unwrap_glVertexAttribL1ui64ARB :: FunPtr (GLuint -> GLuint64EXT -> GL ()) -> GLuint -> GLuint64EXT -> GL ()
glVertexAttribL1ui64ARB :: GLuint -> GLuint64EXT -> GL ()
unwrap_glVertexAttribL1ui64vARB :: FunPtr (GLuint -> Ptr GLuint64EXT -> GL ()) -> GLuint -> Ptr GLuint64EXT -> GL ()
glVertexAttribL1ui64vARB :: GLuint -> Ptr GLuint64EXT -> GL ()
unwrap_glGetVertexAttribLui64vARB :: FunPtr (GLuint -> GLenum -> Ptr GLuint64EXT -> GL ()) -> GLuint -> GLenum -> Ptr GLuint64EXT -> GL ()
glGetVertexAttribLui64vARB :: GLuint -> GLenum -> Ptr GLuint64EXT -> GL ()
unwrap_glDispatchComputeGroupSizeARB :: FunPtr (GLuint -> GLuint -> GLuint -> GLuint -> GLuint -> GLuint -> GL ()) -> GLuint -> GLuint -> GLuint -> GLuint -> GLuint -> GLuint -> GL ()
glDispatchComputeGroupSizeARB :: GLuint -> GLuint -> GLuint -> GLuint -> GLuint -> GLuint -> GL ()
unwrap_glDebugMessageControlARB :: FunPtr (GLenum -> GLenum -> GLenum -> GLsizei -> Ptr GLuint -> GLboolean -> GL ()) -> GLenum -> GLenum -> GLenum -> GLsizei -> Ptr GLuint -> GLboolean -> GL ()
glDebugMessageControlARB :: GLenum -> GLenum -> GLenum -> GLsizei -> Ptr GLuint -> GLboolean -> GL ()
unwrap_glDebugMessageInsertARB :: FunPtr (GLenum -> GLenum -> GLuint -> GLenum -> GLsizei -> CString -> GL ()) -> GLenum -> GLenum -> GLuint -> GLenum -> GLsizei -> CString -> GL ()
glDebugMessageInsertARB :: GLenum -> GLenum -> GLuint -> GLenum -> GLsizei -> CString -> GL ()
unwrap_glDebugMessageCallbackARB :: FunPtr (FunPtr GLDebugProc -> Ptr () -> GL ()) -> FunPtr GLDebugProc -> Ptr () -> GL ()
glDebugMessageCallbackARB :: FunPtr GLDebugProc -> Ptr () -> GL ()
unwrap_glGetDebugMessageLogARB :: FunPtr (GLuint -> GLsizei -> Ptr GLenum -> Ptr GLenum -> Ptr GLuint -> Ptr GLenum -> Ptr GLsizei -> CString -> GL GLuint) -> GLuint -> GLsizei -> Ptr GLenum -> Ptr GLenum -> Ptr GLuint -> Ptr GLenum -> Ptr GLsizei -> CString -> GL GLuint
glGetDebugMessageLogARB :: GLuint -> GLsizei -> Ptr GLenum -> Ptr GLenum -> Ptr GLuint -> Ptr GLenum -> Ptr GLsizei -> CString -> GL GLuint
unwrap_glBlendEquationiARB :: FunPtr (GLuint -> GLenum -> GL ()) -> GLuint -> GLenum -> GL ()
glBlendEquationiARB :: GLuint -> GLenum -> GL ()
unwrap_glBlendEquationSeparateiARB :: FunPtr (GLuint -> GLenum -> GLenum -> GL ()) -> GLuint -> GLenum -> GLenum -> GL ()
glBlendEquationSeparateiARB :: GLuint -> GLenum -> GLenum -> GL ()
unwrap_glBlendFunciARB :: FunPtr (GLuint -> GLenum -> GLenum -> GL ()) -> GLuint -> GLenum -> GLenum -> GL ()
glBlendFunciARB :: GLuint -> GLenum -> GLenum -> GL ()
unwrap_glBlendFuncSeparateiARB :: FunPtr (GLuint -> GLenum -> GLenum -> GLenum -> GLenum -> GL ()) -> GLuint -> GLenum -> GLenum -> GLenum -> GLenum -> GL ()
glBlendFuncSeparateiARB :: GLuint -> GLenum -> GLenum -> GLenum -> GLenum -> GL ()
unwrap_glMultiDrawArraysIndirectCountARB :: FunPtr (GLenum -> GLintptr -> GLintptr -> GLsizei -> GLsizei -> GL ()) -> GLenum -> GLintptr -> GLintptr -> GLsizei -> GLsizei -> GL ()
glMultiDrawArraysIndirectCountARB :: GLenum -> GLintptr -> GLintptr -> GLsizei -> GLsizei -> GL ()
unwrap_glMultiDrawElementsIndirectCountARB :: FunPtr (GLenum -> GLenum -> GLintptr -> GLintptr -> GLsizei -> GLsizei -> GL ()) -> GLenum -> GLenum -> GLintptr -> GLintptr -> GLsizei -> GLsizei -> GL ()
glMultiDrawElementsIndirectCountARB :: GLenum -> GLenum -> GLintptr -> GLintptr -> GLsizei -> GLsizei -> GL ()
unwrap_glGetGraphicsResetStatusARB :: FunPtr (GL GLenum) -> GL GLenum
glGetGraphicsResetStatusARB :: GL GLenum
unwrap_glGetnTexImageARB :: FunPtr (GLenum -> GLint -> GLenum -> GLenum -> GLsizei -> Ptr () -> GL ()) -> GLenum -> GLint -> GLenum -> GLenum -> GLsizei -> Ptr () -> GL ()
glGetnTexImageARB :: GLenum -> GLint -> GLenum -> GLenum -> GLsizei -> Ptr () -> GL ()
unwrap_glReadnPixelsARB :: FunPtr (GLint -> GLint -> GLsizei -> GLsizei -> GLenum -> GLenum -> GLsizei -> Ptr () -> GL ()) -> GLint -> GLint -> GLsizei -> GLsizei -> GLenum -> GLenum -> GLsizei -> Ptr () -> GL ()
glReadnPixelsARB :: GLint -> GLint -> GLsizei -> GLsizei -> GLenum -> GLenum -> GLsizei -> Ptr () -> GL ()
unwrap_glGetnCompressedTexImageARB :: FunPtr (GLenum -> GLint -> GLsizei -> Ptr () -> GL ()) -> GLenum -> GLint -> GLsizei -> Ptr () -> GL ()
glGetnCompressedTexImageARB :: GLenum -> GLint -> GLsizei -> Ptr () -> GL ()
unwrap_glGetnUniformfvARB :: FunPtr (GLuint -> GLint -> GLsizei -> Ptr GLfloat -> GL ()) -> GLuint -> GLint -> GLsizei -> Ptr GLfloat -> GL ()
glGetnUniformfvARB :: GLuint -> GLint -> GLsizei -> Ptr GLfloat -> GL ()
unwrap_glGetnUniformivARB :: FunPtr (GLuint -> GLint -> GLsizei -> Ptr GLint -> GL ()) -> GLuint -> GLint -> GLsizei -> Ptr GLint -> GL ()
glGetnUniformivARB :: GLuint -> GLint -> GLsizei -> Ptr GLint -> GL ()
unwrap_glGetnUniformuivARB :: FunPtr (GLuint -> GLint -> GLsizei -> Ptr GLuint -> GL ()) -> GLuint -> GLint -> GLsizei -> Ptr GLuint -> GL ()
glGetnUniformuivARB :: GLuint -> GLint -> GLsizei -> Ptr GLuint -> GL ()
unwrap_glGetnUniformdvARB :: FunPtr (GLuint -> GLint -> GLsizei -> Ptr GLdouble -> GL ()) -> GLuint -> GLint -> GLsizei -> Ptr GLdouble -> GL ()
glGetnUniformdvARB :: GLuint -> GLint -> GLsizei -> Ptr GLdouble -> GL ()
unwrap_glMinSampleShadingARB :: FunPtr (GLfloat -> GL ()) -> GLfloat -> GL ()
glMinSampleShadingARB :: GLfloat -> GL ()
unwrap_glNamedStringARB :: FunPtr (GLenum -> GLint -> CString -> GLint -> CString -> GL ()) -> GLenum -> GLint -> CString -> GLint -> CString -> GL ()
glNamedStringARB :: GLenum -> GLint -> CString -> GLint -> CString -> GL ()
unwrap_glDeleteNamedStringARB :: FunPtr (GLint -> CString -> GL ()) -> GLint -> CString -> GL ()
glDeleteNamedStringARB :: GLint -> CString -> GL ()
unwrap_glCompileShaderIncludeARB :: FunPtr (GLuint -> GLsizei -> Ptr CString -> Ptr GLint -> GL ()) -> GLuint -> GLsizei -> Ptr CString -> Ptr GLint -> GL ()
glCompileShaderIncludeARB :: GLuint -> GLsizei -> Ptr CString -> Ptr GLint -> GL ()
unwrap_glIsNamedStringARB :: FunPtr (GLint -> CString -> GL GLboolean) -> GLint -> CString -> GL GLboolean
glIsNamedStringARB :: GLint -> CString -> GL GLboolean
unwrap_glGetNamedStringARB :: FunPtr (GLint -> CString -> GLsizei -> Ptr GLint -> CString -> GL ()) -> GLint -> CString -> GLsizei -> Ptr GLint -> CString -> GL ()
glGetNamedStringARB :: GLint -> CString -> GLsizei -> Ptr GLint -> CString -> GL ()
unwrap_glGetNamedStringivARB :: FunPtr (GLint -> CString -> GLenum -> Ptr GLint -> GL ()) -> GLint -> CString -> GLenum -> Ptr GLint -> GL ()
glGetNamedStringivARB :: GLint -> CString -> GLenum -> Ptr GLint -> GL ()
unwrap_glBufferPageCommitmentARB :: FunPtr (GLenum -> GLintptr -> GLsizeiptr -> GLboolean -> GL ()) -> GLenum -> GLintptr -> GLsizeiptr -> GLboolean -> GL ()
glBufferPageCommitmentARB :: GLenum -> GLintptr -> GLsizeiptr -> GLboolean -> GL ()
unwrap_glNamedBufferPageCommitmentEXT :: FunPtr (GLuint -> GLintptr -> GLsizeiptr -> GLboolean -> GL ()) -> GLuint -> GLintptr -> GLsizeiptr -> GLboolean -> GL ()
glNamedBufferPageCommitmentEXT :: GLuint -> GLintptr -> GLsizeiptr -> GLboolean -> GL ()
unwrap_glNamedBufferPageCommitmentARB :: FunPtr (GLuint -> GLintptr -> GLsizeiptr -> GLboolean -> GL ()) -> GLuint -> GLintptr -> GLsizeiptr -> GLboolean -> GL ()
glNamedBufferPageCommitmentARB :: GLuint -> GLintptr -> GLsizeiptr -> GLboolean -> GL ()
unwrap_glTexPageCommitmentARB :: FunPtr (GLenum -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GLboolean -> GL ()) -> GLenum -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GLboolean -> GL ()
glTexPageCommitmentARB :: GLenum -> GLint -> GLint -> GLint -> GLint -> GLsizei -> GLsizei -> GLsizei -> GLboolean -> GL ()

module Graphics.OpenGLES.Types
type Vec2 = V2 Float
type Vec3 = V3 Float
type Vec4 = V4 Float
type IVec2 = V2 Int32
type IVec3 = V3 Int32
type IVec4 = V4 Int32
type UVec2 = V2 Word32
type UVec3 = V3 Word32
type UVec4 = V4 Word32
type Mat2 = M22 Float
type Mat3 = M33 Float
type Mat4 = M44 Float
type Mat2x3 = M23 Float
type Mat2x4 = M24 Float
type Mat3x2 = M32 Float
type Mat3x4 = M34 Float
type Mat4x2 = M42 Float
type Mat4x3 = M43 Float
newtype HalfFloat
HalfFloat :: Word16 -> HalfFloat
newtype FixedFloat
FixedFloat :: Int32 -> FixedFloat
newtype Int2_10x3
Int210x3 :: Int32 -> Int2_10x3
newtype Word2_10x3
Word2_10x3 :: Int32 -> Word2_10x3
newtype Word4444
Word4444 :: Word16 -> Word4444
newtype Word5551
Word5551 :: Word16 -> Word5551
newtype Word565
Word565 :: Word16 -> Word565
newtype Word10f11f11f
Word10f11f11f :: Word32 -> Word10f11f11f
newtype Word5999
Word5999 :: Word32 -> Word5999
newtype Word24_8
Word24_8 :: Word32 -> Word24_8
newtype FloatWord24_8
FloatWord24_8 :: (Float, Word32) -> FloatWord24_8
castGL :: CmpNat (Aligned (SizeOf x)) (Aligned (SizeOf y)) ~ EQ => p x -> p y
data Uniform p a
class UnifVal a
data Attrib p a

-- | GLSL vertex attribute type
class VertexAttribute a

-- | The 3rd argument of glVertexAttribI?Pointer
class GLType a => AttrElement a

-- | Temporarily gives a vector representation for type comparison
class VertexAttributeArray attr src

-- | A set of <a>VertexAttribute</a>s packed in a <a>Buffer</a>
class AttrStruct a p b | a -> p

-- | Transpose matrices
class Storable a => GLStorable a
pokeArrayGL :: GLStorable a => Ptr a -> [a] -> GL ()
instance [overlap ok] Storable a => GLStorable a
instance [overlap ok] (Storable (f (g a)), Storable (g (f a)), VertexAttribute (f (g Float)), Functor f, Distributive g) => GLStorable (f (g a))
instance [overlap ok] (VertexAttribute (f (g a)), Applicative g, Floating a, FoldableWithIndex (E V4) g, KnownNat (VDim f), KnownNat (SizeOf (f a)), KnownNat (SizeOf (f (g a))), AttrElement a) => AttrStruct (Attrib p (f (g a))) p (f (g a))
instance [overlap ok] (VertexAttribute a, Vectorize a ~ v a', Vectorize b ~ v b', KnownNat (VDim v), AttrElement b', VertexAttributeArray a' b') => AttrStruct (Attrib p a) p b
instance [overlap ok] (Integral a, Integral b) => VertexAttributeArray a b
instance [overlap ok] VertexAttributeArray Float a
instance [overlap ok] AttrElement Word2_10x3
instance [overlap ok] AttrElement Int2_10x3
instance [overlap ok] AttrElement FixedFloat
instance [overlap ok] AttrElement HalfFloat
instance [overlap ok] AttrElement Float
instance [overlap ok] AttrElement Int32
instance [overlap ok] AttrElement Int16
instance [overlap ok] AttrElement Int8
instance [overlap ok] AttrElement Word32
instance [overlap ok] AttrElement Word16
instance [overlap ok] AttrElement Word8
instance [overlap ok] (Functor f, Floating a, Distributive g, VertexAttribute (f a), FoldableWithIndex (E V4) g) => VertexAttribute (f (g a))
instance [overlap ok] VertexAttribute a => VertexAttribute (V1 a)
instance [overlap ok] VertexAttribute UVec4
instance [overlap ok] VertexAttribute UVec3
instance [overlap ok] VertexAttribute UVec2
instance [overlap ok] VertexAttribute Word32
instance [overlap ok] VertexAttribute IVec4
instance [overlap ok] VertexAttribute IVec3
instance [overlap ok] VertexAttribute IVec2
instance [overlap ok] VertexAttribute Int32
instance [overlap ok] VertexAttribute Vec4
instance [overlap ok] VertexAttribute Vec3
instance [overlap ok] VertexAttribute Vec2
instance [overlap ok] VertexAttribute Float
instance [overlap ok] (Distributive g, Functor f, UnifMat (f (g a)), Storable (g (f a))) => UnifVal [f (g a)]
instance [overlap ok] (Distributive g, Functor f, UnifMat (f (g a)), Storable (g (f a))) => UnifVal (f (g a))
instance [overlap ok] UnifMat Mat4x3
instance [overlap ok] UnifMat Mat4x2
instance [overlap ok] UnifMat Mat3x4
instance [overlap ok] UnifMat Mat3x2
instance [overlap ok] UnifMat Mat2x4
instance [overlap ok] UnifMat Mat2x3
instance [overlap ok] UnifMat Mat4
instance [overlap ok] UnifMat Mat3
instance [overlap ok] UnifMat Mat2
instance [overlap ok] UnifVal [UVec4]
instance [overlap ok] UnifVal [UVec3]
instance [overlap ok] UnifVal [UVec2]
instance [overlap ok] UnifVal [Word32]
instance [overlap ok] UnifVal [IVec4]
instance [overlap ok] UnifVal [IVec3]
instance [overlap ok] UnifVal [IVec2]
instance [overlap ok] UnifVal [Int32]
instance [overlap ok] UnifVal [Vec4]
instance [overlap ok] UnifVal [Vec3]
instance [overlap ok] UnifVal [Vec2]
instance [overlap ok] UnifVal [Float]
instance [overlap ok] UnifVal UVec4
instance [overlap ok] UnifVal UVec3
instance [overlap ok] UnifVal UVec2
instance [overlap ok] UnifVal Word32
instance [overlap ok] UnifVal IVec4
instance [overlap ok] UnifVal IVec3
instance [overlap ok] UnifVal IVec2
instance [overlap ok] UnifVal Int32
instance [overlap ok] UnifVal Vec4
instance [overlap ok] UnifVal Vec3
instance [overlap ok] UnifVal Vec2
instance [overlap ok] UnifVal Float

module Graphics.OpenGL.Types
type DVec2 = V2 Double
type DVec3 = V3 Double
type DVec4 = V4 Double
type DMat2 = M22 Double
type DMat3 = M33 Double
type DMat4 = M44 Double
type DMat2x3 = M23 Double
type DMat2x4 = M24 Double
type DMat3x2 = M32 Double
type DMat3x4 = M34 Double
type DMat4x2 = M42 Double
type DMat4x3 = M43 Double
instance AttrElement Double
instance VertexAttribute DVec4
instance VertexAttribute DVec3
instance VertexAttribute DVec2
instance VertexAttribute Double
instance UnifMat DMat4x3
instance UnifMat DMat4x2
instance UnifMat DMat3x4
instance UnifMat DMat3x2
instance UnifMat DMat2x4
instance UnifMat DMat2x3
instance UnifMat DMat4
instance UnifMat DMat3
instance UnifMat DMat2
instance UnifVal [DVec4]
instance UnifVal [DVec3]
instance UnifVal [DVec2]
instance UnifVal [Double]
instance UnifVal DVec4
instance UnifVal DVec3
instance UnifVal DVec2
instance UnifVal Double


-- | Retriving implementation limits. Do NOT call below APIs out of OpenGL
--   threads. (glGetString may return null pointer!)
module Graphics.OpenGLES.Caps

-- | The list of available extensions on this GL implementation.
glExtensions :: [String]

-- | True if this GL has the extension.
hasExt :: String -> Bool

-- | True if this GL version is 3 or later.
hasES3 :: Bool

-- | Internally used.
extVAO :: Maybe (GLsizei -> Ptr GLuint -> GL (), GLuint -> GL (), GLsizei -> Ptr GLuint -> GL ())

-- | The company responsible for this GL implementation. This name does not
--   change from release to release.
glVendor :: String

-- | A version or release number for the shading language of the form
--   "OpenGL ES GLSL ES (version number) (vendor-specific information)"
glShadingLanguageVersion :: String

-- | A version or release number of the form "OpenGL ES (version number)
--   (vendor-specific information)"
glVersion :: String

-- | The renderer name typically specific to a particular configuration of
--   a hardware platform. It does not change from release to release.
glRenderer :: String
newtype GLParamP
GLParamP :: GLenum -> GLParamP
glPair :: GLParamP -> (Float, Float)

-- | The (smallest, largest) supported sizes for points. The smallest size
--   must be &lt;= 1, and the largest size must be &gt;= 1.
aliasedPointSizeRange :: GLParamP

-- | The maximum supported width and height of the viewport. These must be
--   at least as large as the visible dimensions of the display being
--   rendered to.
maxViewportDims :: GLParamP

-- | The range of widths supported for aliased lines.
aliasedLineWidthRange :: GLParamP
newtype GLParam
GLParam :: GLenum -> GLParam

-- | Returns the implementation dependent value or 0 if unsupported.
glCap :: GLParam -> Int32

-- | The format chosen by the implementation in which pixels may be read
--   from the color buffer of the currently bound framebuffer in
--   conjunction with GL_IMPLEMENTATION_COLOR_READ_TYPE. In addition to
--   this implementation-dependent format/type pair, format GL_RGBA in
--   conjunction with type GL_UNSIGNED_BYTE is always allowed by every
--   implementation, regardless of the currently bound render surface. See
--   glReadPixels.
implementationColorReadFormat :: GLParam

-- | The type chosen by the implementation with which pixels may be read
--   from the color buffer of the currently bound framebuffer in
--   conjunction with GL_IMPLEMENTATION_COLOR_READ_FORMAT. In addition to
--   this implementation-dependent format/type pair, format GL_RGBA in
--   conjunction with type GL_UNSIGNED_BYTE is always allowed by every
--   implementation, regardless of the currently bound render surface. See
--   glReadPixels.
implementationColorReadType :: GLParam

-- | The maximum supported texture image units that can be used to access
--   texture maps from the vertex shader and the fragment processor
--   combined. If both the vertex shader and the fragment processing stage
--   access the same texture image unit, then that counts as using two
--   texture image units against this limit. The minimum value is 8-32-32.
maxCombinedTextureImageUnits :: GLParam

-- | The value gives a rough estimate of the largest cube-map texture that
--   the GL can handle. The minimum value is 16-2048-2048.
maxCubeMapTextureSize :: GLParam

-- | The maximum number of vector floating-point, integer, or boolean
--   values that can be held in uniform variable storage for a fragment
--   shader. The minimum value is 16-224-224.
maxFragmentUniformVectors :: GLParam

-- | The value indicates the maximum supported size for renderbuffers and
--   must be at least 1-?-2048.
maxRenderbufferSize :: GLParam

-- | The maximum supported texture image units that can be used to access
--   texture maps from the fragment shader. The minimum value is 8-?-16.
maxTextureImageUnits :: GLParam

-- | The value gives a rough estimate of the largest texture that the GL
--   can handle. The minimum value is 64-?-2048.
maxTextureSize :: GLParam

-- | The maximum number of interpolators available for processing varying
--   variables used by vertex and fragment shaders. This value represents
--   the number of vector values that can be interpolated; varying
--   variables declared as matrices and arrays will consume multiple
--   interpolators. The minimum value is 8-?-15.
maxVaryingVectors :: GLParam

-- | The maximum number of 4-component generic vertex attributes accessible
--   to a vertex shader. The minimum value is 8-?-16.
maxVertexAttribs :: GLParam

-- | The maximum supported texture image units that can be used to access
--   texture maps from the vertex shader. The minimum value is 0-?-16.
maxVertexTextureImageUnits :: GLParam

-- | The maximum number of vector floating-point, integer, or boolean
--   values that can be held in uniform variable storage for a vertex
--   shader. The minimum value is 128-?-256.
maxVertexUniformVectors :: GLParam

-- | The number of available compressed texture formats. The minimum value
--   is 0-10-10.
numCompressedTextureFormats :: GLParam

-- | The number of available shader binary formats. The minimum value is
--   0-0-0. Note: Not supported on most platforms.
numShaderBinaryFormats :: GLParam

-- | An estimate of the number of bits of subpixel resolution that are used
--   to position rasterized geometry in window coordinates. The minimum
--   value is 4-?-?.
subpixelBits :: GLParam

-- | A rough estimate of the largest 3D texture that the GL can handle. The
--   minimum value is 0-256-256.
max3DTextureSize :: GLParam

-- | The value indicates the maximum number of layers allowed in an array
--   texture. The minimum value is 0-256-256.
maxArrayTextureLayers :: GLParam

-- | The maximum number of color attachment points in a framebuffer object.
--   The minimum value is 0-4-4.
maxColorAttachments :: GLParam

-- | The number of words for fragment shader uniform variables in all
--   uniform blocks (including default). The value must be at least
--   GL_MAX_FRAGMENT_UNIFORM_COMPONENTS + GL_MAX_UNIFORM_BLOCK_SIZE *
--   GL_MAX_FRAGMENT_UNIFORM_BLOCKS / 4.
maxCombinedFragmentUniformComponents :: GLParam

-- | The maximum number of uniform blocks per program. The minimum value is
--   0-24-24.
maxCombinedUniformBlocks :: GLParam

-- | The number of words for vertex shader uniform variables in all uniform
--   blocks (including default). The value must be at least
--   GL_MAX_VERTEX_UNIFORM_COMPONENTS + GL_MAX_UNIFORM_BLOCK_SIZE *
--   GL_MAX_VERTEX_UNIFORM_BLOCKS / 4.
maxCombinedVertexUniformComponents :: GLParam

-- | The major version number of the OpenGL ES API supported by the current
--   context. Note: ES 2 does not support this param thus returns 0. (ES2
--   -&gt; 0, ES3 and ES3_1 -&gt; 3)
majorVersion :: GLParam

-- | The minor version number of the OpenGL ES API supported by the current
--   context. (ES3 -&gt; 0, ES3_1 -&gt; 1)
minorVersion :: GLParam

-- | The number of extensions supported by the GL implementation for the
--   current context.
numExtensions :: GLParam

-- | <b>GL_OES_get_program_binary or ES3+</b> The number of available
--   program binary formats. If the value is 0, program binary is not
--   available. The minimum value is 0-0-0.
numProgramBinaryFormats :: GLParam

-- | The maximum number of uniform blocks per compute shader. The value
--   must be at least 14. See glUniformBlockBinding.
maxComputeUniformBlocks :: GLParam

-- | The maximum supported texture image units that can be used to access
--   texture maps from the compute shader. The value may be at least 16.
--   See glActiveTexture.
maxComputeTextureImageUnits :: GLParam

-- | The maximum number of image variables in compute shaders. The value
--   must be at least 8.
maxComputeImageUniforms :: GLParam
maxComputeSharedMemorySize :: GLParam

-- | The maximum number of individual floating-point, integer, or boolean
--   values that can be held in uniform variable storage for a compute
--   shader. The value must be at least 1024. See glUniform.
maxComputeUniformComponents :: GLParam

-- | The maximum number of atomic counter buffers that may be accessed by a
--   compute shader.
maxComputeAtomicCounterBuffers :: GLParam

-- | The maximum number of atomic counters available to compute shaders.
maxComputeAtomicCounters :: GLParam

-- | The number of words for compute shader uniform variables in all
--   uniform blocks (including default). The value must be at least 1. See
--   glUniform.
maxCombinedComputeUniformComponents :: GLParam

-- | The number of invocations in a single local work group (i.e., the
--   product of the three dimensions) that may be dispatched to a compute
--   shader.
maxComputeWorkGroupInvocations :: GLParam

-- | The maximum number of explicitly assignable uniform locations, which
--   must be at least 1024.
maxUniformLocations :: GLParam

-- | The maximum width for a framebuffer that has no attachments, which
--   must be at least 16384. See glFramebufferParameteri.
maxFramebufferWidth :: GLParam

-- | The maximum height for a framebuffer that has no attachments, which
--   must be at least 16384. See glFramebufferParameteri.
maxFramebufferHeight :: GLParam

-- | The maximum samples in a framebuffer that has no attachments, which
--   must be at least 4. See glFramebufferParameteri.
maxFramebufferSamples :: GLParam
maxVertexAtomicCounterBuffers :: GLParam
maxFragmentAtomicCountersBuffers :: GLParam
maxCombinedAtomicCountersBuffers :: GLParam

-- | The maximum number of atomic counters available to vertex shaders.
maxVertexAtomicCounters :: GLParam

-- | The maximum number of atomic counters available to fragment shaders.
maxFragmentAtomicCounters :: GLParam

-- | The maximum number of atomic counters available to all active shaders.
maxCombinedAtomicCounters :: GLParam
maxAtomicCounterBufferSize :: GLParam
maxAtomicCounterBufferBindings :: GLParam
maxImageUnits :: GLParam
maxVertexImageUniforms :: GLParam
maxFragmentImageUniforms :: GLParam
maxCombinedImageUniforms :: GLParam

-- | The maximum number of active shader storage blocks that may be
--   accessed by a vertex shader.
maxVertexShaderStorageBlocks :: GLParam

-- | The maximum number of active shader storage blocks that may be
--   accessed by a fragment shader.
maxFragmentShaderStorageBlocks :: GLParam

-- | The maximum number of active shader storage blocks that may be
--   accessed by a compute shader.
maxComputeShaderStorageBlocks :: GLParam

-- | The maximum total number of active shader storage blocks that may be
--   accessed by all active shaders.
maxCombinedShaderStorageBlocks :: GLParam

-- | The maximum number of shader storage buffer binding points on the
--   context, which must be at least 8.
maxShaderStorageBufferBindings :: GLParam
maxShaderStorageBlockSize :: GLParam
maxCombinedShaderOutputResources :: GLParam
minProgramTextureGatherOffset :: GLParam
maxProgramTextureGatherOffset :: GLParam
maxSampleMaskWords :: GLParam

-- | The maximum number of samples in a color multisample texture.
maxColorTextureSamples :: GLParam
maxDepthTextureSamples :: GLParam

-- | The maximum number of samples supported in integer format multisample
--   buffers.
maxIntegerSamples :: GLParam

-- | The maximum offset that may be added to a vertex binding offset.
maxVertexAttribRelativeOffset :: GLParam

-- | The maximum number of vertex buffers that may be bound.
maxVertexAttribBindings :: GLParam

-- | <i>Undocumented constant</i>, perhaps <i>does not exist?</i>
maxVertexAttribStride :: GLParam

-- | <pre>
--   shaderPrecision vertexShader highFp == (min, max, precision)
--   </pre>
shaderPrecision :: (GLName -> a -> Shader) -> PrecisionType -> GL (Int32, Int32, Int32)
newtype PrecisionType
Prec :: GLenum -> PrecisionType
lowFp :: PrecisionType
midiumFp :: PrecisionType
highFp :: PrecisionType
lowInt :: PrecisionType
midiumInt :: PrecisionType
highInt :: PrecisionType

module Graphics.OpenGLES.Buffer
data Buffer a
type GLArray a = Vector a
class (Storable b, b ~ Content a b) => GLSource a b
makeAref :: GLSource a b => a -> GL (Either (GLArray (Content a b)) Int)
makeWriter :: GLSource a b => a -> (Ptr (Content a b) -> GL (), Int)

-- | Create and initialize a <a>Buffer</a> storage on GPU working memory.
--   
--   <ul>
--   <li>Int → <i>O(1)</i> New Buffer with specified number of elements
--   initialized to zeros.</li>
--   <li>([a], Int) → <i>O(n)</i> New Buffer made of given list upto n th
--   element.</li>
--   <li>[a] → <i>O(n)</i> New Buffer made of given list. Same as (xs,
--   length xs)</li>
--   <li><tt>ByteString</tt> → <i>head O(1) otherwise O(n)</i> New Buffer
--   from <tt>ByteString</tt>. Might be copied when necessary.</li>
--   <li><a>GLArray</a> → <b>Unsafe</b> <i>O(1)</i> Use passed
--   <tt>StorableArray</tt> as client-side Buffer.</li>
--   </ul>
--   
--   <pre>
--   glLoad app2gl (10::Int) :: GL (Buffer Vec4)
--   glLoad app2gl ([V2 1 1],4::Int) :: GL (Buffer Vec2)
--   glLoad app2gl uv :: GL (Buffer (V2 Word8))
--   glLoad app2gl bs :: GL (Buffer Float)
--   glLoad app2gl (model :: GLArray Model) :: GL (Buffer Model)
--   </pre>
glLoad :: GLSource a b => BufferUsage -> a -> GL (Buffer b)
glReload :: GLSource a b => Buffer b -> Int -> a -> GL ()
glUnsafeRead :: Storable a => Buffer a -> (Int, Int) -> GL (GLArray a)
glModify :: Storable a => Buffer a -> Int -> Int -> (GLArray a -> GL ()) -> GL ()
glMap :: Storable a => (a -> GL a) -> Buffer a -> Int -> Int -> GL ()
unsafeWithLen :: Storable a => GLArray a -> (Int -> Ptr a -> IO b) -> IO b
data BufferUsage

-- | STATIC_DRAW (Default)
app2gl :: BufferUsage

-- | DYNAMIC_DRAW
app2glDyn :: BufferUsage

-- | STREAM_DRAW
app2glStream :: BufferUsage

-- | STATIC_READ
gl2app :: BufferUsage

-- | DYNAMIC_READ
gl2appDyn :: BufferUsage

-- | STREAM_READ
gl2appStream :: BufferUsage

-- | STATIC_COPY
gl2gl :: BufferUsage

-- | DYNAMIC_COPY
gl2glDyn :: BufferUsage

-- | STREAM_COPY
gl2glStream :: BufferUsage
bindBuffer :: BufferSlot -> Buffer a -> GL ()
bindBufferRange :: BufferSlot -> GLuint -> Buffer a -> Int -> Int -> GL ()
bindBufferBase :: BufferSlot -> GLuint -> Buffer a -> GL ()
bufferData :: BufferSlot -> BufferUsage -> Int -> Ptr a -> GL ()
bufferSubData :: BufferSlot -> Int -> Int -> Ptr a -> GL ()
unmapBuffer :: BufferSlot -> GL Bool
mapBufferRange :: BufferSlot -> Int -> Int -> GLbitfield -> GL (Ptr a)
flashMappedBufferRange :: BufferSlot -> Int -> Int -> GL ()
map_read_bit :: GLbitfield
map_write_bit :: GLbitfield
map_invalidate_range_bit :: GLbitfield
map_invalidate_buffer_bit :: GLbitfield
map_flush_explicit_bit :: GLbitfield
map_unsynchronized_bit :: GLbitfield
copyBufferSubData :: BufferSlot -> BufferSlot -> Int -> Int -> Int -> GL ()
data BufferSlot
array_buffer :: BufferSlot
element_array_buffer :: BufferSlot
pixel_pack_buffer :: BufferSlot
pixel_unpack_buffer :: BufferSlot
uniform_buffer :: BufferSlot
transform_feedback_buffer :: BufferSlot
copy_read_buffer :: BufferSlot
copy_write_buffer :: BufferSlot
instance [overlap ok] Storable a => GLSource (GLArray a) a
instance [overlap ok] Storable b => GLSource ByteString b
instance [overlap ok] Storable a => GLSource [a] a
instance [overlap ok] Storable a => GLSource ([a], Int) a
instance [overlap ok] Storable b => GLSource Int b


-- | The neat and easy to use wrapper for OpenGL EmbedSystems (ES). The
--   wrapper is optimised for mobile and have small footprint. Assuming
--   OpenGL ES 2.0 or any later version, however, also works with OpenGL
--   4.1/4.3+ on desktop.
module Graphics.OpenGLES.Core

-- | IO actions run in GL thread.
type GL = IO
forkGL :: IO Bool -> GL () -> GL () -> IO ThreadId
stopGL :: IO ()
endFrameGL :: IO ()
runGL :: GL () -> IO ()
withGL :: GL a -> IO (Future' a)

-- | drawQueue may have drawcalls that use previous context, so make it
--   sure they are removed from the queue.
resetDrawQueue :: IO ()
glLog :: String -> IO ()
glReadLogs :: IO [String]
glLogContents :: IO [String]
flushCommandQ :: IO ()
finishCommands :: IO ()
glFrameCount :: IO Int64
glFlipping :: IO Bool

-- | <pre>
--   GLFW.setFramebufferSizeCallback win $ Just (const framesize)
--   </pre>
framesize :: Int -> Int -> IO ()
glDraw :: Typeable p => DrawMode -> Program p -> [RenderConfig] -> [UniformAssignment p] -> VertexArray p -> VertexPicker -> GL Bool
data DrawMode
drawPoints :: DrawMode
drawLines :: DrawMode
drawLineLoop :: DrawMode
drawLineStrip :: DrawMode
drawTriangles :: DrawMode
triangleStrip :: DrawMode
triangleFan :: DrawMode

-- | See <a>Graphics.OpenGLES.State</a>
type RenderConfig = GL ()

-- | <pre>
--   renderTo $ do
--       bindFb defaultFramebuffer
--       viewport $ V4 0 0 512 512
--       depthRange $ V2 0.1 10.0
--       begin culling
--       cullFace hideBack
--   </pre>
renderTo :: RenderConfig -> GL ()
data Shader
vertexShader :: GLName -> ByteString -> Shader
fragmentShader :: GLName -> ByteString -> Shader

-- | Same as <a>fragmentShader</a>
pixelShader :: GLName -> ByteString -> Shader

-- | Compute shader requires <i>ES3.1+</i>
computeShader :: GLName -> ByteString -> Shader

-- | Geometry shader requires <i>GL_EXT_geometry_shader (ES3.1)</i>
geometryShader :: GLName -> ByteString -> Shader

-- | Tessellation Shader requires <i>GL_EXT_tessellation_shader (ES3.1)</i>
tessellationEvalS :: GLName -> ByteString -> Shader

-- | Tessellation Shader requires <i>GL_EXT_tessellation_shader (ES3.1)</i>
tessellationCtrlS :: GLName -> ByteString -> Shader
data Program p
data TransformFeedback
NoFeedback :: TransformFeedback
FeedbackArrays :: [String] -> TransformFeedback
FeedbackPacked :: [String] -> TransformFeedback
type ProgramBinary = ByteString
glCompile :: Typeable p => TransformFeedback -> [Shader] -> (Program p -> Int -> String -> Maybe ProgramBinary -> GL ()) -> GL (Progress [String] (Program p))

-- | glValidateProgram checks to see whether the executables contained in
--   program can execute given the current OpenGL state.
glValidate :: Program p -> GL String
data Uniform p a
uniform :: (UnifVal a, Typeable p) => GLName -> IO (Uniform p a)
($=) :: UnifVal a => Uniform p a -> a -> UniformAssignment p
class UnifVal a
type UniformAssignment p = GL ()
data Attrib p a

-- | <pre>
--   normalized color <a>divisor</a> 1 &amp;= buffer
--   </pre>
attrib :: (VertexAttribute a, Typeable p) => GLName -> IO (Attrib p a)
normalized :: Attrib p a -> Attrib p a
divisor :: Attrib p a -> Word32 -> Attrib p a
(&=) :: AttrStruct a p b => a -> Buffer b -> SetVertexAttr p
data VertexArray p
glVA :: [SetVertexAttr p] -> GL (VertexArray p)

-- | GLSL vertex attribute type
class VertexAttribute a

-- | A set of <a>VertexAttribute</a>s packed in a <a>Buffer</a>
class AttrStruct a p b | a -> p
type SetVertexAttr p = GL ()
constAttrib :: VertexAttribute a => Attrib p a -> a -> SetVertexAttr p
data VertexPicker
takeFrom :: Int32 -> Int32 -> VertexPicker
takeFromInstanced :: Int32 -> Int32 -> Int32 -> VertexPicker
takeFromMany :: [(Int32, Int32)] -> VertexPicker
class VertexIx a
byIndex :: VertexIx a => Buffer a -> Int32 -> Int32 -> VertexPicker
byIndexInstanced :: VertexIx a => Buffer a -> Int32 -> Int32 -> Int32 -> VertexPicker
byIndices :: VertexIx a => Buffer a -> [(Int32, Int32)] -> VertexPicker
byIndexLimited :: VertexIx a => Buffer a -> Int32 -> Int32 -> Word32 -> Word32 -> VertexPicker
drawCallSequence :: [VertexPicker] -> VertexPicker

module Graphics.OpenGLES.PixelFormat
data R8snorm
data Rg8snorm
data Rgb8snorm
data Rgba8snorm
data Srgb8
data R16f
data Rg16f
data Rgb16f
data Rgba16f
data R32f
data Rg32f
data Rgb32f
data Rgba32f
data B10fG11fR11f
data E5bgr9
data Rgb8i
data Rgb8ui
data Rgb16i
data Rgb16ui
data Rgb32i
data Rgb32ui
data R8
data Rg8
data Rgb8
data Rgb565
data Rgba4
data Rgb5a1
data Rgba8
data A2bgr10
data A2bgr10ui
data Srgb8a8
data R8i
data R8ui
data R16i
data R16ui
data R32i
data R32ui
data Rg8i
data Rg8ui
data Rg16i
data Rg16ui
data Rg32i
data Rg32ui
data Rgba8i
data Rgba8ui
data Rgba16i
data Rgba16ui
data Rgba32i
data Rgba32ui
data Depth16
data Depth24
data Depth32f
data Depth24Stencil8
data Depth32fStencil8
data Stencil8
data Luminance8Alpha8
data Luminance8
data Alpha8
class InternalFormat a b | b -> a
ifmt :: InternalFormat a b => p (a, b) -> (GLenum, GLenum, GLenum)
class ExternalFormat a b
efmt :: ExternalFormat a b => p (a, b) -> (GLenum, GLenum, GLenum)
class InternalFormat a b => ES2Format a b where es2fmt x = case ifmt x of { (format, typ, _) -> (format, typ, format) }
es2fmt :: ES2Format a b => p (a, b) -> (GLenum, GLenum, GLenum)
class ColorRenderable a
class DepthRenderable a
class StencilRenderable a
instance StencilRenderable Stencil8
instance StencilRenderable Depth32fStencil8
instance StencilRenderable Depth24Stencil8
instance DepthRenderable Depth32fStencil8
instance DepthRenderable Depth24Stencil8
instance DepthRenderable Depth32f
instance DepthRenderable Depth24
instance DepthRenderable Depth16
instance ColorRenderable Rgba32ui
instance ColorRenderable Rgba32i
instance ColorRenderable Rgba16ui
instance ColorRenderable Rgba16i
instance ColorRenderable Rgba8ui
instance ColorRenderable Rgba8i
instance ColorRenderable Rg32ui
instance ColorRenderable Rg32i
instance ColorRenderable Rg16ui
instance ColorRenderable Rg16i
instance ColorRenderable Rg8ui
instance ColorRenderable Rg8i
instance ColorRenderable R32ui
instance ColorRenderable R32i
instance ColorRenderable R16ui
instance ColorRenderable R16i
instance ColorRenderable R8ui
instance ColorRenderable R8i
instance ColorRenderable Srgb8a8
instance ColorRenderable A2bgr10ui
instance ColorRenderable A2bgr10
instance ColorRenderable Rgba8
instance ColorRenderable Rgb5a1
instance ColorRenderable Rgba4
instance ColorRenderable Rgb565
instance ColorRenderable Rgb8
instance ColorRenderable Rg8
instance ColorRenderable R8
instance ES2Format Word8 Alpha8
instance ES2Format Word8 Luminance8
instance ES2Format (V2 Word8) Luminance8Alpha8
instance ES2Format Word565 Rgb565
instance ES2Format (V3 Word8) Rgb8
instance ES2Format Word5551 Rgb5a1
instance ES2Format Word4444 Rgba4
instance ES2Format (V4 Word8) Rgba8
instance ExternalFormat Word32 Depth16
instance ExternalFormat Float R16f
instance ExternalFormat (V2 Float) Rg16f
instance ExternalFormat (V3 Float) E5bgr9
instance ExternalFormat (V3 Float) B10fG11fR11f
instance ExternalFormat (V3 HalfFloat) E5bgr9
instance ExternalFormat (V3 HalfFloat) B10fG11fR11f
instance ExternalFormat (V3 Word8) Rgb565
instance ExternalFormat (V4 Float) Rgba16f
instance ExternalFormat Word2_10x3 Rgb5a1
instance ExternalFormat (V4 Word8) Rgba4
instance ExternalFormat (V4 Word8) Rgb5a1
instance InternalFormat a b => ExternalFormat a b
instance InternalFormat Word8 Alpha8
instance InternalFormat Word8 Luminance8
instance InternalFormat (V2 Word8) Luminance8Alpha8
instance InternalFormat FloatWord24_8 Depth32fStencil8
instance InternalFormat Word24_8 Depth24Stencil8
instance InternalFormat Float Depth32f
instance InternalFormat Word32 Depth24
instance InternalFormat Word16 Depth16
instance InternalFormat (V4 Word32) Rgba32ui
instance InternalFormat (V4 Int32) Rgba32i
instance InternalFormat (V4 Word16) Rgba16ui
instance InternalFormat (V4 Int16) Rgba16i
instance InternalFormat (V4 Word8) Rgba8ui
instance InternalFormat (V4 Int8) Rgba8i
instance InternalFormat (V2 Word32) Rg32ui
instance InternalFormat (V2 Int32) Rg32i
instance InternalFormat (V2 Word16) Rg16ui
instance InternalFormat (V2 Int16) Rg16i
instance InternalFormat (V2 Word8) Rg8ui
instance InternalFormat (V2 Int8) Rg8i
instance InternalFormat Word32 R32ui
instance InternalFormat Int32 R32i
instance InternalFormat Word16 R16ui
instance InternalFormat Int16 R16i
instance InternalFormat Word8 R8ui
instance InternalFormat Int8 R8i
instance InternalFormat (V4 Word8) Srgb8a8
instance InternalFormat Word2_10x3 A2bgr10ui
instance InternalFormat Word2_10x3 A2bgr10
instance InternalFormat (V4 Word8) Rgba8
instance InternalFormat Word5551 Rgb5a1
instance InternalFormat Word4444 Rgba4
instance InternalFormat Word565 Rgb565
instance InternalFormat (V3 Word8) Rgb8
instance InternalFormat (V2 Word8) Rg8
instance InternalFormat Word8 R8
instance InternalFormat (V3 Word32) Rgb32ui
instance InternalFormat (V3 Int32) Rgb32i
instance InternalFormat (V3 Word16) Rgb16ui
instance InternalFormat (V3 Int16) Rgb16i
instance InternalFormat (V3 Word8) Rgb8ui
instance InternalFormat (V3 Int8) Rgb8i
instance InternalFormat Word5999 E5bgr9
instance InternalFormat Word10f11f11f B10fG11fR11f
instance InternalFormat (V4 Float) Rgba32f
instance InternalFormat (V3 Float) Rgb32f
instance InternalFormat (V2 Float) Rg32f
instance InternalFormat Float R32f
instance InternalFormat (V4 HalfFloat) Rgba16f
instance InternalFormat (V3 HalfFloat) Rgb16f
instance InternalFormat (V2 HalfFloat) Rg16f
instance InternalFormat HalfFloat R16f
instance InternalFormat (V3 Word8) Srgb8
instance InternalFormat (V4 Int8) Rgba8snorm
instance InternalFormat (V3 Int8) Rgb8snorm
instance InternalFormat (V2 Int8) Rg8snorm
instance InternalFormat Int8 R8snorm


-- | Draw configurations on Rasterization and Per-Fragment Operations.
--   Note: Graphic state is sticky.
module Graphics.OpenGLES.State
lineWidth :: Float -> GL ()
polygonOffset :: Float -> Float -> GL ()
scissor :: Int32 -> Int32 -> Int32 -> Int32 -> GL ()
sampleCoverage :: Float -> Bool -> GL ()
begin :: Capability -> GL ()
end :: Capability -> GL ()
data Capability
culling :: Capability
blend :: Capability
dither :: Capability
stencilTest :: Capability
depthTest :: Capability
scissorTest :: Capability
polygonOffsetFill :: Capability
sampleAlphaToCoverage :: Capability
multisampleCoverage :: Capability
primitiveRestartFixedIndex :: Capability
rasterizerDiscard :: Capability
cullFace :: CullFace -> GL ()

-- | CW -&gt; True, CCW -&gt; False
frontFace :: Bool -> GL ()
data CullFace
hideFront :: CullFace
hideBack :: CullFace
hidePolygons :: CullFace
stencilFunc :: CompFunc -> Int32 -> Word32 -> GL ()
stencilFuncSeparate :: CullFace -> CompFunc -> Int32 -> Word32 -> GL ()
stencilOp :: StencilOp -> StencilOp -> StencilOp -> GL ()
stencilOpSeparate :: CullFace -> StencilOp -> StencilOp -> StencilOp -> GL ()
data StencilOp
opZero :: StencilOp
opKeep :: StencilOp
opReplace :: StencilOp
opIncr :: StencilOp
opDecr :: StencilOp
opInvert :: StencilOp
opIncrWrap :: StencilOp
opDecrWrap :: StencilOp
depthFunc :: CompFunc -> GL ()
data CompFunc
glNever :: CompFunc
glLess :: CompFunc
glEqual :: CompFunc
glLessEq :: CompFunc
glGreater :: CompFunc
glNotEq :: CompFunc
glGreatEq :: CompFunc
glAlways :: CompFunc
blendEquation :: BlendOp -> GL ()
blendEquationSeparate :: BlendOp -> BlendOp -> GL ()
blendFunc :: BlendingFactor -> BlendingFactor -> GL ()
blendFuncSeparate :: BlendingFactor -> BlendingFactor -> BlendingFactor -> BlendingFactor -> GL ()

-- | Float value clamped to [0,1]
type Clampf = Float
blendColor :: Clampf -> Clampf -> Clampf -> Clampf -> GL ()
data BlendOp
addBlending :: BlendOp
subBlending :: BlendOp
reverseSubBlending :: BlendOp
data BlendingFactor
factorZero :: BlendingFactor
factorOne :: BlendingFactor
srcColor :: BlendingFactor
oneMinusSrcColor :: BlendingFactor
srcAlpha :: BlendingFactor
oneMinusSrcAlpha :: BlendingFactor
dstAlpha :: BlendingFactor
oneMinusDstAlpha :: BlendingFactor
dstColor :: BlendingFactor
oneMinusDstColor :: BlendingFactor
srcAlphaSaturate :: BlendingFactor
constColor :: BlendingFactor
oneMinusConstColor :: BlendingFactor
constAlpha :: BlendingFactor
oneMinusConstAlpha :: BlendingFactor
generateMipmapHint :: Hint -> GL ()
fragmentShaderDerivativeHint :: Hint -> GL ()
data Hint
dontCare :: Hint
nicest :: Hint
fastest :: Hint

module Graphics.OpenGLES.Framebuffer

-- | <pre>
--   clear [] colorBuffer
--   clear [bindFb framebuffer] (colorBuffer+depthBuffer)
--   </pre>
clear :: [RenderConfig] -> BufferMask -> GL ()
clearColor :: Float -> Float -> Float -> Float -> GL ()
clearDepth :: Float -> GL ()
clearStencil :: Int32 -> GL ()
data BufferMask
colorBuffer :: BufferMask
depthBuffer :: BufferMask
stencilBuffer :: BufferMask
colorMask :: V4 Bool -> GL ()
depthMask :: Bool -> GL ()
stencilMask :: Word32 -> GL ()
stencilMaskSep :: CullFace -> Word32 -> GL ()

-- | New Renderbuffer with specified sample count and dimentions.
glRenderbuffer :: InternalFormat a b => Int32 -> GL (V2 Int32) -> GL (Renderbuffer b)
unsafeRenderbuffer :: Int32 -> GL (V2 Int32) -> GLenum -> GL (Renderbuffer a)

-- | New <a>Framebuffer</a> from specified <a>ColorRenderable</a> and
--   <a>DepthStencil</a>
glFramebuffer :: [CR] -> DepthStencil -> GL Framebuffer
data CR
CR :: (a c) -> CR
class Attachable a b
data DepthStencil
colorOnly :: DepthStencil
depthImage :: (Attachable a d, DepthRenderable d) => a d -> DepthStencil
stencilImage :: (Attachable a s, StencilRenderable s) => a s -> DepthStencil
depthStencil :: (Attachable a r, DepthRenderable r, StencilRenderable r) => a r -> DepthStencil
bindFb :: Framebuffer -> GL ()
withFb :: Framebuffer -> GL a -> GL a
defaultFramebuffer :: Framebuffer

-- | Cliping current framebuffer. Note that origin is left-bottom.
viewport :: V4 Int32 -> GL ()
getViewport :: GL (V4 Int32)
withViewport :: V4 Int32 -> GL a -> GL a
depthRange :: V2 Float -> GL ()
getDepthRange :: GL (V2 Float)
withDepthRange :: V2 Float -> GL a -> GL a
instance Attachable Texture a
instance Attachable Renderbuffer a

module Graphics.OpenGLES.Sync
data Sync
Sync :: Word64 -> (IORef GLsync) -> Sync

-- | Obtain new <a>Sync</a> with or without timeout in nanoseconds. Fence
--   sync objects are used to wait for partial completion of the GL command
--   stream, as a more flexible form of glFinish.
--   
--   <pre>
--   -- Sync objects can be used many times
--   sync1 &lt;- getSync (Just 16000)
--   sync2 &lt;- getSync Nothing
--   </pre>
--   
--   For each frame:
--   
--   <pre>
--   glFence sync1 $ \isTimedOut -&gt; do
--     {- modify buffers, textures, etc -}
--   glFence sync2 $ \isTimedOut -&gt; do
--     {- modify buffers, textures, etc -}
--   endFrameGL
--   </pre>
getSync :: Maybe Word64 -> IO Sync

-- | Block and wait for GPU commands issued here complete. Better glFinish
--   for <i>ES 3+</i>. Block and wait for a <a>Sync</a> object to become
--   signaled, then run specified block.
glFence :: Sync -> (Bool -> GL a) -> GL a

-- | Blocks on GPU until GL commands issued here complete. Better glFlush
--   for <i>ES 3+</i>. Sync timeout is ignored. Instruct the GL server to
--   block (on the GPU) until the previous call of glFence* with specified
--   <a>Sync</a> object becomes finished on the GL server, then run
--   specified block.
glFenceInGpu :: Sync -> GL a -> GL a
waitFence :: Bool -> Sync -> GL Bool
createFence :: Sync -> GL ()
waitFenceAtGpu :: Sync -> GL ()

-- | Same as glFlush
glFlushCommandQ :: GL ()

-- | Same as glFinish
glWaitComplete :: GL ()

module Graphics.OpenGLES.Texture
data Texture a
texSlot :: Word32 -> Texture a -> GL ()

-- | Load a GL Texture object from Ktx texture container. See
--   <a>https://github.com/KhronosGroup/KTX/blob/master/lib/loader.c</a>
--   TODO: reject 2DArray/3D texture if unsupported
glLoadKtx :: Maybe (Texture a) -> Ktx -> GL (Texture a)
glLoadKtxFile :: FilePath -> GL (Texture a)

-- | Upload 2D texture of raw memory bitmap.
glLoadTex2D :: (Storable a, ExternalFormat a b) => Maybe (Texture b) -> Bool -> ForeignPtr a -> V2 Word32 -> GL (Texture b)

-- | Upload 3D texture of raw memory bitmap.
glLoadTex3D :: (Storable a, ExternalFormat a b) => Maybe (Texture b) -> Bool -> ForeignPtr a -> V3 Word32 -> GL (Texture b)

-- | Upload 2DArray texture of raw memory bitmap.
glLoadTex2DArray :: (Storable a, ExternalFormat a b) => Maybe (Texture b) -> Bool -> ForeignPtr a -> V3 Word32 -> GL (Texture b)
setSampler :: Texture a -> Sampler -> GL ()

-- | (Texture wrap mode, A number of ANISOTROPY filter sampling points
--   (specify 1.0 to disable anisotropy filter), (Fallback) Mag and Min
--   filters).
--   
--   When <i>EXT_texture_filter_anisotropic</i> is not supported, fallback
--   filters are used instead.
data Sampler
Sampler :: (WrapMode, WrapMode, Maybe WrapMode) -> Float -> (MagFilter, MinFilter) -> Sampler
data MagFilter
magNearest :: MagFilter
magLinear :: MagFilter
data MinFilter
minNearest :: MinFilter
minLinear :: MinFilter
nearestMipmapNearest :: MinFilter
linearMipmapNearest :: MinFilter
nearestMipmapLinear :: MinFilter
linearMipmapLinear :: MinFilter
data WrapMode
tiledRepeat :: WrapMode
clampToEdge :: WrapMode
mirroredRepeat :: WrapMode


-- | OpenGL ES (ES for Embed Systems) 2.0 and 3.0
--   
--   <ul>
--   <li><a>OpenGL® ES Version 3.1 (June 4, 2014) [PDF]</a></li>
--   <li><a>OpenGL ES 3.1 Manual</a></li>
--   <li><a>OpenGL ES 3.0 Quick Reference [PDF]</a></li>
--   <li><a>OpenGL ES 3.0 Manual</a></li>
--   <li><a>OpenGL ES 2.0 Quick Reference [PDF]</a></li>
--   <li><a>OpenGL ES 2.0 Manual</a></li>
--   <li><a>ANGLE</a> OpenGL ES backend for Windows.</li>
--   </ul>
module Graphics.OpenGLES


-- | EGL 1.4, carefully reconstructed. You can still use the rest of C APIs
--   via <a>Graphics.EGL.Base</a>.
--   
--   <ul>
--   <li><a>Khronos EGL Registry</a></li>
--   <li><a>EGL 1.4 Quick Reference [PDF]</a></li>
--   </ul>
module Graphics.EGL

-- | Initialize EGL with default display.
eglInit :: IO Egl

-- | Initialize EGL with specified display and configurations.
eglInitializeOn :: Maybe EGLNativeDisplay -> [[(EGLConfAttr, Int32)]] -> [(EGLContextAttr, Int32)] -> IO Egl

-- | Start using graphics APIs on this thread. EGL context would be
--   recreated if the last context was lost due to power management events.
eglResume :: Egl -> EGLNativeWindow -> IO ()

-- | Stop using graphics APIs on this thread. Should be called before a
--   sleep.
eglSuspend :: Egl -> IO ()

-- | Invalidate EGL objects and terminates the display on this thread. You
--   can still reuse <a>Egl</a> because <a>Egl</a> is designed for state
--   management.
eglInvalidate :: Egl -> IO ()

-- | Post EGL surface color buffer to a native window.
eglPostFrame :: Egl -> IO ()

-- | Specifies the minimum number of video frame periods per buffer swap
--   for the window associated with the current context. Returns False on
--   failure. The default swap interval is 1.
eglPostInterval :: Egl -> Int32 -> IO Bool
eglVendor :: Egl -> IO String
eglVersion :: Egl -> IO String
eglExtensions :: Egl -> IO [String]
eglClientAPIs :: Egl -> IO [String]
eglConfigID :: Egl -> IO Int32
eglRenderBuffer :: Egl -> IO Int32
eglContextClientVersion :: Egl -> IO Int32
eglContextClientType :: Egl -> IO Int32
eglScreenDims :: Num a => Egl -> IO (a, a)
egl_True :: EGLint
egl_None :: EGLint
egl_False :: EGLint
egl_BufferSize :: EGLConfAttr
egl_Conformant :: EGLConfAttr
egl_MatchNativePixmap :: EGLConfAttr
egl_RenderableType :: EGLConfAttr
egl_ColorBufferType :: EGLConfAttr
egl_AlphaMaskSize :: EGLConfAttr
egl_LuminanceSize :: EGLConfAttr
egl_MaxSwapInterval :: EGLConfAttr
egl_MinSwapInterval :: EGLConfAttr
egl_BindToTextureRGBA :: EGLConfAttr
egl_BindToTextureRGB :: EGLConfAttr
egl_TransparentRedValue :: EGLConfAttr
egl_TransparentGreenValue :: EGLConfAttr
egl_TransparentBlueValue :: EGLConfAttr
egl_TransparentType :: EGLConfAttr
egl_SurfaceType :: EGLConfAttr
egl_SampleBuffers :: EGLConfAttr
egl_Samples :: EGLConfAttr
egl_NativeVisualType :: EGLConfAttr
egl_NativeVisualID :: EGLConfAttr
egl_NativeRenderable :: EGLConfAttr
egl_MaxPbufferWidth :: EGLConfAttr
egl_MaxPbufferPixels :: EGLConfAttr
egl_MaxPbufferHeight :: EGLConfAttr
egl_Level :: EGLConfAttr
egl_ConfigID :: EGLConfAttr
egl_ConfigCaveat :: EGLConfAttr
egl_StencilSize :: EGLConfAttr
egl_DepthSize :: EGLConfAttr
egl_RedSize :: EGLConfAttr
egl_GreenSize :: EGLConfAttr
egl_BlueSize :: EGLConfAttr
egl_AlphaSize :: EGLConfAttr

-- | EGL_CONFIG_CAVEAT value EGL_NONE | 0x3050 | 0x3051
egl_SlowConfig :: EGLint

-- | EGL_CONFIG_CAVEAT value EGL_NONE | 0x3050 | 0x3051
egl_NonConformantConfig :: EGLint

-- | EGL_TRANSPARENT_TYPE value EGL_NONE | 0x3052
egl_TransparentRgb :: EGLint

-- | EGL_COLOR_BUFFER_TYPE value
egl_RgbBuffer :: EGLint

-- | EGL_COLOR_BUFFER_TYPE value
egl_LuminanceBuffer :: EGLint

-- | EGL_TEXTURE_FORMAT value
egl_NoTexture :: EGLint

-- | EGL_TEXTURE_FORMAT value
egl_Texture2D :: EGLint

-- | EGL_TEXTURE_FORMAT value
egl_TextureRgba :: EGLint

-- | EGL_TEXTURE_FORMAT value
egl_TextureRgb :: EGLint

-- | EGL_SURFACE_TYPE mask bits
egl_PBuffer :: EGLint

-- | EGL_SURFACE_TYPE mask bits
egl_SwapBehaviorPreserved :: EGLint

-- | EGL_SURFACE_TYPE mask bits
egl_MultisampleResolveBox :: EGLint

-- | EGL_SURFACE_TYPE mask bits
egl_VGAlphaFormatPre :: EGLint

-- | EGL_SURFACE_TYPE mask bits
egl_VGColorspaceLinear :: EGLint

-- | EGL_SURFACE_TYPE mask bits
egl_Window :: EGLint

-- | EGL_SURFACE_TYPE mask bits
egl_Pixmap :: EGLint

-- | EGL_RENDERABLE_TYPE bitmask
egl_OpenGLES :: EGLint

-- | EGL_RENDERABLE_TYPE bitmask
egl_OpenGL :: EGLint

-- | EGL_RENDERABLE_TYPE bitmask
egl_OpenGLES2 :: EGLint

-- | EGL_RENDERABLE_TYPE bitmask
egl_OpenVG :: EGLint

-- | int Height of surface
egl_Height :: EGLSurfAttr

-- | int ID of EGLConfig surface was created with EGL_HEIGHT integer Height
--   of surface
egl_ConfigId :: EGLSurfAttr

-- | enum Multisample resolve behavior
egl_MultisampleResolve :: EGLSurfAttr

-- | enum Buffer swap behavior
egl_SwapBehavior :: EGLSurfAttr

-- | int Display aspect ratio
egl_PixelAspectRaito :: EGLSurfAttr

-- | int Vertical dot pitch
egl_VerticalResolution :: EGLSurfAttr

-- | int Horizontal dot pitch
egl_HorizontalResolution :: EGLSurfAttr

-- | enum Alpha format for OpenVG
egl_VGAlphaFormat :: EGLSurfAttr

-- | enum Color space for OpenVG
egl_VGColorspace :: EGLSurfAttr

-- | enum Render buffer
egl_RenderBuffer :: EGLSurfAttr

-- | int Mipmap level to render to
egl_MipmapLevel :: EGLSurfAttr

-- | boolean True if texture has mipmaps
egl_MipmapTexture :: EGLSurfAttr

-- | enum Type of texture: 2D or no texture
egl_TextureTarget :: EGLSurfAttr

-- | enum Format of texture: RGB, RGBA, or no texture
egl_TextureFormat :: EGLSurfAttr

-- | boolean If true, create largest pbuffer possible
egl_LargestPbuffer :: EGLSurfAttr

-- | int Width of surface
egl_Width :: EGLSurfAttr

-- | specify 2 or later
egl_ContextClientVersion :: EGLContextAttr
