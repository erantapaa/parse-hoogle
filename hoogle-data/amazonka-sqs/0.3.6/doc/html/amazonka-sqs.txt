-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Amazon Simple Queue Service SDK.
--   
@package amazonka-sqs
@version 0.3.6

module Network.AWS.SQS.Types

-- | Version <tt>2012-11-05</tt> of the Amazon Simple Queue Service
--   service.
data SQS
data RESTError :: *
ns :: Text
data DeleteMessageBatchRequestEntry

-- | <a>DeleteMessageBatchRequestEntry</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dmbreId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>dmbreReceiptHandle</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteMessageBatchRequestEntry :: Text -> Text -> DeleteMessageBatchRequestEntry

-- | An identifier for this particular receipt handle. This is used to
--   communicate the result. Note that the <tt>Id</tt>s of a batch request
--   need to be unique within the request.
dmbreId :: Lens' DeleteMessageBatchRequestEntry Text

-- | A receipt handle.
dmbreReceiptHandle :: Lens' DeleteMessageBatchRequestEntry Text
data MessageAttributeValue

-- | <a>MessageAttributeValue</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>mavBinaryListValues</a> <tt>::</tt> [<a>Base64</a>]</li>
--   <li><a>mavBinaryValue</a> <tt>::</tt> <a>Maybe</a> <a>Base64</a></li>
--   <li><a>mavDataType</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>mavStringListValues</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>mavStringValue</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
messageAttributeValue :: Text -> MessageAttributeValue

-- | Not implemented. Reserved for future use.
mavBinaryListValues :: Lens' MessageAttributeValue [Base64]

-- | Binary type attributes can store any binary data, for example,
--   compressed data, encrypted data, or images.
mavBinaryValue :: Lens' MessageAttributeValue (Maybe Base64)

-- | Amazon SQS supports the following logical data types: String, Number,
--   and Binary. In addition, you can append your own custom labels. For
--   more information, see <a>Message Attribute Data Types</a>.
mavDataType :: Lens' MessageAttributeValue Text

-- | Not implemented. Reserved for future use.
mavStringListValues :: Lens' MessageAttributeValue [Text]

-- | Strings are Unicode with UTF8 binary encoding. For a list of code
--   values, see
--   <a>http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters</a>.
mavStringValue :: Lens' MessageAttributeValue (Maybe Text)
data ChangeMessageVisibilityBatchResultEntry

-- | <a>ChangeMessageVisibilityBatchResultEntry</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cmvbreId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
changeMessageVisibilityBatchResultEntry :: Text -> ChangeMessageVisibilityBatchResultEntry

-- | Represents a message whose visibility timeout has been changed
--   successfully.
cmvbreId :: Lens' ChangeMessageVisibilityBatchResultEntry Text
data ChangeMessageVisibilityBatchRequestEntry

-- | <a>ChangeMessageVisibilityBatchRequestEntry</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cmvbre1Id</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cmvbre1ReceiptHandle</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cmvbre1VisibilityTimeout</a> <tt>::</tt> <a>Maybe</a>
--   <a>Int</a></li>
--   </ul>
changeMessageVisibilityBatchRequestEntry :: Text -> Text -> ChangeMessageVisibilityBatchRequestEntry

-- | An identifier for this particular receipt handle. This is used to
--   communicate the result. Note that the <tt>Id</tt>s of a batch request
--   need to be unique within the request.
cmvbre1Id :: Lens' ChangeMessageVisibilityBatchRequestEntry Text

-- | A receipt handle.
cmvbre1ReceiptHandle :: Lens' ChangeMessageVisibilityBatchRequestEntry Text

-- | The new value (in seconds) for the message's visibility timeout.
cmvbre1VisibilityTimeout :: Lens' ChangeMessageVisibilityBatchRequestEntry (Maybe Int)
data DeleteMessageBatchResultEntry

-- | <a>DeleteMessageBatchResultEntry</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dmbre1Id</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteMessageBatchResultEntry :: Text -> DeleteMessageBatchResultEntry

-- | Represents a successfully deleted message.
dmbre1Id :: Lens' DeleteMessageBatchResultEntry Text
data Message

-- | <a>Message</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>mAttributes</a> <tt>::</tt> <a>HashMap</a> <a>Text</a>
--   <a>Text</a></li>
--   <li><a>mBody</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>mMD5OfBody</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>mMD5OfMessageAttributes</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>mMessageAttributes</a> <tt>::</tt> <a>HashMap</a> <a>Text</a>
--   <a>MessageAttributeValue</a></li>
--   <li><a>mMessageId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>mReceiptHandle</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
message :: Message

-- | <tt>SenderId</tt>, <tt>SentTimestamp</tt>,
--   <tt>ApproximateReceiveCount</tt>, and/or
--   <tt>ApproximateFirstReceiveTimestamp</tt>. <tt>SentTimestamp</tt> and
--   <tt>ApproximateFirstReceiveTimestamp</tt> are each returned as an
--   integer representing the <a>epoch time</a> in milliseconds.
mAttributes :: Lens' Message (HashMap Text Text)

-- | The message's contents (not URL-encoded).
mBody :: Lens' Message (Maybe Text)

-- | An MD5 digest of the non-URL-encoded message body string.
mMD5OfBody :: Lens' Message (Maybe Text)

-- | An MD5 digest of the non-URL-encoded message attribute string. This
--   can be used to verify that Amazon SQS received the message correctly.
--   Amazon SQS first URL decodes the message before creating the MD5
--   digest. For information about MD5, go to
--   <a>http://www.faqs.org/rfcs/rfc1321.html</a>.
mMD5OfMessageAttributes :: Lens' Message (Maybe Text)

-- | Each message attribute consists of a Name, Type, and Value. For more
--   information, see <a>Message Attribute Items</a>.
mMessageAttributes :: Lens' Message (HashMap Text MessageAttributeValue)

-- | A unique identifier for the message. Message IDs are considered unique
--   across all AWS accounts for an extended period of time.
mMessageId :: Lens' Message (Maybe Text)

-- | An identifier associated with the act of receiving the message. A new
--   receipt handle is returned every time you receive a message. When
--   deleting a message, you provide the last received receipt handle to
--   delete the message.
mReceiptHandle :: Lens' Message (Maybe Text)
data SendMessageBatchRequestEntry

-- | <a>SendMessageBatchRequestEntry</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>smbreDelaySeconds</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>smbreId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>smbreMessageAttributes</a> <tt>::</tt> <a>HashMap</a>
--   <a>Text</a> <a>MessageAttributeValue</a></li>
--   <li><a>smbreMessageBody</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
sendMessageBatchRequestEntry :: Text -> Text -> SendMessageBatchRequestEntry

-- | The number of seconds for which the message has to be delayed.
smbreDelaySeconds :: Lens' SendMessageBatchRequestEntry (Maybe Int)

-- | An identifier for the message in this batch. This is used to
--   communicate the result. Note that the <tt>Id</tt>s of a batch request
--   need to be unique within the request.
smbreId :: Lens' SendMessageBatchRequestEntry Text

-- | Each message attribute consists of a Name, Type, and Value. For more
--   information, see <a>Message Attribute Items</a>.
smbreMessageAttributes :: Lens' SendMessageBatchRequestEntry (HashMap Text MessageAttributeValue)

-- | Body of the message.
smbreMessageBody :: Lens' SendMessageBatchRequestEntry Text
data SendMessageBatchResultEntry

-- | <a>SendMessageBatchResultEntry</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>smbre1Id</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>smbre1MD5OfMessageAttributes</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>smbre1MD5OfMessageBody</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>smbre1MessageId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
sendMessageBatchResultEntry :: Text -> Text -> Text -> SendMessageBatchResultEntry

-- | An identifier for the message in this batch.
smbre1Id :: Lens' SendMessageBatchResultEntry Text

-- | An MD5 digest of the non-URL-encoded message attribute string. This
--   can be used to verify that Amazon SQS received the message batch
--   correctly. Amazon SQS first URL decodes the message before creating
--   the MD5 digest. For information about MD5, go to
--   <a>http://www.faqs.org/rfcs/rfc1321.html</a>.
smbre1MD5OfMessageAttributes :: Lens' SendMessageBatchResultEntry (Maybe Text)

-- | An MD5 digest of the non-URL-encoded message body string. This can be
--   used to verify that Amazon SQS received the message correctly. Amazon
--   SQS first URL decodes the message before creating the MD5 digest. For
--   information about MD5, go to
--   <a>http://www.faqs.org/rfcs/rfc1321.html</a>.
smbre1MD5OfMessageBody :: Lens' SendMessageBatchResultEntry Text

-- | An identifier for the message.
smbre1MessageId :: Lens' SendMessageBatchResultEntry Text
data BatchResultErrorEntry

-- | <a>BatchResultErrorEntry</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>breeCode</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>breeId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>breeMessage</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>breeSenderFault</a> <tt>::</tt> <a>Bool</a></li>
--   </ul>
batchResultErrorEntry :: Text -> Bool -> Text -> BatchResultErrorEntry

-- | An error code representing why the action failed on this entry.
breeCode :: Lens' BatchResultErrorEntry Text

-- | The id of an entry in a batch request.
breeId :: Lens' BatchResultErrorEntry Text

-- | A message explaining why the action failed on this entry.
breeMessage :: Lens' BatchResultErrorEntry (Maybe Text)

-- | Whether the error happened due to the sender's fault.
breeSenderFault :: Lens' BatchResultErrorEntry Bool
instance Eq DeleteMessageBatchRequestEntry
instance Ord DeleteMessageBatchRequestEntry
instance Read DeleteMessageBatchRequestEntry
instance Show DeleteMessageBatchRequestEntry
instance Eq MessageAttributeValue
instance Read MessageAttributeValue
instance Show MessageAttributeValue
instance Eq ChangeMessageVisibilityBatchResultEntry
instance Ord ChangeMessageVisibilityBatchResultEntry
instance Read ChangeMessageVisibilityBatchResultEntry
instance Show ChangeMessageVisibilityBatchResultEntry
instance Monoid ChangeMessageVisibilityBatchResultEntry
instance IsString ChangeMessageVisibilityBatchResultEntry
instance Eq ChangeMessageVisibilityBatchRequestEntry
instance Ord ChangeMessageVisibilityBatchRequestEntry
instance Read ChangeMessageVisibilityBatchRequestEntry
instance Show ChangeMessageVisibilityBatchRequestEntry
instance Eq DeleteMessageBatchResultEntry
instance Ord DeleteMessageBatchResultEntry
instance Read DeleteMessageBatchResultEntry
instance Show DeleteMessageBatchResultEntry
instance Monoid DeleteMessageBatchResultEntry
instance IsString DeleteMessageBatchResultEntry
instance Eq Message
instance Read Message
instance Show Message
instance Eq SendMessageBatchRequestEntry
instance Read SendMessageBatchRequestEntry
instance Show SendMessageBatchRequestEntry
instance Eq SendMessageBatchResultEntry
instance Ord SendMessageBatchResultEntry
instance Read SendMessageBatchResultEntry
instance Show SendMessageBatchResultEntry
instance Eq BatchResultErrorEntry
instance Ord BatchResultErrorEntry
instance Read BatchResultErrorEntry
instance Show BatchResultErrorEntry
instance ToQuery BatchResultErrorEntry
instance FromXML BatchResultErrorEntry
instance ToQuery SendMessageBatchResultEntry
instance FromXML SendMessageBatchResultEntry
instance ToQuery SendMessageBatchRequestEntry
instance FromXML SendMessageBatchRequestEntry
instance ToQuery Message
instance FromXML Message
instance ToQuery DeleteMessageBatchResultEntry
instance FromXML DeleteMessageBatchResultEntry
instance ToQuery ChangeMessageVisibilityBatchRequestEntry
instance FromXML ChangeMessageVisibilityBatchRequestEntry
instance ToQuery ChangeMessageVisibilityBatchResultEntry
instance FromXML ChangeMessageVisibilityBatchResultEntry
instance ToQuery MessageAttributeValue
instance FromXML MessageAttributeValue
instance ToQuery DeleteMessageBatchRequestEntry
instance FromXML DeleteMessageBatchRequestEntry
instance AWSService SQS


-- | Sets the value of one or more queue attributes. When you change a
--   queue's attributes, the change can take up to 60 seconds for most of
--   the attributes to propagate throughout the SQS system. Changes made to
--   the <tt>MessageRetentionPeriod</tt> attribute can take up to 15
--   minutes.
--   
--   Going forward, new attributes might be added. If you are writing code
--   that calls this action, we recommend that you structure your code so
--   that it can handle new attributes gracefully.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_SetQueueAttributes.html</a>
module Network.AWS.SQS.SetQueueAttributes
data SetQueueAttributes

-- | <a>SetQueueAttributes</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sqaAttributes</a> <tt>::</tt> <a>HashMap</a> <a>Text</a>
--   <a>Text</a></li>
--   <li><a>sqaQueueUrl</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
setQueueAttributes :: Text -> SetQueueAttributes

-- | A map of attributes to set.
--   
--   The following lists the names, descriptions, and values of the special
--   request parameters the <a>SetQueueAttributes</a> action uses:
--   
--   <tt>DelaySeconds</tt> - The time in seconds that the delivery of all
--   messages in the queue will be delayed. An integer from 0 to 900 (15
--   minutes). The default for this attribute is 0 (zero).
--   <tt>MaximumMessageSize</tt> - The limit of how many bytes a message
--   can contain before Amazon SQS rejects it. An integer from 1024 bytes
--   (1 KiB) up to 262144 bytes (256 KiB). The default for this attribute
--   is 262144 (256 KiB). <tt>MessageRetentionPeriod</tt> - The number of
--   seconds Amazon SQS retains a message. Integer representing seconds,
--   from 60 (1 minute) to 1209600 (14 days). The default for this
--   attribute is 345600 (4 days). <tt>Policy</tt> - The queue's policy. A
--   valid AWS policy. For more information about policy structure, see
--   <a>Overview of AWS IAM Policies</a> in the <i>Amazon IAMUser
--   Guide</i>. <tt>ReceiveMessageWaitTimeSeconds</tt> - The time for which
--   a ReceiveMessage call will wait for a message to arrive. An integer
--   from 0 to 20 (seconds). The default for this attribute is 0.
--   <tt>VisibilityTimeout</tt> - The visibility timeout for the queue. An
--   integer from 0 to 43200 (12 hours). The default for this attribute is
--   30. For more information about visibility timeout, see Visibility
--   Timeout in the <i>Amazon SQS Developer Guide</i>.
--   <tt>RedrivePolicy</tt> - The parameters for dead letter queue
--   functionality of the source queue. For more information about
--   RedrivePolicy and dead letter queues, see Using Amazon SQS Dead Letter
--   Queues in the <i>Amazon SQS Developer Guide</i>.
sqaAttributes :: Lens' SetQueueAttributes (HashMap Text Text)

-- | The URL of the Amazon SQS queue to take action on.
sqaQueueUrl :: Lens' SetQueueAttributes Text
data SetQueueAttributesResponse

-- | <a>SetQueueAttributesResponse</a> constructor.
setQueueAttributesResponse :: SetQueueAttributesResponse
instance Eq SetQueueAttributes
instance Read SetQueueAttributes
instance Show SetQueueAttributes
instance Eq SetQueueAttributesResponse
instance Ord SetQueueAttributesResponse
instance Read SetQueueAttributesResponse
instance Show SetQueueAttributesResponse
instance Generic SetQueueAttributesResponse
instance Datatype D1SetQueueAttributesResponse
instance Constructor C1_0SetQueueAttributesResponse
instance AWSRequest SetQueueAttributes
instance ToHeaders SetQueueAttributes
instance ToQuery SetQueueAttributes
instance ToPath SetQueueAttributes


-- | Delivers up to ten messages to the specified queue. This is a batch
--   version of <tt>SendMessage</tt>. The result of the send action on each
--   message is reported individually in the response. The maximum allowed
--   individual message size is 256 KB (262,144 bytes).
--   
--   The maximum total payload size (i.e., the sum of all a batch's
--   individual message lengths) is also 256 KB (262,144 bytes).
--   
--   If the <tt>DelaySeconds</tt> parameter is not specified for an entry,
--   the default for the queue is used.
--   
--   The following list shows the characters (in Unicode) that are allowed
--   in your message, according to the W3C XML specification. For more
--   information, go to <a>http://www.faqs.org/rfcs/rfc1321.html</a>. If
--   you send any characters that are not included in the list, your
--   request will be rejected. xA | #xD | [xD7FF] | [xFFFD] | [x10FFFF]
--   
--   Because the batch request can result in a combination of successful
--   and unsuccessful actions, you should check for batch errors even when
--   the call returns an HTTP status code of 200. Some API actions take
--   lists of parameters. These lists are specified using the 'param.n'
--   notation. Values of <tt>n</tt> are integers starting from 1. For
--   example, a parameter list with two elements looks like this:
--   '&amp;Attribute.1=this'
--   
--   '&amp;Attribute.2=that'
--   
--   
--   <a>http://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_SendMessageBatch.html</a>
module Network.AWS.SQS.SendMessageBatch
data SendMessageBatch

-- | <a>SendMessageBatch</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>smbEntries</a> <tt>::</tt>
--   [<a>SendMessageBatchRequestEntry</a>]</li>
--   <li><a>smbQueueUrl</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
sendMessageBatch :: Text -> SendMessageBatch

-- | A list of <a>SendMessageBatchRequestEntry</a> items.
smbEntries :: Lens' SendMessageBatch [SendMessageBatchRequestEntry]

-- | The URL of the Amazon SQS queue to take action on.
smbQueueUrl :: Lens' SendMessageBatch Text
data SendMessageBatchResponse

-- | <a>SendMessageBatchResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>smbrFailed</a> <tt>::</tt> [<a>BatchResultErrorEntry</a>]</li>
--   <li><a>smbrSuccessful</a> <tt>::</tt>
--   [<a>SendMessageBatchResultEntry</a>]</li>
--   </ul>
sendMessageBatchResponse :: SendMessageBatchResponse

-- | A list of <a>BatchResultErrorEntry</a> items with the error detail
--   about each message that could not be enqueued.
smbrFailed :: Lens' SendMessageBatchResponse [BatchResultErrorEntry]

-- | A list of <a>SendMessageBatchResultEntry</a> items.
smbrSuccessful :: Lens' SendMessageBatchResponse [SendMessageBatchResultEntry]
instance Eq SendMessageBatch
instance Read SendMessageBatch
instance Show SendMessageBatch
instance Eq SendMessageBatchResponse
instance Read SendMessageBatchResponse
instance Show SendMessageBatchResponse
instance FromXML SendMessageBatchResponse
instance AWSRequest SendMessageBatch
instance ToHeaders SendMessageBatch
instance ToQuery SendMessageBatch
instance ToPath SendMessageBatch


-- | Delivers a message to the specified queue. With Amazon SQS, you now
--   have the ability to send large payload messages that are up to 256KB
--   (262,144 bytes) in size. To send large payloads, you must use an AWS
--   SDK that supports SigV4 signing. To verify whether SigV4 is supported
--   for an AWS SDK, check the SDK release notes.
--   
--   The following list shows the characters (in Unicode) allowed in your
--   message, according to the W3C XML specification. For more information,
--   go to <a>http://www.w3.org/TR/REC-xml/#charsets</a> If you send any
--   characters not included in the list, your request will be rejected.
--   
--   xA | x20 to xE000 to x10000 to #x10FFFF]
--   
--   
--   <a>http://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_SendMessage.html</a>
module Network.AWS.SQS.SendMessage
data SendMessage

-- | <a>SendMessage</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>smDelaySeconds</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>smMessageAttributes</a> <tt>::</tt> <a>HashMap</a> <a>Text</a>
--   <a>MessageAttributeValue</a></li>
--   <li><a>smMessageBody</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>smQueueUrl</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
sendMessage :: Text -> Text -> SendMessage

-- | The number of seconds (0 to 900 - 15 minutes) to delay a specific
--   message. Messages with a positive <tt>DelaySeconds</tt> value become
--   available for processing after the delay time is finished. If you
--   don't specify a value, the default value for the queue applies.
smDelaySeconds :: Lens' SendMessage (Maybe Int)

-- | Each message attribute consists of a Name, Type, and Value. For more
--   information, see <a>Message Attribute Items</a>.
smMessageAttributes :: Lens' SendMessage (HashMap Text MessageAttributeValue)

-- | The message to send. String maximum 256 KB in size. For a list of
--   allowed characters, see the preceding important note.
smMessageBody :: Lens' SendMessage Text

-- | The URL of the Amazon SQS queue to take action on.
smQueueUrl :: Lens' SendMessage Text
data SendMessageResponse

-- | <a>SendMessageResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>smrMD5OfMessageAttributes</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>smrMD5OfMessageBody</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>smrMessageId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
sendMessageResponse :: SendMessageResponse

-- | An MD5 digest of the non-URL-encoded message attribute string. This
--   can be used to verify that Amazon SQS received the message correctly.
--   Amazon SQS first URL decodes the message before creating the MD5
--   digest. For information about MD5, go to
--   <a>http://www.faqs.org/rfcs/rfc1321.html</a>.
smrMD5OfMessageAttributes :: Lens' SendMessageResponse (Maybe Text)

-- | An MD5 digest of the non-URL-encoded message body string. This can be
--   used to verify that Amazon SQS received the message correctly. Amazon
--   SQS first URL decodes the message before creating the MD5 digest. For
--   information about MD5, go to
--   <a>http://www.faqs.org/rfcs/rfc1321.html</a>.
smrMD5OfMessageBody :: Lens' SendMessageResponse (Maybe Text)

-- | An element containing the message ID of the message sent to the queue.
--   For more information, see <a>Queue and Message Identifiers</a> in the
--   <i>Amazon SQSDeveloper Guide</i>.
smrMessageId :: Lens' SendMessageResponse (Maybe Text)
instance Eq SendMessage
instance Read SendMessage
instance Show SendMessage
instance Eq SendMessageResponse
instance Ord SendMessageResponse
instance Read SendMessageResponse
instance Show SendMessageResponse
instance FromXML SendMessageResponse
instance AWSRequest SendMessage
instance ToHeaders SendMessage
instance ToQuery SendMessage
instance ToPath SendMessage


-- | Revokes any permissions in the queue policy that matches the specified
--   <tt>Label</tt> parameter. Only the owner of the queue can remove
--   permissions.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_RemovePermission.html</a>
module Network.AWS.SQS.RemovePermission
data RemovePermission

-- | <a>RemovePermission</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rpLabel</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rpQueueUrl</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
removePermission :: Text -> Text -> RemovePermission

-- | The identification of the permission to remove. This is the label
--   added with the <tt>AddPermission</tt> action.
rpLabel :: Lens' RemovePermission Text

-- | The URL of the Amazon SQS queue to take action on.
rpQueueUrl :: Lens' RemovePermission Text
data RemovePermissionResponse

-- | <a>RemovePermissionResponse</a> constructor.
removePermissionResponse :: RemovePermissionResponse
instance Eq RemovePermission
instance Ord RemovePermission
instance Read RemovePermission
instance Show RemovePermission
instance Eq RemovePermissionResponse
instance Ord RemovePermissionResponse
instance Read RemovePermissionResponse
instance Show RemovePermissionResponse
instance Generic RemovePermissionResponse
instance Datatype D1RemovePermissionResponse
instance Constructor C1_0RemovePermissionResponse
instance AWSRequest RemovePermission
instance ToHeaders RemovePermission
instance ToQuery RemovePermission
instance ToPath RemovePermission


-- | Retrieves one or more messages, with a maximum limit of 10 messages,
--   from the specified queue. Long poll support is enabled by using the
--   <tt>WaitTimeSeconds</tt> parameter. For more information, see
--   <a>Amazon SQS Long Poll</a> in the <i>Amazon SQSDeveloper Guide</i>.
--   
--   Short poll is the default behavior where a weighted random set of
--   machines is sampled on a <a>ReceiveMessage</a> call. This means only
--   the messages on the sampled machines are returned. If the number of
--   messages in the queue is small (less than 1000), it is likely you will
--   get fewer messages than you requested per <a>ReceiveMessage</a> call.
--   If the number of messages in the queue is extremely small, you might
--   not receive any messages in a particular <a>ReceiveMessage</a>
--   response; in which case you should repeat the request.
--   
--   For each message returned, the response includes the following:
--   
--   Message body
--   
--   MD5 digest of the message body. For information about MD5, go to
--   <a>http://www.faqs.org/rfcs/rfc1321.html</a>.
--   
--   Message ID you received when you sent the message to the queue.
--   
--   Receipt handle.
--   
--   Message attributes.
--   
--   MD5 digest of the message attributes.
--   
--   The receipt handle is the identifier you must provide when deleting
--   the message. For more information, see <a>Queue and Message
--   Identifiers</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   You can provide the <tt>VisibilityTimeout</tt> parameter in your
--   request, which will be applied to the messages that Amazon SQS returns
--   in the response. If you do not include the parameter, the overall
--   visibility timeout for the queue is used for the returned messages.
--   For more information, see <a>Visibility Timeout</a> in the <i>Amazon
--   SQS Developer Guide</i>.
--   
--   Going forward, new attributes might be added. If you are writing code
--   that calls this action, we recommend that you structure your code so
--   that it can handle new attributes gracefully.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_ReceiveMessage.html</a>
module Network.AWS.SQS.ReceiveMessage
data ReceiveMessage

-- | <a>ReceiveMessage</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rmAttributeNames</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>rmMaxNumberOfMessages</a> <tt>::</tt> <a>Maybe</a>
--   <a>Int</a></li>
--   <li><a>rmMessageAttributeNames</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>rmQueueUrl</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rmVisibilityTimeout</a> <tt>::</tt> <a>Maybe</a>
--   <a>Int</a></li>
--   <li><a>rmWaitTimeSeconds</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   </ul>
receiveMessage :: Text -> ReceiveMessage

-- | A list of attributes that need to be returned along with each message.
--   
--   The following lists the names and descriptions of the attributes that
--   can be returned:
--   
--   <tt>All</tt> - returns all values.
--   <tt>ApproximateFirstReceiveTimestamp</tt> - returns the time when the
--   message was first received from the queue (epoch time in
--   milliseconds). <tt>ApproximateReceiveCount</tt> - returns the number
--   of times a message has been received from the queue but not deleted.
--   <tt>SenderId</tt> - returns the AWS account number (or the IP address,
--   if anonymous access is allowed) of the sender. <tt>SentTimestamp</tt>
--   - returns the time when the message was sent to the queue (epoch time
--   in milliseconds).
rmAttributeNames :: Lens' ReceiveMessage [Text]

-- | The maximum number of messages to return. Amazon SQS never returns
--   more messages than this value but may return fewer. Values can be from
--   1 to 10. Default is 1.
--   
--   All of the messages are not necessarily returned.
rmMaxNumberOfMessages :: Lens' ReceiveMessage (Maybe Int)

-- | The name of the message attribute, where <i>N</i> is the index. The
--   message attribute name can contain the following characters: A-Z, a-z,
--   0-9, underscore (_), hyphen (-), and period (.). The name must not
--   start or end with a period, and it should not have successive periods.
--   The name is case sensitive and must be unique among all attribute
--   names for the message. The name can be up to 256 characters long. The
--   name cannot start with "AWS." or "Amazon." (or any variations in
--   casing), because these prefixes are reserved for use by Amazon Web
--   Services.
--   
--   When using <a>ReceiveMessage</a>, you can send a list of attribute
--   names to receive, or you can return all of the attributes by
--   specifying <a>All</a> or ".*" in your request. You can also use
--   "foo.*" to return all message attributes starting with the "foo"
--   prefix.
rmMessageAttributeNames :: Lens' ReceiveMessage [Text]

-- | The URL of the Amazon SQS queue to take action on.
rmQueueUrl :: Lens' ReceiveMessage Text

-- | The duration (in seconds) that the received messages are hidden from
--   subsequent retrieve requests after being retrieved by a
--   <a>ReceiveMessage</a> request.
rmVisibilityTimeout :: Lens' ReceiveMessage (Maybe Int)

-- | The duration (in seconds) for which the call will wait for a message
--   to arrive in the queue before returning. If a message is available,
--   the call will return sooner than WaitTimeSeconds.
rmWaitTimeSeconds :: Lens' ReceiveMessage (Maybe Int)
data ReceiveMessageResponse

-- | <a>ReceiveMessageResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rmrMessages</a> <tt>::</tt> [<a>Message</a>]</li>
--   </ul>
receiveMessageResponse :: ReceiveMessageResponse

-- | A list of messages.
rmrMessages :: Lens' ReceiveMessageResponse [Message]
instance Eq ReceiveMessage
instance Read ReceiveMessage
instance Show ReceiveMessage
instance Eq ReceiveMessageResponse
instance Read ReceiveMessageResponse
instance Show ReceiveMessageResponse
instance Monoid ReceiveMessageResponse
instance Semigroup ReceiveMessageResponse
instance FromXML ReceiveMessageResponse
instance AWSRequest ReceiveMessage
instance ToHeaders ReceiveMessage
instance ToQuery ReceiveMessage
instance ToPath ReceiveMessage


-- | Deletes the messages in a queue specified by the queue URL.
--   
--   When you use the <a>PurgeQueue</a> API, the deleted messages in the
--   queue cannot be retrieved. When you purge a queue, the message
--   deletion process takes up to 60 seconds. All messages sent to the
--   queue before calling <a>PurgeQueue</a> will be deleted; messages sent
--   to the queue while it is being purged may be deleted. While the queue
--   is being purged, messages sent to the queue before <a>PurgeQueue</a>
--   was called may be received, but will be deleted within the next
--   minute.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_PurgeQueue.html</a>
module Network.AWS.SQS.PurgeQueue
data PurgeQueue

-- | <a>PurgeQueue</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pqQueueUrl</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
purgeQueue :: Text -> PurgeQueue

-- | The queue URL of the queue to delete the messages from when using the
--   <a>PurgeQueue</a> API.
pqQueueUrl :: Lens' PurgeQueue Text
data PurgeQueueResponse

-- | <a>PurgeQueueResponse</a> constructor.
purgeQueueResponse :: PurgeQueueResponse
instance Eq PurgeQueue
instance Ord PurgeQueue
instance Read PurgeQueue
instance Show PurgeQueue
instance Monoid PurgeQueue
instance IsString PurgeQueue
instance Eq PurgeQueueResponse
instance Ord PurgeQueueResponse
instance Read PurgeQueueResponse
instance Show PurgeQueueResponse
instance Generic PurgeQueueResponse
instance Datatype D1PurgeQueueResponse
instance Constructor C1_0PurgeQueueResponse
instance AWSRequest PurgeQueue
instance ToHeaders PurgeQueue
instance ToQuery PurgeQueue
instance ToPath PurgeQueue


-- | Returns a list of your queues. The maximum number of queues that can
--   be returned is 1000. If you specify a value for the optional
--   <tt>QueueNamePrefix</tt> parameter, only queues with a name beginning
--   with the specified value are returned.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_ListQueues.html</a>
module Network.AWS.SQS.ListQueues
data ListQueues

-- | <a>ListQueues</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lqQueueNamePrefix</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listQueues :: ListQueues

-- | A string to use for filtering the list results. Only those queues
--   whose name begins with the specified string are returned.
lqQueueNamePrefix :: Lens' ListQueues (Maybe Text)
data ListQueuesResponse

-- | <a>ListQueuesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lqrQueueUrls</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
listQueuesResponse :: ListQueuesResponse

-- | A list of queue URLs, up to 1000 entries.
lqrQueueUrls :: Lens' ListQueuesResponse [Text]
instance Eq ListQueues
instance Ord ListQueues
instance Read ListQueues
instance Show ListQueues
instance Monoid ListQueues
instance Eq ListQueuesResponse
instance Ord ListQueuesResponse
instance Read ListQueuesResponse
instance Show ListQueuesResponse
instance Monoid ListQueuesResponse
instance Semigroup ListQueuesResponse
instance FromXML ListQueuesResponse
instance AWSRequest ListQueues
instance ToHeaders ListQueues
instance ToQuery ListQueues
instance ToPath ListQueues


-- | Returns a list of your queues that have the RedrivePolicy queue
--   attribute configured with a dead letter queue.
--   
--   For more information about using dead letter queues, see <a>Using
--   Amazon SQSDead Letter Queues</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_ListDeadLetterSourceQueues.html</a>
module Network.AWS.SQS.ListDeadLetterSourceQueues
data ListDeadLetterSourceQueues

-- | <a>ListDeadLetterSourceQueues</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ldlsqQueueUrl</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
listDeadLetterSourceQueues :: Text -> ListDeadLetterSourceQueues

-- | The queue URL of a dead letter queue.
ldlsqQueueUrl :: Lens' ListDeadLetterSourceQueues Text
data ListDeadLetterSourceQueuesResponse

-- | <a>ListDeadLetterSourceQueuesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ldlsqrQueueUrls</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
listDeadLetterSourceQueuesResponse :: ListDeadLetterSourceQueuesResponse

-- | A list of source queue URLs that have the RedrivePolicy queue
--   attribute configured with a dead letter queue.
ldlsqrQueueUrls :: Lens' ListDeadLetterSourceQueuesResponse [Text]
instance Eq ListDeadLetterSourceQueues
instance Ord ListDeadLetterSourceQueues
instance Read ListDeadLetterSourceQueues
instance Show ListDeadLetterSourceQueues
instance Monoid ListDeadLetterSourceQueues
instance IsString ListDeadLetterSourceQueues
instance Eq ListDeadLetterSourceQueuesResponse
instance Ord ListDeadLetterSourceQueuesResponse
instance Read ListDeadLetterSourceQueuesResponse
instance Show ListDeadLetterSourceQueuesResponse
instance Monoid ListDeadLetterSourceQueuesResponse
instance Semigroup ListDeadLetterSourceQueuesResponse
instance FromXML ListDeadLetterSourceQueuesResponse
instance AWSRequest ListDeadLetterSourceQueues
instance ToHeaders ListDeadLetterSourceQueues
instance ToQuery ListDeadLetterSourceQueues
instance ToPath ListDeadLetterSourceQueues


-- | Returns the URL of an existing queue. This action provides a simple
--   way to retrieve the URL of an Amazon SQS queue.
--   
--   To access a queue that belongs to another AWS account, use the
--   <tt>QueueOwnerAWSAccountId</tt> parameter to specify the account ID of
--   the queue's owner. The queue's owner must grant you permission to
--   access the queue. For more information about shared queue access, see
--   <tt>AddPermission</tt> or go to <a>Shared Queues</a> in the
--   <i>AmazonSQS Developer Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_GetQueueUrl.html</a>
module Network.AWS.SQS.GetQueueUrl
data GetQueueUrl

-- | <a>GetQueueUrl</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gquQueueName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>gquQueueOwnerAWSAccountId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
getQueueUrl :: Text -> GetQueueUrl

-- | The name of the queue whose URL must be fetched. Maximum 80
--   characters; alphanumeric characters, hyphens (-), and underscores (_)
--   are allowed.
gquQueueName :: Lens' GetQueueUrl Text

-- | The AWS account ID of the account that created the queue.
gquQueueOwnerAWSAccountId :: Lens' GetQueueUrl (Maybe Text)
data GetQueueUrlResponse

-- | <a>GetQueueUrlResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gqurQueueUrl</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getQueueUrlResponse :: Text -> GetQueueUrlResponse

-- | The URL for the queue.
gqurQueueUrl :: Lens' GetQueueUrlResponse Text
instance Eq GetQueueUrl
instance Ord GetQueueUrl
instance Read GetQueueUrl
instance Show GetQueueUrl
instance Eq GetQueueUrlResponse
instance Ord GetQueueUrlResponse
instance Read GetQueueUrlResponse
instance Show GetQueueUrlResponse
instance Monoid GetQueueUrlResponse
instance IsString GetQueueUrlResponse
instance FromXML GetQueueUrlResponse
instance AWSRequest GetQueueUrl
instance ToHeaders GetQueueUrl
instance ToQuery GetQueueUrl
instance ToPath GetQueueUrl


-- | Gets attributes for the specified queue. The following attributes are
--   supported: <tt>All</tt> - returns all values.
--   <tt>ApproximateNumberOfMessages</tt> - returns the approximate number
--   of visible messages in a queue. For more information, see <a>Resources
--   Required to Process Messages</a> in the <i>Amazon SQS Developer
--   Guide</i>. <tt>ApproximateNumberOfMessagesNotVisible</tt> - returns
--   the approximate number of messages that are not timed-out and not
--   deleted. For more information, see <a>Resources Required to Process
--   Messages</a> in the <i>Amazon SQS Developer Guide</i>.
--   <tt>VisibilityTimeout</tt> - returns the visibility timeout for the
--   queue. For more information about visibility timeout, see
--   <a>Visibility Timeout</a> in the <i>Amazon SQS Developer Guide</i>.
--   <tt>CreatedTimestamp</tt> - returns the time when the queue was
--   created (epoch time in seconds). <tt>LastModifiedTimestamp</tt> -
--   returns the time when the queue was last changed (epoch time in
--   seconds). <tt>Policy</tt> - returns the queue's policy.
--   <tt>MaximumMessageSize</tt> - returns the limit of how many bytes a
--   message can contain before Amazon SQS rejects it.
--   <tt>MessageRetentionPeriod</tt> - returns the number of seconds Amazon
--   SQS retains a message. <tt>QueueArn</tt> - returns the queue's Amazon
--   resource name (ARN). <tt>ApproximateNumberOfMessagesDelayed</tt> -
--   returns the approximate number of messages that are pending to be
--   added to the queue. <tt>DelaySeconds</tt> - returns the default delay
--   on the queue in seconds. <tt>ReceiveMessageWaitTimeSeconds</tt> -
--   returns the time for which a ReceiveMessage call will wait for a
--   message to arrive. <tt>RedrivePolicy</tt> - returns the parameters for
--   dead letter queue functionality of the source queue. For more
--   information about RedrivePolicy and dead letter queues, see <a>Using
--   Amazon SQSDead Letter Queues</a> in the <i>Amazon SQS Developer
--   Guide</i>.
--   
--   Going forward, new attributes might be added. If you are writing code
--   that calls this action, we recommend that you structure your code so
--   that it can handle new attributes gracefully. Some API actions take
--   lists of parameters. These lists are specified using the 'param.n'
--   notation. Values of <tt>n</tt> are integers starting from 1. For
--   example, a parameter list with two elements looks like this:
--   '&amp;Attribute.1=this'
--   
--   '&amp;Attribute.2=that'
--   
--   
--   <a>http://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_GetQueueAttributes.html</a>
module Network.AWS.SQS.GetQueueAttributes
data GetQueueAttributes

-- | <a>GetQueueAttributes</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gqaAttributeNames</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>gqaQueueUrl</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getQueueAttributes :: Text -> GetQueueAttributes

-- | A list of attributes to retrieve information for.
gqaAttributeNames :: Lens' GetQueueAttributes [Text]

-- | The URL of the Amazon SQS queue to take action on.
gqaQueueUrl :: Lens' GetQueueAttributes Text
data GetQueueAttributesResponse

-- | <a>GetQueueAttributesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gqarAttributes</a> <tt>::</tt> <a>HashMap</a> <a>Text</a>
--   <a>Text</a></li>
--   </ul>
getQueueAttributesResponse :: GetQueueAttributesResponse

-- | A map of attributes to the respective values.
gqarAttributes :: Lens' GetQueueAttributesResponse (HashMap Text Text)
instance Eq GetQueueAttributes
instance Read GetQueueAttributes
instance Show GetQueueAttributes
instance Eq GetQueueAttributesResponse
instance Read GetQueueAttributesResponse
instance Show GetQueueAttributesResponse
instance Monoid GetQueueAttributesResponse
instance Semigroup GetQueueAttributesResponse
instance FromXML GetQueueAttributesResponse
instance AWSRequest GetQueueAttributes
instance ToHeaders GetQueueAttributes
instance ToQuery GetQueueAttributes
instance ToPath GetQueueAttributes


-- | Deletes the queue specified by the queue URL, regardless of whether
--   the queue is empty. If the specified queue does not exist, Amazon SQS
--   returns a successful response.
--   
--   Use <a>DeleteQueue</a> with care; once you delete your queue, any
--   messages in the queue are no longer available.
--   
--   When you delete a queue, the deletion process takes up to 60 seconds.
--   Requests you send involving that queue during the 60 seconds might
--   succeed. For example, a <tt>SendMessage</tt> request might succeed,
--   but after the 60 seconds, the queue and that message you sent no
--   longer exist. Also, when you delete a queue, you must wait at least 60
--   seconds before creating a queue with the same name.
--   
--   We reserve the right to delete queues that have had no activity for
--   more than 30 days. For more information, see <a>How Amazon SQS Queues
--   Work</a> in the <i>Amazon SQS Developer Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_DeleteQueue.html</a>
module Network.AWS.SQS.DeleteQueue
data DeleteQueue

-- | <a>DeleteQueue</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dqQueueUrl</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteQueue :: Text -> DeleteQueue

-- | The URL of the Amazon SQS queue to take action on.
dqQueueUrl :: Lens' DeleteQueue Text
data DeleteQueueResponse

-- | <a>DeleteQueueResponse</a> constructor.
deleteQueueResponse :: DeleteQueueResponse
instance Eq DeleteQueue
instance Ord DeleteQueue
instance Read DeleteQueue
instance Show DeleteQueue
instance Monoid DeleteQueue
instance IsString DeleteQueue
instance Eq DeleteQueueResponse
instance Ord DeleteQueueResponse
instance Read DeleteQueueResponse
instance Show DeleteQueueResponse
instance Generic DeleteQueueResponse
instance Datatype D1DeleteQueueResponse
instance Constructor C1_0DeleteQueueResponse
instance AWSRequest DeleteQueue
instance ToHeaders DeleteQueue
instance ToQuery DeleteQueue
instance ToPath DeleteQueue


-- | Deletes up to ten messages from the specified queue. This is a batch
--   version of <tt>DeleteMessage</tt>. The result of the delete action on
--   each message is reported individually in the response.
--   
--   Because the batch request can result in a combination of successful
--   and unsuccessful actions, you should check for batch errors even when
--   the call returns an HTTP status code of 200.
--   
--   Some API actions take lists of parameters. These lists are specified
--   using the 'param.n' notation. Values of <tt>n</tt> are integers
--   starting from 1. For example, a parameter list with two elements looks
--   like this: '&amp;Attribute.1=this'
--   
--   '&amp;Attribute.2=that'
--   
--   
--   <a>http://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_DeleteMessageBatch.html</a>
module Network.AWS.SQS.DeleteMessageBatch
data DeleteMessageBatch

-- | <a>DeleteMessageBatch</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dmbEntries</a> <tt>::</tt>
--   [<a>DeleteMessageBatchRequestEntry</a>]</li>
--   <li><a>dmbQueueUrl</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteMessageBatch :: Text -> DeleteMessageBatch

-- | A list of receipt handles for the messages to be deleted.
dmbEntries :: Lens' DeleteMessageBatch [DeleteMessageBatchRequestEntry]

-- | The URL of the Amazon SQS queue to take action on.
dmbQueueUrl :: Lens' DeleteMessageBatch Text
data DeleteMessageBatchResponse

-- | <a>DeleteMessageBatchResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dmbrFailed</a> <tt>::</tt> [<a>BatchResultErrorEntry</a>]</li>
--   <li><a>dmbrSuccessful</a> <tt>::</tt>
--   [<a>DeleteMessageBatchResultEntry</a>]</li>
--   </ul>
deleteMessageBatchResponse :: DeleteMessageBatchResponse

-- | A list of <a>BatchResultErrorEntry</a> items.
dmbrFailed :: Lens' DeleteMessageBatchResponse [BatchResultErrorEntry]

-- | A list of <a>DeleteMessageBatchResultEntry</a> items.
dmbrSuccessful :: Lens' DeleteMessageBatchResponse [DeleteMessageBatchResultEntry]
instance Eq DeleteMessageBatch
instance Read DeleteMessageBatch
instance Show DeleteMessageBatch
instance Eq DeleteMessageBatchResponse
instance Read DeleteMessageBatchResponse
instance Show DeleteMessageBatchResponse
instance FromXML DeleteMessageBatchResponse
instance AWSRequest DeleteMessageBatch
instance ToHeaders DeleteMessageBatch
instance ToQuery DeleteMessageBatch
instance ToPath DeleteMessageBatch


-- | Deletes the specified message from the specified queue. You specify
--   the message by using the message's 'receipt handle' and not the
--   'message ID' you received when you sent the message. Even if the
--   message is locked by another reader due to the visibility timeout
--   setting, it is still deleted from the queue. If you leave a message in
--   the queue for longer than the queue's configured retention period,
--   Amazon SQS automatically deletes it.
--   
--   The receipt handle is associated with a specific instance of receiving
--   the message. If you receive a message more than once, the receipt
--   handle you get each time you receive the message is different. When
--   you request <a>DeleteMessage</a> , if you don't provide the most
--   recently received receipt handle for the message, the request will
--   still succeed, but the message might not be deleted.
--   
--   It is possible you will receive a message even after you have deleted
--   it. This might happen on rare occasions if one of the servers storing
--   a copy of the message is unavailable when you request to delete the
--   message. The copy remains on the server and might be returned to you
--   again on a subsequent receive request. You should create your system
--   to be idempotent so that receiving a particular message more than once
--   is not a problem.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_DeleteMessage.html</a>
module Network.AWS.SQS.DeleteMessage
data DeleteMessage

-- | <a>DeleteMessage</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dmQueueUrl</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>dmReceiptHandle</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteMessage :: Text -> Text -> DeleteMessage

-- | The URL of the Amazon SQS queue to take action on.
dmQueueUrl :: Lens' DeleteMessage Text

-- | The receipt handle associated with the message to delete.
dmReceiptHandle :: Lens' DeleteMessage Text
data DeleteMessageResponse

-- | <a>DeleteMessageResponse</a> constructor.
deleteMessageResponse :: DeleteMessageResponse
instance Eq DeleteMessage
instance Ord DeleteMessage
instance Read DeleteMessage
instance Show DeleteMessage
instance Eq DeleteMessageResponse
instance Ord DeleteMessageResponse
instance Read DeleteMessageResponse
instance Show DeleteMessageResponse
instance Generic DeleteMessageResponse
instance Datatype D1DeleteMessageResponse
instance Constructor C1_0DeleteMessageResponse
instance AWSRequest DeleteMessage
instance ToHeaders DeleteMessage
instance ToQuery DeleteMessage
instance ToPath DeleteMessage


-- | Creates a new queue, or returns the URL of an existing one. When you
--   request <a>CreateQueue</a>, you provide a name for the queue. To
--   successfully create a new queue, you must provide a name that is
--   unique within the scope of your own queues.
--   
--   If you delete a queue, you must wait at least 60 seconds before
--   creating a queue with the same name.
--   
--   You may pass one or more attributes in the request. If you do not
--   provide a value for any attribute, the queue will have the default
--   value for that attribute. Permitted attributes are the same that can
--   be set using <tt>SetQueueAttributes</tt>.
--   
--   Use <tt>GetQueueUrl</tt> to get a queue's URL. <tt>GetQueueUrl</tt>
--   requires only the <tt>QueueName</tt> parameter.
--   
--   If you provide the name of an existing queue, along with the exact
--   names and values of all the queue's attributes, <a>CreateQueue</a>
--   returns the queue URL for the existing queue. If the queue name,
--   attribute names, or attribute values do not match an existing queue,
--   <a>CreateQueue</a> returns an error.
--   
--   Some API actions take lists of parameters. These lists are specified
--   using the 'param.n' notation. Values of <tt>n</tt> are integers
--   starting from 1. For example, a parameter list with two elements looks
--   like this: '&amp;Attribute.1=this'
--   
--   '&amp;Attribute.2=that'
--   
--   
--   <a>http://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_CreateQueue.html</a>
module Network.AWS.SQS.CreateQueue
data CreateQueue

-- | <a>CreateQueue</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cqAttributes</a> <tt>::</tt> <a>HashMap</a> <a>Text</a>
--   <a>Text</a></li>
--   <li><a>cqQueueName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createQueue :: Text -> CreateQueue

-- | A map of attributes with their corresponding values.
--   
--   The following lists the names, descriptions, and values of the special
--   request parameters the <a>CreateQueue</a> action uses:
--   
--   <tt>DelaySeconds</tt> - The time in seconds that the delivery of all
--   messages in the queue will be delayed. An integer from 0 to 900 (15
--   minutes). The default for this attribute is 0 (zero).
--   <tt>MaximumMessageSize</tt> - The limit of how many bytes a message
--   can contain before Amazon SQS rejects it. An integer from 1024 bytes
--   (1 KiB) up to 262144 bytes (256 KiB). The default for this attribute
--   is 262144 (256 KiB). <tt>MessageRetentionPeriod</tt> - The number of
--   seconds Amazon SQS retains a message. Integer representing seconds,
--   from 60 (1 minute) to 1209600 (14 days). The default for this
--   attribute is 345600 (4 days). <tt>Policy</tt> - The queue's policy. A
--   valid AWS policy. For more information about policy structure, see
--   <a>Overview of AWS IAM Policies</a> in the <i>Amazon IAMUser
--   Guide</i>. <tt>ReceiveMessageWaitTimeSeconds</tt> - The time for which
--   a <tt>ReceiveMessage</tt> call will wait for a message to arrive. An
--   integer from 0 to 20 (seconds). The default for this attribute is 0.
--   <tt>VisibilityTimeout</tt> - The visibility timeout for the queue. An
--   integer from 0 to 43200 (12 hours). The default for this attribute is
--   30. For more information about visibility timeout, see <a>Visibility
--   Timeout</a> in the <i>Amazon SQS Developer Guide</i>.
cqAttributes :: Lens' CreateQueue (HashMap Text Text)

-- | The name for the queue to be created.
cqQueueName :: Lens' CreateQueue Text
data CreateQueueResponse

-- | <a>CreateQueueResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cqrQueueUrl</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
createQueueResponse :: CreateQueueResponse

-- | The URL for the created Amazon SQS queue.
cqrQueueUrl :: Lens' CreateQueueResponse (Maybe Text)
instance Eq CreateQueue
instance Read CreateQueue
instance Show CreateQueue
instance Eq CreateQueueResponse
instance Ord CreateQueueResponse
instance Read CreateQueueResponse
instance Show CreateQueueResponse
instance Monoid CreateQueueResponse
instance FromXML CreateQueueResponse
instance AWSRequest CreateQueue
instance ToHeaders CreateQueue
instance ToQuery CreateQueue
instance ToPath CreateQueue


-- | Changes the visibility timeout of multiple messages. This is a batch
--   version of <tt>ChangeMessageVisibility</tt>. The result of the action
--   on each message is reported individually in the response. You can send
--   up to 10 <tt>ChangeMessageVisibility</tt> requests with each
--   <a>ChangeMessageVisibilityBatch</a> action.
--   
--   Because the batch request can result in a combination of successful
--   and unsuccessful actions, you should check for batch errors even when
--   the call returns an HTTP status code of 200. Some API actions take
--   lists of parameters. These lists are specified using the 'param.n'
--   notation. Values of <tt>n</tt> are integers starting from 1. For
--   example, a parameter list with two elements looks like this:
--   '&amp;Attribute.1=this'
--   
--   '&amp;Attribute.2=that'
--   
--   
--   <a>http://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_ChangeMessageVisibilityBatch.html</a>
module Network.AWS.SQS.ChangeMessageVisibilityBatch
data ChangeMessageVisibilityBatch

-- | <a>ChangeMessageVisibilityBatch</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cmvbEntries</a> <tt>::</tt>
--   [<a>ChangeMessageVisibilityBatchRequestEntry</a>]</li>
--   <li><a>cmvbQueueUrl</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
changeMessageVisibilityBatch :: Text -> ChangeMessageVisibilityBatch

-- | A list of receipt handles of the messages for which the visibility
--   timeout must be changed.
cmvbEntries :: Lens' ChangeMessageVisibilityBatch [ChangeMessageVisibilityBatchRequestEntry]

-- | The URL of the Amazon SQS queue to take action on.
cmvbQueueUrl :: Lens' ChangeMessageVisibilityBatch Text
data ChangeMessageVisibilityBatchResponse

-- | <a>ChangeMessageVisibilityBatchResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cmvbrFailed</a> <tt>::</tt> [<a>BatchResultErrorEntry</a>]</li>
--   <li><a>cmvbrSuccessful</a> <tt>::</tt>
--   [<a>ChangeMessageVisibilityBatchResultEntry</a>]</li>
--   </ul>
changeMessageVisibilityBatchResponse :: ChangeMessageVisibilityBatchResponse

-- | A list of <a>BatchResultErrorEntry</a> items.
cmvbrFailed :: Lens' ChangeMessageVisibilityBatchResponse [BatchResultErrorEntry]

-- | A list of <a>ChangeMessageVisibilityBatchResultEntry</a> items.
cmvbrSuccessful :: Lens' ChangeMessageVisibilityBatchResponse [ChangeMessageVisibilityBatchResultEntry]
instance Eq ChangeMessageVisibilityBatch
instance Read ChangeMessageVisibilityBatch
instance Show ChangeMessageVisibilityBatch
instance Eq ChangeMessageVisibilityBatchResponse
instance Read ChangeMessageVisibilityBatchResponse
instance Show ChangeMessageVisibilityBatchResponse
instance FromXML ChangeMessageVisibilityBatchResponse
instance AWSRequest ChangeMessageVisibilityBatch
instance ToHeaders ChangeMessageVisibilityBatch
instance ToQuery ChangeMessageVisibilityBatch
instance ToPath ChangeMessageVisibilityBatch


-- | Changes the visibility timeout of a specified message in a queue to a
--   new value. The maximum allowed timeout value you can set the value to
--   is 12 hours. This means you can't extend the timeout of a message in
--   an existing queue to more than a total visibility timeout of 12 hours.
--   (For more information visibility timeout, see <a>Visibility
--   Timeout</a> in the <i>Amazon SQSDeveloper Guide</i>.)
--   
--   For example, let's say you have a message and its default message
--   visibility timeout is 30 minutes. You could call
--   <tt>ChangeMessageVisiblity</tt> with a value of two hours and the
--   effective timeout would be two hours and 30 minutes. When that time
--   comes near you could again extend the time out by calling
--   ChangeMessageVisiblity, but this time the maximum allowed timeout
--   would be 9 hours and 30 minutes.
--   
--   There is a 120,000 limit for the number of inflight messages per
--   queue. Messages are inflight after they have been received from the
--   queue by a consuming component, but have not yet been deleted from the
--   queue. If you reach the 120,000 limit, you will receive an OverLimit
--   error message from Amazon SQS. To help avoid reaching the limit, you
--   should delete the messages from the queue after they have been
--   processed. You can also increase the number of queues you use to
--   process the messages.
--   
--   If you attempt to set the <tt>VisibilityTimeout</tt> to an amount more
--   than the maximum time left, Amazon SQS returns an error. It will not
--   automatically recalculate and increase the timeout to the maximum time
--   remaining. Unlike with a queue, when you change the visibility timeout
--   for a specific message, that timeout value is applied immediately but
--   is not saved in memory for that message. If you don't delete a message
--   after it is received, the visibility timeout for the message the next
--   time it is received reverts to the original timeout value, not the
--   value you set with the <a>ChangeMessageVisibility</a> action.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_ChangeMessageVisibility.html</a>
module Network.AWS.SQS.ChangeMessageVisibility
data ChangeMessageVisibility

-- | <a>ChangeMessageVisibility</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cmvQueueUrl</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cmvReceiptHandle</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cmvVisibilityTimeout</a> <tt>::</tt> <a>Int</a></li>
--   </ul>
changeMessageVisibility :: Text -> Text -> Int -> ChangeMessageVisibility

-- | The URL of the Amazon SQS queue to take action on.
cmvQueueUrl :: Lens' ChangeMessageVisibility Text

-- | The receipt handle associated with the message whose visibility
--   timeout should be changed. This parameter is returned by the
--   <tt>ReceiveMessage</tt> action.
cmvReceiptHandle :: Lens' ChangeMessageVisibility Text

-- | The new value (in seconds - from 0 to 43200 - maximum 12 hours) for
--   the message's visibility timeout.
cmvVisibilityTimeout :: Lens' ChangeMessageVisibility Int
data ChangeMessageVisibilityResponse

-- | <a>ChangeMessageVisibilityResponse</a> constructor.
changeMessageVisibilityResponse :: ChangeMessageVisibilityResponse
instance Eq ChangeMessageVisibility
instance Ord ChangeMessageVisibility
instance Read ChangeMessageVisibility
instance Show ChangeMessageVisibility
instance Eq ChangeMessageVisibilityResponse
instance Ord ChangeMessageVisibilityResponse
instance Read ChangeMessageVisibilityResponse
instance Show ChangeMessageVisibilityResponse
instance Generic ChangeMessageVisibilityResponse
instance Datatype D1ChangeMessageVisibilityResponse
instance Constructor C1_0ChangeMessageVisibilityResponse
instance AWSRequest ChangeMessageVisibility
instance ToHeaders ChangeMessageVisibility
instance ToQuery ChangeMessageVisibility
instance ToPath ChangeMessageVisibility


-- | Adds a permission to a queue for a specific <a>principal</a>. This
--   allows for sharing access to the queue.
--   
--   When you create a queue, you have full control access rights for the
--   queue. Only you (as owner of the queue) can grant or deny permissions
--   to the queue. For more information about these permissions, see
--   <a>Shared Queues</a> in the <i>AmazonSQS Developer Guide</i>.
--   
--   <a>AddPermission</a> writes an Amazon SQS-generated policy. If you
--   want to write your own policy, use <tt>SetQueueAttributes</tt> to
--   upload your policy. For more information about writing your own
--   policy, see <a>Using The Access PolicyLanguage</a> in the <i>Amazon
--   SQS Developer Guide</i>.
--   
--   Some API actions take lists of parameters. These lists are specified
--   using the 'param.n' notation. Values of <tt>n</tt> are integers
--   starting from 1. For example, a parameter list with two elements looks
--   like this: '&amp;Attribute.1=this'
--   
--   '&amp;Attribute.2=that'
--   
--   
--   <a>http://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_AddPermission.html</a>
module Network.AWS.SQS.AddPermission
data AddPermission

-- | <a>AddPermission</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>apAWSAccountIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>apActions</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>apLabel</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>apQueueUrl</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
addPermission :: Text -> Text -> AddPermission

-- | The AWS account number of the <a>principal</a> who will be given
--   permission. The principal must have an AWS account, but does not need
--   to be signed up for Amazon SQS. For information about locating the AWS
--   account identification, see <a>Your AWS Identifiers</a> in the
--   <i>Amazon SQS Developer Guide</i>.
apAWSAccountIds :: Lens' AddPermission [Text]

-- | The action the client wants to allow for the specified principal. The
--   following are valid values: '* | SendMessage | ReceiveMessage |
--   DeleteMessage| ChangeMessageVisibility | GetQueueAttributes |
--   GetQueueUrl'. For more information about these actions, see
--   <a>Understanding Permissions</a> in the <i>AmazonSQS Developer
--   Guide</i>.
--   
--   Specifying <tt>SendMessage</tt>, <tt>DeleteMessage</tt>, or
--   <tt>ChangeMessageVisibility</tt> for the <a>n</a> also grants
--   permissions for the corresponding batch versions of those actions:
--   <tt>SendMessageBatch</tt>, <tt>DeleteMessageBatch</tt>, and
--   <tt>ChangeMessageVisibilityBatch</tt>.
apActions :: Lens' AddPermission [Text]

-- | The unique identification of the permission you're setting (e.g.,
--   <tt>AliceSendMessage</tt>). Constraints: Maximum 80 characters;
--   alphanumeric characters, hyphens (-), and underscores (_) are allowed.
apLabel :: Lens' AddPermission Text

-- | The URL of the Amazon SQS queue to take action on.
apQueueUrl :: Lens' AddPermission Text
data AddPermissionResponse

-- | <a>AddPermissionResponse</a> constructor.
addPermissionResponse :: AddPermissionResponse
instance Eq AddPermission
instance Ord AddPermission
instance Read AddPermission
instance Show AddPermission
instance Eq AddPermissionResponse
instance Ord AddPermissionResponse
instance Read AddPermissionResponse
instance Show AddPermissionResponse
instance Generic AddPermissionResponse
instance Datatype D1AddPermissionResponse
instance Constructor C1_0AddPermissionResponse
instance AWSRequest AddPermission
instance ToHeaders AddPermission
instance ToQuery AddPermission
instance ToPath AddPermission


-- | Amazon Simple Queue Service (SQS) is a fast, reliable, scalable, fully
--   managed message queuing service. SQS makes it simple and
--   cost-effective to decouple the components of a cloud application. You
--   can use SQS to transmit any volume of data, at any level of
--   throughput, without losing messages or requiring other services to be
--   always available. With SQS, you can offload the administrative burden
--   of operating and scaling a highly available messaging cluster, while
--   paying a low price for only what you use.
module Network.AWS.SQS
