-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A module for dealing with semirings.
--   
--   Semirings are like normal rings, except you can't subtract. This
--   library provides a type class for semirings.
@package semiring-simple
@version 0.2.1.0


-- | This library provides a type class for semirings.
module Data.Semiring

-- | A semiring is an additive commutative monoid with identity
--   <a>zero</a>:
--   
--   <pre>
--           a .+. b  ==  b .+. a
--        zero .+. a  ==  a
--   (a .+. b) .+. c  ==  a .+. (b .+. c)
--   </pre>
--   
--   A semiring is a multiplicative monoid with identity <a>one</a>:
--   
--   <pre>
--         one .*. a  ==  a
--         a .*. one  ==  a
--   (a .*. b) .*. c  ==  a .*. (b .*. c)
--   </pre>
--   
--   Multiplication distributes over addition:
--   
--   <pre>
--   a .*. (b .+. c)  ==  (a .*. b) .+. (a .*. c)
--   (a .+. b) .*. c  ==  (a .*. c) .+. (b .*. c)
--   </pre>
--   
--   <a>zero</a> annihilates a semiring with respect to multiplication:
--   
--   <pre>
--   zero .*. a  ==  zero
--   a .*. zero  ==  zero
--   </pre>
class Semiring s
zero, one :: Semiring s => s
(.+., .*.) :: Semiring s => s -> s -> s
instance Semiring Bool
instance Num a => Semiring a
instance Semiring a => Monoid a
