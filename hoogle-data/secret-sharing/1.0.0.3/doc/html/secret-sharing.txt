-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Information-theoretic secure secret sharing
--   
@package secret-sharing
@version 1.0.0.3


module Crypto.SecretSharing.Internal

-- | A share of an encoded byte.
data ByteShare
ByteShare :: !Int -> !Int -> !Int -> ByteShare

-- | the index of this share
shareId :: ByteShare -> !Int

-- | number of shares required for reconstruction
reconstructionThreshold :: ByteShare -> !Int

-- | the value of p(shareId) where p(x) is the generated (secret)
--   polynomial
shareValue :: ByteShare -> !Int

-- | A share of the encoded secret.
data Share
Share :: ![ByteShare] -> Share
theShare :: Share -> ![ByteShare]

-- | Encodes a <a>ByteString</a> as a list of n shares, m of which are
--   required for reconstruction. Lives in the <a>IO</a> to access a random
--   source.
encode :: Int -> Int -> ByteString -> IO [Share]

-- | Reconstructs a (secret) bytestring from a list of (at least
--   <tt>m</tt>) shares. Throws <a>AssertionFailed</a> if the number of
--   shares is too small.
decode :: [Share] -> ByteString
encodeByte :: Int -> Int -> Polyn -> FField -> Vector ByteShare
decodeByte :: [ByteShare] -> FField

-- | Groups a list into blocks of certain size. Running time: <i>O(n)</i>
groupInto :: Int -> [a] -> [[a]]

-- | A finite prime field. All computations are performed in this field.
newtype FField
FField :: PrimeField (I (O (I (I (I (I (I (I (I (I Z)))))))))) -> FField
number :: FField -> PrimeField (I (O (I (I (I (I (I (I (I (I Z))))))))))

-- | The size of the finite field
prime :: Int

-- | A polynomial over the finite field given as a list of coefficients.
type Polyn = [FField]

-- | Evaluates the polynomial at a given point.
evalPolynomial :: Polyn -> FField -> FField
instance Typeable ByteShare
instance Typeable Share
instance Typeable FField
instance Eq ByteShare
instance Generic ByteShare
instance Eq Share
instance Generic Share
instance Show FField
instance Read FField
instance Ord FField
instance Eq FField
instance Num FField
instance Fractional FField
instance Generic FField
instance FiniteField FField
instance Datatype D1ByteShare
instance Constructor C1_0ByteShare
instance Selector S1_0_0ByteShare
instance Selector S1_0_1ByteShare
instance Selector S1_0_2ByteShare
instance Datatype D1Share
instance Constructor C1_0Share
instance Selector S1_0_0Share
instance Datatype D1FField
instance Constructor C1_0FField
instance Selector S1_0_0FField
instance Binary Share
instance Binary ByteShare
instance Show Share
instance Show ByteShare


-- | Implementation of an (<tt>m</tt>,<tt>n</tt>)-threshold secret sharing
--   scheme. A given ByteString <tt>b</tt> (the secret) is split into
--   <tt>n</tt> shares, and any <tt>m</tt> shares are sufficient to
--   reconstruct <tt>b</tt>. The scheme preserves perfect secrecy in the
--   sense that the knowledge of up to <tt>m-1</tt> shares does not reveal
--   any information about the secret <tt>b</tt>.
--   
--   Typically, there are <tt>n</tt> parties and we would like to give the
--   <tt>i</tt>-th party the <tt>i</tt>-share of each byte. For example, to
--   encode a bytestring <tt>secret</tt> as <tt>10</tt> shares, any
--   <tt>5</tt> of which are sufficient for reconstruction we could write:
--   
--   <pre>
--   shares &lt;- encode 5 10 secret
--   </pre>
--   
--   Note that each byte is encoded separately using a fresh set of random
--   coefficients.
--   
--   The mathematics behind the secret sharing scheme is described in: "How
--   to share a secret." by Shamir, Adi. In Communications of the ACM 22
--   (11): 612â€“613, 1979.
module Crypto.SecretSharing

-- | Encodes a <a>ByteString</a> as a list of n shares, m of which are
--   required for reconstruction. Lives in the <a>IO</a> to access a random
--   source.
encode :: Int -> Int -> ByteString -> IO [Share]

-- | Reconstructs a (secret) bytestring from a list of (at least
--   <tt>m</tt>) shares. Throws <a>AssertionFailed</a> if the number of
--   shares is too small.
decode :: [Share] -> ByteString

-- | A share of the encoded secret.
data Share
