-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Extra modules for the hakyll website compiler
--   
--   Extra modules for the hakyll website compiler
@package hakyll-contrib
@version 0.1.0.1


-- | This module provides a simple default configuration which behaves
--   similar to a tool such as the Jekyll static site generator
--   (<a>http://jekyllrb.com/</a>).
--   
--   The idea is that you don't have to write your configuration yourself:
--   you just follow some conventions, and Hakyll does the rest.
--   
--   You can generate a site which will serve as a good starting point by
--   running the command-line tool:
--   
--   <pre>
--   hakyll-contrib small-blog
--   </pre>
--   
--   Hakyll will then generate a simple example site for you. The necessary
--   configuration is placed in the <tt>small-blog.hs</tt> file. Compile
--   and run it to create the demo site:
--   
--   <pre>
--   ghc --make small-blog.hs
--   ./small-blog build
--   ./small-blog preview
--   </pre>
--   
--   So, in order to get your site going, you need to follow the
--   conventions for the content on your site.
--   
--   Images should be placed in the <tt>images/</tt> or <tt>img/</tt>
--   folder. The are copied directly. Other static files (but not images)
--   can be placed in <tt>static/</tt> or <tt>files/</tt>. The
--   <tt>favicon.ico</tt> file is an exception, it is just placed in the
--   top-level directory.
--   
--   CSS files should be placed in <tt>css/</tt>, and JavaScript files in
--   <tt>js/</tt>.
--   
--   Then, we arrive at pages. You can create any number of pages on your
--   site: just create files in one of the documents pandoc supports
--   (<tt>.html</tt>, <tt>.markdown</tt>, <tt>.rst</tt>, <tt>.lhs</tt>...)
--   in the top-level directory.
--   
--   These pages may use a number of preconfigured <tt>$key$</tt>'s:
--   
--   <ul>
--   <li><tt>$recentPosts$</tt>: A list of recent posts, displayed from
--   most recent to oldest. By default, 3 posts are shown, altough this can
--   be configured using the <a>numberOfRecentPosts</a> field.</li>
--   <li><tt>$allPosts$</tt>: A list of all posts, displayed from most
--   recent to oldest. This is very useful for creating an archive
--   page.</li>
--   <li><tt>$chronologicalPosts$</tt>: Similar to <tt>$allPosts$</tt>, but
--   displays the posts in chronological order.</li>
--   </ul>
--   
--   For example usage, look at the example site we generated using
--   <tt>hakyll-contrib small-blog</tt>.
--   
--   Now, one can wonder where these posts come from. Simple: all pages in
--   the <tt>posts/</tt> directory are considered posts. Note that a naming
--   format of
--   
--   <pre>
--   posts/year-month-date-title.extension
--   </pre>
--   
--   is mandatory. An example:
--   
--   <pre>
--   posts/2011-06-19-hello-world.markdown
--   </pre>
--   
--   This allows Hakyll to parse the date easily, among other things.
--   Again, look at the example site for some example posts.
--   
--   Additionaly, there is the <tt>templates/</tt> folder. This folder
--   holds the templates for your site. For a <tt>small-blog</tt>
--   configuration, your site should have <i>exactly</i> three templates:
--   
--   <ul>
--   <li><tt>templates/default.html</tt>: The main template. This should
--   contain your HTML doctype, head, etc.</li>
--   <li><tt>templates/post.html</tt>: A template which is applied to every
--   post before it is rendered using the default template.</li>
--   <li><tt>templates/post-item.html</tt>: A template which is applied to
--   posts in listings (e.g. <tt>$chronologicalPosts$</tt>).</li>
--   </ul>
--   
--   Again, the example should clarify things.
--   
--   This configuration should be enough to create a small personal
--   website. But, we have only touched the surface of what is possible
--   with Hakyll. For more information, check out the tutorials at:
--   <a>http://jaspervdj.be/hakyll</a>
module Hakyll.Contrib.SmallBlog

-- | Configuration datatype for the <a>smallBlog</a> ruleset
data SmallBlogConfiguration
SmallBlogConfiguration :: Int -> ParserState -> WriterOptions -> Maybe FeedConfiguration -> SmallBlogConfiguration

-- | Number of recent posts that are available
numberOfRecentPosts :: SmallBlogConfiguration -> Int

-- | Parser state for pandoc, i.e. read options
parserState :: SmallBlogConfiguration -> ParserState

-- | Writer options for pandoc
writerOptions :: SmallBlogConfiguration -> WriterOptions

-- | Atom feed configuration
atomFeed :: SmallBlogConfiguration -> Maybe FeedConfiguration

-- | Defaults for <a>SmallBlogConfiguration</a>
defaultSmallBlogConfiguration :: SmallBlogConfiguration

-- | A default configuration for a small blog
smallBlog :: Rules

-- | Version of <a>smallBlog</a> which allows setting a config
smallBlogWith :: SmallBlogConfiguration -> Rules
instance Show SmallBlogConfiguration
