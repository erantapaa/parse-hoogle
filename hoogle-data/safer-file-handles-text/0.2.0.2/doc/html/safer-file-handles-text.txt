-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Extends safer-file-handles with Text operations
--   
--   Extends <tt>safer-file-handles</tt> with <tt>Text</tt> operations
@package safer-file-handles-text
@version 0.2.0.2


-- | This module lifts the lazy <a>Text</a> IO operations into the region
--   monad.
module Data.Text.Lazy.IO.SaferFileHandles

-- | Wraps: <tt>Data.Text.Lazy.IO.<a>hGetLine</a></tt>.
hGetLine :: (FileHandle handle, ReadModes ioMode, AncestorRegion pr cr, MonadIO cr) => handle ioMode pr -> cr Text

-- | Wraps: <tt>Data.Text.Lazy.IO.<a>hGetContents</a></tt>.
hGetContents :: (FileHandle handle, ReadModes ioMode, AncestorRegion pr cr, MonadIO cr) => handle ioMode pr -> cr Text

-- | Wraps: <tt>Data.Text.Lazy.IO.<a>hPutStr</a></tt>.
hPutStr :: (FileHandle handle, WriteModes ioMode, AncestorRegion pr cr, MonadIO cr) => handle ioMode pr -> Text -> cr ()

-- | Wraps: <tt>Data.Text.Lazy.IO.<a>hPutStrLn</a></tt>.
hPutStrLn :: (FileHandle handle, WriteModes ioMode, AncestorRegion pr cr, MonadIO cr) => handle ioMode pr -> Text -> cr ()


-- | This module lifts the <a>Text</a> IO operations into the region monad.
module Data.Text.IO.SaferFileHandles

-- | Wraps: <tt>Data.Text.IO.<a>hGetLine</a></tt>.
hGetLine :: (FileHandle handle, ReadModes ioMode, AncestorRegion pr cr, MonadIO cr) => handle ioMode pr -> cr Text

-- | Wraps: <tt>Data.Text.IO.<a>hGetContents</a></tt>.
hGetContents :: (FileHandle handle, ReadModes ioMode, AncestorRegion pr cr, MonadIO cr) => handle ioMode pr -> cr Text

-- | Wraps: <tt>Data.Text.IO.<a>hPutStr</a></tt>.
hPutStr :: (FileHandle handle, WriteModes ioMode, AncestorRegion pr cr, MonadIO cr) => handle ioMode pr -> Text -> cr ()

-- | Wraps: <tt>Data.Text.IO.<a>hPutStrLn</a></tt>.
hPutStrLn :: (FileHandle handle, WriteModes ioMode, AncestorRegion pr cr, MonadIO cr) => handle ioMode pr -> Text -> cr ()
