-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Use Accessor to access state in monads-tf State monad type family
--   
--   Use Accessor to access state in monads-tf State monad type family
@package data-accessor-monads-tf
@version 0.2.1.4


-- | Access helper functions in the State monad type family
module Data.Accessor.Monad.TF.State
set :: MonadState m => T (StateType m) a -> a -> m ()
get :: MonadState m => T (StateType m) a -> m a
modify :: MonadState m => T (StateType m) a -> (a -> a) -> m ()

-- | Modify a record element and return its old value.
getAndModify :: MonadState m => T (StateType m) a -> (a -> a) -> m a

-- | Modify a record element and return its new value.
modifyAndGet :: MonadState m => T (StateType m) a -> (a -> a) -> m a

-- | Infix variant of <a>set</a>.
(%=) :: MonadState m => T (StateType m) a -> a -> m ()

-- | Infix variant of <a>modify</a>.
(%:) :: MonadState m => T (StateType m) a -> (a -> a) -> m ()
lift :: MonadState mr => T (StateType mr) s -> State s a -> mr a
liftT :: (Monad m, MonadTrans t, MonadState (t m)) => T (StateType (t m)) s -> StateT s m a -> t m a
