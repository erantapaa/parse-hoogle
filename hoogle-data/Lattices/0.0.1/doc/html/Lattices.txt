-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A library for lattices
--   
--   A library for lattices, in particular for computing an LLL reduced
--   basis for a lattice and finding a close lattice vector
@package Lattices
@version 0.0.1


-- | Compute a Gram-Schmidt orthogonal basis
module Math.LinearAlgebra.GramSchmidt

-- | Given a basis, return the Gram-Schmidt orhthogonal basis
gramSchmidtBasis :: Fractional a => [[a]] -> [[a]]

-- | Given a basis, return the Gram-Schmidt orthogonalization, which is a
--   tuple with the Gram-Schmidt orthogonal basis first, and the $mu_{i,j}
--   = langle b_i, b^*_j rangle / langle b^*_j, b^*_j rangle$ triangular
--   matrix second, for $1 leq j &lt; i &lt; n$.
gramSchmidtOrthogonalization :: Fractional a => [[a]] -> ([[a]], [[a]])


-- | Implements a *very* basic LLL (Lenstra-Lenstra-Lovsz) lattice
--   reduction algorithm. This version uses exact arithmetic over the
--   rationals. References for the LLL algorithm:
--   
--   <ul>
--   <li>Factoring Polynomials with Rational Coefficients, Arjen K Lenstra,
--   Hendrik W Lenstra Jr, and Lszl Lovsz. Mathematische Annalen 261,
--   515-534 (1982)</li>
--   <li>Mathematics of Public Key Cryptography, Steven Galbraith. Chapter
--   17 of draft 1.0</li>
--   <li>Modern Computer Algebra, second edition, Joachim von zur Gathen
--   and Jrgen Gerhard. Chapter 16.</li>
--   </ul>
--   
--   References for Babai's Nearest Plane Method for the Closest Vector
--   Problem:
--   
--   <ul>
--   <li>On Lovsz' Lattice Reduction And The Nearest Lattice Point
--   Problem, Lszl Babai. Combinatorica 6 (1), 1-13 (1986).</li>
--   <li>Mathematics of Public Key Cryptography, Steven Galbraith. Chapter
--   18 of draft 1.0</li>
--   </ul>
module Math.Lattices.LLL

-- | Just an easy way to write $||v||^2$
--   
--   Closest 'Integral to the given n, rounding up. $lfloor nrceil$
--   
--   Return an LLL reduced basis. This calls 'lllDelta with a default
--   parameter $delta = 3/4$
lll :: [[Rational]] -> Basis

-- | Return an LLL reduced basis, with reduction parameter $delta$. This is
--   the conventional flavor of the algorithm using Gram-Schmidt, no fancy
--   speedups yet
lllDelta :: [[Rational]] -> Rational -> Basis

-- | Find a lattice vector in 'basis close to <tt>x</tt>. <tt>basis</tt> is
--   assumed to be LLL-reduced
closeVector :: [[Rational]] -> [Ratio Integer] -> [Rational]

-- | A matrix representing a basis
type Basis = Array Int [Rational]
