-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | convert types into string values in haskell
--   
--   Convert types into string values in Haskell.
--   
--   More information can be found in the <a>hackage's haddock</a> or the
--   <a>updated haddock</a>.
@package show-type
@version 0.1.1

module Type.Showtype

-- | Conversion of types to readable <a>String</a>s. Analogous to
--   <a>Show</a>.
class Showtype (a :: k) where showtype p = showtypesPrec 0 p "" showtypesPrec _ p s = showtype p ++ s
showtype :: Showtype a => proxy a -> String
showtypesPrec :: Showtype a => Int -> proxy a -> String -> String
printtype :: Showtype a => proxy a -> IO ()
instance Typeable a => Showtype a
instance Typeable a => Showtype a
instance Typeable a => Showtype a
instance Typeable a => Showtype a
instance Typeable a => Showtype a
instance Typeable a => Showtype a
instance Typeable a => Showtype a
instance Typeable a => Showtype a
instance Typeable a => Showtype a
instance Typeable a => Showtype a
instance Typeable a => Showtype a
instance Typeable a => Showtype a
instance Typeable a => Showtype a
instance Typeable a => Showtype a
instance Typeable a => Showtype a
instance Typeable a => Showtype a
instance Typeable a => Showtype a
instance Typeable a => Showtype a
instance Typeable a => Showtype a
instance Typeable a => Showtype a
instance Typeable a => Showtype a
instance Typeable a => Showtype a
instance (Showtype a, Showtype b, Showtype c, Showtype d, Showtype e, Showtype f, Showtype g, Showtype h, Showtype i, Showtype j) => Showtype '(a, b, c, d, e, f, g, h, i, j)
instance (Showtype a, Showtype b, Showtype c, Showtype d, Showtype e, Showtype f, Showtype g, Showtype h, Showtype i) => Showtype '(a, b, c, d, e, f, g, h, i)
instance (Showtype a, Showtype b, Showtype c, Showtype d, Showtype e, Showtype f, Showtype g, Showtype h) => Showtype '(a, b, c, d, e, f, g, h)
instance (Showtype a, Showtype b, Showtype c, Showtype d, Showtype e, Showtype f, Showtype g) => Showtype '(a, b, c, d, e, f, g)
instance (Showtype a, Showtype b, Showtype c, Showtype d, Showtype e, Showtype f) => Showtype '(a, b, c, d, e, f)
instance (Showtype a, Showtype b, Showtype c, Showtype d, Showtype e) => Showtype '(a, b, c, d, e)
instance (Showtype a, Showtype b, Showtype c, Showtype d) => Showtype '(a, b, c, d)
instance (Showtype a, Showtype b, Showtype c) => Showtype '(a, b, c)
instance (Showtype a, Showtype b) => Showtype '(a, b)
instance Showtype '()
instance (Showtype a, Showlisttype as) => Showlisttype (a : as)
instance Showlisttype '[]
instance (Showtype a, Showlisttype as) => Showtype (a : as)
instance Showtype '[]
instance Showtype a => Showtype ('Right a)
instance Showtype a => Showtype ('Left a)
instance Showtype a => Showtype ('Just a)
instance Showtype 'Nothing
instance KnownSymbol s => Showtype s
instance KnownNat n => Showtype n
instance Showtype 'GT
instance Showtype 'EQ
instance Showtype 'LT
instance Showtype 'True
instance Showtype 'False
