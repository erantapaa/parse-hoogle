-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A library for compiling programs in a variety of languages
--   
--   A library for compiling programs in a variety of languages including
--   Java, Scala and C#.
@package Lastik
@version 0.7.0


-- | Functions for working with command line arguments and options.
module System.Build.Args

-- | Surrounds the given string in double-quotes and escapes any already
--   there.
quote :: String -> String

-- | An empty list if the boolean is <tt>False</tt> otherwise the given
--   string value with <tt><a>-</a></tt> prepended.
(~~) :: String -> Bool -> String

-- | If the given list of file paths is empty, then returns the empty list.
--   Otherwise prepend <tt><a>-</a></tt> to the string followed by <tt>'
--   '</tt> then the search path separator intercalated in the list of file
--   paths.
--   
--   <pre>
--   Posix
--   "123" ~?? ["abc", "def"] == "-123 \"abc\":\"def\""
--   "123" ~?? ["abc", "def", "ghi"] == "-123 \"abc\":\"def\":\"ghi\""
--   </pre>
(~:) :: String -> [FilePath] -> String

-- | If the given value is <tt>Nothing</tt> return the empty list,
--   otherwise run the given function.
(~?) :: (k -> [a]) -> Maybe k -> [a]

-- | If the given value is <tt>Nothing</tt> return the empty list,
--   otherwise prepend <tt><a>-</a></tt> to the given string followed by
--   the given character followed by surrounding the result of running the
--   given function in double-quotes.
--   
--   <pre>
--   param "abc" 'x' id (Just "tuv") == "-abcx\"tuv\""
--   param "abc" 'x' id Nothing == ""
--   </pre>
param :: String -> Char -> (k -> String) -> Maybe k -> String

-- | A parameter with many values interspersed by <tt>' '</tt>.
--   
--   <pre>
--   many "abc" ["tuv", "wxy"] == "-abc \"tuv\" -abc \"wxy\""
--   </pre>
many :: String -> [String] -> String

-- | A parameter with many values interspersed by <tt>' '</tt>.
--   
--   <pre>
--   manys id "abc" ["tuv", "wxy"] == "-abc \"tuv\" -abc \"wxy\""
--   </pre>
manys :: (a -> String) -> String -> [a] -> String

-- | Prepends <tt><a>-</a></tt> followed by the first value then <tt>'
--   '</tt> then the second value surrounded by double-quotes.
--   
--   <pre>
--   "abc" ~~~&gt; "def" == "-abc \"def\""
--   </pre>
(~~~>) :: String -> String -> String

-- | If the given value is <tt>Nothing</tt> return the empty list,
--   otherwise prepend <tt><a>-</a></tt> followed by the first value then
--   <tt>' '</tt> followed by surrounding the result of running the given
--   function in double-quotes.
--   
--   <pre>
--   "abc" ~~&gt; Just "def" == "-abc \"def\""
--   "abc" ~~&gt; Nothing == ""
--   </pre>
(~~>) :: ArgShow k => String -> Maybe k -> String

-- | If the given value is <tt>Nothing</tt> return the empty list,
--   otherwise prepend <tt><a>-</a></tt> followed by the first value then
--   <tt><tt>:</tt></tt> followed by surrounding the result of
--   <tt>show</tt> in double-quotes.
--   
--   <pre>
--   "abc" ~~&gt; Just "def" == "-abc:\"def\""
--   "abc" ~~&gt; Nothing == ""
--   </pre>
(-~>) :: ArgShow k => String -> Maybe k -> String

-- | Removes all empty lists from the first argument the intercalates the
--   second argument.
--   
--   <pre>
--   ["abc", "", "def"] ^^^ "x" == "abcxdef"
--   </pre>
(^^^) :: [[a]] -> [a] -> [a]

-- | Surrounds each given value in double-quotes then intercalates <tt>'
--   '</tt>.
--   
--   <pre>
--   space ["abc", "def"] == "\"abc\" \"def\""
--   </pre>
space :: [String] -> String

-- | Surrounds each given value in double-quotes then intercalates
--   <tt>[searchPathSeparator]</tt>.
--   
--   <pre>
--   searchPath ["abc", "def"] == "\"abc\":\"def\""
--   </pre>
searchPath :: [String] -> String

-- | Look up the given environment variables. The first one found that
--   exists has its associated function called to produce a value.
tryEnvs :: [(String, String -> a)] -> IO (Maybe a)
class ArgShow a
arg :: ArgShow a => a -> String
instance ArgShow Int
instance ArgShow String


-- | A module that represents that access levels available to
--   <tt>scaladoc</tt>.
module System.Build.Scala.Access

-- | Show only public, protected/public (default) or all classes and
--   members (public,protected,private)
data Access

-- | <pre>
--   public
--   </pre>
Public :: Access

-- | <pre>
--   protected
--   </pre>
Protected :: Access

-- | <pre>
--   private
--   </pre>
Private :: Access
instance Eq Access
instance ArgShow Access
instance Show Access


-- | A module that represents the debug levels to <tt>scalac</tt> and
--   <tt>scaladoc</tt>.
module System.Build.Scala.Debug

-- | Specify level of generated debugging info
--   (none,source,line,vars,notailcalls)
data Debug

-- | <pre>
--   none
--   </pre>
None :: Debug

-- | <pre>
--   source
--   </pre>
Source :: Debug

-- | <pre>
--   line
--   </pre>
Line :: Debug

-- | <pre>
--   vars
--   </pre>
Vars :: Debug

-- | <pre>
--   notailcalls
--   </pre>
NoTailCalls :: Debug
instance Eq Debug
instance ArgShow Debug
instance Show Debug


-- | A module that represents the target levels to <tt>scalac</tt> and
--   <tt>scaladoc</tt>.
module System.Build.Scala.Target

-- | Specify for which target object files should be built
--   (jvm-1.5,jvm-1.4,msil)
data Target

-- | <pre>
--   jvm-1.5
--   </pre>
JVM15 :: Target

-- | <pre>
--   jvm-1.4
--   </pre>
JVM14 :: Target

-- | <pre>
--   msil
--   </pre>
MSIL :: Target
instance Eq Target
instance ArgShow Target
instance Show Target


-- | Values that reference a list of file paths.
module System.Build.OutputReferenceSet
class OutputReferenceSet r
setReference :: OutputReferenceSet r => [FilePath] -> r -> r


-- | Values that reference a list of file paths.
module System.Build.OutputReferenceGet
class OutputReferenceGet r
getReference :: OutputReferenceGet r => r -> [FilePath]


-- | Values that have the potential for an output directory.
module System.Build.OutputDirectory
class OutputDirectory o
outdir :: OutputDirectory o => o -> Maybe FilePath


-- | Computing file extensions for a value.
module System.Build.Extensions
class Extensions e
exts :: Extensions e => e -> [String]

-- | Return all the file extensions associated with the given value and
--   prepend a single dot.
exts' :: Extensions e => e -> [String]


-- | A module for performing operations on directories.
module System.Build.Directory

-- | Change to the given directory, then execute the given action, then
--   change back to the original directory.
chdir :: FilePath -> IO a -> IO a

-- | Creates the given directory and its parents if it doesn't exist.
mkdir :: FilePath -> IO ()

-- | Removes the given directory recursively if it exists.
rmdir :: FilePath -> IO ()

-- | Create a zip archive by changing into directories and archiving the
--   contents.
archiveDirectories :: [(FilePath, FilePath)] -> RecursionPredicate -> FilterPredicate -> [ZipOption] -> IO Archive

-- | Writes a zip archive to a file.
writeArchive :: [(FilePath, FilePath)] -> RecursionPredicate -> FilterPredicate -> [ZipOption] -> FilePath -> IO ()

-- | Writes a zip archive to a file then computes a MD5 and SHA1 hash and
--   writes them to files with <tt><a>.md5</a></tt> and
--   <tt><a>.sha1</a></tt> extensions.
writeHashArchive :: [(FilePath, FilePath)] -> RecursionPredicate -> FilterPredicate -> [ZipOption] -> FilePath -> IO ()

-- | Copy the contents of a directory to another, perhaps trimming parent
--   directories.
copy :: RecursionPredicate -> FilterPredicate -> FilePath -> FilePath -> IO ()

-- | Copy the contents of a directory to another, perhaps trimming parent
--   directories.
copyl :: RecursionPredicate -> FilterPredicate -> Int -> FilePath -> FilePath -> IO ()

-- | Drops the parent directory of a given file path.
--   
--   <pre>
--   dropRoot "/foo/bar" == "/bar"
--   dropRoot "foo/bar" == "bar"
--   dropRoot "foo" == ""
--   dropRoot "" == ""
--   </pre>
dropRoot :: FilePath -> String

-- | Drops the parent directory (<a>dropRoot</a>) of a given file path
--   multiple times.
--   
--   <pre>
--   dropRoot' 0 "/foo/bar" == "/foo/bar"
--   dropRoot' 1 "/foo/bar" == "/bar"
--   dropRoot' 1 "foo/bar" == "bar"
--   dropRoot' 2 "foo/bar" == ""
--   dropRoot' 10 "foo/bar" == ""
--   </pre>
dropRoot' :: Int -> FilePath -> FilePath


-- | For building a command for values that use paths.
module System.Build.CompilePaths
class CompilePaths c
(=>>) :: CompilePaths c => c -> [FilePath] -> String


-- | Abstraction on executable commands.
module System.Build.Command
class Command c
command :: Command c => c -> IO String


-- | A module for running compilable data types that take a list of file
--   paths to compile.
module System.Build.Runner
type Runner e r = r -> [FilePath] -> IO e
type RunnerExit r = Runner ExitCode r

-- | Applies the second value only if the first produces
--   <tt>ExitSuccess</tt>.
(>--) :: Monad m => m ExitCode -> m ExitCode -> m ExitCode

-- | Executes the second action only if the first produces
--   <tt>ExitSuccess</tt>.
(>==) :: Monad m => m ExitCode -> m () -> m ()

-- | Transform the list of file paths before executing the runner.
pathTransform :: ([FilePath] -> IO [FilePath]) -> Runner x t -> Runner x t

-- | Get all file paths with the given file extension (recursively) and
--   execute the runner on those.
pathTransform' :: Extensions e => e -> Runner x r -> Runner x r
(!!!) :: (Command c, CompilePaths c) => RunnerExit c

-- | Create the output target directory then execute the compile result as
--   a system command.
(>->) :: (OutputDirectory c, Command c, CompilePaths c) => RunnerExit c

-- | A runner that recursively searches the output target for files that
--   match a given extension and compiles them as a system command.
(->-) :: (OutputDirectory c, Extensions c, CompilePaths c, Command c) => RunnerExit c

-- | Adds the given file path to the reference target of the given value.
(+>>) :: (OutputReferenceGet r, OutputReferenceSet r) => FilePath -> r -> r

-- | Adds the given file paths to the reference target of the given value.
(++>>) :: (OutputReferenceGet r, OutputReferenceSet r) => [FilePath] -> r -> r

-- | Adds the (potential) output target of the given value to the output
--   target of the given value.
(>===>) :: (OutputDirectory o, OutputReferenceGet r, OutputReferenceSet r) => o -> r -> r

-- | Adds the (potential) output target and output references of the given
--   value to the output target of the given value.
(>=>=>) :: (OutputDirectory o, OutputReferenceGet o, OutputReferenceGet r, OutputReferenceSet r) => o -> r -> r


-- | A module for compiling Java source files using <tt>javac</tt>.
module System.Build.Java.Javac

-- | Javac is the compiler for Java source files.
data Javac

-- | The debug options that can be passed to <tt>javac</tt>.
data Debug

-- | Generate only some debugging info (<tt>lines</tt>).
Lines :: Debug

-- | Generate only some debugging info (<tt>vars</tt>).
Vars :: Debug

-- | Generate only some debugging info (<tt>source</tt>).
Source :: Debug

-- | Generate no debugging info.
None :: Debug

-- | Generate all debugging info.
All :: Debug

-- | Control whether annotation processing and/or compilation is done.
data Proc

-- | Specify whether or not to generate class files for implicitly
--   referenced files.
data Implicit

-- | No annotation processing (<tt>none</tt>).
noneProc :: Proc

-- | Only annotation processing (<tt>only</tt>).
only :: Proc

-- | Returns the second argument if the given <tt>Proc</tt> is
--   <tt>none</tt>, otherwise the third argument.
proc' :: Proc -> a -> a -> a

-- | No generate class files for implicitly referenced files
--   (<tt>none</tt>).
noneImplicit :: Implicit

-- | Generate class files for implicitly referenced files (<tt>class</tt>).
class' :: Implicit

-- | Returns the second argument if the given <tt>Implicit</tt> is
--   <tt>none</tt>, otherwise the third argument.
implicit' :: Implicit -> a -> a -> a

-- | <pre>
--   -g
--   </pre>
debug :: Javac -> Maybe Debug

-- | <pre>
--   -nowarn
--   </pre>
nowarn :: Javac -> Bool

-- | <pre>
--   -verbose
--   </pre>
verbose :: Javac -> Bool

-- | <pre>
--   -deprecation
--   </pre>
deprecation :: Javac -> Bool

-- | <pre>
--   -classpath
--   </pre>
classpath :: Javac -> [FilePath]

-- | <pre>
--   -sourcepath
--   </pre>
sourcepath :: Javac -> [FilePath]

-- | <pre>
--   -bootclasspath
--   </pre>
bootclasspath :: Javac -> [FilePath]

-- | <pre>
--   -extdirs
--   </pre>
extdirs :: Javac -> [FilePath]

-- | <pre>
--   -endorseddirs
--   </pre>
endorseddirs :: Javac -> [FilePath]

-- | <pre>
--   -proc
--   </pre>
proc :: Javac -> Maybe Proc

-- | <pre>
--   -processor
--   </pre>
processor :: Javac -> [String]

-- | <pre>
--   -processorpath
--   </pre>
processorpath :: Javac -> Maybe FilePath

-- | <pre>
--   -d
--   </pre>
directory :: Javac -> Maybe FilePath

-- | <pre>
--   -s
--   </pre>
src :: Javac -> Maybe FilePath

-- | <pre>
--   -implicit
--   </pre>
implicit :: Javac -> Maybe Implicit

-- | <pre>
--   -encoding
--   </pre>
encoding :: Javac -> Maybe String

-- | <pre>
--   -source
--   </pre>
source :: Javac -> Maybe String

-- | <pre>
--   -target
--   </pre>
target :: Javac -> Maybe String

-- | <pre>
--   -version
--   </pre>
version :: Javac -> Bool

-- | <pre>
--   -help
--   </pre>
help :: Javac -> Bool

-- | <pre>
--   -Akey[=value]
--   </pre>
akv :: Javac -> Maybe ([String], Maybe String)

-- | <pre>
--   -J
--   </pre>
flags :: Javac -> [String]
etc :: Javac -> Maybe String

-- | A <tt>Javac</tt> with nothing set.
javac :: Javac

-- | Construct a <tt>Javac</tt>.
javac' :: Maybe Debug -> Bool -> Bool -> Bool -> [FilePath] -> [FilePath] -> [FilePath] -> [FilePath] -> [FilePath] -> Maybe Proc -> [String] -> Maybe FilePath -> Maybe FilePath -> Maybe FilePath -> Maybe Implicit -> Maybe String -> Maybe String -> Maybe String -> Bool -> Bool -> Maybe ([String], Maybe String) -> [String] -> Maybe String -> Javac
instance Eq Implicit
instance Eq Proc
instance Eq Debug
instance Command Javac
instance OutputReferenceGet Javac
instance OutputReferenceSet Javac
instance OutputDirectory Javac
instance Extensions Javac
instance CompilePaths Javac
instance Show Javac
instance ArgShow Implicit
instance Show Implicit
instance ArgShow Proc
instance Show Proc
instance ArgShow Debug
instance Show Debug


-- | A module for documenting Java source files using <tt>javadoc</tt>.
module System.Build.Java.Javadoc

-- | Javadoc is the compiler for Java API documentation.
data Javadoc

-- | Provide source compatibility with specified release
data SourceRelease

-- | <pre>
--   1.5
--   </pre>
S15 :: SourceRelease

-- | <pre>
--   1.4
--   </pre>
S14 :: SourceRelease

-- | <pre>
--   1.3
--   </pre>
S13 :: SourceRelease

-- | <pre>
--   -overview
--   </pre>
overview :: Javadoc -> Maybe FilePath

-- | <pre>
--   -public
--   </pre>
public :: Javadoc -> Bool

-- | <pre>
--   -protected
--   </pre>
protected :: Javadoc -> Bool

-- | <pre>
--   -package
--   </pre>
package :: Javadoc -> Bool

-- | <pre>
--   -private
--   </pre>
private :: Javadoc -> Bool

-- | <pre>
--   -help
--   </pre>
help :: Javadoc -> Bool

-- | <pre>
--   -doclet
--   </pre>
doclet :: Javadoc -> Maybe String

-- | <pre>
--   -docletpath
--   </pre>
docletpath :: Javadoc -> Maybe FilePath

-- | <pre>
--   -sourcepath
--   </pre>
sourcepath :: Javadoc -> [FilePath]

-- | <pre>
--   -classpath
--   </pre>
classpath :: Javadoc -> [FilePath]

-- | <pre>
--   -exclude
--   </pre>
exclude :: Javadoc -> [String]

-- | <pre>
--   -subpackages
--   </pre>
subpackages :: Javadoc -> [String]

-- | <pre>
--   -breakiterator
--   </pre>
breakiterator :: Javadoc -> Bool

-- | <pre>
--   -bootclasspath
--   </pre>
bootclasspath :: Javadoc -> [FilePath]

-- | <pre>
--   -source
--   </pre>
source :: Javadoc -> Maybe SourceRelease

-- | <pre>
--   -extdirs
--   </pre>
extdirs :: Javadoc -> [FilePath]

-- | <pre>
--   -verbose
--   </pre>
verbose :: Javadoc -> Bool

-- | <pre>
--   -locale
--   </pre>
locale :: Javadoc -> Maybe String

-- | <pre>
--   -encoding
--   </pre>
encoding :: Javadoc -> Maybe String

-- | <pre>
--   -quiet
--   </pre>
quiet :: Javadoc -> Bool

-- | <pre>
--   -flags
--   </pre>
flags :: Javadoc -> [String]

-- | <pre>
--   -d
--   </pre>
directory :: Javadoc -> Maybe FilePath

-- | <pre>
--   -use
--   </pre>
use :: Javadoc -> Bool

-- | <pre>
--   -version
--   </pre>
version :: Javadoc -> Bool

-- | <pre>
--   -author
--   </pre>
author :: Javadoc -> Bool

-- | <pre>
--   -docfilessubdirs
--   </pre>
docfilessubdirs :: Javadoc -> Bool

-- | <pre>
--   -splitindex
--   </pre>
splitindex :: Javadoc -> Bool

-- | <pre>
--   -windowtitle
--   </pre>
windowtitle :: Javadoc -> Maybe String

-- | <pre>
--   -doctitle
--   </pre>
doctitle :: Javadoc -> Maybe String

-- | <pre>
--   -header
--   </pre>
header :: Javadoc -> Maybe String

-- | <pre>
--   -footer
--   </pre>
footer :: Javadoc -> Maybe String

-- | <pre>
--   -top
--   </pre>
top :: Javadoc -> Maybe String

-- | <pre>
--   -bottom
--   </pre>
bottom :: Javadoc -> Maybe String

-- | <pre>
--   -link
--   </pre>
link :: Javadoc -> [String]

-- | <pre>
--   -linkoffline
--   </pre>
linkoffline :: Javadoc -> [(String, String)]

-- | <pre>
--   -excludedocfilessubdir
--   </pre>
excludedocfilessubdir :: Javadoc -> [String]

-- | <pre>
--   -group
--   </pre>
group :: Javadoc -> [(String, [String])]

-- | <pre>
--   -nocomment
--   </pre>
nocomment :: Javadoc -> Bool

-- | <pre>
--   -nodeprecated
--   </pre>
nodeprecated :: Javadoc -> Bool

-- | <pre>
--   -noqualifier
--   </pre>
noqualifier :: Javadoc -> [String]

-- | <pre>
--   -nosince
--   </pre>
nosince :: Javadoc -> Bool

-- | <pre>
--   -notimestamp
--   </pre>
notimestamp :: Javadoc -> Bool

-- | <pre>
--   -nodeprecatedlist
--   </pre>
nodeprecatedlist :: Javadoc -> Bool

-- | <pre>
--   -notree
--   </pre>
notree :: Javadoc -> Bool

-- | <pre>
--   -noindex
--   </pre>
noindex :: Javadoc -> Bool

-- | <pre>
--   -nohelp
--   </pre>
nohelp :: Javadoc -> Bool

-- | <pre>
--   -nonavbar
--   </pre>
nonavbar :: Javadoc -> Bool

-- | <pre>
--   -serialwarn
--   </pre>
serialwarn :: Javadoc -> Bool

-- | <pre>
--   -tag
--   </pre>
tag :: Javadoc -> [(String, String, String)]

-- | <pre>
--   -taglet
--   </pre>
taglet :: Javadoc -> Bool

-- | <pre>
--   -tagletpath
--   </pre>
tagletpath :: Javadoc -> Bool

-- | <pre>
--   -charset
--   </pre>
charset :: Javadoc -> Maybe String

-- | <pre>
--   -helpfile
--   </pre>
helpfile :: Javadoc -> Maybe FilePath

-- | <pre>
--   -linksource
--   </pre>
linksource :: Javadoc -> Bool

-- | <pre>
--   -sourcetab
--   </pre>
sourcetab :: Javadoc -> Maybe Int

-- | <pre>
--   -keywords
--   </pre>
keywords :: Javadoc -> Bool

-- | <pre>
--   -stylesheetfile
--   </pre>
stylesheetfile :: Javadoc -> Maybe FilePath

-- | <pre>
--   -docencoding
--   </pre>
docencoding :: Javadoc -> Maybe String

-- | A <tt>Javadoc</tt> with nothing set.
javadoc :: Javadoc

-- | Construct a <tt>Javadoc</tt>.
javadoc' :: Maybe FilePath -> Bool -> Bool -> Bool -> Bool -> Bool -> Maybe String -> Maybe FilePath -> [FilePath] -> [FilePath] -> [String] -> [String] -> Bool -> [FilePath] -> Maybe SourceRelease -> [FilePath] -> Bool -> Maybe String -> Maybe String -> Bool -> [String] -> Maybe FilePath -> Bool -> Bool -> Bool -> Bool -> Bool -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> [String] -> [(String, String)] -> [String] -> [(String, [String])] -> Bool -> Bool -> [String] -> Bool -> Bool -> Bool -> Bool -> Bool -> Bool -> Bool -> Bool -> [(String, String, String)] -> Bool -> Bool -> Maybe String -> Maybe FilePath -> Bool -> Maybe Int -> Bool -> Maybe FilePath -> Maybe String -> Javadoc
instance Eq SourceRelease
instance Command Javadoc
instance OutputReferenceGet Javadoc
instance OutputReferenceSet Javadoc
instance OutputDirectory Javadoc
instance Extensions Javadoc
instance CompilePaths Javadoc
instance Show Javadoc
instance ArgShow SourceRelease
instance Show SourceRelease


-- | A module for compiling Scala source files using <tt>scalac</tt>.
module System.Build.Scala.Scalac

-- | The Scala fast compiler (<tt>fsc</tt>).
data Fsc

-- | Scalac is the compiler for Scala source files.
data Scalac

-- | <pre>
--   -g
--   </pre>
debug :: Scalac -> Maybe Debug

-- | <pre>
--   -nowarn
--   </pre>
nowarn :: Scalac -> Bool

-- | <pre>
--   -verbose
--   </pre>
verbose :: Scalac -> Bool

-- | <pre>
--   -deprecation
--   </pre>
deprecation :: Scalac -> Bool

-- | <pre>
--   -unchecked
--   </pre>
unchecked :: Scalac -> Bool

-- | <pre>
--   -classpath
--   </pre>
classpath :: Scalac -> [FilePath]

-- | <pre>
--   -sourcepath
--   </pre>
sourcepath :: Scalac -> [FilePath]

-- | <pre>
--   -bootclasspath
--   </pre>
bootclasspath :: Scalac -> [FilePath]

-- | <pre>
--   -extdirs
--   </pre>
extdirs :: Scalac -> [FilePath]

-- | <pre>
--   -d
--   </pre>
directory :: Scalac -> Maybe FilePath

-- | <pre>
--   -encoding
--   </pre>
encoding :: Scalac -> Maybe String

-- | <pre>
--   -target
--   </pre>
target :: Scalac -> Maybe Target

-- | <pre>
--   -print
--   </pre>
print :: Scalac -> Bool

-- | <pre>
--   -optimise
--   </pre>
optimise :: Scalac -> Bool

-- | <pre>
--   -explaintypes
--   </pre>
explaintypes :: Scalac -> Bool

-- | <pre>
--   -uniqid
--   </pre>
uniqid :: Scalac -> Bool

-- | <pre>
--   -version
--   </pre>
version :: Scalac -> Bool

-- | <pre>
--   -help
--   </pre>
help :: Scalac -> Bool

-- | <pre>
--   @
--   </pre>
(?) :: Scalac -> Maybe FilePath
etc :: Scalac -> Maybe String

-- | A <tt>Scalac</tt> with nothing set.
scalac :: Scalac

-- | Construct a <tt>Scalac</tt>.
scalac' :: Maybe Debug -> Bool -> Bool -> Bool -> Bool -> [FilePath] -> [FilePath] -> [FilePath] -> [FilePath] -> Maybe FilePath -> Maybe String -> Maybe Target -> Bool -> Bool -> Bool -> Bool -> Bool -> Bool -> Maybe FilePath -> Maybe String -> Scalac

-- | Convert the given scalac to a list of command line options which may
--   be used by other scala tools.
kscalac :: Scalac -> [String]

-- | The scalac options to use.
fscalac :: Fsc -> Scalac

-- | <pre>
--   -reset
--   </pre>
reset :: Fsc -> Bool

-- | <pre>
--   -shutdown
--   </pre>
shutdown :: Fsc -> Bool

-- | <pre>
--   -server
--   </pre>
server :: Fsc -> Maybe (String, String)

-- | <pre>
--   -flags
--   </pre>
flags :: Fsc -> [String]

-- | A <tt>Fsc</tt> with nothing set.
fsc :: Fsc
instance Command Fsc
instance OutputReferenceGet Fsc
instance OutputReferenceSet Fsc
instance OutputDirectory Fsc
instance Extensions Fsc
instance CompilePaths Fsc
instance Show Fsc
instance Command Scalac
instance OutputReferenceGet Scalac
instance OutputReferenceSet Scalac
instance OutputDirectory Scalac
instance Extensions Scalac
instance CompilePaths Scalac
instance Show Scalac


-- | A module for documenting Scala source files using <tt>scaladoc</tt>.
module System.Build.Scala.Scaladoc

-- | Javadoc is the compiler for Scala API documentation.
data Scaladoc

-- | <pre>
--   -g
--   </pre>
debug :: Scaladoc -> Maybe Debug

-- | <pre>
--   -nowarn
--   </pre>
nowarn :: Scaladoc -> Bool

-- | <pre>
--   -verbose
--   </pre>
verbose :: Scaladoc -> Bool

-- | <pre>
--   -deprecation
--   </pre>
deprecation :: Scaladoc -> Bool

-- | <pre>
--   -unchecked
--   </pre>
unchecked :: Scaladoc -> Bool

-- | <pre>
--   -classpath
--   </pre>
classpath :: Scaladoc -> [FilePath]

-- | <pre>
--   -sourcepath
--   </pre>
sourcepath :: Scaladoc -> [FilePath]

-- | <pre>
--   -bootclasspath
--   </pre>
bootclasspath :: Scaladoc -> [FilePath]

-- | <pre>
--   -extdirs
--   </pre>
extdirs :: Scaladoc -> [FilePath]

-- | <pre>
--   -d
--   </pre>
directory :: Scaladoc -> Maybe FilePath

-- | <pre>
--   -encoding
--   </pre>
encoding :: Scaladoc -> Maybe String

-- | <pre>
--   -target
--   </pre>
target :: Scaladoc -> Maybe Target

-- | <pre>
--   -print
--   </pre>
print :: Scaladoc -> Bool

-- | <pre>
--   -optimise
--   </pre>
optimise :: Scaladoc -> Bool

-- | <pre>
--   -explaintypes
--   </pre>
explaintypes :: Scaladoc -> Bool

-- | <pre>
--   -uniqid
--   </pre>
uniqid :: Scaladoc -> Bool

-- | <pre>
--   -version
--   </pre>
version :: Scaladoc -> Bool

-- | <pre>
--   -help
--   </pre>
help :: Scaladoc -> Bool

-- | <pre>
--   @
--   </pre>
(?) :: Scaladoc -> Maybe FilePath

-- | <pre>
--   -access
--   </pre>
access :: Scaladoc -> Maybe Access

-- | <pre>
--   -bottom
--   </pre>
bottom :: Scaladoc -> Maybe String

-- | <pre>
--   -charset
--   </pre>
charset :: Scaladoc -> Maybe String

-- | <pre>
--   -doctitle
--   </pre>
doctitle :: Scaladoc -> Maybe String

-- | <pre>
--   -footer
--   </pre>
footer :: Scaladoc -> Maybe String

-- | <pre>
--   -header
--   </pre>
header :: Scaladoc -> Maybe String

-- | <pre>
--   -linksource
--   </pre>
linksource :: Scaladoc -> Bool

-- | <pre>
--   -nocomment
--   </pre>
nocomment :: Scaladoc -> Bool

-- | <pre>
--   -stylesheetfile
--   </pre>
stylesheetfile :: Scaladoc -> Maybe String

-- | <pre>
--   -top
--   </pre>
top :: Scaladoc -> Maybe String

-- | <pre>
--   -windowtitle
--   </pre>
windowtitle :: Scaladoc -> Maybe String
etc :: Scaladoc -> Maybe String

-- | A <tt>Scaladoc</tt> with nothing set.
scaladoc :: Scaladoc

-- | Construct a <tt>Scaladoc</tt>.
scaladoc' :: Maybe Debug -> Bool -> Bool -> Bool -> Bool -> [FilePath] -> [FilePath] -> [FilePath] -> [FilePath] -> Maybe FilePath -> Maybe String -> Maybe Target -> Bool -> Bool -> Bool -> Bool -> Bool -> Bool -> Maybe FilePath -> Maybe Access -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Bool -> Bool -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Scaladoc
instance Command Scaladoc
instance OutputReferenceGet Scaladoc
instance OutputReferenceSet Scaladoc
instance OutputDirectory Scaladoc
instance Extensions Scaladoc
instance CompilePaths Scaladoc
instance Show Scaladoc

module System.Build
