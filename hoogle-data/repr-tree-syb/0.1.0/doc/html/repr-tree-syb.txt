-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Tree representation and pretty-printing of data structures based on SYB
--   
--   This library provides a convenient way to inspect and debug arbitrary
--   data structures.
@package repr-tree-syb
@version 0.1.0

module ReprTree

-- | Get a representation tree of a generic data structure using SYB. Can
--   be used to implement a custom converter to textual representation.
reprTree :: Data a => a -> Tree String

-- | A data representation in form of a formatted multiline string, such as
--   the following:
--   
--   <pre>
--   :
--   - A
--   | - :
--   | | - a
--   | | - b
--   | | - c
--   | - 9
--   - C
--   | - 3
--   - B
--   - D
--     - :
--       - :
--       | - asdf
--       | - 123
--       | - ldskfjkl
--       - :
--         - f
--   </pre>
--   
--   Which is a result of running the following code:
--   
--   <pre>
--   import Data.Generics (Data, Typeable)
--   
--   data SomeType = 
--     A [String] Int | 
--     B | 
--     C Int | 
--     D [[String]]
--     deriving (Typeable, Data)
--   
--   xxx = A ["a", "b", "c"] 9 
--       : C 3 
--       : B 
--       : D [["asdf", "123", "ldskfjkl"], ["f"]]
--       : []
--   
--   main = putStrLn $ reprTreeString xxx
--   </pre>
reprTreeString :: Data a => a -> String
