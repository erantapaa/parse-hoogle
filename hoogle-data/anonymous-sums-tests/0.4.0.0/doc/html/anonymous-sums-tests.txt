-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | QuickCheck functions to accompany the anonymous-sums package
--   
--   Contains generators, coarbitrary functions, and shrinkers to accompany
--   the anonymous-sums package.
@package anonymous-sums-tests
@version 0.4.0.0

module Data.Sums.Coarbitrary
s0 :: S0 -> Gen b -> Gen b
s1 :: (a -> Gen r -> Gen r) -> S1 a -> Gen r -> Gen r
s2 :: (a -> Gen r -> Gen r) -> (b -> Gen r -> Gen r) -> S2 a b -> Gen r -> Gen r
s3 :: (a -> Gen r -> Gen r) -> (b -> Gen r -> Gen r) -> (c -> Gen r -> Gen r) -> S3 a b c -> Gen r -> Gen r
s4 :: (a -> Gen r -> Gen r) -> (b -> Gen r -> Gen r) -> (c -> Gen r -> Gen r) -> (d -> Gen r -> Gen r) -> S4 a b c d -> Gen r -> Gen r
s5 :: (a -> Gen r -> Gen r) -> (b -> Gen r -> Gen r) -> (c -> Gen r -> Gen r) -> (d -> Gen r -> Gen r) -> (e -> Gen r -> Gen r) -> S5 a b c d e -> Gen r -> Gen r
s6 :: (a -> Gen r -> Gen r) -> (b -> Gen r -> Gen r) -> (c -> Gen r -> Gen r) -> (d -> Gen r -> Gen r) -> (e -> Gen r -> Gen r) -> (f -> Gen r -> Gen r) -> S6 a b c d e f -> Gen r -> Gen r
s7 :: (a -> Gen r -> Gen r) -> (b -> Gen r -> Gen r) -> (c -> Gen r -> Gen r) -> (d -> Gen r -> Gen r) -> (e -> Gen r -> Gen r) -> (f -> Gen r -> Gen r) -> (g -> Gen r -> Gen r) -> S7 a b c d e f g -> Gen r -> Gen r
s8 :: (a -> Gen r -> Gen r) -> (b -> Gen r -> Gen r) -> (c -> Gen r -> Gen r) -> (d -> Gen r -> Gen r) -> (e -> Gen r -> Gen r) -> (f -> Gen r -> Gen r) -> (g -> Gen r -> Gen r) -> (h -> Gen r -> Gen r) -> S8 a b c d e f g h -> Gen r -> Gen r
s9 :: (a -> Gen r -> Gen r) -> (b -> Gen r -> Gen r) -> (c -> Gen r -> Gen r) -> (d -> Gen r -> Gen r) -> (e -> Gen r -> Gen r) -> (f -> Gen r -> Gen r) -> (g -> Gen r -> Gen r) -> (h -> Gen r -> Gen r) -> (i -> Gen r -> Gen r) -> S9 a b c d e f g h i -> Gen r -> Gen r
s10 :: (a -> Gen r -> Gen r) -> (b -> Gen r -> Gen r) -> (c -> Gen r -> Gen r) -> (d -> Gen r -> Gen r) -> (e -> Gen r -> Gen r) -> (f -> Gen r -> Gen r) -> (g -> Gen r -> Gen r) -> (h -> Gen r -> Gen r) -> (i -> Gen r -> Gen r) -> (j -> Gen r -> Gen r) -> S10 a b c d e f g h i j -> Gen r -> Gen r
s11 :: (a -> Gen r -> Gen r) -> (b -> Gen r -> Gen r) -> (c -> Gen r -> Gen r) -> (d -> Gen r -> Gen r) -> (e -> Gen r -> Gen r) -> (f -> Gen r -> Gen r) -> (g -> Gen r -> Gen r) -> (h -> Gen r -> Gen r) -> (i -> Gen r -> Gen r) -> (j -> Gen r -> Gen r) -> (k -> Gen r -> Gen r) -> S11 a b c d e f g h i j k -> Gen r -> Gen r
s12 :: (a -> Gen r -> Gen r) -> (b -> Gen r -> Gen r) -> (c -> Gen r -> Gen r) -> (d -> Gen r -> Gen r) -> (e -> Gen r -> Gen r) -> (f -> Gen r -> Gen r) -> (g -> Gen r -> Gen r) -> (h -> Gen r -> Gen r) -> (i -> Gen r -> Gen r) -> (j -> Gen r -> Gen r) -> (k -> Gen r -> Gen r) -> (l -> Gen r -> Gen r) -> S12 a b c d e f g h i j k l -> Gen r -> Gen r
s13 :: (a -> Gen r -> Gen r) -> (b -> Gen r -> Gen r) -> (c -> Gen r -> Gen r) -> (d -> Gen r -> Gen r) -> (e -> Gen r -> Gen r) -> (f -> Gen r -> Gen r) -> (g -> Gen r -> Gen r) -> (h -> Gen r -> Gen r) -> (i -> Gen r -> Gen r) -> (j -> Gen r -> Gen r) -> (k -> Gen r -> Gen r) -> (l -> Gen r -> Gen r) -> (m -> Gen r -> Gen r) -> S13 a b c d e f g h i j k l m -> Gen r -> Gen r
s14 :: (a -> Gen r -> Gen r) -> (b -> Gen r -> Gen r) -> (c -> Gen r -> Gen r) -> (d -> Gen r -> Gen r) -> (e -> Gen r -> Gen r) -> (f -> Gen r -> Gen r) -> (g -> Gen r -> Gen r) -> (h -> Gen r -> Gen r) -> (i -> Gen r -> Gen r) -> (j -> Gen r -> Gen r) -> (k -> Gen r -> Gen r) -> (l -> Gen r -> Gen r) -> (m -> Gen r -> Gen r) -> (n -> Gen r -> Gen r) -> S14 a b c d e f g h i j k l m n -> Gen r -> Gen r
s15 :: (a -> Gen r -> Gen r) -> (b -> Gen r -> Gen r) -> (c -> Gen r -> Gen r) -> (d -> Gen r -> Gen r) -> (e -> Gen r -> Gen r) -> (f -> Gen r -> Gen r) -> (g -> Gen r -> Gen r) -> (h -> Gen r -> Gen r) -> (i -> Gen r -> Gen r) -> (j -> Gen r -> Gen r) -> (k -> Gen r -> Gen r) -> (l -> Gen r -> Gen r) -> (m -> Gen r -> Gen r) -> (n -> Gen r -> Gen r) -> (o -> Gen r -> Gen r) -> S15 a b c d e f g h i j k l m n o -> Gen r -> Gen r

module Data.Sums.Shrinkers
s0 :: S0 -> [S0]
s1 :: (a -> [a]) -> S1 a -> [S1 a]
s2 :: (a -> [a]) -> (b -> [b]) -> S2 a b -> [S2 a b]
s3 :: (a -> [a]) -> (b -> [b]) -> (c -> [c]) -> S3 a b c -> [S3 a b c]
s4 :: (a -> [a]) -> (b -> [b]) -> (c -> [c]) -> (d -> [d]) -> S4 a b c d -> [S4 a b c d]
s5 :: (a -> [a]) -> (b -> [b]) -> (c -> [c]) -> (d -> [d]) -> (e -> [e]) -> S5 a b c d e -> [S5 a b c d e]
s6 :: (a -> [a]) -> (b -> [b]) -> (c -> [c]) -> (d -> [d]) -> (e -> [e]) -> (f -> [f]) -> S6 a b c d e f -> [S6 a b c d e f]
s7 :: (a -> [a]) -> (b -> [b]) -> (c -> [c]) -> (d -> [d]) -> (e -> [e]) -> (f -> [f]) -> (g -> [g]) -> S7 a b c d e f g -> [S7 a b c d e f g]
s8 :: (a -> [a]) -> (b -> [b]) -> (c -> [c]) -> (d -> [d]) -> (e -> [e]) -> (f -> [f]) -> (g -> [g]) -> (h -> [h]) -> S8 a b c d e f g h -> [S8 a b c d e f g h]
s9 :: (a -> [a]) -> (b -> [b]) -> (c -> [c]) -> (d -> [d]) -> (e -> [e]) -> (f -> [f]) -> (g -> [g]) -> (h -> [h]) -> (i -> [i]) -> S9 a b c d e f g h i -> [S9 a b c d e f g h i]
s10 :: (a -> [a]) -> (b -> [b]) -> (c -> [c]) -> (d -> [d]) -> (e -> [e]) -> (f -> [f]) -> (g -> [g]) -> (h -> [h]) -> (i -> [i]) -> (j -> [j]) -> S10 a b c d e f g h i j -> [S10 a b c d e f g h i j]
s11 :: (a -> [a]) -> (b -> [b]) -> (c -> [c]) -> (d -> [d]) -> (e -> [e]) -> (f -> [f]) -> (g -> [g]) -> (h -> [h]) -> (i -> [i]) -> (j -> [j]) -> (k -> [k]) -> S11 a b c d e f g h i j k -> [S11 a b c d e f g h i j k]
s12 :: (a -> [a]) -> (b -> [b]) -> (c -> [c]) -> (d -> [d]) -> (e -> [e]) -> (f -> [f]) -> (g -> [g]) -> (h -> [h]) -> (i -> [i]) -> (j -> [j]) -> (k -> [k]) -> (l -> [l]) -> S12 a b c d e f g h i j k l -> [S12 a b c d e f g h i j k l]
s13 :: (a -> [a]) -> (b -> [b]) -> (c -> [c]) -> (d -> [d]) -> (e -> [e]) -> (f -> [f]) -> (g -> [g]) -> (h -> [h]) -> (i -> [i]) -> (j -> [j]) -> (k -> [k]) -> (l -> [l]) -> (m -> [m]) -> S13 a b c d e f g h i j k l m -> [S13 a b c d e f g h i j k l m]
s14 :: (a -> [a]) -> (b -> [b]) -> (c -> [c]) -> (d -> [d]) -> (e -> [e]) -> (f -> [f]) -> (g -> [g]) -> (h -> [h]) -> (i -> [i]) -> (j -> [j]) -> (k -> [k]) -> (l -> [l]) -> (m -> [m]) -> (n -> [n]) -> S14 a b c d e f g h i j k l m n -> [S14 a b c d e f g h i j k l m n]
s15 :: (a -> [a]) -> (b -> [b]) -> (c -> [c]) -> (d -> [d]) -> (e -> [e]) -> (f -> [f]) -> (g -> [g]) -> (h -> [h]) -> (i -> [i]) -> (j -> [j]) -> (k -> [k]) -> (l -> [l]) -> (m -> [m]) -> (n -> [n]) -> (o -> [o]) -> S15 a b c d e f g h i j k l m n o -> [S15 a b c d e f g h i j k l m n o]


-- | Each of the function in this module takes one pair for each type in
--   the sum. The first element of the pair is an <a>Int</a> indicating the
--   frequency with which constructors of this type are generated; this
--   <a>Int</a> should be non-negative. The second element of the pair is
--   the generator used for elements of this type. For example, to generate
--   <a>Int</a>s about a fourth of the time and <a>Char</a>s about three
--   fourths of the time:
--   
--   <pre>
--   genS2 :: Gen (S2 Int Char)
--   genS2 = s2 (1, arbitrary) (3, arbitrary)
--   </pre>
module Data.Sums.Generators
s2 :: (Int, Gen a) -> (Int, Gen b) -> Gen (S2 a b)
s3 :: (Int, Gen a) -> (Int, Gen b) -> (Int, Gen c) -> Gen (S3 a b c)
s4 :: (Int, Gen a) -> (Int, Gen b) -> (Int, Gen c) -> (Int, Gen d) -> Gen (S4 a b c d)
s5 :: (Int, Gen a) -> (Int, Gen b) -> (Int, Gen c) -> (Int, Gen d) -> (Int, Gen e) -> Gen (S5 a b c d e)
s6 :: (Int, Gen a) -> (Int, Gen b) -> (Int, Gen c) -> (Int, Gen d) -> (Int, Gen e) -> (Int, Gen f) -> Gen (S6 a b c d e f)
s7 :: (Int, Gen a) -> (Int, Gen b) -> (Int, Gen c) -> (Int, Gen d) -> (Int, Gen e) -> (Int, Gen f) -> (Int, Gen g) -> Gen (S7 a b c d e f g)
s8 :: (Int, Gen a) -> (Int, Gen b) -> (Int, Gen c) -> (Int, Gen d) -> (Int, Gen e) -> (Int, Gen f) -> (Int, Gen g) -> (Int, Gen h) -> Gen (S8 a b c d e f g h)
s9 :: (Int, Gen a) -> (Int, Gen b) -> (Int, Gen c) -> (Int, Gen d) -> (Int, Gen e) -> (Int, Gen f) -> (Int, Gen g) -> (Int, Gen h) -> (Int, Gen i) -> Gen (S9 a b c d e f g h i)
s10 :: (Int, Gen a) -> (Int, Gen b) -> (Int, Gen c) -> (Int, Gen d) -> (Int, Gen e) -> (Int, Gen f) -> (Int, Gen g) -> (Int, Gen h) -> (Int, Gen i) -> (Int, Gen j) -> Gen (S10 a b c d e f g h i j)
s11 :: (Int, Gen a) -> (Int, Gen b) -> (Int, Gen c) -> (Int, Gen d) -> (Int, Gen e) -> (Int, Gen f) -> (Int, Gen g) -> (Int, Gen h) -> (Int, Gen i) -> (Int, Gen j) -> (Int, Gen k) -> Gen (S11 a b c d e f g h i j k)
s12 :: (Int, Gen a) -> (Int, Gen b) -> (Int, Gen c) -> (Int, Gen d) -> (Int, Gen e) -> (Int, Gen f) -> (Int, Gen g) -> (Int, Gen h) -> (Int, Gen i) -> (Int, Gen j) -> (Int, Gen k) -> (Int, Gen l) -> Gen (S12 a b c d e f g h i j k l)
s13 :: (Int, Gen a) -> (Int, Gen b) -> (Int, Gen c) -> (Int, Gen d) -> (Int, Gen e) -> (Int, Gen f) -> (Int, Gen g) -> (Int, Gen h) -> (Int, Gen i) -> (Int, Gen j) -> (Int, Gen k) -> (Int, Gen l) -> (Int, Gen m) -> Gen (S13 a b c d e f g h i j k l m)
s14 :: (Int, Gen a) -> (Int, Gen b) -> (Int, Gen c) -> (Int, Gen d) -> (Int, Gen e) -> (Int, Gen f) -> (Int, Gen g) -> (Int, Gen h) -> (Int, Gen i) -> (Int, Gen j) -> (Int, Gen k) -> (Int, Gen l) -> (Int, Gen m) -> (Int, Gen n) -> Gen (S14 a b c d e f g h i j k l m n)
s15 :: (Int, Gen a) -> (Int, Gen b) -> (Int, Gen c) -> (Int, Gen d) -> (Int, Gen e) -> (Int, Gen f) -> (Int, Gen g) -> (Int, Gen h) -> (Int, Gen i) -> (Int, Gen j) -> (Int, Gen k) -> (Int, Gen l) -> (Int, Gen m) -> (Int, Gen n) -> (Int, Gen o) -> Gen (S15 a b c d e f g h i j k l m n o)
