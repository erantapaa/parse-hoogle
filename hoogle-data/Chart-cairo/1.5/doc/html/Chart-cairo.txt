-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Cairo backend for Charts.
--   
@package Chart-cairo
@version 1.5


-- | The backend to render charts with cairo.
module Graphics.Rendering.Chart.Backend.Cairo
data FileFormat
PNG :: FileFormat
SVG :: FileFormat
PS :: FileFormat
PDF :: FileFormat
data FileOptions
FileOptions :: (Int, Int) -> FileFormat -> FileOptions
_fo_size :: FileOptions -> (Int, Int)
_fo_format :: FileOptions -> FileFormat

-- | Run this backends renderer.
runBackend :: CEnv -> ChartBackend a -> Render a

-- | Generate an image file for the given renderable, at the specified
--   path. Size and format are set through the <a>FileOptions</a>
--   parameter.
renderableToFile :: FileOptions -> FilePath -> Renderable a -> IO (PickFn a)

-- | Generate an image file from from the state content of an EC
--   computation. The state may have any type that is an instance of
--   <a>ToRenderable</a>
toFile :: (Default r, ToRenderable r) => FileOptions -> FilePath -> EC r () -> IO ()

-- | Produce a environment with no transformation and clipping. It will use
--   the default styles.
defaultEnv :: AlignmentFns -> CEnv
fo_size :: Lens' FileOptions (Int, Int)
fo_format :: Lens' FileOptions FileFormat

-- | Generate an image file for the given drawing instructions, at the
--   specified path. Size and format are set through the <a>FileOptions</a>
--   parameter.
cBackendToFile :: FileOptions -> ChartBackend a -> FilePath -> IO a
instance Default FileOptions
