-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A type-checker for the » -modulo calculus.
--   
--   Dedukti is a proof checker for the λΠ-modulo calculus, a dependently
--   typed λ-calculus with the addition of typed rewrite rules, capable of
--   expressing proofs in Deduction Modulo [1].
--   
--   <ul>
--   <li><i>1</i> G. Dowek, Th. Hardin, C. Kirchner, Theorem proving
--   modulo, <i>Journal of Automated Reasoning</i>, 31, 2003, pp.
--   33-72.</li>
--   </ul>
@package dedukti
@version 1.1.4


-- | All generated Haskell files import this module. The data type
--   declarations are given here, along with the conversion relation and
--   type inference function.
module Dedukti.Runtime
data Code
Var :: !Int -> Code
Con :: !ByteString -> Code
Lam :: !Code -> Code -> Code
Pi :: Code -> !Code -> Code -> Code
App :: Code -> Code -> Code
Type :: Code
Kind :: Code
data Term
TLam :: !Term -> !Term -> Term -> Term
TPi :: !Term -> !Term -> Term -> Term
TApp :: !Term -> !Term -> Term
TType :: Term
Box :: Code -> Code -> Term
UBox :: Term -> Code -> Term
ap :: Code -> Code -> Code
convertible :: Int -> Code -> Code -> Bool
bbox :: Term -> Code -> Code -> Term

-- | A box in which we didn't put anything.
sbox :: Term -> Code -> Code -> Term
obj :: Term -> Code
start :: IO UTCTime
stop :: UTCTime -> IO ()
checkDeclaration :: String -> Term -> IO ()
checkRule :: Term -> Term -> Term
instance Typeable SortError
instance Typeable TypeError
instance Typeable RuleError
instance Show SortError
instance Show TypeError
instance Show RuleError
instance Eq Code
instance Show Code
instance Show Term
instance Pretty Code
instance Eq (Code -> Code)
instance Exception RuleError
instance Exception TypeError
instance Exception SortError
