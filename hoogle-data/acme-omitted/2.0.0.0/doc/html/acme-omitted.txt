-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A name for omitted definitions
--   
--   acme-omitted provides a way of indicating that a definition has been
--   "omitted" (though not inherently undefinable), an alternative to
--   "Prelude.undefined", and the means to observe the difference.
@package acme-omitted
@version 2.0.0.0


-- | This module provides an alternative implementation of
--   "Prelude.undefined", intended exclusively for denoting truly
--   undefinable values.
module Acme.Undefined

-- | Denotes all values that are, fundamentally, undefinable.
--   
--   The contract of <a>undefined</a> is that it will never be used for
--   merely omitted definitions.
undefined :: a

-- | Answer the age-old question "was this definition omitted?"
--   
--   <pre>
--   isOmitted 0           = return False
--   isOmitted <a>undefined</a> = return False
--   isOmitted <tt>omitted</tt>   = return True
--   </pre>
isOmitted :: a -> IO Bool

-- | ... or is it really <a>undefined</a>?
--   
--   <pre>
--   isUndefined 0           = return False
--   isUndefined <a>undefined</a> = return True
--   isUndefined <tt>omitted</tt>   = return False
--   </pre>
isUndefined :: a -> IO Bool

-- | A version of <a>isUndefined</a> for "Prelude.undefined".
isPreludeUndefined :: a -> IO Bool


-- | This module provides the means to indicate that a definition has been
--   omitted (for whatever reason), as opposed to being inherently
--   undefinable.
module Acme.Omitted

-- | Indicate that a definition has been omitted.
omitted :: a

-- | Alternative syntax for <a>omitted</a> that has been carefully
--   optimised for programmer convenience and visual presentation (e.g.,
--   for use in printed documents).
--   
--   Example usage:
--   
--   <pre>
--   definition = (...)
--   </pre>
(...) :: a
