-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A template haskell deriver to create Control.Newtype instances.
--   
--   Provides a template haskell based mechanism for deriving instances of
--   djahandarie's Control.Newtype class.
@package newtype-th
@version 0.3.3


-- | This module provides a template Haskell based mechanism for deriving
--   instances of the <tt>Newtype</tt> class, defined in <tt>
--   Control.Newtype </tt> in the newtype package. Example usage:
--   
--   <pre>
--   newtype CartesianList a = CartesianList [a]
--   $(mkNewTypes [''CartesianList])
--   
--   instance Monoid (CartesianList a) where
--     mempty = pack [[]]
--     a `mappend` b = pack [x ++ y | x &lt;- unpack a, y &lt;- unpack b]
--   </pre>
--   
--   <pre>
--   *Main&gt; print $ underF CartesianList (\xs -&gt; [fold xs]) ([[[4],[5],[6]], [[1],[2]], [[0]]])
--   [[[4,1,0],[4,2,0],[5,1,0],[5,2,0],[6,1,0],[6,2,0]]]
--   </pre>
module Control.Newtype.TH

-- | Derive a single instance of <tt>Newtype</tt>.
mkNewtype :: Name -> Q [Dec]

-- | Derive instances of <tt>Newtype</tt>, specified as a list of
--   references to newtypes.
mkNewtypes :: [Name] -> Q [Dec]

-- | Compatibility with an old, ill-capitalized name.
mkNewType :: Name -> Q [Dec]

-- | Compatibility with an old, ill-capitalized name.
mkNewTypes :: [Name] -> Q [Dec]
