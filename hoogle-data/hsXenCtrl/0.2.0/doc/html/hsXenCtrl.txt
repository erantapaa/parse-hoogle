-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | FFI bindings to the Xen Control library.
--   
--   FFI bindings to xenctrl.h and perhaps more. The System.Xen.CBindings
--   should provide direct access to the C API while System.Xen will
--   eventually provide a higher level abstraction. This library binding
--   allows pure haskell programs to use XenCtrl functions; these can be
--   Haskell versions of xend, xm, and virt-manager but more interesting
--   projects are possible. Think about a happs app controlling domains and
--   complex policy controls on resource (CPU, memory, PCI) uses.
@package hsXenCtrl
@version 0.2.0

module System.Xen.CBindings
xc_interface_open :: IO CInt
xc_interface_close :: XCHandle -> IO CInt
xc_find_device_number :: CString -> IO CInt
xc_domain_create :: XCHandle -> Word32 -> XenDomainHandleT -> Word32 -> Ptr Word32 -> IO CInt
xc_domain_dumpcore :: XCHandle -> DomId -> CString -> IO CInt
xc_domain_dumpcore_via_callback :: XCHandle -> DomId -> Ptr Word8 -> FunPtr Dumpcore_rtn_t -> IO CInt
xc_domain_max_vcpus :: XCHandle -> DomId -> CUInt -> IO CInt
xc_domain_pause :: XCHandle -> DomId -> IO CInt
xc_domain_unpause :: XCHandle -> DomId -> IO CInt
xc_domain_destroy :: XCHandle -> DomId -> IO CInt
xc_domain_resume :: XCHandle -> DomId -> CInt -> IO CInt
xc_domain_shutdown :: XCHandle -> DomId -> CInt -> IO CInt
xc_vcpu_setaffinity :: XCHandle -> DomId -> CInt -> Word64 -> IO CInt
xc_vcpu_getaffinity :: XCHandle -> DomId -> CInt -> Ptr Word64 -> IO CInt
xc_domain_getinfo :: XCHandle -> DomId -> CUInt -> Ptr XCDomInfo -> IO CInt
xc_domain_getinfolist :: XCHandle -> DomId -> CUInt -> Ptr XCDomInfo -> CInt
xc_domain_hvm_getcontext :: XCHandle -> DomId -> Ptr Word8 -> Word32 -> IO CInt
xc_domain_hvm_setcontext :: XCHandle -> DomId -> Ptr Word8 -> Word32 -> IO CInt
xc_domain_setcpuweight :: XCHandle -> DomId -> CFloat -> IO CInt
xc_domain_get_cpu_usage :: XCHandle -> DomId -> CInt -> IO CLLong
xc_domain_sethandle :: XCHandle -> DomId -> XenDomainHandleT -> IO CInt
xc_sedf_domain_set :: XCHandle -> DomId -> Word64 -> Word64 -> Word64 -> Word16 -> Word16 -> IO CInt
xc_sedf_domain_get :: XCHandle -> DomId -> Ptr Word64 -> Ptr Word64 -> Ptr Word64 -> Ptr Word16 -> Ptr Word16 -> IO CInt
xc_domain_send_trigger :: XCHandle -> DomId -> Word32 -> Word32 -> IO CInt
xc_vcpu_getinfo :: XCHandle -> DomId -> Word32 -> Ptr VCPUInfo -> IO CInt
data VCPUInfo
VCPUInfo :: Word32 -> Word8 -> Word8 -> Word8 -> Word64 -> Word32 -> VCPUInfo
viVCPU :: VCPUInfo -> Word32
viOnline :: VCPUInfo -> Word8
viBlocked :: VCPUInfo -> Word8
viRunning :: VCPUInfo -> Word8
viCPUTime :: VCPUInfo -> Word64
viCPU :: VCPUInfo -> Word32
xc_evtchn_alloc_unbound :: XCHandle -> DomId -> DomId -> IO EventChanPortOrError
xc_evtchn_reset :: XCHandle -> DomId -> IO CInt
xc_evtchn_open :: IO CInt
xc_evtchn_close :: XCEHandle -> IO CInt
xc_evtchn_fd :: CInt -> IO CInt
xc_evtchn_notify :: XCEHandle -> EventChannelPort -> IO CInt
xc_evtchn_bind_unbound_port :: XCEHandle -> DomId -> IO EventChanPortOrError
xc_evtchn_bind_interdomain :: XCEHandle -> DomId -> EventChannelPort -> IO EventChanPortOrError
xc_evtchn_bind_virq :: XCEHandle -> CUInt -> IO EventChanPortOrError
xc_evtchn_unbind :: XCEHandle -> EventChannelPort -> IO CInt
xc_evtchn_pending :: XCEHandle -> IO EventChanPortOrError
xc_evtchn_unmask :: XCEHandle -> EventChannelPort -> IO CInt
xc_physdev_pci_access_modify :: XCHandle -> DomId -> Bus -> Dev -> Function -> Enable -> IO CInt
xc_readconsolering :: XCHandle -> Ptr CString -> Ptr CUInt -> CInt -> IO CInt
xc_send_debug_keys :: XCHandle -> CString -> IO CInt
xc_physinfo :: XCHandle -> Ptr XCPhysInfo -> IO CInt
xc_sched_id :: XCHandle -> Ptr CInt -> IO CInt
xc_getcpuinfo :: XCHandle -> CInt -> Ptr XCCPUInfo -> Ptr CInt -> IO CInt
xc_domain_setmaxmem :: XCHandle -> DomId -> CUInt -> IO CInt
xc_domain_set_memmap_limit :: XCHandle -> DomId -> CULong -> IO CInt
xc_domain_set_time_offset :: XCHandle -> DomId -> Int32 -> IO CInt
xc_domain_memory_increase_reservation :: XCHandle -> DomId -> CULong -> CUInt -> CUInt -> Ptr XenPFN -> IO CInt
xc_domain_memory_decrease_reservation :: XCHandle -> DomId -> CULong -> CUInt -> Ptr XenPFN -> IO CInt
xc_domain_memory_populate_physmap :: XCHandle -> DomId -> CULong -> CUInt -> CUInt -> Ptr XenPFN -> IO CInt
xc_domain_ioport_permission :: XCHandle -> DomId -> Word32 -> Word32 -> Word32 -> IO CInt
xc_domain_irq_permission :: XCHandle -> DomId -> Word8 -> Word8 -> IO CInt
xc_make_page_below_4G :: XCHandle -> DomId -> CULong -> IO CULong

-- | Must mlock() the XCperfc data structures after poking and before
--   calling this function.
xc_perfc_control :: XCHandle -> PerfcOp -> Ptr XCperfcDesc -> Ptr XCperfcVal -> Ptr CInt -> Ptr CInt -> IO CInt
xc_map_foreign_range :: XCHandle -> DomId -> CInt -> MemoryProtectionFlags -> CULong -> IO ()
xc_map_foreign_batch :: XCHandle -> DomId -> MemoryProtectionFlags -> Ptr XenPFN -> CInt -> IO ()
xc_translate_foreign_address :: XCHandle -> DomId -> CInt -> CULLong -> IO CULong
xc_get_pfn_list :: XCHandle -> DomId -> Ptr Word64 -> CULong -> IO CInt
xc_copy_to_domain_page :: XCHandle -> DomId -> CULong -> CString -> IO CInt
xc_clear_domain_page :: XCHandle -> DomId -> CULong -> IO CInt
xc_mmuext_op :: XCHandle -> Ptr MMUExtOp -> CUInt -> DomId -> IO CInt
xc_memory_op :: XCHandle -> CInt -> Ptr () -> IO CInt
xc_get_pfn_type_batch :: XCHandle -> DomId -> CInt -> Ptr Word32 -> IO CInt
xc_get_tot_pages :: XCHandle -> DomId -> IO CLong
xc_tbuf_enable :: XCHandle -> CULong -> Ptr CULong -> Ptr CULong -> IO CInt
xc_tbuf_disable :: XCHandle -> IO CInt
xc_tbuf_get_size :: XCHandle -> Ptr CULong -> IO CInt
xc_tbuf_set_cpu_mask :: XCHandle -> Word32 -> IO CInt
xc_tbuf_set_evt_mask :: XCHandle -> Word32 -> IO CInt
xc_domctl :: XCHandle -> Ptr XenDomCtl -> IO CInt
xc_sysctl :: XCHandle -> Ptr XenSysCtl -> IO CInt
xc_version :: XCHandle -> XenVersion -> Ptr () -> IO CInt
xc_acm_op :: XCHandle -> CInt -> Ptr () -> CULong -> IO CInt
newtype GTHandle
GTHandle :: CInt -> GTHandle
xc_gnttab_open :: IO CInt
xc_gnttab_close :: GTHandle -> IO CInt
xc_gnttab_map_grant_ref :: GTHandle -> DomId -> Word32 -> CInt -> IO (Ptr a)
xc_gnttab_map_grant_refs :: GTHandle -> Word32 -> Ptr Word32 -> Ptr Word32 -> CInt -> IO (Ptr a)
xc_gnttab_munmap :: GTHandle -> Ptr a -> Word32 -> IO CInt
type DomId_t = Word16
xc_hvm_set_pci_intx_level :: XCHandle -> DomId_t -> Word8 -> Word8 -> Word8 -> Word8 -> CUInt -> IO CInt
xc_hvm_set_isa_irq_level :: XCHandle -> DomId_t -> Word8 -> CUInt -> IO CInt
xc_hvm_set_pci_link_route :: XCHandle -> DomId_t -> Word8 -> Word8 -> IO CInt
data XCErrorCode
XCErrorNone :: XCErrorCode
XCInternalError :: XCErrorCode
XCInvalidKernel :: XCErrorCode
XCInvalidParam :: XCErrorCode
XCOutOfMemory :: XCErrorCode
xcMaxErrorMsgLen :: Integer
data XCError
XCError :: XCErrorCode -> ByteString -> XCError
xceCode :: XCError -> XCErrorCode
xceMsg :: XCError -> ByteString
xc_get_last_error :: IO (Ptr XCError)
xc_clear_last_error :: IO ()
type XCErrorHandler = FunPtr (XCError -> IO ())
xc_default_error_handler :: Ptr XCErrorHandler -> IO ()
xc_error_code_to_desc :: XCErrorCode -> IO CString
xc_set_error_handler :: XCErrorHandler -> IO XCErrorHandler
xc_set_hvm_param :: XCHandle -> DomId_t -> CInt -> CULong -> IO CInt
xc_get_hvm_param :: XCHandle -> DomId_t -> CInt -> Ptr CULong -> IO CInt
xc_CORE_MAGIC :: CInt
xc_CORE_MAGIC_HVM :: CInt

-- | DomId identifies the Xen VM
newtype DomId
DomId :: Word32 -> DomId

-- | Xen Control Handle identifies the IO channel through which must
--   functions will pass their messages.
newtype XCHandle
XCHdl :: CInt -> XCHandle

-- | SHUTDOWN constants matching those found in <a>xen/sched.h</a>
data XCShutdown
SHUTDOWN_poweroff :: XCShutdown
SHUTDOWN_reboot :: XCShutdown
SHUTDOWN_suspend :: XCShutdown
SHUTDOWN_crash :: XCShutdown
data XCDomInfo
type EventChanPortOrError = CInt
type Dumpcore_rtn_t = Ptr Word8 -> CString -> CUInt -> IO CInt
newtype XCEHandle
XCEHandle :: CInt -> XCEHandle
newtype EventChannelPort
ECPort :: Word32 -> EventChannelPort
data XCPhysInfo
XCPhysInfo :: Word32 -> Word32 -> Word32 -> Word32 -> Word32 -> Word64 -> Word64 -> Word64 -> [Word32] -> XCPhysInfo
piThreadsPerCore :: XCPhysInfo -> Word32
piCoresPerSocket :: XCPhysInfo -> Word32

-- | Sockets per node (Xen <a> 3, I think) or the number of CPUs (Xen </a>=
--   3, I think)
piNrCPUs :: XCPhysInfo -> Word32

-- | Number of nodes (Xen <a>= 3.4) or the max node ID (Xen </a>= 4.0)
piMaxNodeId :: XCPhysInfo -> Word32
piCPUkhz :: XCPhysInfo -> Word32
piTotalPages :: XCPhysInfo -> Word64
piFreePages :: XCPhysInfo -> Word64
piScrubPages :: XCPhysInfo -> Word64
piHWCap :: XCPhysInfo -> [Word32]
data XCCPUInfo
XCCPUInfo :: Word64 -> XCCPUInfo
ciIdleTime :: XCCPUInfo -> Word64
data XCperfcDesc
XCperfcDesc :: ByteString -> Word32 -> XCperfcDesc
type XCperfcVal = Word32
type XenPFN = CULong
type PerfcOp = Word32
perfcOpReset :: Integer
perfcOpQuery :: Integer
type MemoryProtectionFlags = CInt

-- | The user of MMUExtOp must perform their own marshaling operations,
--   note the lack of a Storable instance.
data MMUExtOp
MMUExtOp :: CUInt -> Either XenPFN CULong -> Either CUInt (Ptr ()) -> MMUExtOp
opCmd :: MMUExtOp -> CUInt
opArg1 :: MMUExtOp -> Either XenPFN CULong
opArg2 :: MMUExtOp -> Either CUInt (Ptr ())
type XenDomainHandleT = Ptr Word8
data XenVersion
xENVER_extraversion :: XenVersion
xENVER_compile_info :: XenVersion
xENVER_capabilities :: XenVersion
xENVER_changeset :: XenVersion
xENVER_platform_parameters :: XenVersion
xENVER_get_features :: XenVersion
xENVER_pagesize :: XenVersion
xENVER_guest_handle :: XenVersion
xENVER_version :: XenVersion
instance Eq XenVersion
instance Ord XenVersion
instance Show XenVersion
instance Enum XenVersion
instance Eq XC_Core_Header
instance Ord XC_Core_Header
instance Show XC_Core_Header
instance Eq XCError
instance Ord XCError
instance Show XCError
instance Eq XCErrorCode
instance Ord XCErrorCode
instance Show XCErrorCode
instance Enum XCErrorCode
instance Eq GTHandle
instance Ord GTHandle
instance Show GTHandle
instance Eq MMUExtOp
instance Ord MMUExtOp
instance Show MMUExtOp
instance Eq XCCPUInfo
instance Ord XCCPUInfo
instance Show XCCPUInfo
instance Eq XCPhysInfo
instance Ord XCPhysInfo
instance Show XCPhysInfo
instance Eq EventChannelPort
instance Ord EventChannelPort
instance Show EventChannelPort
instance Eq XCEHandle
instance Ord XCEHandle
instance Show XCEHandle
instance Eq VCPUInfo
instance Ord VCPUInfo
instance Show VCPUInfo
instance Eq DomId
instance Ord DomId
instance Show DomId
instance Eq XCHandle
instance Ord XCHandle
instance Show XCHandle
instance Eq XCShutdown
instance Ord XCShutdown
instance Show XCShutdown
instance Read XCShutdown
instance Enum XCShutdown
instance Eq XCDomInfo
instance Ord XCDomInfo
instance Show XCDomInfo
instance Eq DomainFlag
instance Ord DomainFlag
instance Show DomainFlag
instance Enum DomainFlag
instance Storable XenVersion
instance Storable XC_Core_Header
instance Storable XCErrorCode
instance Storable GTHandle
instance Storable XCperfcDesc
instance Storable XCCPUInfo
instance Storable XCPhysInfo
instance Storable EventChannelPort
instance Storable XCEHandle
instance Storable VCPUInfo
instance Storable DomId
instance Storable XCHandle
instance Storable XCShutdown
instance Storable XCDomInfo
instance Storable [DomainFlag]

module System.Xen

-- | Xen is a monad transformer stack consisting of ErrorT, WritterT and
--   IO.
data Xen a

-- | Given a Xen action and a default value, will run the action returning
--   the result on success or the default value on failure.
runXen :: Xen a -> a -> IO a

-- | Executes the Xen action
runXen_ :: Xen a -> IO ()

-- | Runs the Xen action, returning the result (or Left error) and a trace
--   of messages.
execXen :: Xen a -> IO (Either XenError a, XenMessages)
mkCallback :: Dumpcore_rtn_t -> IO (FunPtr Dumpcore_rtn_t)
xcInterfaceOpen :: Xen XCHandle
xcInterfaceClose :: XCHandle -> Xen ()
xcFindDeviceNumber :: String -> Xen ()
xcDomainCreate :: XCHandle -> Word32 -> XenDomainHandleT -> Word32 -> Ptr Word32 -> Xen ()
xcDomainDumpcore :: XCHandle -> DomId -> String -> Xen ()
xcDomainDumpcoreViaCallback :: XCHandle -> DomId -> DumpcoreCallback -> Xen ()
xcDomainMaxVCPUs :: XCHandle -> DomId -> Int -> Xen ()
xcDomainPause :: XCHandle -> DomId -> Xen ()
xcDomainUnpause :: XCHandle -> DomId -> Xen ()
xcDomainResume :: XCHandle -> DomId -> Bool -> Xen ()
xcDomainShutdown :: XCHandle -> DomId -> XCShutdown -> Xen ()
xcVCPUSetAffinity :: XCHandle -> DomId -> Int -> [Int] -> Xen ()
xcVCPUGetAffinity :: XCHandle -> DomId -> Int -> Xen [Int]
xcDomainGetInfo :: XCHandle -> DomId -> Int -> Xen XCDomInfo
xcDomainGetInfoList :: XCHandle -> DomId -> Int -> Xen XCDomInfo
xcDomainHVMGetContext :: XCHandle -> DomId -> Xen ByteString
xcDomainHVMSetContext :: XCHandle -> DomId -> ByteString -> Xen ()
xcVCPUGetInfo :: XCHandle -> DomId -> Int -> Xen VCPUInfo
xcDomainSetCPUWeight :: XCHandle -> DomId -> Float -> Xen ()
xcDomainGetCPUUsage :: XCHandle -> DomId -> Int -> Xen Integer
xcDomainSetHandle :: XCHandle -> DomId -> ByteString -> Xen ()
xcSedfDomainSet :: XCHandle -> DomId -> Word64 -> Word64 -> Word64 -> Word16 -> Word16 -> Xen ()
xcSedfDomainGet :: XCHandle -> DomId -> Xen (Word64, Word64, Word64, Word16, Word16)
xcDomainSendTrigger :: XCHandle -> DomId -> Int -> Int -> Xen ()
xcEvtChanAllocUnbound :: XCHandle -> DomId -> DomId -> Xen XCEHandle
xcEvtChanReset :: XCHandle -> DomId -> Xen ()
xcEvtChanOpen :: Xen XCEHandle
xcEvtChanClose :: XCEHandle -> Xen ()
xcEvtChanNotify :: XCEHandle -> EventChannelPort -> Xen ()
xcEvtChanBindUnboundPort :: XCEHandle -> DomId -> Xen EventChannelPort
xcEvtChanBindInterdomain :: XCEHandle -> DomId -> EventChannelPort -> Xen EventChannelPort
xcEvtChanBindVIRQ :: XCEHandle -> Int -> Xen EventChannelPort
xcEvtChanUnbind :: XCEHandle -> EventChannelPort -> Xen ()
xcEvtChanPending :: XCEHandle -> Xen EventChannelPort
xcEvtChanUnmask :: XCEHandle -> EventChannelPort -> Xen ()
xcVersion :: XCHandle -> XenVersion -> Xen String
getXenVersion :: Xen String

-- | DomId identifies the Xen VM
newtype DomId
DomId :: Word32 -> DomId
type DumpcoreCallback = ByteString -> IO Int
data XCEHandle
data EventChannelPort
instance Monad Xen
instance MonadIO Xen
instance MonadWriter XenMessages Xen
instance MonadError XenError Xen
instance Eq XenError
instance Ord XenError
instance Show XenError
instance Eq XenMessage
instance Ord XenMessage
instance Show XenMessage
instance Error XenError
instance Show Errno
instance Ord Errno
