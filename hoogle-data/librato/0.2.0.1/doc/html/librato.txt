-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Bindings to the Librato API
--   
@package librato
@version 0.2.0.1

module Librato.Types
data SortOrder
Ascending :: SortOrder
Descending :: SortOrder
data PaginationParameters
PaginationParameters :: Maybe Int -> Maybe Int -> Maybe SortOrder -> PaginationParameters
paginationOffset :: PaginationParameters -> Maybe Int
paginationLength :: PaginationParameters -> Maybe Int
paginationSort :: PaginationParameters -> Maybe SortOrder
data PaginationInfo
PaginationInfo :: Int -> Int -> Int -> Int -> PaginationInfo
paginationInfoLength :: PaginationInfo -> Int
paginationInfoOffset :: PaginationInfo -> Int
paginationInfoTotal :: PaginationInfo -> Int
paginationInfoFound :: PaginationInfo -> Int
data LibratoError
ParamErrors :: HashMap Text (Vector Text) -> LibratoError
paramErrors :: LibratoError -> HashMap Text (Vector Text)
RequestErrors :: Vector Text -> LibratoError
requestErrors :: LibratoError -> Vector Text
SystemErrors :: Vector Text -> LibratoError
systemErrors :: LibratoError -> Vector Text
JsonError :: String -> LibratoError
decodingError :: LibratoError -> String
data LibratoConfig
LibratoConfig :: ByteString -> ByteString -> Manager -> LibratoConfig
libratoAccount :: LibratoConfig -> ByteString
libratoToken :: LibratoConfig -> ByteString
libratoManager :: LibratoConfig -> Manager
instance Show LibratoError

module Librato.Internal
newtype Librato a
Librato :: EitherT LibratoError (ReaderT (Request, Manager) (ResourceT IO)) a -> Librato a
fromLibrato :: Librato a -> EitherT LibratoError (ReaderT (Request, Manager) (ResourceT IO)) a
withLibrato :: ByteString -> ByteString -> (LibratoConfig -> ResourceT IO a) -> IO a
librato :: LibratoConfig -> Librato a -> ResourceT IO (Either LibratoError a)
addUserAgent :: Request -> Request
libratoRequest :: Request
request :: LibratoConfig -> Request
getResponse :: (Request -> Request) -> Librato (Response ByteString)
decodeResponse :: Response ByteString -> Librato Value
useJSON :: Request -> Request
decodeToJSON :: Response ByteString -> Either String Value
appendUrl :: ByteString -> Request -> Request
get :: ByteString -> Request -> Request
put :: ByteString -> Request -> Request
post :: ByteString -> Request -> Request
delete :: ByteString -> Request -> Request
query :: Query -> Request -> Request
jsonBody :: ToJSON a => a -> Request -> Request
segment :: ByteString -> ByteString
instance Functor Librato
instance Applicative Librato
instance Monad Librato
instance MonadIO Librato

module Librato.Metrics
metrics :: ByteString
metric :: ByteString -> ByteString
data ListMetricsRequest
ListMetricsRequest :: Text -> [Text] -> ListMetricsRequest
lmreqName :: ListMetricsRequest -> Text
lmreqTag :: ListMetricsRequest -> [Text]
data Metric
GaugeMetric :: Metric
CounterMetric :: Metric
data ListMetricsResponse
ListMetricsResponse :: PaginationInfo -> Vector Metric -> ListMetricsResponse
lmrespQuery :: ListMetricsResponse -> PaginationInfo
lmrespMetrics :: ListMetricsResponse -> Vector Metric
data Measurement
Measurement :: Text -> Double -> Maybe Text -> Maybe Int -> Measurement
mName :: Measurement -> Text
mValue :: Measurement -> Double
mSource :: Measurement -> Maybe Text
mMeasureTime :: Measurement -> Maybe Int
type Gauge = Measurement
type Counter = Measurement
listMetrics :: ListMetricsRequest -> PaginationParameters -> Librato Value
submitMetrics :: Vector Gauge -> Vector Counter -> Librato ()
instance Show Measurement
instance ToJSON Measurement

module Librato
withLibrato :: ByteString -> ByteString -> (LibratoConfig -> ResourceT IO a) -> IO a
