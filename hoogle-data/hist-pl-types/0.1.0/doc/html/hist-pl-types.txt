-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Types in the historical dictionary of Polish
--   
--   The library provides a data type hierarchy which mirrors the hierarchy
--   of elements present in the original, LMF representation of the
--   historical dictionary of Polish.
@package hist-pl-types
@version 0.1.0


-- | A data type hierarchy provided by this module mirrors the hierarchy of
--   elements present in the original, LMF representation of the historical
--   dictionary of Polish.
module NLP.HistPL.Types

-- | Written representation of a form or a text.
data Repr
Repr :: Text -> Text -> Maybe Text -> Repr
writtenForm :: Repr -> Text
language :: Repr -> Text
sourceID :: Repr -> Maybe Text

-- | A class of objects with a written representation.
class HasRepr t
repr :: HasRepr t => t -> [Repr]

-- | Get textual representations of an object.
text :: HasRepr t => t -> [Text]

-- | A word form.
newtype WordForm
WordForm :: [Repr] -> WordForm

-- | A lemma (base) form.
newtype Lemma
Lemma :: [Repr] -> Lemma

-- | A related form.
data RelForm
RelForm :: [Repr] -> Text -> RelForm
relRepr :: RelForm -> [Repr]
relTo :: RelForm -> Text

-- | A definition of the lexeme sense.
newtype Definition
Definition :: [Repr] -> Definition

-- | A context in which a given sense is illustrated.
newtype Context
Context :: [Repr] -> Context

-- | A description of a syntactic behaviour.
data SynBehaviour
SynBehaviour :: [Repr] -> [Text] -> SynBehaviour
synRepr :: SynBehaviour -> [Repr]
synSenseIds :: SynBehaviour -> [Text]

-- | A potential sense of a given lexeme.
data Sense
Sense :: Maybe Text -> [Text] -> [Definition] -> [Context] -> Sense
senseId :: Sense -> Maybe Text
style :: Sense -> [Text]
defs :: Sense -> [Definition]
cxts :: Sense -> [Context]

-- | A description of a lexeme.
data LexEntry
LexEntry :: Text -> Maybe Text -> Maybe Text -> [Text] -> Lemma -> [WordForm] -> [Text] -> [SynBehaviour] -> [Sense] -> [RelForm] -> LexEntry

-- | An ID of the lexical entry.
lexID :: LexEntry -> Text

-- | A line reference number. Provisional field.
lineRef :: LexEntry -> Maybe Text

-- | A status of the lexeme. Provisional field.
status :: LexEntry -> Maybe Text

-- | Potential parts of speech.
pos :: LexEntry -> [Text]

-- | A base form.
lemma :: LexEntry -> Lemma

-- | Word forms of the lexeme.
forms :: LexEntry -> [WordForm]

-- | A list of component identifiers (only when the entry represents a
--   compound lexeme).
components :: LexEntry -> [Text]

-- | A list of potential syntactic behaviours of the lexeme.
syntactic :: LexEntry -> [SynBehaviour]

-- | A list of potential semantic descriptions.
senses :: LexEntry -> [Sense]

-- | Forma related to the lexeme.
related :: LexEntry -> [RelForm]
instance Show Repr
instance Read Repr
instance Eq Repr
instance Ord Repr
instance Show WordForm
instance Read WordForm
instance Eq WordForm
instance Ord WordForm
instance Binary WordForm
instance HasRepr WordForm
instance Show RelForm
instance Read RelForm
instance Eq RelForm
instance Ord RelForm
instance Show Lemma
instance Read Lemma
instance Eq Lemma
instance Ord Lemma
instance Binary Lemma
instance HasRepr Lemma
instance Show Definition
instance Read Definition
instance Eq Definition
instance Ord Definition
instance Binary Definition
instance HasRepr Definition
instance Show Context
instance Read Context
instance Eq Context
instance Ord Context
instance Binary Context
instance HasRepr Context
instance Show SynBehaviour
instance Read SynBehaviour
instance Eq SynBehaviour
instance Ord SynBehaviour
instance Show Sense
instance Read Sense
instance Eq Sense
instance Ord Sense
instance Show LexEntry
instance Read LexEntry
instance Eq LexEntry
instance Ord LexEntry
instance Binary LexEntry
instance Binary Sense
instance Binary SynBehaviour
instance HasRepr SynBehaviour
instance HasRepr RelForm
instance Binary RelForm
instance HasRepr [Repr]
instance Binary Repr
