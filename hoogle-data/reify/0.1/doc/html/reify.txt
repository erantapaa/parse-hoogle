-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Serialize data
--   
--   This is a library for reifying Haskell data structures in GHC. Haskell
--   values are mapped into representations that we call graphs (for want
--   of a better name). The representations are encoded in the Haskell type
--   Graph, which is just an ordinary algebraic data type. This will not
--   reify functions.
--   
--   Bitrotten.
@package reify
@version 0.1

module ReifyHs
reify :: a -> IO Graph
data Graph
AppNode :: Unique -> String -> Tag -> NumKids -> [Graph] -> Graph
CharNode :: Char -> Graph
IntNode :: Int -> Graph
IntegerNode :: Integer -> Graph
FloatNode :: Float -> Graph
DoubleNode :: Double -> Graph
NullNode :: Graph
data GraphKind
GNode :: GraphKind
GCycle :: GraphKind
GThunk :: GraphKind
GChar :: GraphKind
GInt :: GraphKind
GInteger :: GraphKind
GFloat :: GraphKind
GDouble :: GraphKind
GException :: GraphKind
GApUpd :: GraphKind
GFun :: GraphKind
GNull :: GraphKind
graphKind :: Graph -> GraphKind
tagToKind :: Tag -> GraphKind
graphIsList :: Graph -> Bool
graphIsTuple :: Graph -> Bool
instance Eq GraphKind
instance Show GraphKind
instance Show Graph
instance Eq Graph

module PrettyGraph
prettyGraph :: Graph -> String
