-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | L-Estimators for robust statistics
--   
--   L-Estimators for robust statistics
@package order-statistics
@version 0.1.1


module Statistics.Distribution.Beta
data BetaDistribution
BD :: {-# UNPACK #-} !Double -> {-# UNPACK #-} !Double -> BetaDistribution
bdAlpha :: BetaDistribution -> {-# UNPACK #-} !Double
bdBeta :: BetaDistribution -> {-# UNPACK #-} !Double
betaDistr :: Double -> Double -> BetaDistribution
instance Typeable BetaDistribution
instance Eq BetaDistribution
instance Read BetaDistribution
instance Show BetaDistribution
instance MaybeVariance BetaDistribution
instance ContDistr BetaDistribution
instance Variance BetaDistribution
instance MaybeMean BetaDistribution
instance Mean BetaDistribution
instance Distribution BetaDistribution


module Statistics.Order

-- | L-estimators are linear combinations of order statistics used by
--   <tt>robust</tt> statistics.
newtype L r
L :: (Int -> IntMap r) -> L r
runL :: L r -> Int -> IntMap r

-- | Calculate the result of applying an L-estimator after sorting list
--   into order statistics
(@@) :: (Num r, Ord r) => L r -> [r] -> r

-- | Calculate the result of applying an L-estimator to a *pre-sorted*
--   vector of order statistics
(@!) :: Num r => L r -> Vector r -> r

-- | get a vector of the coefficients of an L estimator when applied to an
--   input of a given length
(@#) :: Num r => L r -> Int -> [r]

-- | calculate the breakdown % of an L-estimator
breakdown :: (Num r, Eq r) => L r -> Int

-- | Tukey's trimean
--   
--   <pre>
--   breakdown trimean = 25
--   </pre>
trimean :: Fractional r => L r

-- | <pre>
--   midhinge = trimmed 0.25 midrange
--   breakdown midhinge = 25%
--   </pre>
midhinge :: Fractional r => L r

-- | interquartile range
--   
--   <pre>
--   breakdown iqr = 25%
--   iqr = trimmed 0.25 midrange
--   </pre>
iqr :: Fractional r => L r

-- | interquartile mean
--   
--   <pre>
--   iqm = trimmed 0.25 mean
--   </pre>
iqm :: Fractional r => L r

-- | Direct estimator for the second L-moment given a sample
lscale :: Fractional r => L r

-- | Calculate a trimmed L-estimator. If the sample size isn't evenly
--   divided, linear interpolation is used as described in
--   <a>http://en.wikipedia.org/wiki/Trimmed_mean#Interpolation</a>
trimmed :: Fractional r => Rational -> L r -> L r

-- | Calculates an interpolated winsorized L-estimator in a manner
--   analogous to the trimmed estimator. Unlike trimming, winsorizing
--   replaces the extreme values.
winsorized :: Fractional r => Rational -> L r -> L r

-- | Calculates an interpolated winsorized L-estimator in a manner
--   analogous to the trimmed estimator. Unlike trimming, winsorizing
--   replaces the extreme values.
winsorised :: Fractional r => Rational -> L r -> L r

-- | Jackknifes the statistic by removing each sample in turn and
--   recalculating the L-estimator, requires at least 2 samples!
jackknifed :: Fractional r => L r -> L r

-- | The average of all of the order statistics. Not robust.
--   
--   <pre>
--   breakdown mean = 0%
--   </pre>
mean :: Fractional r => L r

-- | The sum of all of the order statistics. Not robust.
--   
--   <pre>
--   breakdown total = 0%
--   </pre>
total :: Num r => L r

-- | The minimum value in the sample
lmin :: Num r => L r

-- | The maximum value in the sample
lmax :: Num r => L r

-- | <pre>
--   midrange = lmax - lmin
--   breakdown midrange = 0%
--   </pre>
midrange :: Fractional r => L r
nthSmallest :: Num r => Int -> L r
nthLargest :: Num r => Int -> L r

-- | Compute a quantile with traditional direct averaging
quantile :: Fractional r => Rational -> L r

-- | The most robust L-estimator possible.
--   
--   <pre>
--   breakdown median = 50
--   </pre>
median :: Fractional r => L r
tercile :: Fractional r => Rational -> L r

-- | terciles 1 and 2
--   
--   <pre>
--   breakdown t1 = breakdown t2 = 33%
--   </pre>
t1 :: Fractional r => L r

-- | terciles 1 and 2
--   
--   <pre>
--   breakdown t1 = breakdown t2 = 33%
--   </pre>
t2 :: Fractional r => L r
quartile :: Fractional r => Rational -> L r

-- | quantiles, with breakdown points 25%, 50%, and 25% respectively
q1 :: Fractional r => L r

-- | quantiles, with breakdown points 25%, 50%, and 25% respectively
q2 :: Fractional r => L r

-- | quantiles, with breakdown points 25%, 50%, and 25% respectively
q3 :: Fractional r => L r
quintile :: Fractional r => Rational -> L r

-- | quintiles 1 through 4
qu1 :: Fractional r => L r

-- | quintiles 1 through 4
qu2 :: Fractional r => L r

-- | quintiles 1 through 4
qu3 :: Fractional r => L r

-- | quintiles 1 through 4
qu4 :: Fractional r => L r

-- | <pre>
--   breakdown (percentile n) = min n (100 - n)
--   </pre>
percentile :: Fractional r => Rational -> L r
permille :: Fractional r => Rational -> L r

-- | The Harrell-Davis quantile estimate. Uses multiple order statistics to
--   approximate the quantile to reduce variance.
hdquantile :: Fractional r => Rational -> L r

-- | Compute a quantile using the given estimation strategy to interpolate
--   when an exact quantile isn't available
quantileBy :: Num r => Estimator r -> Rational -> L r
type Estimator r = Rational -> Int -> Estimate r

-- | Sample quantile estimators
data Estimate r
Estimate :: {-# UNPACK #-} !Rational -> (IntMap r) -> Estimate r

-- | Inverse of the empirical distribution function
r1 :: Num r => Estimator r

-- | .. with averaging at discontinuities
r2 :: Fractional r => Estimator r

-- | The observation numbered closest to Np. NB: does not yield a proper
--   median
r3 :: Num r => Estimator r

-- | Linear interpolation of the empirical distribution function. NB: does
--   not yield a proper median.
r4 :: Fractional r => Estimator r

-- | .. with knots midway through the steps as used in hydrology. This is
--   the simplest continuous estimator that yields a correct median
r5 :: Fractional r => Estimator r

-- | Linear interpolation of the expectations of the order statistics for
--   the uniform distribution on [0,1]
r6 :: Fractional r => Estimator r

-- | Linear interpolation of the modes for the order statistics for the
--   uniform distribution on [0,1]
r7 :: Fractional r => Estimator r

-- | Linear interpolation of the approximate medans for order statistics.
r8 :: Fractional r => Estimator r

-- | The resulting quantile estimates are approximately unbiased for the
--   expected order statistics if x is normally distributed.
r9 :: Fractional r => Estimator r

-- | When rounding h, this yields the order statistic with the least
--   expected square deviation relative to p.
r10 :: Fractional r => Estimator r
instance Num r => VectorSpace (L r)
instance Num r => AdditiveGroup (L r)
