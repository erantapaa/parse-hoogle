-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Utilities for working with sequences within lists.
--   
--   Find sequences within lists.
@package data-list-sequences
@version 0.1


-- | Find sequences within lists.
module Data.List.Sequences

-- | Find sequences within a list and return them as new list of sequences.
--   The first argument is a function that takes two subsequent elements of
--   the given list (second argument) and returns whether the second
--   element follows the first one in a sequence.
--   
--   <pre>
--   splitSeq ((==) . succ) [1,2,3,5,6,7]
--   [[1,2,3],[5,6,7]]
--   </pre>
splitSeq :: (a -> a -> Bool) -> [a] -> [[a]]

-- | Works pretty much like <a>splitSeq</a>, except that a tuple with only
--   the sequence starting at the first element and the rest of the list is
--   returned.
--   
--   <pre>
--   spanSeq ((==) . succ) "abcxyz123"
--   ("abc","xyz123")
--   </pre>
spanSeq :: (a -> a -> Bool) -> [a] -> ([a], [a])
