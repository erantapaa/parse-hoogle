-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A typeclass which simplifies creating link widgets throughout your site
--   
--   A yesod goody, yesod links
@package yesod-links
@version 0.2.1


module Yesod.Links

-- | An internal route or external url
data Destination m
Internal :: (Route m) -> Destination m
External :: Text -> Destination m

-- | A link to a <a>Destination</a> with supplied titles and text to be
--   used when showing the html.
data Link m
Link :: Destination m -> Text -> Text -> Link m
linkDest :: Link m -> Destination m
linkTitle :: Link m -> Text
linkText :: Link m -> Text

-- | A type family class used to generalize widgets printing routes that
--   are internal to your site
--   
--   <pre>
--   instance YesodLinked MySite where
--       type Linked = MySite
--   </pre>
class YesodLinked m where type family Linked

-- | Any type can represent a link.
--   
--   <pre>
--   instance IsLink MyAppRoute where
--       toLink RootR  = Link (Internal RootR)  "go home"         "home"
--       toLink AboutR = Link (Internal AboutR) "about this site" "about"
--       ...
--   
--   getRootR :: Handler RepHtml
--   getRootR = defaultLayout $ do
--       [hamlet|
--   
--           be sure to visit our ^{link AboutR} page.
--   
--           |]
--   </pre>
class IsLink a
toLink :: IsLink a => a -> Link Linked

-- | Link to any <tt><a>IsLink</a></tt> type. This is simply
--   <tt><a>link'</a> . <a>toLink</a></tt>.
link :: IsLink a => a -> GWidget s Linked ()

-- | Link to a raw <tt><a>Link</a></tt>. Can be used even if your site is
--   not an instance of <a>YesodLinked</a>.
link' :: Link m -> GWidget s m ()
