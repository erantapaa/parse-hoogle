-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Access the Freesound Project database
--   
--   Access the Freesound Project database. The Freesound Project is a
--   collaborative database of Creative Commons licensed sounds.
--   
--   <a>http://www.freesound.org/</a>
--   
--   <a>http://www.creativecommons.org/</a>
@package freesound
@version 0.1.0

module Sound.Freesound.Sample

-- | A handle to a sample in the database.
newtype Sample
Sample :: Int -> Sample
sampleId :: Sample -> Int

-- | Read a <a>Sample</a> from an <a>Element</a>.
fromXML :: Element -> Maybe Sample

-- | Read a list of <a>Sample</a>s from an <a>Element</a>.
listFromXML :: Element -> [Sample]
instance Eq Sample
instance Ord Sample
instance Read Sample
instance Show Sample

module Sound.Freesound.Query

-- | A <a>Query</a> type for searching the database.
data Query
Query :: String -> Maybe Double -> Maybe Double -> Maybe Int -> Maybe Int -> Maybe Int -> Query

-- | The query string
string :: Query -> String

-- | Minimum duration in seconds
minDur :: Query -> Maybe Double

-- | Maximum duration in seconds
maxDur :: Query -> Maybe Double

-- | Bit rate of the soundfile
bitRate :: Query -> Maybe Int

-- | Bit depth of the soundfile
bitDepth :: Query -> Maybe Int

-- | Sample rate of the soundfile
sampleRate :: Query -> Maybe Int

-- | Construct a <a>Query</a> to search the database for a <a>String</a>.
stringQuery :: String -> Query

-- | Convert a query to POST request fields.
toPostFields :: Query -> [String]

module Sound.Freesound.Properties

-- | User of the Freesound database.
data User
User :: Int -> String -> User
userId :: User -> Int
userName :: User -> String

-- | Description of a <tt>Sample</tt>, containing user and text.
data Description
Description :: User -> String -> Description

-- | Statistics of a <tt>Sample</tt> in the database.
data Statistics
Statistics :: Int -> (Int, Int) -> Statistics
downloads :: Statistics -> Int
rating :: Statistics -> (Int, Int)

-- | Tag (a single word) for describing a <tt>Sound</tt>
type Tag = String

-- | Properties of a <tt>Sample</tt> in the database.
data Properties
Properties :: Int -> User -> String -> String -> Statistics -> URLString -> URLString -> URLString -> String -> Int -> Int -> Int -> Int -> Double -> Int -> [Description] -> [Tag] -> Properties
sampleId :: Properties -> Int
user :: Properties -> User
date :: Properties -> String
originalFileName :: Properties -> String
statistics :: Properties -> Statistics
image :: Properties -> URLString
preview :: Properties -> URLString
colors :: Properties -> URLString
extension :: Properties -> String
sampleRate :: Properties -> Int
bitRate :: Properties -> Int
bitDepth :: Properties -> Int
channels :: Properties -> Int
duration :: Properties -> Double
fileSize :: Properties -> Int
descriptions :: Properties -> [Description]
tags :: Properties -> [Tag]

-- | Read a <a>Properties</a> value from an <a>Element</a> in the
--   <a>Maybe</a> monad.
fromXML :: Element -> Maybe Properties

-- | Read a list of <a>Properties</a> from an <a>Element</a>.
listFromXML :: Element -> [Properties]
instance Eq Properties
instance Show Properties
instance Eq Statistics
instance Show Statistics
instance Eq Description
instance Show Description
instance Eq User
instance Show User


-- | This module provides access to the Freesound Project, a database of
--   Creative Commons licensed sounds.
--   
--   <ul>
--   <li><a>http://www.freesound.org/</a></li>
--   <li><a>http://www.creativecommons.org/</a></li>
--   </ul>
module Sound.Freesound

-- | The <a>Freesound</a> monad.
data Freesound a

-- | Log into Freesound with and perform an action in the <a>Freesound</a>
--   monad.
withFreesound :: String -> String -> Freesound a -> IO (Either Error a)

-- | Error type.
data Error
Error :: String -> Error
CurlError :: CurlCode -> Error
LoginError :: Error
XMLError :: Error
UnknownError :: Error

-- | Convert an <a>Error</a> into a <a>String</a>.
errorString :: Error -> String

-- | A handle to a sample in the database.
newtype Sample
Sample :: Int -> Sample
sampleId :: Sample -> Int

-- | Search the Freesound database.
search :: Query -> Freesound [Sample]

-- | Similarity type used by <a>searchSimilar</a>.
data Similarity
Similar :: Similarity
Dissimilar :: Similarity

-- | Search samples similar (or dissimilar) to a <a>Sample</a>.
searchSimilar :: Similarity -> Sample -> Freesound [Sample]

-- | Get the properties of a <a>Sample</a> as an XML document.
propertiesXML :: Sample -> Freesound Element

-- | Get the properties of a <a>Sample</a>.
properties :: Sample -> Freesound Properties

-- | Download a <a>Sample</a> as an instance of <a>CurlBuffer</a>.
download :: (CurlBuffer b) => Sample -> Freesound b
instance Eq Similarity
instance Show Similarity
instance Functor Freesound
instance Monad Freesound
instance MonadError Error Freesound
instance MonadIO Freesound
instance MonadReader Handle Freesound
instance Show Error
instance Error Error
