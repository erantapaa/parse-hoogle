-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Simple ObjectiveC runtime binding
--   
@package luka
@version 2012.7.7.1

module Language.ObjectiveC.Luka.RunTime
funPtr_object_getInstanceVariable :: FunPtr ()
funPtr_object_getIvar :: FunPtr ()
funPtr_objc_getClass :: FunPtr ()
funPtr_method_setImplementation :: FunPtr ()
funPtr_objc_msgSend :: FunPtr ()
funPtr_sel_registerName :: FunPtr ()
funPtr_sel_getUid :: FunPtr ()
funPtr_class_createInstance :: FunPtr ()
funPtr_object_dispose :: FunPtr ()
funPtr_objc_allocateClassPair :: FunPtr ()
funPtr_objc_registerClassPair :: FunPtr ()
funPtr_class_addMethod :: FunPtr ()
funPtr_class_getInstanceMethod :: FunPtr ()
funPtr_NSLog :: FunPtr ()
c_NSApplicationMain :: CInt -> Ptr (Ptr CChar) -> IO CInt
method_getTypeEncoding :: Ptr a -> IO CString
data IDData
type ID = Ptr IDData
data SELData
type SEL = Ptr SELData
data IvarData
type Ivar = Ptr IvarData
objc_False :: CChar
objc_True :: CChar
c2b :: CChar -> Bool
retId :: RetType ID
retSel :: RetType SEL
retIvar :: RetType Ivar
retVoidPtr :: RetType (Ptr ())
object_getInstanceVariable :: ID -> String -> IO Ivar
object_getIvar :: ID -> Ivar -> IO ID
objc_getClass :: String -> IO ID
method_setImplementation :: Ptr a -> FunPtr b -> IO (FunPtr ())
sel_registerName :: String -> IO SEL
sel_getUid :: String -> IO SEL
class_createInstance :: ID -> IO ID
object_dispose :: ID -> IO ID
objc_allocateClassPair :: ID -> String -> IO ID
objc_registerClassPair :: ID -> IO ()
class_addMethod :: ID -> SEL -> FunPtr a -> String -> IO Bool
ns_log :: [Arg] -> IO ()
class_getInstanceMethod :: Ptr a -> Ptr b -> IO ID
objc_msgSend :: ID -> SEL -> [Arg] -> RetType a -> IO a

module Language.ObjectiveC.Luka.API
get_i :: String -> ID -> IO ID
from_ns_string :: ID -> IO String
with_pool :: IO a -> IO ()
msg :: String -> [Arg] -> RetType a -> ID -> IO a
sel_named :: String -> IO SEL
ns_string :: String -> IO ID
class_named :: String -> IO ID
ns_puts :: String -> [Arg] -> IO ()
set_method :: String -> String -> FunPtr a -> IO (FunPtr ())

module Language.ObjectiveC.Luka
