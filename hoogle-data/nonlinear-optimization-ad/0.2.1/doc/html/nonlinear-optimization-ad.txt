-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Wrapper of nonlinear-optimization package for using with AD package
--   
@package nonlinear-optimization-ad
@version 0.2.1

module Numeric.Optimization.Algorithms.HagerZhang05.AD

-- | Run the <tt>CG_DESCENT</tt> optimizer and try to minimize the
--   function.
--   
--   It uses reverse mode automatic differentiation to compute the
--   gradient.
optimize :: Traversable f => Parameters -> Double -> f Double -> (forall s. Reifies s Tape => f (Reverse s Double) -> Reverse s Double) -> IO (f Double, Result, Statistics)
data Result :: *

-- | Convergence tolerance was satisfied.
ToleranceStatisfied :: Result

-- | Change in function value was less than <tt>funcEpsilon * |f|</tt>.
FunctionChange :: Result

-- | Total iterations exceeded <tt>maxItersFac * n</tt>.
MaxTotalIter :: Result

-- | Slope was always negative in line search.
NegativeSlope :: Result

-- | Number of secant iterations exceed nsecant.
MaxSecantIter :: Result

-- | Search direction not a descent direction.
NotDescent :: Result

-- | Line search fails in initial interval.
LineSearchFailsInitial :: Result

-- | Line search fails during bisection.
LineSearchFailsBisection :: Result

-- | Line search fails during interval update.
LineSearchFailsUpdate :: Result

-- | Debug tolerance was on and the test failed (see <a>debugTol</a>).
DebugTol :: Result

-- | Function value became <tt>NaN</tt>.
FunctionValueNaN :: Result

-- | Initial function value was <tt>NaN</tt>.
StartFunctionValueNaN :: Result

-- | Statistics given after the process finishes.
data Statistics :: *
Statistics :: Double -> Double -> CInt -> CInt -> CInt -> Statistics

-- | Value of the function at the solution.
finalValue :: Statistics -> Double

-- | Maximum absolute component of the gradient at the solution.
gradNorm :: Statistics -> Double

-- | Total number of iterations.
totalIters :: Statistics -> CInt

-- | Total number of function evaluations.
funcEvals :: Statistics -> CInt

-- | Total number of gradient evaluations.
gradEvals :: Statistics -> CInt

-- | Default parameters. See the documentation for <a>Parameters</a> and
--   <a>TechParameters</a> to see what are the defaults.
defaultParameters :: Parameters

-- | Parameters given to the optimizer.
data Parameters :: *
Parameters :: Bool -> Bool -> Verbose -> LineSearch -> Double -> StopRules -> EstimateError -> Maybe Double -> Maybe Double -> Maybe Double -> Double -> CInt -> CInt -> Double -> Double -> Double -> TechParameters -> Parameters

-- | Print final statistics to <tt>stdout</tt>. Defaults to <tt>True</tt>.
printFinal :: Parameters -> Bool

-- | Print parameters to <tt>stdout</tt> before starting. Defaults to
--   <tt>False</tt>
printParams :: Parameters -> Bool

-- | How verbose we should be while computing. Everything is printed to
--   <tt>stdout</tt>. Defaults to <a>Quiet</a>.
verbose :: Parameters -> Verbose

-- | What kind of line search should be used. Defaults to <tt>AutoSwitch
--   1e-3</tt>.
lineSearch :: Parameters -> LineSearch

-- | Factor in <tt>[0, 1]</tt> used to compute average cost magnitude
--   <tt>C_k</tt> as follows:
--   
--   <pre>
--   Q_k = 1 + (qdecay)Q_{k-1},   Q_0 = 0
--   C_k = C_{k-1} + (|f_k| - C_{k-1})/Q_k
--   </pre>
--   
--   Defaults to <tt>0.7</tt>.
qdecay :: Parameters -> Double

-- | Stop rules that define when the iterations should end. Defaults to
--   <tt>DefaultStopRule 0</tt>.
stopRules :: Parameters -> StopRules

-- | How to calculate the estimated error in the function value. Defaults
--   to <tt>RelativeEpsilon 1e-6</tt>.
estimateError :: Parameters -> EstimateError

-- | When to attempt quadratic interpolation in line search. If
--   <tt>Nothing</tt> then never try a quadratic interpolation step. If
--   <tt>Just cutoff</tt>, then attemp quadratic interpolation in line
--   search when <tt>|f_{k+1} - f_k| / f_k &lt;= cutoff</tt>. Defaults to
--   <tt>Just 1e-12</tt>.
quadraticStep :: Parameters -> Maybe Double

-- | If <tt>Just tol</tt>, then always check that <tt>f_{k+1} - f_k &lt;=
--   tol * C_k</tt>. Otherwise, if <tt>Nothing</tt> then no checking of
--   function values is done. Defaults to <tt>Nothing</tt>.
debugTol :: Parameters -> Maybe Double

-- | If <tt>Just step</tt>, then use <tt>step</tt> as the initial step of
--   the line search. Otherwise, if <tt>Nothing</tt> then the initial step
--   is programatically calculated. Defaults to <tt>Nothing</tt>.
initialStep :: Parameters -> Maybe Double

-- | Defines the maximum number of iterations. The process is aborted when
--   <tt>maxItersFac * n</tt> iterations are done, where <tt>n</tt> is the
--   number of dimensions. Defaults to infinity.
maxItersFac :: Parameters -> Double

-- | Maximum number of times the bracketing interval grows or shrinks in
--   the line search. Defaults to <tt>50</tt>.
nexpand :: Parameters -> CInt

-- | Maximum number of secant iterations in line search. Defaults to
--   <tt>50</tt>.
nsecant :: Parameters -> CInt

-- | Restart the conjugate gradient method after <tt>restartFac * n</tt>
--   iterations. Defaults to <tt>1</tt>.
restartFac :: Parameters -> Double

-- | Stop when <tt>-alpha * dphi0</tt>, the estimated change in function
--   value, is less than <tt>funcEpsilon * |f|</tt>. Defaults to
--   <tt>0</tt>.
funcEpsilon :: Parameters -> Double

-- | After encountering <tt>NaN</tt> while calculating the step length,
--   growth factor when searching for a bracketing interval. Defaults to
--   <tt>1.3</tt>.
nanRho :: Parameters -> Double

-- | Technical parameters which you probably should not touch.
techParameters :: Parameters -> TechParameters

-- | How verbose we should be.
data Verbose :: *

-- | Do not output anything to <tt>stdout</tt>, which most of the time is
--   good.
Quiet :: Verbose

-- | Print what work is being done on each iteraction.
Verbose :: Verbose

-- | Print information about every step, may be useful for troubleshooting.
VeryVerbose :: Verbose

-- | Line search methods that may be used.
data LineSearch :: *

-- | Use approximate Wolfe line search.
ApproximateWolfe :: LineSearch

-- | Use ordinary Wolfe line search, switch to approximate Wolfe when
--   
--   <pre>
--   |f_{k+1} - f_k| &lt; AWolfeFac * C_k
--   </pre>
--   
--   where <tt>C_k</tt> is the average size of cost and <tt>AWolfeFac</tt>
--   is the parameter to this constructor.
AutoSwitch :: Double -> LineSearch

-- | Stop rules used to decided when to stop iterating.
data StopRules :: *

-- | <tt>DefaultStopRule stop_fac</tt> stops when
--   
--   <pre>
--   |g_k|_infty &lt;= max(grad_tol, |g_0|_infty * stop_fac)
--   </pre>
--   
--   where <tt>|g_i|_infty</tt> is the maximum absolute component of the
--   gradient at the <tt>i</tt>-th step.
DefaultStopRule :: Double -> StopRules

-- | <tt>AlternativeStopRule</tt> stops when
--   
--   <pre>
--   |g_k|_infty &lt;= grad_tol * (1 + |f_k|)
--   </pre>
AlternativeStopRule :: StopRules

-- | How to calculate the estimated error in the function value.
data EstimateError :: *

-- | <tt>AbsoluteEpsilon eps</tt> estimates the error as <tt>eps</tt>.
AbsoluteEpsilon :: Double -> EstimateError

-- | <tt>RelativeEpsilon eps</tt> estimates the error as <tt>eps *
--   C_k</tt>.
RelativeEpsilon :: Double -> EstimateError

-- | Technical parameters which you probably should not touch. You should
--   read the papers of <tt>CG_DESCENT</tt> to understand how you can tune
--   these parameters.
data TechParameters :: *
TechParameters :: Double -> Double -> Double -> Double -> Double -> Double -> Double -> Double -> TechParameters

-- | Wolfe line search parameter. Defaults to <tt>0.1</tt>.
techDelta :: TechParameters -> Double

-- | Wolfe line search parameter. Defaults to <tt>0.9</tt>.
techSigma :: TechParameters -> Double

-- | Decay factor for bracket interval width. Defaults to <tt>0.66</tt>.
techGamma :: TechParameters -> Double

-- | Growth factor when searching for initial bracketing interval. Defaults
--   to <tt>5</tt>.
techRho :: TechParameters -> Double

-- | Lower bound for the conjugate gradient update parameter
--   <tt>beta_k</tt> is <tt>techEta * ||d||_2</tt>. Defaults to
--   <tt>0.01</tt>.
techEta :: TechParameters -> Double

-- | Factor used in starting guess for iteration 1. Defaults to
--   <tt>0.01</tt>.
techPsi0 :: TechParameters -> Double

-- | In performing a QuadStep, we evaluate the function at <tt>psi1 *
--   previous step</tt>. Defaults to <tt>0.1</tt>.
techPsi1 :: TechParameters -> Double

-- | When starting a new CG iteration, our initial guess for the line
--   search stepsize is <tt>psi2 * previous step</tt>. Defaults to
--   <tt>2</tt>.
techPsi2 :: TechParameters -> Double
class (Num t, Num (Scalar t)) => Mode t where type family Scalar t :: *
auto :: Mode t => Scalar t -> t
