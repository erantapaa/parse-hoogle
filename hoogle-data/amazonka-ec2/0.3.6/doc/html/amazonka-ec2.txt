-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Amazon Elastic Compute Cloud SDK.
--   
@package amazonka-ec2
@version 0.3.6

module Network.AWS.EC2.Types

-- | Version <tt>2015-04-15</tt> of the Amazon Elastic Compute Cloud
--   service.
data EC2
data EC2Error
EC2Error :: Text -> List1 "Error" Message -> EC2Error
_errRequestID :: EC2Error -> Text
_errErrors :: EC2Error -> List1 "Error" Message
ns :: Text
data ImageAttributeName

-- | blockDeviceMapping
ImageBlockDeviceMapping :: ImageAttributeName

-- | description
ImageDescription :: ImageAttributeName

-- | kernel
ImageKernel :: ImageAttributeName

-- | launchPermission
ImageLaunchPermission :: ImageAttributeName

-- | productCodes
ImageProductCodes :: ImageAttributeName

-- | ramdisk
ImageRamdisk :: ImageAttributeName

-- | sriovNetSupport
ImageSriovNetSupport :: ImageAttributeName
data PermissionGroup

-- | all
All :: PermissionGroup
data NetworkAclEntry

-- | <a>NetworkAclEntry</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>naeCidrBlock</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>naeEgress</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>naeIcmpTypeCode</a> <tt>::</tt> <a>Maybe</a>
--   <a>IcmpTypeCode</a></li>
--   <li><a>naePortRange</a> <tt>::</tt> <a>Maybe</a> <a>PortRange</a></li>
--   <li><a>naeProtocol</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>naeRuleAction</a> <tt>::</tt> <a>Maybe</a>
--   <a>RuleAction</a></li>
--   <li><a>naeRuleNumber</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   </ul>
networkAclEntry :: NetworkAclEntry

-- | The network range to allow or deny, in CIDR notation.
naeCidrBlock :: Lens' NetworkAclEntry (Maybe Text)

-- | Indicates whether the rule is an egress rule (applied to traffic
--   leaving the subnet).
naeEgress :: Lens' NetworkAclEntry (Maybe Bool)

-- | ICMP protocol: The ICMP type and code.
naeIcmpTypeCode :: Lens' NetworkAclEntry (Maybe IcmpTypeCode)

-- | TCP or UDP protocols: The range of ports the rule applies to.
naePortRange :: Lens' NetworkAclEntry (Maybe PortRange)

-- | The protocol. A value of '-1' means all protocols.
naeProtocol :: Lens' NetworkAclEntry (Maybe Text)

-- | Indicates whether to allow or deny the traffic that matches the rule.
naeRuleAction :: Lens' NetworkAclEntry (Maybe RuleAction)

-- | The rule number for the entry. ACL entries are processed in ascending
--   order by rule number.
naeRuleNumber :: Lens' NetworkAclEntry (Maybe Int)
data BlobAttributeValue

-- | <a>BlobAttributeValue</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>bavValue</a> <tt>::</tt> <a>Maybe</a> <a>Base64</a></li>
--   </ul>
blobAttributeValue :: BlobAttributeValue
bavValue :: Lens' BlobAttributeValue (Maybe Base64)
data ImportInstanceLaunchSpecification

-- | <a>ImportInstanceLaunchSpecification</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>iilsAdditionalInfo</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>iilsArchitecture</a> <tt>::</tt> <a>Maybe</a>
--   <a>ArchitectureValues</a></li>
--   <li><a>iilsGroupIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>iilsGroupNames</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>iilsInstanceInitiatedShutdownBehavior</a> <tt>::</tt>
--   <a>Maybe</a> <a>ShutdownBehavior</a></li>
--   <li><a>iilsInstanceType</a> <tt>::</tt> <a>Maybe</a>
--   <a>InstanceType</a></li>
--   <li><a>iilsMonitoring</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>iilsPlacement</a> <tt>::</tt> <a>Maybe</a>
--   <a>Placement</a></li>
--   <li><a>iilsPrivateIpAddress</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>iilsSubnetId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iilsUserData</a> <tt>::</tt> <a>Maybe</a> <a>UserData</a></li>
--   </ul>
importInstanceLaunchSpecification :: ImportInstanceLaunchSpecification

-- | Reserved.
iilsAdditionalInfo :: Lens' ImportInstanceLaunchSpecification (Maybe Text)

-- | The architecture of the instance.
iilsArchitecture :: Lens' ImportInstanceLaunchSpecification (Maybe ArchitectureValues)

-- | One or more security group IDs.
iilsGroupIds :: Lens' ImportInstanceLaunchSpecification [Text]

-- | One or more security group names.
iilsGroupNames :: Lens' ImportInstanceLaunchSpecification [Text]

-- | Indicates whether an instance stops or terminates when you initiate
--   shutdown from the instance (using the operating system command for
--   system shutdown).
iilsInstanceInitiatedShutdownBehavior :: Lens' ImportInstanceLaunchSpecification (Maybe ShutdownBehavior)

-- | The instance type. For more information about the instance types that
--   you can import, see <a>Before You Get Started</a> in the Amazon
--   Elastic Compute Cloud User Guide.
iilsInstanceType :: Lens' ImportInstanceLaunchSpecification (Maybe InstanceType)

-- | Indicates whether monitoring is enabled.
iilsMonitoring :: Lens' ImportInstanceLaunchSpecification (Maybe Bool)

-- | The placement information for the instance.
iilsPlacement :: Lens' ImportInstanceLaunchSpecification (Maybe Placement)

-- | <ul>
--   <li><i>EC2-VPC</i> An available IP address from the IP address range
--   of the subnet.</li>
--   </ul>
iilsPrivateIpAddress :: Lens' ImportInstanceLaunchSpecification (Maybe Text)

-- | <ul>
--   <li><i>EC2-VPC</i> The ID of the subnet in which to launch the
--   instance.</li>
--   </ul>
iilsSubnetId :: Lens' ImportInstanceLaunchSpecification (Maybe Text)

-- | The Base64-encoded MIME user data to be made available to the
--   instance.
iilsUserData :: Lens' ImportInstanceLaunchSpecification (Maybe UserData)
data Snapshot

-- | <a>Snapshot</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sDescription</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>sEncrypted</a> <tt>::</tt> <a>Bool</a></li>
--   <li><a>sKmsKeyId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>sOwnerAlias</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>sOwnerId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>sProgress</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>sSnapshotId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>sStartTime</a> <tt>::</tt> <a>UTCTime</a></li>
--   <li><a>sState</a> <tt>::</tt> <a>SnapshotState</a></li>
--   <li><a>sTags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   <li><a>sVolumeId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>sVolumeSize</a> <tt>::</tt> <a>Int</a></li>
--   </ul>
snapshot :: Text -> Text -> SnapshotState -> UTCTime -> Text -> Text -> Text -> Int -> Bool -> Snapshot

-- | The description for the snapshot.
sDescription :: Lens' Snapshot Text

-- | Indicates whether the snapshot is encrypted.
sEncrypted :: Lens' Snapshot Bool

-- | The full ARN of the AWS Key Management Service (KMS) master key that
--   was used to protect the volume encryption key for the parent volume.
sKmsKeyId :: Lens' Snapshot (Maybe Text)

-- | The AWS account alias (for example, <tt>amazon</tt>, <tt>self</tt>) or
--   AWS account ID that owns the snapshot.
sOwnerAlias :: Lens' Snapshot (Maybe Text)

-- | The AWS account ID of the EBS snapshot owner.
sOwnerId :: Lens' Snapshot Text

-- | The progress of the snapshot, as a percentage.
sProgress :: Lens' Snapshot Text

-- | The ID of the snapshot.
sSnapshotId :: Lens' Snapshot Text

-- | The time stamp when the snapshot was initiated.
sStartTime :: Lens' Snapshot UTCTime

-- | The snapshot state.
sState :: Lens' Snapshot SnapshotState

-- | Any tags assigned to the snapshot.
sTags :: Lens' Snapshot [Tag]

-- | The ID of the volume.
sVolumeId :: Lens' Snapshot Text

-- | The size of the volume, in GiB.
sVolumeSize :: Lens' Snapshot Int
data SpotInstanceStateFault

-- | <a>SpotInstanceStateFault</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sisfCode</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>sisfMessage</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
spotInstanceStateFault :: SpotInstanceStateFault

-- | The reason code for the Spot Instance state change.
sisfCode :: Lens' SpotInstanceStateFault (Maybe Text)

-- | The message for the Spot Instance state change.
sisfMessage :: Lens' SpotInstanceStateFault (Maybe Text)
data TagDescription

-- | <a>TagDescription</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>tdKey</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>tdResourceId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>tdResourceType</a> <tt>::</tt> <a>ResourceType</a></li>
--   <li><a>tdValue</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
tagDescription :: Text -> ResourceType -> Text -> Text -> TagDescription

-- | The tag key.
tdKey :: Lens' TagDescription Text

-- | The ID of the resource. For example, 'ami-1a2b3c4d'.
tdResourceId :: Lens' TagDescription Text

-- | The resource type.
tdResourceType :: Lens' TagDescription ResourceType

-- | The tag value.
tdValue :: Lens' TagDescription Text
data ImportSnapshotTask

-- | <a>ImportSnapshotTask</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>istDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>istImportTaskId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>istSnapshotTaskDetail</a> <tt>::</tt> <a>Maybe</a>
--   <a>SnapshotTaskDetail</a></li>
--   </ul>
importSnapshotTask :: ImportSnapshotTask

-- | A description of the import snapshot task.
istDescription :: Lens' ImportSnapshotTask (Maybe Text)

-- | The ID of the import snapshot task.
istImportTaskId :: Lens' ImportSnapshotTask (Maybe Text)

-- | Describes an import snapshot task.
istSnapshotTaskDetail :: Lens' ImportSnapshotTask (Maybe SnapshotTaskDetail)
data GroupIdentifier

-- | <a>GroupIdentifier</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>giGroupId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>giGroupName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
groupIdentifier :: GroupIdentifier

-- | The ID of the security group.
giGroupId :: Lens' GroupIdentifier (Maybe Text)

-- | The name of the security group.
giGroupName :: Lens' GroupIdentifier (Maybe Text)
data VpnStaticRouteSource

-- | Static
Static :: VpnStaticRouteSource
data ReservedInstancesListing

-- | <a>ReservedInstancesListing</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rilClientToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rilCreateDate</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>rilInstanceCounts</a> <tt>::</tt> [<a>InstanceCount</a>]</li>
--   <li><a>rilPriceSchedules</a> <tt>::</tt> [<a>PriceSchedule</a>]</li>
--   <li><a>rilReservedInstancesId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>rilReservedInstancesListingId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>rilStatus</a> <tt>::</tt> <a>Maybe</a>
--   <a>ListingStatus</a></li>
--   <li><a>rilStatusMessage</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rilTags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   <li><a>rilUpdateDate</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   </ul>
reservedInstancesListing :: ReservedInstancesListing

-- | A unique, case-sensitive key supplied by the client to ensure that the
--   request is idempotent. For more information, see <a>Ensuring
--   Idempotency</a>.
rilClientToken :: Lens' ReservedInstancesListing (Maybe Text)

-- | The time the listing was created.
rilCreateDate :: Lens' ReservedInstancesListing (Maybe UTCTime)

-- | The number of instances in this state.
rilInstanceCounts :: Lens' ReservedInstancesListing [InstanceCount]

-- | The price of the Reserved Instance listing.
rilPriceSchedules :: Lens' ReservedInstancesListing [PriceSchedule]

-- | The ID of the Reserved Instance.
rilReservedInstancesId :: Lens' ReservedInstancesListing (Maybe Text)

-- | The ID of the Reserved Instance listing.
rilReservedInstancesListingId :: Lens' ReservedInstancesListing (Maybe Text)

-- | The status of the Reserved Instance listing.
rilStatus :: Lens' ReservedInstancesListing (Maybe ListingStatus)

-- | The reason for the current status of the Reserved Instance listing.
--   The response can be blank.
rilStatusMessage :: Lens' ReservedInstancesListing (Maybe Text)

-- | Any tags assigned to the resource.
rilTags :: Lens' ReservedInstancesListing [Tag]

-- | The last modified timestamp of the listing.
rilUpdateDate :: Lens' ReservedInstancesListing (Maybe UTCTime)
data InstanceLifecycleType

-- | spot
Spot :: InstanceLifecycleType
data State

-- | Available
Available :: State

-- | Deleted
Deleted :: State

-- | Deleting
Deleting :: State

-- | Pending
Pending :: State
data VirtualizationType

-- | hvm
Hvm :: VirtualizationType

-- | paravirtual
Paravirtual :: VirtualizationType
data NetworkInterfaceStatus

-- | attaching
NISAttaching :: NetworkInterfaceStatus

-- | available
NISAvailable :: NetworkInterfaceStatus

-- | detaching
NISDetaching :: NetworkInterfaceStatus

-- | in-use
NISInUse :: NetworkInterfaceStatus
data PlatformValues

-- | Windows
Windows :: PlatformValues
data CreateVolumePermission

-- | <a>CreateVolumePermission</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cvpGroup</a> <tt>::</tt> <a>Maybe</a>
--   <a>PermissionGroup</a></li>
--   <li><a>cvpUserId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
createVolumePermission :: CreateVolumePermission

-- | The specific group that is to be added or removed from a volume's list
--   of create volume permissions.
cvpGroup :: Lens' CreateVolumePermission (Maybe PermissionGroup)

-- | The specific AWS account ID that is to be added or removed from a
--   volume's list of create volume permissions.
cvpUserId :: Lens' CreateVolumePermission (Maybe Text)
data NetworkInterfaceAttachmentChanges

-- | <a>NetworkInterfaceAttachmentChanges</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>niacAttachmentId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>niacDeleteOnTermination</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   </ul>
networkInterfaceAttachmentChanges :: NetworkInterfaceAttachmentChanges

-- | The ID of the network interface attachment.
niacAttachmentId :: Lens' NetworkInterfaceAttachmentChanges (Maybe Text)

-- | Indicates whether the network interface is deleted when the instance
--   is terminated.
niacDeleteOnTermination :: Lens' NetworkInterfaceAttachmentChanges (Maybe Bool)
data RecurringChargeFrequency

-- | Hourly
Hourly :: RecurringChargeFrequency
data DhcpOptions

-- | <a>DhcpOptions</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>doDhcpConfigurations</a> <tt>::</tt>
--   [<a>DhcpConfiguration</a>]</li>
--   <li><a>doDhcpOptionsId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>doTags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   </ul>
dhcpOptions :: DhcpOptions

-- | One or more DHCP options in the set.
doDhcpConfigurations :: Lens' DhcpOptions [DhcpConfiguration]

-- | The ID of the set of DHCP options.
doDhcpOptionsId :: Lens' DhcpOptions (Maybe Text)

-- | Any tags assigned to the DHCP options set.
doTags :: Lens' DhcpOptions [Tag]
data InstanceNetworkInterfaceSpecification

-- | <a>InstanceNetworkInterfaceSpecification</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>inisAssociatePublicIpAddress</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>inisDeleteOnTermination</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>inisDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>inisDeviceIndex</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>inisGroups</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>inisNetworkInterfaceId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>inisPrivateIpAddress</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>inisPrivateIpAddresses</a> <tt>::</tt>
--   [<a>PrivateIpAddressSpecification</a>]</li>
--   <li><a>inisSecondaryPrivateIpAddressCount</a> <tt>::</tt> <a>Maybe</a>
--   <a>Int</a></li>
--   <li><a>inisSubnetId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
instanceNetworkInterfaceSpecification :: InstanceNetworkInterfaceSpecification

-- | Indicates whether to assign a public IP address to an instance you
--   launch in a VPC. The public IP address can only be assigned to a
--   network interface for eth0, and can only be assigned to a new network
--   interface, not an existing one. You cannot specify more than one
--   network interface in the request. If launching into a default subnet,
--   the default value is <tt>true</tt>.
inisAssociatePublicIpAddress :: Lens' InstanceNetworkInterfaceSpecification (Maybe Bool)

-- | If set to <tt>true</tt>, the interface is deleted when the instance is
--   terminated. You can specify <tt>true</tt> only if creating a new
--   network interface when launching an instance.
inisDeleteOnTermination :: Lens' InstanceNetworkInterfaceSpecification (Maybe Bool)

-- | The description of the network interface. Applies only if creating a
--   network interface when launching an instance.
inisDescription :: Lens' InstanceNetworkInterfaceSpecification (Maybe Text)

-- | The index of the device on the instance for the network interface
--   attachment. If you are specifying a network interface in a
--   <tt>RunInstances</tt> request, you must provide the device index.
inisDeviceIndex :: Lens' InstanceNetworkInterfaceSpecification (Maybe Int)

-- | The IDs of the security groups for the network interface. Applies only
--   if creating a network interface when launching an instance.
inisGroups :: Lens' InstanceNetworkInterfaceSpecification [Text]

-- | The ID of the network interface.
inisNetworkInterfaceId :: Lens' InstanceNetworkInterfaceSpecification (Maybe Text)

-- | The private IP address of the network interface. Applies only if
--   creating a network interface when launching an instance.
inisPrivateIpAddress :: Lens' InstanceNetworkInterfaceSpecification (Maybe Text)

-- | One or more private IP addresses to assign to the network interface.
--   Only one private IP address can be designated as primary.
inisPrivateIpAddresses :: Lens' InstanceNetworkInterfaceSpecification [PrivateIpAddressSpecification]

-- | The number of secondary private IP addresses. You can't specify this
--   option and specify more than one private IP address using the private
--   IP addresses option.
inisSecondaryPrivateIpAddressCount :: Lens' InstanceNetworkInterfaceSpecification (Maybe Int)

-- | The ID of the subnet associated with the network string. Applies only
--   if creating a network interface when launching an instance.
inisSubnetId :: Lens' InstanceNetworkInterfaceSpecification (Maybe Text)
data VolumeState

-- | available
VSAvailable :: VolumeState

-- | creating
VSCreating :: VolumeState

-- | deleted
VSDeleted :: VolumeState

-- | deleting
VSDeleting :: VolumeState

-- | error
VSError :: VolumeState

-- | in-use
VSInUse :: VolumeState
data AttributeValue

-- | <a>AttributeValue</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>avValue</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
attributeValue :: AttributeValue

-- | Valid values are case-sensitive and vary by action.
avValue :: Lens' AttributeValue (Maybe Text)
data PrivateIpAddressSpecification

-- | <a>PrivateIpAddressSpecification</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>piasPrimary</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>piasPrivateIpAddress</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
privateIpAddressSpecification :: Text -> PrivateIpAddressSpecification

-- | Indicates whether the private IP address is the primary private IP
--   address. Only one IP address can be designated as primary.
piasPrimary :: Lens' PrivateIpAddressSpecification (Maybe Bool)

-- | The private IP addresses.
piasPrivateIpAddress :: Lens' PrivateIpAddressSpecification Text
data Image

-- | <a>Image</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>iArchitecture</a> <tt>::</tt> <a>ArchitectureValues</a></li>
--   <li><a>iBlockDeviceMappings</a> <tt>::</tt>
--   [<a>BlockDeviceMapping</a>]</li>
--   <li><a>iCreationDate</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iHypervisor</a> <tt>::</tt> <a>HypervisorType</a></li>
--   <li><a>iImageId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>iImageLocation</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>iImageOwnerAlias</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iImageType</a> <tt>::</tt> <a>ImageTypeValues</a></li>
--   <li><a>iKernelId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iOwnerId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>iPlatform</a> <tt>::</tt> <a>Maybe</a>
--   <a>PlatformValues</a></li>
--   <li><a>iProductCodes</a> <tt>::</tt> [<a>ProductCode</a>]</li>
--   <li><a>iPublic</a> <tt>::</tt> <a>Bool</a></li>
--   <li><a>iRamdiskId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iRootDeviceName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iRootDeviceType</a> <tt>::</tt> <a>DeviceType</a></li>
--   <li><a>iSriovNetSupport</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iState</a> <tt>::</tt> <a>ImageState</a></li>
--   <li><a>iStateReason</a> <tt>::</tt> <a>Maybe</a>
--   <a>StateReason</a></li>
--   <li><a>iTags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   <li><a>iVirtualizationType</a> <tt>::</tt>
--   <a>VirtualizationType</a></li>
--   </ul>
image :: Text -> Text -> ImageState -> Text -> Bool -> ArchitectureValues -> ImageTypeValues -> DeviceType -> VirtualizationType -> HypervisorType -> Image

-- | The architecture of the image.
iArchitecture :: Lens' Image ArchitectureValues

-- | Any block device mapping entries.
iBlockDeviceMappings :: Lens' Image [BlockDeviceMapping]

-- | The date and time the image was created.
iCreationDate :: Lens' Image (Maybe Text)

-- | The description of the AMI that was provided during image creation.
iDescription :: Lens' Image (Maybe Text)

-- | The hypervisor type of the image.
iHypervisor :: Lens' Image HypervisorType

-- | The ID of the AMI.
iImageId :: Lens' Image Text

-- | The location of the AMI.
iImageLocation :: Lens' Image Text

-- | The AWS account alias (for example, <tt>amazon</tt>, <tt>self</tt>) or
--   the AWS account ID of the AMI owner.
iImageOwnerAlias :: Lens' Image (Maybe Text)

-- | The type of image.
iImageType :: Lens' Image ImageTypeValues

-- | The kernel associated with the image, if any. Only applicable for
--   machine images.
iKernelId :: Lens' Image (Maybe Text)

-- | The name of the AMI that was provided during image creation.
iName :: Lens' Image (Maybe Text)

-- | The AWS account ID of the image owner.
iOwnerId :: Lens' Image Text

-- | The value is <a>Windows</a> for Windows AMIs; otherwise blank.
iPlatform :: Lens' Image (Maybe PlatformValues)

-- | Any product codes associated with the AMI.
iProductCodes :: Lens' Image [ProductCode]

-- | Indicates whether the image has public launch permissions. The value
--   is <tt>true</tt> if this image has public launch permissions or
--   <tt>false</tt> if it has only implicit and explicit launch
--   permissions.
iPublic :: Lens' Image Bool

-- | The RAM disk associated with the image, if any. Only applicable for
--   machine images.
iRamdiskId :: Lens' Image (Maybe Text)

-- | The device name of the root device (for example, '/dev/sda1' or
--   '/dev/xvda').
iRootDeviceName :: Lens' Image (Maybe Text)

-- | The type of root device used by the AMI. The AMI can use an EBS volume
--   or an instance store volume.
iRootDeviceType :: Lens' Image DeviceType

-- | Specifies whether enhanced networking is enabled.
iSriovNetSupport :: Lens' Image (Maybe Text)

-- | The current state of the AMI. If the state is <tt>available</tt>, the
--   image is successfully registered and can be used to launch an
--   instance.
iState :: Lens' Image ImageState

-- | The reason for the state change.
iStateReason :: Lens' Image (Maybe StateReason)

-- | Any tags assigned to the image.
iTags :: Lens' Image [Tag]

-- | The type of virtualization of the AMI.
iVirtualizationType :: Lens' Image VirtualizationType
data DhcpConfiguration

-- | <a>DhcpConfiguration</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dcKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dcValues</a> <tt>::</tt> [<a>AttributeValue</a>]</li>
--   </ul>
dhcpConfiguration :: DhcpConfiguration

-- | The name of a DHCP option.
dcKey :: Lens' DhcpConfiguration (Maybe Text)

-- | One or more values for the DHCP option.
dcValues :: Lens' DhcpConfiguration [AttributeValue]
data CancelSpotFleetRequestsError

-- | <a>CancelSpotFleetRequestsError</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>csfreCode</a> <tt>::</tt> <a>CancelBatchErrorCode</a></li>
--   <li><a>csfreMessage</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
cancelSpotFleetRequestsError :: CancelBatchErrorCode -> Text -> CancelSpotFleetRequestsError

-- | The error code.
csfreCode :: Lens' CancelSpotFleetRequestsError CancelBatchErrorCode

-- | The description for the error code.
csfreMessage :: Lens' CancelSpotFleetRequestsError Text
data Tag

-- | <a>Tag</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>tagKey</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>tagValue</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
tag :: Text -> Text -> Tag

-- | The key of the tag.
--   
--   Constraints: Tag keys are case-sensitive and accept a maximum of 127
--   Unicode characters. May not begin with 'aws:'
tagKey :: Lens' Tag Text

-- | The value of the tag.
--   
--   Constraints: Tag values are case-sensitive and accept a maximum of 255
--   Unicode characters.
tagValue :: Lens' Tag Text
data AccountAttributeName

-- | default-vpc
DefaultVpc :: AccountAttributeName

-- | supported-platforms
SupportedPlatforms :: AccountAttributeName
data NetworkInterfaceAttachment

-- | <a>NetworkInterfaceAttachment</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>niaAttachTime</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>niaAttachmentId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>niaDeleteOnTermination</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>niaDeviceIndex</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>niaInstanceId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>niaInstanceOwnerId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>niaStatus</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttachmentStatus</a></li>
--   </ul>
networkInterfaceAttachment :: NetworkInterfaceAttachment

-- | The timestamp indicating when the attachment initiated.
niaAttachTime :: Lens' NetworkInterfaceAttachment (Maybe UTCTime)

-- | The ID of the network interface attachment.
niaAttachmentId :: Lens' NetworkInterfaceAttachment (Maybe Text)

-- | Indicates whether the network interface is deleted when the instance
--   is terminated.
niaDeleteOnTermination :: Lens' NetworkInterfaceAttachment (Maybe Bool)

-- | The device index of the network interface attachment on the instance.
niaDeviceIndex :: Lens' NetworkInterfaceAttachment (Maybe Int)

-- | The ID of the instance.
niaInstanceId :: Lens' NetworkInterfaceAttachment (Maybe Text)

-- | The AWS account ID of the owner of the instance.
niaInstanceOwnerId :: Lens' NetworkInterfaceAttachment (Maybe Text)

-- | The attachment state.
niaStatus :: Lens' NetworkInterfaceAttachment (Maybe AttachmentStatus)
data RunInstancesMonitoringEnabled

-- | <a>RunInstancesMonitoringEnabled</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rimeEnabled</a> <tt>::</tt> <a>Bool</a></li>
--   </ul>
runInstancesMonitoringEnabled :: Bool -> RunInstancesMonitoringEnabled

-- | Indicates whether monitoring is enabled for the instance.
rimeEnabled :: Lens' RunInstancesMonitoringEnabled Bool
data VolumeStatusInfo

-- | <a>VolumeStatusInfo</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vsiDetails</a> <tt>::</tt> [<a>VolumeStatusDetails</a>]</li>
--   <li><a>vsiStatus</a> <tt>::</tt> <a>Maybe</a>
--   <a>VolumeStatusInfoStatus</a></li>
--   </ul>
volumeStatusInfo :: VolumeStatusInfo

-- | The details of the volume status.
vsiDetails :: Lens' VolumeStatusInfo [VolumeStatusDetails]

-- | The status of the volume.
vsiStatus :: Lens' VolumeStatusInfo (Maybe VolumeStatusInfoStatus)
data NetworkInterfaceAssociation

-- | <a>NetworkInterfaceAssociation</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>niaAllocationId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>niaAssociationId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>niaIpOwnerId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>niaPublicDnsName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>niaPublicIp</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
networkInterfaceAssociation :: NetworkInterfaceAssociation

-- | The allocation ID.
niaAllocationId :: Lens' NetworkInterfaceAssociation (Maybe Text)

-- | The association ID.
niaAssociationId :: Lens' NetworkInterfaceAssociation (Maybe Text)

-- | The ID of the Elastic IP address owner.
niaIpOwnerId :: Lens' NetworkInterfaceAssociation (Maybe Text)

-- | The public DNS name.
niaPublicDnsName :: Lens' NetworkInterfaceAssociation (Maybe Text)

-- | The address of the Elastic IP address bound to the network interface.
niaPublicIp :: Lens' NetworkInterfaceAssociation (Maybe Text)
data CreateVolumePermissionModifications

-- | <a>CreateVolumePermissionModifications</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cvpmAdd</a> <tt>::</tt> [<a>CreateVolumePermission</a>]</li>
--   <li><a>cvpmRemove</a> <tt>::</tt> [<a>CreateVolumePermission</a>]</li>
--   </ul>
createVolumePermissionModifications :: CreateVolumePermissionModifications

-- | Adds a specific AWS account ID or group to a volume's list of create
--   volume permissions.
cvpmAdd :: Lens' CreateVolumePermissionModifications [CreateVolumePermission]

-- | Removes a specific AWS account ID or group from a volume's list of
--   create volume permissions.
cvpmRemove :: Lens' CreateVolumePermissionModifications [CreateVolumePermission]
data VpcState

-- | available
VpcStateAvailable :: VpcState

-- | pending
VpcStatePending :: VpcState
data ResourceType

-- | customer-gateway
RTCustomerGateway :: ResourceType

-- | dhcp-options
RTDhcpOptions :: ResourceType

-- | image
RTImage :: ResourceType

-- | instance
RTInstance' :: ResourceType

-- | internet-gateway
RTInternetGateway :: ResourceType

-- | network-acl
RTNetworkAcl :: ResourceType

-- | network-interface
RTNetworkInterface :: ResourceType

-- | reserved-instances
RTReservedInstances :: ResourceType

-- | route-table
RTRouteTable :: ResourceType

-- | security-group
RTSecurityGroup :: ResourceType

-- | snapshot
RTSnapshot :: ResourceType

-- | spot-instances-request
RTSpotInstancesRequest :: ResourceType

-- | subnet
RTSubnet :: ResourceType

-- | volume
RTVolume :: ResourceType

-- | vpc
RTVpc :: ResourceType

-- | vpn-connection
RTVpnConnection :: ResourceType

-- | vpn-gateway
RTVpnGateway :: ResourceType
data ReportStatusType

-- | impaired
Impaired :: ReportStatusType

-- | ok
Ok :: ReportStatusType
data CurrencyCodeValues

-- | USD
Usd :: CurrencyCodeValues
data IcmpTypeCode

-- | <a>IcmpTypeCode</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>itcCode</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>itcType</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   </ul>
icmpTypeCode :: IcmpTypeCode

-- | The ICMP type. A value of -1 means all types.
itcCode :: Lens' IcmpTypeCode (Maybe Int)

-- | The ICMP code. A value of -1 means all codes for the specified ICMP
--   type.
itcType :: Lens' IcmpTypeCode (Maybe Int)
data InstanceCount

-- | <a>InstanceCount</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>icInstanceCount</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>icState</a> <tt>::</tt> <a>Maybe</a> <a>ListingState</a></li>
--   </ul>
instanceCount :: InstanceCount

-- | The number of listed Reserved Instances in the state specified by the
--   <tt>state</tt>.
icInstanceCount :: Lens' InstanceCount (Maybe Int)

-- | The states of the listed Reserved Instances.
icState :: Lens' InstanceCount (Maybe ListingState)
data ExportToS3Task

-- | <a>ExportToS3Task</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>etstContainerFormat</a> <tt>::</tt> <a>Maybe</a>
--   <a>ContainerFormat</a></li>
--   <li><a>etstDiskImageFormat</a> <tt>::</tt> <a>Maybe</a>
--   <a>DiskImageFormat</a></li>
--   <li><a>etstS3Bucket</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>etstS3Key</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
exportToS3Task :: ExportToS3Task

-- | The container format used to combine disk images with metadata (such
--   as OVF). If absent, only the disk image is exported.
etstContainerFormat :: Lens' ExportToS3Task (Maybe ContainerFormat)

-- | The format for the exported image.
etstDiskImageFormat :: Lens' ExportToS3Task (Maybe DiskImageFormat)

-- | The S3 bucket for the destination image. The destination bucket must
--   exist and grant WRITE and READ_ACP permissions to the AWS account
--   'vm-import-export@amazon.com'.
etstS3Bucket :: Lens' ExportToS3Task (Maybe Text)

-- | The encryption key for your S3 bucket.
etstS3Key :: Lens' ExportToS3Task (Maybe Text)
data PrefixList

-- | <a>PrefixList</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>plCidrs</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>plPrefixListId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>plPrefixListName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
prefixList :: PrefixList

-- | The IP address range of the AWS service.
plCidrs :: Lens' PrefixList [Text]

-- | The ID of the prefix.
plPrefixListId :: Lens' PrefixList (Maybe Text)

-- | The name of the prefix.
plPrefixListName :: Lens' PrefixList (Maybe Text)
data BlockDeviceMapping

-- | <a>BlockDeviceMapping</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>bdmDeviceName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>bdmEbs</a> <tt>::</tt> <a>Maybe</a> <a>EbsBlockDevice</a></li>
--   <li><a>bdmNoDevice</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>bdmVirtualName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
blockDeviceMapping :: Text -> BlockDeviceMapping

-- | The device name exposed to the instance (for example, '/dev/sdh' or
--   <tt>xvdh</tt>).
bdmDeviceName :: Lens' BlockDeviceMapping Text

-- | Parameters used to automatically set up EBS volumes when the instance
--   is launched.
bdmEbs :: Lens' BlockDeviceMapping (Maybe EbsBlockDevice)

-- | Suppresses the specified device included in the block device mapping
--   of the AMI.
bdmNoDevice :: Lens' BlockDeviceMapping (Maybe Text)

-- | The virtual device name (<tt>ephemeral</tt>N). Instance store volumes
--   are numbered starting from 0. An instance type with 2 available
--   instance store volumes can specify mappings for <tt>ephemeral0</tt>
--   and <tt>ephemeral1</tt>.The number of available instance store volumes
--   depends on the instance type. After you connect to the instance, you
--   must mount the volume.
--   
--   Constraints: For M3 instances, you must specify instance store volumes
--   in the block device mapping for the instance. When you launch an M3
--   instance, we ignore any instance store volumes specified in the block
--   device mapping for the AMI.
bdmVirtualName :: Lens' BlockDeviceMapping (Maybe Text)
data ConversionTask

-- | <a>ConversionTask</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ctConversionTaskId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ctExpirationTime</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ctImportInstance</a> <tt>::</tt> <a>Maybe</a>
--   <a>ImportInstanceTaskDetails</a></li>
--   <li><a>ctImportVolume</a> <tt>::</tt> <a>Maybe</a>
--   <a>ImportVolumeTaskDetails</a></li>
--   <li><a>ctState</a> <tt>::</tt> <a>ConversionTaskState</a></li>
--   <li><a>ctStatusMessage</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ctTags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   </ul>
conversionTask :: Text -> ConversionTaskState -> ConversionTask

-- | The ID of the conversion task.
ctConversionTaskId :: Lens' ConversionTask Text

-- | The time when the task expires. If the upload isn't complete before
--   the expiration time, we automatically cancel the task.
ctExpirationTime :: Lens' ConversionTask (Maybe Text)

-- | If the task is for importing an instance, this contains information
--   about the import instance task.
ctImportInstance :: Lens' ConversionTask (Maybe ImportInstanceTaskDetails)

-- | If the task is for importing a volume, this contains information about
--   the import volume task.
ctImportVolume :: Lens' ConversionTask (Maybe ImportVolumeTaskDetails)

-- | The state of the conversion task.
ctState :: Lens' ConversionTask ConversionTaskState

-- | The status message related to the conversion task.
ctStatusMessage :: Lens' ConversionTask (Maybe Text)

-- | Any tags assigned to the task.
ctTags :: Lens' ConversionTask [Tag]
data AttachmentStatus

-- | attached
Attached :: AttachmentStatus

-- | attaching
Attaching :: AttachmentStatus

-- | detached
Detached :: AttachmentStatus

-- | detaching
Detaching :: AttachmentStatus
data ClassicLinkInstance

-- | <a>ClassicLinkInstance</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cliGroups</a> <tt>::</tt> [<a>GroupIdentifier</a>]</li>
--   <li><a>cliInstanceId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cliTags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   <li><a>cliVpcId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
classicLinkInstance :: ClassicLinkInstance

-- | A list of security groups.
cliGroups :: Lens' ClassicLinkInstance [GroupIdentifier]

-- | The ID of the instance.
cliInstanceId :: Lens' ClassicLinkInstance (Maybe Text)

-- | Any tags assigned to the instance.
cliTags :: Lens' ClassicLinkInstance [Tag]

-- | The ID of the VPC.
cliVpcId :: Lens' ClassicLinkInstance (Maybe Text)
data RouteOrigin

-- | CreateRoute
OriginCreateRoute :: RouteOrigin

-- | CreateRouteTable
OriginCreateRouteTable :: RouteOrigin

-- | EnableVgwRoutePropagation
OriginEnableVgwRoutePropagation :: RouteOrigin
data ListingState

-- | available
LSAvailable :: ListingState

-- | cancelled
LSCancelled :: ListingState

-- | pending
LSPending :: ListingState

-- | sold
LSSold :: ListingState
data SpotPrice

-- | <a>SpotPrice</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>spAvailabilityZone</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>spInstanceType</a> <tt>::</tt> <a>Maybe</a>
--   <a>InstanceType</a></li>
--   <li><a>spProductDescription</a> <tt>::</tt> <a>Maybe</a>
--   <a>RIProductDescription</a></li>
--   <li><a>spSpotPrice</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>spTimestamp</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   </ul>
spotPrice :: SpotPrice

-- | The Availability Zone.
spAvailabilityZone :: Lens' SpotPrice (Maybe Text)

-- | The instance type.
spInstanceType :: Lens' SpotPrice (Maybe InstanceType)

-- | A general description of the AMI.
spProductDescription :: Lens' SpotPrice (Maybe RIProductDescription)

-- | The maximum price (bid) that you are willing to pay for a Spot
--   Instance.
spSpotPrice :: Lens' SpotPrice (Maybe Text)

-- | The date and time the request was created, in UTC format (for example,
--   <i>YYYY</i>-<i>MM</i> -<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
spTimestamp :: Lens' SpotPrice (Maybe UTCTime)
data ActiveInstance

-- | <a>ActiveInstance</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>aiInstanceId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>aiInstanceType</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>aiSpotInstanceRequestId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
activeInstance :: ActiveInstance

-- | The ID of the instance.
aiInstanceId :: Lens' ActiveInstance (Maybe Text)

-- | The instance type.
aiInstanceType :: Lens' ActiveInstance (Maybe Text)

-- | The ID of the Spot Instance request.
aiSpotInstanceRequestId :: Lens' ActiveInstance (Maybe Text)
data SpotFleetRequestConfigData

-- | <a>SpotFleetRequestConfigData</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sfrcdClientToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>sfrcdIamFleetRole</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>sfrcdLaunchSpecifications</a> <tt>::</tt> <a>NonEmpty</a>
--   <a>LaunchSpecification</a></li>
--   <li><a>sfrcdSpotPrice</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>sfrcdTargetCapacity</a> <tt>::</tt> <a>Int</a></li>
--   <li><a>sfrcdTerminateInstancesWithExpiration</a> <tt>::</tt>
--   <a>Maybe</a> <a>Bool</a></li>
--   <li><a>sfrcdValidFrom</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>sfrcdValidUntil</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   </ul>
spotFleetRequestConfigData :: Text -> Int -> Text -> NonEmpty LaunchSpecification -> SpotFleetRequestConfigData

-- | A unique, case-sensitive identifier you provide to ensure idempotency
--   of your listings. This helps avoid duplicate listings. For more
--   information, see <a>Ensuring Idempotency</a>.
sfrcdClientToken :: Lens' SpotFleetRequestConfigData (Maybe Text)

-- | Grants the Spot fleet service permission to terminate instances on
--   your behalf when you cancel a Spot fleet request using
--   <tt>CancelSpotFleetRequests</tt> or when the Spot fleet request
--   expires, if you set <tt>terminateInstancesWithExpiration</tt>.
sfrcdIamFleetRole :: Lens' SpotFleetRequestConfigData Text

-- | Information about the launch specifications for the instances.
sfrcdLaunchSpecifications :: Lens' SpotFleetRequestConfigData (NonEmpty LaunchSpecification)

-- | The maximum hourly price (bid) for any Spot Instance launched to
--   fulfill the request.
sfrcdSpotPrice :: Lens' SpotFleetRequestConfigData Text

-- | The maximum number of Spot Instances to launch.
sfrcdTargetCapacity :: Lens' SpotFleetRequestConfigData Int

-- | Indicates whether running instances should be terminated when the Spot
--   fleet request expires.
sfrcdTerminateInstancesWithExpiration :: Lens' SpotFleetRequestConfigData (Maybe Bool)

-- | The start date and time of the request, in UTC format (for example,
--   <i>YYYY</i>-<i>MM</i>-<i>DD</i> T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). The
--   default is to start fulfilling the request immediately.
sfrcdValidFrom :: Lens' SpotFleetRequestConfigData (Maybe UTCTime)

-- | The end date and time of the request, in UTC format (for example,
--   <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). At
--   this point, no new Spot Instance requests are placed or enabled to
--   fulfill the request.
sfrcdValidUntil :: Lens' SpotFleetRequestConfigData (Maybe UTCTime)
data InstanceMonitoring

-- | <a>InstanceMonitoring</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>imInstanceId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>imMonitoring</a> <tt>::</tt> <a>Maybe</a>
--   <a>Monitoring</a></li>
--   </ul>
instanceMonitoring :: InstanceMonitoring

-- | The ID of the instance.
imInstanceId :: Lens' InstanceMonitoring (Maybe Text)

-- | The monitoring information.
imMonitoring :: Lens' InstanceMonitoring (Maybe Monitoring)
data PriceScheduleSpecification

-- | <a>PriceScheduleSpecification</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pssCurrencyCode</a> <tt>::</tt> <a>Maybe</a>
--   <a>CurrencyCodeValues</a></li>
--   <li><a>pssPrice</a> <tt>::</tt> <a>Maybe</a> <a>Double</a></li>
--   <li><a>pssTerm</a> <tt>::</tt> <a>Maybe</a> <a>Integer</a></li>
--   </ul>
priceScheduleSpecification :: PriceScheduleSpecification

-- | The currency for transacting the Reserved Instance resale. At this
--   time, the only supported currency is <tt>USD</tt>.
pssCurrencyCode :: Lens' PriceScheduleSpecification (Maybe CurrencyCodeValues)

-- | The fixed price for the term.
pssPrice :: Lens' PriceScheduleSpecification (Maybe Double)

-- | The number of months remaining in the reservation. For example, 2 is
--   the second to the last month before the capacity reservation expires.
pssTerm :: Lens' PriceScheduleSpecification (Maybe Integer)
data SpotFleetRequestConfig

-- | <a>SpotFleetRequestConfig</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sfrcSpotFleetRequestConfig</a> <tt>::</tt>
--   <a>SpotFleetRequestConfigData</a></li>
--   <li><a>sfrcSpotFleetRequestId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>sfrcSpotFleetRequestState</a> <tt>::</tt>
--   <a>BatchState</a></li>
--   </ul>
spotFleetRequestConfig :: Text -> BatchState -> SpotFleetRequestConfigData -> SpotFleetRequestConfig

-- | Information about the configuration of the Spot fleet request.
sfrcSpotFleetRequestConfig :: Lens' SpotFleetRequestConfig SpotFleetRequestConfigData

-- | The ID of the Spot fleet request.
sfrcSpotFleetRequestId :: Lens' SpotFleetRequestConfig Text

-- | The state of the Spot fleet request.
sfrcSpotFleetRequestState :: Lens' SpotFleetRequestConfig BatchState
data SpotInstanceStatus

-- | <a>SpotInstanceStatus</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sisCode</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>sisMessage</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>sisUpdateTime</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   </ul>
spotInstanceStatus :: SpotInstanceStatus

-- | The status code.
sisCode :: Lens' SpotInstanceStatus (Maybe Text)

-- | The description for the status code.
sisMessage :: Lens' SpotInstanceStatus (Maybe Text)

-- | The date and time of the most recent status update, in UTC format (for
--   example,
--   <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
sisUpdateTime :: Lens' SpotInstanceStatus (Maybe UTCTime)
data SnapshotTaskDetail

-- | <a>SnapshotTaskDetail</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>stdDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>stdDiskImageSize</a> <tt>::</tt> <a>Maybe</a>
--   <a>Double</a></li>
--   <li><a>stdFormat</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>stdProgress</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>stdSnapshotId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>stdStatus</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>stdStatusMessage</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>stdUrl</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>stdUserBucket</a> <tt>::</tt> <a>Maybe</a>
--   <a>UserBucketDetails</a></li>
--   </ul>
snapshotTaskDetail :: SnapshotTaskDetail

-- | The description of the snapshot.
stdDescription :: Lens' SnapshotTaskDetail (Maybe Text)

-- | The size of the disk in the snapshot, in GiB.
stdDiskImageSize :: Lens' SnapshotTaskDetail (Maybe Double)

-- | The format of the disk image from which the snapshot is created.
stdFormat :: Lens' SnapshotTaskDetail (Maybe Text)

-- | The percentage of completion for the import snapshot task.
stdProgress :: Lens' SnapshotTaskDetail (Maybe Text)

-- | The snapshot ID of the disk being imported.
stdSnapshotId :: Lens' SnapshotTaskDetail (Maybe Text)

-- | A brief status for the import snapshot task.
stdStatus :: Lens' SnapshotTaskDetail (Maybe Text)

-- | A detailed status message for the import snapshot task.
stdStatusMessage :: Lens' SnapshotTaskDetail (Maybe Text)

-- | The URL of the disk image from which the snapshot is created.
stdUrl :: Lens' SnapshotTaskDetail (Maybe Text)

-- | The S3 bucket for the disk image.
stdUserBucket :: Lens' SnapshotTaskDetail (Maybe UserBucketDetails)
data AvailabilityZoneState

-- | available
AZSAvailable :: AvailabilityZoneState
data SpotInstanceRequest

-- | <a>SpotInstanceRequest</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>siAvailabilityZoneGroup</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>siCreateTime</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>siFault</a> <tt>::</tt> <a>Maybe</a>
--   <a>SpotInstanceStateFault</a></li>
--   <li><a>siInstanceId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>siLaunchGroup</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>siLaunchSpecification</a> <tt>::</tt> <a>Maybe</a>
--   <a>LaunchSpecification</a></li>
--   <li><a>siLaunchedAvailabilityZone</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>siProductDescription</a> <tt>::</tt> <a>Maybe</a>
--   <a>RIProductDescription</a></li>
--   <li><a>siSpotInstanceRequestId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>siSpotPrice</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>siState</a> <tt>::</tt> <a>Maybe</a>
--   <a>SpotInstanceState</a></li>
--   <li><a>siStatus</a> <tt>::</tt> <a>Maybe</a>
--   <a>SpotInstanceStatus</a></li>
--   <li><a>siTags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   <li><a>siType</a> <tt>::</tt> <a>Maybe</a>
--   <a>SpotInstanceType</a></li>
--   <li><a>siValidFrom</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>siValidUntil</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   </ul>
spotInstanceRequest :: SpotInstanceRequest

-- | The Availability Zone group. If you specify the same Availability Zone
--   group for all Spot Instance requests, all Spot Instances are launched
--   in the same Availability Zone.
siAvailabilityZoneGroup :: Lens' SpotInstanceRequest (Maybe Text)

-- | The date and time when the Spot Instance request was created, in UTC
--   format (for example,
--   <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
siCreateTime :: Lens' SpotInstanceRequest (Maybe UTCTime)

-- | The fault codes for the Spot Instance request, if any.
siFault :: Lens' SpotInstanceRequest (Maybe SpotInstanceStateFault)

-- | The instance ID, if an instance has been launched to fulfill the Spot
--   Instance request.
siInstanceId :: Lens' SpotInstanceRequest (Maybe Text)

-- | The instance launch group. Launch groups are Spot Instances that
--   launch together and terminate together.
siLaunchGroup :: Lens' SpotInstanceRequest (Maybe Text)

-- | Additional information for launching instances.
siLaunchSpecification :: Lens' SpotInstanceRequest (Maybe LaunchSpecification)

-- | The Availability Zone in which the bid is launched.
siLaunchedAvailabilityZone :: Lens' SpotInstanceRequest (Maybe Text)

-- | The product description associated with the Spot Instance.
siProductDescription :: Lens' SpotInstanceRequest (Maybe RIProductDescription)

-- | The ID of the Spot Instance request.
siSpotInstanceRequestId :: Lens' SpotInstanceRequest (Maybe Text)

-- | The maximum hourly price (bid) for any Spot Instance launched to
--   fulfill the request.
siSpotPrice :: Lens' SpotInstanceRequest (Maybe Text)

-- | The state of the Spot Instance request. Spot bid status information
--   can help you track your Spot Instance requests. For more information,
--   see <a>Spot BidStatus</a> in the <i>Amazon Elastic Compute Cloud User
--   Guide</i>.
siState :: Lens' SpotInstanceRequest (Maybe SpotInstanceState)

-- | The status code and status message describing the Spot Instance
--   request.
siStatus :: Lens' SpotInstanceRequest (Maybe SpotInstanceStatus)

-- | Any tags assigned to the resource.
siTags :: Lens' SpotInstanceRequest [Tag]

-- | The Spot Instance request type.
siType :: Lens' SpotInstanceRequest (Maybe SpotInstanceType)

-- | The start date of the request, in UTC format (for example,
--   <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i> Z). If
--   this is a one-time request, the request becomes active at this date
--   and time and remains active until all instances launch, the request
--   expires, or the request is canceled. If the request is persistent, the
--   request becomes active at this date and time and remains active until
--   it expires or is canceled.
siValidFrom :: Lens' SpotInstanceRequest (Maybe UTCTime)

-- | The end date of the request, in UTC format (for example,
--   <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). If
--   this is a one-time request, the request remains active until all
--   instances launch, the request is canceled, or this date is reached. If
--   the request is persistent, it remains active until it is canceled or
--   this date is reached.
siValidUntil :: Lens' SpotInstanceRequest (Maybe UTCTime)
data LaunchSpecification

-- | <a>LaunchSpecification</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lsAddressingType</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lsBlockDeviceMappings</a> <tt>::</tt>
--   [<a>BlockDeviceMapping</a>]</li>
--   <li><a>lsEbsOptimized</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>lsIamInstanceProfile</a> <tt>::</tt> <a>Maybe</a>
--   <a>IamInstanceProfileSpecification</a></li>
--   <li><a>lsImageId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lsInstanceType</a> <tt>::</tt> <a>Maybe</a>
--   <a>InstanceType</a></li>
--   <li><a>lsKernelId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lsKeyName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lsMonitoring</a> <tt>::</tt> <a>Maybe</a>
--   <a>RunInstancesMonitoringEnabled</a></li>
--   <li><a>lsNetworkInterfaces</a> <tt>::</tt>
--   [<a>InstanceNetworkInterfaceSpecification</a>]</li>
--   <li><a>lsPlacement</a> <tt>::</tt> <a>Maybe</a>
--   <a>SpotPlacement</a></li>
--   <li><a>lsRamdiskId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lsSecurityGroups</a> <tt>::</tt> [<a>GroupIdentifier</a>]</li>
--   <li><a>lsSubnetId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lsUserData</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
launchSpecification :: LaunchSpecification

-- | Deprecated.
lsAddressingType :: Lens' LaunchSpecification (Maybe Text)

-- | One or more block device mapping entries.
lsBlockDeviceMappings :: Lens' LaunchSpecification [BlockDeviceMapping]

-- | Indicates whether the instance is optimized for EBS I/O. This
--   optimization provides dedicated throughput to Amazon EBS and an
--   optimized configuration stack to provide optimal EBS I/O performance.
--   This optimization isn't available with all instance types. Additional
--   usage charges apply when using an EBS Optimized instance.
--   
--   Default: <tt>false</tt>
lsEbsOptimized :: Lens' LaunchSpecification (Maybe Bool)

-- | The IAM instance profile.
lsIamInstanceProfile :: Lens' LaunchSpecification (Maybe IamInstanceProfileSpecification)

-- | The ID of the AMI.
lsImageId :: Lens' LaunchSpecification (Maybe Text)

-- | The instance type.
lsInstanceType :: Lens' LaunchSpecification (Maybe InstanceType)

-- | The ID of the kernel.
lsKernelId :: Lens' LaunchSpecification (Maybe Text)

-- | The name of the key pair.
lsKeyName :: Lens' LaunchSpecification (Maybe Text)
lsMonitoring :: Lens' LaunchSpecification (Maybe RunInstancesMonitoringEnabled)

-- | One or more network interfaces.
lsNetworkInterfaces :: Lens' LaunchSpecification [InstanceNetworkInterfaceSpecification]

-- | The placement information for the instance.
lsPlacement :: Lens' LaunchSpecification (Maybe SpotPlacement)

-- | The ID of the RAM disk.
lsRamdiskId :: Lens' LaunchSpecification (Maybe Text)

-- | One or more security groups. To request an instance in a nondefault
--   VPC, you must specify the ID of the security group. To request an
--   instance in EC2-Classic or a default VPC, you can specify the name or
--   the ID of the security group.
lsSecurityGroups :: Lens' LaunchSpecification [GroupIdentifier]

-- | The ID of the subnet in which to launch the instance.
lsSubnetId :: Lens' LaunchSpecification (Maybe Text)

-- | The Base64-encoded MIME user data to make available to the instances.
lsUserData :: Lens' LaunchSpecification (Maybe Text)
data VolumeStatusEvent

-- | <a>VolumeStatusEvent</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vseDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>vseEventId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>vseEventType</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>vseNotAfter</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>vseNotBefore</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   </ul>
volumeStatusEvent :: VolumeStatusEvent

-- | A description of the event.
vseDescription :: Lens' VolumeStatusEvent (Maybe Text)

-- | The ID of this event.
vseEventId :: Lens' VolumeStatusEvent (Maybe Text)

-- | The type of this event.
vseEventType :: Lens' VolumeStatusEvent (Maybe Text)

-- | The latest end time of the event.
vseNotAfter :: Lens' VolumeStatusEvent (Maybe UTCTime)

-- | The earliest start time of the event.
vseNotBefore :: Lens' VolumeStatusEvent (Maybe UTCTime)
data Volume

-- | <a>Volume</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vAttachments</a> <tt>::</tt> [<a>VolumeAttachment</a>]</li>
--   <li><a>vAvailabilityZone</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>vCreateTime</a> <tt>::</tt> <a>UTCTime</a></li>
--   <li><a>vEncrypted</a> <tt>::</tt> <a>Bool</a></li>
--   <li><a>vIops</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>vKmsKeyId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>vSize</a> <tt>::</tt> <a>Int</a></li>
--   <li><a>vSnapshotId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>vState</a> <tt>::</tt> <a>VolumeState</a></li>
--   <li><a>vTags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   <li><a>vVolumeId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>vVolumeType</a> <tt>::</tt> <a>VolumeType</a></li>
--   </ul>
volume :: Text -> Int -> Text -> Text -> VolumeState -> UTCTime -> VolumeType -> Bool -> Volume

-- | Information about the volume attachments.
vAttachments :: Lens' Volume [VolumeAttachment]

-- | The Availability Zone for the volume.
vAvailabilityZone :: Lens' Volume Text

-- | The time stamp when volume creation was initiated.
vCreateTime :: Lens' Volume UTCTime

-- | Indicates whether the volume will be encrypted.
vEncrypted :: Lens' Volume Bool

-- | The number of I/O operations per second (IOPS) that the volume
--   supports. For Provisioned IOPS (SSD) volumes, this represents the
--   number of IOPS that are provisioned for the volume. For General
--   Purpose (SSD) volumes, this represents the baseline performance of the
--   volume and the rate at which the volume accumulates I/O credits for
--   bursting. For more information on General Purpose (SSD) baseline
--   performance, I<i>O credits, and bursting, see
--   &lt;http:</i><i>docs.aws.amazon.com</i>AWSEC2<i>latest</i>UserGuide<i>EBSVolumeTypes.html
--   Amazon EBSVolume Types&gt; in the </i>Amazon Elastic Compute Cloud
--   User Guide/.
--   
--   Constraint: Range is 100 to 20000 for Provisioned IOPS (SSD) volumes
--   and 3 to 10000 for General Purpose (SSD) volumes.
--   
--   Condition: This parameter is required for requests to create
--   <tt>io1</tt> volumes; it is not used in requests to create
--   <tt>standard</tt> or <tt>gp2</tt> volumes.
vIops :: Lens' Volume (Maybe Int)

-- | The full ARN of the AWS Key Management Service (KMS) master key that
--   was used to protect the volume encryption key for the volume.
vKmsKeyId :: Lens' Volume (Maybe Text)

-- | The size of the volume, in GiBs.
vSize :: Lens' Volume Int

-- | The snapshot from which the volume was created, if applicable.
vSnapshotId :: Lens' Volume Text

-- | The volume state.
vState :: Lens' Volume VolumeState

-- | Any tags assigned to the volume.
vTags :: Lens' Volume [Tag]

-- | The ID of the volume.
vVolumeId :: Lens' Volume Text

-- | The volume type. This can be <tt>gp2</tt> for General Purpose (SSD)
--   volumes, <tt>io1</tt> for Provisioned IOPS (SSD) volumes, or
--   <tt>standard</tt> for Magnetic volumes.
vVolumeType :: Lens' Volume VolumeType
data Reservation

-- | <a>Reservation</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rGroups</a> <tt>::</tt> [<a>GroupIdentifier</a>]</li>
--   <li><a>rInstances</a> <tt>::</tt> [<a>Instance</a>]</li>
--   <li><a>rOwnerId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rRequesterId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rReservationId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
reservation :: Text -> Text -> Reservation

-- | One or more security groups.
rGroups :: Lens' Reservation [GroupIdentifier]

-- | One or more instances.
rInstances :: Lens' Reservation [Instance]

-- | The ID of the AWS account that owns the reservation.
rOwnerId :: Lens' Reservation Text

-- | The ID of the requester that launched the instances on your behalf
--   (for example, AWS Management Console or Auto Scaling).
rRequesterId :: Lens' Reservation (Maybe Text)

-- | The ID of the reservation.
rReservationId :: Lens' Reservation Text
data ImportInstanceVolumeDetailItem

-- | <a>ImportInstanceVolumeDetailItem</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>iivdiAvailabilityZone</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>iivdiBytesConverted</a> <tt>::</tt> <a>Integer</a></li>
--   <li><a>iivdiDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iivdiImage</a> <tt>::</tt> <a>DiskImageDescription</a></li>
--   <li><a>iivdiStatus</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>iivdiStatusMessage</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>iivdiVolume</a> <tt>::</tt>
--   <a>DiskImageVolumeDescription</a></li>
--   </ul>
importInstanceVolumeDetailItem :: Integer -> Text -> DiskImageDescription -> DiskImageVolumeDescription -> Text -> ImportInstanceVolumeDetailItem

-- | The Availability Zone where the resulting instance will reside.
iivdiAvailabilityZone :: Lens' ImportInstanceVolumeDetailItem Text

-- | The number of bytes converted so far.
iivdiBytesConverted :: Lens' ImportInstanceVolumeDetailItem Integer

-- | A description of the task.
iivdiDescription :: Lens' ImportInstanceVolumeDetailItem (Maybe Text)

-- | The image.
iivdiImage :: Lens' ImportInstanceVolumeDetailItem DiskImageDescription

-- | The status of the import of this particular disk image.
iivdiStatus :: Lens' ImportInstanceVolumeDetailItem Text

-- | The status information or errors related to the disk image.
iivdiStatusMessage :: Lens' ImportInstanceVolumeDetailItem (Maybe Text)

-- | The volume.
iivdiVolume :: Lens' ImportInstanceVolumeDetailItem DiskImageVolumeDescription
data SummaryStatus

-- | impaired
SSImpaired :: SummaryStatus

-- | insufficient-data
SSInsufficientData :: SummaryStatus

-- | not-applicable
SSNotApplicable :: SummaryStatus

-- | ok
SSOk :: SummaryStatus
data ReservedInstancesModification

-- | <a>ReservedInstancesModification</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rimClientToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rimCreateDate</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>rimEffectiveDate</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>rimModificationResults</a> <tt>::</tt>
--   [<a>ReservedInstancesModificationResult</a>]</li>
--   <li><a>rimReservedInstancesIds</a> <tt>::</tt>
--   [<a>ReservedInstancesId</a>]</li>
--   <li><a>rimReservedInstancesModificationId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>rimStatus</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rimStatusMessage</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rimUpdateDate</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   </ul>
reservedInstancesModification :: ReservedInstancesModification

-- | A unique, case-sensitive key supplied by the client to ensure that the
--   request is idempotent. For more information, see <a>Ensuring
--   Idempotency</a>.
rimClientToken :: Lens' ReservedInstancesModification (Maybe Text)

-- | The time when the modification request was created.
rimCreateDate :: Lens' ReservedInstancesModification (Maybe UTCTime)

-- | The time for the modification to become effective.
rimEffectiveDate :: Lens' ReservedInstancesModification (Maybe UTCTime)

-- | Contains target configurations along with their corresponding new
--   Reserved Instance IDs.
rimModificationResults :: Lens' ReservedInstancesModification [ReservedInstancesModificationResult]

-- | The IDs of one or more Reserved Instances.
rimReservedInstancesIds :: Lens' ReservedInstancesModification [ReservedInstancesId]

-- | A unique ID for the Reserved Instance modification.
rimReservedInstancesModificationId :: Lens' ReservedInstancesModification (Maybe Text)

-- | The status of the Reserved Instances modification request.
rimStatus :: Lens' ReservedInstancesModification (Maybe Text)

-- | The reason for the status.
rimStatusMessage :: Lens' ReservedInstancesModification (Maybe Text)

-- | The time when the modification request was last updated.
rimUpdateDate :: Lens' ReservedInstancesModification (Maybe UTCTime)
data RuleAction

-- | allow
Allow :: RuleAction

-- | deny
Deny :: RuleAction
data BatchState

-- | active
Active :: BatchState

-- | cancelled
Cancelled :: BatchState

-- | cancelled_running
CancelledRunning :: BatchState

-- | cancelled_terminating
CancelledTerminating :: BatchState

-- | failed
Failed :: BatchState

-- | submitted
Submitted :: BatchState
data NetworkInterface

-- | <a>NetworkInterface</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>niAssociation</a> <tt>::</tt> <a>Maybe</a>
--   <a>NetworkInterfaceAssociation</a></li>
--   <li><a>niAttachment</a> <tt>::</tt> <a>Maybe</a>
--   <a>NetworkInterfaceAttachment</a></li>
--   <li><a>niAvailabilityZone</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>niDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>niGroups</a> <tt>::</tt> [<a>GroupIdentifier</a>]</li>
--   <li><a>niMacAddress</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>niNetworkInterfaceId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>niOwnerId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>niPrivateDnsName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>niPrivateIpAddress</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>niPrivateIpAddresses</a> <tt>::</tt>
--   [<a>NetworkInterfacePrivateIpAddress</a>]</li>
--   <li><a>niRequesterId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>niRequesterManaged</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>niSourceDestCheck</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>niStatus</a> <tt>::</tt> <a>Maybe</a>
--   <a>NetworkInterfaceStatus</a></li>
--   <li><a>niSubnetId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>niTagSet</a> <tt>::</tt> [<a>Tag</a>]</li>
--   <li><a>niVpcId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
networkInterface :: NetworkInterface

-- | The association information for an Elastic IP associated with the
--   network interface.
niAssociation :: Lens' NetworkInterface (Maybe NetworkInterfaceAssociation)

-- | The network interface attachment.
niAttachment :: Lens' NetworkInterface (Maybe NetworkInterfaceAttachment)

-- | The Availability Zone.
niAvailabilityZone :: Lens' NetworkInterface (Maybe Text)

-- | A description.
niDescription :: Lens' NetworkInterface (Maybe Text)

-- | Any security groups for the network interface.
niGroups :: Lens' NetworkInterface [GroupIdentifier]

-- | The MAC address.
niMacAddress :: Lens' NetworkInterface (Maybe Text)

-- | The ID of the network interface.
niNetworkInterfaceId :: Lens' NetworkInterface (Maybe Text)

-- | The AWS account ID of the owner of the network interface.
niOwnerId :: Lens' NetworkInterface (Maybe Text)

-- | The private DNS name.
niPrivateDnsName :: Lens' NetworkInterface (Maybe Text)

-- | The IP address of the network interface within the subnet.
niPrivateIpAddress :: Lens' NetworkInterface (Maybe Text)

-- | The private IP addresses associated with the network interface.
niPrivateIpAddresses :: Lens' NetworkInterface [NetworkInterfacePrivateIpAddress]

-- | The ID of the entity that launched the instance on your behalf (for
--   example, AWS Management Console or Auto Scaling).
niRequesterId :: Lens' NetworkInterface (Maybe Text)

-- | Indicates whether the network interface is being managed by AWS.
niRequesterManaged :: Lens' NetworkInterface (Maybe Bool)

-- | Indicates whether traffic to or from the instance is validated.
niSourceDestCheck :: Lens' NetworkInterface (Maybe Bool)

-- | The status of the network interface.
niStatus :: Lens' NetworkInterface (Maybe NetworkInterfaceStatus)

-- | The ID of the subnet.
niSubnetId :: Lens' NetworkInterface (Maybe Text)

-- | Any tags assigned to the network interface.
niTagSet :: Lens' NetworkInterface [Tag]

-- | The ID of the VPC.
niVpcId :: Lens' NetworkInterface (Maybe Text)
data TelemetryStatus

-- | DOWN
Down :: TelemetryStatus

-- | UP
Up :: TelemetryStatus
data Subnet

-- | <a>Subnet</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>s1AvailabilityZone</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>s1AvailableIpAddressCount</a> <tt>::</tt> <a>Int</a></li>
--   <li><a>s1CidrBlock</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>s1DefaultForAz</a> <tt>::</tt> <a>Bool</a></li>
--   <li><a>s1MapPublicIpOnLaunch</a> <tt>::</tt> <a>Bool</a></li>
--   <li><a>s1State</a> <tt>::</tt> <a>SubnetState</a></li>
--   <li><a>s1SubnetId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>s1Tags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   <li><a>s1VpcId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
subnet :: Text -> SubnetState -> Text -> Text -> Int -> Text -> Bool -> Bool -> Subnet

-- | The Availability Zone of the subnet.
s1AvailabilityZone :: Lens' Subnet Text

-- | The number of unused IP addresses in the subnet. Note that the IP
--   addresses for any stopped instances are considered unavailable.
s1AvailableIpAddressCount :: Lens' Subnet Int

-- | The CIDR block assigned to the subnet.
s1CidrBlock :: Lens' Subnet Text

-- | Indicates whether this is the default subnet for the Availability
--   Zone.
s1DefaultForAz :: Lens' Subnet Bool

-- | Indicates whether instances launched in this subnet receive a public
--   IP address.
s1MapPublicIpOnLaunch :: Lens' Subnet Bool

-- | The current state of the subnet.
s1State :: Lens' Subnet SubnetState

-- | The ID of the subnet.
s1SubnetId :: Lens' Subnet Text

-- | Any tags assigned to the subnet.
s1Tags :: Lens' Subnet [Tag]

-- | The ID of the VPC the subnet is in.
s1VpcId :: Lens' Subnet Text
data KeyPairInfo

-- | <a>KeyPairInfo</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>kpiKeyFingerprint</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>kpiKeyName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
keyPairInfo :: KeyPairInfo

-- | If you used <tt>CreateKeyPair</tt> to create the key pair, this is the
--   SHA-1 digest of the DER encoded private key. If you used
--   <tt>ImportKeyPair</tt> to provide AWS the public key, this is the MD5
--   public key fingerprint as specified in section 4 of RFC4716.
kpiKeyFingerprint :: Lens' KeyPairInfo (Maybe Text)

-- | The name of the key pair.
kpiKeyName :: Lens' KeyPairInfo (Maybe Text)
data LaunchPermissionModifications

-- | <a>LaunchPermissionModifications</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lpmAdd</a> <tt>::</tt> [<a>LaunchPermission</a>]</li>
--   <li><a>lpmRemove</a> <tt>::</tt> [<a>LaunchPermission</a>]</li>
--   </ul>
launchPermissionModifications :: LaunchPermissionModifications

-- | The AWS account ID to add to the list of launch permissions for the
--   AMI.
lpmAdd :: Lens' LaunchPermissionModifications [LaunchPermission]

-- | The AWS account ID to remove from the list of launch permissions for
--   the AMI.
lpmRemove :: Lens' LaunchPermissionModifications [LaunchPermission]
data SnapshotState

-- | completed
SSCompleted :: SnapshotState

-- | error
SSError :: SnapshotState

-- | pending
SSPending :: SnapshotState
data InstanceNetworkInterfaceAssociation

-- | <a>InstanceNetworkInterfaceAssociation</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>iniaIpOwnerId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iniaPublicDnsName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iniaPublicIp</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
instanceNetworkInterfaceAssociation :: InstanceNetworkInterfaceAssociation

-- | The ID of the owner of the Elastic IP address.
iniaIpOwnerId :: Lens' InstanceNetworkInterfaceAssociation (Maybe Text)

-- | The public DNS name.
iniaPublicDnsName :: Lens' InstanceNetworkInterfaceAssociation (Maybe Text)

-- | The public IP address or Elastic IP address bound to the network
--   interface.
iniaPublicIp :: Lens' InstanceNetworkInterfaceAssociation (Maybe Text)
data DiskImageDetail

-- | <a>DiskImageDetail</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>didBytes</a> <tt>::</tt> <a>Integer</a></li>
--   <li><a>didFormat</a> <tt>::</tt> <a>DiskImageFormat</a></li>
--   <li><a>didImportManifestUrl</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
diskImageDetail :: DiskImageFormat -> Integer -> Text -> DiskImageDetail

-- | The size of the disk image, in GiB.
didBytes :: Lens' DiskImageDetail Integer

-- | The disk image format.
didFormat :: Lens' DiskImageDetail DiskImageFormat

-- | A presigned URL for the import manifest stored in Amazon S3 and
--   presented here as an Amazon S3 presigned URL. For information about
--   creating a presigned URL for an Amazon S3 object, read the "Query
--   String Request Authentication Alternative" section of the
--   <a>Authenticating REST Requests</a> topic in the <i>Amazon Simple
--   Storage Service Developer Guide</i>.
didImportManifestUrl :: Lens' DiskImageDetail Text
data InstancePrivateIpAddress

-- | <a>InstancePrivateIpAddress</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ipiaAssociation</a> <tt>::</tt> <a>Maybe</a>
--   <a>InstanceNetworkInterfaceAssociation</a></li>
--   <li><a>ipiaPrimary</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>ipiaPrivateDnsName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>ipiaPrivateIpAddress</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
instancePrivateIpAddress :: InstancePrivateIpAddress

-- | The association information for an Elastic IP address for the network
--   interface.
ipiaAssociation :: Lens' InstancePrivateIpAddress (Maybe InstanceNetworkInterfaceAssociation)

-- | Indicates whether this IP address is the primary private IP address of
--   the network interface.
ipiaPrimary :: Lens' InstancePrivateIpAddress (Maybe Bool)

-- | The private DNS name.
ipiaPrivateDnsName :: Lens' InstancePrivateIpAddress (Maybe Text)

-- | The private IP address of the network interface.
ipiaPrivateIpAddress :: Lens' InstancePrivateIpAddress (Maybe Text)
data CancelledSpotInstanceRequest

-- | <a>CancelledSpotInstanceRequest</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>csiSpotInstanceRequestId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>csiState</a> <tt>::</tt> <a>Maybe</a>
--   <a>CancelSpotInstanceRequestState</a></li>
--   </ul>
cancelledSpotInstanceRequest :: CancelledSpotInstanceRequest

-- | The ID of the Spot Instance request.
csiSpotInstanceRequestId :: Lens' CancelledSpotInstanceRequest (Maybe Text)

-- | The state of the Spot Instance request.
csiState :: Lens' CancelledSpotInstanceRequest (Maybe CancelSpotInstanceRequestState)
data VpnConnectionOptionsSpecification

-- | <a>VpnConnectionOptionsSpecification</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vcosStaticRoutesOnly</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   </ul>
vpnConnectionOptionsSpecification :: VpnConnectionOptionsSpecification

-- | Indicates whether the VPN connection uses static routes only. Static
--   routes must be used for devices that don't support BGP.
vcosStaticRoutesOnly :: Lens' VpnConnectionOptionsSpecification (Maybe Bool)
data Address

-- | <a>Address</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>aAllocationId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>aAssociationId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>aDomain</a> <tt>::</tt> <a>Maybe</a> <a>DomainType</a></li>
--   <li><a>aInstanceId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>aNetworkInterfaceId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>aNetworkInterfaceOwnerId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>aPrivateIpAddress</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>aPublicIp</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
address :: Address

-- | The ID representing the allocation of the address for use with
--   EC2-VPC.
aAllocationId :: Lens' Address (Maybe Text)

-- | The ID representing the association of the address with an instance in
--   a VPC.
aAssociationId :: Lens' Address (Maybe Text)

-- | Indicates whether this Elastic IP address is for use with instances in
--   EC2-Classic (<tt>standard</tt>) or instances in a VPC (<a>vpc</a>).
aDomain :: Lens' Address (Maybe DomainType)

-- | The ID of the instance that the address is associated with (if any).
aInstanceId :: Lens' Address (Maybe Text)

-- | The ID of the network interface.
aNetworkInterfaceId :: Lens' Address (Maybe Text)

-- | The ID of the AWS account that owns the network interface.
aNetworkInterfaceOwnerId :: Lens' Address (Maybe Text)

-- | The private IP address associated with the Elastic IP address.
aPrivateIpAddress :: Lens' Address (Maybe Text)

-- | The Elastic IP address.
aPublicIp :: Lens' Address (Maybe Text)
data VolumeAttachmentState

-- | attached
VASAttached :: VolumeAttachmentState

-- | attaching
VASAttaching :: VolumeAttachmentState

-- | detached
VASDetached :: VolumeAttachmentState

-- | detaching
VASDetaching :: VolumeAttachmentState
data MovingAddressStatus

-- | <a>MovingAddressStatus</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>masMoveStatus</a> <tt>::</tt> <a>Maybe</a>
--   <a>MoveStatus</a></li>
--   <li><a>masPublicIp</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
movingAddressStatus :: MovingAddressStatus

-- | The status of the Elastic IP address that's being moved to the EC2-VPC
--   platform, or restored to the EC2-Classic platform.
masMoveStatus :: Lens' MovingAddressStatus (Maybe MoveStatus)

-- | The Elastic IP address.
masPublicIp :: Lens' MovingAddressStatus (Maybe Text)
data LaunchPermission

-- | <a>LaunchPermission</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lpGroup</a> <tt>::</tt> <a>Maybe</a>
--   <a>PermissionGroup</a></li>
--   <li><a>lpUserId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
launchPermission :: LaunchPermission

-- | The name of the group.
lpGroup :: Lens' LaunchPermission (Maybe PermissionGroup)

-- | The AWS account ID.
lpUserId :: Lens' LaunchPermission (Maybe Text)
data RouteState

-- | active
RSActive :: RouteState

-- | blackhole
RSBlackhole :: RouteState
data RouteTableAssociation

-- | <a>RouteTableAssociation</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rtaMain</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>rtaRouteTableAssociationId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>rtaRouteTableId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rtaSubnetId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
routeTableAssociation :: RouteTableAssociation

-- | Indicates whether this is the main route table.
rtaMain :: Lens' RouteTableAssociation (Maybe Bool)

-- | The ID of the association between a route table and a subnet.
rtaRouteTableAssociationId :: Lens' RouteTableAssociation (Maybe Text)

-- | The ID of the route table.
rtaRouteTableId :: Lens' RouteTableAssociation (Maybe Text)

-- | The ID of the subnet.
rtaSubnetId :: Lens' RouteTableAssociation (Maybe Text)
data BundleTaskState

-- | bundling
BTSBundling :: BundleTaskState

-- | cancelling
BTSCancelling :: BundleTaskState

-- | complete
BTSComplete :: BundleTaskState

-- | failed
BTSFailed :: BundleTaskState

-- | pending
BTSPending :: BundleTaskState

-- | storing
BTSStoring :: BundleTaskState

-- | waiting-for-shutdown
BTSWaitingForShutdown :: BundleTaskState
data PortRange

-- | <a>PortRange</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>prFrom</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>prTo</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   </ul>
portRange :: PortRange

-- | The first port in the range.
prFrom :: Lens' PortRange (Maybe Int)

-- | The last port in the range.
prTo :: Lens' PortRange (Maybe Int)
data VpcAttributeName

-- | enableDnsHostnames
EnableDnsHostnames :: VpcAttributeName

-- | enableDnsSupport
EnableDnsSupport :: VpcAttributeName
data ReservedInstancesConfiguration

-- | <a>ReservedInstancesConfiguration</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ricAvailabilityZone</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>ricInstanceCount</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>ricInstanceType</a> <tt>::</tt> <a>Maybe</a>
--   <a>InstanceType</a></li>
--   <li><a>ricPlatform</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
reservedInstancesConfiguration :: ReservedInstancesConfiguration

-- | The Availability Zone for the modified Reserved Instances.
ricAvailabilityZone :: Lens' ReservedInstancesConfiguration (Maybe Text)

-- | The number of modified Reserved Instances.
ricInstanceCount :: Lens' ReservedInstancesConfiguration (Maybe Int)

-- | The instance type for the modified Reserved Instances.
ricInstanceType :: Lens' ReservedInstancesConfiguration (Maybe InstanceType)

-- | The network platform of the modified Reserved Instances, which is
--   either EC2-Classic or EC2-VPC.
ricPlatform :: Lens' ReservedInstancesConfiguration (Maybe Text)
data VolumeStatusDetails

-- | <a>VolumeStatusDetails</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vsdName</a> <tt>::</tt> <a>Maybe</a>
--   <a>VolumeStatusName</a></li>
--   <li><a>vsdStatus</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
volumeStatusDetails :: VolumeStatusDetails

-- | The name of the volume status.
vsdName :: Lens' VolumeStatusDetails (Maybe VolumeStatusName)

-- | The intended status of the volume status.
vsdStatus :: Lens' VolumeStatusDetails (Maybe Text)
data SpotInstanceState

-- | active
SISActive :: SpotInstanceState

-- | cancelled
SISCancelled :: SpotInstanceState

-- | closed
SISClosed :: SpotInstanceState

-- | failed
SISFailed :: SpotInstanceState

-- | open
SISOpen :: SpotInstanceState
data VpnConnectionOptions

-- | <a>VpnConnectionOptions</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vcoStaticRoutesOnly</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   </ul>
vpnConnectionOptions :: VpnConnectionOptions

-- | Indicates whether the VPN connection uses static routes only. Static
--   routes must be used for devices that don't support BGP.
vcoStaticRoutesOnly :: Lens' VpnConnectionOptions (Maybe Bool)
data UserIdGroupPair

-- | <a>UserIdGroupPair</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uigpGroupId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>uigpGroupName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>uigpUserId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
userIdGroupPair :: UserIdGroupPair

-- | The ID of the security group.
uigpGroupId :: Lens' UserIdGroupPair (Maybe Text)

-- | The name of the security group. In a request, use this parameter for a
--   security group in EC2-Classic or a default VPC only. For a security
--   group in a nondefault VPC, use <tt>GroupId</tt>.
uigpGroupName :: Lens' UserIdGroupPair (Maybe Text)

-- | The ID of an AWS account. EC2-Classic only.
uigpUserId :: Lens' UserIdGroupPair (Maybe Text)
data InstanceStatusSummary

-- | <a>InstanceStatusSummary</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>issDetails</a> <tt>::</tt> [<a>InstanceStatusDetails</a>]</li>
--   <li><a>issStatus</a> <tt>::</tt> <a>Maybe</a>
--   <a>SummaryStatus</a></li>
--   </ul>
instanceStatusSummary :: InstanceStatusSummary

-- | The system instance health or application instance health.
issDetails :: Lens' InstanceStatusSummary [InstanceStatusDetails]

-- | The status.
issStatus :: Lens' InstanceStatusSummary (Maybe SummaryStatus)
data SpotPlacement

-- | <a>SpotPlacement</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sp1AvailabilityZone</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>sp1GroupName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
spotPlacement :: SpotPlacement

-- | The Availability Zone.
sp1AvailabilityZone :: Lens' SpotPlacement (Maybe Text)

-- | The name of the placement group (for cluster instances).
sp1GroupName :: Lens' SpotPlacement (Maybe Text)
data EbsInstanceBlockDeviceSpecification

-- | <a>EbsInstanceBlockDeviceSpecification</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>eibdsDeleteOnTermination</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>eibdsVolumeId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
ebsInstanceBlockDeviceSpecification :: EbsInstanceBlockDeviceSpecification

-- | Indicates whether the volume is deleted on instance termination.
eibdsDeleteOnTermination :: Lens' EbsInstanceBlockDeviceSpecification (Maybe Bool)

-- | The ID of the EBS volume.
eibdsVolumeId :: Lens' EbsInstanceBlockDeviceSpecification (Maybe Text)
data NetworkAclAssociation

-- | <a>NetworkAclAssociation</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>naaNetworkAclAssociationId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>naaNetworkAclId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>naaSubnetId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
networkAclAssociation :: NetworkAclAssociation

-- | The ID of the association between a network ACL and a subnet.
naaNetworkAclAssociationId :: Lens' NetworkAclAssociation (Maybe Text)

-- | The ID of the network ACL.
naaNetworkAclId :: Lens' NetworkAclAssociation (Maybe Text)

-- | The ID of the subnet.
naaSubnetId :: Lens' NetworkAclAssociation (Maybe Text)
data BundleTask

-- | <a>BundleTask</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>btBundleId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>btBundleTaskError</a> <tt>::</tt> <a>Maybe</a>
--   <a>BundleTaskError</a></li>
--   <li><a>btInstanceId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>btProgress</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>btStartTime</a> <tt>::</tt> <a>UTCTime</a></li>
--   <li><a>btState</a> <tt>::</tt> <a>BundleTaskState</a></li>
--   <li><a>btStorage</a> <tt>::</tt> <a>Storage</a></li>
--   <li><a>btUpdateTime</a> <tt>::</tt> <a>UTCTime</a></li>
--   </ul>
bundleTask :: Text -> Text -> BundleTaskState -> UTCTime -> UTCTime -> Storage -> Text -> BundleTask

-- | The ID of the bundle task.
btBundleId :: Lens' BundleTask Text

-- | If the task fails, a description of the error.
btBundleTaskError :: Lens' BundleTask (Maybe BundleTaskError)

-- | The ID of the instance associated with this bundle task.
btInstanceId :: Lens' BundleTask Text

-- | The level of task completion, as a percent (for example, 20%).
btProgress :: Lens' BundleTask Text

-- | The time this task started.
btStartTime :: Lens' BundleTask UTCTime

-- | The state of the task.
btState :: Lens' BundleTask BundleTaskState

-- | The Amazon S3 storage locations.
btStorage :: Lens' BundleTask Storage

-- | The time of the most recent update for the task.
btUpdateTime :: Lens' BundleTask UTCTime
data InstanceStatusEvent

-- | <a>InstanceStatusEvent</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>iseCode</a> <tt>::</tt> <a>Maybe</a> <a>EventCode</a></li>
--   <li><a>iseDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iseNotAfter</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>iseNotBefore</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   </ul>
instanceStatusEvent :: InstanceStatusEvent

-- | The event code.
iseCode :: Lens' InstanceStatusEvent (Maybe EventCode)

-- | A description of the event.
--   
--   After a scheduled event is completed, it can still be described for up
--   to a week. If the event has been completed, this description starts
--   with the following text: [Completed].
iseDescription :: Lens' InstanceStatusEvent (Maybe Text)

-- | The latest scheduled end time for the event.
iseNotAfter :: Lens' InstanceStatusEvent (Maybe UTCTime)

-- | The earliest scheduled start time for the event.
iseNotBefore :: Lens' InstanceStatusEvent (Maybe UTCTime)
data InstanceType

-- | c1.medium
C1_Medium :: InstanceType

-- | c1.xlarge
C1_XLarge :: InstanceType

-- | c3.2xlarge
C3_2XLarge :: InstanceType

-- | c3.4xlarge
C3_4XLarge :: InstanceType

-- | c3.8xlarge
C3_8XLarge :: InstanceType

-- | c3.large
C3_Large :: InstanceType

-- | c3.xlarge
C3_XLarge :: InstanceType

-- | c4.2xlarge
C4_2XLarge :: InstanceType

-- | c4.4xlarge
C4_4XLarge :: InstanceType

-- | c4.8xlarge
C4_8XLarge :: InstanceType

-- | c4.large
C4_Large :: InstanceType

-- | c4.xlarge
C4_XLarge :: InstanceType

-- | cc1.4xlarge
CC1_4XLarge :: InstanceType

-- | cc2.8xlarge
CC2_8XLarge :: InstanceType

-- | cg1.4xlarge
CG1_4XLarge :: InstanceType

-- | cr1.8xlarge
CR1_8XLarge :: InstanceType

-- | d2.2xlarge
D2_2XLarge :: InstanceType

-- | d2.4xlarge
D2_4XLarge :: InstanceType

-- | d2.8xlarge
D2_8XLarge :: InstanceType

-- | d2.xlarge
D2_XLarge :: InstanceType

-- | g2.2xlarge
G2_2XLarge :: InstanceType

-- | hi1.4xlarge
HI1_4XLarge :: InstanceType

-- | hs1.8xlarge
HS1_8XLarge :: InstanceType

-- | i2.2xlarge
I2_2XLarge :: InstanceType

-- | i2.4xlarge
I2_4XLarge :: InstanceType

-- | i2.8xlarge
I2_8XLarge :: InstanceType

-- | i2.xlarge
I2_XLarge :: InstanceType

-- | m1.large
M1_Large :: InstanceType

-- | m1.medium
M1_Medium :: InstanceType

-- | m1.small
M1_Small :: InstanceType

-- | m1.xlarge
M1_XLarge :: InstanceType

-- | m2.2xlarge
M2_2XLarge :: InstanceType

-- | m2.4xlarge
M2_4XLarge :: InstanceType

-- | m2.xlarge
M2_XLarge :: InstanceType

-- | m3.2xlarge
M3_2XLarge :: InstanceType

-- | m3.large
M3_Large :: InstanceType

-- | m3.medium
M3_Medium :: InstanceType

-- | m3.xlarge
M3_XLarge :: InstanceType

-- | r3.2xlarge
R3_2XLarge :: InstanceType

-- | r3.4xlarge
R3_4XLarge :: InstanceType

-- | r3.8xlarge
R3_8XLarge :: InstanceType

-- | r3.large
R3_Large :: InstanceType

-- | r3.xlarge
R3_XLarge :: InstanceType

-- | t1.micro
T1_Micro :: InstanceType

-- | t2.medium
T2_Medium :: InstanceType

-- | t2.micro
T2_Micro :: InstanceType

-- | t2.small
T2_Small :: InstanceType
data Route

-- | <a>Route</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rDestinationCidrBlock</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>rDestinationPrefixListId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>rGatewayId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rInstanceId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rInstanceOwnerId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rNetworkInterfaceId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>rOrigin</a> <tt>::</tt> <a>Maybe</a> <a>RouteOrigin</a></li>
--   <li><a>rState</a> <tt>::</tt> <a>Maybe</a> <a>RouteState</a></li>
--   <li><a>rVpcPeeringConnectionId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
route :: Route

-- | The CIDR block used for the destination match.
rDestinationCidrBlock :: Lens' Route (Maybe Text)

-- | The prefix of the AWS service.
rDestinationPrefixListId :: Lens' Route (Maybe Text)

-- | The ID of a gateway attached to your VPC.
rGatewayId :: Lens' Route (Maybe Text)

-- | The ID of a NAT instance in your VPC.
rInstanceId :: Lens' Route (Maybe Text)

-- | The AWS account ID of the owner of the instance.
rInstanceOwnerId :: Lens' Route (Maybe Text)

-- | The ID of the network interface.
rNetworkInterfaceId :: Lens' Route (Maybe Text)

-- | Describes how the route was created.
--   
--   <tt>CreateRouteTable</tt> indicates that route was automatically
--   created when the route table was created. <tt>CreateRoute</tt>
--   indicates that the route was manually added to the route table.
--   <tt>EnableVgwRoutePropagation</tt> indicates that the route was
--   propagated by route propagation.
rOrigin :: Lens' Route (Maybe RouteOrigin)

-- | The state of the route. The <tt>blackhole</tt> state indicates that
--   the route's target isn't available (for example, the specified gateway
--   isn't attached to the VPC, or the specified NAT instance has been
--   terminated).
rState :: Lens' Route (Maybe RouteState)

-- | The ID of the VPC peering connection.
rVpcPeeringConnectionId :: Lens' Route (Maybe Text)
data SpotDatafeedSubscription

-- | <a>SpotDatafeedSubscription</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sdsBucket</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>sdsFault</a> <tt>::</tt> <a>Maybe</a>
--   <a>SpotInstanceStateFault</a></li>
--   <li><a>sdsOwnerId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>sdsPrefix</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>sdsState</a> <tt>::</tt> <a>Maybe</a>
--   <a>DatafeedSubscriptionState</a></li>
--   </ul>
spotDatafeedSubscription :: SpotDatafeedSubscription

-- | The Amazon S3 bucket where the Spot Instance data feed is located.
sdsBucket :: Lens' SpotDatafeedSubscription (Maybe Text)

-- | The fault codes for the Spot Instance request, if any.
sdsFault :: Lens' SpotDatafeedSubscription (Maybe SpotInstanceStateFault)

-- | The AWS account ID of the account.
sdsOwnerId :: Lens' SpotDatafeedSubscription (Maybe Text)

-- | The prefix that is prepended to data feed files.
sdsPrefix :: Lens' SpotDatafeedSubscription (Maybe Text)

-- | The state of the Spot Instance data feed subscription.
sdsState :: Lens' SpotDatafeedSubscription (Maybe DatafeedSubscriptionState)
data Storage

-- | <a>Storage</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sS3</a> <tt>::</tt> <a>Maybe</a> <a>S3Storage</a></li>
--   </ul>
storage :: Storage

-- | An Amazon S3 storage location.
sS3 :: Lens' Storage (Maybe S3Storage)
data SecurityGroup

-- | <a>SecurityGroup</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sgDescription</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>sgGroupId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>sgGroupName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>sgIpPermissions</a> <tt>::</tt> [<a>IpPermission</a>]</li>
--   <li><a>sgIpPermissionsEgress</a> <tt>::</tt>
--   [<a>IpPermission</a>]</li>
--   <li><a>sgOwnerId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>sgTags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   <li><a>sgVpcId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
securityGroup :: Text -> Text -> Text -> Text -> SecurityGroup

-- | A description of the security group.
sgDescription :: Lens' SecurityGroup Text

-- | The ID of the security group.
sgGroupId :: Lens' SecurityGroup Text

-- | The name of the security group.
sgGroupName :: Lens' SecurityGroup Text

-- | One or more inbound rules associated with the security group.
sgIpPermissions :: Lens' SecurityGroup [IpPermission]

-- | <ul>
--   <li><i>EC2-VPC</i> One or more outbound rules associated with the
--   security group.</li>
--   </ul>
sgIpPermissionsEgress :: Lens' SecurityGroup [IpPermission]

-- | The AWS account ID of the owner of the security group.
sgOwnerId :: Lens' SecurityGroup Text

-- | Any tags assigned to the security group.
sgTags :: Lens' SecurityGroup [Tag]

-- | <ul>
--   <li><i>EC2-VPC</i> The ID of the VPC for the security group.</li>
--   </ul>
sgVpcId :: Lens' SecurityGroup (Maybe Text)
data CancelSpotInstanceRequestState

-- | active
CSIRSActive :: CancelSpotInstanceRequestState

-- | cancelled
CSIRSCancelled :: CancelSpotInstanceRequestState

-- | closed
CSIRSClosed :: CancelSpotInstanceRequestState

-- | completed
CSIRSCompleted :: CancelSpotInstanceRequestState

-- | open
CSIRSOpen :: CancelSpotInstanceRequestState
data PlacementGroupState

-- | available
PGSAvailable :: PlacementGroupState

-- | deleted
PGSDeleted :: PlacementGroupState

-- | deleting
PGSDeleting :: PlacementGroupState

-- | pending
PGSPending :: PlacementGroupState
data ReservedInstancesModificationResult

-- | <a>ReservedInstancesModificationResult</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rimrReservedInstancesId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>rimrTargetConfiguration</a> <tt>::</tt> <a>Maybe</a>
--   <a>ReservedInstancesConfiguration</a></li>
--   </ul>
reservedInstancesModificationResult :: ReservedInstancesModificationResult

-- | The ID for the Reserved Instances that were created as part of the
--   modification request. This field is only available when the
--   modification is fulfilled.
rimrReservedInstancesId :: Lens' ReservedInstancesModificationResult (Maybe Text)

-- | The target Reserved Instances configurations supplied as part of the
--   modification request.
rimrTargetConfiguration :: Lens' ReservedInstancesModificationResult (Maybe ReservedInstancesConfiguration)
data InstanceBlockDeviceMappingSpecification

-- | <a>InstanceBlockDeviceMappingSpecification</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ibdmsDeviceName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ibdmsEbs</a> <tt>::</tt> <a>Maybe</a>
--   <a>EbsInstanceBlockDeviceSpecification</a></li>
--   <li><a>ibdmsNoDevice</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ibdmsVirtualName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
instanceBlockDeviceMappingSpecification :: InstanceBlockDeviceMappingSpecification

-- | The device name exposed to the instance (for example, '/dev/sdh' or
--   <tt>xvdh</tt>).
ibdmsDeviceName :: Lens' InstanceBlockDeviceMappingSpecification (Maybe Text)

-- | Parameters used to automatically set up EBS volumes when the instance
--   is launched.
ibdmsEbs :: Lens' InstanceBlockDeviceMappingSpecification (Maybe EbsInstanceBlockDeviceSpecification)

-- | suppress the specified device included in the block device mapping.
ibdmsNoDevice :: Lens' InstanceBlockDeviceMappingSpecification (Maybe Text)

-- | The virtual device name.
ibdmsVirtualName :: Lens' InstanceBlockDeviceMappingSpecification (Maybe Text)
data ExportEnvironment

-- | citrix
Citrix :: ExportEnvironment

-- | microsoft
Microsoft :: ExportEnvironment

-- | vmware
Vmware :: ExportEnvironment
data UserData

-- | <a>UserData</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>udData</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
userData :: UserData

-- | The Base64-encoded MIME user data for the instance.
udData :: Lens' UserData (Maybe Text)
data VolumeAttachment

-- | <a>VolumeAttachment</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vaAttachTime</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>vaDeleteOnTermination</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>vaDevice</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>vaInstanceId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>vaState</a> <tt>::</tt> <a>Maybe</a>
--   <a>VolumeAttachmentState</a></li>
--   <li><a>vaVolumeId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
volumeAttachment :: VolumeAttachment

-- | The time stamp when the attachment initiated.
vaAttachTime :: Lens' VolumeAttachment (Maybe UTCTime)

-- | Indicates whether the EBS volume is deleted on instance termination.
vaDeleteOnTermination :: Lens' VolumeAttachment (Maybe Bool)

-- | The device name.
vaDevice :: Lens' VolumeAttachment (Maybe Text)

-- | The ID of the instance.
vaInstanceId :: Lens' VolumeAttachment (Maybe Text)

-- | The attachment state of the volume.
vaState :: Lens' VolumeAttachment (Maybe VolumeAttachmentState)

-- | The ID of the volume.
vaVolumeId :: Lens' VolumeAttachment (Maybe Text)
data CustomerGateway

-- | <a>CustomerGateway</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cgBgpAsn</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cgCustomerGatewayId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cgIpAddress</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cgState</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cgTags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   <li><a>cgType</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
customerGateway :: Text -> Text -> Text -> Text -> Text -> CustomerGateway

-- | The customer gateway's Border Gateway Protocol (BGP) Autonomous System
--   Number (ASN).
cgBgpAsn :: Lens' CustomerGateway Text

-- | The ID of the customer gateway.
cgCustomerGatewayId :: Lens' CustomerGateway Text

-- | The Internet-routable IP address of the customer gateway's outside
--   interface.
cgIpAddress :: Lens' CustomerGateway Text

-- | The current state of the customer gateway ('pending | available |
--   deleting |deleted').
cgState :: Lens' CustomerGateway Text

-- | Any tags assigned to the customer gateway.
cgTags :: Lens' CustomerGateway [Tag]

-- | The type of VPN connection the customer gateway supports ('ipsec.1').
cgType :: Lens' CustomerGateway Text
data EbsInstanceBlockDevice

-- | <a>EbsInstanceBlockDevice</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>eibdAttachTime</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>eibdDeleteOnTermination</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>eibdStatus</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttachmentStatus</a></li>
--   <li><a>eibdVolumeId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
ebsInstanceBlockDevice :: EbsInstanceBlockDevice

-- | The time stamp when the attachment initiated.
eibdAttachTime :: Lens' EbsInstanceBlockDevice (Maybe UTCTime)

-- | Indicates whether the volume is deleted on instance termination.
eibdDeleteOnTermination :: Lens' EbsInstanceBlockDevice (Maybe Bool)

-- | The attachment state.
eibdStatus :: Lens' EbsInstanceBlockDevice (Maybe AttachmentStatus)

-- | The ID of the EBS volume.
eibdVolumeId :: Lens' EbsInstanceBlockDevice (Maybe Text)
data ShutdownBehavior

-- | stop
Stop :: ShutdownBehavior

-- | terminate
Terminate :: ShutdownBehavior
data DiskImageDescription

-- | <a>DiskImageDescription</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>did1Checksum</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>did1Format</a> <tt>::</tt> <a>DiskImageFormat</a></li>
--   <li><a>did1ImportManifestUrl</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>did1Size</a> <tt>::</tt> <a>Integer</a></li>
--   </ul>
diskImageDescription :: DiskImageFormat -> Integer -> Text -> DiskImageDescription

-- | The checksum computed for the disk image.
did1Checksum :: Lens' DiskImageDescription (Maybe Text)

-- | The disk image format.
did1Format :: Lens' DiskImageDescription DiskImageFormat

-- | A presigned URL for the import manifest stored in Amazon S3. For
--   information about creating a presigned URL for an Amazon S3 object,
--   read the "Query String Request Authentication Alternative" section of
--   the <a>Authenticating RESTRequests</a> topic in the <i>Amazon Simple
--   Storage Service Developer Guide</i>.
did1ImportManifestUrl :: Lens' DiskImageDescription Text

-- | The size of the disk image, in GiB.
did1Size :: Lens' DiskImageDescription Integer
data DiskImageVolumeDescription

-- | <a>DiskImageVolumeDescription</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>divdId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>divdSize</a> <tt>::</tt> <a>Maybe</a> <a>Integer</a></li>
--   </ul>
diskImageVolumeDescription :: Text -> DiskImageVolumeDescription

-- | The volume identifier.
divdId :: Lens' DiskImageVolumeDescription Text

-- | The size of the volume, in GiB.
divdSize :: Lens' DiskImageVolumeDescription (Maybe Integer)
data Monitoring

-- | <a>Monitoring</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>mState</a> <tt>::</tt> <a>Maybe</a> <a>MonitoringState</a></li>
--   </ul>
monitoring :: Monitoring

-- | Indicates whether monitoring is enabled for the instance.
mState :: Lens' Monitoring (Maybe MonitoringState)
data SubnetState

-- | available
SubnetStateAvailable :: SubnetState

-- | pending
SubnetStatePending :: SubnetState
data CancelSpotFleetRequestsSuccessItem

-- | <a>CancelSpotFleetRequestsSuccessItem</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>csfrsiCurrentSpotFleetRequestState</a> <tt>::</tt>
--   <a>BatchState</a></li>
--   <li><a>csfrsiPreviousSpotFleetRequestState</a> <tt>::</tt>
--   <a>BatchState</a></li>
--   <li><a>csfrsiSpotFleetRequestId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
cancelSpotFleetRequestsSuccessItem :: Text -> BatchState -> BatchState -> CancelSpotFleetRequestsSuccessItem

-- | The current state of the Spot fleet request.
csfrsiCurrentSpotFleetRequestState :: Lens' CancelSpotFleetRequestsSuccessItem BatchState

-- | The previous state of the Spot fleet request.
csfrsiPreviousSpotFleetRequestState :: Lens' CancelSpotFleetRequestsSuccessItem BatchState

-- | The ID of the Spot fleet request.
csfrsiSpotFleetRequestId :: Lens' CancelSpotFleetRequestsSuccessItem Text
data ContainerFormat

-- | ova
Ova :: ContainerFormat
data AvailabilityZoneMessage

-- | <a>AvailabilityZoneMessage</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>azmMessage</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
availabilityZoneMessage :: AvailabilityZoneMessage

-- | The message about the Availability Zone.
azmMessage :: Lens' AvailabilityZoneMessage (Maybe Text)
data VpcAttachment

-- | <a>VpcAttachment</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>va1State</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttachmentStatus</a></li>
--   <li><a>va1VpcId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
vpcAttachment :: VpcAttachment

-- | The current state of the attachment.
va1State :: Lens' VpcAttachment (Maybe AttachmentStatus)

-- | The ID of the VPC.
va1VpcId :: Lens' VpcAttachment (Maybe Text)
data EventType

-- | error
Error :: EventType

-- | fleetRequestChange
FleetRequestChange :: EventType

-- | instanceChange
InstanceChange :: EventType
data InstanceBlockDeviceMapping

-- | <a>InstanceBlockDeviceMapping</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ibdmDeviceName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ibdmEbs</a> <tt>::</tt> <a>Maybe</a>
--   <a>EbsInstanceBlockDevice</a></li>
--   </ul>
instanceBlockDeviceMapping :: InstanceBlockDeviceMapping

-- | The device name exposed to the instance (for example, '/dev/sdh' or
--   <tt>xvdh</tt>).
ibdmDeviceName :: Lens' InstanceBlockDeviceMapping (Maybe Text)

-- | Parameters used to automatically set up EBS volumes when the instance
--   is launched.
ibdmEbs :: Lens' InstanceBlockDeviceMapping (Maybe EbsInstanceBlockDevice)
data StatusType

-- | failed
STFailed :: StatusType

-- | insufficient-data
STInsufficientData :: StatusType

-- | passed
STPassed :: StatusType
data ExportToS3TaskSpecification

-- | <a>ExportToS3TaskSpecification</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>etstsContainerFormat</a> <tt>::</tt> <a>Maybe</a>
--   <a>ContainerFormat</a></li>
--   <li><a>etstsDiskImageFormat</a> <tt>::</tt> <a>Maybe</a>
--   <a>DiskImageFormat</a></li>
--   <li><a>etstsS3Bucket</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>etstsS3Prefix</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
exportToS3TaskSpecification :: ExportToS3TaskSpecification

-- | The container format used to combine disk images with metadata (such
--   as OVF). If absent, only the disk image is exported.
etstsContainerFormat :: Lens' ExportToS3TaskSpecification (Maybe ContainerFormat)

-- | The format for the exported image.
etstsDiskImageFormat :: Lens' ExportToS3TaskSpecification (Maybe DiskImageFormat)

-- | The S3 bucket for the destination image. The destination bucket must
--   exist and grant WRITE and READ_ACP permissions to the AWS account
--   'vm-import-export@amazon.com'.
etstsS3Bucket :: Lens' ExportToS3TaskSpecification (Maybe Text)

-- | The image is written to a single object in the S3 bucket at the S3 key
--   s3prefix + exportTaskId + <a>.</a> + diskImageFormat.
etstsS3Prefix :: Lens' ExportToS3TaskSpecification (Maybe Text)
data CancelBatchErrorCode

-- | fleetRequestIdDoesNotExist
FleetRequestIdDoesNotExist :: CancelBatchErrorCode

-- | fleetRequestIdMalformed
FleetRequestIdMalformed :: CancelBatchErrorCode

-- | fleetRequestNotInCancellableState
FleetRequestNotInCancellableState :: CancelBatchErrorCode

-- | unexpectedError
UnexpectedError :: CancelBatchErrorCode
data PrefixListId

-- | <a>PrefixListId</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pliPrefixListId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
prefixListId :: PrefixListId

-- | The ID of the prefix.
pliPrefixListId :: Lens' PrefixListId (Maybe Text)
data NetworkInterfaceAttribute

-- | attachment
Attachment :: NetworkInterfaceAttribute

-- | description
Description :: NetworkInterfaceAttribute

-- | groupSet
GroupSet :: NetworkInterfaceAttribute

-- | sourceDestCheck
SourceDestCheck :: NetworkInterfaceAttribute
data ImageTypeValues

-- | kernel
Kernel :: ImageTypeValues

-- | machine
Machine :: ImageTypeValues

-- | ramdisk
Ramdisk :: ImageTypeValues
data InstanceExportDetails

-- | <a>InstanceExportDetails</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>iedInstanceId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iedTargetEnvironment</a> <tt>::</tt> <a>Maybe</a>
--   <a>ExportEnvironment</a></li>
--   </ul>
instanceExportDetails :: InstanceExportDetails

-- | The ID of the resource being exported.
iedInstanceId :: Lens' InstanceExportDetails (Maybe Text)

-- | The target virtualization environment.
iedTargetEnvironment :: Lens' InstanceExportDetails (Maybe ExportEnvironment)
data SnapshotAttributeName

-- | createVolumePermission
SANCreateVolumePermission :: SnapshotAttributeName

-- | productCodes
SANProductCodes :: SnapshotAttributeName
data AvailabilityZone

-- | <a>AvailabilityZone</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>azMessages</a> <tt>::</tt>
--   [<a>AvailabilityZoneMessage</a>]</li>
--   <li><a>azRegionName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>azState</a> <tt>::</tt> <a>Maybe</a>
--   <a>AvailabilityZoneState</a></li>
--   <li><a>azZoneName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
availabilityZone :: AvailabilityZone

-- | Any messages about the Availability Zone.
azMessages :: Lens' AvailabilityZone [AvailabilityZoneMessage]

-- | The name of the region.
azRegionName :: Lens' AvailabilityZone (Maybe Text)

-- | The state of the Availability Zone (<tt>available</tt> |
--   <tt>impaired</tt> | <tt>unavailable</tt>).
azState :: Lens' AvailabilityZone (Maybe AvailabilityZoneState)

-- | The name of the Availability Zone.
azZoneName :: Lens' AvailabilityZone (Maybe Text)
data HistoryRecord

-- | <a>HistoryRecord</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>hrEventInformation</a> <tt>::</tt> <a>EventInformation</a></li>
--   <li><a>hrEventType</a> <tt>::</tt> <a>EventType</a></li>
--   <li><a>hrTimestamp</a> <tt>::</tt> <a>UTCTime</a></li>
--   </ul>
historyRecord :: UTCTime -> EventType -> EventInformation -> HistoryRecord

-- | Information about the event.
hrEventInformation :: Lens' HistoryRecord EventInformation

-- | The event type.
--   
--   <tt>error</tt> - Indicates an error with the Spot fleet request.
--   
--   <tt>fleetRequestChange</tt> - Indicates a change in the status or
--   configuration of the Spot fleet request.
--   
--   <tt>instanceChange</tt> - Indicates that an instance was launched or
--   terminated.
hrEventType :: Lens' HistoryRecord EventType

-- | The date and time of the event, in UTC format (for example,
--   <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
hrTimestamp :: Lens' HistoryRecord UTCTime
data ImportImageTask

-- | <a>ImportImageTask</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>iitArchitecture</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iitDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iitHypervisor</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iitImageId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iitImportTaskId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iitLicenseType</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iitPlatform</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iitProgress</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iitSnapshotDetails</a> <tt>::</tt> [<a>SnapshotDetail</a>]</li>
--   <li><a>iitStatus</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iitStatusMessage</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
importImageTask :: ImportImageTask

-- | The architecture of the virtual machine.
--   
--   Valid values: <tt>i386</tt> | <tt>x86_64</tt>
iitArchitecture :: Lens' ImportImageTask (Maybe Text)

-- | A description of the import task.
iitDescription :: Lens' ImportImageTask (Maybe Text)

-- | The target hypervisor for the import task.
--   
--   Valid values: <tt>xen</tt>
iitHypervisor :: Lens' ImportImageTask (Maybe Text)

-- | The ID of the Amazon Machine Image (AMI) of the imported virtual
--   machine.
iitImageId :: Lens' ImportImageTask (Maybe Text)

-- | The ID of the import image task.
iitImportTaskId :: Lens' ImportImageTask (Maybe Text)

-- | The license type of the virtual machine.
iitLicenseType :: Lens' ImportImageTask (Maybe Text)

-- | The description string for the import image task.
iitPlatform :: Lens' ImportImageTask (Maybe Text)

-- | The percentage of progress of the import image task.
iitProgress :: Lens' ImportImageTask (Maybe Text)

-- | Information about the snapshots.
iitSnapshotDetails :: Lens' ImportImageTask [SnapshotDetail]

-- | A brief status for the import image task.
iitStatus :: Lens' ImportImageTask (Maybe Text)

-- | A descriptive status message for the import image task.
iitStatusMessage :: Lens' ImportImageTask (Maybe Text)
data VpnState

-- | available
VpnStateAvailable :: VpnState

-- | deleted
VpnStateDeleted :: VpnState

-- | deleting
VpnStateDeleting :: VpnState

-- | pending
VpnStatePending :: VpnState
data RouteTable

-- | <a>RouteTable</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rtAssociations</a> <tt>::</tt>
--   [<a>RouteTableAssociation</a>]</li>
--   <li><a>rtPropagatingVgws</a> <tt>::</tt> [<a>PropagatingVgw</a>]</li>
--   <li><a>rtRouteTableId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rtRoutes</a> <tt>::</tt> [<a>Route</a>]</li>
--   <li><a>rtTags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   <li><a>rtVpcId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
routeTable :: RouteTable

-- | The associations between the route table and one or more subnets.
rtAssociations :: Lens' RouteTable [RouteTableAssociation]

-- | Any virtual private gateway (VGW) propagating routes.
rtPropagatingVgws :: Lens' RouteTable [PropagatingVgw]

-- | The ID of the route table.
rtRouteTableId :: Lens' RouteTable (Maybe Text)

-- | The routes in the route table.
rtRoutes :: Lens' RouteTable [Route]

-- | Any tags assigned to the route table.
rtTags :: Lens' RouteTable [Tag]

-- | The ID of the VPC.
rtVpcId :: Lens' RouteTable (Maybe Text)
data UserBucket

-- | <a>UserBucket</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ubS3Bucket</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ubS3Key</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
userBucket :: UserBucket

-- | The name of the S3 bucket where the disk image is located.
ubS3Bucket :: Lens' UserBucket (Maybe Text)

-- | The key for the disk image.
ubS3Key :: Lens' UserBucket (Maybe Text)
data HypervisorType

-- | ovm
Ovm :: HypervisorType

-- | xen
Xen :: HypervisorType
data CancelSpotFleetRequestsErrorItem

-- | <a>CancelSpotFleetRequestsErrorItem</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>csfreiError</a> <tt>::</tt>
--   <a>CancelSpotFleetRequestsError</a></li>
--   <li><a>csfreiSpotFleetRequestId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
cancelSpotFleetRequestsErrorItem :: Text -> CancelSpotFleetRequestsError -> CancelSpotFleetRequestsErrorItem

-- | The error.
csfreiError :: Lens' CancelSpotFleetRequestsErrorItem CancelSpotFleetRequestsError

-- | The ID of the Spot fleet request.
csfreiSpotFleetRequestId :: Lens' CancelSpotFleetRequestsErrorItem Text
data InstanceStatusDetails

-- | <a>InstanceStatusDetails</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>isdImpairedSince</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>isdName</a> <tt>::</tt> <a>Maybe</a> <a>StatusName</a></li>
--   <li><a>isdStatus</a> <tt>::</tt> <a>Maybe</a> <a>StatusType</a></li>
--   </ul>
instanceStatusDetails :: InstanceStatusDetails

-- | The time when a status check failed. For an instance that was launched
--   and impaired, this is the time when the instance was launched.
isdImpairedSince :: Lens' InstanceStatusDetails (Maybe UTCTime)

-- | The type of instance status.
isdName :: Lens' InstanceStatusDetails (Maybe StatusName)

-- | The status.
isdStatus :: Lens' InstanceStatusDetails (Maybe StatusType)
data IamInstanceProfile

-- | <a>IamInstanceProfile</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>iipArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iipId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
iamInstanceProfile :: IamInstanceProfile

-- | The Amazon Resource Name (ARN) of the instance profile.
iipArn :: Lens' IamInstanceProfile (Maybe Text)

-- | The ID of the instance profile.
iipId :: Lens' IamInstanceProfile (Maybe Text)
data UnsuccessfulItem

-- | <a>UnsuccessfulItem</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uiError</a> <tt>::</tt> <a>UnsuccessfulItemError</a></li>
--   <li><a>uiResourceId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
unsuccessfulItem :: UnsuccessfulItemError -> UnsuccessfulItem

-- | Information about the error.
uiError :: Lens' UnsuccessfulItem UnsuccessfulItemError

-- | The ID of the resource.
uiResourceId :: Lens' UnsuccessfulItem (Maybe Text)
data InternetGatewayAttachment

-- | <a>InternetGatewayAttachment</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>igaState</a> <tt>::</tt> <a>AttachmentStatus</a></li>
--   <li><a>igaVpcId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
internetGatewayAttachment :: Text -> AttachmentStatus -> InternetGatewayAttachment

-- | The current state of the attachment.
igaState :: Lens' InternetGatewayAttachment AttachmentStatus

-- | The ID of the VPC.
igaVpcId :: Lens' InternetGatewayAttachment Text
data AddressStatus

-- | InClassic
InClassic :: AddressStatus

-- | InVpc
InVpc :: AddressStatus

-- | MoveInProgress
MoveInProgress :: AddressStatus
data ReservedInstanceState

-- | active
RISActive :: ReservedInstanceState

-- | payment-failed
RISPaymentFailed :: ReservedInstanceState

-- | payment-pending
RISPaymentPending :: ReservedInstanceState

-- | retired
RISRetired :: ReservedInstanceState
data InstanceAttributeName

-- | blockDeviceMapping
IANInstanceBlockDeviceMapping :: InstanceAttributeName

-- | disableApiTermination
IANInstanceDisableApiTermination :: InstanceAttributeName

-- | ebsOptimized
IANInstanceEbsOptimized :: InstanceAttributeName

-- | groupSet
IANInstanceGroupSet :: InstanceAttributeName

-- | instanceInitiatedShutdownBehavior
IANInstanceInstanceInitiatedShutdownBehavior :: InstanceAttributeName

-- | instanceType
IANInstanceInstanceType :: InstanceAttributeName

-- | kernel
IANInstanceKernel :: InstanceAttributeName

-- | productCodes
IANInstanceProductCodes :: InstanceAttributeName

-- | ramdisk
IANInstanceRamdisk :: InstanceAttributeName

-- | rootDeviceName
IANInstanceRootDeviceName :: InstanceAttributeName

-- | sourceDestCheck
IANInstanceSourceDestCheck :: InstanceAttributeName

-- | sriovNetSupport
IANInstanceSriovNetSupport :: InstanceAttributeName

-- | userData
IANInstanceUserData :: InstanceAttributeName
data IpPermission

-- | <a>IpPermission</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ipFromPort</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>ipIpProtocol</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ipIpRanges</a> <tt>::</tt> [<a>IpRange</a>]</li>
--   <li><a>ipPrefixListIds</a> <tt>::</tt> [<a>PrefixListId</a>]</li>
--   <li><a>ipToPort</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>ipUserIdGroupPairs</a> <tt>::</tt>
--   [<a>UserIdGroupPair</a>]</li>
--   </ul>
ipPermission :: Text -> IpPermission

-- | The start of port range for the TCP and UDP protocols, or an ICMP type
--   number. A value of '-1' indicates all ICMP types.
ipFromPort :: Lens' IpPermission (Maybe Int)

-- | The protocol.
--   
--   When you call <tt>DescribeSecurityGroups</tt>, the protocol value
--   returned is the number. Exception: For TCP, UDP, and ICMP, the value
--   returned is the name (for example, <tt>tcp</tt>, <tt>udp</tt>, or
--   <tt>icmp</tt>). For a list of protocol numbers, see <a>Protocol
--   Numbers</a>. (VPC only) When you call
--   <tt>AuthorizeSecurityGroupIngress</tt>, you can use '-1' to specify
--   all.
ipIpProtocol :: Lens' IpPermission Text

-- | One or more IP ranges.
ipIpRanges :: Lens' IpPermission [IpRange]

-- | (Valid for <tt>AuthorizeSecurityGroupEgress</tt>,
--   <tt>RevokeSecurityGroupEgress</tt> and <tt>DescribeSecurityGroups</tt>
--   only) One or more prefix list IDs for an AWS service. In an
--   <tt>AuthorizeSecurityGroupEgress</tt> request, this is the AWS service
--   that you want to access through a VPC endpoint from instances
--   associated with the security group.
ipPrefixListIds :: Lens' IpPermission [PrefixListId]

-- | The end of port range for the TCP and UDP protocols, or an ICMP code.
--   A value of '-1' indicates all ICMP codes for the specified ICMP type.
ipToPort :: Lens' IpPermission (Maybe Int)

-- | One or more security group and AWS account ID pairs.
ipUserIdGroupPairs :: Lens' IpPermission [UserIdGroupPair]
data ConversionTaskState

-- | active
CTSActive :: ConversionTaskState

-- | cancelled
CTSCancelled :: ConversionTaskState

-- | cancelling
CTSCancelling :: ConversionTaskState

-- | completed
CTSCompleted :: ConversionTaskState
data DiskImage

-- | <a>DiskImage</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>diDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>diImage</a> <tt>::</tt> <a>Maybe</a>
--   <a>DiskImageDetail</a></li>
--   <li><a>diVolume</a> <tt>::</tt> <a>Maybe</a> <a>VolumeDetail</a></li>
--   </ul>
diskImage :: DiskImage

-- | A description of the disk image.
diDescription :: Lens' DiskImage (Maybe Text)

-- | Information about the disk image.
diImage :: Lens' DiskImage (Maybe DiskImageDetail)

-- | Information about the volume.
diVolume :: Lens' DiskImage (Maybe VolumeDetail)
data Tenancy

-- | dedicated
Dedicated :: Tenancy

-- | default
Default' :: Tenancy
data UnsuccessfulItemError

-- | <a>UnsuccessfulItemError</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uieCode</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>uieMessage</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
unsuccessfulItemError :: Text -> Text -> UnsuccessfulItemError

-- | The error code.
uieCode :: Lens' UnsuccessfulItemError Text

-- | The error message accompanying the error code.
uieMessage :: Lens' UnsuccessfulItemError Text
data VpcPeeringConnectionStateReason

-- | <a>VpcPeeringConnectionStateReason</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vpcsrCode</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>vpcsrMessage</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
vpcPeeringConnectionStateReason :: VpcPeeringConnectionStateReason

-- | The status of the VPC peering connection.
vpcsrCode :: Lens' VpcPeeringConnectionStateReason (Maybe Text)

-- | A message that provides more information about the status, if
--   applicable.
vpcsrMessage :: Lens' VpcPeeringConnectionStateReason (Maybe Text)
data IamInstanceProfileSpecification

-- | <a>IamInstanceProfileSpecification</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>iipsArn</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iipsName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
iamInstanceProfileSpecification :: IamInstanceProfileSpecification

-- | The Amazon Resource Name (ARN) of the instance profile.
iipsArn :: Lens' IamInstanceProfileSpecification (Maybe Text)

-- | The name of the instance profile.
iipsName :: Lens' IamInstanceProfileSpecification (Maybe Text)
data ImportVolumeTaskDetails

-- | <a>ImportVolumeTaskDetails</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ivtdAvailabilityZone</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ivtdBytesConverted</a> <tt>::</tt> <a>Integer</a></li>
--   <li><a>ivtdDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ivtdImage</a> <tt>::</tt> <a>DiskImageDescription</a></li>
--   <li><a>ivtdVolume</a> <tt>::</tt>
--   <a>DiskImageVolumeDescription</a></li>
--   </ul>
importVolumeTaskDetails :: Integer -> Text -> DiskImageDescription -> DiskImageVolumeDescription -> ImportVolumeTaskDetails

-- | The Availability Zone where the resulting volume will reside.
ivtdAvailabilityZone :: Lens' ImportVolumeTaskDetails Text

-- | The number of bytes converted so far.
ivtdBytesConverted :: Lens' ImportVolumeTaskDetails Integer

-- | The description you provided when starting the import volume task.
ivtdDescription :: Lens' ImportVolumeTaskDetails (Maybe Text)

-- | The image.
ivtdImage :: Lens' ImportVolumeTaskDetails DiskImageDescription

-- | The volume.
ivtdVolume :: Lens' ImportVolumeTaskDetails DiskImageVolumeDescription
data PlacementStrategy

-- | cluster
Cluster :: PlacementStrategy
data InstanceNetworkInterface

-- | <a>InstanceNetworkInterface</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>iniAssociation</a> <tt>::</tt> <a>Maybe</a>
--   <a>InstanceNetworkInterfaceAssociation</a></li>
--   <li><a>iniAttachment</a> <tt>::</tt> <a>Maybe</a>
--   <a>InstanceNetworkInterfaceAttachment</a></li>
--   <li><a>iniDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iniGroups</a> <tt>::</tt> [<a>GroupIdentifier</a>]</li>
--   <li><a>iniMacAddress</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iniNetworkInterfaceId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>iniOwnerId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iniPrivateDnsName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iniPrivateIpAddress</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>iniPrivateIpAddresses</a> <tt>::</tt>
--   [<a>InstancePrivateIpAddress</a>]</li>
--   <li><a>iniSourceDestCheck</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>iniStatus</a> <tt>::</tt> <a>Maybe</a>
--   <a>NetworkInterfaceStatus</a></li>
--   <li><a>iniSubnetId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iniVpcId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
instanceNetworkInterface :: InstanceNetworkInterface

-- | The association information for an Elastic IP associated with the
--   network interface.
iniAssociation :: Lens' InstanceNetworkInterface (Maybe InstanceNetworkInterfaceAssociation)

-- | The network interface attachment.
iniAttachment :: Lens' InstanceNetworkInterface (Maybe InstanceNetworkInterfaceAttachment)

-- | The description.
iniDescription :: Lens' InstanceNetworkInterface (Maybe Text)

-- | One or more security groups.
iniGroups :: Lens' InstanceNetworkInterface [GroupIdentifier]

-- | The MAC address.
iniMacAddress :: Lens' InstanceNetworkInterface (Maybe Text)

-- | The ID of the network interface.
iniNetworkInterfaceId :: Lens' InstanceNetworkInterface (Maybe Text)

-- | The ID of the AWS account that created the network interface.
iniOwnerId :: Lens' InstanceNetworkInterface (Maybe Text)

-- | The private DNS name.
iniPrivateDnsName :: Lens' InstanceNetworkInterface (Maybe Text)

-- | The IP address of the network interface within the subnet.
iniPrivateIpAddress :: Lens' InstanceNetworkInterface (Maybe Text)

-- | The private IP addresses associated with the network interface.
iniPrivateIpAddresses :: Lens' InstanceNetworkInterface [InstancePrivateIpAddress]

-- | Indicates whether to validate network traffic to or from this network
--   interface.
iniSourceDestCheck :: Lens' InstanceNetworkInterface (Maybe Bool)

-- | The status of the network interface.
iniStatus :: Lens' InstanceNetworkInterface (Maybe NetworkInterfaceStatus)

-- | The ID of the subnet.
iniSubnetId :: Lens' InstanceNetworkInterface (Maybe Text)

-- | The ID of the VPC.
iniVpcId :: Lens' InstanceNetworkInterface (Maybe Text)
data VolumeStatusAction

-- | <a>VolumeStatusAction</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vsaCode</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>vsaDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>vsaEventId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>vsaEventType</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
volumeStatusAction :: VolumeStatusAction

-- | The code identifying the operation, for example, 'enable-volume-io'.
vsaCode :: Lens' VolumeStatusAction (Maybe Text)

-- | A description of the operation.
vsaDescription :: Lens' VolumeStatusAction (Maybe Text)

-- | The ID of the event associated with this operation.
vsaEventId :: Lens' VolumeStatusAction (Maybe Text)

-- | The event type associated with this operation.
vsaEventType :: Lens' VolumeStatusAction (Maybe Text)
data VpcPeeringConnectionVpcInfo

-- | <a>VpcPeeringConnectionVpcInfo</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vpcviCidrBlock</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>vpcviOwnerId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>vpcviVpcId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
vpcPeeringConnectionVpcInfo :: VpcPeeringConnectionVpcInfo

-- | The CIDR block for the VPC.
vpcviCidrBlock :: Lens' VpcPeeringConnectionVpcInfo (Maybe Text)

-- | The AWS account ID of the VPC owner.
vpcviOwnerId :: Lens' VpcPeeringConnectionVpcInfo (Maybe Text)

-- | The ID of the VPC.
vpcviVpcId :: Lens' VpcPeeringConnectionVpcInfo (Maybe Text)
data UserBucketDetails

-- | <a>UserBucketDetails</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ubdS3Bucket</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ubdS3Key</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
userBucketDetails :: UserBucketDetails

-- | The S3 bucket from which the disk image was created.
ubdS3Bucket :: Lens' UserBucketDetails (Maybe Text)

-- | The key from which the disk image was created.
ubdS3Key :: Lens' UserBucketDetails (Maybe Text)
data ReservedInstanceLimitPrice

-- | <a>ReservedInstanceLimitPrice</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rilpAmount</a> <tt>::</tt> <a>Maybe</a> <a>Double</a></li>
--   <li><a>rilpCurrencyCode</a> <tt>::</tt> <a>Maybe</a>
--   <a>CurrencyCodeValues</a></li>
--   </ul>
reservedInstanceLimitPrice :: ReservedInstanceLimitPrice

-- | Used for Reserved Instance Marketplace offerings. Specifies the limit
--   price on the total order (instanceCount * price).
rilpAmount :: Lens' ReservedInstanceLimitPrice (Maybe Double)

-- | The currency in which the <tt>limitPrice</tt> amount is specified. At
--   this time, the only supported currency is <tt>USD</tt>.
rilpCurrencyCode :: Lens' ReservedInstanceLimitPrice (Maybe CurrencyCodeValues)
data Vpc

-- | <a>Vpc</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vpcCidrBlock</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>vpcDhcpOptionsId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>vpcInstanceTenancy</a> <tt>::</tt> <a>Tenancy</a></li>
--   <li><a>vpcIsDefault</a> <tt>::</tt> <a>Bool</a></li>
--   <li><a>vpcState</a> <tt>::</tt> <a>VpcState</a></li>
--   <li><a>vpcTags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   <li><a>vpcVpcId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
vpc :: Text -> VpcState -> Text -> Text -> Tenancy -> Bool -> Vpc

-- | The CIDR block for the VPC.
vpcCidrBlock :: Lens' Vpc Text

-- | The ID of the set of DHCP options you've associated with the VPC (or
--   'default' if the default options are associated with the VPC).
vpcDhcpOptionsId :: Lens' Vpc Text

-- | The allowed tenancy of instances launched into the VPC.
vpcInstanceTenancy :: Lens' Vpc Tenancy

-- | Indicates whether the VPC is the default VPC.
vpcIsDefault :: Lens' Vpc Bool

-- | The current state of the VPC.
vpcState :: Lens' Vpc VpcState

-- | Any tags assigned to the VPC.
vpcTags :: Lens' Vpc [Tag]

-- | The ID of the VPC.
vpcVpcId :: Lens' Vpc Text
data ImageDiskContainer

-- | <a>ImageDiskContainer</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>idcDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>idcDeviceName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>idcFormat</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>idcSnapshotId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>idcUrl</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>idcUserBucket</a> <tt>::</tt> <a>Maybe</a>
--   <a>UserBucket</a></li>
--   </ul>
imageDiskContainer :: ImageDiskContainer

-- | The description of the disk image.
idcDescription :: Lens' ImageDiskContainer (Maybe Text)

-- | The block device mapping for the disk.
idcDeviceName :: Lens' ImageDiskContainer (Maybe Text)

-- | The format of the disk image being imported.
--   
--   Valid values: <tt>RAW</tt> | <tt>VHD</tt> | <tt>VMDK</tt> |
--   <tt>OVA</tt>
idcFormat :: Lens' ImageDiskContainer (Maybe Text)

-- | The ID of the EBS snapshot to be used for importing the snapshot.
idcSnapshotId :: Lens' ImageDiskContainer (Maybe Text)

-- | The URL to the Amazon S3-based disk image being imported. The URL can
--   either be a https URL (https:/<i>..) or an Amazon S3 URL (s3:</i>/..)
idcUrl :: Lens' ImageDiskContainer (Maybe Text)

-- | The S3 bucket for the disk image.
idcUserBucket :: Lens' ImageDiskContainer (Maybe UserBucket)
data InstanceStatus

-- | <a>InstanceStatus</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>isAvailabilityZone</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>isEvents</a> <tt>::</tt> [<a>InstanceStatusEvent</a>]</li>
--   <li><a>isInstanceId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>isInstanceState</a> <tt>::</tt> <a>Maybe</a>
--   <a>InstanceState</a></li>
--   <li><a>isInstanceStatus</a> <tt>::</tt> <a>Maybe</a>
--   <a>InstanceStatusSummary</a></li>
--   <li><a>isSystemStatus</a> <tt>::</tt> <a>Maybe</a>
--   <a>InstanceStatusSummary</a></li>
--   </ul>
instanceStatus :: InstanceStatus

-- | The Availability Zone of the instance.
isAvailabilityZone :: Lens' InstanceStatus (Maybe Text)

-- | Any scheduled events associated with the instance.
isEvents :: Lens' InstanceStatus [InstanceStatusEvent]

-- | The ID of the instance.
isInstanceId :: Lens' InstanceStatus (Maybe Text)

-- | The intended state of the instance. <tt>DescribeInstanceStatus</tt>
--   requires that an instance be in the <tt>running</tt> state.
isInstanceState :: Lens' InstanceStatus (Maybe InstanceState)

-- | Reports impaired functionality that stems from issues internal to the
--   instance, such as impaired reachability.
isInstanceStatus :: Lens' InstanceStatus (Maybe InstanceStatusSummary)

-- | Reports impaired functionality that stems from issues related to the
--   systems that support an instance, such as hardware failures and
--   network connectivity problems.
isSystemStatus :: Lens' InstanceStatus (Maybe InstanceStatusSummary)
data ArchitectureValues

-- | i386
I386 :: ArchitectureValues

-- | x86_64
X8664 :: ArchitectureValues
data ReportInstanceReasonCodes

-- | instance-stuck-in-state
InstanceStuckInState :: ReportInstanceReasonCodes

-- | not-accepting-credentials
NotAcceptingCredentials :: ReportInstanceReasonCodes

-- | other
Other :: ReportInstanceReasonCodes

-- | password-not-available
PasswordNotAvailable :: ReportInstanceReasonCodes

-- | performance-ebs-volume
PerformanceEbsVolume :: ReportInstanceReasonCodes

-- | performance-instance-store
PerformanceInstanceStore :: ReportInstanceReasonCodes

-- | performance-network
PerformanceNetwork :: ReportInstanceReasonCodes

-- | performance-other
PerformanceOther :: ReportInstanceReasonCodes

-- | unresponsive
Unresponsive :: ReportInstanceReasonCodes
data MoveStatus

-- | movingToVpc
MovingToVpc :: MoveStatus

-- | restoringToClassic
RestoringToClassic :: MoveStatus
data EbsBlockDevice

-- | <a>EbsBlockDevice</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ebdDeleteOnTermination</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>ebdEncrypted</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>ebdIops</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>ebdSnapshotId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ebdVolumeSize</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>ebdVolumeType</a> <tt>::</tt> <a>Maybe</a>
--   <a>VolumeType</a></li>
--   </ul>
ebsBlockDevice :: EbsBlockDevice

-- | Indicates whether the EBS volume is deleted on instance termination.
ebdDeleteOnTermination :: Lens' EbsBlockDevice (Maybe Bool)

-- | Indicates whether the EBS volume is encrypted. Encrypted Amazon EBS
--   volumes may only be attached to instances that support Amazon EBS
--   encryption.
ebdEncrypted :: Lens' EbsBlockDevice (Maybe Bool)

-- | The number of I/O operations per second (IOPS) that the volume
--   supports. For Provisioned IOPS (SSD) volumes, this represents the
--   number of IOPS that are provisioned for the volume. For General
--   Purpose (SSD) volumes, this represents the baseline performance of the
--   volume and the rate at which the volume accumulates I/O credits for
--   bursting. For more information on General Purpose (SSD) baseline
--   performance, I<i>O credits, and bursting, see
--   &lt;http:</i><i>docs.aws.amazon.com</i>AWSEC2<i>latest</i>UserGuide<i>EBSVolumeTypes.html
--   Amazon EBSVolume Types&gt; in the </i>Amazon Elastic Compute Cloud
--   User Guide/.
--   
--   Constraint: Range is 100 to 20000 for Provisioned IOPS (SSD) volumes
--   and 3 to 10000 for General Purpose (SSD) volumes.
--   
--   Condition: This parameter is required for requests to create
--   <tt>io1</tt> volumes; it is not used in requests to create
--   <tt>standard</tt> or <tt>gp2</tt> volumes.
ebdIops :: Lens' EbsBlockDevice (Maybe Int)

-- | The ID of the snapshot.
ebdSnapshotId :: Lens' EbsBlockDevice (Maybe Text)

-- | The size of the volume, in GiB.
--   
--   Constraints: '1-1024' for <tt>standard</tt> volumes, '1-16384' for
--   <tt>gp2</tt> volumes, and '4-16384' for <tt>io1</tt> volumes. If you
--   specify a snapshot, the volume size must be equal to or larger than
--   the snapshot size.
--   
--   Default: If you're creating the volume from a snapshot and don't
--   specify a volume size, the default is the snapshot size.
ebdVolumeSize :: Lens' EbsBlockDevice (Maybe Int)

-- | The volume type. <tt>gp2</tt> for General Purpose (SSD) volumes,
--   <tt>io1</tt> for Provisioned IOPS (SSD) volumes, and <tt>standard</tt>
--   for Magnetic volumes.
--   
--   Default: <tt>standard</tt>
ebdVolumeType :: Lens' EbsBlockDevice (Maybe VolumeType)
data AccountAttribute

-- | <a>AccountAttribute</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>aaAttributeName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>aaAttributeValues</a> <tt>::</tt>
--   [<a>AccountAttributeValue</a>]</li>
--   </ul>
accountAttribute :: AccountAttribute

-- | The name of the account attribute.
aaAttributeName :: Lens' AccountAttribute (Maybe Text)

-- | One or more values for the account attribute.
aaAttributeValues :: Lens' AccountAttribute [AccountAttributeValue]
data SnapshotDetail

-- | <a>SnapshotDetail</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sdDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>sdDeviceName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>sdDiskImageSize</a> <tt>::</tt> <a>Maybe</a> <a>Double</a></li>
--   <li><a>sdFormat</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>sdProgress</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>sdSnapshotId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>sdStatus</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>sdStatusMessage</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>sdUrl</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>sdUserBucket</a> <tt>::</tt> <a>Maybe</a>
--   <a>UserBucketDetails</a></li>
--   </ul>
snapshotDetail :: SnapshotDetail

-- | A description for the snapshot.
sdDescription :: Lens' SnapshotDetail (Maybe Text)

-- | The block device mapping for the snapshot.
sdDeviceName :: Lens' SnapshotDetail (Maybe Text)

-- | The size of the disk in the snapshot, in GiB.
sdDiskImageSize :: Lens' SnapshotDetail (Maybe Double)

-- | The format of the disk image from which the snapshot is created.
sdFormat :: Lens' SnapshotDetail (Maybe Text)

-- | The percentage of progress for the task.
sdProgress :: Lens' SnapshotDetail (Maybe Text)

-- | The snapshot ID of the disk being imported.
sdSnapshotId :: Lens' SnapshotDetail (Maybe Text)

-- | A brief status of the snapshot creation.
sdStatus :: Lens' SnapshotDetail (Maybe Text)

-- | A detailed status message for the snapshot creation.
sdStatusMessage :: Lens' SnapshotDetail (Maybe Text)

-- | The URL used to access the disk image.
sdUrl :: Lens' SnapshotDetail (Maybe Text)
sdUserBucket :: Lens' SnapshotDetail (Maybe UserBucketDetails)
data PriceSchedule

-- | <a>PriceSchedule</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>psActive</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>psCurrencyCode</a> <tt>::</tt> <a>Maybe</a>
--   <a>CurrencyCodeValues</a></li>
--   <li><a>psPrice</a> <tt>::</tt> <a>Maybe</a> <a>Double</a></li>
--   <li><a>psTerm</a> <tt>::</tt> <a>Maybe</a> <a>Integer</a></li>
--   </ul>
priceSchedule :: PriceSchedule

-- | The current price schedule, as determined by the term remaining for
--   the Reserved Instance in the listing.
--   
--   A specific price schedule is always in effect, but only one price
--   schedule can be active at any time. Take, for example, a Reserved
--   Instance listing that has five months remaining in its term. When you
--   specify price schedules for five months and two months, this means
--   that schedule 1, covering the first three months of the remaining
--   term, will be active during months 5, 4, and 3. Then schedule 2,
--   covering the last two months of the term, will be active for months 2
--   and 1.
psActive :: Lens' PriceSchedule (Maybe Bool)

-- | The currency for transacting the Reserved Instance resale. At this
--   time, the only supported currency is <tt>USD</tt>.
psCurrencyCode :: Lens' PriceSchedule (Maybe CurrencyCodeValues)

-- | The fixed price for the term.
psPrice :: Lens' PriceSchedule (Maybe Double)

-- | The number of months remaining in the reservation. For example, 2 is
--   the second to the last month before the capacity reservation expires.
psTerm :: Lens' PriceSchedule (Maybe Integer)
data DeviceType

-- | ebs
Ebs :: DeviceType

-- | instance-store
InstanceStore :: DeviceType
data DomainType

-- | standard
DTStandard :: DomainType

-- | vpc
DTVpc :: DomainType
data Region

-- | <a>Region</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rEndpoint</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rRegionName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
region :: Region

-- | The region service endpoint.
rEndpoint :: Lens' Region (Maybe Text)

-- | The name of the region.
rRegionName :: Lens' Region (Maybe Text)
data PropagatingVgw

-- | <a>PropagatingVgw</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pvGatewayId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
propagatingVgw :: PropagatingVgw

-- | The ID of the virtual private gateway (VGW).
pvGatewayId :: Lens' PropagatingVgw (Maybe Text)
data OfferingTypeValues

-- | All Upfront
AllUpfront :: OfferingTypeValues

-- | Heavy Utilization
HeavyUtilization :: OfferingTypeValues

-- | Light Utilization
LightUtilization :: OfferingTypeValues

-- | Medium Utilization
MediumUtilization :: OfferingTypeValues

-- | No Upfront
NoUpfront :: OfferingTypeValues

-- | Partial Upfront
PartialUpfront :: OfferingTypeValues
data VpnGateway

-- | <a>VpnGateway</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vgAvailabilityZone</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>vgState</a> <tt>::</tt> <a>Maybe</a> <a>VpnState</a></li>
--   <li><a>vgTags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   <li><a>vgType</a> <tt>::</tt> <a>Maybe</a> <a>GatewayType</a></li>
--   <li><a>vgVpcAttachments</a> <tt>::</tt> [<a>VpcAttachment</a>]</li>
--   <li><a>vgVpnGatewayId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
vpnGateway :: VpnGateway

-- | The Availability Zone where the virtual private gateway was created.
vgAvailabilityZone :: Lens' VpnGateway (Maybe Text)

-- | The current state of the virtual private gateway.
vgState :: Lens' VpnGateway (Maybe VpnState)

-- | Any tags assigned to the virtual private gateway.
vgTags :: Lens' VpnGateway [Tag]

-- | The type of VPN connection the virtual private gateway supports.
vgType :: Lens' VpnGateway (Maybe GatewayType)

-- | Any VPCs attached to the virtual private gateway.
vgVpcAttachments :: Lens' VpnGateway [VpcAttachment]

-- | The ID of the virtual private gateway.
vgVpnGatewayId :: Lens' VpnGateway (Maybe Text)
data EventInformation

-- | <a>EventInformation</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>eiEventDescription</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>eiEventSubType</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>eiInstanceId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
eventInformation :: EventInformation

-- | The description of the event.
eiEventDescription :: Lens' EventInformation (Maybe Text)

-- | The event.
--   
--   The following are the <tt>error</tt> events.
--   
--   <tt>iamFleetRoleInvalid</tt> - Spot fleet did not have the required
--   permissions either to launch or terminate an instance.
--   
--   <tt>spotFleetRequestConfigurationInvalid</tt> - The configuration is
--   not valid. For more information, see the description.
--   <tt>spotInstanceCountLimitExceeded</tt> - You've reached the limit on
--   the number of Spot Instances that you can launch.
--   
--   The following are the <tt>fleetRequestChange</tt> events.
--   
--   <tt>active</tt> - The Spot fleet has been validated and Amazon EC2 is
--   attempting to maintain the target number of running Spot Instances.
--   
--   <tt>cancelled</tt> - The Spot fleet is canceled and has no running
--   Spot Instances. The Spot fleet will be deleted two days after its
--   instances were terminated.
--   
--   <tt>cancelled_running</tt> - The Spot fleet is canceled and will not
--   launch additional Spot Instances, but its existing Spot Instances will
--   continue to run until they are interrupted or terminated.
--   
--   <tt>cancelled_terminating</tt> - The Spot fleet is canceled and its
--   Spot Instances are terminating.
--   
--   <tt>expired</tt> - The Spot fleet request has expired. A subsequent
--   event indicates that the instances were terminated, if the request was
--   created with <tt>terminateInstancesWithExpiration</tt> set.
--   
--   <tt>price_update</tt> - The bid price for a launch configuration was
--   adjusted because it was too high. This change is permanent.
--   
--   <tt>submitted</tt> - The Spot fleet request is being evaluated and
--   Amazon EC2 is preparing to launch the target number of Spot Instances.
--   
--   The following are the <tt>instanceChange</tt> events.
--   
--   <tt>launched</tt> - A bid was fulfilled and a new instance was
--   launched.
--   
--   <tt>terminated</tt> - An instance was terminated by the user.
eiEventSubType :: Lens' EventInformation (Maybe Text)

-- | The ID of the instance. This information is available only for
--   <tt>instanceChange</tt> events.
eiInstanceId :: Lens' EventInformation (Maybe Text)
data Filter

-- | <a>Filter</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>fName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>fValues</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
filter' :: Text -> Filter

-- | The name of the filter. Filter names are case-sensitive.
fName :: Lens' Filter Text

-- | One or more filter values. Filter values are case-sensitive.
fValues :: Lens' Filter [Text]
data VolumeType

-- | gp2
Gp2 :: VolumeType

-- | io1
Io1 :: VolumeType

-- | standard
Standard :: VolumeType
data InstanceStateChange

-- | <a>InstanceStateChange</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>iscCurrentState</a> <tt>::</tt> <a>Maybe</a>
--   <a>InstanceState</a></li>
--   <li><a>iscInstanceId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iscPreviousState</a> <tt>::</tt> <a>Maybe</a>
--   <a>InstanceState</a></li>
--   </ul>
instanceStateChange :: InstanceStateChange

-- | The current state of the instance.
iscCurrentState :: Lens' InstanceStateChange (Maybe InstanceState)

-- | The ID of the instance.
iscInstanceId :: Lens' InstanceStateChange (Maybe Text)

-- | The previous state of the instance.
iscPreviousState :: Lens' InstanceStateChange (Maybe InstanceState)
data NetworkAcl

-- | <a>NetworkAcl</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>naAssociations</a> <tt>::</tt>
--   [<a>NetworkAclAssociation</a>]</li>
--   <li><a>naEntries</a> <tt>::</tt> [<a>NetworkAclEntry</a>]</li>
--   <li><a>naIsDefault</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>naNetworkAclId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>naTags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   <li><a>naVpcId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
networkAcl :: NetworkAcl

-- | Any associations between the network ACL and one or more subnets
naAssociations :: Lens' NetworkAcl [NetworkAclAssociation]

-- | One or more entries (rules) in the network ACL.
naEntries :: Lens' NetworkAcl [NetworkAclEntry]

-- | Indicates whether this is the default network ACL for the VPC.
naIsDefault :: Lens' NetworkAcl (Maybe Bool)

-- | The ID of the network ACL.
naNetworkAclId :: Lens' NetworkAcl (Maybe Text)

-- | Any tags assigned to the network ACL.
naTags :: Lens' NetworkAcl [Tag]

-- | The ID of the VPC for the network ACL.
naVpcId :: Lens' NetworkAcl (Maybe Text)
data ImageState

-- | available
ISAvailable :: ImageState

-- | deregistered
ISDeregistered :: ImageState

-- | error
ISError :: ImageState

-- | failed
ISFailed :: ImageState

-- | invalid
ISInvalid :: ImageState

-- | pending
ISPending :: ImageState

-- | transient
ISTransient :: ImageState
data GatewayType

-- | ipsec.1
Ipsec1 :: GatewayType
data InstanceNetworkInterfaceAttachment

-- | <a>InstanceNetworkInterfaceAttachment</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>iniaAttachTime</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>iniaAttachmentId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iniaDeleteOnTermination</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>iniaDeviceIndex</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>iniaStatus</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttachmentStatus</a></li>
--   </ul>
instanceNetworkInterfaceAttachment :: InstanceNetworkInterfaceAttachment

-- | The time stamp when the attachment initiated.
iniaAttachTime :: Lens' InstanceNetworkInterfaceAttachment (Maybe UTCTime)

-- | The ID of the network interface attachment.
iniaAttachmentId :: Lens' InstanceNetworkInterfaceAttachment (Maybe Text)

-- | Indicates whether the network interface is deleted when the instance
--   is terminated.
iniaDeleteOnTermination :: Lens' InstanceNetworkInterfaceAttachment (Maybe Bool)

-- | The index of the device on the instance for the network interface
--   attachment.
iniaDeviceIndex :: Lens' InstanceNetworkInterfaceAttachment (Maybe Int)

-- | The attachment state.
iniaStatus :: Lens' InstanceNetworkInterfaceAttachment (Maybe AttachmentStatus)
data AttributeBooleanValue

-- | <a>AttributeBooleanValue</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>abvValue</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   </ul>
attributeBooleanValue :: AttributeBooleanValue

-- | Valid values are <tt>true</tt> or <tt>false</tt>.
abvValue :: Lens' AttributeBooleanValue (Maybe Bool)
data RecurringCharge

-- | <a>RecurringCharge</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rcAmount</a> <tt>::</tt> <a>Maybe</a> <a>Double</a></li>
--   <li><a>rcFrequency</a> <tt>::</tt> <a>Maybe</a>
--   <a>RecurringChargeFrequency</a></li>
--   </ul>
recurringCharge :: RecurringCharge

-- | The amount of the recurring charge.
rcAmount :: Lens' RecurringCharge (Maybe Double)

-- | The frequency of the recurring charge.
rcFrequency :: Lens' RecurringCharge (Maybe RecurringChargeFrequency)
data NewDhcpConfiguration

-- | <a>NewDhcpConfiguration</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ndcKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ndcValues</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
newDhcpConfiguration :: NewDhcpConfiguration
ndcKey :: Lens' NewDhcpConfiguration (Maybe Text)
ndcValues :: Lens' NewDhcpConfiguration [Text]
data StateReason

-- | <a>StateReason</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>srCode</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>srMessage</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
stateReason :: StateReason

-- | The reason code for the state change.
srCode :: Lens' StateReason (Maybe Text)

-- | The message for the state change.
--   
--   <a>SpotInstanceTermination</a>: A Spot Instance was terminated due to
--   an increase in the market price.
--   
--   <a>InternalError</a>: An internal error occurred during instance
--   launch, resulting in termination.
--   
--   <a>InsufficientInstanceCapacity</a>: There was insufficient instance
--   capacity to satisfy the launch request.
--   
--   <a>InternalError</a>: A client error caused the instance to terminate
--   on launch.
--   
--   <a>InstanceInitiatedShutdown</a>: The instance was shut down using the
--   'shutdown -h' command from the instance.
--   
--   <a>UserInitiatedShutdown</a>: The instance was shut down using the
--   Amazon EC2 API.
--   
--   <a>VolumeLimitExceeded</a>: The volume limit was exceeded.
--   
--   <a>NotFound</a>: The specified snapshot was not found.
srMessage :: Lens' StateReason (Maybe Text)
data MonitoringState

-- | disabled
MSDisabled :: MonitoringState

-- | disabling
MSDisabling :: MonitoringState

-- | enabled
MSEnabled :: MonitoringState

-- | pending
MSPending :: MonitoringState
data ReservedInstancesId

-- | <a>ReservedInstancesId</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>riiReservedInstancesId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
reservedInstancesId :: ReservedInstancesId

-- | The ID of the Reserved Instance.
riiReservedInstancesId :: Lens' ReservedInstancesId (Maybe Text)
data StatusName

-- | reachability
Reachability :: StatusName
data InternetGateway

-- | <a>InternetGateway</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>igAttachments</a> <tt>::</tt>
--   [<a>InternetGatewayAttachment</a>]</li>
--   <li><a>igInternetGatewayId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>igTags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   </ul>
internetGateway :: Text -> InternetGateway

-- | Any VPCs attached to the Internet gateway.
igAttachments :: Lens' InternetGateway [InternetGatewayAttachment]

-- | The ID of the Internet gateway.
igInternetGatewayId :: Lens' InternetGateway Text

-- | Any tags assigned to the Internet gateway.
igTags :: Lens' InternetGateway [Tag]
data VolumeStatusName

-- | io-enabled
IoEnabled :: VolumeStatusName

-- | io-performance
IoPerformance :: VolumeStatusName
data VolumeAttributeName

-- | autoEnableIO
AutoEnableIO :: VolumeAttributeName

-- | productCodes
ProductCodes :: VolumeAttributeName
data ImportInstanceTaskDetails

-- | <a>ImportInstanceTaskDetails</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>iitdDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iitdInstanceId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iitdPlatform</a> <tt>::</tt> <a>Maybe</a>
--   <a>PlatformValues</a></li>
--   <li><a>iitdVolumes</a> <tt>::</tt>
--   [<a>ImportInstanceVolumeDetailItem</a>]</li>
--   </ul>
importInstanceTaskDetails :: ImportInstanceTaskDetails

-- | A description of the task.
iitdDescription :: Lens' ImportInstanceTaskDetails (Maybe Text)

-- | The ID of the instance.
iitdInstanceId :: Lens' ImportInstanceTaskDetails (Maybe Text)

-- | The instance operating system.
iitdPlatform :: Lens' ImportInstanceTaskDetails (Maybe PlatformValues)

-- | One or more volumes.
iitdVolumes :: Lens' ImportInstanceTaskDetails [ImportInstanceVolumeDetailItem]
data PlacementGroup

-- | <a>PlacementGroup</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pgGroupName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pgState</a> <tt>::</tt> <a>Maybe</a>
--   <a>PlacementGroupState</a></li>
--   <li><a>pgStrategy</a> <tt>::</tt> <a>Maybe</a>
--   <a>PlacementStrategy</a></li>
--   </ul>
placementGroup :: PlacementGroup

-- | The name of the placement group.
pgGroupName :: Lens' PlacementGroup (Maybe Text)

-- | The state of the placement group.
pgState :: Lens' PlacementGroup (Maybe PlacementGroupState)

-- | The placement strategy.
pgStrategy :: Lens' PlacementGroup (Maybe PlacementStrategy)
data ProductCode

-- | <a>ProductCode</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pcProductCodeId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pcProductCodeType</a> <tt>::</tt> <a>Maybe</a>
--   <a>ProductCodeValues</a></li>
--   </ul>
productCode :: ProductCode

-- | The product code.
pcProductCodeId :: Lens' ProductCode (Maybe Text)

-- | The type of product code.
pcProductCodeType :: Lens' ProductCode (Maybe ProductCodeValues)
data ListingStatus

-- | active
ListingStatusActive :: ListingStatus

-- | cancelled
ListingStatusCancelled :: ListingStatus

-- | closed
ListingStatusClosed :: ListingStatus

-- | pending
ListingStatusPending :: ListingStatus
data IpRange

-- | <a>IpRange</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>irCidrIp</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
ipRange :: Text -> IpRange

-- | The CIDR range. You can either specify a CIDR range or a source
--   security group, not both.
irCidrIp :: Lens' IpRange Text
data VolumeStatusInfoStatus

-- | impaired
VSISImpaired :: VolumeStatusInfoStatus

-- | insufficient-data
VSISInsufficientData :: VolumeStatusInfoStatus

-- | ok
VSISOk :: VolumeStatusInfoStatus
data AccountAttributeValue

-- | <a>AccountAttributeValue</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>aavAttributeValue</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
accountAttributeValue :: AccountAttributeValue

-- | The value of the attribute.
aavAttributeValue :: Lens' AccountAttributeValue (Maybe Text)
data SnapshotDiskContainer

-- | <a>SnapshotDiskContainer</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sdcDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>sdcFormat</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>sdcUrl</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>sdcUserBucket</a> <tt>::</tt> <a>Maybe</a>
--   <a>UserBucket</a></li>
--   </ul>
snapshotDiskContainer :: SnapshotDiskContainer

-- | The description of the disk image being imported.
sdcDescription :: Lens' SnapshotDiskContainer (Maybe Text)

-- | The format of the disk image being imported.
--   
--   Valid values: <tt>RAW</tt> | <tt>VHD</tt> | <tt>VMDK</tt> |
--   <tt>OVA</tt>
sdcFormat :: Lens' SnapshotDiskContainer (Maybe Text)

-- | The URL to the Amazon S3-based disk image being imported. It can
--   either be a https URL (https:/<i>..) or an Amazon S3 URL (s3:</i>/..).
sdcUrl :: Lens' SnapshotDiskContainer (Maybe Text)
sdcUserBucket :: Lens' SnapshotDiskContainer (Maybe UserBucket)
data RIProductDescription

-- | Linux/UNIX
RIPDLinuxUNIX :: RIProductDescription

-- | Linux/UNIX (Amazon VPC)
RIPDLinuxUNIXAmazonVPC :: RIProductDescription

-- | Windows
RIPDWindows :: RIProductDescription

-- | Windows (Amazon VPC)
RIPDWindowsAmazonVPC :: RIProductDescription
data ReservedInstancesOffering

-- | <a>ReservedInstancesOffering</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rioAvailabilityZone</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>rioCurrencyCode</a> <tt>::</tt> <a>Maybe</a>
--   <a>CurrencyCodeValues</a></li>
--   <li><a>rioDuration</a> <tt>::</tt> <a>Maybe</a> <a>Integer</a></li>
--   <li><a>rioFixedPrice</a> <tt>::</tt> <a>Maybe</a> <a>Double</a></li>
--   <li><a>rioInstanceTenancy</a> <tt>::</tt> <a>Maybe</a>
--   <a>Tenancy</a></li>
--   <li><a>rioInstanceType</a> <tt>::</tt> <a>Maybe</a>
--   <a>InstanceType</a></li>
--   <li><a>rioMarketplace</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>rioOfferingType</a> <tt>::</tt> <a>Maybe</a>
--   <a>OfferingTypeValues</a></li>
--   <li><a>rioPricingDetails</a> <tt>::</tt> [<a>PricingDetail</a>]</li>
--   <li><a>rioProductDescription</a> <tt>::</tt> <a>Maybe</a>
--   <a>RIProductDescription</a></li>
--   <li><a>rioRecurringCharges</a> <tt>::</tt>
--   [<a>RecurringCharge</a>]</li>
--   <li><a>rioReservedInstancesOfferingId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>rioUsagePrice</a> <tt>::</tt> <a>Maybe</a> <a>Double</a></li>
--   </ul>
reservedInstancesOffering :: ReservedInstancesOffering

-- | The Availability Zone in which the Reserved Instance can be used.
rioAvailabilityZone :: Lens' ReservedInstancesOffering (Maybe Text)

-- | The currency of the Reserved Instance offering you are purchasing.
--   It's specified using ISO 4217 standard currency codes. At this time,
--   the only supported currency is <tt>USD</tt>.
rioCurrencyCode :: Lens' ReservedInstancesOffering (Maybe CurrencyCodeValues)

-- | The duration of the Reserved Instance, in seconds.
rioDuration :: Lens' ReservedInstancesOffering (Maybe Integer)

-- | The purchase price of the Reserved Instance.
rioFixedPrice :: Lens' ReservedInstancesOffering (Maybe Double)

-- | The tenancy of the reserved instance.
rioInstanceTenancy :: Lens' ReservedInstancesOffering (Maybe Tenancy)

-- | The instance type on which the Reserved Instance can be used.
rioInstanceType :: Lens' ReservedInstancesOffering (Maybe InstanceType)

-- | Indicates whether the offering is available through the Reserved
--   Instance Marketplace (resale) or AWS. If it's a Reserved Instance
--   Marketplace offering, this is <tt>true</tt>.
rioMarketplace :: Lens' ReservedInstancesOffering (Maybe Bool)

-- | The Reserved Instance offering type.
rioOfferingType :: Lens' ReservedInstancesOffering (Maybe OfferingTypeValues)

-- | The pricing details of the Reserved Instance offering.
rioPricingDetails :: Lens' ReservedInstancesOffering [PricingDetail]

-- | The Reserved Instance description.
rioProductDescription :: Lens' ReservedInstancesOffering (Maybe RIProductDescription)

-- | The recurring charge tag assigned to the resource.
rioRecurringCharges :: Lens' ReservedInstancesOffering [RecurringCharge]

-- | The ID of the Reserved Instance offering.
rioReservedInstancesOfferingId :: Lens' ReservedInstancesOffering (Maybe Text)

-- | The usage price of the Reserved Instance, per hour.
rioUsagePrice :: Lens' ReservedInstancesOffering (Maybe Double)
data ReservedInstances

-- | <a>ReservedInstances</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ri1AvailabilityZone</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>ri1CurrencyCode</a> <tt>::</tt> <a>Maybe</a>
--   <a>CurrencyCodeValues</a></li>
--   <li><a>ri1Duration</a> <tt>::</tt> <a>Maybe</a> <a>Integer</a></li>
--   <li><a>ri1End</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>ri1FixedPrice</a> <tt>::</tt> <a>Maybe</a> <a>Double</a></li>
--   <li><a>ri1InstanceCount</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>ri1InstanceTenancy</a> <tt>::</tt> <a>Maybe</a>
--   <a>Tenancy</a></li>
--   <li><a>ri1InstanceType</a> <tt>::</tt> <a>Maybe</a>
--   <a>InstanceType</a></li>
--   <li><a>ri1OfferingType</a> <tt>::</tt> <a>Maybe</a>
--   <a>OfferingTypeValues</a></li>
--   <li><a>ri1ProductDescription</a> <tt>::</tt> <a>Maybe</a>
--   <a>RIProductDescription</a></li>
--   <li><a>ri1RecurringCharges</a> <tt>::</tt>
--   [<a>RecurringCharge</a>]</li>
--   <li><a>ri1ReservedInstancesId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>ri1Start</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>ri1State</a> <tt>::</tt> <a>Maybe</a>
--   <a>ReservedInstanceState</a></li>
--   <li><a>ri1Tags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   <li><a>ri1UsagePrice</a> <tt>::</tt> <a>Maybe</a> <a>Double</a></li>
--   </ul>
reservedInstances :: ReservedInstances

-- | The Availability Zone in which the Reserved Instance can be used.
ri1AvailabilityZone :: Lens' ReservedInstances (Maybe Text)

-- | The currency of the Reserved Instance. It's specified using ISO 4217
--   standard currency codes. At this time, the only supported currency is
--   <tt>USD</tt>.
ri1CurrencyCode :: Lens' ReservedInstances (Maybe CurrencyCodeValues)

-- | The duration of the Reserved Instance, in seconds.
ri1Duration :: Lens' ReservedInstances (Maybe Integer)

-- | The time when the Reserved Instance expires.
ri1End :: Lens' ReservedInstances (Maybe UTCTime)

-- | The purchase price of the Reserved Instance.
ri1FixedPrice :: Lens' ReservedInstances (Maybe Double)

-- | The number of Reserved Instances purchased.
ri1InstanceCount :: Lens' ReservedInstances (Maybe Int)

-- | The tenancy of the reserved instance.
ri1InstanceTenancy :: Lens' ReservedInstances (Maybe Tenancy)

-- | The instance type on which the Reserved Instance can be used.
ri1InstanceType :: Lens' ReservedInstances (Maybe InstanceType)

-- | The Reserved Instance offering type.
ri1OfferingType :: Lens' ReservedInstances (Maybe OfferingTypeValues)

-- | The Reserved Instance description.
ri1ProductDescription :: Lens' ReservedInstances (Maybe RIProductDescription)

-- | The recurring charge tag assigned to the resource.
ri1RecurringCharges :: Lens' ReservedInstances [RecurringCharge]

-- | The ID of the Reserved Instance.
ri1ReservedInstancesId :: Lens' ReservedInstances (Maybe Text)

-- | The date and time the Reserved Instance started.
ri1Start :: Lens' ReservedInstances (Maybe UTCTime)

-- | The state of the Reserved Instance purchase.
ri1State :: Lens' ReservedInstances (Maybe ReservedInstanceState)

-- | Any tags assigned to the resource.
ri1Tags :: Lens' ReservedInstances [Tag]

-- | The usage price of the Reserved Instance, per hour.
ri1UsagePrice :: Lens' ReservedInstances (Maybe Double)
data DatafeedSubscriptionState

-- | Active
DSSActive :: DatafeedSubscriptionState

-- | Inactive
DSSInactive :: DatafeedSubscriptionState
data ExportTaskState

-- | active
ETSActive :: ExportTaskState

-- | cancelled
ETSCancelled :: ExportTaskState

-- | cancelling
ETSCancelling :: ExportTaskState

-- | completed
ETSCompleted :: ExportTaskState
data ProductCodeValues

-- | devpay
Devpay :: ProductCodeValues

-- | marketplace
Marketplace :: ProductCodeValues
data VpnConnection

-- | <a>VpnConnection</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vcCustomerGatewayConfiguration</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>vcCustomerGatewayId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>vcOptions</a> <tt>::</tt> <a>Maybe</a>
--   <a>VpnConnectionOptions</a></li>
--   <li><a>vcRoutes</a> <tt>::</tt> [<a>VpnStaticRoute</a>]</li>
--   <li><a>vcState</a> <tt>::</tt> <a>VpnState</a></li>
--   <li><a>vcTags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   <li><a>vcType</a> <tt>::</tt> <a>GatewayType</a></li>
--   <li><a>vcVgwTelemetry</a> <tt>::</tt> [<a>VgwTelemetry</a>]</li>
--   <li><a>vcVpnConnectionId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>vcVpnGatewayId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
vpnConnection :: Text -> VpnState -> Text -> GatewayType -> Text -> VpnConnection

-- | The configuration information for the VPN connection's customer
--   gateway (in the native XML format). This element is always present in
--   the <tt>CreateVpnConnection</tt> response; however, it's present in
--   the <tt>DescribeVpnConnections</tt> response only if the VPN
--   connection is in the <tt>pending</tt> or <tt>available</tt> state.
vcCustomerGatewayConfiguration :: Lens' VpnConnection Text

-- | The ID of the customer gateway at your end of the VPN connection.
vcCustomerGatewayId :: Lens' VpnConnection Text

-- | The VPN connection options.
vcOptions :: Lens' VpnConnection (Maybe VpnConnectionOptions)

-- | The static routes associated with the VPN connection.
vcRoutes :: Lens' VpnConnection [VpnStaticRoute]

-- | The current state of the VPN connection.
vcState :: Lens' VpnConnection VpnState

-- | Any tags assigned to the VPN connection.
vcTags :: Lens' VpnConnection [Tag]

-- | The type of VPN connection.
vcType :: Lens' VpnConnection GatewayType

-- | Information about the VPN tunnel.
vcVgwTelemetry :: Lens' VpnConnection [VgwTelemetry]

-- | The ID of the VPN connection.
vcVpnConnectionId :: Lens' VpnConnection Text

-- | The ID of the virtual private gateway at the AWS side of the VPN
--   connection.
vcVpnGatewayId :: Lens' VpnConnection (Maybe Text)
data InstanceState

-- | <a>InstanceState</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>isCode</a> <tt>::</tt> <a>Int</a></li>
--   <li><a>isName</a> <tt>::</tt> <a>InstanceStateName</a></li>
--   </ul>
instanceState :: Int -> InstanceStateName -> InstanceState

-- | The low byte represents the state. The high byte is an opaque internal
--   value and should be ignored.
--   
--   '0' : <tt>pending</tt>
--   
--   '16' : <tt>running</tt>
--   
--   '32' : 'shutting-down'
--   
--   '48' : <tt>terminated</tt>
--   
--   '64' : <tt>stopping</tt>
--   
--   '80' : <tt>stopped</tt>
isCode :: Lens' InstanceState Int

-- | The current state of the instance.
isName :: Lens' InstanceState InstanceStateName
data VpcEndpoint

-- | <a>VpcEndpoint</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>veCreationTimestamp</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>vePolicyDocument</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>veRouteTableIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>veServiceName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>veState</a> <tt>::</tt> <a>Maybe</a> <a>State</a></li>
--   <li><a>veVpcEndpointId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>veVpcId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
vpcEndpoint :: VpcEndpoint

-- | The date and time the VPC endpoint was created.
veCreationTimestamp :: Lens' VpcEndpoint (Maybe UTCTime)

-- | The policy document associated with the endpoint.
vePolicyDocument :: Lens' VpcEndpoint (Maybe Text)

-- | One or more route tables associated with the endpoint.
veRouteTableIds :: Lens' VpcEndpoint [Text]

-- | The name of the AWS service to which the endpoint is associated.
veServiceName :: Lens' VpcEndpoint (Maybe Text)

-- | The state of the VPC endpoint.
veState :: Lens' VpcEndpoint (Maybe State)

-- | The ID of the VPC endpoint.
veVpcEndpointId :: Lens' VpcEndpoint (Maybe Text)

-- | The ID of the VPC to which the endpoint is associated.
veVpcId :: Lens' VpcEndpoint (Maybe Text)
data ClientData

-- | <a>ClientData</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cdComment</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cdUploadEnd</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>cdUploadSize</a> <tt>::</tt> <a>Maybe</a> <a>Double</a></li>
--   <li><a>cdUploadStart</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   </ul>
clientData :: ClientData

-- | A user-defined comment about the disk upload.
cdComment :: Lens' ClientData (Maybe Text)

-- | The time that the disk upload ends.
cdUploadEnd :: Lens' ClientData (Maybe UTCTime)

-- | The size of the uploaded disk image, in GiB.
cdUploadSize :: Lens' ClientData (Maybe Double)

-- | The time that the disk upload starts.
cdUploadStart :: Lens' ClientData (Maybe UTCTime)
data Placement

-- | <a>Placement</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pAvailabilityZone</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pGroupName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>pTenancy</a> <tt>::</tt> <a>Maybe</a> <a>Tenancy</a></li>
--   </ul>
placement :: Placement

-- | The Availability Zone of the instance.
pAvailabilityZone :: Lens' Placement (Maybe Text)

-- | The name of the placement group the instance is in (for cluster
--   compute instances).
pGroupName :: Lens' Placement (Maybe Text)

-- | The tenancy of the instance (if the instance is running in a VPC). An
--   instance with a tenancy of <tt>dedicated</tt> runs on single-tenant
--   hardware.
pTenancy :: Lens' Placement (Maybe Tenancy)
data EventCode

-- | instance-reboot
InstanceReboot :: EventCode

-- | instance-retirement
InstanceRetirement :: EventCode

-- | instance-stop
InstanceStop :: EventCode

-- | system-maintenance
SystemMaintenance :: EventCode

-- | system-reboot
SystemReboot :: EventCode
data SpotInstanceType

-- | one-time
OneTime :: SpotInstanceType

-- | persistent
Persistent :: SpotInstanceType
data VpcPeeringConnection

-- | <a>VpcPeeringConnection</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vpc1AccepterVpcInfo</a> <tt>::</tt> <a>Maybe</a>
--   <a>VpcPeeringConnectionVpcInfo</a></li>
--   <li><a>vpc1ExpirationTime</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>vpc1RequesterVpcInfo</a> <tt>::</tt> <a>Maybe</a>
--   <a>VpcPeeringConnectionVpcInfo</a></li>
--   <li><a>vpc1Status</a> <tt>::</tt> <a>Maybe</a>
--   <a>VpcPeeringConnectionStateReason</a></li>
--   <li><a>vpc1Tags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   <li><a>vpc1VpcPeeringConnectionId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
vpcPeeringConnection :: VpcPeeringConnection

-- | The information of the peer VPC.
vpc1AccepterVpcInfo :: Lens' VpcPeeringConnection (Maybe VpcPeeringConnectionVpcInfo)

-- | The time that an unaccepted VPC peering connection will expire.
vpc1ExpirationTime :: Lens' VpcPeeringConnection (Maybe UTCTime)

-- | The information of the requester VPC.
vpc1RequesterVpcInfo :: Lens' VpcPeeringConnection (Maybe VpcPeeringConnectionVpcInfo)

-- | The status of the VPC peering connection.
vpc1Status :: Lens' VpcPeeringConnection (Maybe VpcPeeringConnectionStateReason)

-- | Any tags assigned to the resource.
vpc1Tags :: Lens' VpcPeeringConnection [Tag]

-- | The ID of the VPC peering connection.
vpc1VpcPeeringConnectionId :: Lens' VpcPeeringConnection (Maybe Text)
data S3Storage

-- | <a>S3Storage</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ssAWSAccessKeyId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ssBucket</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ssPrefix</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ssUploadPolicy</a> <tt>::</tt> <a>Maybe</a> <a>Base64</a></li>
--   <li><a>ssUploadPolicySignature</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
s3Storage :: S3Storage

-- | The access key ID of the owner of the bucket. Before you specify a
--   value for your access key ID, review and follow the guidance in
--   <a>Best Practices forManaging AWS Access Keys</a>.
ssAWSAccessKeyId :: Lens' S3Storage (Maybe Text)

-- | The bucket in which to store the AMI. You can specify a bucket that
--   you already own or a new bucket that Amazon EC2 creates on your
--   behalf. If you specify a bucket that belongs to someone else, Amazon
--   EC2 returns an error.
ssBucket :: Lens' S3Storage (Maybe Text)

-- | The beginning of the file name of the AMI.
ssPrefix :: Lens' S3Storage (Maybe Text)

-- | A Base64-encoded Amazon S3 upload policy that gives Amazon EC2
--   permission to upload items into Amazon S3 on your behalf.
ssUploadPolicy :: Lens' S3Storage (Maybe Base64)

-- | The signature of the Base64 encoded JSON document.
ssUploadPolicySignature :: Lens' S3Storage (Maybe Text)
data VgwTelemetry

-- | <a>VgwTelemetry</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vtAcceptedRouteCount</a> <tt>::</tt> <a>Maybe</a>
--   <a>Int</a></li>
--   <li><a>vtLastStatusChange</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>vtOutsideIpAddress</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>vtStatus</a> <tt>::</tt> <a>Maybe</a>
--   <a>TelemetryStatus</a></li>
--   <li><a>vtStatusMessage</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
vgwTelemetry :: VgwTelemetry

-- | The number of accepted routes.
vtAcceptedRouteCount :: Lens' VgwTelemetry (Maybe Int)

-- | The date and time of the last change in status.
vtLastStatusChange :: Lens' VgwTelemetry (Maybe UTCTime)

-- | The Internet-routable IP address of the virtual private gateway's
--   outside interface.
vtOutsideIpAddress :: Lens' VgwTelemetry (Maybe Text)

-- | The status of the VPN tunnel.
vtStatus :: Lens' VgwTelemetry (Maybe TelemetryStatus)

-- | If an error occurs, a description of the error.
vtStatusMessage :: Lens' VgwTelemetry (Maybe Text)
data VpnStaticRoute

-- | <a>VpnStaticRoute</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vsrDestinationCidrBlock</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>vsrSource</a> <tt>::</tt> <a>Maybe</a>
--   <a>VpnStaticRouteSource</a></li>
--   <li><a>vsrState</a> <tt>::</tt> <a>Maybe</a> <a>VpnState</a></li>
--   </ul>
vpnStaticRoute :: VpnStaticRoute

-- | The CIDR block associated with the local subnet of the customer data
--   center.
vsrDestinationCidrBlock :: Lens' VpnStaticRoute (Maybe Text)

-- | Indicates how the routes were provided.
vsrSource :: Lens' VpnStaticRoute (Maybe VpnStaticRouteSource)

-- | The current state of the static route.
vsrState :: Lens' VpnStaticRoute (Maybe VpnState)
data InstanceStateName

-- | pending
ISNPending :: InstanceStateName

-- | running
ISNRunning :: InstanceStateName

-- | shutting-down
ISNShuttingDown :: InstanceStateName

-- | stopped
ISNStopped :: InstanceStateName

-- | stopping
ISNStopping :: InstanceStateName

-- | terminated
ISNTerminated :: InstanceStateName
data Instance

-- | <a>Instance</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>i1AmiLaunchIndex</a> <tt>::</tt> <a>Int</a></li>
--   <li><a>i1Architecture</a> <tt>::</tt> <a>ArchitectureValues</a></li>
--   <li><a>i1BlockDeviceMappings</a> <tt>::</tt>
--   [<a>InstanceBlockDeviceMapping</a>]</li>
--   <li><a>i1ClientToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>i1EbsOptimized</a> <tt>::</tt> <a>Bool</a></li>
--   <li><a>i1Hypervisor</a> <tt>::</tt> <a>HypervisorType</a></li>
--   <li><a>i1IamInstanceProfile</a> <tt>::</tt> <a>Maybe</a>
--   <a>IamInstanceProfile</a></li>
--   <li><a>i1ImageId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>i1InstanceId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>i1InstanceLifecycle</a> <tt>::</tt> <a>Maybe</a>
--   <a>InstanceLifecycleType</a></li>
--   <li><a>i1InstanceType</a> <tt>::</tt> <a>InstanceType</a></li>
--   <li><a>i1KernelId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>i1KeyName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>i1LaunchTime</a> <tt>::</tt> <a>UTCTime</a></li>
--   <li><a>i1Monitoring</a> <tt>::</tt> <a>Monitoring</a></li>
--   <li><a>i1NetworkInterfaces</a> <tt>::</tt>
--   [<a>InstanceNetworkInterface</a>]</li>
--   <li><a>i1Placement</a> <tt>::</tt> <a>Placement</a></li>
--   <li><a>i1Platform</a> <tt>::</tt> <a>Maybe</a>
--   <a>PlatformValues</a></li>
--   <li><a>i1PrivateDnsName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>i1PrivateIpAddress</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>i1ProductCodes</a> <tt>::</tt> [<a>ProductCode</a>]</li>
--   <li><a>i1PublicDnsName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>i1PublicIpAddress</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>i1RamdiskId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>i1RootDeviceName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>i1RootDeviceType</a> <tt>::</tt> <a>DeviceType</a></li>
--   <li><a>i1SecurityGroups</a> <tt>::</tt> [<a>GroupIdentifier</a>]</li>
--   <li><a>i1SourceDestCheck</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>i1SpotInstanceRequestId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>i1SriovNetSupport</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>i1State</a> <tt>::</tt> <a>InstanceState</a></li>
--   <li><a>i1StateReason</a> <tt>::</tt> <a>Maybe</a>
--   <a>StateReason</a></li>
--   <li><a>i1StateTransitionReason</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>i1SubnetId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>i1Tags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   <li><a>i1VirtualizationType</a> <tt>::</tt>
--   <a>VirtualizationType</a></li>
--   <li><a>i1VpcId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
instance' :: Text -> Text -> InstanceState -> Int -> InstanceType -> UTCTime -> Placement -> Monitoring -> ArchitectureValues -> DeviceType -> VirtualizationType -> HypervisorType -> Bool -> Instance

-- | The AMI launch index, which can be used to find this instance in the
--   launch group.
i1AmiLaunchIndex :: Lens' Instance Int

-- | The architecture of the image.
i1Architecture :: Lens' Instance ArchitectureValues

-- | Any block device mapping entries for the instance.
i1BlockDeviceMappings :: Lens' Instance [InstanceBlockDeviceMapping]

-- | The idempotency token you provided when you launched the instance.
i1ClientToken :: Lens' Instance (Maybe Text)

-- | Indicates whether the instance is optimized for EBS I/O. This
--   optimization provides dedicated throughput to Amazon EBS and an
--   optimized configuration stack to provide optimal I/O performance. This
--   optimization isn't available with all instance types. Additional usage
--   charges apply when using an EBS Optimized instance.
i1EbsOptimized :: Lens' Instance Bool

-- | The hypervisor type of the instance.
i1Hypervisor :: Lens' Instance HypervisorType

-- | The IAM instance profile associated with the instance.
i1IamInstanceProfile :: Lens' Instance (Maybe IamInstanceProfile)

-- | The ID of the AMI used to launch the instance.
i1ImageId :: Lens' Instance Text

-- | The ID of the instance.
i1InstanceId :: Lens' Instance Text

-- | Indicates whether this is a Spot Instance.
i1InstanceLifecycle :: Lens' Instance (Maybe InstanceLifecycleType)

-- | The instance type.
i1InstanceType :: Lens' Instance InstanceType

-- | The kernel associated with this instance.
i1KernelId :: Lens' Instance (Maybe Text)

-- | The name of the key pair, if this instance was launched with an
--   associated key pair.
i1KeyName :: Lens' Instance (Maybe Text)

-- | The time the instance was launched.
i1LaunchTime :: Lens' Instance UTCTime

-- | The monitoring information for the instance.
i1Monitoring :: Lens' Instance Monitoring

-- | <ul>
--   <li><i>EC2-VPC</i> One or more network interfaces for the
--   instance.</li>
--   </ul>
i1NetworkInterfaces :: Lens' Instance [InstanceNetworkInterface]

-- | The location where the instance launched.
i1Placement :: Lens' Instance Placement

-- | The value is <a>Windows</a> for Windows instances; otherwise blank.
i1Platform :: Lens' Instance (Maybe PlatformValues)

-- | The private DNS name assigned to the instance. This DNS name can only
--   be used inside the Amazon EC2 network. This name is not available
--   until the instance enters the <tt>running</tt> state.
i1PrivateDnsName :: Lens' Instance (Maybe Text)

-- | The private IP address assigned to the instance.
i1PrivateIpAddress :: Lens' Instance (Maybe Text)

-- | The product codes attached to this instance.
i1ProductCodes :: Lens' Instance [ProductCode]

-- | The public DNS name assigned to the instance. This name is not
--   available until the instance enters the <tt>running</tt> state.
i1PublicDnsName :: Lens' Instance (Maybe Text)

-- | The public IP address assigned to the instance.
i1PublicIpAddress :: Lens' Instance (Maybe Text)

-- | The RAM disk associated with this instance.
i1RamdiskId :: Lens' Instance (Maybe Text)

-- | The root device name (for example, '/dev/sda1' or '/dev/xvda').
i1RootDeviceName :: Lens' Instance (Maybe Text)

-- | The root device type used by the AMI. The AMI can use an EBS volume or
--   an instance store volume.
i1RootDeviceType :: Lens' Instance DeviceType

-- | One or more security groups for the instance.
i1SecurityGroups :: Lens' Instance [GroupIdentifier]

-- | Specifies whether to enable an instance launched in a VPC to perform
--   NAT. This controls whether source/destination checking is enabled on
--   the instance. A value of <tt>true</tt> means checking is enabled, and
--   <tt>false</tt> means checking is disabled. The value must be
--   <tt>false</tt> for the instance to perform NAT. For more information,
--   see <a>NAT Instances</a> in the <i>Amazon Virtual Private Cloud User
--   Guide</i>.
i1SourceDestCheck :: Lens' Instance (Maybe Bool)

-- | The ID of the Spot Instance request.
i1SpotInstanceRequestId :: Lens' Instance (Maybe Text)

-- | Specifies whether enhanced networking is enabled.
i1SriovNetSupport :: Lens' Instance (Maybe Text)

-- | The current state of the instance.
i1State :: Lens' Instance InstanceState

-- | The reason for the most recent state transition.
i1StateReason :: Lens' Instance (Maybe StateReason)

-- | The reason for the most recent state transition. This might be an
--   empty string.
i1StateTransitionReason :: Lens' Instance (Maybe Text)

-- | The ID of the subnet in which the instance is running.
i1SubnetId :: Lens' Instance (Maybe Text)

-- | Any tags assigned to the instance.
i1Tags :: Lens' Instance [Tag]

-- | The virtualization type of the instance.
i1VirtualizationType :: Lens' Instance VirtualizationType

-- | The ID of the VPC in which the instance is running.
i1VpcId :: Lens' Instance (Maybe Text)
data ExportTask

-- | <a>ExportTask</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>etDescription</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>etExportTaskId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>etExportToS3Task</a> <tt>::</tt> <a>ExportToS3Task</a></li>
--   <li><a>etInstanceExportDetails</a> <tt>::</tt>
--   <a>InstanceExportDetails</a></li>
--   <li><a>etState</a> <tt>::</tt> <a>ExportTaskState</a></li>
--   <li><a>etStatusMessage</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
exportTask :: Text -> Text -> ExportTaskState -> Text -> InstanceExportDetails -> ExportToS3Task -> ExportTask

-- | A description of the resource being exported.
etDescription :: Lens' ExportTask Text

-- | The ID of the export task.
etExportTaskId :: Lens' ExportTask Text

-- | Information about the export task.
etExportToS3Task :: Lens' ExportTask ExportToS3Task

-- | Information about the instance to export.
etInstanceExportDetails :: Lens' ExportTask InstanceExportDetails

-- | The state of the export task.
etState :: Lens' ExportTask ExportTaskState

-- | The status message related to the export task.
etStatusMessage :: Lens' ExportTask Text
data ResetImageAttributeName

-- | launchPermission
RIANLaunchPermission :: ResetImageAttributeName
data RequestSpotLaunchSpecification

-- | <a>RequestSpotLaunchSpecification</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rslsAddressingType</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>rslsBlockDeviceMappings</a> <tt>::</tt>
--   [<a>BlockDeviceMapping</a>]</li>
--   <li><a>rslsEbsOptimized</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>rslsIamInstanceProfile</a> <tt>::</tt> <a>Maybe</a>
--   <a>IamInstanceProfileSpecification</a></li>
--   <li><a>rslsImageId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rslsInstanceType</a> <tt>::</tt> <a>Maybe</a>
--   <a>InstanceType</a></li>
--   <li><a>rslsKernelId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rslsKeyName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rslsMonitoring</a> <tt>::</tt> <a>Maybe</a>
--   <a>RunInstancesMonitoringEnabled</a></li>
--   <li><a>rslsNetworkInterfaces</a> <tt>::</tt>
--   [<a>InstanceNetworkInterfaceSpecification</a>]</li>
--   <li><a>rslsPlacement</a> <tt>::</tt> <a>Maybe</a>
--   <a>SpotPlacement</a></li>
--   <li><a>rslsRamdiskId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rslsSecurityGroupIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>rslsSecurityGroups</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>rslsSubnetId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rslsUserData</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
requestSpotLaunchSpecification :: RequestSpotLaunchSpecification

-- | Deprecated.
rslsAddressingType :: Lens' RequestSpotLaunchSpecification (Maybe Text)

-- | One or more block device mapping entries.
rslsBlockDeviceMappings :: Lens' RequestSpotLaunchSpecification [BlockDeviceMapping]

-- | Indicates whether the instance is optimized for EBS I/O. This
--   optimization provides dedicated throughput to Amazon EBS and an
--   optimized configuration stack to provide optimal EBS I/O performance.
--   This optimization isn't available with all instance types. Additional
--   usage charges apply when using an EBS Optimized instance.
--   
--   Default: <tt>false</tt>
rslsEbsOptimized :: Lens' RequestSpotLaunchSpecification (Maybe Bool)

-- | The IAM instance profile.
rslsIamInstanceProfile :: Lens' RequestSpotLaunchSpecification (Maybe IamInstanceProfileSpecification)

-- | The ID of the AMI.
rslsImageId :: Lens' RequestSpotLaunchSpecification (Maybe Text)

-- | The instance type.
rslsInstanceType :: Lens' RequestSpotLaunchSpecification (Maybe InstanceType)

-- | The ID of the kernel.
rslsKernelId :: Lens' RequestSpotLaunchSpecification (Maybe Text)

-- | The name of the key pair.
rslsKeyName :: Lens' RequestSpotLaunchSpecification (Maybe Text)
rslsMonitoring :: Lens' RequestSpotLaunchSpecification (Maybe RunInstancesMonitoringEnabled)

-- | One or more network interfaces.
rslsNetworkInterfaces :: Lens' RequestSpotLaunchSpecification [InstanceNetworkInterfaceSpecification]

-- | The placement information for the instance.
rslsPlacement :: Lens' RequestSpotLaunchSpecification (Maybe SpotPlacement)

-- | The ID of the RAM disk.
rslsRamdiskId :: Lens' RequestSpotLaunchSpecification (Maybe Text)
rslsSecurityGroupIds :: Lens' RequestSpotLaunchSpecification [Text]
rslsSecurityGroups :: Lens' RequestSpotLaunchSpecification [Text]

-- | The ID of the subnet in which to launch the instance.
rslsSubnetId :: Lens' RequestSpotLaunchSpecification (Maybe Text)

-- | The Base64-encoded MIME user data to make available to the instances.
rslsUserData :: Lens' RequestSpotLaunchSpecification (Maybe Text)
data VolumeDetail

-- | <a>VolumeDetail</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vdSize</a> <tt>::</tt> <a>Integer</a></li>
--   </ul>
volumeDetail :: Integer -> VolumeDetail

-- | The size of the volume, in GiB.
vdSize :: Lens' VolumeDetail Integer
data PricingDetail

-- | <a>PricingDetail</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>pdCount</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>pdPrice</a> <tt>::</tt> <a>Maybe</a> <a>Double</a></li>
--   </ul>
pricingDetail :: PricingDetail

-- | The number of instances available for the price.
pdCount :: Lens' PricingDetail (Maybe Int)

-- | The price per instance.
pdPrice :: Lens' PricingDetail (Maybe Double)
data NetworkInterfacePrivateIpAddress

-- | <a>NetworkInterfacePrivateIpAddress</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>nipiaAssociation</a> <tt>::</tt> <a>Maybe</a>
--   <a>NetworkInterfaceAssociation</a></li>
--   <li><a>nipiaPrimary</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>nipiaPrivateDnsName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>nipiaPrivateIpAddress</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
networkInterfacePrivateIpAddress :: NetworkInterfacePrivateIpAddress

-- | The association information for an Elastic IP address associated with
--   the network interface.
nipiaAssociation :: Lens' NetworkInterfacePrivateIpAddress (Maybe NetworkInterfaceAssociation)

-- | Indicates whether this IP address is the primary private IP address of
--   the network interface.
nipiaPrimary :: Lens' NetworkInterfacePrivateIpAddress (Maybe Bool)

-- | The private DNS name.
nipiaPrivateDnsName :: Lens' NetworkInterfacePrivateIpAddress (Maybe Text)

-- | The private IP address.
nipiaPrivateIpAddress :: Lens' NetworkInterfacePrivateIpAddress (Maybe Text)
data DiskImageFormat

-- | RAW
Raw :: DiskImageFormat

-- | VHD
Vhd :: DiskImageFormat

-- | VMDK
Vmdk :: DiskImageFormat
data BundleTaskError

-- | <a>BundleTaskError</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>bteCode</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>bteMessage</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
bundleTaskError :: BundleTaskError

-- | The error code.
bteCode :: Lens' BundleTaskError (Maybe Text)

-- | The error message.
bteMessage :: Lens' BundleTaskError (Maybe Text)
data VpcClassicLink

-- | <a>VpcClassicLink</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vclClassicLinkEnabled</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>vclTags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   <li><a>vclVpcId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
vpcClassicLink :: VpcClassicLink

-- | Indicates whether the VPC is enabled for ClassicLink.
vclClassicLinkEnabled :: Lens' VpcClassicLink (Maybe Bool)

-- | Any tags assigned to the VPC.
vclTags :: Lens' VpcClassicLink [Tag]

-- | The ID of the VPC.
vclVpcId :: Lens' VpcClassicLink (Maybe Text)
data VolumeStatusItem

-- | <a>VolumeStatusItem</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>vsiActions</a> <tt>::</tt> [<a>VolumeStatusAction</a>]</li>
--   <li><a>vsiAvailabilityZone</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>vsiEvents</a> <tt>::</tt> [<a>VolumeStatusEvent</a>]</li>
--   <li><a>vsiVolumeId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>vsiVolumeStatus</a> <tt>::</tt> <a>Maybe</a>
--   <a>VolumeStatusInfo</a></li>
--   </ul>
volumeStatusItem :: VolumeStatusItem

-- | The details of the operation.
vsiActions :: Lens' VolumeStatusItem [VolumeStatusAction]

-- | The Availability Zone of the volume.
vsiAvailabilityZone :: Lens' VolumeStatusItem (Maybe Text)

-- | A list of events associated with the volume.
vsiEvents :: Lens' VolumeStatusItem [VolumeStatusEvent]

-- | The volume ID.
vsiVolumeId :: Lens' VolumeStatusItem (Maybe Text)

-- | The volume status.
vsiVolumeStatus :: Lens' VolumeStatusItem (Maybe VolumeStatusInfo)
data Message
Message :: Maybe ErrorCode -> Text -> Message
_msgCode :: Message -> Maybe ErrorCode
_msgMessage :: Message -> Text
msgCode :: Lens' Message (Maybe ErrorCode)
msgMessage :: Lens' Message Text
data EC2Error
EC2Error :: Text -> List1 "Error" Message -> EC2Error
_errRequestID :: EC2Error -> Text
_errErrors :: EC2Error -> List1 "Error" Message
errRequestID :: Lens' EC2Error Text
errErrors :: Lens' EC2Error (NonEmpty Message)
instance Eq ImageAttributeName
instance Ord ImageAttributeName
instance Read ImageAttributeName
instance Show ImageAttributeName
instance Generic ImageAttributeName
instance Enum ImageAttributeName
instance Eq PermissionGroup
instance Ord PermissionGroup
instance Read PermissionGroup
instance Show PermissionGroup
instance Generic PermissionGroup
instance Enum PermissionGroup
instance Eq BlobAttributeValue
instance Read BlobAttributeValue
instance Show BlobAttributeValue
instance Eq SpotInstanceStateFault
instance Ord SpotInstanceStateFault
instance Read SpotInstanceStateFault
instance Show SpotInstanceStateFault
instance Eq GroupIdentifier
instance Ord GroupIdentifier
instance Read GroupIdentifier
instance Show GroupIdentifier
instance Eq VpnStaticRouteSource
instance Ord VpnStaticRouteSource
instance Read VpnStaticRouteSource
instance Show VpnStaticRouteSource
instance Generic VpnStaticRouteSource
instance Enum VpnStaticRouteSource
instance Eq InstanceLifecycleType
instance Ord InstanceLifecycleType
instance Read InstanceLifecycleType
instance Show InstanceLifecycleType
instance Generic InstanceLifecycleType
instance Enum InstanceLifecycleType
instance Eq State
instance Ord State
instance Read State
instance Show State
instance Generic State
instance Enum State
instance Eq VirtualizationType
instance Ord VirtualizationType
instance Read VirtualizationType
instance Show VirtualizationType
instance Generic VirtualizationType
instance Enum VirtualizationType
instance Eq NetworkInterfaceStatus
instance Ord NetworkInterfaceStatus
instance Read NetworkInterfaceStatus
instance Show NetworkInterfaceStatus
instance Generic NetworkInterfaceStatus
instance Enum NetworkInterfaceStatus
instance Eq PlatformValues
instance Ord PlatformValues
instance Read PlatformValues
instance Show PlatformValues
instance Generic PlatformValues
instance Enum PlatformValues
instance Eq CreateVolumePermission
instance Read CreateVolumePermission
instance Show CreateVolumePermission
instance Eq NetworkInterfaceAttachmentChanges
instance Ord NetworkInterfaceAttachmentChanges
instance Read NetworkInterfaceAttachmentChanges
instance Show NetworkInterfaceAttachmentChanges
instance Eq RecurringChargeFrequency
instance Ord RecurringChargeFrequency
instance Read RecurringChargeFrequency
instance Show RecurringChargeFrequency
instance Generic RecurringChargeFrequency
instance Enum RecurringChargeFrequency
instance Eq VolumeState
instance Ord VolumeState
instance Read VolumeState
instance Show VolumeState
instance Generic VolumeState
instance Enum VolumeState
instance Eq AttributeValue
instance Ord AttributeValue
instance Read AttributeValue
instance Show AttributeValue
instance Monoid AttributeValue
instance Eq PrivateIpAddressSpecification
instance Ord PrivateIpAddressSpecification
instance Read PrivateIpAddressSpecification
instance Show PrivateIpAddressSpecification
instance Eq InstanceNetworkInterfaceSpecification
instance Read InstanceNetworkInterfaceSpecification
instance Show InstanceNetworkInterfaceSpecification
instance Eq DhcpConfiguration
instance Read DhcpConfiguration
instance Show DhcpConfiguration
instance Eq Tag
instance Ord Tag
instance Read Tag
instance Show Tag
instance Eq DhcpOptions
instance Read DhcpOptions
instance Show DhcpOptions
instance Eq AccountAttributeName
instance Ord AccountAttributeName
instance Read AccountAttributeName
instance Show AccountAttributeName
instance Generic AccountAttributeName
instance Enum AccountAttributeName
instance Eq RunInstancesMonitoringEnabled
instance Ord RunInstancesMonitoringEnabled
instance Read RunInstancesMonitoringEnabled
instance Show RunInstancesMonitoringEnabled
instance Enum RunInstancesMonitoringEnabled
instance Eq NetworkInterfaceAssociation
instance Ord NetworkInterfaceAssociation
instance Read NetworkInterfaceAssociation
instance Show NetworkInterfaceAssociation
instance Eq CreateVolumePermissionModifications
instance Read CreateVolumePermissionModifications
instance Show CreateVolumePermissionModifications
instance Eq VpcState
instance Ord VpcState
instance Read VpcState
instance Show VpcState
instance Generic VpcState
instance Enum VpcState
instance Eq ResourceType
instance Ord ResourceType
instance Read ResourceType
instance Show ResourceType
instance Generic ResourceType
instance Enum ResourceType
instance Eq TagDescription
instance Read TagDescription
instance Show TagDescription
instance Eq ReportStatusType
instance Ord ReportStatusType
instance Read ReportStatusType
instance Show ReportStatusType
instance Generic ReportStatusType
instance Enum ReportStatusType
instance Eq CurrencyCodeValues
instance Ord CurrencyCodeValues
instance Read CurrencyCodeValues
instance Show CurrencyCodeValues
instance Generic CurrencyCodeValues
instance Enum CurrencyCodeValues
instance Eq IcmpTypeCode
instance Ord IcmpTypeCode
instance Read IcmpTypeCode
instance Show IcmpTypeCode
instance Eq PrefixList
instance Ord PrefixList
instance Read PrefixList
instance Show PrefixList
instance Eq AttachmentStatus
instance Ord AttachmentStatus
instance Read AttachmentStatus
instance Show AttachmentStatus
instance Generic AttachmentStatus
instance Enum AttachmentStatus
instance Eq NetworkInterfaceAttachment
instance Read NetworkInterfaceAttachment
instance Show NetworkInterfaceAttachment
instance Eq ClassicLinkInstance
instance Read ClassicLinkInstance
instance Show ClassicLinkInstance
instance Eq RouteOrigin
instance Ord RouteOrigin
instance Read RouteOrigin
instance Show RouteOrigin
instance Generic RouteOrigin
instance Enum RouteOrigin
instance Eq ListingState
instance Ord ListingState
instance Read ListingState
instance Show ListingState
instance Generic ListingState
instance Enum ListingState
instance Eq InstanceCount
instance Read InstanceCount
instance Show InstanceCount
instance Eq ActiveInstance
instance Ord ActiveInstance
instance Read ActiveInstance
instance Show ActiveInstance
instance Eq PriceScheduleSpecification
instance Read PriceScheduleSpecification
instance Show PriceScheduleSpecification
instance Eq SpotInstanceStatus
instance Ord SpotInstanceStatus
instance Read SpotInstanceStatus
instance Show SpotInstanceStatus
instance Eq AvailabilityZoneState
instance Ord AvailabilityZoneState
instance Read AvailabilityZoneState
instance Show AvailabilityZoneState
instance Generic AvailabilityZoneState
instance Enum AvailabilityZoneState
instance Eq VolumeStatusEvent
instance Ord VolumeStatusEvent
instance Read VolumeStatusEvent
instance Show VolumeStatusEvent
instance Eq SummaryStatus
instance Ord SummaryStatus
instance Read SummaryStatus
instance Show SummaryStatus
instance Generic SummaryStatus
instance Enum SummaryStatus
instance Eq RuleAction
instance Ord RuleAction
instance Read RuleAction
instance Show RuleAction
instance Generic RuleAction
instance Enum RuleAction
instance Eq BatchState
instance Ord BatchState
instance Read BatchState
instance Show BatchState
instance Generic BatchState
instance Enum BatchState
instance Eq TelemetryStatus
instance Ord TelemetryStatus
instance Read TelemetryStatus
instance Show TelemetryStatus
instance Generic TelemetryStatus
instance Enum TelemetryStatus
instance Eq KeyPairInfo
instance Ord KeyPairInfo
instance Read KeyPairInfo
instance Show KeyPairInfo
instance Eq SnapshotState
instance Ord SnapshotState
instance Read SnapshotState
instance Show SnapshotState
instance Generic SnapshotState
instance Enum SnapshotState
instance Eq Snapshot
instance Read Snapshot
instance Show Snapshot
instance Eq InstanceNetworkInterfaceAssociation
instance Ord InstanceNetworkInterfaceAssociation
instance Read InstanceNetworkInterfaceAssociation
instance Show InstanceNetworkInterfaceAssociation
instance Eq InstancePrivateIpAddress
instance Read InstancePrivateIpAddress
instance Show InstancePrivateIpAddress
instance Eq VpnConnectionOptionsSpecification
instance Ord VpnConnectionOptionsSpecification
instance Read VpnConnectionOptionsSpecification
instance Show VpnConnectionOptionsSpecification
instance Eq VolumeAttachmentState
instance Ord VolumeAttachmentState
instance Read VolumeAttachmentState
instance Show VolumeAttachmentState
instance Generic VolumeAttachmentState
instance Enum VolumeAttachmentState
instance Eq LaunchPermission
instance Read LaunchPermission
instance Show LaunchPermission
instance Eq LaunchPermissionModifications
instance Read LaunchPermissionModifications
instance Show LaunchPermissionModifications
instance Eq RouteState
instance Ord RouteState
instance Read RouteState
instance Show RouteState
instance Generic RouteState
instance Enum RouteState
instance Eq RouteTableAssociation
instance Ord RouteTableAssociation
instance Read RouteTableAssociation
instance Show RouteTableAssociation
instance Eq BundleTaskState
instance Ord BundleTaskState
instance Read BundleTaskState
instance Show BundleTaskState
instance Generic BundleTaskState
instance Enum BundleTaskState
instance Eq PortRange
instance Ord PortRange
instance Read PortRange
instance Show PortRange
instance Eq NetworkAclEntry
instance Read NetworkAclEntry
instance Show NetworkAclEntry
instance Eq VpcAttributeName
instance Ord VpcAttributeName
instance Read VpcAttributeName
instance Show VpcAttributeName
instance Generic VpcAttributeName
instance Enum VpcAttributeName
instance Eq SpotInstanceState
instance Ord SpotInstanceState
instance Read SpotInstanceState
instance Show SpotInstanceState
instance Generic SpotInstanceState
instance Enum SpotInstanceState
instance Eq VpnConnectionOptions
instance Ord VpnConnectionOptions
instance Read VpnConnectionOptions
instance Show VpnConnectionOptions
instance Eq UserIdGroupPair
instance Ord UserIdGroupPair
instance Read UserIdGroupPair
instance Show UserIdGroupPair
instance Eq SpotPlacement
instance Ord SpotPlacement
instance Read SpotPlacement
instance Show SpotPlacement
instance Eq EbsInstanceBlockDeviceSpecification
instance Ord EbsInstanceBlockDeviceSpecification
instance Read EbsInstanceBlockDeviceSpecification
instance Show EbsInstanceBlockDeviceSpecification
instance Eq NetworkAclAssociation
instance Ord NetworkAclAssociation
instance Read NetworkAclAssociation
instance Show NetworkAclAssociation
instance Eq InstanceType
instance Ord InstanceType
instance Read InstanceType
instance Show InstanceType
instance Generic InstanceType
instance Enum InstanceType
instance Eq ReservedInstancesConfiguration
instance Read ReservedInstancesConfiguration
instance Show ReservedInstancesConfiguration
instance Eq Route
instance Read Route
instance Show Route
instance Eq CancelSpotInstanceRequestState
instance Ord CancelSpotInstanceRequestState
instance Read CancelSpotInstanceRequestState
instance Show CancelSpotInstanceRequestState
instance Generic CancelSpotInstanceRequestState
instance Enum CancelSpotInstanceRequestState
instance Eq CancelledSpotInstanceRequest
instance Read CancelledSpotInstanceRequest
instance Show CancelledSpotInstanceRequest
instance Eq PlacementGroupState
instance Ord PlacementGroupState
instance Read PlacementGroupState
instance Show PlacementGroupState
instance Generic PlacementGroupState
instance Enum PlacementGroupState
instance Eq ReservedInstancesModificationResult
instance Read ReservedInstancesModificationResult
instance Show ReservedInstancesModificationResult
instance Eq InstanceBlockDeviceMappingSpecification
instance Read InstanceBlockDeviceMappingSpecification
instance Show InstanceBlockDeviceMappingSpecification
instance Eq ExportEnvironment
instance Ord ExportEnvironment
instance Read ExportEnvironment
instance Show ExportEnvironment
instance Generic ExportEnvironment
instance Enum ExportEnvironment
instance Eq UserData
instance Ord UserData
instance Read UserData
instance Show UserData
instance Monoid UserData
instance Eq VolumeAttachment
instance Read VolumeAttachment
instance Show VolumeAttachment
instance Eq CustomerGateway
instance Read CustomerGateway
instance Show CustomerGateway
instance Eq EbsInstanceBlockDevice
instance Read EbsInstanceBlockDevice
instance Show EbsInstanceBlockDevice
instance Eq ShutdownBehavior
instance Ord ShutdownBehavior
instance Read ShutdownBehavior
instance Show ShutdownBehavior
instance Generic ShutdownBehavior
instance Enum ShutdownBehavior
instance Eq DiskImageVolumeDescription
instance Ord DiskImageVolumeDescription
instance Read DiskImageVolumeDescription
instance Show DiskImageVolumeDescription
instance Eq SubnetState
instance Ord SubnetState
instance Read SubnetState
instance Show SubnetState
instance Generic SubnetState
instance Enum SubnetState
instance Eq Subnet
instance Read Subnet
instance Show Subnet
instance Eq CancelSpotFleetRequestsSuccessItem
instance Read CancelSpotFleetRequestsSuccessItem
instance Show CancelSpotFleetRequestsSuccessItem
instance Eq ContainerFormat
instance Ord ContainerFormat
instance Read ContainerFormat
instance Show ContainerFormat
instance Generic ContainerFormat
instance Enum ContainerFormat
instance Eq AvailabilityZoneMessage
instance Ord AvailabilityZoneMessage
instance Read AvailabilityZoneMessage
instance Show AvailabilityZoneMessage
instance Monoid AvailabilityZoneMessage
instance Eq VpcAttachment
instance Read VpcAttachment
instance Show VpcAttachment
instance Eq EventType
instance Ord EventType
instance Read EventType
instance Show EventType
instance Generic EventType
instance Enum EventType
instance Eq InstanceBlockDeviceMapping
instance Read InstanceBlockDeviceMapping
instance Show InstanceBlockDeviceMapping
instance Eq StatusType
instance Ord StatusType
instance Read StatusType
instance Show StatusType
instance Generic StatusType
instance Enum StatusType
instance Eq CancelBatchErrorCode
instance Ord CancelBatchErrorCode
instance Read CancelBatchErrorCode
instance Show CancelBatchErrorCode
instance Generic CancelBatchErrorCode
instance Enum CancelBatchErrorCode
instance Eq CancelSpotFleetRequestsError
instance Read CancelSpotFleetRequestsError
instance Show CancelSpotFleetRequestsError
instance Eq PrefixListId
instance Ord PrefixListId
instance Read PrefixListId
instance Show PrefixListId
instance Monoid PrefixListId
instance Eq NetworkInterfaceAttribute
instance Ord NetworkInterfaceAttribute
instance Read NetworkInterfaceAttribute
instance Show NetworkInterfaceAttribute
instance Generic NetworkInterfaceAttribute
instance Enum NetworkInterfaceAttribute
instance Eq ImageTypeValues
instance Ord ImageTypeValues
instance Read ImageTypeValues
instance Show ImageTypeValues
instance Generic ImageTypeValues
instance Enum ImageTypeValues
instance Eq InstanceExportDetails
instance Read InstanceExportDetails
instance Show InstanceExportDetails
instance Eq SnapshotAttributeName
instance Ord SnapshotAttributeName
instance Read SnapshotAttributeName
instance Show SnapshotAttributeName
instance Generic SnapshotAttributeName
instance Enum SnapshotAttributeName
instance Eq AvailabilityZone
instance Read AvailabilityZone
instance Show AvailabilityZone
instance Eq VpnState
instance Ord VpnState
instance Read VpnState
instance Show VpnState
instance Generic VpnState
instance Enum VpnState
instance Eq UserBucket
instance Ord UserBucket
instance Read UserBucket
instance Show UserBucket
instance Eq HypervisorType
instance Ord HypervisorType
instance Read HypervisorType
instance Show HypervisorType
instance Generic HypervisorType
instance Enum HypervisorType
instance Eq CancelSpotFleetRequestsErrorItem
instance Read CancelSpotFleetRequestsErrorItem
instance Show CancelSpotFleetRequestsErrorItem
instance Eq IamInstanceProfile
instance Ord IamInstanceProfile
instance Read IamInstanceProfile
instance Show IamInstanceProfile
instance Eq InternetGatewayAttachment
instance Read InternetGatewayAttachment
instance Show InternetGatewayAttachment
instance Eq AddressStatus
instance Ord AddressStatus
instance Read AddressStatus
instance Show AddressStatus
instance Generic AddressStatus
instance Enum AddressStatus
instance Eq ReservedInstanceState
instance Ord ReservedInstanceState
instance Read ReservedInstanceState
instance Show ReservedInstanceState
instance Generic ReservedInstanceState
instance Enum ReservedInstanceState
instance Eq InstanceAttributeName
instance Ord InstanceAttributeName
instance Read InstanceAttributeName
instance Show InstanceAttributeName
instance Generic InstanceAttributeName
instance Enum InstanceAttributeName
instance Eq ConversionTaskState
instance Ord ConversionTaskState
instance Read ConversionTaskState
instance Show ConversionTaskState
instance Generic ConversionTaskState
instance Enum ConversionTaskState
instance Eq Tenancy
instance Ord Tenancy
instance Read Tenancy
instance Show Tenancy
instance Generic Tenancy
instance Enum Tenancy
instance Eq UnsuccessfulItemError
instance Ord UnsuccessfulItemError
instance Read UnsuccessfulItemError
instance Show UnsuccessfulItemError
instance Eq UnsuccessfulItem
instance Read UnsuccessfulItem
instance Show UnsuccessfulItem
instance Eq VpcPeeringConnectionStateReason
instance Ord VpcPeeringConnectionStateReason
instance Read VpcPeeringConnectionStateReason
instance Show VpcPeeringConnectionStateReason
instance Eq IamInstanceProfileSpecification
instance Ord IamInstanceProfileSpecification
instance Read IamInstanceProfileSpecification
instance Show IamInstanceProfileSpecification
instance Eq PlacementStrategy
instance Ord PlacementStrategy
instance Read PlacementStrategy
instance Show PlacementStrategy
instance Generic PlacementStrategy
instance Enum PlacementStrategy
instance Eq VolumeStatusAction
instance Ord VolumeStatusAction
instance Read VolumeStatusAction
instance Show VolumeStatusAction
instance Eq VpcPeeringConnectionVpcInfo
instance Ord VpcPeeringConnectionVpcInfo
instance Read VpcPeeringConnectionVpcInfo
instance Show VpcPeeringConnectionVpcInfo
instance Eq UserBucketDetails
instance Ord UserBucketDetails
instance Read UserBucketDetails
instance Show UserBucketDetails
instance Eq SnapshotTaskDetail
instance Read SnapshotTaskDetail
instance Show SnapshotTaskDetail
instance Eq ImportSnapshotTask
instance Read ImportSnapshotTask
instance Show ImportSnapshotTask
instance Eq ReservedInstanceLimitPrice
instance Read ReservedInstanceLimitPrice
instance Show ReservedInstanceLimitPrice
instance Eq Vpc
instance Read Vpc
instance Show Vpc
instance Eq ImageDiskContainer
instance Read ImageDiskContainer
instance Show ImageDiskContainer
instance Eq ArchitectureValues
instance Ord ArchitectureValues
instance Read ArchitectureValues
instance Show ArchitectureValues
instance Generic ArchitectureValues
instance Enum ArchitectureValues
instance Eq ReportInstanceReasonCodes
instance Ord ReportInstanceReasonCodes
instance Read ReportInstanceReasonCodes
instance Show ReportInstanceReasonCodes
instance Generic ReportInstanceReasonCodes
instance Enum ReportInstanceReasonCodes
instance Eq MoveStatus
instance Ord MoveStatus
instance Read MoveStatus
instance Show MoveStatus
instance Generic MoveStatus
instance Enum MoveStatus
instance Eq MovingAddressStatus
instance Read MovingAddressStatus
instance Show MovingAddressStatus
instance Eq SnapshotDetail
instance Read SnapshotDetail
instance Show SnapshotDetail
instance Eq ImportImageTask
instance Read ImportImageTask
instance Show ImportImageTask
instance Eq PriceSchedule
instance Read PriceSchedule
instance Show PriceSchedule
instance Eq DeviceType
instance Ord DeviceType
instance Read DeviceType
instance Show DeviceType
instance Generic DeviceType
instance Enum DeviceType
instance Eq DomainType
instance Ord DomainType
instance Read DomainType
instance Show DomainType
instance Generic DomainType
instance Enum DomainType
instance Eq Address
instance Read Address
instance Show Address
instance Eq Region
instance Ord Region
instance Read Region
instance Show Region
instance Eq PropagatingVgw
instance Ord PropagatingVgw
instance Read PropagatingVgw
instance Show PropagatingVgw
instance Monoid PropagatingVgw
instance Eq RouteTable
instance Read RouteTable
instance Show RouteTable
instance Eq OfferingTypeValues
instance Ord OfferingTypeValues
instance Read OfferingTypeValues
instance Show OfferingTypeValues
instance Generic OfferingTypeValues
instance Enum OfferingTypeValues
instance Eq EventInformation
instance Ord EventInformation
instance Read EventInformation
instance Show EventInformation
instance Eq HistoryRecord
instance Read HistoryRecord
instance Show HistoryRecord
instance Eq Filter
instance Ord Filter
instance Read Filter
instance Show Filter
instance Eq VolumeType
instance Ord VolumeType
instance Read VolumeType
instance Show VolumeType
instance Generic VolumeType
instance Enum VolumeType
instance Eq EbsBlockDevice
instance Read EbsBlockDevice
instance Show EbsBlockDevice
instance Eq BlockDeviceMapping
instance Read BlockDeviceMapping
instance Show BlockDeviceMapping
instance Eq LaunchSpecification
instance Read LaunchSpecification
instance Show LaunchSpecification
instance Eq SpotFleetRequestConfigData
instance Read SpotFleetRequestConfigData
instance Show SpotFleetRequestConfigData
instance Eq SpotFleetRequestConfig
instance Read SpotFleetRequestConfig
instance Show SpotFleetRequestConfig
instance Eq Volume
instance Read Volume
instance Show Volume
instance Eq NetworkAcl
instance Read NetworkAcl
instance Show NetworkAcl
instance Eq ImageState
instance Ord ImageState
instance Read ImageState
instance Show ImageState
instance Generic ImageState
instance Enum ImageState
instance Eq GatewayType
instance Ord GatewayType
instance Read GatewayType
instance Show GatewayType
instance Generic GatewayType
instance Enum GatewayType
instance Eq VpnGateway
instance Read VpnGateway
instance Show VpnGateway
instance Eq InstanceNetworkInterfaceAttachment
instance Read InstanceNetworkInterfaceAttachment
instance Show InstanceNetworkInterfaceAttachment
instance Eq InstanceNetworkInterface
instance Read InstanceNetworkInterface
instance Show InstanceNetworkInterface
instance Eq AttributeBooleanValue
instance Ord AttributeBooleanValue
instance Read AttributeBooleanValue
instance Show AttributeBooleanValue
instance Eq RecurringCharge
instance Read RecurringCharge
instance Show RecurringCharge
instance Eq NewDhcpConfiguration
instance Ord NewDhcpConfiguration
instance Read NewDhcpConfiguration
instance Show NewDhcpConfiguration
instance Eq StateReason
instance Ord StateReason
instance Read StateReason
instance Show StateReason
instance Eq MonitoringState
instance Ord MonitoringState
instance Read MonitoringState
instance Show MonitoringState
instance Generic MonitoringState
instance Enum MonitoringState
instance Eq Monitoring
instance Read Monitoring
instance Show Monitoring
instance Eq InstanceMonitoring
instance Read InstanceMonitoring
instance Show InstanceMonitoring
instance Eq ReservedInstancesId
instance Ord ReservedInstancesId
instance Read ReservedInstancesId
instance Show ReservedInstancesId
instance Monoid ReservedInstancesId
instance Eq ReservedInstancesModification
instance Read ReservedInstancesModification
instance Show ReservedInstancesModification
instance Eq StatusName
instance Ord StatusName
instance Read StatusName
instance Show StatusName
instance Generic StatusName
instance Enum StatusName
instance Eq InstanceStatusDetails
instance Read InstanceStatusDetails
instance Show InstanceStatusDetails
instance Eq InstanceStatusSummary
instance Read InstanceStatusSummary
instance Show InstanceStatusSummary
instance Eq InternetGateway
instance Read InternetGateway
instance Show InternetGateway
instance Eq VolumeStatusName
instance Ord VolumeStatusName
instance Read VolumeStatusName
instance Show VolumeStatusName
instance Generic VolumeStatusName
instance Enum VolumeStatusName
instance Eq VolumeStatusDetails
instance Read VolumeStatusDetails
instance Show VolumeStatusDetails
instance Eq VolumeAttributeName
instance Ord VolumeAttributeName
instance Read VolumeAttributeName
instance Show VolumeAttributeName
instance Generic VolumeAttributeName
instance Enum VolumeAttributeName
instance Eq PlacementGroup
instance Read PlacementGroup
instance Show PlacementGroup
instance Eq ListingStatus
instance Ord ListingStatus
instance Read ListingStatus
instance Show ListingStatus
instance Generic ListingStatus
instance Enum ListingStatus
instance Eq ReservedInstancesListing
instance Read ReservedInstancesListing
instance Show ReservedInstancesListing
instance Eq IpRange
instance Ord IpRange
instance Read IpRange
instance Show IpRange
instance Monoid IpRange
instance IsString IpRange
instance Eq IpPermission
instance Read IpPermission
instance Show IpPermission
instance Eq SecurityGroup
instance Read SecurityGroup
instance Show SecurityGroup
instance Eq VolumeStatusInfoStatus
instance Ord VolumeStatusInfoStatus
instance Read VolumeStatusInfoStatus
instance Show VolumeStatusInfoStatus
instance Generic VolumeStatusInfoStatus
instance Enum VolumeStatusInfoStatus
instance Eq VolumeStatusInfo
instance Read VolumeStatusInfo
instance Show VolumeStatusInfo
instance Eq AccountAttributeValue
instance Ord AccountAttributeValue
instance Read AccountAttributeValue
instance Show AccountAttributeValue
instance Monoid AccountAttributeValue
instance Eq AccountAttribute
instance Read AccountAttribute
instance Show AccountAttribute
instance Eq SnapshotDiskContainer
instance Read SnapshotDiskContainer
instance Show SnapshotDiskContainer
instance Eq RIProductDescription
instance Ord RIProductDescription
instance Read RIProductDescription
instance Show RIProductDescription
instance Generic RIProductDescription
instance Enum RIProductDescription
instance Eq SpotPrice
instance Read SpotPrice
instance Show SpotPrice
instance Eq ReservedInstances
instance Read ReservedInstances
instance Show ReservedInstances
instance Eq DatafeedSubscriptionState
instance Ord DatafeedSubscriptionState
instance Read DatafeedSubscriptionState
instance Show DatafeedSubscriptionState
instance Generic DatafeedSubscriptionState
instance Enum DatafeedSubscriptionState
instance Eq SpotDatafeedSubscription
instance Read SpotDatafeedSubscription
instance Show SpotDatafeedSubscription
instance Eq ExportTaskState
instance Ord ExportTaskState
instance Read ExportTaskState
instance Show ExportTaskState
instance Generic ExportTaskState
instance Enum ExportTaskState
instance Eq ProductCodeValues
instance Ord ProductCodeValues
instance Read ProductCodeValues
instance Show ProductCodeValues
instance Generic ProductCodeValues
instance Enum ProductCodeValues
instance Eq ProductCode
instance Read ProductCode
instance Show ProductCode
instance Eq Image
instance Read Image
instance Show Image
instance Eq VpcEndpoint
instance Read VpcEndpoint
instance Show VpcEndpoint
instance Eq ClientData
instance Ord ClientData
instance Read ClientData
instance Show ClientData
instance Eq Placement
instance Read Placement
instance Show Placement
instance Eq ImportInstanceLaunchSpecification
instance Read ImportInstanceLaunchSpecification
instance Show ImportInstanceLaunchSpecification
instance Eq EventCode
instance Ord EventCode
instance Read EventCode
instance Show EventCode
instance Generic EventCode
instance Enum EventCode
instance Eq InstanceStatusEvent
instance Read InstanceStatusEvent
instance Show InstanceStatusEvent
instance Eq SpotInstanceType
instance Ord SpotInstanceType
instance Read SpotInstanceType
instance Show SpotInstanceType
instance Generic SpotInstanceType
instance Enum SpotInstanceType
instance Eq SpotInstanceRequest
instance Read SpotInstanceRequest
instance Show SpotInstanceRequest
instance Eq VpcPeeringConnection
instance Read VpcPeeringConnection
instance Show VpcPeeringConnection
instance Eq S3Storage
instance Read S3Storage
instance Show S3Storage
instance Eq Storage
instance Read Storage
instance Show Storage
instance Eq VgwTelemetry
instance Read VgwTelemetry
instance Show VgwTelemetry
instance Eq VpnStaticRoute
instance Read VpnStaticRoute
instance Show VpnStaticRoute
instance Eq VpnConnection
instance Read VpnConnection
instance Show VpnConnection
instance Eq InstanceStateName
instance Ord InstanceStateName
instance Read InstanceStateName
instance Show InstanceStateName
instance Generic InstanceStateName
instance Enum InstanceStateName
instance Eq InstanceState
instance Read InstanceState
instance Show InstanceState
instance Eq InstanceStateChange
instance Read InstanceStateChange
instance Show InstanceStateChange
instance Eq InstanceStatus
instance Read InstanceStatus
instance Show InstanceStatus
instance Eq Instance
instance Read Instance
instance Show Instance
instance Eq Reservation
instance Read Reservation
instance Show Reservation
instance Eq ResetImageAttributeName
instance Ord ResetImageAttributeName
instance Read ResetImageAttributeName
instance Show ResetImageAttributeName
instance Generic ResetImageAttributeName
instance Enum ResetImageAttributeName
instance Eq RequestSpotLaunchSpecification
instance Read RequestSpotLaunchSpecification
instance Show RequestSpotLaunchSpecification
instance Eq VolumeDetail
instance Ord VolumeDetail
instance Read VolumeDetail
instance Show VolumeDetail
instance Enum VolumeDetail
instance Num VolumeDetail
instance Integral VolumeDetail
instance Real VolumeDetail
instance Eq PricingDetail
instance Ord PricingDetail
instance Read PricingDetail
instance Show PricingDetail
instance Eq ReservedInstancesOffering
instance Read ReservedInstancesOffering
instance Show ReservedInstancesOffering
instance Eq NetworkInterfacePrivateIpAddress
instance Read NetworkInterfacePrivateIpAddress
instance Show NetworkInterfacePrivateIpAddress
instance Eq NetworkInterface
instance Read NetworkInterface
instance Show NetworkInterface
instance Eq DiskImageFormat
instance Ord DiskImageFormat
instance Read DiskImageFormat
instance Show DiskImageFormat
instance Generic DiskImageFormat
instance Enum DiskImageFormat
instance Eq ExportToS3TaskSpecification
instance Read ExportToS3TaskSpecification
instance Show ExportToS3TaskSpecification
instance Eq DiskImageDescription
instance Read DiskImageDescription
instance Show DiskImageDescription
instance Eq ImportVolumeTaskDetails
instance Read ImportVolumeTaskDetails
instance Show ImportVolumeTaskDetails
instance Eq ImportInstanceVolumeDetailItem
instance Read ImportInstanceVolumeDetailItem
instance Show ImportInstanceVolumeDetailItem
instance Eq ImportInstanceTaskDetails
instance Read ImportInstanceTaskDetails
instance Show ImportInstanceTaskDetails
instance Eq ConversionTask
instance Read ConversionTask
instance Show ConversionTask
instance Eq DiskImageDetail
instance Read DiskImageDetail
instance Show DiskImageDetail
instance Eq DiskImage
instance Read DiskImage
instance Show DiskImage
instance Eq ExportToS3Task
instance Read ExportToS3Task
instance Show ExportToS3Task
instance Eq ExportTask
instance Read ExportTask
instance Show ExportTask
instance Eq BundleTaskError
instance Ord BundleTaskError
instance Read BundleTaskError
instance Show BundleTaskError
instance Eq BundleTask
instance Read BundleTask
instance Show BundleTask
instance Eq VpcClassicLink
instance Read VpcClassicLink
instance Show VpcClassicLink
instance Eq VolumeStatusItem
instance Read VolumeStatusItem
instance Show VolumeStatusItem
instance Datatype D1ImageAttributeName
instance Constructor C1_0ImageAttributeName
instance Constructor C1_1ImageAttributeName
instance Constructor C1_2ImageAttributeName
instance Constructor C1_3ImageAttributeName
instance Constructor C1_4ImageAttributeName
instance Constructor C1_5ImageAttributeName
instance Constructor C1_6ImageAttributeName
instance Datatype D1PermissionGroup
instance Constructor C1_0PermissionGroup
instance Datatype D1VpnStaticRouteSource
instance Constructor C1_0VpnStaticRouteSource
instance Datatype D1InstanceLifecycleType
instance Constructor C1_0InstanceLifecycleType
instance Datatype D1State
instance Constructor C1_0State
instance Constructor C1_1State
instance Constructor C1_2State
instance Constructor C1_3State
instance Datatype D1VirtualizationType
instance Constructor C1_0VirtualizationType
instance Constructor C1_1VirtualizationType
instance Datatype D1NetworkInterfaceStatus
instance Constructor C1_0NetworkInterfaceStatus
instance Constructor C1_1NetworkInterfaceStatus
instance Constructor C1_2NetworkInterfaceStatus
instance Constructor C1_3NetworkInterfaceStatus
instance Datatype D1PlatformValues
instance Constructor C1_0PlatformValues
instance Datatype D1RecurringChargeFrequency
instance Constructor C1_0RecurringChargeFrequency
instance Datatype D1VolumeState
instance Constructor C1_0VolumeState
instance Constructor C1_1VolumeState
instance Constructor C1_2VolumeState
instance Constructor C1_3VolumeState
instance Constructor C1_4VolumeState
instance Constructor C1_5VolumeState
instance Datatype D1AccountAttributeName
instance Constructor C1_0AccountAttributeName
instance Constructor C1_1AccountAttributeName
instance Datatype D1VpcState
instance Constructor C1_0VpcState
instance Constructor C1_1VpcState
instance Datatype D1ResourceType
instance Constructor C1_0ResourceType
instance Constructor C1_1ResourceType
instance Constructor C1_2ResourceType
instance Constructor C1_3ResourceType
instance Constructor C1_4ResourceType
instance Constructor C1_5ResourceType
instance Constructor C1_6ResourceType
instance Constructor C1_7ResourceType
instance Constructor C1_8ResourceType
instance Constructor C1_9ResourceType
instance Constructor C1_10ResourceType
instance Constructor C1_11ResourceType
instance Constructor C1_12ResourceType
instance Constructor C1_13ResourceType
instance Constructor C1_14ResourceType
instance Constructor C1_15ResourceType
instance Constructor C1_16ResourceType
instance Datatype D1ReportStatusType
instance Constructor C1_0ReportStatusType
instance Constructor C1_1ReportStatusType
instance Datatype D1CurrencyCodeValues
instance Constructor C1_0CurrencyCodeValues
instance Datatype D1AttachmentStatus
instance Constructor C1_0AttachmentStatus
instance Constructor C1_1AttachmentStatus
instance Constructor C1_2AttachmentStatus
instance Constructor C1_3AttachmentStatus
instance Datatype D1RouteOrigin
instance Constructor C1_0RouteOrigin
instance Constructor C1_1RouteOrigin
instance Constructor C1_2RouteOrigin
instance Datatype D1ListingState
instance Constructor C1_0ListingState
instance Constructor C1_1ListingState
instance Constructor C1_2ListingState
instance Constructor C1_3ListingState
instance Datatype D1AvailabilityZoneState
instance Constructor C1_0AvailabilityZoneState
instance Datatype D1SummaryStatus
instance Constructor C1_0SummaryStatus
instance Constructor C1_1SummaryStatus
instance Constructor C1_2SummaryStatus
instance Constructor C1_3SummaryStatus
instance Datatype D1RuleAction
instance Constructor C1_0RuleAction
instance Constructor C1_1RuleAction
instance Datatype D1BatchState
instance Constructor C1_0BatchState
instance Constructor C1_1BatchState
instance Constructor C1_2BatchState
instance Constructor C1_3BatchState
instance Constructor C1_4BatchState
instance Constructor C1_5BatchState
instance Datatype D1TelemetryStatus
instance Constructor C1_0TelemetryStatus
instance Constructor C1_1TelemetryStatus
instance Datatype D1SnapshotState
instance Constructor C1_0SnapshotState
instance Constructor C1_1SnapshotState
instance Constructor C1_2SnapshotState
instance Datatype D1VolumeAttachmentState
instance Constructor C1_0VolumeAttachmentState
instance Constructor C1_1VolumeAttachmentState
instance Constructor C1_2VolumeAttachmentState
instance Constructor C1_3VolumeAttachmentState
instance Datatype D1RouteState
instance Constructor C1_0RouteState
instance Constructor C1_1RouteState
instance Datatype D1BundleTaskState
instance Constructor C1_0BundleTaskState
instance Constructor C1_1BundleTaskState
instance Constructor C1_2BundleTaskState
instance Constructor C1_3BundleTaskState
instance Constructor C1_4BundleTaskState
instance Constructor C1_5BundleTaskState
instance Constructor C1_6BundleTaskState
instance Datatype D1VpcAttributeName
instance Constructor C1_0VpcAttributeName
instance Constructor C1_1VpcAttributeName
instance Datatype D1SpotInstanceState
instance Constructor C1_0SpotInstanceState
instance Constructor C1_1SpotInstanceState
instance Constructor C1_2SpotInstanceState
instance Constructor C1_3SpotInstanceState
instance Constructor C1_4SpotInstanceState
instance Datatype D1InstanceType
instance Constructor C1_0InstanceType
instance Constructor C1_1InstanceType
instance Constructor C1_2InstanceType
instance Constructor C1_3InstanceType
instance Constructor C1_4InstanceType
instance Constructor C1_5InstanceType
instance Constructor C1_6InstanceType
instance Constructor C1_7InstanceType
instance Constructor C1_8InstanceType
instance Constructor C1_9InstanceType
instance Constructor C1_10InstanceType
instance Constructor C1_11InstanceType
instance Constructor C1_12InstanceType
instance Constructor C1_13InstanceType
instance Constructor C1_14InstanceType
instance Constructor C1_15InstanceType
instance Constructor C1_16InstanceType
instance Constructor C1_17InstanceType
instance Constructor C1_18InstanceType
instance Constructor C1_19InstanceType
instance Constructor C1_20InstanceType
instance Constructor C1_21InstanceType
instance Constructor C1_22InstanceType
instance Constructor C1_23InstanceType
instance Constructor C1_24InstanceType
instance Constructor C1_25InstanceType
instance Constructor C1_26InstanceType
instance Constructor C1_27InstanceType
instance Constructor C1_28InstanceType
instance Constructor C1_29InstanceType
instance Constructor C1_30InstanceType
instance Constructor C1_31InstanceType
instance Constructor C1_32InstanceType
instance Constructor C1_33InstanceType
instance Constructor C1_34InstanceType
instance Constructor C1_35InstanceType
instance Constructor C1_36InstanceType
instance Constructor C1_37InstanceType
instance Constructor C1_38InstanceType
instance Constructor C1_39InstanceType
instance Constructor C1_40InstanceType
instance Constructor C1_41InstanceType
instance Constructor C1_42InstanceType
instance Constructor C1_43InstanceType
instance Constructor C1_44InstanceType
instance Constructor C1_45InstanceType
instance Constructor C1_46InstanceType
instance Datatype D1CancelSpotInstanceRequestState
instance Constructor C1_0CancelSpotInstanceRequestState
instance Constructor C1_1CancelSpotInstanceRequestState
instance Constructor C1_2CancelSpotInstanceRequestState
instance Constructor C1_3CancelSpotInstanceRequestState
instance Constructor C1_4CancelSpotInstanceRequestState
instance Datatype D1PlacementGroupState
instance Constructor C1_0PlacementGroupState
instance Constructor C1_1PlacementGroupState
instance Constructor C1_2PlacementGroupState
instance Constructor C1_3PlacementGroupState
instance Datatype D1ExportEnvironment
instance Constructor C1_0ExportEnvironment
instance Constructor C1_1ExportEnvironment
instance Constructor C1_2ExportEnvironment
instance Datatype D1ShutdownBehavior
instance Constructor C1_0ShutdownBehavior
instance Constructor C1_1ShutdownBehavior
instance Datatype D1SubnetState
instance Constructor C1_0SubnetState
instance Constructor C1_1SubnetState
instance Datatype D1ContainerFormat
instance Constructor C1_0ContainerFormat
instance Datatype D1EventType
instance Constructor C1_0EventType
instance Constructor C1_1EventType
instance Constructor C1_2EventType
instance Datatype D1StatusType
instance Constructor C1_0StatusType
instance Constructor C1_1StatusType
instance Constructor C1_2StatusType
instance Datatype D1CancelBatchErrorCode
instance Constructor C1_0CancelBatchErrorCode
instance Constructor C1_1CancelBatchErrorCode
instance Constructor C1_2CancelBatchErrorCode
instance Constructor C1_3CancelBatchErrorCode
instance Datatype D1NetworkInterfaceAttribute
instance Constructor C1_0NetworkInterfaceAttribute
instance Constructor C1_1NetworkInterfaceAttribute
instance Constructor C1_2NetworkInterfaceAttribute
instance Constructor C1_3NetworkInterfaceAttribute
instance Datatype D1ImageTypeValues
instance Constructor C1_0ImageTypeValues
instance Constructor C1_1ImageTypeValues
instance Constructor C1_2ImageTypeValues
instance Datatype D1SnapshotAttributeName
instance Constructor C1_0SnapshotAttributeName
instance Constructor C1_1SnapshotAttributeName
instance Datatype D1VpnState
instance Constructor C1_0VpnState
instance Constructor C1_1VpnState
instance Constructor C1_2VpnState
instance Constructor C1_3VpnState
instance Datatype D1HypervisorType
instance Constructor C1_0HypervisorType
instance Constructor C1_1HypervisorType
instance Datatype D1AddressStatus
instance Constructor C1_0AddressStatus
instance Constructor C1_1AddressStatus
instance Constructor C1_2AddressStatus
instance Datatype D1ReservedInstanceState
instance Constructor C1_0ReservedInstanceState
instance Constructor C1_1ReservedInstanceState
instance Constructor C1_2ReservedInstanceState
instance Constructor C1_3ReservedInstanceState
instance Datatype D1InstanceAttributeName
instance Constructor C1_0InstanceAttributeName
instance Constructor C1_1InstanceAttributeName
instance Constructor C1_2InstanceAttributeName
instance Constructor C1_3InstanceAttributeName
instance Constructor C1_4InstanceAttributeName
instance Constructor C1_5InstanceAttributeName
instance Constructor C1_6InstanceAttributeName
instance Constructor C1_7InstanceAttributeName
instance Constructor C1_8InstanceAttributeName
instance Constructor C1_9InstanceAttributeName
instance Constructor C1_10InstanceAttributeName
instance Constructor C1_11InstanceAttributeName
instance Constructor C1_12InstanceAttributeName
instance Datatype D1ConversionTaskState
instance Constructor C1_0ConversionTaskState
instance Constructor C1_1ConversionTaskState
instance Constructor C1_2ConversionTaskState
instance Constructor C1_3ConversionTaskState
instance Datatype D1Tenancy
instance Constructor C1_0Tenancy
instance Constructor C1_1Tenancy
instance Datatype D1PlacementStrategy
instance Constructor C1_0PlacementStrategy
instance Datatype D1ArchitectureValues
instance Constructor C1_0ArchitectureValues
instance Constructor C1_1ArchitectureValues
instance Datatype D1ReportInstanceReasonCodes
instance Constructor C1_0ReportInstanceReasonCodes
instance Constructor C1_1ReportInstanceReasonCodes
instance Constructor C1_2ReportInstanceReasonCodes
instance Constructor C1_3ReportInstanceReasonCodes
instance Constructor C1_4ReportInstanceReasonCodes
instance Constructor C1_5ReportInstanceReasonCodes
instance Constructor C1_6ReportInstanceReasonCodes
instance Constructor C1_7ReportInstanceReasonCodes
instance Constructor C1_8ReportInstanceReasonCodes
instance Datatype D1MoveStatus
instance Constructor C1_0MoveStatus
instance Constructor C1_1MoveStatus
instance Datatype D1DeviceType
instance Constructor C1_0DeviceType
instance Constructor C1_1DeviceType
instance Datatype D1DomainType
instance Constructor C1_0DomainType
instance Constructor C1_1DomainType
instance Datatype D1OfferingTypeValues
instance Constructor C1_0OfferingTypeValues
instance Constructor C1_1OfferingTypeValues
instance Constructor C1_2OfferingTypeValues
instance Constructor C1_3OfferingTypeValues
instance Constructor C1_4OfferingTypeValues
instance Constructor C1_5OfferingTypeValues
instance Datatype D1VolumeType
instance Constructor C1_0VolumeType
instance Constructor C1_1VolumeType
instance Constructor C1_2VolumeType
instance Datatype D1ImageState
instance Constructor C1_0ImageState
instance Constructor C1_1ImageState
instance Constructor C1_2ImageState
instance Constructor C1_3ImageState
instance Constructor C1_4ImageState
instance Constructor C1_5ImageState
instance Constructor C1_6ImageState
instance Datatype D1GatewayType
instance Constructor C1_0GatewayType
instance Datatype D1MonitoringState
instance Constructor C1_0MonitoringState
instance Constructor C1_1MonitoringState
instance Constructor C1_2MonitoringState
instance Constructor C1_3MonitoringState
instance Datatype D1StatusName
instance Constructor C1_0StatusName
instance Datatype D1VolumeStatusName
instance Constructor C1_0VolumeStatusName
instance Constructor C1_1VolumeStatusName
instance Datatype D1VolumeAttributeName
instance Constructor C1_0VolumeAttributeName
instance Constructor C1_1VolumeAttributeName
instance Datatype D1ListingStatus
instance Constructor C1_0ListingStatus
instance Constructor C1_1ListingStatus
instance Constructor C1_2ListingStatus
instance Constructor C1_3ListingStatus
instance Datatype D1VolumeStatusInfoStatus
instance Constructor C1_0VolumeStatusInfoStatus
instance Constructor C1_1VolumeStatusInfoStatus
instance Constructor C1_2VolumeStatusInfoStatus
instance Datatype D1RIProductDescription
instance Constructor C1_0RIProductDescription
instance Constructor C1_1RIProductDescription
instance Constructor C1_2RIProductDescription
instance Constructor C1_3RIProductDescription
instance Datatype D1DatafeedSubscriptionState
instance Constructor C1_0DatafeedSubscriptionState
instance Constructor C1_1DatafeedSubscriptionState
instance Datatype D1ExportTaskState
instance Constructor C1_0ExportTaskState
instance Constructor C1_1ExportTaskState
instance Constructor C1_2ExportTaskState
instance Constructor C1_3ExportTaskState
instance Datatype D1ProductCodeValues
instance Constructor C1_0ProductCodeValues
instance Constructor C1_1ProductCodeValues
instance Datatype D1EventCode
instance Constructor C1_0EventCode
instance Constructor C1_1EventCode
instance Constructor C1_2EventCode
instance Constructor C1_3EventCode
instance Constructor C1_4EventCode
instance Datatype D1SpotInstanceType
instance Constructor C1_0SpotInstanceType
instance Constructor C1_1SpotInstanceType
instance Datatype D1InstanceStateName
instance Constructor C1_0InstanceStateName
instance Constructor C1_1InstanceStateName
instance Constructor C1_2InstanceStateName
instance Constructor C1_3InstanceStateName
instance Constructor C1_4InstanceStateName
instance Constructor C1_5InstanceStateName
instance Datatype D1ResetImageAttributeName
instance Constructor C1_0ResetImageAttributeName
instance Datatype D1DiskImageFormat
instance Constructor C1_0DiskImageFormat
instance Constructor C1_1DiskImageFormat
instance Constructor C1_2DiskImageFormat
instance ToQuery VolumeStatusItem
instance FromXML VolumeStatusItem
instance ToQuery VpcClassicLink
instance FromXML VpcClassicLink
instance ToQuery BundleTaskError
instance FromXML BundleTaskError
instance FromXML DiskImageFormat
instance ToQuery DiskImageFormat
instance ToHeader DiskImageFormat
instance ToByteString DiskImageFormat
instance ToText DiskImageFormat
instance FromText DiskImageFormat
instance Hashable DiskImageFormat
instance ToQuery NetworkInterfacePrivateIpAddress
instance FromXML NetworkInterfacePrivateIpAddress
instance ToQuery PricingDetail
instance FromXML PricingDetail
instance ToQuery VolumeDetail
instance FromXML VolumeDetail
instance ToQuery RequestSpotLaunchSpecification
instance FromXML RequestSpotLaunchSpecification
instance FromXML ResetImageAttributeName
instance ToQuery ResetImageAttributeName
instance ToHeader ResetImageAttributeName
instance ToByteString ResetImageAttributeName
instance ToText ResetImageAttributeName
instance FromText ResetImageAttributeName
instance Hashable ResetImageAttributeName
instance ToQuery ExportTask
instance FromXML ExportTask
instance ToQuery Instance
instance FromXML Instance
instance FromXML InstanceStateName
instance ToQuery InstanceStateName
instance ToHeader InstanceStateName
instance ToByteString InstanceStateName
instance ToText InstanceStateName
instance FromText InstanceStateName
instance Hashable InstanceStateName
instance ToQuery VpnStaticRoute
instance FromXML VpnStaticRoute
instance ToQuery VgwTelemetry
instance FromXML VgwTelemetry
instance ToQuery S3Storage
instance FromXML S3Storage
instance ToQuery VpcPeeringConnection
instance FromXML VpcPeeringConnection
instance FromXML SpotInstanceType
instance ToQuery SpotInstanceType
instance ToHeader SpotInstanceType
instance ToByteString SpotInstanceType
instance ToText SpotInstanceType
instance FromText SpotInstanceType
instance Hashable SpotInstanceType
instance FromXML EventCode
instance ToQuery EventCode
instance ToHeader EventCode
instance ToByteString EventCode
instance ToText EventCode
instance FromText EventCode
instance Hashable EventCode
instance ToQuery Placement
instance FromXML Placement
instance ToQuery ClientData
instance FromXML ClientData
instance ToQuery VpcEndpoint
instance FromXML VpcEndpoint
instance ToQuery InstanceState
instance FromXML InstanceState
instance ToQuery VpnConnection
instance FromXML VpnConnection
instance FromXML ProductCodeValues
instance ToQuery ProductCodeValues
instance ToHeader ProductCodeValues
instance ToByteString ProductCodeValues
instance ToText ProductCodeValues
instance FromText ProductCodeValues
instance Hashable ProductCodeValues
instance FromXML ExportTaskState
instance ToQuery ExportTaskState
instance ToHeader ExportTaskState
instance ToByteString ExportTaskState
instance ToText ExportTaskState
instance FromText ExportTaskState
instance Hashable ExportTaskState
instance FromXML DatafeedSubscriptionState
instance ToQuery DatafeedSubscriptionState
instance ToHeader DatafeedSubscriptionState
instance ToByteString DatafeedSubscriptionState
instance ToText DatafeedSubscriptionState
instance FromText DatafeedSubscriptionState
instance Hashable DatafeedSubscriptionState
instance ToQuery ReservedInstances
instance FromXML ReservedInstances
instance ToQuery ReservedInstancesOffering
instance FromXML ReservedInstancesOffering
instance FromXML RIProductDescription
instance ToQuery RIProductDescription
instance ToHeader RIProductDescription
instance ToByteString RIProductDescription
instance ToText RIProductDescription
instance FromText RIProductDescription
instance Hashable RIProductDescription
instance ToQuery SnapshotDiskContainer
instance FromXML SnapshotDiskContainer
instance ToQuery AccountAttributeValue
instance FromXML AccountAttributeValue
instance FromXML VolumeStatusInfoStatus
instance ToQuery VolumeStatusInfoStatus
instance ToHeader VolumeStatusInfoStatus
instance ToByteString VolumeStatusInfoStatus
instance ToText VolumeStatusInfoStatus
instance FromText VolumeStatusInfoStatus
instance Hashable VolumeStatusInfoStatus
instance ToQuery IpRange
instance FromXML IpRange
instance FromXML ListingStatus
instance ToQuery ListingStatus
instance ToHeader ListingStatus
instance ToByteString ListingStatus
instance ToText ListingStatus
instance FromText ListingStatus
instance Hashable ListingStatus
instance ToQuery ProductCode
instance FromXML ProductCode
instance ToQuery PlacementGroup
instance FromXML PlacementGroup
instance ToQuery ImportInstanceTaskDetails
instance FromXML ImportInstanceTaskDetails
instance FromXML VolumeAttributeName
instance ToQuery VolumeAttributeName
instance ToHeader VolumeAttributeName
instance ToByteString VolumeAttributeName
instance ToText VolumeAttributeName
instance FromText VolumeAttributeName
instance Hashable VolumeAttributeName
instance FromXML VolumeStatusName
instance ToQuery VolumeStatusName
instance ToHeader VolumeStatusName
instance ToByteString VolumeStatusName
instance ToText VolumeStatusName
instance FromText VolumeStatusName
instance Hashable VolumeStatusName
instance ToQuery InternetGateway
instance FromXML InternetGateway
instance FromXML StatusName
instance ToQuery StatusName
instance ToHeader StatusName
instance ToByteString StatusName
instance ToText StatusName
instance FromText StatusName
instance Hashable StatusName
instance ToQuery ReservedInstancesId
instance FromXML ReservedInstancesId
instance FromXML MonitoringState
instance ToQuery MonitoringState
instance ToHeader MonitoringState
instance ToByteString MonitoringState
instance ToText MonitoringState
instance FromText MonitoringState
instance Hashable MonitoringState
instance ToQuery StateReason
instance FromXML StateReason
instance ToQuery NewDhcpConfiguration
instance FromXML NewDhcpConfiguration
instance ToQuery RecurringCharge
instance FromXML RecurringCharge
instance ToQuery AttributeBooleanValue
instance FromXML AttributeBooleanValue
instance ToQuery InstanceNetworkInterfaceAttachment
instance FromXML InstanceNetworkInterfaceAttachment
instance FromXML GatewayType
instance ToQuery GatewayType
instance ToHeader GatewayType
instance ToByteString GatewayType
instance ToText GatewayType
instance FromText GatewayType
instance Hashable GatewayType
instance FromXML ImageState
instance ToQuery ImageState
instance ToHeader ImageState
instance ToByteString ImageState
instance ToText ImageState
instance FromText ImageState
instance Hashable ImageState
instance ToQuery NetworkAcl
instance FromXML NetworkAcl
instance ToQuery InstanceStateChange
instance FromXML InstanceStateChange
instance FromXML VolumeType
instance ToQuery VolumeType
instance ToHeader VolumeType
instance ToByteString VolumeType
instance ToText VolumeType
instance FromText VolumeType
instance Hashable VolumeType
instance ToQuery Filter
instance FromXML Filter
instance ToQuery EventInformation
instance FromXML EventInformation
instance ToQuery VpnGateway
instance FromXML VpnGateway
instance FromXML OfferingTypeValues
instance ToQuery OfferingTypeValues
instance ToHeader OfferingTypeValues
instance ToByteString OfferingTypeValues
instance ToText OfferingTypeValues
instance FromText OfferingTypeValues
instance Hashable OfferingTypeValues
instance ToQuery PropagatingVgw
instance FromXML PropagatingVgw
instance ToQuery Region
instance FromXML Region
instance FromXML DomainType
instance ToQuery DomainType
instance ToHeader DomainType
instance ToByteString DomainType
instance ToText DomainType
instance FromText DomainType
instance Hashable DomainType
instance FromXML DeviceType
instance ToQuery DeviceType
instance ToHeader DeviceType
instance ToByteString DeviceType
instance ToText DeviceType
instance FromText DeviceType
instance Hashable DeviceType
instance ToQuery PriceSchedule
instance FromXML PriceSchedule
instance ToQuery SnapshotDetail
instance FromXML SnapshotDetail
instance ToQuery AccountAttribute
instance FromXML AccountAttribute
instance ToQuery EbsBlockDevice
instance FromXML EbsBlockDevice
instance FromXML MoveStatus
instance ToQuery MoveStatus
instance ToHeader MoveStatus
instance ToByteString MoveStatus
instance ToText MoveStatus
instance FromText MoveStatus
instance Hashable MoveStatus
instance FromXML ReportInstanceReasonCodes
instance ToQuery ReportInstanceReasonCodes
instance ToHeader ReportInstanceReasonCodes
instance ToByteString ReportInstanceReasonCodes
instance ToText ReportInstanceReasonCodes
instance FromText ReportInstanceReasonCodes
instance Hashable ReportInstanceReasonCodes
instance FromXML ArchitectureValues
instance ToQuery ArchitectureValues
instance ToHeader ArchitectureValues
instance ToByteString ArchitectureValues
instance ToText ArchitectureValues
instance FromText ArchitectureValues
instance Hashable ArchitectureValues
instance ToQuery InstanceStatus
instance FromXML InstanceStatus
instance ToQuery ImageDiskContainer
instance FromXML ImageDiskContainer
instance ToQuery Vpc
instance FromXML Vpc
instance ToQuery ReservedInstanceLimitPrice
instance FromXML ReservedInstanceLimitPrice
instance ToQuery UserBucketDetails
instance FromXML UserBucketDetails
instance ToQuery VpcPeeringConnectionVpcInfo
instance FromXML VpcPeeringConnectionVpcInfo
instance ToQuery VolumeStatusAction
instance FromXML VolumeStatusAction
instance ToQuery InstanceNetworkInterface
instance FromXML InstanceNetworkInterface
instance FromXML PlacementStrategy
instance ToQuery PlacementStrategy
instance ToHeader PlacementStrategy
instance ToByteString PlacementStrategy
instance ToText PlacementStrategy
instance FromText PlacementStrategy
instance Hashable PlacementStrategy
instance ToQuery ImportVolumeTaskDetails
instance FromXML ImportVolumeTaskDetails
instance ToQuery IamInstanceProfileSpecification
instance FromXML IamInstanceProfileSpecification
instance ToQuery VpcPeeringConnectionStateReason
instance FromXML VpcPeeringConnectionStateReason
instance ToQuery UnsuccessfulItemError
instance FromXML UnsuccessfulItemError
instance FromXML Tenancy
instance ToQuery Tenancy
instance ToHeader Tenancy
instance ToByteString Tenancy
instance ToText Tenancy
instance FromText Tenancy
instance Hashable Tenancy
instance ToQuery DiskImage
instance FromXML DiskImage
instance FromXML ConversionTaskState
instance ToQuery ConversionTaskState
instance ToHeader ConversionTaskState
instance ToByteString ConversionTaskState
instance ToText ConversionTaskState
instance FromText ConversionTaskState
instance Hashable ConversionTaskState
instance ToQuery IpPermission
instance FromXML IpPermission
instance FromXML InstanceAttributeName
instance ToQuery InstanceAttributeName
instance ToHeader InstanceAttributeName
instance ToByteString InstanceAttributeName
instance ToText InstanceAttributeName
instance FromText InstanceAttributeName
instance Hashable InstanceAttributeName
instance FromXML ReservedInstanceState
instance ToQuery ReservedInstanceState
instance ToHeader ReservedInstanceState
instance ToByteString ReservedInstanceState
instance ToText ReservedInstanceState
instance FromText ReservedInstanceState
instance Hashable ReservedInstanceState
instance FromXML AddressStatus
instance ToQuery AddressStatus
instance ToHeader AddressStatus
instance ToByteString AddressStatus
instance ToText AddressStatus
instance FromText AddressStatus
instance Hashable AddressStatus
instance ToQuery InternetGatewayAttachment
instance FromXML InternetGatewayAttachment
instance ToQuery UnsuccessfulItem
instance FromXML UnsuccessfulItem
instance ToQuery IamInstanceProfile
instance FromXML IamInstanceProfile
instance ToQuery InstanceStatusDetails
instance FromXML InstanceStatusDetails
instance ToQuery CancelSpotFleetRequestsErrorItem
instance FromXML CancelSpotFleetRequestsErrorItem
instance FromXML HypervisorType
instance ToQuery HypervisorType
instance ToHeader HypervisorType
instance ToByteString HypervisorType
instance ToText HypervisorType
instance FromText HypervisorType
instance Hashable HypervisorType
instance ToQuery UserBucket
instance FromXML UserBucket
instance ToQuery RouteTable
instance FromXML RouteTable
instance FromXML VpnState
instance ToQuery VpnState
instance ToHeader VpnState
instance ToByteString VpnState
instance ToText VpnState
instance FromText VpnState
instance Hashable VpnState
instance ToQuery ImportImageTask
instance FromXML ImportImageTask
instance ToQuery HistoryRecord
instance FromXML HistoryRecord
instance ToQuery AvailabilityZone
instance FromXML AvailabilityZone
instance FromXML SnapshotAttributeName
instance ToQuery SnapshotAttributeName
instance ToHeader SnapshotAttributeName
instance ToByteString SnapshotAttributeName
instance ToText SnapshotAttributeName
instance FromText SnapshotAttributeName
instance Hashable SnapshotAttributeName
instance ToQuery InstanceExportDetails
instance FromXML InstanceExportDetails
instance FromXML ImageTypeValues
instance ToQuery ImageTypeValues
instance ToHeader ImageTypeValues
instance ToByteString ImageTypeValues
instance ToText ImageTypeValues
instance FromText ImageTypeValues
instance Hashable ImageTypeValues
instance FromXML NetworkInterfaceAttribute
instance ToQuery NetworkInterfaceAttribute
instance ToHeader NetworkInterfaceAttribute
instance ToByteString NetworkInterfaceAttribute
instance ToText NetworkInterfaceAttribute
instance FromText NetworkInterfaceAttribute
instance Hashable NetworkInterfaceAttribute
instance ToQuery PrefixListId
instance FromXML PrefixListId
instance FromXML CancelBatchErrorCode
instance ToQuery CancelBatchErrorCode
instance ToHeader CancelBatchErrorCode
instance ToByteString CancelBatchErrorCode
instance ToText CancelBatchErrorCode
instance FromText CancelBatchErrorCode
instance Hashable CancelBatchErrorCode
instance ToQuery ExportToS3TaskSpecification
instance FromXML ExportToS3TaskSpecification
instance FromXML StatusType
instance ToQuery StatusType
instance ToHeader StatusType
instance ToByteString StatusType
instance ToText StatusType
instance FromText StatusType
instance Hashable StatusType
instance ToQuery InstanceBlockDeviceMapping
instance FromXML InstanceBlockDeviceMapping
instance FromXML EventType
instance ToQuery EventType
instance ToHeader EventType
instance ToByteString EventType
instance ToText EventType
instance FromText EventType
instance Hashable EventType
instance ToQuery VpcAttachment
instance FromXML VpcAttachment
instance ToQuery AvailabilityZoneMessage
instance FromXML AvailabilityZoneMessage
instance FromXML ContainerFormat
instance ToQuery ContainerFormat
instance ToHeader ContainerFormat
instance ToByteString ContainerFormat
instance ToText ContainerFormat
instance FromText ContainerFormat
instance Hashable ContainerFormat
instance ToQuery CancelSpotFleetRequestsSuccessItem
instance FromXML CancelSpotFleetRequestsSuccessItem
instance FromXML SubnetState
instance ToQuery SubnetState
instance ToHeader SubnetState
instance ToByteString SubnetState
instance ToText SubnetState
instance FromText SubnetState
instance Hashable SubnetState
instance ToQuery Monitoring
instance FromXML Monitoring
instance ToQuery DiskImageVolumeDescription
instance FromXML DiskImageVolumeDescription
instance ToQuery DiskImageDescription
instance FromXML DiskImageDescription
instance FromXML ShutdownBehavior
instance ToQuery ShutdownBehavior
instance ToHeader ShutdownBehavior
instance ToByteString ShutdownBehavior
instance ToText ShutdownBehavior
instance FromText ShutdownBehavior
instance Hashable ShutdownBehavior
instance ToQuery EbsInstanceBlockDevice
instance FromXML EbsInstanceBlockDevice
instance ToQuery CustomerGateway
instance FromXML CustomerGateway
instance ToQuery VolumeAttachment
instance FromXML VolumeAttachment
instance ToQuery UserData
instance FromXML UserData
instance FromXML ExportEnvironment
instance ToQuery ExportEnvironment
instance ToHeader ExportEnvironment
instance ToByteString ExportEnvironment
instance ToText ExportEnvironment
instance FromText ExportEnvironment
instance Hashable ExportEnvironment
instance ToQuery InstanceBlockDeviceMappingSpecification
instance FromXML InstanceBlockDeviceMappingSpecification
instance ToQuery ReservedInstancesModificationResult
instance FromXML ReservedInstancesModificationResult
instance FromXML PlacementGroupState
instance ToQuery PlacementGroupState
instance ToHeader PlacementGroupState
instance ToByteString PlacementGroupState
instance ToText PlacementGroupState
instance FromText PlacementGroupState
instance Hashable PlacementGroupState
instance FromXML CancelSpotInstanceRequestState
instance ToQuery CancelSpotInstanceRequestState
instance ToHeader CancelSpotInstanceRequestState
instance ToByteString CancelSpotInstanceRequestState
instance ToText CancelSpotInstanceRequestState
instance FromText CancelSpotInstanceRequestState
instance Hashable CancelSpotInstanceRequestState
instance ToQuery SecurityGroup
instance FromXML SecurityGroup
instance ToQuery Storage
instance FromXML Storage
instance ToQuery SpotDatafeedSubscription
instance FromXML SpotDatafeedSubscription
instance ToQuery Route
instance FromXML Route
instance FromXML InstanceType
instance ToQuery InstanceType
instance ToHeader InstanceType
instance ToByteString InstanceType
instance ToText InstanceType
instance FromText InstanceType
instance Hashable InstanceType
instance ToQuery InstanceStatusEvent
instance FromXML InstanceStatusEvent
instance ToQuery BundleTask
instance FromXML BundleTask
instance ToQuery NetworkAclAssociation
instance FromXML NetworkAclAssociation
instance ToQuery EbsInstanceBlockDeviceSpecification
instance FromXML EbsInstanceBlockDeviceSpecification
instance ToQuery SpotPlacement
instance FromXML SpotPlacement
instance ToQuery InstanceStatusSummary
instance FromXML InstanceStatusSummary
instance ToQuery UserIdGroupPair
instance FromXML UserIdGroupPair
instance ToQuery VpnConnectionOptions
instance FromXML VpnConnectionOptions
instance FromXML SpotInstanceState
instance ToQuery SpotInstanceState
instance ToHeader SpotInstanceState
instance ToByteString SpotInstanceState
instance ToText SpotInstanceState
instance FromText SpotInstanceState
instance Hashable SpotInstanceState
instance ToQuery VolumeStatusDetails
instance FromXML VolumeStatusDetails
instance ToQuery ReservedInstancesConfiguration
instance FromXML ReservedInstancesConfiguration
instance FromXML VpcAttributeName
instance ToQuery VpcAttributeName
instance ToHeader VpcAttributeName
instance ToByteString VpcAttributeName
instance ToText VpcAttributeName
instance FromText VpcAttributeName
instance Hashable VpcAttributeName
instance ToQuery PortRange
instance FromXML PortRange
instance FromXML BundleTaskState
instance ToQuery BundleTaskState
instance ToHeader BundleTaskState
instance ToByteString BundleTaskState
instance ToText BundleTaskState
instance FromText BundleTaskState
instance Hashable BundleTaskState
instance ToQuery RouteTableAssociation
instance FromXML RouteTableAssociation
instance FromXML RouteState
instance ToQuery RouteState
instance ToHeader RouteState
instance ToByteString RouteState
instance ToText RouteState
instance FromText RouteState
instance Hashable RouteState
instance ToQuery LaunchPermission
instance FromXML LaunchPermission
instance ToQuery MovingAddressStatus
instance FromXML MovingAddressStatus
instance FromXML VolumeAttachmentState
instance ToQuery VolumeAttachmentState
instance ToHeader VolumeAttachmentState
instance ToByteString VolumeAttachmentState
instance ToText VolumeAttachmentState
instance FromText VolumeAttachmentState
instance Hashable VolumeAttachmentState
instance ToQuery Address
instance FromXML Address
instance ToQuery VpnConnectionOptionsSpecification
instance FromXML VpnConnectionOptionsSpecification
instance ToQuery CancelledSpotInstanceRequest
instance FromXML CancelledSpotInstanceRequest
instance ToQuery InstancePrivateIpAddress
instance FromXML InstancePrivateIpAddress
instance ToQuery DiskImageDetail
instance FromXML DiskImageDetail
instance ToQuery InstanceNetworkInterfaceAssociation
instance FromXML InstanceNetworkInterfaceAssociation
instance FromXML SnapshotState
instance ToQuery SnapshotState
instance ToHeader SnapshotState
instance ToByteString SnapshotState
instance ToText SnapshotState
instance FromText SnapshotState
instance Hashable SnapshotState
instance ToQuery LaunchPermissionModifications
instance FromXML LaunchPermissionModifications
instance ToQuery KeyPairInfo
instance FromXML KeyPairInfo
instance ToQuery Subnet
instance FromXML Subnet
instance FromXML TelemetryStatus
instance ToQuery TelemetryStatus
instance ToHeader TelemetryStatus
instance ToByteString TelemetryStatus
instance ToText TelemetryStatus
instance FromText TelemetryStatus
instance Hashable TelemetryStatus
instance ToQuery NetworkInterface
instance FromXML NetworkInterface
instance FromXML BatchState
instance ToQuery BatchState
instance ToHeader BatchState
instance ToByteString BatchState
instance ToText BatchState
instance FromText BatchState
instance Hashable BatchState
instance FromXML RuleAction
instance ToQuery RuleAction
instance ToHeader RuleAction
instance ToByteString RuleAction
instance ToText RuleAction
instance FromText RuleAction
instance Hashable RuleAction
instance ToQuery ReservedInstancesModification
instance FromXML ReservedInstancesModification
instance FromXML SummaryStatus
instance ToQuery SummaryStatus
instance ToHeader SummaryStatus
instance ToByteString SummaryStatus
instance ToText SummaryStatus
instance FromText SummaryStatus
instance Hashable SummaryStatus
instance ToQuery ImportInstanceVolumeDetailItem
instance FromXML ImportInstanceVolumeDetailItem
instance ToQuery Reservation
instance FromXML Reservation
instance ToQuery Volume
instance FromXML Volume
instance ToQuery VolumeStatusEvent
instance FromXML VolumeStatusEvent
instance ToQuery LaunchSpecification
instance FromXML LaunchSpecification
instance ToQuery SpotInstanceRequest
instance FromXML SpotInstanceRequest
instance FromXML AvailabilityZoneState
instance ToQuery AvailabilityZoneState
instance ToHeader AvailabilityZoneState
instance ToByteString AvailabilityZoneState
instance ToText AvailabilityZoneState
instance FromText AvailabilityZoneState
instance Hashable AvailabilityZoneState
instance ToQuery SnapshotTaskDetail
instance FromXML SnapshotTaskDetail
instance ToQuery SpotInstanceStatus
instance FromXML SpotInstanceStatus
instance ToQuery SpotFleetRequestConfig
instance FromXML SpotFleetRequestConfig
instance ToQuery PriceScheduleSpecification
instance FromXML PriceScheduleSpecification
instance ToQuery InstanceMonitoring
instance FromXML InstanceMonitoring
instance ToQuery SpotFleetRequestConfigData
instance FromXML SpotFleetRequestConfigData
instance ToQuery ActiveInstance
instance FromXML ActiveInstance
instance ToQuery SpotPrice
instance FromXML SpotPrice
instance FromXML ListingState
instance ToQuery ListingState
instance ToHeader ListingState
instance ToByteString ListingState
instance ToText ListingState
instance FromText ListingState
instance Hashable ListingState
instance FromXML RouteOrigin
instance ToQuery RouteOrigin
instance ToHeader RouteOrigin
instance ToByteString RouteOrigin
instance ToText RouteOrigin
instance FromText RouteOrigin
instance Hashable RouteOrigin
instance ToQuery ClassicLinkInstance
instance FromXML ClassicLinkInstance
instance FromXML AttachmentStatus
instance ToQuery AttachmentStatus
instance ToHeader AttachmentStatus
instance ToByteString AttachmentStatus
instance ToText AttachmentStatus
instance FromText AttachmentStatus
instance Hashable AttachmentStatus
instance ToQuery ConversionTask
instance FromXML ConversionTask
instance ToQuery BlockDeviceMapping
instance FromXML BlockDeviceMapping
instance ToQuery PrefixList
instance FromXML PrefixList
instance ToQuery ExportToS3Task
instance FromXML ExportToS3Task
instance ToQuery InstanceCount
instance FromXML InstanceCount
instance ToQuery IcmpTypeCode
instance FromXML IcmpTypeCode
instance FromXML CurrencyCodeValues
instance ToQuery CurrencyCodeValues
instance ToHeader CurrencyCodeValues
instance ToByteString CurrencyCodeValues
instance ToText CurrencyCodeValues
instance FromText CurrencyCodeValues
instance Hashable CurrencyCodeValues
instance FromXML ReportStatusType
instance ToQuery ReportStatusType
instance ToHeader ReportStatusType
instance ToByteString ReportStatusType
instance ToText ReportStatusType
instance FromText ReportStatusType
instance Hashable ReportStatusType
instance FromXML ResourceType
instance ToQuery ResourceType
instance ToHeader ResourceType
instance ToByteString ResourceType
instance ToText ResourceType
instance FromText ResourceType
instance Hashable ResourceType
instance FromXML VpcState
instance ToQuery VpcState
instance ToHeader VpcState
instance ToByteString VpcState
instance ToText VpcState
instance FromText VpcState
instance Hashable VpcState
instance ToQuery CreateVolumePermissionModifications
instance FromXML CreateVolumePermissionModifications
instance ToQuery NetworkInterfaceAssociation
instance FromXML NetworkInterfaceAssociation
instance ToQuery VolumeStatusInfo
instance FromXML VolumeStatusInfo
instance ToQuery RunInstancesMonitoringEnabled
instance FromXML RunInstancesMonitoringEnabled
instance ToQuery NetworkInterfaceAttachment
instance FromXML NetworkInterfaceAttachment
instance FromXML AccountAttributeName
instance ToQuery AccountAttributeName
instance ToHeader AccountAttributeName
instance ToByteString AccountAttributeName
instance ToText AccountAttributeName
instance FromText AccountAttributeName
instance Hashable AccountAttributeName
instance ToQuery Tag
instance FromXML Tag
instance ToQuery CancelSpotFleetRequestsError
instance FromXML CancelSpotFleetRequestsError
instance ToQuery DhcpConfiguration
instance FromXML DhcpConfiguration
instance ToQuery Image
instance FromXML Image
instance ToQuery PrivateIpAddressSpecification
instance FromXML PrivateIpAddressSpecification
instance ToQuery AttributeValue
instance FromXML AttributeValue
instance FromXML VolumeState
instance ToQuery VolumeState
instance ToHeader VolumeState
instance ToByteString VolumeState
instance ToText VolumeState
instance FromText VolumeState
instance Hashable VolumeState
instance ToQuery InstanceNetworkInterfaceSpecification
instance FromXML InstanceNetworkInterfaceSpecification
instance ToQuery DhcpOptions
instance FromXML DhcpOptions
instance FromXML RecurringChargeFrequency
instance ToQuery RecurringChargeFrequency
instance ToHeader RecurringChargeFrequency
instance ToByteString RecurringChargeFrequency
instance ToText RecurringChargeFrequency
instance FromText RecurringChargeFrequency
instance Hashable RecurringChargeFrequency
instance ToQuery NetworkInterfaceAttachmentChanges
instance FromXML NetworkInterfaceAttachmentChanges
instance ToQuery CreateVolumePermission
instance FromXML CreateVolumePermission
instance FromXML PlatformValues
instance ToQuery PlatformValues
instance ToHeader PlatformValues
instance ToByteString PlatformValues
instance ToText PlatformValues
instance FromText PlatformValues
instance Hashable PlatformValues
instance FromXML NetworkInterfaceStatus
instance ToQuery NetworkInterfaceStatus
instance ToHeader NetworkInterfaceStatus
instance ToByteString NetworkInterfaceStatus
instance ToText NetworkInterfaceStatus
instance FromText NetworkInterfaceStatus
instance Hashable NetworkInterfaceStatus
instance FromXML VirtualizationType
instance ToQuery VirtualizationType
instance ToHeader VirtualizationType
instance ToByteString VirtualizationType
instance ToText VirtualizationType
instance FromText VirtualizationType
instance Hashable VirtualizationType
instance FromXML State
instance ToQuery State
instance ToHeader State
instance ToByteString State
instance ToText State
instance FromText State
instance Hashable State
instance FromXML InstanceLifecycleType
instance ToQuery InstanceLifecycleType
instance ToHeader InstanceLifecycleType
instance ToByteString InstanceLifecycleType
instance ToText InstanceLifecycleType
instance FromText InstanceLifecycleType
instance Hashable InstanceLifecycleType
instance ToQuery ReservedInstancesListing
instance FromXML ReservedInstancesListing
instance FromXML VpnStaticRouteSource
instance ToQuery VpnStaticRouteSource
instance ToHeader VpnStaticRouteSource
instance ToByteString VpnStaticRouteSource
instance ToText VpnStaticRouteSource
instance FromText VpnStaticRouteSource
instance Hashable VpnStaticRouteSource
instance ToQuery GroupIdentifier
instance FromXML GroupIdentifier
instance ToQuery ImportSnapshotTask
instance FromXML ImportSnapshotTask
instance ToQuery TagDescription
instance FromXML TagDescription
instance ToQuery SpotInstanceStateFault
instance FromXML SpotInstanceStateFault
instance ToQuery Snapshot
instance FromXML Snapshot
instance ToQuery ImportInstanceLaunchSpecification
instance FromXML ImportInstanceLaunchSpecification
instance ToQuery BlobAttributeValue
instance FromXML BlobAttributeValue
instance ToQuery NetworkAclEntry
instance FromXML NetworkAclEntry
instance FromXML PermissionGroup
instance ToQuery PermissionGroup
instance ToHeader PermissionGroup
instance ToByteString PermissionGroup
instance ToText PermissionGroup
instance FromText PermissionGroup
instance Hashable PermissionGroup
instance FromXML ImageAttributeName
instance ToQuery ImageAttributeName
instance ToHeader ImageAttributeName
instance ToByteString ImageAttributeName
instance ToText ImageAttributeName
instance FromText ImageAttributeName
instance Hashable ImageAttributeName
instance AWSService EC2


-- | Unassigns one or more secondary private IP addresses from a network
--   interface.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-UnassignPrivateIpAddresses.html</a>
module Network.AWS.EC2.UnassignPrivateIpAddresses
data UnassignPrivateIpAddresses

-- | <a>UnassignPrivateIpAddresses</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>upiaNetworkInterfaceId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>upiaPrivateIpAddresses</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
unassignPrivateIpAddresses :: Text -> UnassignPrivateIpAddresses

-- | The ID of the network interface.
upiaNetworkInterfaceId :: Lens' UnassignPrivateIpAddresses Text

-- | The secondary private IP addresses to unassign from the network
--   interface. You can specify this option multiple times to unassign more
--   than one IP address.
upiaPrivateIpAddresses :: Lens' UnassignPrivateIpAddresses [Text]
data UnassignPrivateIpAddressesResponse

-- | <a>UnassignPrivateIpAddressesResponse</a> constructor.
unassignPrivateIpAddressesResponse :: UnassignPrivateIpAddressesResponse
instance Eq UnassignPrivateIpAddresses
instance Ord UnassignPrivateIpAddresses
instance Read UnassignPrivateIpAddresses
instance Show UnassignPrivateIpAddresses
instance Eq UnassignPrivateIpAddressesResponse
instance Ord UnassignPrivateIpAddressesResponse
instance Read UnassignPrivateIpAddressesResponse
instance Show UnassignPrivateIpAddressesResponse
instance Generic UnassignPrivateIpAddressesResponse
instance Datatype D1UnassignPrivateIpAddressesResponse
instance Constructor C1_0UnassignPrivateIpAddressesResponse
instance AWSRequest UnassignPrivateIpAddresses
instance ToHeaders UnassignPrivateIpAddresses
instance ToQuery UnassignPrivateIpAddresses
instance ToPath UnassignPrivateIpAddresses


-- | Disables monitoring for a running instance. For more information about
--   monitoring instances, see <a>Monitoring Your Instances and Volumes</a>
--   in the <i>AmazonElastic Compute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-UnmonitorInstances.html</a>
module Network.AWS.EC2.UnmonitorInstances
data UnmonitorInstances

-- | <a>UnmonitorInstances</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uiDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>uiInstanceIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
unmonitorInstances :: UnmonitorInstances

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
uiDryRun :: Lens' UnmonitorInstances (Maybe Bool)

-- | One or more instance IDs.
uiInstanceIds :: Lens' UnmonitorInstances [Text]
data UnmonitorInstancesResponse

-- | <a>UnmonitorInstancesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uirInstanceMonitorings</a> <tt>::</tt>
--   [<a>InstanceMonitoring</a>]</li>
--   </ul>
unmonitorInstancesResponse :: UnmonitorInstancesResponse

-- | Monitoring information for one or more instances.
uirInstanceMonitorings :: Lens' UnmonitorInstancesResponse [InstanceMonitoring]
instance Eq UnmonitorInstances
instance Ord UnmonitorInstances
instance Read UnmonitorInstances
instance Show UnmonitorInstances
instance Eq UnmonitorInstancesResponse
instance Read UnmonitorInstancesResponse
instance Show UnmonitorInstancesResponse
instance Monoid UnmonitorInstancesResponse
instance Semigroup UnmonitorInstancesResponse
instance FromXML UnmonitorInstancesResponse
instance AWSRequest UnmonitorInstances
instance ToHeaders UnmonitorInstances
instance ToQuery UnmonitorInstances
instance ToPath UnmonitorInstances


-- | Shuts down one or more instances. This operation is idempotent; if you
--   terminate an instance more than once, each call succeeds.
--   
--   Terminated instances remain visible after termination (for
--   approximately one hour).
--   
--   By default, Amazon EC2 deletes all EBS volumes that were attached when
--   the instance launched. Volumes attached after instance launch continue
--   running.
--   
--   You can stop, start, and terminate EBS-backed instances. You can only
--   terminate instance store-backed instances. What happens to an instance
--   differs if you stop it or terminate it. For example, when you stop an
--   instance, the root device and any other devices attached to the
--   instance persist. When you terminate an instance, the root device and
--   any other devices attached during the instance launch are
--   automatically deleted. For more information about the differences
--   between stopping and terminating instances, see <a>Instance
--   Lifecycle</a> in the <i>Amazon Elastic Compute Cloud UserGuide</i>.
--   
--   For more information about troubleshooting, see <a>Troubleshooting
--   TerminatingYour Instance</a> in the <i>Amazon Elastic Compute Cloud
--   User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-TerminateInstances.html</a>
module Network.AWS.EC2.TerminateInstances
data TerminateInstances

-- | <a>TerminateInstances</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>tiDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>tiInstanceIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
terminateInstances :: TerminateInstances

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
tiDryRun :: Lens' TerminateInstances (Maybe Bool)

-- | One or more instance IDs.
tiInstanceIds :: Lens' TerminateInstances [Text]
data TerminateInstancesResponse

-- | <a>TerminateInstancesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>tirTerminatingInstances</a> <tt>::</tt>
--   [<a>InstanceStateChange</a>]</li>
--   </ul>
terminateInstancesResponse :: TerminateInstancesResponse

-- | Information about one or more terminated instances.
tirTerminatingInstances :: Lens' TerminateInstancesResponse [InstanceStateChange]
instance Eq TerminateInstances
instance Ord TerminateInstances
instance Read TerminateInstances
instance Show TerminateInstances
instance Eq TerminateInstancesResponse
instance Read TerminateInstancesResponse
instance Show TerminateInstancesResponse
instance Monoid TerminateInstancesResponse
instance Semigroup TerminateInstancesResponse
instance FromXML TerminateInstancesResponse
instance AWSRequest TerminateInstances
instance ToHeaders TerminateInstances
instance ToQuery TerminateInstances
instance ToPath TerminateInstances


-- | Stops an Amazon EBS-backed instance. Each time you transition an
--   instance from stopped to started, Amazon EC2 charges a full instance
--   hour, even if transitions happen multiple times within a single hour.
--   
--   You can't start or stop Spot Instances.
--   
--   Instances that use Amazon EBS volumes as their root devices can be
--   quickly stopped and started. When an instance is stopped, the compute
--   resources are released and you are not billed for hourly instance
--   usage. However, your root partition Amazon EBS volume remains,
--   continues to persist your data, and you are charged for Amazon EBS
--   volume usage. You can restart your instance at any time.
--   
--   Before stopping an instance, make sure it is in a state from which it
--   can be restarted. Stopping an instance does not preserve data stored
--   in RAM.
--   
--   Performing this operation on an instance that uses an instance store
--   as its root device returns an error.
--   
--   You can stop, start, and terminate EBS-backed instances. You can only
--   terminate instance store-backed instances. What happens to an instance
--   differs if you stop it or terminate it. For example, when you stop an
--   instance, the root device and any other devices attached to the
--   instance persist. When you terminate an instance, the root device and
--   any other devices attached during the instance launch are
--   automatically deleted. For more information about the differences
--   between stopping and terminating instances, see <a>Instance
--   Lifecycle</a> in the <i>Amazon Elastic Compute Cloud UserGuide</i>.
--   
--   For more information about troubleshooting, see <a>Troubleshooting
--   StoppingYour Instance</a> in the <i>Amazon Elastic Compute Cloud User
--   Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-StopInstances.html</a>
module Network.AWS.EC2.StopInstances
data StopInstances

-- | <a>StopInstances</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>siDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>siForce</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>siInstanceIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
stopInstances :: StopInstances

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
siDryRun :: Lens' StopInstances (Maybe Bool)

-- | Forces the instances to stop. The instances do not have an opportunity
--   to flush file system caches or file system metadata. If you use this
--   option, you must perform file system check and repair procedures. This
--   option is not recommended for Windows instances.
--   
--   Default: <tt>false</tt>
siForce :: Lens' StopInstances (Maybe Bool)

-- | One or more instance IDs.
siInstanceIds :: Lens' StopInstances [Text]
data StopInstancesResponse

-- | <a>StopInstancesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sirStoppingInstances</a> <tt>::</tt>
--   [<a>InstanceStateChange</a>]</li>
--   </ul>
stopInstancesResponse :: StopInstancesResponse

-- | Information about one or more stopped instances.
sirStoppingInstances :: Lens' StopInstancesResponse [InstanceStateChange]
instance Eq StopInstances
instance Ord StopInstances
instance Read StopInstances
instance Show StopInstances
instance Eq StopInstancesResponse
instance Read StopInstancesResponse
instance Show StopInstancesResponse
instance Monoid StopInstancesResponse
instance Semigroup StopInstancesResponse
instance FromXML StopInstancesResponse
instance AWSRequest StopInstances
instance ToHeaders StopInstances
instance ToQuery StopInstances
instance ToPath StopInstances


-- | Starts an Amazon EBS-backed AMI that you've previously stopped.
--   
--   Instances that use Amazon EBS volumes as their root devices can be
--   quickly stopped and started. When an instance is stopped, the compute
--   resources are released and you are not billed for hourly instance
--   usage. However, your root partition Amazon EBS volume remains,
--   continues to persist your data, and you are charged for Amazon EBS
--   volume usage. You can restart your instance at any time. Each time you
--   transition an instance from stopped to started, Amazon EC2 charges a
--   full instance hour, even if transitions happen multiple times within a
--   single hour.
--   
--   Before stopping an instance, make sure it is in a state from which it
--   can be restarted. Stopping an instance does not preserve data stored
--   in RAM.
--   
--   Performing this operation on an instance that uses an instance store
--   as its root device returns an error.
--   
--   For more information, see <a>Stopping Instances</a> in the <i>Amazon
--   Elastic ComputeCloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-StartInstances.html</a>
module Network.AWS.EC2.StartInstances
data StartInstances

-- | <a>StartInstances</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>si1AdditionalInfo</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>si1DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>si1InstanceIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
startInstances :: StartInstances

-- | Reserved.
si1AdditionalInfo :: Lens' StartInstances (Maybe Text)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
si1DryRun :: Lens' StartInstances (Maybe Bool)

-- | One or more instance IDs.
si1InstanceIds :: Lens' StartInstances [Text]
data StartInstancesResponse

-- | <a>StartInstancesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sirStartingInstances</a> <tt>::</tt>
--   [<a>InstanceStateChange</a>]</li>
--   </ul>
startInstancesResponse :: StartInstancesResponse

-- | Information about one or more started instances.
sirStartingInstances :: Lens' StartInstancesResponse [InstanceStateChange]
instance Eq StartInstances
instance Ord StartInstances
instance Read StartInstances
instance Show StartInstances
instance Eq StartInstancesResponse
instance Read StartInstancesResponse
instance Show StartInstancesResponse
instance Monoid StartInstancesResponse
instance Semigroup StartInstancesResponse
instance FromXML StartInstancesResponse
instance AWSRequest StartInstances
instance ToHeaders StartInstances
instance ToQuery StartInstances
instance ToPath StartInstances


-- | Launches the specified number of instances using an AMI for which you
--   have permissions.
--   
--   When you launch an instance, it enters the <tt>pending</tt> state.
--   After the instance is ready for you, it enters the <tt>running</tt>
--   state. To check the state of your instance, call
--   <tt>DescribeInstances</tt>.
--   
--   If you don't specify a security group when launching an instance,
--   Amazon EC2 uses the default security group. For more information, see
--   <a>Security Groups</a> in the <i>Amazon Elastic Compute Cloud User
--   Guide</i>.
--   
--   Linux instances have access to the public key of the key pair at boot.
--   You can use this key to provide secure access to the instance. Amazon
--   EC2 public images use this feature to provide secure access without
--   passwords. For more information, see <a>Key Pairs</a> in the <i>Amazon
--   Elastic Compute Cloud User Guide</i>.
--   
--   You can provide optional user data when launching an instance. For
--   more information, see <a>Instance Metadata</a> in the <i>Amazon
--   Elastic Compute Cloud UserGuide</i>.
--   
--   If any of the AMIs have a product code attached for which the user has
--   not subscribed, <a>RunInstances</a> fails.
--   
--   T2 instance types can only be launched into a VPC. If you do not have
--   a default VPC, or if you do not specify a subnet ID in the request,
--   <a>RunInstances</a> fails.
--   
--   For more information about troubleshooting, see <a>What To Do If An
--   InstanceImmediately Terminates</a>, and <a>Troubleshooting Connecting
--   to Your Instance</a> in the <i>Amazon Elastic Compute Cloud User
--   Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-RunInstances.html</a>
module Network.AWS.EC2.RunInstances
data RunInstances

-- | <a>RunInstances</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>riAdditionalInfo</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>riBlockDeviceMappings</a> <tt>::</tt>
--   [<a>BlockDeviceMapping</a>]</li>
--   <li><a>riClientToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>riDisableApiTermination</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>riDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>riEbsOptimized</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>riIamInstanceProfile</a> <tt>::</tt> <a>Maybe</a>
--   <a>IamInstanceProfileSpecification</a></li>
--   <li><a>riImageId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>riInstanceInitiatedShutdownBehavior</a> <tt>::</tt>
--   <a>Maybe</a> <a>ShutdownBehavior</a></li>
--   <li><a>riInstanceType</a> <tt>::</tt> <a>Maybe</a>
--   <a>InstanceType</a></li>
--   <li><a>riKernelId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>riKeyName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>riMaxCount</a> <tt>::</tt> <a>Int</a></li>
--   <li><a>riMinCount</a> <tt>::</tt> <a>Int</a></li>
--   <li><a>riMonitoring</a> <tt>::</tt> <a>Maybe</a>
--   <a>RunInstancesMonitoringEnabled</a></li>
--   <li><a>riNetworkInterfaces</a> <tt>::</tt>
--   [<a>InstanceNetworkInterfaceSpecification</a>]</li>
--   <li><a>riPlacement</a> <tt>::</tt> <a>Maybe</a> <a>Placement</a></li>
--   <li><a>riPrivateIpAddress</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>riRamdiskId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>riSecurityGroupIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>riSecurityGroups</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>riSubnetId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>riUserData</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
runInstances :: Text -> Int -> Int -> RunInstances

-- | Reserved.
riAdditionalInfo :: Lens' RunInstances (Maybe Text)

-- | The block device mapping.
riBlockDeviceMappings :: Lens' RunInstances [BlockDeviceMapping]

-- | Unique, case-sensitive identifier you provide to ensure the
--   idempotency of the request. For more information, see <a>Ensuring
--   Idempotency</a>.
--   
--   Constraints: Maximum 64 ASCII characters
riClientToken :: Lens' RunInstances (Maybe Text)

-- | If you set this parameter to <tt>true</tt>, you can't terminate the
--   instance using the Amazon EC2 console, CLI, or API; otherwise, you
--   can. If you set this parameter to <tt>true</tt> and then later want to
--   be able to terminate the instance, you must first change the value of
--   the <tt>disableApiTermination</tt> attribute to <tt>false</tt> using
--   <tt>ModifyInstanceAttribute</tt>. Alternatively, if you set
--   <tt>InstanceInitiatedShutdownBehavior</tt> to <tt>terminate</tt>, you
--   can terminate the instance by running the shutdown command from the
--   instance.
--   
--   Default: <tt>false</tt>
riDisableApiTermination :: Lens' RunInstances (Maybe Bool)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
riDryRun :: Lens' RunInstances (Maybe Bool)

-- | Indicates whether the instance is optimized for EBS I/O. This
--   optimization provides dedicated throughput to Amazon EBS and an
--   optimized configuration stack to provide optimal EBS I/O performance.
--   This optimization isn't available with all instance types. Additional
--   usage charges apply when using an EBS-optimized instance.
--   
--   Default: <tt>false</tt>
riEbsOptimized :: Lens' RunInstances (Maybe Bool)

-- | The IAM instance profile.
riIamInstanceProfile :: Lens' RunInstances (Maybe IamInstanceProfileSpecification)

-- | The ID of the AMI, which you can get by calling
--   <tt>DescribeImages</tt>.
riImageId :: Lens' RunInstances Text

-- | Indicates whether an instance stops or terminates when you initiate
--   shutdown from the instance (using the operating system command for
--   system shutdown).
--   
--   Default: <a>stop</a>
riInstanceInitiatedShutdownBehavior :: Lens' RunInstances (Maybe ShutdownBehavior)

-- | The instance type. For more information, see <a>Instance Types</a> in
--   the <i>AmazonElastic Compute Cloud User Guide</i>.
--   
--   Default: 'm1.small'
riInstanceType :: Lens' RunInstances (Maybe InstanceType)

-- | The ID of the kernel.
--   
--   We recommend that you use PV-GRUB instead of kernels and RAM disks.
--   For more information, see <a>PV-GRUB</a> in the <i>Amazon Elastic
--   Compute Cloud User Guide</i>.
riKernelId :: Lens' RunInstances (Maybe Text)

-- | The name of the key pair. You can create a key pair using
--   <tt>CreateKeyPair</tt> or <tt>ImportKeyPair</tt>.
--   
--   If you do not specify a key pair, you can't connect to the instance
--   unless you choose an AMI that is configured to allow users another way
--   to log in.
riKeyName :: Lens' RunInstances (Maybe Text)

-- | The maximum number of instances to launch. If you specify more
--   instances than Amazon EC2 can launch in the target Availability Zone,
--   Amazon EC2 launches the largest possible number of instances above
--   <tt>MinCount</tt>.
--   
--   Constraints: Between 1 and the maximum number you're allowed for the
--   specified instance type. For more information about the default
--   limits, and how to request an increase, see <a>How many instances can
--   I run in Amazon EC2</a> in the Amazon EC2 General FAQ.
riMaxCount :: Lens' RunInstances Int

-- | The minimum number of instances to launch. If you specify a minimum
--   that is more instances than Amazon EC2 can launch in the target
--   Availability Zone, Amazon EC2 launches no instances.
--   
--   Constraints: Between 1 and the maximum number you're allowed for the
--   specified instance type. For more information about the default
--   limits, and how to request an increase, see <a>How many instances can
--   I run in Amazon EC2</a> in the Amazon EC2 General FAQ.
riMinCount :: Lens' RunInstances Int

-- | The monitoring for the instance.
riMonitoring :: Lens' RunInstances (Maybe RunInstancesMonitoringEnabled)

-- | One or more network interfaces.
riNetworkInterfaces :: Lens' RunInstances [InstanceNetworkInterfaceSpecification]

-- | The placement for the instance.
riPlacement :: Lens' RunInstances (Maybe Placement)

-- | <ul>
--   <li><i>EC2-VPC</i> The primary IP address. You must specify a value
--   from the IP address range of the subnet.</li>
--   </ul>
--   
--   Only one private IP address can be designated as primary. Therefore,
--   you can't specify this parameter if 'PrivateIpAddresses.n.Primary' is
--   set to <tt>true</tt> and 'PrivateIpAddresses.n.PrivateIpAddress' is
--   set to an IP address.
--   
--   Default: We select an IP address from the IP address range of the
--   subnet.
riPrivateIpAddress :: Lens' RunInstances (Maybe Text)

-- | The ID of the RAM disk.
--   
--   We recommend that you use PV-GRUB instead of kernels and RAM disks.
--   For more information, see <a>PV-GRUB</a> in the <i>Amazon Elastic
--   Compute Cloud User Guide</i>.
riRamdiskId :: Lens' RunInstances (Maybe Text)

-- | One or more security group IDs. You can create a security group using
--   <tt>CreateSecurityGroup</tt>.
--   
--   Default: Amazon EC2 uses the default security group.
riSecurityGroupIds :: Lens' RunInstances [Text]

-- | <ul>
--   <li><i>EC2-Classic, default VPC</i> One or more security group names.
--   For a nondefault VPC, you must use security group IDs instead.</li>
--   </ul>
--   
--   Default: Amazon EC2 uses the default security group.
riSecurityGroups :: Lens' RunInstances [Text]

-- | <ul>
--   <li><i>EC2-VPC</i> The ID of the subnet to launch the instance
--   into.</li>
--   </ul>
riSubnetId :: Lens' RunInstances (Maybe Text)

-- | The Base64-encoded MIME user data for the instances.
riUserData :: Lens' RunInstances (Maybe Text)
data RunInstancesResponse

-- | <a>RunInstancesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rirGroups</a> <tt>::</tt> [<a>GroupIdentifier</a>]</li>
--   <li><a>rirInstances</a> <tt>::</tt> [<a>Instance</a>]</li>
--   <li><a>rirOwnerId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rirRequesterId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rirReservationId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
runInstancesResponse :: Text -> Text -> RunInstancesResponse

-- | One or more security groups.
rirGroups :: Lens' RunInstancesResponse [GroupIdentifier]

-- | One or more instances.
rirInstances :: Lens' RunInstancesResponse [Instance]

-- | The ID of the AWS account that owns the reservation.
rirOwnerId :: Lens' RunInstancesResponse Text

-- | The ID of the requester that launched the instances on your behalf
--   (for example, AWS Management Console or Auto Scaling).
rirRequesterId :: Lens' RunInstancesResponse (Maybe Text)

-- | The ID of the reservation.
rirReservationId :: Lens' RunInstancesResponse Text
instance Eq RunInstances
instance Read RunInstances
instance Show RunInstances
instance Eq RunInstancesResponse
instance Read RunInstancesResponse
instance Show RunInstancesResponse
instance FromXML RunInstancesResponse
instance AWSRequest RunInstances
instance ToHeaders RunInstances
instance ToQuery RunInstances
instance ToPath RunInstances


-- | Removes one or more ingress rules from a security group. The values
--   that you specify in the revoke request (for example, ports) must match
--   the existing rule's values for the rule to be removed.
--   
--   Each rule consists of the protocol and the CIDR range or source
--   security group. For the TCP and UDP protocols, you must also specify
--   the destination port or range of ports. For the ICMP protocol, you
--   must also specify the ICMP type and code.
--   
--   Rule changes are propagated to instances within the security group as
--   quickly as possible. However, a small delay might occur.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-RevokeSecurityGroupIngress.html</a>
module Network.AWS.EC2.RevokeSecurityGroupIngress
data RevokeSecurityGroupIngress

-- | <a>RevokeSecurityGroupIngress</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rsgiCidrIp</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rsgiDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>rsgiFromPort</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>rsgiGroupId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rsgiGroupName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rsgiIpPermissions</a> <tt>::</tt> [<a>IpPermission</a>]</li>
--   <li><a>rsgiIpProtocol</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rsgiSourceSecurityGroupName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>rsgiSourceSecurityGroupOwnerId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>rsgiToPort</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   </ul>
revokeSecurityGroupIngress :: RevokeSecurityGroupIngress

-- | The CIDR IP address range. You can't specify this parameter when
--   specifying a source security group.
rsgiCidrIp :: Lens' RevokeSecurityGroupIngress (Maybe Text)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
rsgiDryRun :: Lens' RevokeSecurityGroupIngress (Maybe Bool)

-- | The start of port range for the TCP and UDP protocols, or an ICMP type
--   number. For the ICMP type number, use '-1' to specify all ICMP types.
rsgiFromPort :: Lens' RevokeSecurityGroupIngress (Maybe Int)

-- | The ID of the security group.
rsgiGroupId :: Lens' RevokeSecurityGroupIngress (Maybe Text)

-- | <ul>
--   <li><i>EC2-Classic, default VPC</i> The name of the security
--   group.</li>
--   </ul>
rsgiGroupName :: Lens' RevokeSecurityGroupIngress (Maybe Text)

-- | A set of IP permissions. You can't specify a source security group and
--   a CIDR IP address range.
rsgiIpPermissions :: Lens' RevokeSecurityGroupIngress [IpPermission]

-- | The IP protocol name (<tt>tcp</tt>, <tt>udp</tt>, <tt>icmp</tt>) or
--   number (see <a>Protocol Numbers</a>). Use '-1' to specify all.
rsgiIpProtocol :: Lens' RevokeSecurityGroupIngress (Maybe Text)

-- | <ul>
--   <li><i>EC2-Classic, default VPC</i> The name of the source security
--   group. You can't specify a source security group and a CIDR IP address
--   range.</li>
--   </ul>
rsgiSourceSecurityGroupName :: Lens' RevokeSecurityGroupIngress (Maybe Text)

-- | The ID of the source security group. You can't specify a source
--   security group and a CIDR IP address range.
rsgiSourceSecurityGroupOwnerId :: Lens' RevokeSecurityGroupIngress (Maybe Text)

-- | The end of port range for the TCP and UDP protocols, or an ICMP code
--   number. For the ICMP code number, use '-1' to specify all ICMP codes
--   for the ICMP type.
rsgiToPort :: Lens' RevokeSecurityGroupIngress (Maybe Int)
data RevokeSecurityGroupIngressResponse

-- | <a>RevokeSecurityGroupIngressResponse</a> constructor.
revokeSecurityGroupIngressResponse :: RevokeSecurityGroupIngressResponse
instance Eq RevokeSecurityGroupIngress
instance Read RevokeSecurityGroupIngress
instance Show RevokeSecurityGroupIngress
instance Eq RevokeSecurityGroupIngressResponse
instance Ord RevokeSecurityGroupIngressResponse
instance Read RevokeSecurityGroupIngressResponse
instance Show RevokeSecurityGroupIngressResponse
instance Generic RevokeSecurityGroupIngressResponse
instance Datatype D1RevokeSecurityGroupIngressResponse
instance Constructor C1_0RevokeSecurityGroupIngressResponse
instance AWSRequest RevokeSecurityGroupIngress
instance ToHeaders RevokeSecurityGroupIngress
instance ToQuery RevokeSecurityGroupIngress
instance ToPath RevokeSecurityGroupIngress


-- | Removes one or more egress rules from a security group for EC2-VPC.
--   The values that you specify in the revoke request (for example, ports)
--   must match the existing rule's values for the rule to be revoked.
--   
--   Each rule consists of the protocol and the CIDR range or source
--   security group. For the TCP and UDP protocols, you must also specify
--   the destination port or range of ports. For the ICMP protocol, you
--   must also specify the ICMP type and code.
--   
--   Rule changes are propagated to instances within the security group as
--   quickly as possible. However, a small delay might occur.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-RevokeSecurityGroupEgress.html</a>
module Network.AWS.EC2.RevokeSecurityGroupEgress
data RevokeSecurityGroupEgress

-- | <a>RevokeSecurityGroupEgress</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rsgeCidrIp</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rsgeDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>rsgeFromPort</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>rsgeGroupId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rsgeIpPermissions</a> <tt>::</tt> [<a>IpPermission</a>]</li>
--   <li><a>rsgeIpProtocol</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rsgeSourceSecurityGroupName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>rsgeSourceSecurityGroupOwnerId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>rsgeToPort</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   </ul>
revokeSecurityGroupEgress :: Text -> RevokeSecurityGroupEgress

-- | The CIDR IP address range. You can't specify this parameter when
--   specifying a source security group.
rsgeCidrIp :: Lens' RevokeSecurityGroupEgress (Maybe Text)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
rsgeDryRun :: Lens' RevokeSecurityGroupEgress (Maybe Bool)

-- | The start of port range for the TCP and UDP protocols, or an ICMP type
--   number. For the ICMP type number, use '-1' to specify all ICMP types.
rsgeFromPort :: Lens' RevokeSecurityGroupEgress (Maybe Int)

-- | The ID of the security group.
rsgeGroupId :: Lens' RevokeSecurityGroupEgress Text

-- | A set of IP permissions. You can't specify a destination security
--   group and a CIDR IP address range.
rsgeIpPermissions :: Lens' RevokeSecurityGroupEgress [IpPermission]

-- | The IP protocol name (<tt>tcp</tt>, <tt>udp</tt>, <tt>icmp</tt>) or
--   number (see <a>Protocol Numbers</a>). Use '-1' to specify all.
rsgeIpProtocol :: Lens' RevokeSecurityGroupEgress (Maybe Text)

-- | <ul>
--   <li><i>EC2-Classic, default VPC</i> The name of the destination
--   security group. You can't specify a destination security group and a
--   CIDR IP address range.</li>
--   </ul>
rsgeSourceSecurityGroupName :: Lens' RevokeSecurityGroupEgress (Maybe Text)

-- | The ID of the destination security group. You can't specify a
--   destination security group and a CIDR IP address range.
rsgeSourceSecurityGroupOwnerId :: Lens' RevokeSecurityGroupEgress (Maybe Text)

-- | The end of port range for the TCP and UDP protocols, or an ICMP code
--   number. For the ICMP code number, use '-1' to specify all ICMP codes
--   for the ICMP type.
rsgeToPort :: Lens' RevokeSecurityGroupEgress (Maybe Int)
data RevokeSecurityGroupEgressResponse

-- | <a>RevokeSecurityGroupEgressResponse</a> constructor.
revokeSecurityGroupEgressResponse :: RevokeSecurityGroupEgressResponse
instance Eq RevokeSecurityGroupEgress
instance Read RevokeSecurityGroupEgress
instance Show RevokeSecurityGroupEgress
instance Eq RevokeSecurityGroupEgressResponse
instance Ord RevokeSecurityGroupEgressResponse
instance Read RevokeSecurityGroupEgressResponse
instance Show RevokeSecurityGroupEgressResponse
instance Generic RevokeSecurityGroupEgressResponse
instance Datatype D1RevokeSecurityGroupEgressResponse
instance Constructor C1_0RevokeSecurityGroupEgressResponse
instance AWSRequest RevokeSecurityGroupEgress
instance ToHeaders RevokeSecurityGroupEgress
instance ToQuery RevokeSecurityGroupEgress
instance ToPath RevokeSecurityGroupEgress


-- | Restores an Elastic IP address that was previously moved to the
--   EC2-VPC platform back to the EC2-Classic platform. You cannot move an
--   Elastic IP address that was originally allocated for use in EC2-VPC.
--   The Elastic IP address must not be associated with an instance or
--   network interface.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-RestoreAddressToClassic.html</a>
module Network.AWS.EC2.RestoreAddressToClassic
data RestoreAddressToClassic

-- | <a>RestoreAddressToClassic</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ratcDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>ratcPublicIp</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
restoreAddressToClassic :: Text -> RestoreAddressToClassic

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
ratcDryRun :: Lens' RestoreAddressToClassic (Maybe Bool)

-- | The Elastic IP address.
ratcPublicIp :: Lens' RestoreAddressToClassic Text
data RestoreAddressToClassicResponse

-- | <a>RestoreAddressToClassicResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ratcrPublicIp</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ratcrStatus</a> <tt>::</tt> <a>Maybe</a>
--   <a>AddressStatus</a></li>
--   </ul>
restoreAddressToClassicResponse :: RestoreAddressToClassicResponse

-- | The Elastic IP address.
ratcrPublicIp :: Lens' RestoreAddressToClassicResponse (Maybe Text)

-- | The move status for the IP address.
ratcrStatus :: Lens' RestoreAddressToClassicResponse (Maybe AddressStatus)
instance Eq RestoreAddressToClassic
instance Ord RestoreAddressToClassic
instance Read RestoreAddressToClassic
instance Show RestoreAddressToClassic
instance Eq RestoreAddressToClassicResponse
instance Read RestoreAddressToClassicResponse
instance Show RestoreAddressToClassicResponse
instance FromXML RestoreAddressToClassicResponse
instance AWSRequest RestoreAddressToClassic
instance ToHeaders RestoreAddressToClassic
instance ToQuery RestoreAddressToClassic
instance ToPath RestoreAddressToClassic


-- | Resets permission settings for the specified snapshot.
--   
--   For more information on modifying snapshot permissions, see <a>Sharing
--   Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ResetSnapshotAttribute.html</a>
module Network.AWS.EC2.ResetSnapshotAttribute
data ResetSnapshotAttribute

-- | <a>ResetSnapshotAttribute</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rsaAttribute</a> <tt>::</tt> <a>SnapshotAttributeName</a></li>
--   <li><a>rsaDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>rsaSnapshotId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
resetSnapshotAttribute :: Text -> SnapshotAttributeName -> ResetSnapshotAttribute

-- | The attribute to reset (currently only the attribute for permission to
--   create volumes can be reset).
rsaAttribute :: Lens' ResetSnapshotAttribute SnapshotAttributeName

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
rsaDryRun :: Lens' ResetSnapshotAttribute (Maybe Bool)

-- | The ID of the snapshot.
rsaSnapshotId :: Lens' ResetSnapshotAttribute Text
data ResetSnapshotAttributeResponse

-- | <a>ResetSnapshotAttributeResponse</a> constructor.
resetSnapshotAttributeResponse :: ResetSnapshotAttributeResponse
instance Eq ResetSnapshotAttribute
instance Read ResetSnapshotAttribute
instance Show ResetSnapshotAttribute
instance Eq ResetSnapshotAttributeResponse
instance Ord ResetSnapshotAttributeResponse
instance Read ResetSnapshotAttributeResponse
instance Show ResetSnapshotAttributeResponse
instance Generic ResetSnapshotAttributeResponse
instance Datatype D1ResetSnapshotAttributeResponse
instance Constructor C1_0ResetSnapshotAttributeResponse
instance AWSRequest ResetSnapshotAttribute
instance ToHeaders ResetSnapshotAttribute
instance ToQuery ResetSnapshotAttribute
instance ToPath ResetSnapshotAttribute


-- | Resets a network interface attribute. You can specify only one
--   attribute at a time.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ResetNetworkInterfaceAttribute.html</a>
module Network.AWS.EC2.ResetNetworkInterfaceAttribute
data ResetNetworkInterfaceAttribute

-- | <a>ResetNetworkInterfaceAttribute</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rniaDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>rniaNetworkInterfaceId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rniaSourceDestCheck</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
resetNetworkInterfaceAttribute :: Text -> ResetNetworkInterfaceAttribute

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
rniaDryRun :: Lens' ResetNetworkInterfaceAttribute (Maybe Bool)

-- | The ID of the network interface.
rniaNetworkInterfaceId :: Lens' ResetNetworkInterfaceAttribute Text

-- | The source/destination checking attribute. Resets the value to
--   <tt>true</tt>.
rniaSourceDestCheck :: Lens' ResetNetworkInterfaceAttribute (Maybe Text)
data ResetNetworkInterfaceAttributeResponse

-- | <a>ResetNetworkInterfaceAttributeResponse</a> constructor.
resetNetworkInterfaceAttributeResponse :: ResetNetworkInterfaceAttributeResponse
instance Eq ResetNetworkInterfaceAttribute
instance Ord ResetNetworkInterfaceAttribute
instance Read ResetNetworkInterfaceAttribute
instance Show ResetNetworkInterfaceAttribute
instance Eq ResetNetworkInterfaceAttributeResponse
instance Ord ResetNetworkInterfaceAttributeResponse
instance Read ResetNetworkInterfaceAttributeResponse
instance Show ResetNetworkInterfaceAttributeResponse
instance Generic ResetNetworkInterfaceAttributeResponse
instance Datatype D1ResetNetworkInterfaceAttributeResponse
instance Constructor C1_0ResetNetworkInterfaceAttributeResponse
instance AWSRequest ResetNetworkInterfaceAttribute
instance ToHeaders ResetNetworkInterfaceAttribute
instance ToQuery ResetNetworkInterfaceAttribute
instance ToPath ResetNetworkInterfaceAttribute


-- | Resets an attribute of an instance to its default value. To reset the
--   <tt>kernel</tt> or <tt>ramdisk</tt>, the instance must be in a stopped
--   state. To reset the <a>SourceDestCheck</a>, the instance can be either
--   running or stopped.
--   
--   The <a>SourceDestCheck</a> attribute controls whether
--   source/destination checking is enabled. The default value is
--   <tt>true</tt>, which means checking is enabled. This value must be
--   <tt>false</tt> for a NAT instance to perform NAT. For more
--   information, see <a>NAT Instances</a> in the <i>Amazon Virtual Private
--   Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ResetInstanceAttribute.html</a>
module Network.AWS.EC2.ResetInstanceAttribute
data ResetInstanceAttribute

-- | <a>ResetInstanceAttribute</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>riaAttribute</a> <tt>::</tt> <a>InstanceAttributeName</a></li>
--   <li><a>riaDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>riaInstanceId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
resetInstanceAttribute :: Text -> InstanceAttributeName -> ResetInstanceAttribute

-- | The attribute to reset.
riaAttribute :: Lens' ResetInstanceAttribute InstanceAttributeName

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
riaDryRun :: Lens' ResetInstanceAttribute (Maybe Bool)

-- | The ID of the instance.
riaInstanceId :: Lens' ResetInstanceAttribute Text
data ResetInstanceAttributeResponse

-- | <a>ResetInstanceAttributeResponse</a> constructor.
resetInstanceAttributeResponse :: ResetInstanceAttributeResponse
instance Eq ResetInstanceAttribute
instance Read ResetInstanceAttribute
instance Show ResetInstanceAttribute
instance Eq ResetInstanceAttributeResponse
instance Ord ResetInstanceAttributeResponse
instance Read ResetInstanceAttributeResponse
instance Show ResetInstanceAttributeResponse
instance Generic ResetInstanceAttributeResponse
instance Datatype D1ResetInstanceAttributeResponse
instance Constructor C1_0ResetInstanceAttributeResponse
instance AWSRequest ResetInstanceAttribute
instance ToHeaders ResetInstanceAttribute
instance ToQuery ResetInstanceAttribute
instance ToPath ResetInstanceAttribute


-- | Resets an attribute of an AMI to its default value.
--   
--   The productCodes attribute can't be reset.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ResetImageAttribute.html</a>
module Network.AWS.EC2.ResetImageAttribute
data ResetImageAttribute

-- | <a>ResetImageAttribute</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ria1Attribute</a> <tt>::</tt>
--   <a>ResetImageAttributeName</a></li>
--   <li><a>ria1DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>ria1ImageId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
resetImageAttribute :: Text -> ResetImageAttributeName -> ResetImageAttribute

-- | The attribute to reset (currently you can only reset the launch
--   permission attribute).
ria1Attribute :: Lens' ResetImageAttribute ResetImageAttributeName

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
ria1DryRun :: Lens' ResetImageAttribute (Maybe Bool)

-- | The ID of the AMI.
ria1ImageId :: Lens' ResetImageAttribute Text
data ResetImageAttributeResponse

-- | <a>ResetImageAttributeResponse</a> constructor.
resetImageAttributeResponse :: ResetImageAttributeResponse
instance Eq ResetImageAttribute
instance Read ResetImageAttribute
instance Show ResetImageAttribute
instance Eq ResetImageAttributeResponse
instance Ord ResetImageAttributeResponse
instance Read ResetImageAttributeResponse
instance Show ResetImageAttributeResponse
instance Generic ResetImageAttributeResponse
instance Datatype D1ResetImageAttributeResponse
instance Constructor C1_0ResetImageAttributeResponse
instance AWSRequest ResetImageAttribute
instance ToHeaders ResetImageAttribute
instance ToQuery ResetImageAttribute
instance ToPath ResetImageAttribute


-- | Creates a Spot Instance request. Spot Instances are instances that
--   Amazon EC2 launches when the bid price that you specify exceeds the
--   current Spot Price. Amazon EC2 periodically sets the Spot Price based
--   on available Spot Instance capacity and current Spot Instance
--   requests. For more information, see <a>SpotInstance Requests</a> in
--   the <i>Amazon Elastic Compute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-RequestSpotInstances.html</a>
module Network.AWS.EC2.RequestSpotInstances
data RequestSpotInstances

-- | <a>RequestSpotInstances</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rsiAvailabilityZoneGroup</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>rsiClientToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rsiDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>rsiInstanceCount</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>rsiLaunchGroup</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rsiLaunchSpecification</a> <tt>::</tt> <a>Maybe</a>
--   <a>RequestSpotLaunchSpecification</a></li>
--   <li><a>rsiSpotPrice</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rsiType</a> <tt>::</tt> <a>Maybe</a>
--   <a>SpotInstanceType</a></li>
--   <li><a>rsiValidFrom</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>rsiValidUntil</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   </ul>
requestSpotInstances :: Text -> RequestSpotInstances

-- | The user-specified name for a logical grouping of bids.
--   
--   When you specify an Availability Zone group in a Spot Instance
--   request, all Spot Instances in the request are launched in the same
--   Availability Zone. Instance proximity is maintained with this
--   parameter, but the choice of Availability Zone is not. The group
--   applies only to bids for Spot Instances of the same instance type. Any
--   additional Spot Instance requests that are specified with the same
--   Availability Zone group name are launched in that same Availability
--   Zone, as long as at least one instance from the group is still active.
--   
--   If there is no active instance running in the Availability Zone group
--   that you specify for a new Spot Instance request (all instances are
--   terminated, the bid is expired, or the bid falls below current
--   market), then Amazon EC2 launches the instance in any Availability
--   Zone where the constraint can be met. Consequently, the subsequent set
--   of Spot Instances could be placed in a different zone from the
--   original request, even if you specified the same Availability Zone
--   group.
--   
--   Default: Instances are launched in any available Availability Zone.
rsiAvailabilityZoneGroup :: Lens' RequestSpotInstances (Maybe Text)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. For more information, see <a>How to Ensure
--   Idempotency</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
rsiClientToken :: Lens' RequestSpotInstances (Maybe Text)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
rsiDryRun :: Lens' RequestSpotInstances (Maybe Bool)

-- | The maximum number of Spot Instances to launch.
--   
--   Default: 1
rsiInstanceCount :: Lens' RequestSpotInstances (Maybe Int)

-- | The instance launch group. Launch groups are Spot Instances that
--   launch together and terminate together.
--   
--   Default: Instances are launched and terminated individually
rsiLaunchGroup :: Lens' RequestSpotInstances (Maybe Text)
rsiLaunchSpecification :: Lens' RequestSpotInstances (Maybe RequestSpotLaunchSpecification)

-- | The maximum hourly price (bid) for any Spot Instance launched to
--   fulfill the request.
rsiSpotPrice :: Lens' RequestSpotInstances Text

-- | The Spot Instance request type.
--   
--   Default: 'one-time'
rsiType :: Lens' RequestSpotInstances (Maybe SpotInstanceType)

-- | The start date of the request. If this is a one-time request, the
--   request becomes active at this date and time and remains active until
--   all instances launch, the request expires, or the request is canceled.
--   If the request is persistent, the request becomes active at this date
--   and time and remains active until it expires or is canceled.
--   
--   Default: The request is effective indefinitely.
rsiValidFrom :: Lens' RequestSpotInstances (Maybe UTCTime)

-- | The end date of the request. If this is a one-time request, the
--   request remains active until all instances launch, the request is
--   canceled, or this date is reached. If the request is persistent, it
--   remains active until it is canceled or this date and time is reached.
--   
--   Default: The request is effective indefinitely.
rsiValidUntil :: Lens' RequestSpotInstances (Maybe UTCTime)
data RequestSpotInstancesResponse

-- | <a>RequestSpotInstancesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rsirSpotInstanceRequests</a> <tt>::</tt>
--   [<a>SpotInstanceRequest</a>]</li>
--   </ul>
requestSpotInstancesResponse :: RequestSpotInstancesResponse

-- | One or more Spot Instance requests.
rsirSpotInstanceRequests :: Lens' RequestSpotInstancesResponse [SpotInstanceRequest]
instance Eq RequestSpotInstances
instance Read RequestSpotInstances
instance Show RequestSpotInstances
instance Eq RequestSpotInstancesResponse
instance Read RequestSpotInstancesResponse
instance Show RequestSpotInstancesResponse
instance Monoid RequestSpotInstancesResponse
instance Semigroup RequestSpotInstancesResponse
instance FromXML RequestSpotInstancesResponse
instance AWSRequest RequestSpotInstances
instance ToHeaders RequestSpotInstances
instance ToQuery RequestSpotInstances
instance ToPath RequestSpotInstances


-- | Creates a Spot fleet request.
--   
--   For more information, see <a>Spot Fleets</a> in the <i>Amazon Elastic
--   Compute CloudUser Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-RequestSpotFleet.html</a>
module Network.AWS.EC2.RequestSpotFleet
data RequestSpotFleet

-- | <a>RequestSpotFleet</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rsfDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>rsfSpotFleetRequestConfig</a> <tt>::</tt>
--   <a>SpotFleetRequestConfigData</a></li>
--   </ul>
requestSpotFleet :: SpotFleetRequestConfigData -> RequestSpotFleet

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
rsfDryRun :: Lens' RequestSpotFleet (Maybe Bool)

-- | The configuration for the Spot fleet request.
rsfSpotFleetRequestConfig :: Lens' RequestSpotFleet SpotFleetRequestConfigData
data RequestSpotFleetResponse

-- | <a>RequestSpotFleetResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rsfrSpotFleetRequestId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
requestSpotFleetResponse :: Text -> RequestSpotFleetResponse

-- | The ID of the Spot fleet request.
rsfrSpotFleetRequestId :: Lens' RequestSpotFleetResponse Text
instance Eq RequestSpotFleet
instance Read RequestSpotFleet
instance Show RequestSpotFleet
instance Eq RequestSpotFleetResponse
instance Ord RequestSpotFleetResponse
instance Read RequestSpotFleetResponse
instance Show RequestSpotFleetResponse
instance Monoid RequestSpotFleetResponse
instance IsString RequestSpotFleetResponse
instance FromXML RequestSpotFleetResponse
instance AWSRequest RequestSpotFleet
instance ToHeaders RequestSpotFleet
instance ToQuery RequestSpotFleet
instance ToPath RequestSpotFleet


-- | Submits feedback about the status of an instance. The instance must be
--   in the <tt>running</tt> state. If your experience with the instance
--   differs from the instance status returned by
--   <tt>DescribeInstanceStatus</tt>, use <a>ReportInstanceStatus</a> to
--   report your experience with the instance. Amazon EC2 collects this
--   information to improve the accuracy of status checks.
--   
--   Use of this action does not change the value returned by
--   <tt>DescribeInstanceStatus</tt>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ReportInstanceStatus.html</a>
module Network.AWS.EC2.ReportInstanceStatus
data ReportInstanceStatus

-- | <a>ReportInstanceStatus</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>risDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>risDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>risEndTime</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>risInstances</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>risReasonCodes</a> <tt>::</tt>
--   [<a>ReportInstanceReasonCodes</a>]</li>
--   <li><a>risStartTime</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>risStatus</a> <tt>::</tt> <a>ReportStatusType</a></li>
--   </ul>
reportInstanceStatus :: ReportStatusType -> ReportInstanceStatus

-- | Descriptive text about the health state of your instance.
risDescription :: Lens' ReportInstanceStatus (Maybe Text)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
risDryRun :: Lens' ReportInstanceStatus (Maybe Bool)

-- | The time at which the reported instance health state ended.
risEndTime :: Lens' ReportInstanceStatus (Maybe UTCTime)

-- | One or more instances.
risInstances :: Lens' ReportInstanceStatus [Text]

-- | One or more reason codes that describes the health state of your
--   instance.
--   
--   'instance-stuck-in-state': My instance is stuck in a state.
--   
--   <tt>unresponsive</tt>: My instance is unresponsive.
--   
--   'not-accepting-credentials': My instance is not accepting my
--   credentials.
--   
--   'password-not-available': A password is not available for my instance.
--   
--   'performance-network': My instance is experiencing performance
--   problems which I believe are network related.
--   
--   'performance-instance-store': My instance is experiencing performance
--   problems which I believe are related to the instance stores.
--   
--   'performance-ebs-volume': My instance is experiencing performance
--   problems which I believe are related to an EBS volume.
--   
--   'performance-other': My instance is experiencing performance problems.
--   
--   <tt>other</tt>: [explain using the description parameter]
risReasonCodes :: Lens' ReportInstanceStatus [ReportInstanceReasonCodes]

-- | The time at which the reported instance health state began.
risStartTime :: Lens' ReportInstanceStatus (Maybe UTCTime)

-- | The status of all instances listed.
risStatus :: Lens' ReportInstanceStatus ReportStatusType
data ReportInstanceStatusResponse

-- | <a>ReportInstanceStatusResponse</a> constructor.
reportInstanceStatusResponse :: ReportInstanceStatusResponse
instance Eq ReportInstanceStatus
instance Read ReportInstanceStatus
instance Show ReportInstanceStatus
instance Eq ReportInstanceStatusResponse
instance Ord ReportInstanceStatusResponse
instance Read ReportInstanceStatusResponse
instance Show ReportInstanceStatusResponse
instance Generic ReportInstanceStatusResponse
instance Datatype D1ReportInstanceStatusResponse
instance Constructor C1_0ReportInstanceStatusResponse
instance AWSRequest ReportInstanceStatus
instance ToHeaders ReportInstanceStatus
instance ToQuery ReportInstanceStatus
instance ToPath ReportInstanceStatus


-- | Changes the route table associated with a given subnet in a VPC. After
--   the operation completes, the subnet uses the routes in the new route
--   table it's associated with. For more information about route tables,
--   see <a>Route Tables</a> in the <i>Amazon Virtual Private Cloud User
--   Guide</i>.
--   
--   You can also use ReplaceRouteTableAssociation to change which table is
--   the main route table in the VPC. You just specify the main route
--   table's association ID and the route table to be the new main route
--   table.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ReplaceRouteTableAssociation.html</a>
module Network.AWS.EC2.ReplaceRouteTableAssociation
data ReplaceRouteTableAssociation

-- | <a>ReplaceRouteTableAssociation</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rrtaAssociationId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rrtaDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>rrtaRouteTableId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
replaceRouteTableAssociation :: Text -> Text -> ReplaceRouteTableAssociation

-- | The association ID.
rrtaAssociationId :: Lens' ReplaceRouteTableAssociation Text

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
rrtaDryRun :: Lens' ReplaceRouteTableAssociation (Maybe Bool)

-- | The ID of the new route table to associate with the subnet.
rrtaRouteTableId :: Lens' ReplaceRouteTableAssociation Text
data ReplaceRouteTableAssociationResponse

-- | <a>ReplaceRouteTableAssociationResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rrtarNewAssociationId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
replaceRouteTableAssociationResponse :: ReplaceRouteTableAssociationResponse

-- | The ID of the new association.
rrtarNewAssociationId :: Lens' ReplaceRouteTableAssociationResponse (Maybe Text)
instance Eq ReplaceRouteTableAssociation
instance Ord ReplaceRouteTableAssociation
instance Read ReplaceRouteTableAssociation
instance Show ReplaceRouteTableAssociation
instance Eq ReplaceRouteTableAssociationResponse
instance Ord ReplaceRouteTableAssociationResponse
instance Read ReplaceRouteTableAssociationResponse
instance Show ReplaceRouteTableAssociationResponse
instance Monoid ReplaceRouteTableAssociationResponse
instance FromXML ReplaceRouteTableAssociationResponse
instance AWSRequest ReplaceRouteTableAssociation
instance ToHeaders ReplaceRouteTableAssociation
instance ToQuery ReplaceRouteTableAssociation
instance ToPath ReplaceRouteTableAssociation


-- | Replaces an existing route within a route table in a VPC. You must
--   provide only one of the following: Internet gateway or virtual private
--   gateway, NAT instance, VPC peering connection, or network interface.
--   
--   For more information about route tables, see <a>Route Tables</a> in
--   the <i>AmazonVirtual Private Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ReplaceRoute.html</a>
module Network.AWS.EC2.ReplaceRoute
data ReplaceRoute

-- | <a>ReplaceRoute</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rrDestinationCidrBlock</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rrDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>rrGatewayId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rrInstanceId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>rrNetworkInterfaceId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>rrRouteTableId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rrVpcPeeringConnectionId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
replaceRoute :: Text -> Text -> ReplaceRoute

-- | The CIDR address block used for the destination match. The value you
--   provide must match the CIDR of an existing route in the table.
rrDestinationCidrBlock :: Lens' ReplaceRoute Text

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
rrDryRun :: Lens' ReplaceRoute (Maybe Bool)

-- | The ID of an Internet gateway or virtual private gateway.
rrGatewayId :: Lens' ReplaceRoute (Maybe Text)

-- | The ID of a NAT instance in your VPC.
rrInstanceId :: Lens' ReplaceRoute (Maybe Text)

-- | The ID of a network interface.
rrNetworkInterfaceId :: Lens' ReplaceRoute (Maybe Text)

-- | The ID of the route table.
rrRouteTableId :: Lens' ReplaceRoute Text

-- | The ID of a VPC peering connection.
rrVpcPeeringConnectionId :: Lens' ReplaceRoute (Maybe Text)
data ReplaceRouteResponse

-- | <a>ReplaceRouteResponse</a> constructor.
replaceRouteResponse :: ReplaceRouteResponse
instance Eq ReplaceRoute
instance Ord ReplaceRoute
instance Read ReplaceRoute
instance Show ReplaceRoute
instance Eq ReplaceRouteResponse
instance Ord ReplaceRouteResponse
instance Read ReplaceRouteResponse
instance Show ReplaceRouteResponse
instance Generic ReplaceRouteResponse
instance Datatype D1ReplaceRouteResponse
instance Constructor C1_0ReplaceRouteResponse
instance AWSRequest ReplaceRoute
instance ToHeaders ReplaceRoute
instance ToQuery ReplaceRoute
instance ToPath ReplaceRoute


-- | Replaces an entry (rule) in a network ACL. For more information about
--   network ACLs, see <a>Network ACLs</a> in the <i>Amazon Virtual Private
--   Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ReplaceNetworkAclEntry.html</a>
module Network.AWS.EC2.ReplaceNetworkAclEntry
data ReplaceNetworkAclEntry

-- | <a>ReplaceNetworkAclEntry</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rnaeCidrBlock</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rnaeDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>rnaeEgress</a> <tt>::</tt> <a>Bool</a></li>
--   <li><a>rnaeIcmpTypeCode</a> <tt>::</tt> <a>Maybe</a>
--   <a>IcmpTypeCode</a></li>
--   <li><a>rnaeNetworkAclId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rnaePortRange</a> <tt>::</tt> <a>Maybe</a>
--   <a>PortRange</a></li>
--   <li><a>rnaeProtocol</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rnaeRuleAction</a> <tt>::</tt> <a>RuleAction</a></li>
--   <li><a>rnaeRuleNumber</a> <tt>::</tt> <a>Int</a></li>
--   </ul>
replaceNetworkAclEntry :: Text -> Int -> Text -> RuleAction -> Bool -> Text -> ReplaceNetworkAclEntry

-- | The network range to allow or deny, in CIDR notation.
rnaeCidrBlock :: Lens' ReplaceNetworkAclEntry Text

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
rnaeDryRun :: Lens' ReplaceNetworkAclEntry (Maybe Bool)

-- | Indicates whether to replace the egress rule.
--   
--   Default: If no value is specified, we replace the ingress rule.
rnaeEgress :: Lens' ReplaceNetworkAclEntry Bool

-- | ICMP protocol: The ICMP type and code. Required if specifying 1 (ICMP)
--   for the protocol.
rnaeIcmpTypeCode :: Lens' ReplaceNetworkAclEntry (Maybe IcmpTypeCode)

-- | The ID of the ACL.
rnaeNetworkAclId :: Lens' ReplaceNetworkAclEntry Text

-- | TCP or UDP protocols: The range of ports the rule applies to. Required
--   if specifying 6 (TCP) or 17 (UDP) for the protocol.
rnaePortRange :: Lens' ReplaceNetworkAclEntry (Maybe PortRange)

-- | The IP protocol. You can specify <a>all</a> or '-1' to mean all
--   protocols.
rnaeProtocol :: Lens' ReplaceNetworkAclEntry Text

-- | Indicates whether to allow or deny the traffic that matches the rule.
rnaeRuleAction :: Lens' ReplaceNetworkAclEntry RuleAction

-- | The rule number of the entry to replace.
rnaeRuleNumber :: Lens' ReplaceNetworkAclEntry Int
data ReplaceNetworkAclEntryResponse

-- | <a>ReplaceNetworkAclEntryResponse</a> constructor.
replaceNetworkAclEntryResponse :: ReplaceNetworkAclEntryResponse
instance Eq ReplaceNetworkAclEntry
instance Read ReplaceNetworkAclEntry
instance Show ReplaceNetworkAclEntry
instance Eq ReplaceNetworkAclEntryResponse
instance Ord ReplaceNetworkAclEntryResponse
instance Read ReplaceNetworkAclEntryResponse
instance Show ReplaceNetworkAclEntryResponse
instance Generic ReplaceNetworkAclEntryResponse
instance Datatype D1ReplaceNetworkAclEntryResponse
instance Constructor C1_0ReplaceNetworkAclEntryResponse
instance AWSRequest ReplaceNetworkAclEntry
instance ToHeaders ReplaceNetworkAclEntry
instance ToQuery ReplaceNetworkAclEntry
instance ToPath ReplaceNetworkAclEntry


-- | Changes which network ACL a subnet is associated with. By default when
--   you create a subnet, it's automatically associated with the default
--   network ACL. For more information about network ACLs, see <a>Network
--   ACLs</a> in the <i>AmazonVirtual Private Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ReplaceNetworkAclAssociation.html</a>
module Network.AWS.EC2.ReplaceNetworkAclAssociation
data ReplaceNetworkAclAssociation

-- | <a>ReplaceNetworkAclAssociation</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rnaaAssociationId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>rnaaDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>rnaaNetworkAclId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
replaceNetworkAclAssociation :: Text -> Text -> ReplaceNetworkAclAssociation

-- | The ID of the current association between the original network ACL and
--   the subnet.
rnaaAssociationId :: Lens' ReplaceNetworkAclAssociation Text

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
rnaaDryRun :: Lens' ReplaceNetworkAclAssociation (Maybe Bool)

-- | The ID of the new network ACL to associate with the subnet.
rnaaNetworkAclId :: Lens' ReplaceNetworkAclAssociation Text
data ReplaceNetworkAclAssociationResponse

-- | <a>ReplaceNetworkAclAssociationResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rnaarNewAssociationId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
replaceNetworkAclAssociationResponse :: ReplaceNetworkAclAssociationResponse

-- | The ID of the new association.
rnaarNewAssociationId :: Lens' ReplaceNetworkAclAssociationResponse (Maybe Text)
instance Eq ReplaceNetworkAclAssociation
instance Ord ReplaceNetworkAclAssociation
instance Read ReplaceNetworkAclAssociation
instance Show ReplaceNetworkAclAssociation
instance Eq ReplaceNetworkAclAssociationResponse
instance Ord ReplaceNetworkAclAssociationResponse
instance Read ReplaceNetworkAclAssociationResponse
instance Show ReplaceNetworkAclAssociationResponse
instance Monoid ReplaceNetworkAclAssociationResponse
instance FromXML ReplaceNetworkAclAssociationResponse
instance AWSRequest ReplaceNetworkAclAssociation
instance ToHeaders ReplaceNetworkAclAssociation
instance ToQuery ReplaceNetworkAclAssociation
instance ToPath ReplaceNetworkAclAssociation


-- | Releases the specified Elastic IP address.
--   
--   After releasing an Elastic IP address, it is released to the IP
--   address pool and might be unavailable to you. Be sure to update your
--   DNS records and any servers or devices that communicate with the
--   address. If you attempt to release an Elastic IP address that you
--   already released, you'll get an <tt>AuthFailure</tt> error if the
--   address is already allocated to another AWS account.
--   
--   <ul>
--   <li><i>EC2-Classic, default VPC</i> Releasing an Elastic IP address
--   automatically disassociates it from any instance that it's associated
--   with. To disassociate an Elastic IP address without releasing it, use
--   <tt>DisassociateAddress</tt>.</li>
--   <li><i>Nondefault VPC</i> You must use <tt>DisassociateAddress</tt> to
--   disassociate the Elastic IP address before you try to release it.
--   Otherwise, Amazon EC2 returns an error (<a>InUse</a>).</li>
--   </ul>
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ReleaseAddress.html</a>
module Network.AWS.EC2.ReleaseAddress
data ReleaseAddress

-- | <a>ReleaseAddress</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>raAllocationId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>raDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>raPublicIp</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
releaseAddress :: ReleaseAddress

-- | <ul>
--   <li><i>EC2-VPC</i> The allocation ID. Required for EC2-VPC.</li>
--   </ul>
raAllocationId :: Lens' ReleaseAddress (Maybe Text)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
raDryRun :: Lens' ReleaseAddress (Maybe Bool)

-- | <ul>
--   <li><i>EC2-Classic</i> The Elastic IP address. Required for
--   EC2-Classic.</li>
--   </ul>
raPublicIp :: Lens' ReleaseAddress (Maybe Text)
data ReleaseAddressResponse

-- | <a>ReleaseAddressResponse</a> constructor.
releaseAddressResponse :: ReleaseAddressResponse
instance Eq ReleaseAddress
instance Ord ReleaseAddress
instance Read ReleaseAddress
instance Show ReleaseAddress
instance Eq ReleaseAddressResponse
instance Ord ReleaseAddressResponse
instance Read ReleaseAddressResponse
instance Show ReleaseAddressResponse
instance Generic ReleaseAddressResponse
instance Datatype D1ReleaseAddressResponse
instance Constructor C1_0ReleaseAddressResponse
instance AWSRequest ReleaseAddress
instance ToHeaders ReleaseAddress
instance ToQuery ReleaseAddress
instance ToPath ReleaseAddress


-- | Rejects a VPC peering connection request. The VPC peering connection
--   must be in the 'pending-acceptance' state. Use the
--   <tt>DescribeVpcPeeringConnections</tt> request to view your
--   outstanding VPC peering connection requests. To delete an active VPC
--   peering connection, or to delete a VPC peering connection request that
--   you initiated, use <tt>DeleteVpcPeeringConnection</tt>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-RejectVpcPeeringConnection.html</a>
module Network.AWS.EC2.RejectVpcPeeringConnection
data RejectVpcPeeringConnection

-- | <a>RejectVpcPeeringConnection</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rvpcDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>rvpcVpcPeeringConnectionId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
rejectVpcPeeringConnection :: Text -> RejectVpcPeeringConnection

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
rvpcDryRun :: Lens' RejectVpcPeeringConnection (Maybe Bool)

-- | The ID of the VPC peering connection.
rvpcVpcPeeringConnectionId :: Lens' RejectVpcPeeringConnection Text
data RejectVpcPeeringConnectionResponse

-- | <a>RejectVpcPeeringConnectionResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rvpcrReturn</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   </ul>
rejectVpcPeeringConnectionResponse :: RejectVpcPeeringConnectionResponse

-- | Returns <tt>true</tt> if the request succeeds; otherwise, it returns
--   an error.
rvpcrReturn :: Lens' RejectVpcPeeringConnectionResponse (Maybe Bool)
instance Eq RejectVpcPeeringConnection
instance Ord RejectVpcPeeringConnection
instance Read RejectVpcPeeringConnection
instance Show RejectVpcPeeringConnection
instance Eq RejectVpcPeeringConnectionResponse
instance Ord RejectVpcPeeringConnectionResponse
instance Read RejectVpcPeeringConnectionResponse
instance Show RejectVpcPeeringConnectionResponse
instance FromXML RejectVpcPeeringConnectionResponse
instance AWSRequest RejectVpcPeeringConnection
instance ToHeaders RejectVpcPeeringConnection
instance ToQuery RejectVpcPeeringConnection
instance ToPath RejectVpcPeeringConnection


-- | Registers an AMI. When you're creating an AMI, this is the final step
--   you must complete before you can launch an instance from the AMI. For
--   more information about creating AMIs, see <a>Creating Your Own
--   AMIs</a> in the <i>AmazonElastic Compute Cloud User Guide</i>.
--   
--   For Amazon EBS-backed instances, <tt>CreateImage</tt> creates and
--   registers the AMI in a single request, so you don't have to register
--   the AMI yourself.
--   
--   You can also use <a>RegisterImage</a> to create an Amazon EBS-backed
--   AMI from a snapshot of a root device volume. For more information, see
--   <a>Launching anInstance from a Snapshot</a> in the <i>Amazon Elastic
--   Compute Cloud User Guide</i>.
--   
--   If needed, you can deregister an AMI at any time. Any modifications
--   you make to an AMI backed by an instance store volume invalidates its
--   registration. If you make changes to an image, deregister the previous
--   image and register the new image.
--   
--   You can't register an image where a secondary (non-root) snapshot has
--   AWS Marketplace product codes.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-RegisterImage.html</a>
module Network.AWS.EC2.RegisterImage
data RegisterImage

-- | <a>RegisterImage</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ri1Architecture</a> <tt>::</tt> <a>Maybe</a>
--   <a>ArchitectureValues</a></li>
--   <li><a>ri1BlockDeviceMappings</a> <tt>::</tt>
--   [<a>BlockDeviceMapping</a>]</li>
--   <li><a>ri1Description</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ri1DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>ri1ImageLocation</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ri1KernelId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ri1Name</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ri1RamdiskId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ri1RootDeviceName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ri1SriovNetSupport</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>ri1VirtualizationType</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
registerImage :: Text -> RegisterImage

-- | The architecture of the AMI.
--   
--   Default: For Amazon EBS-backed AMIs, <tt>i386</tt>. For instance
--   store-backed AMIs, the architecture specified in the manifest file.
ri1Architecture :: Lens' RegisterImage (Maybe ArchitectureValues)

-- | One or more block device mapping entries.
ri1BlockDeviceMappings :: Lens' RegisterImage [BlockDeviceMapping]

-- | A description for your AMI.
ri1Description :: Lens' RegisterImage (Maybe Text)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
ri1DryRun :: Lens' RegisterImage (Maybe Bool)

-- | The full path to your AMI manifest in Amazon S3 storage.
ri1ImageLocation :: Lens' RegisterImage (Maybe Text)

-- | The ID of the kernel.
ri1KernelId :: Lens' RegisterImage (Maybe Text)

-- | A name for your AMI.
--   
--   Constraints: 3-128 alphanumeric characters, parentheses (()), square
--   brackets ([]), spaces ( ), periods (.), slashes (/), dashes (-),
--   single quotes ('), at-signs (@), or underscores(_)
ri1Name :: Lens' RegisterImage Text

-- | The ID of the RAM disk.
ri1RamdiskId :: Lens' RegisterImage (Maybe Text)

-- | The name of the root device (for example, '/dev/sda1', or
--   '/dev/xvda').
ri1RootDeviceName :: Lens' RegisterImage (Maybe Text)

-- | Set to <tt>simple</tt> to enable enhanced networking for the AMI and
--   any instances that you launch from the AMI.
--   
--   There is no way to disable enhanced networking at this time.
--   
--   This option is supported only for HVM AMIs. Specifying this option
--   with a PV AMI can make instances launched from the AMI unreachable.
ri1SriovNetSupport :: Lens' RegisterImage (Maybe Text)

-- | The type of virtualization.
--   
--   Default: <tt>paravirtual</tt>
ri1VirtualizationType :: Lens' RegisterImage (Maybe Text)
data RegisterImageResponse

-- | <a>RegisterImageResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>rirImageId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
registerImageResponse :: RegisterImageResponse

-- | The ID of the newly registered AMI.
rirImageId :: Lens' RegisterImageResponse (Maybe Text)
instance Eq RegisterImage
instance Read RegisterImage
instance Show RegisterImage
instance Eq RegisterImageResponse
instance Ord RegisterImageResponse
instance Read RegisterImageResponse
instance Show RegisterImageResponse
instance Monoid RegisterImageResponse
instance FromXML RegisterImageResponse
instance AWSRequest RegisterImage
instance ToHeaders RegisterImage
instance ToQuery RegisterImage
instance ToPath RegisterImage


-- | Requests a reboot of one or more instances. This operation is
--   asynchronous; it only queues a request to reboot the specified
--   instances. The operation succeeds if the instances are valid and
--   belong to you. Requests to reboot terminated instances are ignored.
--   
--   If a Linux/Unix instance does not cleanly shut down within four
--   minutes, Amazon EC2 performs a hard reboot.
--   
--   For more information about troubleshooting, see <a>Getting Console
--   Output andRebooting Instances</a> in the <i>Amazon Elastic Compute
--   Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-RebootInstances.html</a>
module Network.AWS.EC2.RebootInstances
data RebootInstances

-- | <a>RebootInstances</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ri2DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>ri2InstanceIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
rebootInstances :: RebootInstances

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
ri2DryRun :: Lens' RebootInstances (Maybe Bool)

-- | One or more instance IDs.
ri2InstanceIds :: Lens' RebootInstances [Text]
data RebootInstancesResponse

-- | <a>RebootInstancesResponse</a> constructor.
rebootInstancesResponse :: RebootInstancesResponse
instance Eq RebootInstances
instance Ord RebootInstances
instance Read RebootInstances
instance Show RebootInstances
instance Eq RebootInstancesResponse
instance Ord RebootInstancesResponse
instance Read RebootInstancesResponse
instance Show RebootInstancesResponse
instance Generic RebootInstancesResponse
instance Datatype D1RebootInstancesResponse
instance Constructor C1_0RebootInstancesResponse
instance AWSRequest RebootInstances
instance ToHeaders RebootInstances
instance ToQuery RebootInstances
instance ToPath RebootInstances


-- | Purchases a Reserved Instance for use with your account. With Amazon
--   EC2 Reserved Instances, you obtain a capacity reservation for a
--   certain instance configuration over a specified period of time. You
--   pay a lower usage rate than with On-Demand instances for the time that
--   you actually use the capacity reservation.
--   
--   Use <tt>DescribeReservedInstancesOfferings</tt> to get a list of
--   Reserved Instance offerings that match your specifications. After
--   you've purchased a Reserved Instance, you can check for your new
--   Reserved Instance with <tt>DescribeReservedInstances</tt>.
--   
--   For more information, see <a>Reserved Instances</a> and <a>Reserved
--   InstanceMarketplace</a> in the <i>Amazon Elastic Compute Cloud User
--   Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-PurchaseReservedInstancesOffering.html</a>
module Network.AWS.EC2.PurchaseReservedInstancesOffering
data PurchaseReservedInstancesOffering

-- | <a>PurchaseReservedInstancesOffering</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>prioDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>prioInstanceCount</a> <tt>::</tt> <a>Int</a></li>
--   <li><a>prioLimitPrice</a> <tt>::</tt> <a>Maybe</a>
--   <a>ReservedInstanceLimitPrice</a></li>
--   <li><a>prioReservedInstancesOfferingId</a> <tt>::</tt>
--   <a>Text</a></li>
--   </ul>
purchaseReservedInstancesOffering :: Text -> Int -> PurchaseReservedInstancesOffering

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
prioDryRun :: Lens' PurchaseReservedInstancesOffering (Maybe Bool)

-- | The number of Reserved Instances to purchase.
prioInstanceCount :: Lens' PurchaseReservedInstancesOffering Int

-- | Specified for Reserved Instance Marketplace offerings to limit the
--   total order and ensure that the Reserved Instances are not purchased
--   at unexpected prices.
prioLimitPrice :: Lens' PurchaseReservedInstancesOffering (Maybe ReservedInstanceLimitPrice)

-- | The ID of the Reserved Instance offering to purchase.
prioReservedInstancesOfferingId :: Lens' PurchaseReservedInstancesOffering Text
data PurchaseReservedInstancesOfferingResponse

-- | <a>PurchaseReservedInstancesOfferingResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>priorReservedInstancesId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
purchaseReservedInstancesOfferingResponse :: PurchaseReservedInstancesOfferingResponse

-- | The IDs of the purchased Reserved Instances.
priorReservedInstancesId :: Lens' PurchaseReservedInstancesOfferingResponse (Maybe Text)
instance Eq PurchaseReservedInstancesOffering
instance Read PurchaseReservedInstancesOffering
instance Show PurchaseReservedInstancesOffering
instance Eq PurchaseReservedInstancesOfferingResponse
instance Ord PurchaseReservedInstancesOfferingResponse
instance Read PurchaseReservedInstancesOfferingResponse
instance Show PurchaseReservedInstancesOfferingResponse
instance Monoid PurchaseReservedInstancesOfferingResponse
instance FromXML PurchaseReservedInstancesOfferingResponse
instance AWSRequest PurchaseReservedInstancesOffering
instance ToHeaders PurchaseReservedInstancesOffering
instance ToQuery PurchaseReservedInstancesOffering
instance ToPath PurchaseReservedInstancesOffering


-- | Moves an Elastic IP address from the EC2-Classic platform to the
--   EC2-VPC platform. The Elastic IP address must be allocated to your
--   account, and it must not be associated with an instance. After the
--   Elastic IP address is moved, it is no longer available for use in the
--   EC2-Classic platform, unless you move it back using the
--   <tt>RestoreAddressToClassic</tt> request. You cannot move an Elastic
--   IP address that's allocated for use in the EC2-VPC platform to the
--   EC2-Classic platform.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-MoveAddressToVpc.html</a>
module Network.AWS.EC2.MoveAddressToVpc
data MoveAddressToVpc

-- | <a>MoveAddressToVpc</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>matvDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>matvPublicIp</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
moveAddressToVpc :: Text -> MoveAddressToVpc

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
matvDryRun :: Lens' MoveAddressToVpc (Maybe Bool)

-- | The Elastic IP address.
matvPublicIp :: Lens' MoveAddressToVpc Text
data MoveAddressToVpcResponse

-- | <a>MoveAddressToVpcResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>matvrAllocationId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>matvrStatus</a> <tt>::</tt> <a>Maybe</a>
--   <a>AddressStatus</a></li>
--   </ul>
moveAddressToVpcResponse :: MoveAddressToVpcResponse

-- | The allocation ID for the Elastic IP address.
matvrAllocationId :: Lens' MoveAddressToVpcResponse (Maybe Text)

-- | The status of the move of the IP address.
matvrStatus :: Lens' MoveAddressToVpcResponse (Maybe AddressStatus)
instance Eq MoveAddressToVpc
instance Ord MoveAddressToVpc
instance Read MoveAddressToVpc
instance Show MoveAddressToVpc
instance Eq MoveAddressToVpcResponse
instance Read MoveAddressToVpcResponse
instance Show MoveAddressToVpcResponse
instance FromXML MoveAddressToVpcResponse
instance AWSRequest MoveAddressToVpc
instance ToHeaders MoveAddressToVpc
instance ToQuery MoveAddressToVpc
instance ToPath MoveAddressToVpc


-- | Enables monitoring for a running instance. For more information about
--   monitoring instances, see <a>Monitoring Your Instances and Volumes</a>
--   in the <i>AmazonElastic Compute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-MonitorInstances.html</a>
module Network.AWS.EC2.MonitorInstances
data MonitorInstances

-- | <a>MonitorInstances</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>miDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>miInstanceIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
monitorInstances :: MonitorInstances

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
miDryRun :: Lens' MonitorInstances (Maybe Bool)

-- | One or more instance IDs.
miInstanceIds :: Lens' MonitorInstances [Text]
data MonitorInstancesResponse

-- | <a>MonitorInstancesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>mirInstanceMonitorings</a> <tt>::</tt>
--   [<a>InstanceMonitoring</a>]</li>
--   </ul>
monitorInstancesResponse :: MonitorInstancesResponse

-- | Monitoring information for one or more instances.
mirInstanceMonitorings :: Lens' MonitorInstancesResponse [InstanceMonitoring]
instance Eq MonitorInstances
instance Ord MonitorInstances
instance Read MonitorInstances
instance Show MonitorInstances
instance Eq MonitorInstancesResponse
instance Read MonitorInstancesResponse
instance Show MonitorInstancesResponse
instance Monoid MonitorInstancesResponse
instance Semigroup MonitorInstancesResponse
instance FromXML MonitorInstancesResponse
instance AWSRequest MonitorInstances
instance ToHeaders MonitorInstances
instance ToQuery MonitorInstances
instance ToPath MonitorInstances


-- | Modifies attributes of a specified VPC endpoint. You can modify the
--   policy associated with the endpoint, and you can add and remove route
--   tables associated with the endpoint.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ModifyVpcEndpoint.html</a>
module Network.AWS.EC2.ModifyVpcEndpoint
data ModifyVpcEndpoint

-- | <a>ModifyVpcEndpoint</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>mveAddRouteTableIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>mveDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>mvePolicyDocument</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>mveRemoveRouteTableIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>mveResetPolicy</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>mveVpcEndpointId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
modifyVpcEndpoint :: Text -> ModifyVpcEndpoint

-- | One or more route tables IDs to associate with the endpoint.
mveAddRouteTableIds :: Lens' ModifyVpcEndpoint [Text]

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
mveDryRun :: Lens' ModifyVpcEndpoint (Maybe Bool)

-- | A policy document to attach to the endpoint. The policy must be in
--   valid JSON format.
mvePolicyDocument :: Lens' ModifyVpcEndpoint (Maybe Text)

-- | One or more route table IDs to disassociate from the endpoint.
mveRemoveRouteTableIds :: Lens' ModifyVpcEndpoint [Text]

-- | Specify <tt>true</tt> to reset the policy document to the default
--   policy. The default policy allows access to the service.
mveResetPolicy :: Lens' ModifyVpcEndpoint (Maybe Bool)

-- | The ID of the endpoint.
mveVpcEndpointId :: Lens' ModifyVpcEndpoint Text
data ModifyVpcEndpointResponse

-- | <a>ModifyVpcEndpointResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>mverReturn</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   </ul>
modifyVpcEndpointResponse :: ModifyVpcEndpointResponse

-- | Returns <tt>true</tt> if the request succeeds; otherwise, it returns
--   an error.
mverReturn :: Lens' ModifyVpcEndpointResponse (Maybe Bool)
instance Eq ModifyVpcEndpoint
instance Ord ModifyVpcEndpoint
instance Read ModifyVpcEndpoint
instance Show ModifyVpcEndpoint
instance Eq ModifyVpcEndpointResponse
instance Ord ModifyVpcEndpointResponse
instance Read ModifyVpcEndpointResponse
instance Show ModifyVpcEndpointResponse
instance FromXML ModifyVpcEndpointResponse
instance AWSRequest ModifyVpcEndpoint
instance ToHeaders ModifyVpcEndpoint
instance ToQuery ModifyVpcEndpoint
instance ToPath ModifyVpcEndpoint


-- | Modifies the specified attribute of the specified VPC.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ModifyVpcAttribute.html</a>
module Network.AWS.EC2.ModifyVpcAttribute
data ModifyVpcAttribute

-- | <a>ModifyVpcAttribute</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>mvaEnableDnsHostnames</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttributeBooleanValue</a></li>
--   <li><a>mvaEnableDnsSupport</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttributeBooleanValue</a></li>
--   <li><a>mvaVpcId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
modifyVpcAttribute :: Text -> ModifyVpcAttribute

-- | Indicates whether the instances launched in the VPC get DNS hostnames.
--   If enabled, instances in the VPC get DNS hostnames; otherwise, they do
--   not.
--   
--   You can only enable DNS hostnames if you also enable DNS support.
mvaEnableDnsHostnames :: Lens' ModifyVpcAttribute (Maybe AttributeBooleanValue)

-- | Indicates whether the DNS resolution is supported for the VPC. If
--   enabled, queries to the Amazon provided DNS server at the
--   169.254.169.253 IP address, or the reserved IP address at the base of
--   the VPC network range "plus two" will succeed. If disabled, the Amazon
--   provided DNS service in the VPC that resolves public DNS hostnames to
--   IP addresses is not enabled.
mvaEnableDnsSupport :: Lens' ModifyVpcAttribute (Maybe AttributeBooleanValue)

-- | The ID of the VPC.
mvaVpcId :: Lens' ModifyVpcAttribute Text
data ModifyVpcAttributeResponse

-- | <a>ModifyVpcAttributeResponse</a> constructor.
modifyVpcAttributeResponse :: ModifyVpcAttributeResponse
instance Eq ModifyVpcAttribute
instance Read ModifyVpcAttribute
instance Show ModifyVpcAttribute
instance Eq ModifyVpcAttributeResponse
instance Ord ModifyVpcAttributeResponse
instance Read ModifyVpcAttributeResponse
instance Show ModifyVpcAttributeResponse
instance Generic ModifyVpcAttributeResponse
instance Datatype D1ModifyVpcAttributeResponse
instance Constructor C1_0ModifyVpcAttributeResponse
instance AWSRequest ModifyVpcAttribute
instance ToHeaders ModifyVpcAttribute
instance ToQuery ModifyVpcAttribute
instance ToPath ModifyVpcAttribute


-- | Modifies a volume attribute.
--   
--   By default, all I/O operations for the volume are suspended when the
--   data on the volume is determined to be potentially inconsistent, to
--   prevent undetectable, latent data corruption. The I/O access to the
--   volume can be resumed by first enabling I/O access and then checking
--   the data consistency on your volume.
--   
--   You can change the default behavior to resume I/O operations. We
--   recommend that you change this only for boot volumes or for volumes
--   that are stateless or disposable.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ModifyVolumeAttribute.html</a>
module Network.AWS.EC2.ModifyVolumeAttribute
data ModifyVolumeAttribute

-- | <a>ModifyVolumeAttribute</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>mvaAutoEnableIO</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttributeBooleanValue</a></li>
--   <li><a>mvaDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>mvaVolumeId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
modifyVolumeAttribute :: Text -> ModifyVolumeAttribute

-- | Indicates whether the volume should be auto-enabled for I/O
--   operations.
mvaAutoEnableIO :: Lens' ModifyVolumeAttribute (Maybe AttributeBooleanValue)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
mvaDryRun :: Lens' ModifyVolumeAttribute (Maybe Bool)

-- | The ID of the volume.
mvaVolumeId :: Lens' ModifyVolumeAttribute Text
data ModifyVolumeAttributeResponse

-- | <a>ModifyVolumeAttributeResponse</a> constructor.
modifyVolumeAttributeResponse :: ModifyVolumeAttributeResponse
instance Eq ModifyVolumeAttribute
instance Read ModifyVolumeAttribute
instance Show ModifyVolumeAttribute
instance Eq ModifyVolumeAttributeResponse
instance Ord ModifyVolumeAttributeResponse
instance Read ModifyVolumeAttributeResponse
instance Show ModifyVolumeAttributeResponse
instance Generic ModifyVolumeAttributeResponse
instance Datatype D1ModifyVolumeAttributeResponse
instance Constructor C1_0ModifyVolumeAttributeResponse
instance AWSRequest ModifyVolumeAttribute
instance ToHeaders ModifyVolumeAttribute
instance ToQuery ModifyVolumeAttribute
instance ToPath ModifyVolumeAttribute


-- | Modifies a subnet attribute.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ModifySubnetAttribute.html</a>
module Network.AWS.EC2.ModifySubnetAttribute
data ModifySubnetAttribute

-- | <a>ModifySubnetAttribute</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>msaMapPublicIpOnLaunch</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttributeBooleanValue</a></li>
--   <li><a>msaSubnetId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
modifySubnetAttribute :: Text -> ModifySubnetAttribute

-- | Specify <tt>true</tt> to indicate that instances launched into the
--   specified subnet should be assigned public IP address.
msaMapPublicIpOnLaunch :: Lens' ModifySubnetAttribute (Maybe AttributeBooleanValue)

-- | The ID of the subnet.
msaSubnetId :: Lens' ModifySubnetAttribute Text
data ModifySubnetAttributeResponse

-- | <a>ModifySubnetAttributeResponse</a> constructor.
modifySubnetAttributeResponse :: ModifySubnetAttributeResponse
instance Eq ModifySubnetAttribute
instance Read ModifySubnetAttribute
instance Show ModifySubnetAttribute
instance Eq ModifySubnetAttributeResponse
instance Ord ModifySubnetAttributeResponse
instance Read ModifySubnetAttributeResponse
instance Show ModifySubnetAttributeResponse
instance Generic ModifySubnetAttributeResponse
instance Datatype D1ModifySubnetAttributeResponse
instance Constructor C1_0ModifySubnetAttributeResponse
instance AWSRequest ModifySubnetAttribute
instance ToHeaders ModifySubnetAttribute
instance ToQuery ModifySubnetAttribute
instance ToPath ModifySubnetAttribute


-- | Adds or removes permission settings for the specified snapshot. You
--   may add or remove specified AWS account IDs from a snapshot's list of
--   create volume permissions, but you cannot do both in a single API
--   call. If you need to both add and remove account IDs for a snapshot,
--   you must use multiple API calls.
--   
--   For more information on modifying snapshot permissions, see <a>Sharing
--   Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
--   
--   Snapshots with AWS Marketplace product codes cannot be made public.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ModifySnapshotAttribute.html</a>
module Network.AWS.EC2.ModifySnapshotAttribute
data ModifySnapshotAttribute

-- | <a>ModifySnapshotAttribute</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>msaAttribute</a> <tt>::</tt> <a>Maybe</a>
--   <a>SnapshotAttributeName</a></li>
--   <li><a>msaCreateVolumePermission</a> <tt>::</tt> <a>Maybe</a>
--   <a>CreateVolumePermissionModifications</a></li>
--   <li><a>msaDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>msaGroupNames</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>msaOperationType</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>msaSnapshotId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>msaUserIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
modifySnapshotAttribute :: Text -> ModifySnapshotAttribute

-- | The snapshot attribute to modify.
msaAttribute :: Lens' ModifySnapshotAttribute (Maybe SnapshotAttributeName)

-- | A JSON representation of the snapshot attribute modification.
msaCreateVolumePermission :: Lens' ModifySnapshotAttribute (Maybe CreateVolumePermissionModifications)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
msaDryRun :: Lens' ModifySnapshotAttribute (Maybe Bool)

-- | The group to modify for the snapshot.
msaGroupNames :: Lens' ModifySnapshotAttribute [Text]

-- | The type of operation to perform to the attribute.
msaOperationType :: Lens' ModifySnapshotAttribute (Maybe Text)

-- | The ID of the snapshot.
msaSnapshotId :: Lens' ModifySnapshotAttribute Text

-- | The account ID to modify for the snapshot.
msaUserIds :: Lens' ModifySnapshotAttribute [Text]
data ModifySnapshotAttributeResponse

-- | <a>ModifySnapshotAttributeResponse</a> constructor.
modifySnapshotAttributeResponse :: ModifySnapshotAttributeResponse
instance Eq ModifySnapshotAttribute
instance Read ModifySnapshotAttribute
instance Show ModifySnapshotAttribute
instance Eq ModifySnapshotAttributeResponse
instance Ord ModifySnapshotAttributeResponse
instance Read ModifySnapshotAttributeResponse
instance Show ModifySnapshotAttributeResponse
instance Generic ModifySnapshotAttributeResponse
instance Datatype D1ModifySnapshotAttributeResponse
instance Constructor C1_0ModifySnapshotAttributeResponse
instance AWSRequest ModifySnapshotAttribute
instance ToHeaders ModifySnapshotAttribute
instance ToQuery ModifySnapshotAttribute
instance ToPath ModifySnapshotAttribute


-- | Modifies the Availability Zone, instance count, instance type, or
--   network platform (EC2-Classic or EC2-VPC) of your Reserved Instances.
--   The Reserved Instances to be modified must be identical, except for
--   Availability Zone, network platform, and instance type.
--   
--   For more information, see <a>Modifying Reserved Instances</a> in the
--   Amazon Elastic Compute Cloud User Guide.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ModifyReservedInstances.html</a>
module Network.AWS.EC2.ModifyReservedInstances
data ModifyReservedInstances

-- | <a>ModifyReservedInstances</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>mriClientToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>mriReservedInstancesIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>mriTargetConfigurations</a> <tt>::</tt>
--   [<a>ReservedInstancesConfiguration</a>]</li>
--   </ul>
modifyReservedInstances :: ModifyReservedInstances

-- | A unique, case-sensitive token you provide to ensure idempotency of
--   your modification request. For more information, see <a>Ensuring
--   Idempotency</a>.
mriClientToken :: Lens' ModifyReservedInstances (Maybe Text)

-- | The IDs of the Reserved Instances to modify.
mriReservedInstancesIds :: Lens' ModifyReservedInstances [Text]

-- | The configuration settings for the Reserved Instances to modify.
mriTargetConfigurations :: Lens' ModifyReservedInstances [ReservedInstancesConfiguration]
data ModifyReservedInstancesResponse

-- | <a>ModifyReservedInstancesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>mrirReservedInstancesModificationId</a> <tt>::</tt>
--   <a>Maybe</a> <a>Text</a></li>
--   </ul>
modifyReservedInstancesResponse :: ModifyReservedInstancesResponse

-- | The ID for the modification.
mrirReservedInstancesModificationId :: Lens' ModifyReservedInstancesResponse (Maybe Text)
instance Eq ModifyReservedInstances
instance Read ModifyReservedInstances
instance Show ModifyReservedInstances
instance Eq ModifyReservedInstancesResponse
instance Ord ModifyReservedInstancesResponse
instance Read ModifyReservedInstancesResponse
instance Show ModifyReservedInstancesResponse
instance Monoid ModifyReservedInstancesResponse
instance FromXML ModifyReservedInstancesResponse
instance AWSRequest ModifyReservedInstances
instance ToHeaders ModifyReservedInstances
instance ToQuery ModifyReservedInstances
instance ToPath ModifyReservedInstances


-- | Modifies the specified network interface attribute. You can specify
--   only one attribute at a time.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ModifyNetworkInterfaceAttribute.html</a>
module Network.AWS.EC2.ModifyNetworkInterfaceAttribute
data ModifyNetworkInterfaceAttribute

-- | <a>ModifyNetworkInterfaceAttribute</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>mniaAttachment</a> <tt>::</tt> <a>Maybe</a>
--   <a>NetworkInterfaceAttachmentChanges</a></li>
--   <li><a>mniaDescription</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttributeValue</a></li>
--   <li><a>mniaDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>mniaGroups</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>mniaNetworkInterfaceId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>mniaSourceDestCheck</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttributeBooleanValue</a></li>
--   </ul>
modifyNetworkInterfaceAttribute :: Text -> ModifyNetworkInterfaceAttribute

-- | Information about the interface attachment. If modifying the 'delete
--   on termination' attribute, you must specify the ID of the interface
--   attachment.
mniaAttachment :: Lens' ModifyNetworkInterfaceAttribute (Maybe NetworkInterfaceAttachmentChanges)

-- | A description for the network interface.
mniaDescription :: Lens' ModifyNetworkInterfaceAttribute (Maybe AttributeValue)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
mniaDryRun :: Lens' ModifyNetworkInterfaceAttribute (Maybe Bool)

-- | Changes the security groups for the network interface. The new set of
--   groups you specify replaces the current set. You must specify at least
--   one group, even if it's just the default security group in the VPC.
--   You must specify the ID of the security group, not the name.
mniaGroups :: Lens' ModifyNetworkInterfaceAttribute [Text]

-- | The ID of the network interface.
mniaNetworkInterfaceId :: Lens' ModifyNetworkInterfaceAttribute Text

-- | Indicates whether source/destination checking is enabled. A value of
--   <tt>true</tt> means checking is enabled, and <tt>false</tt> means
--   checking is disabled. This value must be <tt>false</tt> for a NAT
--   instance to perform NAT. For more information, see <a>NAT
--   Instances</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
mniaSourceDestCheck :: Lens' ModifyNetworkInterfaceAttribute (Maybe AttributeBooleanValue)
data ModifyNetworkInterfaceAttributeResponse

-- | <a>ModifyNetworkInterfaceAttributeResponse</a> constructor.
modifyNetworkInterfaceAttributeResponse :: ModifyNetworkInterfaceAttributeResponse
instance Eq ModifyNetworkInterfaceAttribute
instance Read ModifyNetworkInterfaceAttribute
instance Show ModifyNetworkInterfaceAttribute
instance Eq ModifyNetworkInterfaceAttributeResponse
instance Ord ModifyNetworkInterfaceAttributeResponse
instance Read ModifyNetworkInterfaceAttributeResponse
instance Show ModifyNetworkInterfaceAttributeResponse
instance Generic ModifyNetworkInterfaceAttributeResponse
instance Datatype D1ModifyNetworkInterfaceAttributeResponse
instance Constructor C1_0ModifyNetworkInterfaceAttributeResponse
instance AWSRequest ModifyNetworkInterfaceAttribute
instance ToHeaders ModifyNetworkInterfaceAttribute
instance ToQuery ModifyNetworkInterfaceAttribute
instance ToPath ModifyNetworkInterfaceAttribute


-- | Modifies the specified attribute of the specified instance. You can
--   specify only one attribute at a time.
--   
--   To modify some attributes, the instance must be stopped. For more
--   information, see <a>Modifying Attributes of a Stopped Instance</a> in
--   the <i>AmazonElastic Compute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ModifyInstanceAttribute.html</a>
module Network.AWS.EC2.ModifyInstanceAttribute
data ModifyInstanceAttribute

-- | <a>ModifyInstanceAttribute</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>mia1Attribute</a> <tt>::</tt> <a>Maybe</a>
--   <a>InstanceAttributeName</a></li>
--   <li><a>mia1BlockDeviceMappings</a> <tt>::</tt>
--   [<a>InstanceBlockDeviceMappingSpecification</a>]</li>
--   <li><a>mia1DisableApiTermination</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttributeBooleanValue</a></li>
--   <li><a>mia1DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>mia1EbsOptimized</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttributeBooleanValue</a></li>
--   <li><a>mia1Groups</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>mia1InstanceId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>mia1InstanceInitiatedShutdownBehavior</a> <tt>::</tt>
--   <a>Maybe</a> <a>AttributeValue</a></li>
--   <li><a>mia1InstanceType</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttributeValue</a></li>
--   <li><a>mia1Kernel</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttributeValue</a></li>
--   <li><a>mia1Ramdisk</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttributeValue</a></li>
--   <li><a>mia1SourceDestCheck</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttributeBooleanValue</a></li>
--   <li><a>mia1SriovNetSupport</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttributeValue</a></li>
--   <li><a>mia1UserData</a> <tt>::</tt> <a>Maybe</a>
--   <a>BlobAttributeValue</a></li>
--   <li><a>mia1Value</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
modifyInstanceAttribute :: Text -> ModifyInstanceAttribute

-- | The name of the attribute.
mia1Attribute :: Lens' ModifyInstanceAttribute (Maybe InstanceAttributeName)

-- | Modifies the <tt>DeleteOnTermination</tt> attribute for volumes that
--   are currently attached. The volume must be owned by the caller. If no
--   value is specified for <tt>DeleteOnTermination</tt>, the default is
--   <tt>true</tt> and the volume is deleted when the instance is
--   terminated.
--   
--   To add instance store volumes to an Amazon EBS-backed instance, you
--   must add them when you launch the instance. For more information, see
--   <a>Updating theBlock Device Mapping when Launching an Instance</a> in
--   the <i>Amazon Elastic ComputeCloud User Guide</i>.
mia1BlockDeviceMappings :: Lens' ModifyInstanceAttribute [InstanceBlockDeviceMappingSpecification]

-- | If the value is <tt>true</tt>, you can't terminate the instance using
--   the Amazon EC2 console, CLI, or API; otherwise, you can.
mia1DisableApiTermination :: Lens' ModifyInstanceAttribute (Maybe AttributeBooleanValue)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
mia1DryRun :: Lens' ModifyInstanceAttribute (Maybe Bool)

-- | Specifies whether the instance is optimized for EBS I/O. This
--   optimization provides dedicated throughput to Amazon EBS and an
--   optimized configuration stack to provide optimal EBS I/O performance.
--   This optimization isn't available with all instance types. Additional
--   usage charges apply when using an EBS Optimized instance.
mia1EbsOptimized :: Lens' ModifyInstanceAttribute (Maybe AttributeBooleanValue)

-- | <ul>
--   <li><i>EC2-VPC</i> Changes the security groups of the instance. You
--   must specify at least one security group, even if it's just the
--   default security group for the VPC. You must specify the security
--   group ID, not the security group name.</li>
--   </ul>
mia1Groups :: Lens' ModifyInstanceAttribute [Text]

-- | The ID of the instance.
mia1InstanceId :: Lens' ModifyInstanceAttribute Text

-- | Specifies whether an instance stops or terminates when you initiate
--   shutdown from the instance (using the operating system command for
--   system shutdown).
mia1InstanceInitiatedShutdownBehavior :: Lens' ModifyInstanceAttribute (Maybe AttributeValue)

-- | Changes the instance type to the specified value. For more
--   information, see <a>Instance Types</a>. If the instance type is not
--   valid, the error returned is <tt>InvalidInstanceAttributeValue</tt>.
mia1InstanceType :: Lens' ModifyInstanceAttribute (Maybe AttributeValue)

-- | Changes the instance's kernel to the specified value. We recommend
--   that you use PV-GRUB instead of kernels and RAM disks. For more
--   information, see <a>PV-GRUB</a>.
mia1Kernel :: Lens' ModifyInstanceAttribute (Maybe AttributeValue)

-- | Changes the instance's RAM disk to the specified value. We recommend
--   that you use PV-GRUB instead of kernels and RAM disks. For more
--   information, see <a>PV-GRUB</a>.
mia1Ramdisk :: Lens' ModifyInstanceAttribute (Maybe AttributeValue)

-- | Specifies whether source/destination checking is enabled. A value of
--   <tt>true</tt> means that checking is enabled, and <tt>false</tt> means
--   checking is disabled. This value must be <tt>false</tt> for a NAT
--   instance to perform NAT.
mia1SourceDestCheck :: Lens' ModifyInstanceAttribute (Maybe AttributeBooleanValue)

-- | Set to <tt>simple</tt> to enable enhanced networking for the instance.
--   
--   There is no way to disable enhanced networking at this time.
--   
--   This option is supported only for HVM instances. Specifying this
--   option with a PV instance can make it unreachable.
mia1SriovNetSupport :: Lens' ModifyInstanceAttribute (Maybe AttributeValue)

-- | Changes the instance's user data to the specified value.
mia1UserData :: Lens' ModifyInstanceAttribute (Maybe BlobAttributeValue)

-- | A new value for the attribute. Use only with the <tt>kernel</tt>,
--   <tt>ramdisk</tt>, <a>userData</a>, <tt>disableApiTermination</tt>, or
--   <tt>intanceInitiateShutdownBehavior</tt> attribute.
mia1Value :: Lens' ModifyInstanceAttribute (Maybe Text)
data ModifyInstanceAttributeResponse

-- | <a>ModifyInstanceAttributeResponse</a> constructor.
modifyInstanceAttributeResponse :: ModifyInstanceAttributeResponse
instance Eq ModifyInstanceAttribute
instance Read ModifyInstanceAttribute
instance Show ModifyInstanceAttribute
instance Eq ModifyInstanceAttributeResponse
instance Ord ModifyInstanceAttributeResponse
instance Read ModifyInstanceAttributeResponse
instance Show ModifyInstanceAttributeResponse
instance Generic ModifyInstanceAttributeResponse
instance Datatype D1ModifyInstanceAttributeResponse
instance Constructor C1_0ModifyInstanceAttributeResponse
instance AWSRequest ModifyInstanceAttribute
instance ToHeaders ModifyInstanceAttribute
instance ToQuery ModifyInstanceAttribute
instance ToPath ModifyInstanceAttribute


-- | Modifies the specified attribute of the specified AMI. You can specify
--   only one attribute at a time.
--   
--   AWS Marketplace product codes cannot be modified. Images with an AWS
--   Marketplace product code cannot be made public.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ModifyImageAttribute.html</a>
module Network.AWS.EC2.ModifyImageAttribute
data ModifyImageAttribute

-- | <a>ModifyImageAttribute</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>miaAttribute</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>miaDescription</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttributeValue</a></li>
--   <li><a>miaDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>miaImageId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>miaLaunchPermission</a> <tt>::</tt> <a>Maybe</a>
--   <a>LaunchPermissionModifications</a></li>
--   <li><a>miaOperationType</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>miaProductCodes</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>miaUserGroups</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>miaUserIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>miaValue</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
modifyImageAttribute :: Text -> ModifyImageAttribute

-- | The name of the attribute to modify.
miaAttribute :: Lens' ModifyImageAttribute (Maybe Text)

-- | A description for the AMI.
miaDescription :: Lens' ModifyImageAttribute (Maybe AttributeValue)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
miaDryRun :: Lens' ModifyImageAttribute (Maybe Bool)

-- | The ID of the AMI.
miaImageId :: Lens' ModifyImageAttribute Text

-- | A launch permission modification.
miaLaunchPermission :: Lens' ModifyImageAttribute (Maybe LaunchPermissionModifications)

-- | The operation type.
miaOperationType :: Lens' ModifyImageAttribute (Maybe Text)

-- | One or more product codes. After you add a product code to an AMI, it
--   can't be removed. This is only valid when modifying the
--   <tt>productCodes</tt> attribute.
miaProductCodes :: Lens' ModifyImageAttribute [Text]

-- | One or more user groups. This is only valid when modifying the
--   <a>launchPermission</a> attribute.
miaUserGroups :: Lens' ModifyImageAttribute [Text]

-- | One or more AWS account IDs. This is only valid when modifying the
--   <a>launchPermission</a> attribute.
miaUserIds :: Lens' ModifyImageAttribute [Text]

-- | The value of the attribute being modified. This is only valid when
--   modifying the <tt>description</tt> attribute.
miaValue :: Lens' ModifyImageAttribute (Maybe Text)
data ModifyImageAttributeResponse

-- | <a>ModifyImageAttributeResponse</a> constructor.
modifyImageAttributeResponse :: ModifyImageAttributeResponse
instance Eq ModifyImageAttribute
instance Read ModifyImageAttribute
instance Show ModifyImageAttribute
instance Eq ModifyImageAttributeResponse
instance Ord ModifyImageAttributeResponse
instance Read ModifyImageAttributeResponse
instance Show ModifyImageAttributeResponse
instance Generic ModifyImageAttributeResponse
instance Datatype D1ModifyImageAttributeResponse
instance Constructor C1_0ModifyImageAttributeResponse
instance AWSRequest ModifyImageAttribute
instance ToHeaders ModifyImageAttribute
instance ToQuery ModifyImageAttribute
instance ToPath ModifyImageAttribute


-- | Creates an import volume task using metadata from the specified disk
--   image. After importing the image, you then upload it using the
--   'ec2-import-volume' command in the Amazon EC2 command-line interface
--   (CLI) tools. For more information, see <a>Using the Command Line Tools
--   to Import Your Virtual Machineto Amazon EC2</a> in the <i>Amazon
--   Elastic Compute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ImportVolume.html</a>
module Network.AWS.EC2.ImportVolume
data ImportVolume

-- | <a>ImportVolume</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ivAvailabilityZone</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ivDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ivDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>ivImage</a> <tt>::</tt> <a>DiskImageDetail</a></li>
--   <li><a>ivVolume</a> <tt>::</tt> <a>VolumeDetail</a></li>
--   </ul>
importVolume :: Text -> DiskImageDetail -> VolumeDetail -> ImportVolume

-- | The Availability Zone for the resulting EBS volume.
ivAvailabilityZone :: Lens' ImportVolume Text

-- | A description of the volume.
ivDescription :: Lens' ImportVolume (Maybe Text)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
ivDryRun :: Lens' ImportVolume (Maybe Bool)

-- | The disk image.
ivImage :: Lens' ImportVolume DiskImageDetail

-- | The volume size.
ivVolume :: Lens' ImportVolume VolumeDetail
data ImportVolumeResponse

-- | <a>ImportVolumeResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ivrConversionTask</a> <tt>::</tt> <a>Maybe</a>
--   <a>ConversionTask</a></li>
--   </ul>
importVolumeResponse :: ImportVolumeResponse

-- | Information about the conversion task.
ivrConversionTask :: Lens' ImportVolumeResponse (Maybe ConversionTask)
instance Eq ImportVolume
instance Read ImportVolume
instance Show ImportVolume
instance Eq ImportVolumeResponse
instance Read ImportVolumeResponse
instance Show ImportVolumeResponse
instance FromXML ImportVolumeResponse
instance AWSRequest ImportVolume
instance ToHeaders ImportVolume
instance ToQuery ImportVolume
instance ToPath ImportVolume


-- | Imports a disk into an EBS snapshot.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ImportSnapshot.html</a>
module Network.AWS.EC2.ImportSnapshot
data ImportSnapshot

-- | <a>ImportSnapshot</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>isClientData</a> <tt>::</tt> <a>Maybe</a>
--   <a>ClientData</a></li>
--   <li><a>isClientToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>isDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>isDiskContainer</a> <tt>::</tt> <a>Maybe</a>
--   <a>SnapshotDiskContainer</a></li>
--   <li><a>isDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>isRoleName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
importSnapshot :: ImportSnapshot

-- | The client-specific data.
isClientData :: Lens' ImportSnapshot (Maybe ClientData)

-- | Token to enable idempotency for VM import requests.
isClientToken :: Lens' ImportSnapshot (Maybe Text)

-- | The description string for the import snapshot task.
isDescription :: Lens' ImportSnapshot (Maybe Text)

-- | Information about the disk container.
isDiskContainer :: Lens' ImportSnapshot (Maybe SnapshotDiskContainer)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
isDryRun :: Lens' ImportSnapshot (Maybe Bool)

-- | The name of the role to use when not using the default role,
--   <tt>vmimport</tt>.
isRoleName :: Lens' ImportSnapshot (Maybe Text)
data ImportSnapshotResponse

-- | <a>ImportSnapshotResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>isrDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>isrImportTaskId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>isrSnapshotTaskDetail</a> <tt>::</tt> <a>Maybe</a>
--   <a>SnapshotTaskDetail</a></li>
--   </ul>
importSnapshotResponse :: ImportSnapshotResponse

-- | A description of the import snapshot task.
isrDescription :: Lens' ImportSnapshotResponse (Maybe Text)

-- | The ID of the import snapshot task.
isrImportTaskId :: Lens' ImportSnapshotResponse (Maybe Text)

-- | Information about the import snapshot task.
isrSnapshotTaskDetail :: Lens' ImportSnapshotResponse (Maybe SnapshotTaskDetail)
instance Eq ImportSnapshot
instance Read ImportSnapshot
instance Show ImportSnapshot
instance Eq ImportSnapshotResponse
instance Read ImportSnapshotResponse
instance Show ImportSnapshotResponse
instance FromXML ImportSnapshotResponse
instance AWSRequest ImportSnapshot
instance ToHeaders ImportSnapshot
instance ToQuery ImportSnapshot
instance ToPath ImportSnapshot


-- | Imports the public key from an RSA key pair that you created with a
--   third-party tool. Compare this with <tt>CreateKeyPair</tt>, in which
--   AWS creates the key pair and gives the keys to you (AWS keeps a copy
--   of the public key). With ImportKeyPair, you create the key pair and
--   give AWS just the public key. The private key is never transferred
--   between you and AWS.
--   
--   For more information about key pairs, see <a>Key Pairs</a> in the
--   <i>Amazon ElasticCompute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ImportKeyPair.html</a>
module Network.AWS.EC2.ImportKeyPair
data ImportKeyPair

-- | <a>ImportKeyPair</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ikpDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>ikpKeyName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ikpPublicKeyMaterial</a> <tt>::</tt> <a>Base64</a></li>
--   </ul>
importKeyPair :: Text -> Base64 -> ImportKeyPair

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
ikpDryRun :: Lens' ImportKeyPair (Maybe Bool)

-- | A unique name for the key pair.
ikpKeyName :: Lens' ImportKeyPair Text

-- | The public key. You must base64 encode the public key material before
--   sending it to AWS.
ikpPublicKeyMaterial :: Lens' ImportKeyPair Base64
data ImportKeyPairResponse

-- | <a>ImportKeyPairResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ikprKeyFingerprint</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>ikprKeyName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
importKeyPairResponse :: ImportKeyPairResponse

-- | The MD5 public key fingerprint as specified in section 4 of RFC 4716.
ikprKeyFingerprint :: Lens' ImportKeyPairResponse (Maybe Text)

-- | The key pair name you provided.
ikprKeyName :: Lens' ImportKeyPairResponse (Maybe Text)
instance Eq ImportKeyPair
instance Read ImportKeyPair
instance Show ImportKeyPair
instance Eq ImportKeyPairResponse
instance Ord ImportKeyPairResponse
instance Read ImportKeyPairResponse
instance Show ImportKeyPairResponse
instance FromXML ImportKeyPairResponse
instance AWSRequest ImportKeyPair
instance ToHeaders ImportKeyPair
instance ToQuery ImportKeyPair
instance ToPath ImportKeyPair


-- | Creates an import instance task using metadata from the specified disk
--   image. <a>ImportInstance</a> only supports single-volume VMs. To
--   import multi-volume VMs, use <tt>ImportImage</tt>. After importing the
--   image, you then upload it using the 'ec2-import-volume' command in the
--   EC2 command line tools. For more information, see <a>Using theCommand
--   Line Tools to Import Your Virtual Machine to Amazon EC2</a> in the
--   <i>AmazonElastic Compute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ImportInstance.html</a>
module Network.AWS.EC2.ImportInstance
data ImportInstance

-- | <a>ImportInstance</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>iiDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iiDiskImages</a> <tt>::</tt> [<a>DiskImage</a>]</li>
--   <li><a>iiDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>iiLaunchSpecification</a> <tt>::</tt> <a>Maybe</a>
--   <a>ImportInstanceLaunchSpecification</a></li>
--   <li><a>iiPlatform</a> <tt>::</tt> <a>PlatformValues</a></li>
--   </ul>
importInstance :: PlatformValues -> ImportInstance

-- | A description for the instance being imported.
iiDescription :: Lens' ImportInstance (Maybe Text)

-- | The disk image.
iiDiskImages :: Lens' ImportInstance [DiskImage]

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
iiDryRun :: Lens' ImportInstance (Maybe Bool)

-- | The launch specification.
iiLaunchSpecification :: Lens' ImportInstance (Maybe ImportInstanceLaunchSpecification)

-- | The instance operating system.
iiPlatform :: Lens' ImportInstance PlatformValues
data ImportInstanceResponse

-- | <a>ImportInstanceResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>iirConversionTask</a> <tt>::</tt> <a>Maybe</a>
--   <a>ConversionTask</a></li>
--   </ul>
importInstanceResponse :: ImportInstanceResponse

-- | Information about the conversion task.
iirConversionTask :: Lens' ImportInstanceResponse (Maybe ConversionTask)
instance Eq ImportInstance
instance Read ImportInstance
instance Show ImportInstance
instance Eq ImportInstanceResponse
instance Read ImportInstanceResponse
instance Show ImportInstanceResponse
instance FromXML ImportInstanceResponse
instance AWSRequest ImportInstance
instance ToHeaders ImportInstance
instance ToQuery ImportInstance
instance ToPath ImportInstance


-- | Import single or multi-volume disk images or EBS snapshots into an
--   Amazon Machine Image (AMI).
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ImportImage.html</a>
module Network.AWS.EC2.ImportImage
data ImportImage

-- | <a>ImportImage</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ii1Architecture</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ii1ClientData</a> <tt>::</tt> <a>Maybe</a>
--   <a>ClientData</a></li>
--   <li><a>ii1ClientToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ii1Description</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ii1DiskContainers</a> <tt>::</tt>
--   [<a>ImageDiskContainer</a>]</li>
--   <li><a>ii1DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>ii1Hypervisor</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ii1LicenseType</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ii1Platform</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ii1RoleName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
importImage :: ImportImage

-- | The architecture of the virtual machine.
--   
--   Valid values: <tt>i386</tt> | <tt>x86_64</tt>
ii1Architecture :: Lens' ImportImage (Maybe Text)

-- | The client-specific data.
ii1ClientData :: Lens' ImportImage (Maybe ClientData)

-- | The token to enable idempotency for VM import requests.
ii1ClientToken :: Lens' ImportImage (Maybe Text)

-- | A description string for the import image task.
ii1Description :: Lens' ImportImage (Maybe Text)

-- | Information about the disk containers.
ii1DiskContainers :: Lens' ImportImage [ImageDiskContainer]

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
ii1DryRun :: Lens' ImportImage (Maybe Bool)

-- | The target hypervisor platform.
--   
--   Valid values: <tt>xen</tt>
ii1Hypervisor :: Lens' ImportImage (Maybe Text)

-- | The license type to be used for the Amazon Machine Image (AMI) after
--   importing.
--   
--   Note: You may only use BYOL if you have existing licenses with rights
--   to use these licenses in a third party cloud like AWS. For more
--   information, see <a>VMImport/Export Prerequisites</a> in the <i>Amazon
--   Elastic Compute Cloud User Guide</i>.
--   
--   Valid values: <tt>AWS</tt> | <tt>BYOL</tt>
ii1LicenseType :: Lens' ImportImage (Maybe Text)

-- | The operating system of the virtual machine.
--   
--   Valid values: <a>Windows</a> | <tt>Linux</tt>
ii1Platform :: Lens' ImportImage (Maybe Text)

-- | The name of the role to use when not using the default role,
--   <tt>vmimport</tt>.
ii1RoleName :: Lens' ImportImage (Maybe Text)
data ImportImageResponse

-- | <a>ImportImageResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>iirArchitecture</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iirDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iirHypervisor</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iirImageId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iirImportTaskId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iirLicenseType</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iirPlatform</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iirProgress</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iirSnapshotDetails</a> <tt>::</tt> [<a>SnapshotDetail</a>]</li>
--   <li><a>iirStatus</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>iirStatusMessage</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
importImageResponse :: ImportImageResponse

-- | The architecture of the virtual machine.
iirArchitecture :: Lens' ImportImageResponse (Maybe Text)

-- | A description of the import task.
iirDescription :: Lens' ImportImageResponse (Maybe Text)

-- | The target hypervisor of the import task.
iirHypervisor :: Lens' ImportImageResponse (Maybe Text)

-- | The ID of the Amazon Machine Image (AMI) created by the import task.
iirImageId :: Lens' ImportImageResponse (Maybe Text)

-- | The task ID of the import image task.
iirImportTaskId :: Lens' ImportImageResponse (Maybe Text)

-- | The license type of the virtual machine.
iirLicenseType :: Lens' ImportImageResponse (Maybe Text)

-- | The operating system of the virtual machine.
iirPlatform :: Lens' ImportImageResponse (Maybe Text)

-- | The progress of the task.
iirProgress :: Lens' ImportImageResponse (Maybe Text)

-- | Information about the snapshots.
iirSnapshotDetails :: Lens' ImportImageResponse [SnapshotDetail]

-- | A brief status of the task.
iirStatus :: Lens' ImportImageResponse (Maybe Text)

-- | A detailed status message of the import task.
iirStatusMessage :: Lens' ImportImageResponse (Maybe Text)
instance Eq ImportImage
instance Read ImportImage
instance Show ImportImage
instance Eq ImportImageResponse
instance Read ImportImageResponse
instance Show ImportImageResponse
instance FromXML ImportImageResponse
instance AWSRequest ImportImage
instance ToHeaders ImportImage
instance ToQuery ImportImage
instance ToPath ImportImage


-- | Retrieves the encrypted administrator password for an instance running
--   Windows.
--   
--   The Windows password is generated at boot if the <tt>EC2Config</tt>
--   service plugin, <tt>Ec2SetPassword</tt>, is enabled. This usually only
--   happens the first time an AMI is launched, and then
--   <tt>Ec2SetPassword</tt> is automatically disabled. The password is not
--   generated for rebundled AMIs unless <tt>Ec2SetPassword</tt> is enabled
--   before bundling.
--   
--   The password is encrypted using the key pair that you specified when
--   you launched the instance. You must provide the corresponding key pair
--   file.
--   
--   Password generation and encryption takes a few moments. We recommend
--   that you wait up to 15 minutes after launching an instance before
--   trying to retrieve the generated password.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-GetPasswordData.html</a>
module Network.AWS.EC2.GetPasswordData
data GetPasswordData

-- | <a>GetPasswordData</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gpdDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>gpdInstanceId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getPasswordData :: Text -> GetPasswordData

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
gpdDryRun :: Lens' GetPasswordData (Maybe Bool)

-- | The ID of the Windows instance.
gpdInstanceId :: Lens' GetPasswordData Text
data GetPasswordDataResponse

-- | <a>GetPasswordDataResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gpdrInstanceId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>gpdrPasswordData</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>gpdrTimestamp</a> <tt>::</tt> <a>UTCTime</a></li>
--   </ul>
getPasswordDataResponse :: Text -> UTCTime -> Text -> GetPasswordDataResponse

-- | The ID of the Windows instance.
gpdrInstanceId :: Lens' GetPasswordDataResponse Text

-- | The password of the instance.
gpdrPasswordData :: Lens' GetPasswordDataResponse Text

-- | The time the data was last updated.
gpdrTimestamp :: Lens' GetPasswordDataResponse UTCTime
instance Eq GetPasswordData
instance Ord GetPasswordData
instance Read GetPasswordData
instance Show GetPasswordData
instance Eq GetPasswordDataResponse
instance Ord GetPasswordDataResponse
instance Read GetPasswordDataResponse
instance Show GetPasswordDataResponse
instance FromXML GetPasswordDataResponse
instance AWSRequest GetPasswordData
instance ToHeaders GetPasswordData
instance ToQuery GetPasswordData
instance ToPath GetPasswordData


-- | Gets the console output for the specified instance.
--   
--   Instances do not have a physical monitor through which you can view
--   their console output. They also lack physical controls that allow you
--   to power up, reboot, or shut them down. To allow these actions, we
--   provide them through the Amazon EC2 API and command line interface.
--   
--   Instance console output is buffered and posted shortly after instance
--   boot, reboot, and termination. Amazon EC2 preserves the most recent 64
--   KB output which is available for at least one hour after the most
--   recent post.
--   
--   For Linux instances, the instance console output displays the exact
--   console output that would normally be displayed on a physical monitor
--   attached to a computer. This output is buffered because the instance
--   produces it and then posts it to a store where the instance's owner
--   can retrieve it.
--   
--   For Windows instances, the instance console output includes output
--   from the EC2Config service.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-GetConsoleOutput.html</a>
module Network.AWS.EC2.GetConsoleOutput
data GetConsoleOutput

-- | <a>GetConsoleOutput</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gcoDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>gcoInstanceId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
getConsoleOutput :: Text -> GetConsoleOutput

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
gcoDryRun :: Lens' GetConsoleOutput (Maybe Bool)

-- | The ID of the instance.
gcoInstanceId :: Lens' GetConsoleOutput Text
data GetConsoleOutputResponse

-- | <a>GetConsoleOutputResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gcorInstanceId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gcorOutput</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>gcorTimestamp</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   </ul>
getConsoleOutputResponse :: GetConsoleOutputResponse

-- | The ID of the instance.
gcorInstanceId :: Lens' GetConsoleOutputResponse (Maybe Text)

-- | The console output, Base64 encoded.
gcorOutput :: Lens' GetConsoleOutputResponse (Maybe Text)

-- | The time the output was last updated.
gcorTimestamp :: Lens' GetConsoleOutputResponse (Maybe UTCTime)
instance Eq GetConsoleOutput
instance Ord GetConsoleOutput
instance Read GetConsoleOutput
instance Show GetConsoleOutput
instance Eq GetConsoleOutputResponse
instance Ord GetConsoleOutputResponse
instance Read GetConsoleOutputResponse
instance Show GetConsoleOutputResponse
instance FromXML GetConsoleOutputResponse
instance AWSRequest GetConsoleOutput
instance ToHeaders GetConsoleOutput
instance ToQuery GetConsoleOutput
instance ToPath GetConsoleOutput


-- | Enables a VPC for ClassicLink. You can then link EC2-Classic instances
--   to your ClassicLink-enabled VPC to allow communication over private IP
--   addresses. You cannot enable your VPC for ClassicLink if any of your
--   VPC's route tables have existing routes for address ranges within the
--   '10.0.0.0/8' IP address range, excluding local routes for VPCs in the
--   '10.0.0.0/16' and '10.1.0.0/16' IP address ranges. For more
--   information, see <a>ClassicLink</a> in the Amazon Elastic Compute
--   Cloud User Guide.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-EnableVpcClassicLink.html</a>
module Network.AWS.EC2.EnableVpcClassicLink
data EnableVpcClassicLink

-- | <a>EnableVpcClassicLink</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>evclDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>evclVpcId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
enableVpcClassicLink :: Text -> EnableVpcClassicLink

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
evclDryRun :: Lens' EnableVpcClassicLink (Maybe Bool)

-- | The ID of the VPC.
evclVpcId :: Lens' EnableVpcClassicLink Text
data EnableVpcClassicLinkResponse

-- | <a>EnableVpcClassicLinkResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>evclrReturn</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   </ul>
enableVpcClassicLinkResponse :: EnableVpcClassicLinkResponse

-- | Returns <tt>true</tt> if the request succeeds; otherwise, it returns
--   an error.
evclrReturn :: Lens' EnableVpcClassicLinkResponse (Maybe Bool)
instance Eq EnableVpcClassicLink
instance Ord EnableVpcClassicLink
instance Read EnableVpcClassicLink
instance Show EnableVpcClassicLink
instance Eq EnableVpcClassicLinkResponse
instance Ord EnableVpcClassicLinkResponse
instance Read EnableVpcClassicLinkResponse
instance Show EnableVpcClassicLinkResponse
instance FromXML EnableVpcClassicLinkResponse
instance AWSRequest EnableVpcClassicLink
instance ToHeaders EnableVpcClassicLink
instance ToQuery EnableVpcClassicLink
instance ToPath EnableVpcClassicLink


-- | Enables I<i>O operations for a volume that had I</i>O operations
--   disabled because the data on the volume was potentially inconsistent.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-EnableVolumeIO.html</a>
module Network.AWS.EC2.EnableVolumeIO
data EnableVolumeIO

-- | <a>EnableVolumeIO</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>evioDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>evioVolumeId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
enableVolumeIO :: Text -> EnableVolumeIO

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
evioDryRun :: Lens' EnableVolumeIO (Maybe Bool)

-- | The ID of the volume.
evioVolumeId :: Lens' EnableVolumeIO Text
data EnableVolumeIOResponse

-- | <a>EnableVolumeIOResponse</a> constructor.
enableVolumeIOResponse :: EnableVolumeIOResponse
instance Eq EnableVolumeIO
instance Ord EnableVolumeIO
instance Read EnableVolumeIO
instance Show EnableVolumeIO
instance Eq EnableVolumeIOResponse
instance Ord EnableVolumeIOResponse
instance Read EnableVolumeIOResponse
instance Show EnableVolumeIOResponse
instance Generic EnableVolumeIOResponse
instance Datatype D1EnableVolumeIOResponse
instance Constructor C1_0EnableVolumeIOResponse
instance AWSRequest EnableVolumeIO
instance ToHeaders EnableVolumeIO
instance ToQuery EnableVolumeIO
instance ToPath EnableVolumeIO


-- | Enables a virtual private gateway (VGW) to propagate routes to the
--   specified route table of a VPC.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-EnableVgwRoutePropagation.html</a>
module Network.AWS.EC2.EnableVgwRoutePropagation
data EnableVgwRoutePropagation

-- | <a>EnableVgwRoutePropagation</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>evrpGatewayId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>evrpRouteTableId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
enableVgwRoutePropagation :: Text -> Text -> EnableVgwRoutePropagation

-- | The ID of the virtual private gateway.
evrpGatewayId :: Lens' EnableVgwRoutePropagation Text

-- | The ID of the route table.
evrpRouteTableId :: Lens' EnableVgwRoutePropagation Text
data EnableVgwRoutePropagationResponse

-- | <a>EnableVgwRoutePropagationResponse</a> constructor.
enableVgwRoutePropagationResponse :: EnableVgwRoutePropagationResponse
instance Eq EnableVgwRoutePropagation
instance Ord EnableVgwRoutePropagation
instance Read EnableVgwRoutePropagation
instance Show EnableVgwRoutePropagation
instance Eq EnableVgwRoutePropagationResponse
instance Ord EnableVgwRoutePropagationResponse
instance Read EnableVgwRoutePropagationResponse
instance Show EnableVgwRoutePropagationResponse
instance Generic EnableVgwRoutePropagationResponse
instance Datatype D1EnableVgwRoutePropagationResponse
instance Constructor C1_0EnableVgwRoutePropagationResponse
instance AWSRequest EnableVgwRoutePropagation
instance ToHeaders EnableVgwRoutePropagation
instance ToQuery EnableVgwRoutePropagation
instance ToPath EnableVgwRoutePropagation


-- | Disassociates a subnet from a route table.
--   
--   After you perform this action, the subnet no longer uses the routes in
--   the route table. Instead, it uses the routes in the VPC's main route
--   table. For more information about route tables, see <a>Route
--   Tables</a> in the <i>Amazon VirtualPrivate Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DisassociateRouteTable.html</a>
module Network.AWS.EC2.DisassociateRouteTable
data DisassociateRouteTable

-- | <a>DisassociateRouteTable</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>drtAssociationId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>drtDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   </ul>
disassociateRouteTable :: Text -> DisassociateRouteTable

-- | The association ID representing the current association between the
--   route table and subnet.
drtAssociationId :: Lens' DisassociateRouteTable Text

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
drtDryRun :: Lens' DisassociateRouteTable (Maybe Bool)
data DisassociateRouteTableResponse

-- | <a>DisassociateRouteTableResponse</a> constructor.
disassociateRouteTableResponse :: DisassociateRouteTableResponse
instance Eq DisassociateRouteTable
instance Ord DisassociateRouteTable
instance Read DisassociateRouteTable
instance Show DisassociateRouteTable
instance Eq DisassociateRouteTableResponse
instance Ord DisassociateRouteTableResponse
instance Read DisassociateRouteTableResponse
instance Show DisassociateRouteTableResponse
instance Generic DisassociateRouteTableResponse
instance Datatype D1DisassociateRouteTableResponse
instance Constructor C1_0DisassociateRouteTableResponse
instance AWSRequest DisassociateRouteTable
instance ToHeaders DisassociateRouteTable
instance ToQuery DisassociateRouteTable
instance ToPath DisassociateRouteTable


-- | Disassociates an Elastic IP address from the instance or network
--   interface it's associated with.
--   
--   An Elastic IP address is for use in either the EC2-Classic platform or
--   in a VPC. For more information, see <a>Elastic IP Addresses</a> in the
--   <i>Amazon ElasticCompute Cloud User Guide</i>.
--   
--   This is an idempotent operation. If you perform the operation more
--   than once, Amazon EC2 doesn't return an error.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DisassociateAddress.html</a>
module Network.AWS.EC2.DisassociateAddress
data DisassociateAddress

-- | <a>DisassociateAddress</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>da1AssociationId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>da1DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>da1PublicIp</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
disassociateAddress :: DisassociateAddress

-- | <ul>
--   <li><i>EC2-VPC</i> The association ID. Required for EC2-VPC.</li>
--   </ul>
da1AssociationId :: Lens' DisassociateAddress (Maybe Text)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
da1DryRun :: Lens' DisassociateAddress (Maybe Bool)

-- | <ul>
--   <li><i>EC2-Classic</i> The Elastic IP address. Required for
--   EC2-Classic.</li>
--   </ul>
da1PublicIp :: Lens' DisassociateAddress (Maybe Text)
data DisassociateAddressResponse

-- | <a>DisassociateAddressResponse</a> constructor.
disassociateAddressResponse :: DisassociateAddressResponse
instance Eq DisassociateAddress
instance Ord DisassociateAddress
instance Read DisassociateAddress
instance Show DisassociateAddress
instance Eq DisassociateAddressResponse
instance Ord DisassociateAddressResponse
instance Read DisassociateAddressResponse
instance Show DisassociateAddressResponse
instance Generic DisassociateAddressResponse
instance Datatype D1DisassociateAddressResponse
instance Constructor C1_0DisassociateAddressResponse
instance AWSRequest DisassociateAddress
instance ToHeaders DisassociateAddress
instance ToQuery DisassociateAddress
instance ToPath DisassociateAddress


-- | Disables ClassicLink for a VPC. You cannot disable ClassicLink for a
--   VPC that has EC2-Classic instances linked to it.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DisableVpcClassicLink.html</a>
module Network.AWS.EC2.DisableVpcClassicLink
data DisableVpcClassicLink

-- | <a>DisableVpcClassicLink</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvcl1DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dvcl1VpcId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
disableVpcClassicLink :: Text -> DisableVpcClassicLink

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dvcl1DryRun :: Lens' DisableVpcClassicLink (Maybe Bool)

-- | The ID of the VPC.
dvcl1VpcId :: Lens' DisableVpcClassicLink Text
data DisableVpcClassicLinkResponse

-- | <a>DisableVpcClassicLinkResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvclrReturn</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   </ul>
disableVpcClassicLinkResponse :: DisableVpcClassicLinkResponse

-- | Returns <tt>true</tt> if the request succeeds; otherwise, it returns
--   an error.
dvclrReturn :: Lens' DisableVpcClassicLinkResponse (Maybe Bool)
instance Eq DisableVpcClassicLink
instance Ord DisableVpcClassicLink
instance Read DisableVpcClassicLink
instance Show DisableVpcClassicLink
instance Eq DisableVpcClassicLinkResponse
instance Ord DisableVpcClassicLinkResponse
instance Read DisableVpcClassicLinkResponse
instance Show DisableVpcClassicLinkResponse
instance FromXML DisableVpcClassicLinkResponse
instance AWSRequest DisableVpcClassicLink
instance ToHeaders DisableVpcClassicLink
instance ToQuery DisableVpcClassicLink
instance ToPath DisableVpcClassicLink


-- | Disables a virtual private gateway (VGW) from propagating routes to a
--   specified route table of a VPC.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DisableVgwRoutePropagation.html</a>
module Network.AWS.EC2.DisableVgwRoutePropagation
data DisableVgwRoutePropagation

-- | <a>DisableVgwRoutePropagation</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvrpGatewayId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>dvrpRouteTableId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
disableVgwRoutePropagation :: Text -> Text -> DisableVgwRoutePropagation

-- | The ID of the virtual private gateway.
dvrpGatewayId :: Lens' DisableVgwRoutePropagation Text

-- | The ID of the route table.
dvrpRouteTableId :: Lens' DisableVgwRoutePropagation Text
data DisableVgwRoutePropagationResponse

-- | <a>DisableVgwRoutePropagationResponse</a> constructor.
disableVgwRoutePropagationResponse :: DisableVgwRoutePropagationResponse
instance Eq DisableVgwRoutePropagation
instance Ord DisableVgwRoutePropagation
instance Read DisableVgwRoutePropagation
instance Show DisableVgwRoutePropagation
instance Eq DisableVgwRoutePropagationResponse
instance Ord DisableVgwRoutePropagationResponse
instance Read DisableVgwRoutePropagationResponse
instance Show DisableVgwRoutePropagationResponse
instance Generic DisableVgwRoutePropagationResponse
instance Datatype D1DisableVgwRoutePropagationResponse
instance Constructor C1_0DisableVgwRoutePropagationResponse
instance AWSRequest DisableVgwRoutePropagation
instance ToHeaders DisableVgwRoutePropagation
instance ToQuery DisableVgwRoutePropagation
instance ToPath DisableVgwRoutePropagation


-- | Detaches a virtual private gateway from a VPC. You do this if you're
--   planning to turn off the VPC and not use it anymore. You can confirm a
--   virtual private gateway has been completely detached from a VPC by
--   describing the virtual private gateway (any attachments to the virtual
--   private gateway are also described).
--   
--   You must wait for the attachment's state to switch to
--   <tt>detached</tt> before you can delete the VPC or attach a different
--   VPC to the virtual private gateway.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DetachVpnGateway.html</a>
module Network.AWS.EC2.DetachVpnGateway
data DetachVpnGateway

-- | <a>DetachVpnGateway</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvg1DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dvg1VpcId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>dvg1VpnGatewayId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
detachVpnGateway :: Text -> Text -> DetachVpnGateway

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dvg1DryRun :: Lens' DetachVpnGateway (Maybe Bool)

-- | The ID of the VPC.
dvg1VpcId :: Lens' DetachVpnGateway Text

-- | The ID of the virtual private gateway.
dvg1VpnGatewayId :: Lens' DetachVpnGateway Text
data DetachVpnGatewayResponse

-- | <a>DetachVpnGatewayResponse</a> constructor.
detachVpnGatewayResponse :: DetachVpnGatewayResponse
instance Eq DetachVpnGateway
instance Ord DetachVpnGateway
instance Read DetachVpnGateway
instance Show DetachVpnGateway
instance Eq DetachVpnGatewayResponse
instance Ord DetachVpnGatewayResponse
instance Read DetachVpnGatewayResponse
instance Show DetachVpnGatewayResponse
instance Generic DetachVpnGatewayResponse
instance Datatype D1DetachVpnGatewayResponse
instance Constructor C1_0DetachVpnGatewayResponse
instance AWSRequest DetachVpnGateway
instance ToHeaders DetachVpnGateway
instance ToQuery DetachVpnGateway
instance ToPath DetachVpnGateway


-- | Detaches an EBS volume from an instance. Make sure to unmount any file
--   systems on the device within your operating system before detaching
--   the volume. Failure to do so results in the volume being stuck in a
--   busy state while detaching.
--   
--   If an Amazon EBS volume is the root device of an instance, it can't be
--   detached while the instance is running. To detach the root volume,
--   stop the instance first.
--   
--   When a volume with an AWS Marketplace product code is detached from an
--   instance, the product code is no longer associated with the instance.
--   
--   For more information, see <a>Detaching an Amazon EBS Volume</a> in the
--   <i>AmazonElastic Compute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DetachVolume.html</a>
module Network.AWS.EC2.DetachVolume
data DetachVolume

-- | <a>DetachVolume</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvDevice</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dvDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dvForce</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dvInstanceId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dvVolumeId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
detachVolume :: Text -> DetachVolume

-- | The device name.
dvDevice :: Lens' DetachVolume (Maybe Text)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dvDryRun :: Lens' DetachVolume (Maybe Bool)

-- | Forces detachment if the previous detachment attempt did not occur
--   cleanly (for example, logging into an instance, unmounting the volume,
--   and detaching normally). This option can lead to data loss or a
--   corrupted file system. Use this option only as a last resort to detach
--   a volume from a failed instance. The instance won't have an
--   opportunity to flush file system caches or file system metadata. If
--   you use this option, you must perform file system check and repair
--   procedures.
dvForce :: Lens' DetachVolume (Maybe Bool)

-- | The ID of the instance.
dvInstanceId :: Lens' DetachVolume (Maybe Text)

-- | The ID of the volume.
dvVolumeId :: Lens' DetachVolume Text
data DetachVolumeResponse

-- | <a>DetachVolumeResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvrAttachTime</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>dvrDeleteOnTermination</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>dvrDevice</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dvrInstanceId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dvrState</a> <tt>::</tt> <a>Maybe</a>
--   <a>VolumeAttachmentState</a></li>
--   <li><a>dvrVolumeId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
detachVolumeResponse :: DetachVolumeResponse

-- | The time stamp when the attachment initiated.
dvrAttachTime :: Lens' DetachVolumeResponse (Maybe UTCTime)

-- | Indicates whether the EBS volume is deleted on instance termination.
dvrDeleteOnTermination :: Lens' DetachVolumeResponse (Maybe Bool)

-- | The device name.
dvrDevice :: Lens' DetachVolumeResponse (Maybe Text)

-- | The ID of the instance.
dvrInstanceId :: Lens' DetachVolumeResponse (Maybe Text)

-- | The attachment state of the volume.
dvrState :: Lens' DetachVolumeResponse (Maybe VolumeAttachmentState)

-- | The ID of the volume.
dvrVolumeId :: Lens' DetachVolumeResponse (Maybe Text)
instance Eq DetachVolume
instance Ord DetachVolume
instance Read DetachVolume
instance Show DetachVolume
instance Eq DetachVolumeResponse
instance Read DetachVolumeResponse
instance Show DetachVolumeResponse
instance FromXML DetachVolumeResponse
instance AWSRequest DetachVolume
instance ToHeaders DetachVolume
instance ToQuery DetachVolume
instance ToPath DetachVolume


-- | Detaches a network interface from an instance.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DetachNetworkInterface.html</a>
module Network.AWS.EC2.DetachNetworkInterface
data DetachNetworkInterface

-- | <a>DetachNetworkInterface</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dniAttachmentId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>dniDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dniForce</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   </ul>
detachNetworkInterface :: Text -> DetachNetworkInterface

-- | The ID of the attachment.
dniAttachmentId :: Lens' DetachNetworkInterface Text

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dniDryRun :: Lens' DetachNetworkInterface (Maybe Bool)

-- | Specifies whether to force a detachment.
dniForce :: Lens' DetachNetworkInterface (Maybe Bool)
data DetachNetworkInterfaceResponse

-- | <a>DetachNetworkInterfaceResponse</a> constructor.
detachNetworkInterfaceResponse :: DetachNetworkInterfaceResponse
instance Eq DetachNetworkInterface
instance Ord DetachNetworkInterface
instance Read DetachNetworkInterface
instance Show DetachNetworkInterface
instance Eq DetachNetworkInterfaceResponse
instance Ord DetachNetworkInterfaceResponse
instance Read DetachNetworkInterfaceResponse
instance Show DetachNetworkInterfaceResponse
instance Generic DetachNetworkInterfaceResponse
instance Datatype D1DetachNetworkInterfaceResponse
instance Constructor C1_0DetachNetworkInterfaceResponse
instance AWSRequest DetachNetworkInterface
instance ToHeaders DetachNetworkInterface
instance ToQuery DetachNetworkInterface
instance ToPath DetachNetworkInterface


-- | Detaches an Internet gateway from a VPC, disabling connectivity
--   between the Internet and the VPC. The VPC must not contain any running
--   instances with Elastic IP addresses.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DetachInternetGateway.html</a>
module Network.AWS.EC2.DetachInternetGateway
data DetachInternetGateway

-- | <a>DetachInternetGateway</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>digDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>digInternetGatewayId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>digVpcId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
detachInternetGateway :: Text -> Text -> DetachInternetGateway

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
digDryRun :: Lens' DetachInternetGateway (Maybe Bool)

-- | The ID of the Internet gateway.
digInternetGatewayId :: Lens' DetachInternetGateway Text

-- | The ID of the VPC.
digVpcId :: Lens' DetachInternetGateway Text
data DetachInternetGatewayResponse

-- | <a>DetachInternetGatewayResponse</a> constructor.
detachInternetGatewayResponse :: DetachInternetGatewayResponse
instance Eq DetachInternetGateway
instance Ord DetachInternetGateway
instance Read DetachInternetGateway
instance Show DetachInternetGateway
instance Eq DetachInternetGatewayResponse
instance Ord DetachInternetGatewayResponse
instance Read DetachInternetGatewayResponse
instance Show DetachInternetGatewayResponse
instance Generic DetachInternetGatewayResponse
instance Datatype D1DetachInternetGatewayResponse
instance Constructor C1_0DetachInternetGatewayResponse
instance AWSRequest DetachInternetGateway
instance ToHeaders DetachInternetGateway
instance ToQuery DetachInternetGateway
instance ToPath DetachInternetGateway


-- | Unlinks (detaches) a linked EC2-Classic instance from a VPC. After the
--   instance has been unlinked, the VPC security groups are no longer
--   associated with it. An instance is automatically unlinked from a VPC
--   when it's stopped.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DetachClassicLinkVpc.html</a>
module Network.AWS.EC2.DetachClassicLinkVpc
data DetachClassicLinkVpc

-- | <a>DetachClassicLinkVpc</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dclvDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dclvInstanceId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>dclvVpcId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
detachClassicLinkVpc :: Text -> Text -> DetachClassicLinkVpc

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dclvDryRun :: Lens' DetachClassicLinkVpc (Maybe Bool)

-- | The ID of the instance to unlink from the VPC.
dclvInstanceId :: Lens' DetachClassicLinkVpc Text

-- | The ID of the VPC to which the instance is linked.
dclvVpcId :: Lens' DetachClassicLinkVpc Text
data DetachClassicLinkVpcResponse

-- | <a>DetachClassicLinkVpcResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dclvrReturn</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   </ul>
detachClassicLinkVpcResponse :: DetachClassicLinkVpcResponse

-- | Returns <tt>true</tt> if the request succeeds; otherwise, it returns
--   an error.
dclvrReturn :: Lens' DetachClassicLinkVpcResponse (Maybe Bool)
instance Eq DetachClassicLinkVpc
instance Ord DetachClassicLinkVpc
instance Read DetachClassicLinkVpc
instance Show DetachClassicLinkVpc
instance Eq DetachClassicLinkVpcResponse
instance Ord DetachClassicLinkVpcResponse
instance Read DetachClassicLinkVpcResponse
instance Show DetachClassicLinkVpcResponse
instance FromXML DetachClassicLinkVpcResponse
instance AWSRequest DetachClassicLinkVpc
instance ToHeaders DetachClassicLinkVpc
instance ToQuery DetachClassicLinkVpc
instance ToPath DetachClassicLinkVpc


-- | Describes one or more of your virtual private gateways.
--   
--   For more information about virtual private gateways, see <a>Adding an
--   IPsecHardware VPN to Your VPC</a> in the <i>Amazon Virtual Private
--   Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeVpnGateways.html</a>
module Network.AWS.EC2.DescribeVpnGateways
data DescribeVpnGateways

-- | <a>DescribeVpnGateways</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvg2DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dvg2Filters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>dvg2VpnGatewayIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeVpnGateways :: DescribeVpnGateways

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dvg2DryRun :: Lens' DescribeVpnGateways (Maybe Bool)

-- | One or more filters.
--   
--   'attachment.state' - The current state of the attachment between the
--   gateway and the VPC (<tt>attaching</tt> | <tt>attached</tt> |
--   <tt>detaching</tt> | <tt>detached</tt>).
--   
--   'attachment.vpc-id' - The ID of an attached VPC.
--   
--   'availability-zone' - The Availability Zone for the virtual private
--   gateway.
--   
--   <tt>state</tt> - The state of the virtual private gateway
--   (<tt>pending</tt> | <tt>available</tt> | <tt>deleting</tt> |
--   <tt>deleted</tt>).
--   
--   <a>tag</a>:<i>key</i>=<i>value</i> - The key/value combination of a
--   tag assigned to the resource.
--   
--   'tag-key' - The key of a tag assigned to the resource. This filter is
--   independent of the 'tag-value' filter. For example, if you use both
--   the filter "tag-key=Purpose" and the filter "tag-value=X", you get any
--   resources assigned both the tag key Purpose (regardless of what the
--   tag's value is), and the tag value X (regardless of what the tag's key
--   is). If you want to list only resources where Purpose is X, see the
--   <a>tag</a>:<i>key</i>=<i>value</i> filter.
--   
--   'tag-value' - The value of a tag assigned to the resource. This filter
--   is independent of the 'tag-key' filter.
--   
--   'type' - The type of virtual private gateway. Currently the only
--   supported type is 'ipsec.1'.
--   
--   'vpn-gateway-id' - The ID of the virtual private gateway.
dvg2Filters :: Lens' DescribeVpnGateways [Filter]

-- | One or more virtual private gateway IDs.
--   
--   Default: Describes all your virtual private gateways.
dvg2VpnGatewayIds :: Lens' DescribeVpnGateways [Text]
data DescribeVpnGatewaysResponse

-- | <a>DescribeVpnGatewaysResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvgrVpnGateways</a> <tt>::</tt> [<a>VpnGateway</a>]</li>
--   </ul>
describeVpnGatewaysResponse :: DescribeVpnGatewaysResponse

-- | Information about one or more virtual private gateways.
dvgrVpnGateways :: Lens' DescribeVpnGatewaysResponse [VpnGateway]
instance Eq DescribeVpnGateways
instance Read DescribeVpnGateways
instance Show DescribeVpnGateways
instance Eq DescribeVpnGatewaysResponse
instance Read DescribeVpnGatewaysResponse
instance Show DescribeVpnGatewaysResponse
instance Monoid DescribeVpnGatewaysResponse
instance Semigroup DescribeVpnGatewaysResponse
instance FromXML DescribeVpnGatewaysResponse
instance AWSRequest DescribeVpnGateways
instance ToHeaders DescribeVpnGateways
instance ToQuery DescribeVpnGateways
instance ToPath DescribeVpnGateways


-- | Describes one or more of your VPN connections.
--   
--   For more information about VPN connections, see <a>Adding a Hardware
--   VirtualPrivate Gateway to Your VPC</a> in the <i>Amazon Virtual
--   Private Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeVpnConnections.html</a>
module Network.AWS.EC2.DescribeVpnConnections
data DescribeVpnConnections

-- | <a>DescribeVpnConnections</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvc1DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dvc1Filters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>dvc1VpnConnectionIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeVpnConnections :: DescribeVpnConnections

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dvc1DryRun :: Lens' DescribeVpnConnections (Maybe Bool)

-- | One or more filters.
--   
--   'customer-gateway-configuration' - The configuration information for
--   the customer gateway.
--   
--   'customer-gateway-id' - The ID of a customer gateway associated with
--   the VPN connection.
--   
--   <tt>state</tt> - The state of the VPN connection (<tt>pending</tt> |
--   <tt>available</tt> | <tt>deleting</tt> | <tt>deleted</tt>).
--   
--   'option.static-routes-only' - Indicates whether the connection has
--   static routes only. Used for devices that do not support Border
--   Gateway Protocol (BGP).
--   
--   'route.destination-cidr-block' - The destination CIDR block. This
--   corresponds to the subnet used in a customer data center.
--   
--   'bgp-asn' - The BGP Autonomous System Number (ASN) associated with a
--   BGP device.
--   
--   <a>tag</a>:<i>key</i>=<i>value</i> - The key/value combination of a
--   tag assigned to the resource.
--   
--   'tag-key' - The key of a tag assigned to the resource. This filter is
--   independent of the 'tag-value' filter. For example, if you use both
--   the filter "tag-key=Purpose" and the filter "tag-value=X", you get any
--   resources assigned both the tag key Purpose (regardless of what the
--   tag's value is), and the tag value X (regardless of what the tag's key
--   is). If you want to list only resources where Purpose is X, see the
--   <a>tag</a>:<i>key</i>=<i>value</i> filter.
--   
--   'tag-value' - The value of a tag assigned to the resource. This filter
--   is independent of the 'tag-key' filter.
--   
--   'type' - The type of VPN connection. Currently the only supported type
--   is 'ipsec.1'.
--   
--   'vpn-connection-id' - The ID of the VPN connection.
--   
--   'vpn-gateway-id' - The ID of a virtual private gateway associated with
--   the VPN connection.
dvc1Filters :: Lens' DescribeVpnConnections [Filter]

-- | One or more VPN connection IDs.
--   
--   Default: Describes your VPN connections.
dvc1VpnConnectionIds :: Lens' DescribeVpnConnections [Text]
data DescribeVpnConnectionsResponse

-- | <a>DescribeVpnConnectionsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvcrVpnConnections</a> <tt>::</tt> [<a>VpnConnection</a>]</li>
--   </ul>
describeVpnConnectionsResponse :: DescribeVpnConnectionsResponse

-- | Information about one or more VPN connections.
dvcrVpnConnections :: Lens' DescribeVpnConnectionsResponse [VpnConnection]
instance Eq DescribeVpnConnections
instance Read DescribeVpnConnections
instance Show DescribeVpnConnections
instance Eq DescribeVpnConnectionsResponse
instance Read DescribeVpnConnectionsResponse
instance Show DescribeVpnConnectionsResponse
instance Monoid DescribeVpnConnectionsResponse
instance Semigroup DescribeVpnConnectionsResponse
instance FromXML DescribeVpnConnectionsResponse
instance AWSRequest DescribeVpnConnections
instance ToHeaders DescribeVpnConnections
instance ToQuery DescribeVpnConnections
instance ToPath DescribeVpnConnections


-- | Describes one or more of your VPCs.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeVpcs.html</a>
module Network.AWS.EC2.DescribeVpcs
data DescribeVpcs

-- | <a>DescribeVpcs</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dv1DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dv1Filters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>dv1VpcIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeVpcs :: DescribeVpcs

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dv1DryRun :: Lens' DescribeVpcs (Maybe Bool)

-- | One or more filters.
--   
--   <tt>cidr</tt> - The CIDR block of the VPC. The CIDR block you specify
--   must exactly match the VPC's CIDR block for information to be returned
--   for the VPC. Must contain the slash followed by one or two digits (for
--   example, '/28').
--   
--   'dhcp-options-id' - The ID of a set of DHCP options.
--   
--   <tt>isDefault</tt> - Indicates whether the VPC is the default VPC.
--   
--   <tt>state</tt> - The state of the VPC (<tt>pending</tt> |
--   <tt>available</tt>).
--   
--   <a>tag</a>:<i>key</i>=<i>value</i> - The key/value combination of a
--   tag assigned to the resource.
--   
--   'tag-key' - The key of a tag assigned to the resource. This filter is
--   independent of the 'tag-value' filter. For example, if you use both
--   the filter "tag-key=Purpose" and the filter "tag-value=X", you get any
--   resources assigned both the tag key Purpose (regardless of what the
--   tag's value is), and the tag value X (regardless of what the tag's key
--   is). If you want to list only resources where Purpose is X, see the
--   <a>tag</a>:<i>key</i>=<i>value</i> filter.
--   
--   'tag-value' - The value of a tag assigned to the resource. This filter
--   is independent of the 'tag-key' filter.
--   
--   'vpc-id' - The ID of the VPC.
dv1Filters :: Lens' DescribeVpcs [Filter]

-- | One or more VPC IDs.
--   
--   Default: Describes all your VPCs.
dv1VpcIds :: Lens' DescribeVpcs [Text]
data DescribeVpcsResponse

-- | <a>DescribeVpcsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvrVpcs</a> <tt>::</tt> [<a>Vpc</a>]</li>
--   </ul>
describeVpcsResponse :: DescribeVpcsResponse

-- | Information about one or more VPCs.
dvrVpcs :: Lens' DescribeVpcsResponse [Vpc]
instance Eq DescribeVpcs
instance Read DescribeVpcs
instance Show DescribeVpcs
instance Eq DescribeVpcsResponse
instance Read DescribeVpcsResponse
instance Show DescribeVpcsResponse
instance Monoid DescribeVpcsResponse
instance Semigroup DescribeVpcsResponse
instance FromXML DescribeVpcsResponse
instance AWSRequest DescribeVpcs
instance ToHeaders DescribeVpcs
instance ToQuery DescribeVpcs
instance ToPath DescribeVpcs


-- | Describes one or more of your VPC peering connections.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeVpcPeeringConnections.html</a>
module Network.AWS.EC2.DescribeVpcPeeringConnections
data DescribeVpcPeeringConnections

-- | <a>DescribeVpcPeeringConnections</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvpc1DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dvpc1Filters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>dvpc1VpcPeeringConnectionIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeVpcPeeringConnections :: DescribeVpcPeeringConnections

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dvpc1DryRun :: Lens' DescribeVpcPeeringConnections (Maybe Bool)

-- | One or more filters.
--   
--   'accepter-vpc-info.cidr-block' - The CIDR block of the peer VPC.
--   
--   'accepter-vpc-info.owner-id' - The AWS account ID of the owner of the
--   peer VPC.
--   
--   'accepter-vpc-info.vpc-id' - The ID of the peer VPC.
--   
--   'expiration-time' - The expiration date and time for the VPC peering
--   connection.
--   
--   'requester-vpc-info.cidr-block' - The CIDR block of the requester's
--   VPC.
--   
--   'requester-vpc-info.owner-id' - The AWS account ID of the owner of the
--   requester VPC.
--   
--   'requester-vpc-info.vpc-id' - The ID of the requester VPC.
--   
--   'status-code' - The status of the VPC peering connection
--   ('pending-acceptance' | <tt>failed</tt> | <tt>expired</tt> |
--   <tt>provisioning</tt> | <tt>active</tt> | <tt>deleted</tt> |
--   <tt>rejected</tt>).
--   
--   'status-message' - A message that provides more information about the
--   status of the VPC peering connection, if applicable.
--   
--   <a>tag</a>:<i>key</i>=<i>value</i> - The key/value combination of a
--   tag assigned to the resource.
--   
--   'tag-key' - The key of a tag assigned to the resource. This filter is
--   independent of the 'tag-value' filter. For example, if you use both
--   the filter "tag-key=Purpose" and the filter "tag-value=X", you get any
--   resources assigned both the tag key Purpose (regardless of what the
--   tag's value is), and the tag value X (regardless of what the tag's key
--   is). If you want to list only resources where Purpose is X, see the
--   <a>tag</a>:<i>key</i>=<i>value</i> filter.
--   
--   'tag-value' - The value of a tag assigned to the resource. This filter
--   is independent of the 'tag-key' filter.
--   
--   'vpc-peering-connection-id' - The ID of the VPC peering connection.
dvpc1Filters :: Lens' DescribeVpcPeeringConnections [Filter]

-- | One or more VPC peering connection IDs.
--   
--   Default: Describes all your VPC peering connections.
dvpc1VpcPeeringConnectionIds :: Lens' DescribeVpcPeeringConnections [Text]
data DescribeVpcPeeringConnectionsResponse

-- | <a>DescribeVpcPeeringConnectionsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvpcrVpcPeeringConnections</a> <tt>::</tt>
--   [<a>VpcPeeringConnection</a>]</li>
--   </ul>
describeVpcPeeringConnectionsResponse :: DescribeVpcPeeringConnectionsResponse

-- | Information about the VPC peering connections.
dvpcrVpcPeeringConnections :: Lens' DescribeVpcPeeringConnectionsResponse [VpcPeeringConnection]
instance Eq DescribeVpcPeeringConnections
instance Read DescribeVpcPeeringConnections
instance Show DescribeVpcPeeringConnections
instance Eq DescribeVpcPeeringConnectionsResponse
instance Read DescribeVpcPeeringConnectionsResponse
instance Show DescribeVpcPeeringConnectionsResponse
instance Monoid DescribeVpcPeeringConnectionsResponse
instance Semigroup DescribeVpcPeeringConnectionsResponse
instance FromXML DescribeVpcPeeringConnectionsResponse
instance AWSRequest DescribeVpcPeeringConnections
instance ToHeaders DescribeVpcPeeringConnections
instance ToQuery DescribeVpcPeeringConnections
instance ToPath DescribeVpcPeeringConnections


-- | Describes one or more of your VPC endpoints.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeVpcEndpoints.html</a>
module Network.AWS.EC2.DescribeVpcEndpoints
data DescribeVpcEndpoints

-- | <a>DescribeVpcEndpoints</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dve1DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dve1Filters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>dve1MaxResults</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>dve1NextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dve1VpcEndpointIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeVpcEndpoints :: DescribeVpcEndpoints

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dve1DryRun :: Lens' DescribeVpcEndpoints (Maybe Bool)

-- | One or more filters.
--   
--   'service-name': The name of the AWS service.
--   
--   'vpc-id': The ID of the VPC in which the endpoint resides.
--   
--   'vpc-endpoint-id': The ID of the endpoint.
--   
--   'vpc-endpoint-state': The state of the endpoint. (<tt>pending</tt> |
--   <tt>available</tt> | <tt>deleting</tt> | <tt>deleted</tt>)
dve1Filters :: Lens' DescribeVpcEndpoints [Filter]

-- | The maximum number of items to return for this request. The request
--   returns a token that you can specify in a subsequent call to get the
--   next set of results.
--   
--   Constraint: If the value is greater than 1000, we return only 1000
--   items.
dve1MaxResults :: Lens' DescribeVpcEndpoints (Maybe Int)

-- | The token for the next set of items to return. (You received this
--   token from a prior call.)
dve1NextToken :: Lens' DescribeVpcEndpoints (Maybe Text)

-- | One or more endpoint IDs.
dve1VpcEndpointIds :: Lens' DescribeVpcEndpoints [Text]
data DescribeVpcEndpointsResponse

-- | <a>DescribeVpcEndpointsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dverNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dverVpcEndpoints</a> <tt>::</tt> [<a>VpcEndpoint</a>]</li>
--   </ul>
describeVpcEndpointsResponse :: DescribeVpcEndpointsResponse

-- | The token to use when requesting the next set of items. If there are
--   no additional items to return, the string is empty.
dverNextToken :: Lens' DescribeVpcEndpointsResponse (Maybe Text)

-- | Information about the endpoints.
dverVpcEndpoints :: Lens' DescribeVpcEndpointsResponse [VpcEndpoint]
instance Eq DescribeVpcEndpoints
instance Read DescribeVpcEndpoints
instance Show DescribeVpcEndpoints
instance Eq DescribeVpcEndpointsResponse
instance Read DescribeVpcEndpointsResponse
instance Show DescribeVpcEndpointsResponse
instance FromXML DescribeVpcEndpointsResponse
instance AWSRequest DescribeVpcEndpoints
instance ToHeaders DescribeVpcEndpoints
instance ToQuery DescribeVpcEndpoints
instance ToPath DescribeVpcEndpoints


-- | Describes all supported AWS services that can be specified when
--   creating a VPC endpoint.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeVpcEndpointServices.html</a>
module Network.AWS.EC2.DescribeVpcEndpointServices
data DescribeVpcEndpointServices

-- | <a>DescribeVpcEndpointServices</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvesDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dvesMaxResults</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>dvesNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
describeVpcEndpointServices :: DescribeVpcEndpointServices

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dvesDryRun :: Lens' DescribeVpcEndpointServices (Maybe Bool)

-- | The maximum number of items to return for this request. The request
--   returns a token that you can specify in a subsequent call to get the
--   next set of results.
--   
--   Constraint: If the value is greater than 1000, we return only 1000
--   items.
dvesMaxResults :: Lens' DescribeVpcEndpointServices (Maybe Int)

-- | The token for the next set of items to return. (You received this
--   token from a prior call.)
dvesNextToken :: Lens' DescribeVpcEndpointServices (Maybe Text)
data DescribeVpcEndpointServicesResponse

-- | <a>DescribeVpcEndpointServicesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvesrNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dvesrServiceNames</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeVpcEndpointServicesResponse :: DescribeVpcEndpointServicesResponse

-- | The token to use when requesting the next set of items. If there are
--   no additional items to return, the string is empty.
dvesrNextToken :: Lens' DescribeVpcEndpointServicesResponse (Maybe Text)

-- | A list of supported AWS services.
dvesrServiceNames :: Lens' DescribeVpcEndpointServicesResponse [Text]
instance Eq DescribeVpcEndpointServices
instance Ord DescribeVpcEndpointServices
instance Read DescribeVpcEndpointServices
instance Show DescribeVpcEndpointServices
instance Eq DescribeVpcEndpointServicesResponse
instance Ord DescribeVpcEndpointServicesResponse
instance Read DescribeVpcEndpointServicesResponse
instance Show DescribeVpcEndpointServicesResponse
instance FromXML DescribeVpcEndpointServicesResponse
instance AWSRequest DescribeVpcEndpointServices
instance ToHeaders DescribeVpcEndpointServices
instance ToQuery DescribeVpcEndpointServices
instance ToPath DescribeVpcEndpointServices


-- | Describes the ClassicLink status of one or more VPCs.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeVpcClassicLink.html</a>
module Network.AWS.EC2.DescribeVpcClassicLink
data DescribeVpcClassicLink

-- | <a>DescribeVpcClassicLink</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvclDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dvclFilters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>dvclVpcIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeVpcClassicLink :: DescribeVpcClassicLink

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dvclDryRun :: Lens' DescribeVpcClassicLink (Maybe Bool)

-- | One or more filters.
--   
--   'is-classic-link-enabled' - Whether the VPC is enabled for ClassicLink
--   (<tt>true</tt> | <tt>false</tt>).
--   
--   <a>tag</a>:<i>key</i>=<i>value</i> - The key/value combination of a
--   tag assigned to the resource.
--   
--   'tag-key' - The key of a tag assigned to the resource. This filter is
--   independent of the 'tag-value' filter. For example, if you use both
--   the filter "tag-key=Purpose" and the filter "tag-value=X", you get any
--   resources assigned both the tag key Purpose (regardless of what the
--   tag's value is), and the tag value X (regardless of what the tag's key
--   is). If you want to list only resources where Purpose is X, see the
--   <a>tag</a>:<i>key</i>=<i>value</i> filter.
--   
--   'tag-value' - The value of a tag assigned to the resource. This filter
--   is independent of the 'tag-key' filter.
dvclFilters :: Lens' DescribeVpcClassicLink [Filter]

-- | One or more VPCs for which you want to describe the ClassicLink
--   status.
dvclVpcIds :: Lens' DescribeVpcClassicLink [Text]
data DescribeVpcClassicLinkResponse

-- | <a>DescribeVpcClassicLinkResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvclrVpcs</a> <tt>::</tt> [<a>VpcClassicLink</a>]</li>
--   </ul>
describeVpcClassicLinkResponse :: DescribeVpcClassicLinkResponse

-- | The ClassicLink status of one or more VPCs.
dvclrVpcs :: Lens' DescribeVpcClassicLinkResponse [VpcClassicLink]
instance Eq DescribeVpcClassicLink
instance Read DescribeVpcClassicLink
instance Show DescribeVpcClassicLink
instance Eq DescribeVpcClassicLinkResponse
instance Read DescribeVpcClassicLinkResponse
instance Show DescribeVpcClassicLinkResponse
instance Monoid DescribeVpcClassicLinkResponse
instance Semigroup DescribeVpcClassicLinkResponse
instance FromXML DescribeVpcClassicLinkResponse
instance AWSRequest DescribeVpcClassicLink
instance ToHeaders DescribeVpcClassicLink
instance ToQuery DescribeVpcClassicLink
instance ToPath DescribeVpcClassicLink


-- | Describes the specified attribute of the specified VPC. You can
--   specify only one attribute at a time.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeVpcAttribute.html</a>
module Network.AWS.EC2.DescribeVpcAttribute
data DescribeVpcAttribute

-- | <a>DescribeVpcAttribute</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dva1Attribute</a> <tt>::</tt> <a>Maybe</a>
--   <a>VpcAttributeName</a></li>
--   <li><a>dva1DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dva1VpcId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
describeVpcAttribute :: Text -> DescribeVpcAttribute

-- | The VPC attribute.
dva1Attribute :: Lens' DescribeVpcAttribute (Maybe VpcAttributeName)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dva1DryRun :: Lens' DescribeVpcAttribute (Maybe Bool)

-- | The ID of the VPC.
dva1VpcId :: Lens' DescribeVpcAttribute Text
data DescribeVpcAttributeResponse

-- | <a>DescribeVpcAttributeResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvarEnableDnsHostnames</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttributeBooleanValue</a></li>
--   <li><a>dvarEnableDnsSupport</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttributeBooleanValue</a></li>
--   <li><a>dvarVpcId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
describeVpcAttributeResponse :: DescribeVpcAttributeResponse

-- | Indicates whether the instances launched in the VPC get DNS hostnames.
--   If this attribute is <tt>true</tt>, instances in the VPC get DNS
--   hostnames; otherwise, they do not.
dvarEnableDnsHostnames :: Lens' DescribeVpcAttributeResponse (Maybe AttributeBooleanValue)

-- | Indicates whether DNS resolution is enabled for the VPC. If this
--   attribute is <tt>true</tt>, the Amazon DNS server resolves DNS
--   hostnames for your instances to their corresponding IP addresses;
--   otherwise, it does not.
dvarEnableDnsSupport :: Lens' DescribeVpcAttributeResponse (Maybe AttributeBooleanValue)

-- | The ID of the VPC.
dvarVpcId :: Lens' DescribeVpcAttributeResponse (Maybe Text)
instance Eq DescribeVpcAttribute
instance Read DescribeVpcAttribute
instance Show DescribeVpcAttribute
instance Eq DescribeVpcAttributeResponse
instance Read DescribeVpcAttributeResponse
instance Show DescribeVpcAttributeResponse
instance FromXML DescribeVpcAttributeResponse
instance AWSRequest DescribeVpcAttribute
instance ToHeaders DescribeVpcAttribute
instance ToQuery DescribeVpcAttribute
instance ToPath DescribeVpcAttribute


-- | Describes the specified EBS volumes.
--   
--   If you are describing a long list of volumes, you can paginate the
--   output to make the list more manageable. The <tt>MaxResults</tt>
--   parameter sets the maximum number of results returned in a single
--   page. If the list of results exceeds your <tt>MaxResults</tt> value,
--   then that number of results is returned along with a
--   <tt>NextToken</tt> value that can be passed to a subsequent
--   <a>DescribeVolumes</a> request to retrieve the remaining results.
--   
--   For more information about EBS volumes, see <a>Amazon EBS Volumes</a>
--   in the <i>AmazonElastic Compute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeVolumes.html</a>
module Network.AWS.EC2.DescribeVolumes
data DescribeVolumes

-- | <a>DescribeVolumes</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dv2DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dv2Filters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>dv2MaxResults</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>dv2NextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dv2VolumeIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeVolumes :: DescribeVolumes

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dv2DryRun :: Lens' DescribeVolumes (Maybe Bool)

-- | One or more filters.
--   
--   'attachment.attach-time' - The time stamp when the attachment
--   initiated.
--   
--   'attachment.delete-on-termination' - Whether the volume is deleted on
--   instance termination.
--   
--   'attachment.device' - The device name that is exposed to the instance
--   (for example, '/dev/sda1').
--   
--   'attachment.instance-id' - The ID of the instance the volume is
--   attached to.
--   
--   'attachment.status' - The attachment state (<tt>attaching</tt> |
--   <tt>attached</tt> | <tt>detaching</tt> | <tt>detached</tt>).
--   
--   'availability-zone' - The Availability Zone in which the volume was
--   created.
--   
--   'create-time' - The time stamp when the volume was created.
--   
--   <tt>encrypted</tt> - The encryption status of the volume.
--   
--   <tt>size</tt> - The size of the volume, in GiB.
--   
--   'snapshot-id' - The snapshot from which the volume was created.
--   
--   <tt>status</tt> - The status of the volume (<tt>creating</tt> |
--   <tt>available</tt> | 'in-use' | <tt>deleting</tt> | <tt>deleted</tt> |
--   <tt>error</tt>).
--   
--   <a>tag</a>:<i>key</i>=<i>value</i> - The key/value combination of a
--   tag assigned to the resource.
--   
--   'tag-key' - The key of a tag assigned to the resource. This filter is
--   independent of the 'tag-value' filter. For example, if you use both
--   the filter "tag-key=Purpose" and the filter "tag-value=X", you get any
--   resources assigned both the tag key Purpose (regardless of what the
--   tag's value is), and the tag value X (regardless of what the tag's key
--   is). If you want to list only resources where Purpose is X, see the
--   <a>tag</a>:<i>key</i>=<i>value</i> filter.
--   
--   'tag-value' - The value of a tag assigned to the resource. This filter
--   is independent of the 'tag-key' filter.
--   
--   'volume-id' - The volume ID.
--   
--   'volume-type' - The Amazon EBS volume type. This can be <tt>gp2</tt>
--   for General Purpose (SSD) volumes, <tt>io1</tt> for Provisioned IOPS
--   (SSD) volumes, or <tt>standard</tt> for Magnetic volumes.
dv2Filters :: Lens' DescribeVolumes [Filter]

-- | The maximum number of volume results returned by
--   <a>DescribeVolumes</a> in paginated output. When this parameter is
--   used, <a>DescribeVolumes</a> only returns <tt>MaxResults</tt> results
--   in a single page along with a <tt>NextToken</tt> response element. The
--   remaining results of the initial request can be seen by sending
--   another <a>DescribeVolumes</a> request with the returned
--   <tt>NextToken</tt> value. This value can be between 5 and 1000; if
--   <tt>MaxResults</tt> is given a value larger than 1000, only 1000
--   results are returned. If this parameter is not used, then
--   <a>DescribeVolumes</a> returns all results. You cannot specify this
--   parameter and the volume IDs parameter in the same request.
dv2MaxResults :: Lens' DescribeVolumes (Maybe Int)

-- | The <tt>NextToken</tt> value returned from a previous paginated
--   <a>DescribeVolumes</a> request where <tt>MaxResults</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>NextToken</tt> value. This value is <a>null</a> when there are no
--   more results to return.
dv2NextToken :: Lens' DescribeVolumes (Maybe Text)

-- | One or more volume IDs.
dv2VolumeIds :: Lens' DescribeVolumes [Text]
data DescribeVolumesResponse

-- | <a>DescribeVolumesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvrNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dvrVolumes</a> <tt>::</tt> [<a>Volume</a>]</li>
--   </ul>
describeVolumesResponse :: DescribeVolumesResponse

-- | The <tt>NextToken</tt> value to include in a future
--   <a>DescribeVolumes</a> request. When the results of a
--   <a>DescribeVolumes</a> request exceed <tt>MaxResults</tt>, this value
--   can be used to retrieve the next page of results. This value is
--   <a>null</a> when there are no more results to return.
dvrNextToken :: Lens' DescribeVolumesResponse (Maybe Text)

-- | Information about the volumes.
dvrVolumes :: Lens' DescribeVolumesResponse [Volume]
instance Eq DescribeVolumes
instance Read DescribeVolumes
instance Show DescribeVolumes
instance Eq DescribeVolumesResponse
instance Read DescribeVolumesResponse
instance Show DescribeVolumesResponse
instance FromXML DescribeVolumesResponse
instance AWSRequest DescribeVolumes
instance ToHeaders DescribeVolumes
instance ToQuery DescribeVolumes
instance ToPath DescribeVolumes


-- | Describes the status of the specified volumes. Volume status provides
--   the result of the checks performed on your volumes to determine events
--   that can impair the performance of your volumes. The performance of a
--   volume can be affected if an issue occurs on the volume's underlying
--   host. If the volume's underlying host experiences a power outage or
--   system issue, after the system is restored, there could be data
--   inconsistencies on the volume. Volume events notify you if this
--   occurs. Volume actions notify you if any action needs to be taken in
--   response to the event.
--   
--   The <a>DescribeVolumeStatus</a> operation provides the following
--   information about the specified volumes:
--   
--   <i>Status</i>: Reflects the current status of the volume. The possible
--   values are <tt>ok</tt> , <tt>impaired</tt> , <tt>warning</tt>, or
--   'insufficient-data'. If all checks pass, the overall status of the
--   volume is <tt>ok</tt>. If the check fails, the overall status is
--   <tt>impaired</tt> . If the status is 'insufficient-data', then the
--   checks may still be taking place on your volume at the time. We
--   recommend that you retry the request. For more information on volume
--   status, see <a>Monitoring the Status of YourVolumes</a>.
--   
--   <i>Events</i>: Reflect the cause of a volume status and may require
--   you to take action. For example, if your volume returns an
--   <tt>impaired</tt> status, then the volume event might be
--   'potential-data-inconsistency'. This means that your volume has been
--   affected by an issue with the underlying host, has all I/O operations
--   disabled, and may have inconsistent data.
--   
--   <i>Actions</i>: Reflect the actions you may have to take in response
--   to an event. For example, if the status of the volume is
--   <tt>impaired</tt> and the volume event shows
--   'potential-data-inconsistency', then the action shows
--   'enable-volume-io'. This means that you may want to enable the I/O
--   operations for the volume by calling the <tt>EnableVolumeIO</tt>
--   action and then check the volume for data consistency.
--   
--   Volume status is based on the volume status checks, and does not
--   reflect the volume state. Therefore, volume status does not indicate
--   volumes in the <tt>error</tt> state (for example, when a volume is
--   incapable of accepting I/O.)
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeVolumeStatus.html</a>
module Network.AWS.EC2.DescribeVolumeStatus
data DescribeVolumeStatus

-- | <a>DescribeVolumeStatus</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvsDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dvsFilters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>dvsMaxResults</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>dvsNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dvsVolumeIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeVolumeStatus :: DescribeVolumeStatus

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dvsDryRun :: Lens' DescribeVolumeStatus (Maybe Bool)

-- | One or more filters.
--   
--   'action.code' - The action code for the event (for example,
--   'enable-volume-io').
--   
--   'action.description' - A description of the action.
--   
--   'action.event-id' - The event ID associated with the action.
--   
--   'availability-zone' - The Availability Zone of the instance.
--   
--   'event.description' - A description of the event.
--   
--   'event.event-id' - The event ID.
--   
--   'event.event-type' - The event type (for 'io-enabled': <tt>passed</tt>
--   | <tt>failed</tt>; for 'io-performance': 'io-performance:degraded' |
--   'io-performance:severely-degraded' | 'io-performance:stalled').
--   
--   'event.not-after' - The latest end time for the event.
--   
--   'event.not-before' - The earliest start time for the event.
--   
--   'volume-status.details-name' - The cause for 'volume-status.status'
--   ('io-enabled' | 'io-performance').
--   
--   'volume-status.details-status' - The status of
--   'volume-status.details-name' (for 'io-enabled': <tt>passed</tt> |
--   <tt>failed</tt>; for 'io-performance': <tt>normal</tt> |
--   <tt>degraded</tt> | 'severely-degraded' | <tt>stalled</tt>).
--   
--   'volume-status.status' - The status of the volume (<tt>ok</tt> |
--   <tt>impaired</tt> | <tt>warning</tt> | 'insufficient-data').
dvsFilters :: Lens' DescribeVolumeStatus [Filter]

-- | The maximum number of volume results returned by
--   <a>DescribeVolumeStatus</a> in paginated output. When this parameter
--   is used, the request only returns <tt>MaxResults</tt> results in a
--   single page along with a <tt>NextToken</tt> response element. The
--   remaining results of the initial request can be seen by sending
--   another request with the returned <tt>NextToken</tt> value. This value
--   can be between 5 and 1000; if <tt>MaxResults</tt> is given a value
--   larger than 1000, only 1000 results are returned. If this parameter is
--   not used, then <a>DescribeVolumeStatus</a> returns all results. You
--   cannot specify this parameter and the volume IDs parameter in the same
--   request.
dvsMaxResults :: Lens' DescribeVolumeStatus (Maybe Int)

-- | The <tt>NextToken</tt> value to include in a future
--   <a>DescribeVolumeStatus</a> request. When the results of the request
--   exceed <tt>MaxResults</tt>, this value can be used to retrieve the
--   next page of results. This value is <a>null</a> when there are no more
--   results to return.
dvsNextToken :: Lens' DescribeVolumeStatus (Maybe Text)

-- | One or more volume IDs.
--   
--   Default: Describes all your volumes.
dvsVolumeIds :: Lens' DescribeVolumeStatus [Text]
data DescribeVolumeStatusResponse

-- | <a>DescribeVolumeStatusResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvsrNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dvsrVolumeStatuses</a> <tt>::</tt>
--   [<a>VolumeStatusItem</a>]</li>
--   </ul>
describeVolumeStatusResponse :: DescribeVolumeStatusResponse

-- | The token to use to retrieve the next page of results. This value is
--   <a>null</a> when there are no more results to return.
dvsrNextToken :: Lens' DescribeVolumeStatusResponse (Maybe Text)

-- | A list of volumes.
dvsrVolumeStatuses :: Lens' DescribeVolumeStatusResponse [VolumeStatusItem]
instance Eq DescribeVolumeStatus
instance Read DescribeVolumeStatus
instance Show DescribeVolumeStatus
instance Eq DescribeVolumeStatusResponse
instance Read DescribeVolumeStatusResponse
instance Show DescribeVolumeStatusResponse
instance AWSPager DescribeVolumeStatus
instance FromXML DescribeVolumeStatusResponse
instance AWSRequest DescribeVolumeStatus
instance ToHeaders DescribeVolumeStatus
instance ToQuery DescribeVolumeStatus
instance ToPath DescribeVolumeStatus


-- | Describes the specified attribute of the specified volume. You can
--   specify only one attribute at a time.
--   
--   For more information about EBS volumes, see <a>Amazon EBS Volumes</a>
--   in the <i>AmazonElastic Compute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeVolumeAttribute.html</a>
module Network.AWS.EC2.DescribeVolumeAttribute
data DescribeVolumeAttribute

-- | <a>DescribeVolumeAttribute</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvaAttribute</a> <tt>::</tt> <a>Maybe</a>
--   <a>VolumeAttributeName</a></li>
--   <li><a>dvaDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dvaVolumeId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
describeVolumeAttribute :: Text -> DescribeVolumeAttribute

-- | The instance attribute.
dvaAttribute :: Lens' DescribeVolumeAttribute (Maybe VolumeAttributeName)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dvaDryRun :: Lens' DescribeVolumeAttribute (Maybe Bool)

-- | The ID of the volume.
dvaVolumeId :: Lens' DescribeVolumeAttribute Text
data DescribeVolumeAttributeResponse

-- | <a>DescribeVolumeAttributeResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvarAutoEnableIO</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttributeBooleanValue</a></li>
--   <li><a>dvarProductCodes</a> <tt>::</tt> [<a>ProductCode</a>]</li>
--   <li><a>dvarVolumeId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
describeVolumeAttributeResponse :: DescribeVolumeAttributeResponse

-- | The state of <tt>autoEnableIO</tt> attribute.
dvarAutoEnableIO :: Lens' DescribeVolumeAttributeResponse (Maybe AttributeBooleanValue)

-- | A list of product codes.
dvarProductCodes :: Lens' DescribeVolumeAttributeResponse [ProductCode]

-- | The ID of the volume.
dvarVolumeId :: Lens' DescribeVolumeAttributeResponse (Maybe Text)
instance Eq DescribeVolumeAttribute
instance Read DescribeVolumeAttribute
instance Show DescribeVolumeAttribute
instance Eq DescribeVolumeAttributeResponse
instance Read DescribeVolumeAttributeResponse
instance Show DescribeVolumeAttributeResponse
instance FromXML DescribeVolumeAttributeResponse
instance AWSRequest DescribeVolumeAttribute
instance ToHeaders DescribeVolumeAttribute
instance ToQuery DescribeVolumeAttribute
instance ToPath DescribeVolumeAttribute


-- | Describes one or more of the tags for your EC2 resources.
--   
--   For more information about tags, see <a>Tagging Your Resources</a> in
--   the <i>AmazonElastic Compute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeTags.html</a>
module Network.AWS.EC2.DescribeTags
data DescribeTags

-- | <a>DescribeTags</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dtDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dtFilters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>dtMaxResults</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>dtNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
describeTags :: DescribeTags

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dtDryRun :: Lens' DescribeTags (Maybe Bool)

-- | One or more filters.
--   
--   <tt>key</tt> - The tag key.
--   
--   'resource-id' - The resource ID.
--   
--   'resource-type' - The resource type ('customer-gateway' |
--   'dhcp-options' | <a>image</a> | 'instance' | 'internet-gateway' |
--   'network-acl' | 'network-interface' | 'reserved-instances' |
--   'route-table' | 'security-group' | <a>snapshot</a> |
--   'spot-instances-request' | <a>subnet</a> | <a>volume</a> | <a>vpc</a>
--   | 'vpn-connection' | 'vpn-gateway').
--   
--   <tt>value</tt> - The tag value.
dtFilters :: Lens' DescribeTags [Filter]

-- | The maximum number of results to return for the request in a single
--   page. The remaining results of the initial request can be seen by
--   sending another request with the returned <tt>NextToken</tt> value.
--   This value can be between 5 and 1000; if <tt>MaxResults</tt> is given
--   a value larger than 1000, only 1000 results are returned.
dtMaxResults :: Lens' DescribeTags (Maybe Int)

-- | The token to retrieve the next page of results.
dtNextToken :: Lens' DescribeTags (Maybe Text)
data DescribeTagsResponse

-- | <a>DescribeTagsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dtrNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dtrTags</a> <tt>::</tt> [<a>TagDescription</a>]</li>
--   </ul>
describeTagsResponse :: DescribeTagsResponse

-- | The token to use to retrieve the next page of results. This value is
--   <a>null</a> when there are no more results to return..
dtrNextToken :: Lens' DescribeTagsResponse (Maybe Text)

-- | A list of tags.
dtrTags :: Lens' DescribeTagsResponse [TagDescription]
instance Eq DescribeTags
instance Read DescribeTags
instance Show DescribeTags
instance Eq DescribeTagsResponse
instance Read DescribeTagsResponse
instance Show DescribeTagsResponse
instance AWSPager DescribeTags
instance FromXML DescribeTagsResponse
instance AWSRequest DescribeTags
instance ToHeaders DescribeTags
instance ToQuery DescribeTags
instance ToPath DescribeTags


-- | Describes one or more of your subnets.
--   
--   For more information about subnets, see <a>Your VPC and Subnets</a> in
--   the <i>AmazonVirtual Private Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeSubnets.html</a>
module Network.AWS.EC2.DescribeSubnets
data DescribeSubnets

-- | <a>DescribeSubnets</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dsFilters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>dsSubnetIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeSubnets :: DescribeSubnets

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dsDryRun :: Lens' DescribeSubnets (Maybe Bool)

-- | One or more filters.
--   
--   <a>availabilityZone</a> - The Availability Zone for the subnet. You
--   can also use 'availability-zone' as the filter name.
--   
--   'available-ip-address-count' - The number of IP addresses in the
--   subnet that are available.
--   
--   <tt>cidrBlock</tt> - The CIDR block of the subnet. The CIDR block you
--   specify must exactly match the subnet's CIDR block for information to
--   be returned for the subnet. You can also use <tt>cidr</tt> or
--   'cidr-block' as the filter names.
--   
--   <tt>defaultForAz</tt> - Indicates whether this is the default subnet
--   for the Availability Zone. You can also use 'default-for-az' as the
--   filter name.
--   
--   <tt>state</tt> - The state of the subnet (<tt>pending</tt> |
--   <tt>available</tt>).
--   
--   'subnet-id' - The ID of the subnet.
--   
--   <a>tag</a>:<i>key</i>=<i>value</i> - The key/value combination of a
--   tag assigned to the resource.
--   
--   'tag-key' - The key of a tag assigned to the resource. This filter is
--   independent of the 'tag-value' filter. For example, if you use both
--   the filter "tag-key=Purpose" and the filter "tag-value=X", you get any
--   resources assigned both the tag key Purpose (regardless of what the
--   tag's value is), and the tag value X (regardless of what the tag's key
--   is). If you want to list only resources where Purpose is X, see the
--   <a>tag</a>:<i>key</i>=<i>value</i> filter.
--   
--   'tag-value' - The value of a tag assigned to the resource. This filter
--   is independent of the 'tag-key' filter.
--   
--   'vpc-id' - The ID of the VPC for the subnet.
dsFilters :: Lens' DescribeSubnets [Filter]

-- | One or more subnet IDs.
--   
--   Default: Describes all your subnets.
dsSubnetIds :: Lens' DescribeSubnets [Text]
data DescribeSubnetsResponse

-- | <a>DescribeSubnetsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsrSubnets</a> <tt>::</tt> [<a>Subnet</a>]</li>
--   </ul>
describeSubnetsResponse :: DescribeSubnetsResponse

-- | Information about one or more subnets.
dsrSubnets :: Lens' DescribeSubnetsResponse [Subnet]
instance Eq DescribeSubnets
instance Read DescribeSubnets
instance Show DescribeSubnets
instance Eq DescribeSubnetsResponse
instance Read DescribeSubnetsResponse
instance Show DescribeSubnetsResponse
instance Monoid DescribeSubnetsResponse
instance Semigroup DescribeSubnetsResponse
instance FromXML DescribeSubnetsResponse
instance AWSRequest DescribeSubnets
instance ToHeaders DescribeSubnets
instance ToQuery DescribeSubnets
instance ToPath DescribeSubnets


-- | Describes the Spot Price history. The prices returned are listed in
--   chronological order, from the oldest to the most recent, for up to the
--   past 90 days. For more information, see <a>Spot Instance Pricing
--   History</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
--   
--   When you specify a start and end time, this operation returns the
--   prices of the instance types within the time range that you specified
--   and the time when the price changed. The price is valid within the
--   time period that you specified; the response merely indicates the last
--   time that the price changed.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeSpotPriceHistory.html</a>
module Network.AWS.EC2.DescribeSpotPriceHistory
data DescribeSpotPriceHistory

-- | <a>DescribeSpotPriceHistory</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsphAvailabilityZone</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>dsphDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dsphEndTime</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>dsphFilters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>dsphInstanceTypes</a> <tt>::</tt> [<a>InstanceType</a>]</li>
--   <li><a>dsphMaxResults</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>dsphNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dsphProductDescriptions</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>dsphStartTime</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   </ul>
describeSpotPriceHistory :: DescribeSpotPriceHistory

-- | Filters the results by the specified Availability Zone.
dsphAvailabilityZone :: Lens' DescribeSpotPriceHistory (Maybe Text)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dsphDryRun :: Lens' DescribeSpotPriceHistory (Maybe Bool)

-- | The date and time, up to the current date, from which to stop
--   retrieving the price history data, in UTC format (for example,
--   <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
dsphEndTime :: Lens' DescribeSpotPriceHistory (Maybe UTCTime)

-- | One or more filters.
--   
--   'availability-zone' - The Availability Zone for which prices should be
--   returned.
--   
--   'instance-type' - The type of instance (for example, 'm1.small').
--   
--   'product-description' - The product description for the Spot Price
--   ('Linux/UNIX' | 'SUSE Linux' | <a>Windows</a> | 'Linux/UNIX (Amazon
--   VPC)' | 'SUSE Linux (Amazon VPC)' | 'Windows (Amazon VPC)').
--   
--   'spot-price' - The Spot Price. The value must match exactly (or use
--   wildcards; greater than or less than comparison is not supported).
--   
--   <tt>timestamp</tt> - The timestamp of the Spot Price history, in UTC
--   format (for example,
--   <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). You
--   can use wildcards (* and ?). Greater than or less than comparison is
--   not supported.
dsphFilters :: Lens' DescribeSpotPriceHistory [Filter]

-- | Filters the results by the specified instance types.
dsphInstanceTypes :: Lens' DescribeSpotPriceHistory [InstanceType]

-- | The maximum number of results to return in a single call. Specify a
--   value between 1 and 1000. The default value is 1000. To retrieve the
--   remaining results, make another call with the returned
--   <tt>NextToken</tt> value.
dsphMaxResults :: Lens' DescribeSpotPriceHistory (Maybe Int)

-- | The token for the next set of results.
dsphNextToken :: Lens' DescribeSpotPriceHistory (Maybe Text)

-- | Filters the results by the specified basic product descriptions.
dsphProductDescriptions :: Lens' DescribeSpotPriceHistory [Text]

-- | The date and time, up to the past 90 days, from which to start
--   retrieving the price history data, in UTC format (for example,
--   <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
dsphStartTime :: Lens' DescribeSpotPriceHistory (Maybe UTCTime)
data DescribeSpotPriceHistoryResponse

-- | <a>DescribeSpotPriceHistoryResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsphrNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dsphrSpotPriceHistory</a> <tt>::</tt> [<a>SpotPrice</a>]</li>
--   </ul>
describeSpotPriceHistoryResponse :: DescribeSpotPriceHistoryResponse

-- | The token required to retrieve the next set of results. This value is
--   <a>null</a> when there are no more results to return.
dsphrNextToken :: Lens' DescribeSpotPriceHistoryResponse (Maybe Text)

-- | The historical Spot Prices.
dsphrSpotPriceHistory :: Lens' DescribeSpotPriceHistoryResponse [SpotPrice]
instance Eq DescribeSpotPriceHistory
instance Read DescribeSpotPriceHistory
instance Show DescribeSpotPriceHistory
instance Eq DescribeSpotPriceHistoryResponse
instance Read DescribeSpotPriceHistoryResponse
instance Show DescribeSpotPriceHistoryResponse
instance AWSPager DescribeSpotPriceHistory
instance FromXML DescribeSpotPriceHistoryResponse
instance AWSRequest DescribeSpotPriceHistory
instance ToHeaders DescribeSpotPriceHistory
instance ToQuery DescribeSpotPriceHistory
instance ToPath DescribeSpotPriceHistory


-- | Describes the Spot Instance requests that belong to your account. Spot
--   Instances are instances that Amazon EC2 launches when the bid price
--   that you specify exceeds the current Spot Price. Amazon EC2
--   periodically sets the Spot Price based on available Spot Instance
--   capacity and current Spot Instance requests. For more information, see
--   <a>Spot Instance Requests</a> in the <i>AmazonElastic Compute Cloud
--   User Guide</i>.
--   
--   You can use <a>DescribeSpotInstanceRequests</a> to find a running Spot
--   Instance by examining the response. If the status of the Spot Instance
--   is <tt>fulfilled</tt>, the instance ID appears in the response and
--   contains the identifier of the instance. Alternatively, you can use
--   <tt>DescribeInstances</tt> with a filter to look for instances where
--   the instance lifecycle is <tt>spot</tt>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeSpotInstanceRequests.html</a>
module Network.AWS.EC2.DescribeSpotInstanceRequests
data DescribeSpotInstanceRequests

-- | <a>DescribeSpotInstanceRequests</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsirDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dsirFilters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>dsirSpotInstanceRequestIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeSpotInstanceRequests :: DescribeSpotInstanceRequests

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dsirDryRun :: Lens' DescribeSpotInstanceRequests (Maybe Bool)

-- | One or more filters.
--   
--   'availability-zone-group' - The Availability Zone group.
--   
--   'create-time' - The time stamp when the Spot Instance request was
--   created.
--   
--   'fault-code' - The fault code related to the request.
--   
--   'fault-message' - The fault message related to the request.
--   
--   'instance-id' - The ID of the instance that fulfilled the request.
--   
--   'launch-group' - The Spot Instance launch group.
--   
--   'launch.block-device-mapping.delete-on-termination' - Indicates
--   whether the Amazon EBS volume is deleted on instance termination.
--   
--   'launch.block-device-mapping.device-name' - The device name for the
--   Amazon EBS volume (for example, '/dev/sdh').
--   
--   'launch.block-device-mapping.snapshot-id' - The ID of the snapshot
--   used for the Amazon EBS volume.
--   
--   'launch.block-device-mapping.volume-size' - The size of the Amazon EBS
--   volume, in GiB.
--   
--   'launch.block-device-mapping.volume-type' - The type of the Amazon EBS
--   volume (<tt>gp2</tt> | <tt>standard</tt> | <tt>io1</tt>).
--   
--   'launch.group-id' - The security group for the instance.
--   
--   'launch.image-id' - The ID of the AMI.
--   
--   'launch.instance-type' - The type of instance (for example,
--   'm1.small').
--   
--   'launch.kernel-id' - The kernel ID.
--   
--   'launch.key-name' - The name of the key pair the instance launched
--   with.
--   
--   'launch.monitoring-enabled' - Whether monitoring is enabled for the
--   Spot Instance.
--   
--   'launch.ramdisk-id' - The RAM disk ID.
--   
--   'network-interface.network-interface-id' - The ID of the network
--   interface.
--   
--   'network-interface.device-index' - The index of the device for the
--   network interface attachment on the instance.
--   
--   'network-interface.subnet-id' - The ID of the subnet for the instance.
--   
--   'network-interface.description' - A description of the network
--   interface.
--   
--   'network-interface.private-ip-address' - The primary private IP
--   address of the network interface.
--   
--   'network-interface.delete-on-termination' - Indicates whether the
--   network interface is deleted when the instance is terminated.
--   
--   'network-interface.group-id' - The ID of the security group associated
--   with the network interface.
--   
--   'network-interface.group-name' - The name of the security group
--   associated with the network interface.
--   
--   'network-interface.addresses.primary' - Indicates whether the IP
--   address is the primary private IP address.
--   
--   'product-description' - The product description associated with the
--   instance ('Linux/UNIX' | <a>Windows</a>).
--   
--   'spot-instance-request-id' - The Spot Instance request ID.
--   
--   'spot-price' - The maximum hourly price for any Spot Instance launched
--   to fulfill the request.
--   
--   <tt>state</tt> - The state of the Spot Instance request (<tt>open</tt>
--   | <tt>active</tt> | <tt>closed</tt> | <tt>cancelled</tt> |
--   <tt>failed</tt>). Spot bid status information can help you track your
--   Amazon EC2 Spot Instance requests. For more information, see <a>Spot
--   Bid Status</a> in the Amazon Elastic Compute Cloud User Guide.
--   
--   'status-code' - The short code describing the most recent evaluation
--   of your Spot Instance request.
--   
--   'status-message' - The message explaining the status of the Spot
--   Instance request.
--   
--   <a>tag</a>:<i>key</i>=<i>value</i> - The key/value combination of a
--   tag assigned to the resource.
--   
--   'tag-key' - The key of a tag assigned to the resource. This filter is
--   independent of the 'tag-value' filter. For example, if you use both
--   the filter "tag-key=Purpose" and the filter "tag-value=X", you get any
--   resources assigned both the tag key Purpose (regardless of what the
--   tag's value is), and the tag value X (regardless of what the tag's key
--   is). If you want to list only resources where Purpose is X, see the
--   <a>tag</a>:<i>key</i>=<i>value</i> filter.
--   
--   'tag-value' - The value of a tag assigned to the resource. This filter
--   is independent of the 'tag-key' filter.
--   
--   'type' - The type of Spot Instance request ('one-time' |
--   <tt>persistent</tt>).
--   
--   'launched-availability-zone' - The Availability Zone in which the bid
--   is launched.
--   
--   'valid-from' - The start date of the request.
--   
--   'valid-until' - The end date of the request.
dsirFilters :: Lens' DescribeSpotInstanceRequests [Filter]

-- | One or more Spot Instance request IDs.
dsirSpotInstanceRequestIds :: Lens' DescribeSpotInstanceRequests [Text]
data DescribeSpotInstanceRequestsResponse

-- | <a>DescribeSpotInstanceRequestsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsirrSpotInstanceRequests</a> <tt>::</tt>
--   [<a>SpotInstanceRequest</a>]</li>
--   </ul>
describeSpotInstanceRequestsResponse :: DescribeSpotInstanceRequestsResponse

-- | One or more Spot Instance requests.
dsirrSpotInstanceRequests :: Lens' DescribeSpotInstanceRequestsResponse [SpotInstanceRequest]
instance Eq DescribeSpotInstanceRequests
instance Read DescribeSpotInstanceRequests
instance Show DescribeSpotInstanceRequests
instance Eq DescribeSpotInstanceRequestsResponse
instance Read DescribeSpotInstanceRequestsResponse
instance Show DescribeSpotInstanceRequestsResponse
instance Monoid DescribeSpotInstanceRequestsResponse
instance Semigroup DescribeSpotInstanceRequestsResponse
instance FromXML DescribeSpotInstanceRequestsResponse
instance AWSRequest DescribeSpotInstanceRequests
instance ToHeaders DescribeSpotInstanceRequests
instance ToQuery DescribeSpotInstanceRequests
instance ToPath DescribeSpotInstanceRequests


-- | Describes your Spot fleet requests.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeSpotFleetRequests.html</a>
module Network.AWS.EC2.DescribeSpotFleetRequests
data DescribeSpotFleetRequests

-- | <a>DescribeSpotFleetRequests</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsfrDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dsfrMaxResults</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>dsfrNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dsfrSpotFleetRequestIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeSpotFleetRequests :: DescribeSpotFleetRequests

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dsfrDryRun :: Lens' DescribeSpotFleetRequests (Maybe Bool)

-- | The maximum number of results to return in a single call. Specify a
--   value between 1 and 1000. The default value is 1000. To retrieve the
--   remaining results, make another call with the returned
--   <tt>NextToken</tt> value.
dsfrMaxResults :: Lens' DescribeSpotFleetRequests (Maybe Int)

-- | The token for the next set of results.
dsfrNextToken :: Lens' DescribeSpotFleetRequests (Maybe Text)

-- | The IDs of the Spot fleet requests.
dsfrSpotFleetRequestIds :: Lens' DescribeSpotFleetRequests [Text]
data DescribeSpotFleetRequestsResponse

-- | <a>DescribeSpotFleetRequestsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsfrrNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dsfrrSpotFleetRequestConfigs</a> <tt>::</tt>
--   [<a>SpotFleetRequestConfig</a>]</li>
--   </ul>
describeSpotFleetRequestsResponse :: DescribeSpotFleetRequestsResponse

-- | The token required to retrieve the next set of results. This value is
--   <a>null</a> when there are no more results to return.
dsfrrNextToken :: Lens' DescribeSpotFleetRequestsResponse (Maybe Text)

-- | Information about the configuration of your Spot fleet.
dsfrrSpotFleetRequestConfigs :: Lens' DescribeSpotFleetRequestsResponse [SpotFleetRequestConfig]
instance Eq DescribeSpotFleetRequests
instance Ord DescribeSpotFleetRequests
instance Read DescribeSpotFleetRequests
instance Show DescribeSpotFleetRequests
instance Eq DescribeSpotFleetRequestsResponse
instance Read DescribeSpotFleetRequestsResponse
instance Show DescribeSpotFleetRequestsResponse
instance FromXML DescribeSpotFleetRequestsResponse
instance AWSRequest DescribeSpotFleetRequests
instance ToHeaders DescribeSpotFleetRequests
instance ToQuery DescribeSpotFleetRequests
instance ToPath DescribeSpotFleetRequests


-- | Describes the events for the specified Spot fleet request during the
--   specified time.
--   
--   Spot fleet events are delayed by up to 30 seconds before they can be
--   described. This ensures that you can query by the last evaluated time
--   and not miss a recorded event.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeSpotFleetRequestHistory.html</a>
module Network.AWS.EC2.DescribeSpotFleetRequestHistory
data DescribeSpotFleetRequestHistory

-- | <a>DescribeSpotFleetRequestHistory</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsfrhDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dsfrhEventType</a> <tt>::</tt> <a>Maybe</a>
--   <a>EventType</a></li>
--   <li><a>dsfrhMaxResults</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>dsfrhNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dsfrhSpotFleetRequestId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>dsfrhStartTime</a> <tt>::</tt> <a>UTCTime</a></li>
--   </ul>
describeSpotFleetRequestHistory :: Text -> UTCTime -> DescribeSpotFleetRequestHistory

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dsfrhDryRun :: Lens' DescribeSpotFleetRequestHistory (Maybe Bool)

-- | The type of events to describe. By default, all events are described.
dsfrhEventType :: Lens' DescribeSpotFleetRequestHistory (Maybe EventType)

-- | The maximum number of results to return in a single call. Specify a
--   value between 1 and 1000. The default value is 1000. To retrieve the
--   remaining results, make another call with the returned
--   <tt>NextToken</tt> value.
dsfrhMaxResults :: Lens' DescribeSpotFleetRequestHistory (Maybe Int)

-- | The token for the next set of results.
dsfrhNextToken :: Lens' DescribeSpotFleetRequestHistory (Maybe Text)

-- | The ID of the Spot fleet request.
dsfrhSpotFleetRequestId :: Lens' DescribeSpotFleetRequestHistory Text

-- | The starting date and time for the events, in UTC format (for example,
--   <i>YYYY</i>-<i>MM</i> -<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
dsfrhStartTime :: Lens' DescribeSpotFleetRequestHistory UTCTime
data DescribeSpotFleetRequestHistoryResponse

-- | <a>DescribeSpotFleetRequestHistoryResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsfrhrHistoryRecords</a> <tt>::</tt>
--   [<a>HistoryRecord</a>]</li>
--   <li><a>dsfrhrLastEvaluatedTime</a> <tt>::</tt> <a>UTCTime</a></li>
--   <li><a>dsfrhrNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dsfrhrSpotFleetRequestId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>dsfrhrStartTime</a> <tt>::</tt> <a>UTCTime</a></li>
--   </ul>
describeSpotFleetRequestHistoryResponse :: Text -> UTCTime -> UTCTime -> DescribeSpotFleetRequestHistoryResponse

-- | Information about the events in the history of the Spot fleet request.
dsfrhrHistoryRecords :: Lens' DescribeSpotFleetRequestHistoryResponse [HistoryRecord]

-- | The last date and time for the events, in UTC format (for example,
--   <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). All
--   records up to this time were retrieved.
--   
--   If <tt>nextToken</tt> indicates that there are more results, this
--   value is not present.
dsfrhrLastEvaluatedTime :: Lens' DescribeSpotFleetRequestHistoryResponse UTCTime

-- | The token required to retrieve the next set of results. This value is
--   <a>null</a> when there are no more results to return.
dsfrhrNextToken :: Lens' DescribeSpotFleetRequestHistoryResponse (Maybe Text)

-- | The ID of the Spot fleet request.
dsfrhrSpotFleetRequestId :: Lens' DescribeSpotFleetRequestHistoryResponse Text

-- | The starting date and time for the events, in UTC format (for example,
--   <i>YYYY</i>-<i>MM</i> -<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
dsfrhrStartTime :: Lens' DescribeSpotFleetRequestHistoryResponse UTCTime
instance Eq DescribeSpotFleetRequestHistory
instance Read DescribeSpotFleetRequestHistory
instance Show DescribeSpotFleetRequestHistory
instance Eq DescribeSpotFleetRequestHistoryResponse
instance Read DescribeSpotFleetRequestHistoryResponse
instance Show DescribeSpotFleetRequestHistoryResponse
instance FromXML DescribeSpotFleetRequestHistoryResponse
instance AWSRequest DescribeSpotFleetRequestHistory
instance ToHeaders DescribeSpotFleetRequestHistory
instance ToQuery DescribeSpotFleetRequestHistory
instance ToPath DescribeSpotFleetRequestHistory


-- | Describes the running instances for the specified Spot fleet.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeSpotFleetInstances.html</a>
module Network.AWS.EC2.DescribeSpotFleetInstances
data DescribeSpotFleetInstances

-- | <a>DescribeSpotFleetInstances</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsfiDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dsfiMaxResults</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>dsfiNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dsfiSpotFleetRequestId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
describeSpotFleetInstances :: Text -> DescribeSpotFleetInstances

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dsfiDryRun :: Lens' DescribeSpotFleetInstances (Maybe Bool)

-- | The maximum number of results to return in a single call. Specify a
--   value between 1 and 1000. The default value is 1000. To retrieve the
--   remaining results, make another call with the returned
--   <tt>NextToken</tt> value.
dsfiMaxResults :: Lens' DescribeSpotFleetInstances (Maybe Int)

-- | The token for the next set of results.
dsfiNextToken :: Lens' DescribeSpotFleetInstances (Maybe Text)

-- | The ID of the Spot fleet request.
dsfiSpotFleetRequestId :: Lens' DescribeSpotFleetInstances Text
data DescribeSpotFleetInstancesResponse

-- | <a>DescribeSpotFleetInstancesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsfirActiveInstances</a> <tt>::</tt>
--   [<a>ActiveInstance</a>]</li>
--   <li><a>dsfirNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dsfirSpotFleetRequestId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
describeSpotFleetInstancesResponse :: Text -> DescribeSpotFleetInstancesResponse

-- | The running instances. Note that this list is refreshed periodically
--   and might be out of date.
dsfirActiveInstances :: Lens' DescribeSpotFleetInstancesResponse [ActiveInstance]

-- | The token required to retrieve the next set of results. This value is
--   <a>null</a> when there are no more results to return.
dsfirNextToken :: Lens' DescribeSpotFleetInstancesResponse (Maybe Text)

-- | The ID of the Spot fleet request.
dsfirSpotFleetRequestId :: Lens' DescribeSpotFleetInstancesResponse Text
instance Eq DescribeSpotFleetInstances
instance Ord DescribeSpotFleetInstances
instance Read DescribeSpotFleetInstances
instance Show DescribeSpotFleetInstances
instance Eq DescribeSpotFleetInstancesResponse
instance Read DescribeSpotFleetInstancesResponse
instance Show DescribeSpotFleetInstancesResponse
instance FromXML DescribeSpotFleetInstancesResponse
instance AWSRequest DescribeSpotFleetInstances
instance ToHeaders DescribeSpotFleetInstances
instance ToQuery DescribeSpotFleetInstances
instance ToPath DescribeSpotFleetInstances


-- | Describes the data feed for Spot Instances. For more information, see
--   <a>SpotInstance Data Feed</a> in the <i>Amazon Elastic Compute Cloud
--   User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeSpotDatafeedSubscription.html</a>
module Network.AWS.EC2.DescribeSpotDatafeedSubscription
data DescribeSpotDatafeedSubscription

-- | <a>DescribeSpotDatafeedSubscription</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsdsDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   </ul>
describeSpotDatafeedSubscription :: DescribeSpotDatafeedSubscription

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dsdsDryRun :: Lens' DescribeSpotDatafeedSubscription (Maybe Bool)
data DescribeSpotDatafeedSubscriptionResponse

-- | <a>DescribeSpotDatafeedSubscriptionResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsdsrSpotDatafeedSubscription</a> <tt>::</tt> <a>Maybe</a>
--   <a>SpotDatafeedSubscription</a></li>
--   </ul>
describeSpotDatafeedSubscriptionResponse :: DescribeSpotDatafeedSubscriptionResponse

-- | The Spot Instance data feed subscription.
dsdsrSpotDatafeedSubscription :: Lens' DescribeSpotDatafeedSubscriptionResponse (Maybe SpotDatafeedSubscription)
instance Eq DescribeSpotDatafeedSubscription
instance Ord DescribeSpotDatafeedSubscription
instance Read DescribeSpotDatafeedSubscription
instance Show DescribeSpotDatafeedSubscription
instance Eq DescribeSpotDatafeedSubscriptionResponse
instance Read DescribeSpotDatafeedSubscriptionResponse
instance Show DescribeSpotDatafeedSubscriptionResponse
instance FromXML DescribeSpotDatafeedSubscriptionResponse
instance AWSRequest DescribeSpotDatafeedSubscription
instance ToHeaders DescribeSpotDatafeedSubscription
instance ToQuery DescribeSpotDatafeedSubscription
instance ToPath DescribeSpotDatafeedSubscription


-- | Describes one or more of the EBS snapshots available to you. Available
--   snapshots include public snapshots available for any AWS account to
--   launch, private snapshots that you own, and private snapshots owned by
--   another AWS account but for which you've been given explicit create
--   volume permissions.
--   
--   The create volume permissions fall into the following categories:
--   
--   <i>public</i>: The owner of the snapshot granted create volume
--   permissions for the snapshot to the <a>all</a> group. All AWS accounts
--   have create volume permissions for these snapshots. <i>explicit</i>:
--   The owner of the snapshot granted create volume permissions to a
--   specific AWS account. <i>implicit</i>: An AWS account has implicit
--   create volume permissions for all snapshots it owns. The list of
--   snapshots returned can be modified by specifying snapshot IDs,
--   snapshot owners, or AWS accounts with create volume permissions. If no
--   options are specified, Amazon EC2 returns all snapshots for which you
--   have create volume permissions.
--   
--   If you specify one or more snapshot IDs, only snapshots that have the
--   specified IDs are returned. If you specify an invalid snapshot ID, an
--   error is returned. If you specify a snapshot ID for which you do not
--   have access, it is not included in the returned results.
--   
--   If you specify one or more snapshot owners, only snapshots from the
--   specified owners and for which you have access are returned. The
--   results can include the AWS account IDs of the specified owners,
--   <tt>amazon</tt> for snapshots owned by Amazon, or <tt>self</tt> for
--   snapshots that you own.
--   
--   If you specify a list of restorable users, only snapshots with create
--   snapshot permissions for those users are returned. You can specify AWS
--   account IDs (if you own the snapshots), <tt>self</tt> for snapshots
--   for which you own or have explicit permissions, or <a>all</a> for
--   public snapshots.
--   
--   If you are describing a long list of snapshots, you can paginate the
--   output to make the list more manageable. The <tt>MaxResults</tt>
--   parameter sets the maximum number of results returned in a single
--   page. If the list of results exceeds your <tt>MaxResults</tt> value,
--   then that number of results is returned along with a
--   <tt>NextToken</tt> value that can be passed to a subsequent
--   <a>DescribeSnapshots</a> request to retrieve the remaining results.
--   
--   For more information about EBS snapshots, see <a>Amazon EBS
--   Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeSnapshots.html</a>
module Network.AWS.EC2.DescribeSnapshots
data DescribeSnapshots

-- | <a>DescribeSnapshots</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ds1DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>ds1Filters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>ds1MaxResults</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>ds1NextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ds1OwnerIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>ds1RestorableByUserIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>ds1SnapshotIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeSnapshots :: DescribeSnapshots

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
ds1DryRun :: Lens' DescribeSnapshots (Maybe Bool)

-- | One or more filters.
--   
--   <tt>description</tt> - A description of the snapshot.
--   
--   'owner-alias' - The AWS account alias (for example, <tt>amazon</tt>)
--   that owns the snapshot.
--   
--   'owner-id' - The ID of the AWS account that owns the snapshot.
--   
--   <tt>progress</tt> - The progress of the snapshot, as a percentage (for
--   example, 80%).
--   
--   'snapshot-id' - The snapshot ID.
--   
--   'start-time' - The time stamp when the snapshot was initiated.
--   
--   <tt>status</tt> - The status of the snapshot (<tt>pending</tt> |
--   <tt>completed</tt> | <tt>error</tt>).
--   
--   <a>tag</a>:<i>key</i>=<i>value</i> - The key/value combination of a
--   tag assigned to the resource.
--   
--   'tag-key' - The key of a tag assigned to the resource. This filter is
--   independent of the 'tag-value' filter. For example, if you use both
--   the filter "tag-key=Purpose" and the filter "tag-value=X", you get any
--   resources assigned both the tag key Purpose (regardless of what the
--   tag's value is), and the tag value X (regardless of what the tag's key
--   is). If you want to list only resources where Purpose is X, see the
--   <a>tag</a>:<i>key</i>=<i>value</i> filter.
--   
--   'tag-value' - The value of a tag assigned to the resource. This filter
--   is independent of the 'tag-key' filter.
--   
--   'volume-id' - The ID of the volume the snapshot is for.
--   
--   'volume-size' - The size of the volume, in GiB.
ds1Filters :: Lens' DescribeSnapshots [Filter]

-- | The maximum number of snapshot results returned by
--   <a>DescribeSnapshots</a> in paginated output. When this parameter is
--   used, <a>DescribeSnapshots</a> only returns <tt>MaxResults</tt>
--   results in a single page along with a <tt>NextToken</tt> response
--   element. The remaining results of the initial request can be seen by
--   sending another <a>DescribeSnapshots</a> request with the returned
--   <tt>NextToken</tt> value. This value can be between 5 and 1000; if
--   <tt>MaxResults</tt> is given a value larger than 1000, only 1000
--   results are returned. If this parameter is not used, then
--   <a>DescribeSnapshots</a> returns all results. You cannot specify this
--   parameter and the snapshot IDs parameter in the same request.
ds1MaxResults :: Lens' DescribeSnapshots (Maybe Int)

-- | The <tt>NextToken</tt> value returned from a previous paginated
--   <a>DescribeSnapshots</a> request where <tt>MaxResults</tt> was used
--   and the results exceeded the value of that parameter. Pagination
--   continues from the end of the previous results that returned the
--   <tt>NextToken</tt> value. This value is <a>null</a> when there are no
--   more results to return.
ds1NextToken :: Lens' DescribeSnapshots (Maybe Text)

-- | Returns the snapshots owned by the specified owner. Multiple owners
--   can be specified.
ds1OwnerIds :: Lens' DescribeSnapshots [Text]

-- | One or more AWS accounts IDs that can create volumes from the
--   snapshot.
ds1RestorableByUserIds :: Lens' DescribeSnapshots [Text]

-- | One or more snapshot IDs.
--   
--   Default: Describes snapshots for which you have launch permissions.
ds1SnapshotIds :: Lens' DescribeSnapshots [Text]
data DescribeSnapshotsResponse

-- | <a>DescribeSnapshotsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsrNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dsrSnapshots</a> <tt>::</tt> [<a>Snapshot</a>]</li>
--   </ul>
describeSnapshotsResponse :: DescribeSnapshotsResponse

-- | The <tt>NextToken</tt> value to include in a future
--   <a>DescribeSnapshots</a> request. When the results of a
--   <a>DescribeSnapshots</a> request exceed <tt>MaxResults</tt>, this
--   value can be used to retrieve the next page of results. This value is
--   <a>null</a> when there are no more results to return.
dsrNextToken :: Lens' DescribeSnapshotsResponse (Maybe Text)

-- | Information about the snapshots.
dsrSnapshots :: Lens' DescribeSnapshotsResponse [Snapshot]
instance Eq DescribeSnapshots
instance Read DescribeSnapshots
instance Show DescribeSnapshots
instance Eq DescribeSnapshotsResponse
instance Read DescribeSnapshotsResponse
instance Show DescribeSnapshotsResponse
instance AWSPager DescribeSnapshots
instance FromXML DescribeSnapshotsResponse
instance AWSRequest DescribeSnapshots
instance ToHeaders DescribeSnapshots
instance ToQuery DescribeSnapshots
instance ToPath DescribeSnapshots


-- | Describes the specified attribute of the specified snapshot. You can
--   specify only one attribute at a time.
--   
--   For more information about EBS snapshots, see <a>Amazon EBS
--   Snapshots</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeSnapshotAttribute.html</a>
module Network.AWS.EC2.DescribeSnapshotAttribute
data DescribeSnapshotAttribute

-- | <a>DescribeSnapshotAttribute</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsaAttribute</a> <tt>::</tt> <a>SnapshotAttributeName</a></li>
--   <li><a>dsaDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dsaSnapshotId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
describeSnapshotAttribute :: Text -> SnapshotAttributeName -> DescribeSnapshotAttribute

-- | The snapshot attribute you would like to view.
dsaAttribute :: Lens' DescribeSnapshotAttribute SnapshotAttributeName

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dsaDryRun :: Lens' DescribeSnapshotAttribute (Maybe Bool)

-- | The ID of the EBS snapshot.
dsaSnapshotId :: Lens' DescribeSnapshotAttribute Text
data DescribeSnapshotAttributeResponse

-- | <a>DescribeSnapshotAttributeResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsarCreateVolumePermissions</a> <tt>::</tt>
--   [<a>CreateVolumePermission</a>]</li>
--   <li><a>dsarProductCodes</a> <tt>::</tt> [<a>ProductCode</a>]</li>
--   <li><a>dsarSnapshotId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
describeSnapshotAttributeResponse :: DescribeSnapshotAttributeResponse

-- | A list of permissions for creating volumes from the snapshot.
dsarCreateVolumePermissions :: Lens' DescribeSnapshotAttributeResponse [CreateVolumePermission]

-- | A list of product codes.
dsarProductCodes :: Lens' DescribeSnapshotAttributeResponse [ProductCode]

-- | The ID of the EBS snapshot.
dsarSnapshotId :: Lens' DescribeSnapshotAttributeResponse (Maybe Text)
instance Eq DescribeSnapshotAttribute
instance Read DescribeSnapshotAttribute
instance Show DescribeSnapshotAttribute
instance Eq DescribeSnapshotAttributeResponse
instance Read DescribeSnapshotAttributeResponse
instance Show DescribeSnapshotAttributeResponse
instance FromXML DescribeSnapshotAttributeResponse
instance AWSRequest DescribeSnapshotAttribute
instance ToHeaders DescribeSnapshotAttribute
instance ToQuery DescribeSnapshotAttribute
instance ToPath DescribeSnapshotAttribute


-- | Describes one or more of your security groups.
--   
--   A security group is for use with instances either in the EC2-Classic
--   platform or in a specific VPC. For more information, see <a>Amazon EC2
--   SecurityGroups</a> in the <i>Amazon Elastic Compute Cloud User
--   Guide</i> and <a>Security Groups forYour VPC</a> in the <i>Amazon
--   Virtual Private Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeSecurityGroups.html</a>
module Network.AWS.EC2.DescribeSecurityGroups
data DescribeSecurityGroups

-- | <a>DescribeSecurityGroups</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsg1DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dsg1Filters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>dsg1GroupIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>dsg1GroupNames</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeSecurityGroups :: DescribeSecurityGroups

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dsg1DryRun :: Lens' DescribeSecurityGroups (Maybe Bool)

-- | One or more filters.
--   
--   <tt>description</tt> - The description of the security group.
--   
--   'egress.ip-permission.prefix-list-id' - The ID (prefix) of the AWS
--   service to which the security group allows access.
--   
--   'group-id' - The ID of the security group.
--   
--   'group-name' - The name of the security group.
--   
--   'ip-permission.cidr' - A CIDR range that has been granted permission.
--   
--   'ip-permission.from-port' - The start of port range for the TCP and
--   UDP protocols, or an ICMP type number.
--   
--   'ip-permission.group-id' - The ID of a security group that has been
--   granted permission.
--   
--   'ip-permission.group-name' - The name of a security group that has
--   been granted permission.
--   
--   'ip-permission.protocol' - The IP protocol for the permission
--   (<tt>tcp</tt> | <tt>udp</tt> | <tt>icmp</tt> or a protocol number).
--   
--   'ip-permission.to-port' - The end of port range for the TCP and UDP
--   protocols, or an ICMP code.
--   
--   'ip-permission.user-id' - The ID of an AWS account that has been
--   granted permission.
--   
--   'owner-id' - The AWS account ID of the owner of the security group.
--   
--   'tag-key' - The key of a tag assigned to the security group.
--   
--   'tag-value' - The value of a tag assigned to the security group.
--   
--   'vpc-id' - The ID of the VPC specified when the security group was
--   created.
dsg1Filters :: Lens' DescribeSecurityGroups [Filter]

-- | One or more security group IDs. Required for security groups in a
--   nondefault VPC.
--   
--   Default: Describes all your security groups.
dsg1GroupIds :: Lens' DescribeSecurityGroups [Text]

-- | <ul>
--   <li><i>EC2-Classic and default VPC only</i> One or more security group
--   names. You can specify either the security group name or the security
--   group ID. For security groups in a nondefault VPC, use the
--   'group-name' filter to describe security groups by name.</li>
--   </ul>
--   
--   Default: Describes all your security groups.
dsg1GroupNames :: Lens' DescribeSecurityGroups [Text]
data DescribeSecurityGroupsResponse

-- | <a>DescribeSecurityGroupsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsgrSecurityGroups</a> <tt>::</tt> [<a>SecurityGroup</a>]</li>
--   </ul>
describeSecurityGroupsResponse :: DescribeSecurityGroupsResponse

-- | Information about one or more security groups.
dsgrSecurityGroups :: Lens' DescribeSecurityGroupsResponse [SecurityGroup]
instance Eq DescribeSecurityGroups
instance Read DescribeSecurityGroups
instance Show DescribeSecurityGroups
instance Eq DescribeSecurityGroupsResponse
instance Read DescribeSecurityGroupsResponse
instance Show DescribeSecurityGroupsResponse
instance Monoid DescribeSecurityGroupsResponse
instance Semigroup DescribeSecurityGroupsResponse
instance FromXML DescribeSecurityGroupsResponse
instance AWSRequest DescribeSecurityGroups
instance ToHeaders DescribeSecurityGroups
instance ToQuery DescribeSecurityGroups
instance ToPath DescribeSecurityGroups


-- | Describes one or more of your route tables.
--   
--   For more information about route tables, see <a>Route Tables</a> in
--   the <i>AmazonVirtual Private Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeRouteTables.html</a>
module Network.AWS.EC2.DescribeRouteTables
data DescribeRouteTables

-- | <a>DescribeRouteTables</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>drt2DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>drt2Filters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>drt2RouteTableIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeRouteTables :: DescribeRouteTables

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
drt2DryRun :: Lens' DescribeRouteTables (Maybe Bool)

-- | One or more filters.
--   
--   'association.route-table-association-id' - The ID of an association ID
--   for the route table.
--   
--   'association.route-table-id' - The ID of the route table involved in
--   the association.
--   
--   'association.subnet-id' - The ID of the subnet involved in the
--   association.
--   
--   'association.main' - Indicates whether the route table is the main
--   route table for the VPC.
--   
--   'route-table-id' - The ID of the route table.
--   
--   'route.destination-cidr-block' - The CIDR range specified in a route
--   in the table.
--   
--   'route.destination-prefix-list-id' - The ID (prefix) of the AWS
--   service specified in a route in the table.
--   
--   'route.gateway-id' - The ID of a gateway specified in a route in the
--   table.
--   
--   'route.instance-id' - The ID of an instance specified in a route in
--   the table.
--   
--   'route.origin' - Describes how the route was created.
--   <tt>CreateRouteTable</tt> indicates that the route was automatically
--   created when the route table was created; <tt>CreateRoute</tt>
--   indicates that the route was manually added to the route table;
--   <tt>EnableVgwRoutePropagation</tt> indicates that the route was
--   propagated by route propagation.
--   
--   'route.state' - The state of a route in the route table
--   (<tt>active</tt> | <tt>blackhole</tt>). The blackhole state indicates
--   that the route's target isn't available (for example, the specified
--   gateway isn't attached to the VPC, the specified NAT instance has been
--   terminated, and so on).
--   
--   'route.vpc-peering-connection-id' - The ID of a VPC peering connection
--   specified in a route in the table.
--   
--   <a>tag</a>:<i>key</i>=<i>value</i> - The key/value combination of a
--   tag assigned to the resource.
--   
--   'tag-key' - The key of a tag assigned to the resource. This filter is
--   independent of the 'tag-value' filter. For example, if you use both
--   the filter "tag-key=Purpose" and the filter "tag-value=X", you get any
--   resources assigned both the tag key Purpose (regardless of what the
--   tag's value is), and the tag value X (regardless of what the tag's key
--   is). If you want to list only resources where Purpose is X, see the
--   <a>tag</a>:<i>key</i>=<i>value</i> filter.
--   
--   'tag-value' - The value of a tag assigned to the resource. This filter
--   is independent of the 'tag-key' filter.
--   
--   'vpc-id' - The ID of the VPC for the route table.
drt2Filters :: Lens' DescribeRouteTables [Filter]

-- | One or more route table IDs.
--   
--   Default: Describes all your route tables.
drt2RouteTableIds :: Lens' DescribeRouteTables [Text]
data DescribeRouteTablesResponse

-- | <a>DescribeRouteTablesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>drtrRouteTables</a> <tt>::</tt> [<a>RouteTable</a>]</li>
--   </ul>
describeRouteTablesResponse :: DescribeRouteTablesResponse

-- | Information about one or more route tables.
drtrRouteTables :: Lens' DescribeRouteTablesResponse [RouteTable]
instance Eq DescribeRouteTables
instance Read DescribeRouteTables
instance Show DescribeRouteTables
instance Eq DescribeRouteTablesResponse
instance Read DescribeRouteTablesResponse
instance Show DescribeRouteTablesResponse
instance Monoid DescribeRouteTablesResponse
instance Semigroup DescribeRouteTablesResponse
instance FromXML DescribeRouteTablesResponse
instance AWSRequest DescribeRouteTables
instance ToHeaders DescribeRouteTables
instance ToQuery DescribeRouteTables
instance ToPath DescribeRouteTables


-- | Describes Reserved Instance offerings that are available for purchase.
--   With Reserved Instances, you purchase the right to launch instances
--   for a period of time. During that time period, you do not receive
--   insufficient capacity errors, and you pay a lower usage rate than the
--   rate charged for On-Demand instances for the actual time used.
--   
--   For more information, see <a>Reserved Instance Marketplace</a> in the
--   <i>AmazonElastic Compute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeReservedInstancesOfferings.html</a>
module Network.AWS.EC2.DescribeReservedInstancesOfferings
data DescribeReservedInstancesOfferings

-- | <a>DescribeReservedInstancesOfferings</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>drioAvailabilityZone</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>drioDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>drioFilters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>drioIncludeMarketplace</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>drioInstanceTenancy</a> <tt>::</tt> <a>Maybe</a>
--   <a>Tenancy</a></li>
--   <li><a>drioInstanceType</a> <tt>::</tt> <a>Maybe</a>
--   <a>InstanceType</a></li>
--   <li><a>drioMaxDuration</a> <tt>::</tt> <a>Maybe</a>
--   <a>Integer</a></li>
--   <li><a>drioMaxInstanceCount</a> <tt>::</tt> <a>Maybe</a>
--   <a>Int</a></li>
--   <li><a>drioMaxResults</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>drioMinDuration</a> <tt>::</tt> <a>Maybe</a>
--   <a>Integer</a></li>
--   <li><a>drioNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>drioOfferingType</a> <tt>::</tt> <a>Maybe</a>
--   <a>OfferingTypeValues</a></li>
--   <li><a>drioProductDescription</a> <tt>::</tt> <a>Maybe</a>
--   <a>RIProductDescription</a></li>
--   <li><a>drioReservedInstancesOfferingIds</a> <tt>::</tt>
--   [<a>Text</a>]</li>
--   </ul>
describeReservedInstancesOfferings :: DescribeReservedInstancesOfferings

-- | The Availability Zone in which the Reserved Instance can be used.
drioAvailabilityZone :: Lens' DescribeReservedInstancesOfferings (Maybe Text)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
drioDryRun :: Lens' DescribeReservedInstancesOfferings (Maybe Bool)

-- | One or more filters.
--   
--   'availability-zone' - The Availability Zone where the Reserved
--   Instance can be used.
--   
--   <tt>duration</tt> - The duration of the Reserved Instance (for
--   example, one year or three years), in seconds ('31536000' |
--   '94608000').
--   
--   'fixed-price' - The purchase price of the Reserved Instance (for
--   example, 9800.0).
--   
--   'instance-type' - The instance type on which the Reserved Instance can
--   be used.
--   
--   <tt>marketplace</tt> - Set to <tt>true</tt> to show only Reserved
--   Instance Marketplace offerings. When this filter is not used, which is
--   the default behavior, all offerings from AWS and Reserved Instance
--   Marketplace are listed.
--   
--   'product-description' - The description of the Reserved Instance
--   ('Linux/UNIX' | 'Linux/UNIX (Amazon VPC)' | <a>Windows</a> | 'Windows
--   (Amazon VPC)').
--   
--   'reserved-instances-offering-id' - The Reserved Instances offering ID.
--   
--   'usage-price' - The usage price of the Reserved Instance, per hour
--   (for example, 0.84).
drioFilters :: Lens' DescribeReservedInstancesOfferings [Filter]

-- | Include Marketplace offerings in the response.
drioIncludeMarketplace :: Lens' DescribeReservedInstancesOfferings (Maybe Bool)

-- | The tenancy of the Reserved Instance offering. A Reserved Instance
--   with <tt>dedicated</tt> tenancy runs on single-tenant hardware and can
--   only be launched within a VPC.
--   
--   Default: 'default'
drioInstanceTenancy :: Lens' DescribeReservedInstancesOfferings (Maybe Tenancy)

-- | The instance type on which the Reserved Instance can be used. For more
--   information, see <a>Instance Types</a> in the <i>Amazon Elastic
--   Compute Cloud User Guide</i> .
drioInstanceType :: Lens' DescribeReservedInstancesOfferings (Maybe InstanceType)

-- | The maximum duration (in seconds) to filter when searching for
--   offerings.
--   
--   Default: 94608000 (3 years)
drioMaxDuration :: Lens' DescribeReservedInstancesOfferings (Maybe Integer)

-- | The maximum number of instances to filter when searching for
--   offerings.
--   
--   Default: 20
drioMaxInstanceCount :: Lens' DescribeReservedInstancesOfferings (Maybe Int)

-- | The maximum number of results to return for the request in a single
--   page. The remaining results of the initial request can be seen by
--   sending another request with the returned <tt>NextToken</tt> value.
--   The maximum is 100.
--   
--   Default: 100
drioMaxResults :: Lens' DescribeReservedInstancesOfferings (Maybe Int)

-- | The minimum duration (in seconds) to filter when searching for
--   offerings.
--   
--   Default: 2592000 (1 month)
drioMinDuration :: Lens' DescribeReservedInstancesOfferings (Maybe Integer)

-- | The token to retrieve the next page of results.
drioNextToken :: Lens' DescribeReservedInstancesOfferings (Maybe Text)

-- | The Reserved Instance offering type. If you are using tools that
--   predate the 2011-11-01 API version, you only have access to the
--   'Medium Utilization' Reserved Instance offering type.
drioOfferingType :: Lens' DescribeReservedInstancesOfferings (Maybe OfferingTypeValues)

-- | The Reserved Instance description. Instances that include '(Amazon
--   VPC)' in the description are for use with Amazon VPC.
drioProductDescription :: Lens' DescribeReservedInstancesOfferings (Maybe RIProductDescription)

-- | One or more Reserved Instances offering IDs.
drioReservedInstancesOfferingIds :: Lens' DescribeReservedInstancesOfferings [Text]
data DescribeReservedInstancesOfferingsResponse

-- | <a>DescribeReservedInstancesOfferingsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>driorNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>driorReservedInstancesOfferings</a> <tt>::</tt>
--   [<a>ReservedInstancesOffering</a>]</li>
--   </ul>
describeReservedInstancesOfferingsResponse :: DescribeReservedInstancesOfferingsResponse

-- | The token to use to retrieve the next page of results. This value is
--   <a>null</a> when there are no more results to return.
driorNextToken :: Lens' DescribeReservedInstancesOfferingsResponse (Maybe Text)

-- | A list of Reserved Instances offerings.
driorReservedInstancesOfferings :: Lens' DescribeReservedInstancesOfferingsResponse [ReservedInstancesOffering]
instance Eq DescribeReservedInstancesOfferings
instance Read DescribeReservedInstancesOfferings
instance Show DescribeReservedInstancesOfferings
instance Eq DescribeReservedInstancesOfferingsResponse
instance Read DescribeReservedInstancesOfferingsResponse
instance Show DescribeReservedInstancesOfferingsResponse
instance AWSPager DescribeReservedInstancesOfferings
instance FromXML DescribeReservedInstancesOfferingsResponse
instance AWSRequest DescribeReservedInstancesOfferings
instance ToHeaders DescribeReservedInstancesOfferings
instance ToQuery DescribeReservedInstancesOfferings
instance ToPath DescribeReservedInstancesOfferings


-- | Describes the modifications made to your Reserved Instances. If no
--   parameter is specified, information about all your Reserved Instances
--   modification requests is returned. If a modification ID is specified,
--   only information about the specific modification is returned.
--   
--   For more information, see <a>Modifying Reserved Instances</a> in the
--   Amazon Elastic Compute Cloud User Guide.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeReservedInstancesModifications.html</a>
module Network.AWS.EC2.DescribeReservedInstancesModifications
data DescribeReservedInstancesModifications

-- | <a>DescribeReservedInstancesModifications</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>drimFilters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>drimNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>drimReservedInstancesModificationIds</a> <tt>::</tt>
--   [<a>Text</a>]</li>
--   </ul>
describeReservedInstancesModifications :: DescribeReservedInstancesModifications

-- | One or more filters.
--   
--   'client-token' - The idempotency token for the modification request.
--   
--   'create-date' - The time when the modification request was created.
--   
--   'effective-date' - The time when the modification becomes effective.
--   
--   'modification-result.reserved-instances-id' - The ID for the Reserved
--   Instances created as part of the modification request. This ID is only
--   available when the status of the modification is <tt>fulfilled</tt>.
--   
--   'modification-result.target-configuration.availability-zone' - The
--   Availability Zone for the new Reserved Instances.
--   
--   'modification-result.target-configuration.instance-count ' - The
--   number of new Reserved Instances.
--   
--   'modification-result.target-configuration.instance-type' - The
--   instance type of the new Reserved Instances.
--   
--   'modification-result.target-configuration.platform' - The network
--   platform of the new Reserved Instances ('EC2-Classic' | 'EC2-VPC').
--   
--   'reserved-instances-id' - The ID of the Reserved Instances modified.
--   
--   'reserved-instances-modification-id' - The ID of the modification
--   request.
--   
--   <tt>status</tt> - The status of the Reserved Instances modification
--   request (<tt>processing</tt> | <tt>fulfilled</tt> | <tt>failed</tt>).
--   
--   'status-message' - The reason for the status.
--   
--   'update-date' - The time when the modification request was last
--   updated.
drimFilters :: Lens' DescribeReservedInstancesModifications [Filter]

-- | The token to retrieve the next page of results.
drimNextToken :: Lens' DescribeReservedInstancesModifications (Maybe Text)

-- | IDs for the submitted modification request.
drimReservedInstancesModificationIds :: Lens' DescribeReservedInstancesModifications [Text]
data DescribeReservedInstancesModificationsResponse

-- | <a>DescribeReservedInstancesModificationsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>drimrNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>drimrReservedInstancesModifications</a> <tt>::</tt>
--   [<a>ReservedInstancesModification</a>]</li>
--   </ul>
describeReservedInstancesModificationsResponse :: DescribeReservedInstancesModificationsResponse

-- | The token to use to retrieve the next page of results. This value is
--   <a>null</a> when there are no more results to return.
drimrNextToken :: Lens' DescribeReservedInstancesModificationsResponse (Maybe Text)

-- | The Reserved Instance modification information.
drimrReservedInstancesModifications :: Lens' DescribeReservedInstancesModificationsResponse [ReservedInstancesModification]
instance Eq DescribeReservedInstancesModifications
instance Read DescribeReservedInstancesModifications
instance Show DescribeReservedInstancesModifications
instance Eq DescribeReservedInstancesModificationsResponse
instance Read DescribeReservedInstancesModificationsResponse
instance Show DescribeReservedInstancesModificationsResponse
instance AWSPager DescribeReservedInstancesModifications
instance FromXML DescribeReservedInstancesModificationsResponse
instance AWSRequest DescribeReservedInstancesModifications
instance ToHeaders DescribeReservedInstancesModifications
instance ToQuery DescribeReservedInstancesModifications
instance ToPath DescribeReservedInstancesModifications


-- | Describes your account's Reserved Instance listings in the Reserved
--   Instance Marketplace.
--   
--   The Reserved Instance Marketplace matches sellers who want to resell
--   Reserved Instance capacity that they no longer need with buyers who
--   want to purchase additional capacity. Reserved Instances bought and
--   sold through the Reserved Instance Marketplace work like any other
--   Reserved Instances.
--   
--   As a seller, you choose to list some or all of your Reserved
--   Instances, and you specify the upfront price to receive for them. Your
--   Reserved Instances are then listed in the Reserved Instance
--   Marketplace and are available for purchase.
--   
--   As a buyer, you specify the configuration of the Reserved Instance to
--   purchase, and the Marketplace matches what you're searching for with
--   what's available. The Marketplace first sells the lowest priced
--   Reserved Instances to you, and continues to sell available Reserved
--   Instance listings to you until your demand is met. You are charged
--   based on the total price of all of the listings that you purchase.
--   
--   For more information, see <a>Reserved Instance Marketplace</a> in the
--   <i>AmazonElastic Compute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeReservedInstancesListings.html</a>
module Network.AWS.EC2.DescribeReservedInstancesListings
data DescribeReservedInstancesListings

-- | <a>DescribeReservedInstancesListings</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>drilFilters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>drilReservedInstancesId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>drilReservedInstancesListingId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
describeReservedInstancesListings :: DescribeReservedInstancesListings

-- | One or more filters.
--   
--   'reserved-instances-id' - The ID of the Reserved Instances.
--   
--   'reserved-instances-listing-id' - The ID of the Reserved Instances
--   listing.
--   
--   <tt>status</tt> - The status of the Reserved Instance listing
--   (<tt>pending</tt> | <tt>active</tt> | <tt>cancelled</tt> |
--   <tt>closed</tt>).
--   
--   'status-message' - The reason for the status.
drilFilters :: Lens' DescribeReservedInstancesListings [Filter]

-- | One or more Reserved Instance IDs.
drilReservedInstancesId :: Lens' DescribeReservedInstancesListings (Maybe Text)

-- | One or more Reserved Instance Listing IDs.
drilReservedInstancesListingId :: Lens' DescribeReservedInstancesListings (Maybe Text)
data DescribeReservedInstancesListingsResponse

-- | <a>DescribeReservedInstancesListingsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>drilrReservedInstancesListings</a> <tt>::</tt>
--   [<a>ReservedInstancesListing</a>]</li>
--   </ul>
describeReservedInstancesListingsResponse :: DescribeReservedInstancesListingsResponse

-- | Information about the Reserved Instance listing.
drilrReservedInstancesListings :: Lens' DescribeReservedInstancesListingsResponse [ReservedInstancesListing]
instance Eq DescribeReservedInstancesListings
instance Read DescribeReservedInstancesListings
instance Show DescribeReservedInstancesListings
instance Eq DescribeReservedInstancesListingsResponse
instance Read DescribeReservedInstancesListingsResponse
instance Show DescribeReservedInstancesListingsResponse
instance Monoid DescribeReservedInstancesListingsResponse
instance Semigroup DescribeReservedInstancesListingsResponse
instance FromXML DescribeReservedInstancesListingsResponse
instance AWSRequest DescribeReservedInstancesListings
instance ToHeaders DescribeReservedInstancesListings
instance ToQuery DescribeReservedInstancesListings
instance ToPath DescribeReservedInstancesListings


-- | Describes one or more of the Reserved Instances that you purchased.
--   
--   For more information about Reserved Instances, see <a>Reserved
--   Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeReservedInstances.html</a>
module Network.AWS.EC2.DescribeReservedInstances
data DescribeReservedInstances

-- | <a>DescribeReservedInstances</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>driDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>driFilters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>driOfferingType</a> <tt>::</tt> <a>Maybe</a>
--   <a>OfferingTypeValues</a></li>
--   <li><a>driReservedInstancesIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeReservedInstances :: DescribeReservedInstances

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
driDryRun :: Lens' DescribeReservedInstances (Maybe Bool)

-- | One or more filters.
--   
--   'availability-zone' - The Availability Zone where the Reserved
--   Instance can be used.
--   
--   <tt>duration</tt> - The duration of the Reserved Instance (one year or
--   three years), in seconds ('31536000' | '94608000').
--   
--   <tt>end</tt> - The time when the Reserved Instance expires (for
--   example, 2014-08-07T11:54:42.000Z).
--   
--   'fixed-price' - The purchase price of the Reserved Instance (for
--   example, 9800.0).
--   
--   'instance-type' - The instance type on which the Reserved Instance can
--   be used.
--   
--   'product-description' - The product description of the Reserved
--   Instance ('Linux/UNIX' | 'Linux/UNIX (Amazon VPC)' | <a>Windows</a> |
--   'Windows (Amazon VPC)').
--   
--   'reserved-instances-id' - The ID of the Reserved Instance.
--   
--   <tt>start</tt> - The time at which the Reserved Instance purchase
--   request was placed (for example, 2014-08-07T11:54:42.000Z).
--   
--   <tt>state</tt> - The state of the Reserved Instance ('payment-pending'
--   | <tt>active</tt> | 'payment-failed' | <tt>retired</tt>).
--   
--   <a>tag</a>:<i>key</i>=<i>value</i> - The key/value combination of a
--   tag assigned to the resource.
--   
--   'tag-key' - The key of a tag assigned to the resource. This filter is
--   independent of the 'tag-value' filter. For example, if you use both
--   the filter "tag-key=Purpose" and the filter "tag-value=X", you get any
--   resources assigned both the tag key Purpose (regardless of what the
--   tag's value is), and the tag value X (regardless of what the tag's key
--   is). If you want to list only resources where Purpose is X, see the
--   <a>tag</a>:<i>key</i>=<i>value</i> filter.
--   
--   'tag-value' - The value of a tag assigned to the resource. This filter
--   is independent of the 'tag-key' filter.
--   
--   'usage-price' - The usage price of the Reserved Instance, per hour
--   (for example, 0.84).
driFilters :: Lens' DescribeReservedInstances [Filter]

-- | The Reserved Instance offering type. If you are using tools that
--   predate the 2011-11-01 API version, you only have access to the
--   'Medium Utilization' Reserved Instance offering type.
driOfferingType :: Lens' DescribeReservedInstances (Maybe OfferingTypeValues)

-- | One or more Reserved Instance IDs.
--   
--   Default: Describes all your Reserved Instances, or only those
--   otherwise specified.
driReservedInstancesIds :: Lens' DescribeReservedInstances [Text]
data DescribeReservedInstancesResponse

-- | <a>DescribeReservedInstancesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>drirReservedInstances</a> <tt>::</tt>
--   [<a>ReservedInstances</a>]</li>
--   </ul>
describeReservedInstancesResponse :: DescribeReservedInstancesResponse

-- | A list of Reserved Instances.
drirReservedInstances :: Lens' DescribeReservedInstancesResponse [ReservedInstances]
instance Eq DescribeReservedInstances
instance Read DescribeReservedInstances
instance Show DescribeReservedInstances
instance Eq DescribeReservedInstancesResponse
instance Read DescribeReservedInstancesResponse
instance Show DescribeReservedInstancesResponse
instance Monoid DescribeReservedInstancesResponse
instance Semigroup DescribeReservedInstancesResponse
instance FromXML DescribeReservedInstancesResponse
instance AWSRequest DescribeReservedInstances
instance ToHeaders DescribeReservedInstances
instance ToQuery DescribeReservedInstances
instance ToPath DescribeReservedInstances


-- | Describes one or more regions that are currently available to you.
--   
--   For a list of the regions supported by Amazon EC2, see <a>Regions and
--   Endpoints</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeRegions.html</a>
module Network.AWS.EC2.DescribeRegions
data DescribeRegions

-- | <a>DescribeRegions</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dr1DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dr1Filters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>dr1RegionNames</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeRegions :: DescribeRegions

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dr1DryRun :: Lens' DescribeRegions (Maybe Bool)

-- | One or more filters.
--   
--   <tt>endpoint</tt> - The endpoint of the region (for example,
--   'ec2.us-east-1.amazonaws.com').
--   
--   'region-name' - The name of the region (for example, 'us-east-1').
dr1Filters :: Lens' DescribeRegions [Filter]

-- | The names of one or more regions.
dr1RegionNames :: Lens' DescribeRegions [Text]
data DescribeRegionsResponse

-- | <a>DescribeRegionsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>drrRegions</a> <tt>::</tt> [<a>Region</a>]</li>
--   </ul>
describeRegionsResponse :: DescribeRegionsResponse

-- | Information about one or more regions.
drrRegions :: Lens' DescribeRegionsResponse [Region]
instance Eq DescribeRegions
instance Read DescribeRegions
instance Show DescribeRegions
instance Eq DescribeRegionsResponse
instance Read DescribeRegionsResponse
instance Show DescribeRegionsResponse
instance Monoid DescribeRegionsResponse
instance Semigroup DescribeRegionsResponse
instance FromXML DescribeRegionsResponse
instance AWSRequest DescribeRegions
instance ToHeaders DescribeRegions
instance ToQuery DescribeRegions
instance ToPath DescribeRegions


-- | Describes available AWS services in a prefix list format, which
--   includes the prefix list name and prefix list ID of the service and
--   the IP address range for the service. A prefix list ID is required for
--   creating an outbound security group rule that allows traffic from a
--   VPC to access an AWS service through a VPC endpoint.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribePrefixLists.html</a>
module Network.AWS.EC2.DescribePrefixLists
data DescribePrefixLists

-- | <a>DescribePrefixLists</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dplDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dplFilters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>dplMaxResults</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>dplNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dplPrefixListIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describePrefixLists :: DescribePrefixLists

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dplDryRun :: Lens' DescribePrefixLists (Maybe Bool)

-- | One or more filters.
--   
--   'prefix-list-id': The ID of a prefix list.
--   
--   'prefix-list-name': The name of a prefix list.
dplFilters :: Lens' DescribePrefixLists [Filter]

-- | The maximum number of items to return for this request. The request
--   returns a token that you can specify in a subsequent call to get the
--   next set of results.
--   
--   Constraint: If the value specified is greater than 1000, we return
--   only 1000 items.
dplMaxResults :: Lens' DescribePrefixLists (Maybe Int)

-- | The token for the next set of items to return. (You received this
--   token from a prior call.)
dplNextToken :: Lens' DescribePrefixLists (Maybe Text)

-- | One or more prefix list IDs.
dplPrefixListIds :: Lens' DescribePrefixLists [Text]
data DescribePrefixListsResponse

-- | <a>DescribePrefixListsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dplrNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dplrPrefixLists</a> <tt>::</tt> [<a>PrefixList</a>]</li>
--   </ul>
describePrefixListsResponse :: DescribePrefixListsResponse

-- | The token to use when requesting the next set of items. If there are
--   no additional items to return, the string is empty.
dplrNextToken :: Lens' DescribePrefixListsResponse (Maybe Text)

-- | All available prefix lists.
dplrPrefixLists :: Lens' DescribePrefixListsResponse [PrefixList]
instance Eq DescribePrefixLists
instance Read DescribePrefixLists
instance Show DescribePrefixLists
instance Eq DescribePrefixListsResponse
instance Read DescribePrefixListsResponse
instance Show DescribePrefixListsResponse
instance FromXML DescribePrefixListsResponse
instance AWSRequest DescribePrefixLists
instance ToHeaders DescribePrefixLists
instance ToQuery DescribePrefixLists
instance ToPath DescribePrefixLists


-- | Describes one or more of your placement groups. For more information
--   about placement groups and cluster instances, see <a>Cluster
--   Instances</a> in the <i>AmazonElastic Compute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribePlacementGroups.html</a>
module Network.AWS.EC2.DescribePlacementGroups
data DescribePlacementGroups

-- | <a>DescribePlacementGroups</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dpg1DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dpg1Filters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>dpg1GroupNames</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describePlacementGroups :: DescribePlacementGroups

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dpg1DryRun :: Lens' DescribePlacementGroups (Maybe Bool)

-- | One or more filters.
--   
--   'group-name' - The name of the placement group.
--   
--   <tt>state</tt> - The state of the placement group (<tt>pending</tt> |
--   <tt>available</tt> | <tt>deleting</tt> | <tt>deleted</tt>).
--   
--   <tt>strategy</tt> - The strategy of the placement group
--   (<tt>cluster</tt>).
dpg1Filters :: Lens' DescribePlacementGroups [Filter]

-- | One or more placement group names.
--   
--   Default: Describes all your placement groups, or only those otherwise
--   specified.
dpg1GroupNames :: Lens' DescribePlacementGroups [Text]
data DescribePlacementGroupsResponse

-- | <a>DescribePlacementGroupsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dpgrPlacementGroups</a> <tt>::</tt>
--   [<a>PlacementGroup</a>]</li>
--   </ul>
describePlacementGroupsResponse :: DescribePlacementGroupsResponse

-- | One or more placement groups.
dpgrPlacementGroups :: Lens' DescribePlacementGroupsResponse [PlacementGroup]
instance Eq DescribePlacementGroups
instance Read DescribePlacementGroups
instance Show DescribePlacementGroups
instance Eq DescribePlacementGroupsResponse
instance Read DescribePlacementGroupsResponse
instance Show DescribePlacementGroupsResponse
instance Monoid DescribePlacementGroupsResponse
instance Semigroup DescribePlacementGroupsResponse
instance FromXML DescribePlacementGroupsResponse
instance AWSRequest DescribePlacementGroups
instance ToHeaders DescribePlacementGroups
instance ToQuery DescribePlacementGroups
instance ToPath DescribePlacementGroups


-- | Describes one or more of your network interfaces.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeNetworkInterfaces.html</a>
module Network.AWS.EC2.DescribeNetworkInterfaces
data DescribeNetworkInterfaces

-- | <a>DescribeNetworkInterfaces</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dni1DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dni1Filters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>dni1NetworkInterfaceIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeNetworkInterfaces :: DescribeNetworkInterfaces

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dni1DryRun :: Lens' DescribeNetworkInterfaces (Maybe Bool)

-- | One or more filters.
--   
--   'addresses.private-ip-address' - The private IP addresses associated
--   with the network interface.
--   
--   'addresses.primary' - Whether the private IP address is the primary IP
--   address associated with the network interface.
--   
--   'addresses.association.public-ip' - The association ID returned when
--   the network interface was associated with the Elastic IP address.
--   
--   'addresses.association.owner-id' - The owner ID of the addresses
--   associated with the network interface.
--   
--   'association.association-id' - The association ID returned when the
--   network interface was associated with an IP address.
--   
--   'association.allocation-id' - The allocation ID returned when you
--   allocated the Elastic IP address for your network interface.
--   
--   'association.ip-owner-id' - The owner of the Elastic IP address
--   associated with the network interface.
--   
--   'association.public-ip' - The address of the Elastic IP address bound
--   to the network interface.
--   
--   'association.public-dns-name' - The public DNS name for the network
--   interface.
--   
--   'attachment.attachment-id' - The ID of the interface attachment.
--   
--   'attachment.instance-id' - The ID of the instance to which the network
--   interface is attached.
--   
--   'attachment.instance-owner-id' - The owner ID of the instance to which
--   the network interface is attached.
--   
--   'attachment.device-index' - The device index to which the network
--   interface is attached.
--   
--   'attachment.status' - The status of the attachment (<tt>attaching</tt>
--   | <tt>attached</tt> | <tt>detaching</tt> | <tt>detached</tt>).
--   
--   'attachment.attach.time' - The time that the network interface was
--   attached to an instance.
--   
--   'attachment.delete-on-termination' - Indicates whether the attachment
--   is deleted when an instance is terminated.
--   
--   'availability-zone' - The Availability Zone of the network interface.
--   
--   <tt>description</tt> - The description of the network interface.
--   
--   'group-id' - The ID of a security group associated with the network
--   interface.
--   
--   'group-name' - The name of a security group associated with the
--   network interface.
--   
--   'mac-address' - The MAC address of the network interface.
--   
--   'network-interface-id' - The ID of the network interface.
--   
--   'owner-id' - The AWS account ID of the network interface owner.
--   
--   'private-ip-address' - The private IP address or addresses of the
--   network interface.
--   
--   'private-dns-name' - The private DNS name of the network interface.
--   
--   'requester-id' - The ID of the entity that launched the instance on
--   your behalf (for example, AWS Management Console, Auto Scaling, and so
--   on).
--   
--   'requester-managed' - Indicates whether the network interface is being
--   managed by an AWS service (for example, AWS Management Console, Auto
--   Scaling, and so on).
--   
--   'source-desk-check' - Indicates whether the network interface performs
--   source/destination checking. A value of <tt>true</tt> means checking
--   is enabled, and <tt>false</tt> means checking is disabled. The value
--   must be <tt>false</tt> for the network interface to perform Network
--   Address Translation (NAT) in your VPC.
--   
--   <tt>status</tt> - The status of the network interface. If the network
--   interface is not attached to an instance, the status is
--   <tt>available</tt>; if a network interface is attached to an instance
--   the status is 'in-use'.
--   
--   'subnet-id' - The ID of the subnet for the network interface.
--   
--   <a>tag</a>:<i>key</i>=<i>value</i> - The key/value combination of a
--   tag assigned to the resource.
--   
--   'tag-key' - The key of a tag assigned to the resource. This filter is
--   independent of the 'tag-value' filter. For example, if you use both
--   the filter "tag-key=Purpose" and the filter "tag-value=X", you get any
--   resources assigned both the tag key Purpose (regardless of what the
--   tag's value is), and the tag value X (regardless of what the tag's key
--   is). If you want to list only resources where Purpose is X, see the
--   <a>tag</a>:<i>key</i>=<i>value</i> filter.
--   
--   'tag-value' - The value of a tag assigned to the resource. This filter
--   is independent of the 'tag-key' filter.
--   
--   'vpc-id' - The ID of the VPC for the network interface.
dni1Filters :: Lens' DescribeNetworkInterfaces [Filter]

-- | One or more network interface IDs.
--   
--   Default: Describes all your network interfaces.
dni1NetworkInterfaceIds :: Lens' DescribeNetworkInterfaces [Text]
data DescribeNetworkInterfacesResponse

-- | <a>DescribeNetworkInterfacesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dnirNetworkInterfaces</a> <tt>::</tt>
--   [<a>NetworkInterface</a>]</li>
--   </ul>
describeNetworkInterfacesResponse :: DescribeNetworkInterfacesResponse

-- | Information about one or more network interfaces.
dnirNetworkInterfaces :: Lens' DescribeNetworkInterfacesResponse [NetworkInterface]
instance Eq DescribeNetworkInterfaces
instance Read DescribeNetworkInterfaces
instance Show DescribeNetworkInterfaces
instance Eq DescribeNetworkInterfacesResponse
instance Read DescribeNetworkInterfacesResponse
instance Show DescribeNetworkInterfacesResponse
instance Monoid DescribeNetworkInterfacesResponse
instance Semigroup DescribeNetworkInterfacesResponse
instance FromXML DescribeNetworkInterfacesResponse
instance AWSRequest DescribeNetworkInterfaces
instance ToHeaders DescribeNetworkInterfaces
instance ToQuery DescribeNetworkInterfaces
instance ToPath DescribeNetworkInterfaces


-- | Describes a network interface attribute. You can specify only one
--   attribute at a time.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeNetworkInterfaceAttribute.html</a>
module Network.AWS.EC2.DescribeNetworkInterfaceAttribute
data DescribeNetworkInterfaceAttribute

-- | <a>DescribeNetworkInterfaceAttribute</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dniaAttribute</a> <tt>::</tt> <a>Maybe</a>
--   <a>NetworkInterfaceAttribute</a></li>
--   <li><a>dniaDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dniaNetworkInterfaceId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
describeNetworkInterfaceAttribute :: Text -> DescribeNetworkInterfaceAttribute

-- | The attribute of the network interface.
dniaAttribute :: Lens' DescribeNetworkInterfaceAttribute (Maybe NetworkInterfaceAttribute)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dniaDryRun :: Lens' DescribeNetworkInterfaceAttribute (Maybe Bool)

-- | The ID of the network interface.
dniaNetworkInterfaceId :: Lens' DescribeNetworkInterfaceAttribute Text
data DescribeNetworkInterfaceAttributeResponse

-- | <a>DescribeNetworkInterfaceAttributeResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dniarAttachment</a> <tt>::</tt> <a>Maybe</a>
--   <a>NetworkInterfaceAttachment</a></li>
--   <li><a>dniarDescription</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttributeValue</a></li>
--   <li><a>dniarGroups</a> <tt>::</tt> [<a>GroupIdentifier</a>]</li>
--   <li><a>dniarNetworkInterfaceId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>dniarSourceDestCheck</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttributeBooleanValue</a></li>
--   </ul>
describeNetworkInterfaceAttributeResponse :: DescribeNetworkInterfaceAttributeResponse

-- | The attachment (if any) of the network interface.
dniarAttachment :: Lens' DescribeNetworkInterfaceAttributeResponse (Maybe NetworkInterfaceAttachment)

-- | The description of the network interface.
dniarDescription :: Lens' DescribeNetworkInterfaceAttributeResponse (Maybe AttributeValue)

-- | The security groups associated with the network interface.
dniarGroups :: Lens' DescribeNetworkInterfaceAttributeResponse [GroupIdentifier]

-- | The ID of the network interface.
dniarNetworkInterfaceId :: Lens' DescribeNetworkInterfaceAttributeResponse (Maybe Text)

-- | Indicates whether source/destination checking is enabled.
dniarSourceDestCheck :: Lens' DescribeNetworkInterfaceAttributeResponse (Maybe AttributeBooleanValue)
instance Eq DescribeNetworkInterfaceAttribute
instance Read DescribeNetworkInterfaceAttribute
instance Show DescribeNetworkInterfaceAttribute
instance Eq DescribeNetworkInterfaceAttributeResponse
instance Read DescribeNetworkInterfaceAttributeResponse
instance Show DescribeNetworkInterfaceAttributeResponse
instance FromXML DescribeNetworkInterfaceAttributeResponse
instance AWSRequest DescribeNetworkInterfaceAttribute
instance ToHeaders DescribeNetworkInterfaceAttribute
instance ToQuery DescribeNetworkInterfaceAttribute
instance ToPath DescribeNetworkInterfaceAttribute


-- | Describes one or more of your network ACLs.
--   
--   For more information about network ACLs, see <a>Network ACLs</a> in
--   the <i>AmazonVirtual Private Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeNetworkAcls.html</a>
module Network.AWS.EC2.DescribeNetworkAcls
data DescribeNetworkAcls

-- | <a>DescribeNetworkAcls</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dna1DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dna1Filters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>dna1NetworkAclIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeNetworkAcls :: DescribeNetworkAcls

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dna1DryRun :: Lens' DescribeNetworkAcls (Maybe Bool)

-- | One or more filters.
--   
--   'association.association-id' - The ID of an association ID for the
--   ACL.
--   
--   'association.network-acl-id' - The ID of the network ACL involved in
--   the association.
--   
--   'association.subnet-id' - The ID of the subnet involved in the
--   association.
--   
--   'default' - Indicates whether the ACL is the default network ACL for
--   the VPC.
--   
--   'entry.cidr' - The CIDR range specified in the entry.
--   
--   'entry.egress' - Indicates whether the entry applies to egress
--   traffic.
--   
--   'entry.icmp.code' - The ICMP code specified in the entry, if any.
--   
--   'entry.icmp.type' - The ICMP type specified in the entry, if any.
--   
--   'entry.port-range.from' - The start of the port range specified in the
--   entry.
--   
--   'entry.port-range.to' - The end of the port range specified in the
--   entry.
--   
--   'entry.protocol' - The protocol specified in the entry (<tt>tcp</tt> |
--   <tt>udp</tt> | <tt>icmp</tt> or a protocol number).
--   
--   'entry.rule-action' - Allows or denies the matching traffic
--   (<tt>allow</tt> | <tt>deny</tt>).
--   
--   'entry.rule-number' - The number of an entry (in other words, rule) in
--   the ACL's set of entries.
--   
--   'network-acl-id' - The ID of the network ACL.
--   
--   <a>tag</a>:<i>key</i>=<i>value</i> - The key/value combination of a
--   tag assigned to the resource.
--   
--   'tag-key' - The key of a tag assigned to the resource. This filter is
--   independent of the 'tag-value' filter. For example, if you use both
--   the filter "tag-key=Purpose" and the filter "tag-value=X", you get any
--   resources assigned both the tag key Purpose (regardless of what the
--   tag's value is), and the tag value X (regardless of what the tag's key
--   is). If you want to list only resources where Purpose is X, see the
--   <a>tag</a>:<i>key</i>=<i>value</i> filter.
--   
--   'tag-value' - The value of a tag assigned to the resource. This filter
--   is independent of the 'tag-key' filter.
--   
--   'vpc-id' - The ID of the VPC for the network ACL.
dna1Filters :: Lens' DescribeNetworkAcls [Filter]

-- | One or more network ACL IDs.
--   
--   Default: Describes all your network ACLs.
dna1NetworkAclIds :: Lens' DescribeNetworkAcls [Text]
data DescribeNetworkAclsResponse

-- | <a>DescribeNetworkAclsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dnarNetworkAcls</a> <tt>::</tt> [<a>NetworkAcl</a>]</li>
--   </ul>
describeNetworkAclsResponse :: DescribeNetworkAclsResponse

-- | Information about one or more network ACLs.
dnarNetworkAcls :: Lens' DescribeNetworkAclsResponse [NetworkAcl]
instance Eq DescribeNetworkAcls
instance Read DescribeNetworkAcls
instance Show DescribeNetworkAcls
instance Eq DescribeNetworkAclsResponse
instance Read DescribeNetworkAclsResponse
instance Show DescribeNetworkAclsResponse
instance Monoid DescribeNetworkAclsResponse
instance Semigroup DescribeNetworkAclsResponse
instance FromXML DescribeNetworkAclsResponse
instance AWSRequest DescribeNetworkAcls
instance ToHeaders DescribeNetworkAcls
instance ToQuery DescribeNetworkAcls
instance ToPath DescribeNetworkAcls


-- | Describes your Elastic IP addresses that are being moved to the
--   EC2-VPC platform, or that are being restored to the EC2-Classic
--   platform. This request does not return information about any other
--   Elastic IP addresses in your account.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeMovingAddresses.html</a>
module Network.AWS.EC2.DescribeMovingAddresses
data DescribeMovingAddresses

-- | <a>DescribeMovingAddresses</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dmaDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dmaFilters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>dmaMaxResults</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>dmaNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dmaPublicIps</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeMovingAddresses :: DescribeMovingAddresses

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dmaDryRun :: Lens' DescribeMovingAddresses (Maybe Bool)

-- | One or more filters.
--   
--   'moving-status' - The status of the Elastic IP address
--   (<a>MovingToVpc</a> | <a>RestoringToClassic</a>).
dmaFilters :: Lens' DescribeMovingAddresses [Filter]

-- | The maximum number of results to return for the request in a single
--   page. The remaining results of the initial request can be seen by
--   sending another request with the returned <tt>NextToken</tt> value.
--   This value can be between 5 and 1000; if <tt>MaxResults</tt> is given
--   a value outside of this range, an error is returned.
--   
--   Default: If no value is provided, the default is 1000.
dmaMaxResults :: Lens' DescribeMovingAddresses (Maybe Int)

-- | The token to use to retrieve the next page of results.
dmaNextToken :: Lens' DescribeMovingAddresses (Maybe Text)

-- | One or more Elastic IP addresses.
dmaPublicIps :: Lens' DescribeMovingAddresses [Text]
data DescribeMovingAddressesResponse

-- | <a>DescribeMovingAddressesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dmarMovingAddressStatuses</a> <tt>::</tt>
--   [<a>MovingAddressStatus</a>]</li>
--   <li><a>dmarNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
describeMovingAddressesResponse :: DescribeMovingAddressesResponse

-- | The status for each Elastic IP address.
dmarMovingAddressStatuses :: Lens' DescribeMovingAddressesResponse [MovingAddressStatus]

-- | The token to use to retrieve the next page of results. This value is
--   <a>null</a> when there are no more results to return.
dmarNextToken :: Lens' DescribeMovingAddressesResponse (Maybe Text)
instance Eq DescribeMovingAddresses
instance Read DescribeMovingAddresses
instance Show DescribeMovingAddresses
instance Eq DescribeMovingAddressesResponse
instance Read DescribeMovingAddressesResponse
instance Show DescribeMovingAddressesResponse
instance FromXML DescribeMovingAddressesResponse
instance AWSRequest DescribeMovingAddresses
instance ToHeaders DescribeMovingAddresses
instance ToQuery DescribeMovingAddresses
instance ToPath DescribeMovingAddresses


-- | Describes one or more of your key pairs.
--   
--   For more information about key pairs, see <a>Key Pairs</a> in the
--   <i>Amazon ElasticCompute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeKeyPairs.html</a>
module Network.AWS.EC2.DescribeKeyPairs
data DescribeKeyPairs

-- | <a>DescribeKeyPairs</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dkp1DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dkp1Filters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>dkp1KeyNames</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeKeyPairs :: DescribeKeyPairs

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dkp1DryRun :: Lens' DescribeKeyPairs (Maybe Bool)

-- | One or more filters.
--   
--   <tt>fingerprint</tt> - The fingerprint of the key pair.
--   
--   'key-name' - The name of the key pair.
dkp1Filters :: Lens' DescribeKeyPairs [Filter]

-- | One or more key pair names.
--   
--   Default: Describes all your key pairs.
dkp1KeyNames :: Lens' DescribeKeyPairs [Text]
data DescribeKeyPairsResponse

-- | <a>DescribeKeyPairsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dkprKeyPairs</a> <tt>::</tt> [<a>KeyPairInfo</a>]</li>
--   </ul>
describeKeyPairsResponse :: DescribeKeyPairsResponse

-- | Information about one or more key pairs.
dkprKeyPairs :: Lens' DescribeKeyPairsResponse [KeyPairInfo]
instance Eq DescribeKeyPairs
instance Read DescribeKeyPairs
instance Show DescribeKeyPairs
instance Eq DescribeKeyPairsResponse
instance Read DescribeKeyPairsResponse
instance Show DescribeKeyPairsResponse
instance Monoid DescribeKeyPairsResponse
instance Semigroup DescribeKeyPairsResponse
instance FromXML DescribeKeyPairsResponse
instance AWSRequest DescribeKeyPairs
instance ToHeaders DescribeKeyPairs
instance ToQuery DescribeKeyPairs
instance ToPath DescribeKeyPairs


-- | Describes one or more of your Internet gateways.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeInternetGateways.html</a>
module Network.AWS.EC2.DescribeInternetGateways
data DescribeInternetGateways

-- | <a>DescribeInternetGateways</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dig1DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dig1Filters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>dig1InternetGatewayIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeInternetGateways :: DescribeInternetGateways

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dig1DryRun :: Lens' DescribeInternetGateways (Maybe Bool)

-- | One or more filters.
--   
--   'attachment.state' - The current state of the attachment between the
--   gateway and the VPC (<tt>available</tt>). Present only if a VPC is
--   attached.
--   
--   'attachment.vpc-id' - The ID of an attached VPC.
--   
--   'internet-gateway-id' - The ID of the Internet gateway.
--   
--   <a>tag</a>:<i>key</i>=<i>value</i> - The key/value combination of a
--   tag assigned to the resource.
--   
--   'tag-key' - The key of a tag assigned to the resource. This filter is
--   independent of the 'tag-value' filter. For example, if you use both
--   the filter "tag-key=Purpose" and the filter "tag-value=X", you get any
--   resources assigned both the tag key Purpose (regardless of what the
--   tag's value is), and the tag value X (regardless of what the tag's key
--   is). If you want to list only resources where Purpose is X, see the
--   <a>tag</a>:<i>key</i>=<i>value</i> filter.
--   
--   'tag-value' - The value of a tag assigned to the resource. This filter
--   is independent of the 'tag-key' filter.
dig1Filters :: Lens' DescribeInternetGateways [Filter]

-- | One or more Internet gateway IDs.
--   
--   Default: Describes all your Internet gateways.
dig1InternetGatewayIds :: Lens' DescribeInternetGateways [Text]
data DescribeInternetGatewaysResponse

-- | <a>DescribeInternetGatewaysResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>digrInternetGateways</a> <tt>::</tt>
--   [<a>InternetGateway</a>]</li>
--   </ul>
describeInternetGatewaysResponse :: DescribeInternetGatewaysResponse

-- | Information about one or more Internet gateways.
digrInternetGateways :: Lens' DescribeInternetGatewaysResponse [InternetGateway]
instance Eq DescribeInternetGateways
instance Read DescribeInternetGateways
instance Show DescribeInternetGateways
instance Eq DescribeInternetGatewaysResponse
instance Read DescribeInternetGatewaysResponse
instance Show DescribeInternetGatewaysResponse
instance Monoid DescribeInternetGatewaysResponse
instance Semigroup DescribeInternetGatewaysResponse
instance FromXML DescribeInternetGatewaysResponse
instance AWSRequest DescribeInternetGateways
instance ToHeaders DescribeInternetGateways
instance ToQuery DescribeInternetGateways
instance ToPath DescribeInternetGateways


-- | Describes one or more of your instances.
--   
--   If you specify one or more instance IDs, Amazon EC2 returns
--   information for those instances. If you do not specify instance IDs,
--   Amazon EC2 returns information for all relevant instances. If you
--   specify an instance ID that is not valid, an error is returned. If you
--   specify an instance that you do not own, it is not included in the
--   returned results.
--   
--   Recently terminated instances might appear in the returned results.
--   This interval is usually less than one hour.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeInstances.html</a>
module Network.AWS.EC2.DescribeInstances
data DescribeInstances

-- | <a>DescribeInstances</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>di1DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>di1Filters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>di1InstanceIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>di1MaxResults</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>di1NextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
describeInstances :: DescribeInstances

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
di1DryRun :: Lens' DescribeInstances (Maybe Bool)

-- | One or more filters.
--   
--   <tt>architecture</tt> - The instance architecture (<tt>i386</tt> |
--   <tt>x86_64</tt>).
--   
--   'availability-zone' - The Availability Zone of the instance.
--   
--   'block-device-mapping.attach-time' - The attach time for an EBS volume
--   mapped to the instance, for example, '2010-09-15T17:15:20.000Z'.
--   
--   'block-device-mapping.delete-on-termination' - A Boolean that
--   indicates whether the EBS volume is deleted on instance termination.
--   
--   'block-device-mapping.device-name' - The device name for the EBS
--   volume (for example, '/dev/sdh' or <tt>xvdh</tt>).
--   
--   'block-device-mapping.status' - The status for the EBS volume
--   (<tt>attaching</tt> | <tt>attached</tt> | <tt>detaching</tt> |
--   <tt>detached</tt>).
--   
--   'block-device-mapping.volume-id' - The volume ID of the EBS volume.
--   
--   'client-token' - The idempotency token you provided when you launched
--   the instance.
--   
--   'dns-name' - The public DNS name of the instance.
--   
--   'group-id' - The ID of the security group for the instance.
--   EC2-Classic only.
--   
--   'group-name' - The name of the security group for the instance.
--   EC2-Classic only.
--   
--   <tt>hypervisor</tt> - The hypervisor type of the instance
--   (<tt>ovm</tt> | <tt>xen</tt>).
--   
--   'iam-instance-profile.arn' - The instance profile associated with the
--   instance. Specified as an ARN.
--   
--   'image-id' - The ID of the image used to launch the instance.
--   
--   'instance-id' - The ID of the instance.
--   
--   'instance-lifecycle' - Indicates whether this is a Spot Instance
--   (<tt>spot</tt>).
--   
--   'instance-state-code' - The state of the instance, as a 16-bit
--   unsigned integer. The high byte is an opaque internal value and should
--   be ignored. The low byte is set based on the state represented. The
--   valid values are: 0 (pending), 16 (running), 32 (shutting-down), 48
--   (terminated), 64 (stopping), and 80 (stopped).
--   
--   'instance-state-name' - The state of the instance (<tt>pending</tt> |
--   <tt>running</tt> | 'shutting-down' | <tt>terminated</tt> |
--   <tt>stopping</tt> | <tt>stopped</tt>).
--   
--   'instance-type' - The type of instance (for example, 't2.micro').
--   
--   'instance.group-id' - The ID of the security group for the instance.
--   
--   'instance.group-name' - The name of the security group for the
--   instance.
--   
--   'ip-address' - The public IP address of the instance.
--   
--   'kernel-id' - The kernel ID.
--   
--   'key-name' - The name of the key pair used when the instance was
--   launched.
--   
--   'launch-index' - When launching multiple instances, this is the index
--   for the instance in the launch group (for example, 0, 1, 2, and so
--   on).
--   
--   'launch-time' - The time when the instance was launched.
--   
--   'monitoring-state' - Indicates whether monitoring is enabled for the
--   instance (<tt>disabled</tt> | <tt>enabled</tt>).
--   
--   'owner-id' - The AWS account ID of the instance owner.
--   
--   'placement-group-name' - The name of the placement group for the
--   instance.
--   
--   <tt>platform</tt> - The platform. Use <tt>windows</tt> if you have
--   Windows instances; otherwise, leave blank.
--   
--   'private-dns-name' - The private DNS name of the instance.
--   
--   'private-ip-address' - The private IP address of the instance.
--   
--   'product-code' - The product code associated with the AMI used to
--   launch the instance.
--   
--   'product-code.type' - The type of product code (<tt>devpay</tt> |
--   <tt>marketplace</tt>).
--   
--   'ramdisk-id' - The RAM disk ID.
--   
--   <tt>reason</tt> - The reason for the current state of the instance
--   (for example, shows "User Initiated [date]" when you stop or terminate
--   the instance). Similar to the state-reason-code filter.
--   
--   'requester-id' - The ID of the entity that launched the instance on
--   your behalf (for example, AWS Management Console, Auto Scaling, and so
--   on).
--   
--   'reservation-id' - The ID of the instance's reservation. A reservation
--   ID is created any time you launch an instance. A reservation ID has a
--   one-to-one relationship with an instance launch request, but can be
--   associated with more than one instance if you launch multiple
--   instances using the same launch request. For example, if you launch
--   one instance, you'll get one reservation ID. If you launch ten
--   instances using the same launch request, you'll also get one
--   reservation ID.
--   
--   'root-device-name' - The name of the root device for the instance (for
--   example, '/dev/sda1' or '/dev/xvda').
--   
--   'root-device-type' - The type of root device that the instance uses
--   (<tt>ebs</tt> | 'instance-store').
--   
--   'source-dest-check' - Indicates whether the instance performs
--   source/destination checking. A value of <tt>true</tt> means that
--   checking is enabled, and <tt>false</tt> means checking is disabled.
--   The value must be <tt>false</tt> for the instance to perform network
--   address translation (NAT) in your VPC.
--   
--   'spot-instance-request-id' - The ID of the Spot Instance request.
--   
--   'state-reason-code' - The reason code for the state change.
--   
--   'state-reason-message' - A message that describes the state change.
--   
--   'subnet-id' - The ID of the subnet for the instance.
--   
--   <a>tag</a>:<i>key</i>=<i>value</i> - The key/value combination of a
--   tag assigned to the resource, where <a>tag</a>:<i>key</i> is the tag's
--   key.
--   
--   'tag-key' - The key of a tag assigned to the resource. This filter is
--   independent of the 'tag-value' filter. For example, if you use both
--   the filter "tag-key=Purpose" and the filter "tag-value=X", you get any
--   resources assigned both the tag key Purpose (regardless of what the
--   tag's value is), and the tag value X (regardless of what the tag's key
--   is). If you want to list only resources where Purpose is X, see the
--   <a>tag</a>:<i>key</i>=<i>value</i> filter.
--   
--   'tag-value' - The value of a tag assigned to the resource. This filter
--   is independent of the 'tag-key' filter.
--   
--   <tt>tenancy</tt> - The tenancy of an instance (<tt>dedicated</tt> |
--   'default').
--   
--   'virtualization-type' - The virtualization type of the instance
--   (<tt>paravirtual</tt> | <tt>hvm</tt>).
--   
--   'vpc-id' - The ID of the VPC that the instance is running in.
--   
--   'network-interface.description' - The description of the network
--   interface.
--   
--   'network-interface.subnet-id' - The ID of the subnet for the network
--   interface.
--   
--   'network-interface.vpc-id' - The ID of the VPC for the network
--   interface.
--   
--   'network-interface.network-interface.id' - The ID of the network
--   interface.
--   
--   'network-interface.owner-id' - The ID of the owner of the network
--   interface.
--   
--   'network-interface.availability-zone' - The Availability Zone for the
--   network interface.
--   
--   'network-interface.requester-id' - The requester ID for the network
--   interface.
--   
--   'network-interface.requester-managed' - Indicates whether the network
--   interface is being managed by AWS.
--   
--   'network-interface.status' - The status of the network interface
--   (<tt>available</tt>) | 'in-use').
--   
--   'network-interface.mac-address' - The MAC address of the network
--   interface.
--   
--   'network-interface-private-dns-name' - The private DNS name of the
--   network interface.
--   
--   'network-interface.source-dest-check' - Whether the network interface
--   performs source/destination checking. A value of <tt>true</tt> means
--   checking is enabled, and <tt>false</tt> means checking is disabled.
--   The value must be <tt>false</tt> for the network interface to perform
--   network address translation (NAT) in your VPC.
--   
--   'network-interface.group-id' - The ID of a security group associated
--   with the network interface.
--   
--   'network-interface.group-name' - The name of a security group
--   associated with the network interface.
--   
--   'network-interface.attachment.attachment-id' - The ID of the interface
--   attachment.
--   
--   'network-interface.attachment.instance-id' - The ID of the instance to
--   which the network interface is attached.
--   
--   'network-interface.attachment.instance-owner-id' - The owner ID of the
--   instance to which the network interface is attached.
--   
--   'network-interface.addresses.private-ip-address' - The private IP
--   address associated with the network interface.
--   
--   'network-interface.attachment.device-index' - The device index to
--   which the network interface is attached.
--   
--   'network-interface.attachment.status' - The status of the attachment
--   (<tt>attaching</tt> | <tt>attached</tt> | <tt>detaching</tt> |
--   <tt>detached</tt>).
--   
--   'network-interface.attachment.attach-time' - The time that the network
--   interface was attached to an instance.
--   
--   'network-interface.attachment.delete-on-termination' - Specifies
--   whether the attachment is deleted when an instance is terminated.
--   
--   'network-interface.addresses.primary' - Specifies whether the IP
--   address of the network interface is the primary private IP address.
--   
--   'network-interface.addresses.association.public-ip' - The ID of the
--   association of an Elastic IP address with a network interface.
--   
--   'network-interface.addresses.association.ip-owner-id' - The owner ID
--   of the private IP address associated with the network interface.
--   
--   'association.public-ip' - The address of the Elastic IP address bound
--   to the network interface.
--   
--   'association.ip-owner-id' - The owner of the Elastic IP address
--   associated with the network interface.
--   
--   'association.allocation-id' - The allocation ID returned when you
--   allocated the Elastic IP address for your network interface.
--   
--   'association.association-id' - The association ID returned when the
--   network interface was associated with an IP address.
di1Filters :: Lens' DescribeInstances [Filter]

-- | One or more instance IDs.
--   
--   Default: Describes all your instances.
di1InstanceIds :: Lens' DescribeInstances [Text]

-- | The maximum number of results to return for the request in a single
--   page. The remaining results of the initial request can be seen by
--   sending another request with the returned <tt>NextToken</tt> value.
--   This value can be between 5 and 1000; if <tt>MaxResults</tt> is given
--   a value larger than 1000, only 1000 results are returned. You cannot
--   specify this parameter and the instance IDs parameter in the same
--   request.
di1MaxResults :: Lens' DescribeInstances (Maybe Int)

-- | The token to request the next page of results.
di1NextToken :: Lens' DescribeInstances (Maybe Text)
data DescribeInstancesResponse

-- | <a>DescribeInstancesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dirNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dirReservations</a> <tt>::</tt> [<a>Reservation</a>]</li>
--   </ul>
describeInstancesResponse :: DescribeInstancesResponse

-- | The token to use to retrieve the next page of results. This value is
--   <a>null</a> when there are no more results to return.
dirNextToken :: Lens' DescribeInstancesResponse (Maybe Text)

-- | One or more reservations.
dirReservations :: Lens' DescribeInstancesResponse [Reservation]
instance Eq DescribeInstances
instance Read DescribeInstances
instance Show DescribeInstances
instance Eq DescribeInstancesResponse
instance Read DescribeInstancesResponse
instance Show DescribeInstancesResponse
instance AWSPager DescribeInstances
instance FromXML DescribeInstancesResponse
instance AWSRequest DescribeInstances
instance ToHeaders DescribeInstances
instance ToQuery DescribeInstances
instance ToPath DescribeInstances


-- | Describes the status of one or more instances.
--   
--   Instance status includes the following components:
--   
--   Status checks - Amazon EC2 performs status checks on running EC2
--   instances to identify hardware and software issues. For more
--   information, see <a>StatusChecks for Your Instances</a> and
--   <a>Troubleshooting Instances with Failed StatusChecks</a> in the
--   <i>Amazon Elastic Compute Cloud User Guide</i>.
--   
--   Scheduled events - Amazon EC2 can schedule events (such as reboot,
--   stop, or terminate) for your instances related to hardware issues,
--   software updates, or system maintenance. For more information, see
--   <a>Scheduled Eventsfor Your Instances</a> in the <i>Amazon Elastic
--   Compute Cloud User Guide</i>.
--   
--   Instance state - You can manage your instances from the moment you
--   launch them through their termination. For more information, see
--   <a>Instance Lifecycle</a> in the <i>Amazon Elastic Compute Cloud User
--   Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeInstanceStatus.html</a>
module Network.AWS.EC2.DescribeInstanceStatus
data DescribeInstanceStatus

-- | <a>DescribeInstanceStatus</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>disDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>disFilters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>disIncludeAllInstances</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>disInstanceIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>disMaxResults</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>disNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
describeInstanceStatus :: DescribeInstanceStatus

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
disDryRun :: Lens' DescribeInstanceStatus (Maybe Bool)

-- | One or more filters.
--   
--   'availability-zone' - The Availability Zone of the instance.
--   
--   'event.code' - The code for the scheduled event ('instance-reboot' |
--   'system-reboot' | 'system-maintenance' | 'instance-retirement' |
--   'instance-stop').
--   
--   'event.description' - A description of the event.
--   
--   'event.not-after' - The latest end time for the scheduled event (for
--   example, '2014-09-15T17:15:20.000Z').
--   
--   'event.not-before' - The earliest start time for the scheduled event
--   (for example, '2014-09-15T17:15:20.000Z').
--   
--   'instance-state-code' - The code for the instance state, as a 16-bit
--   unsigned integer. The high byte is an opaque internal value and should
--   be ignored. The low byte is set based on the state represented. The
--   valid values are 0 (pending), 16 (running), 32 (shutting-down), 48
--   (terminated), 64 (stopping), and 80 (stopped).
--   
--   'instance-state-name' - The state of the instance (<tt>pending</tt> |
--   <tt>running</tt> | 'shutting-down' | <tt>terminated</tt> |
--   <tt>stopping</tt> | <tt>stopped</tt>).
--   
--   'instance-status.reachability' - Filters on instance status where the
--   name is <tt>reachability</tt> (<tt>passed</tt> | <tt>failed</tt> |
--   <tt>initializing</tt> | 'insufficient-data').
--   
--   'instance-status.status' - The status of the instance (<tt>ok</tt> |
--   <tt>impaired</tt> | <tt>initializing</tt> | 'insufficient-data' |
--   'not-applicable').
--   
--   'system-status.reachability' - Filters on system status where the name
--   is <tt>reachability</tt> (<tt>passed</tt> | <tt>failed</tt> |
--   <tt>initializing</tt> | 'insufficient-data').
--   
--   'system-status.status' - The system status of the instance
--   (<tt>ok</tt> | <tt>impaired</tt> | <tt>initializing</tt> |
--   'insufficient-data' | 'not-applicable').
disFilters :: Lens' DescribeInstanceStatus [Filter]

-- | When <tt>true</tt>, includes the health status for all instances. When
--   <tt>false</tt>, includes the health status for running instances only.
--   
--   Default: <tt>false</tt>
disIncludeAllInstances :: Lens' DescribeInstanceStatus (Maybe Bool)

-- | One or more instance IDs.
--   
--   Default: Describes all your instances.
--   
--   Constraints: Maximum 100 explicitly specified instance IDs.
disInstanceIds :: Lens' DescribeInstanceStatus [Text]

-- | The maximum number of results to return for the request in a single
--   page. The remaining results of the initial request can be seen by
--   sending another request with the returned <tt>NextToken</tt> value.
--   This value can be between 5 and 1000; if <tt>MaxResults</tt> is given
--   a value larger than 1000, only 1000 results are returned. You cannot
--   specify this parameter and the instance IDs parameter in the same
--   request.
disMaxResults :: Lens' DescribeInstanceStatus (Maybe Int)

-- | The token to retrieve the next page of results.
disNextToken :: Lens' DescribeInstanceStatus (Maybe Text)
data DescribeInstanceStatusResponse

-- | <a>DescribeInstanceStatusResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>disrInstanceStatuses</a> <tt>::</tt>
--   [<a>InstanceStatus</a>]</li>
--   <li><a>disrNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
describeInstanceStatusResponse :: DescribeInstanceStatusResponse

-- | One or more instance status descriptions.
disrInstanceStatuses :: Lens' DescribeInstanceStatusResponse [InstanceStatus]

-- | The token to use to retrieve the next page of results. This value is
--   <a>null</a> when there are no more results to return.
disrNextToken :: Lens' DescribeInstanceStatusResponse (Maybe Text)
instance Eq DescribeInstanceStatus
instance Read DescribeInstanceStatus
instance Show DescribeInstanceStatus
instance Eq DescribeInstanceStatusResponse
instance Read DescribeInstanceStatusResponse
instance Show DescribeInstanceStatusResponse
instance AWSPager DescribeInstanceStatus
instance FromXML DescribeInstanceStatusResponse
instance AWSRequest DescribeInstanceStatus
instance ToHeaders DescribeInstanceStatus
instance ToQuery DescribeInstanceStatus
instance ToPath DescribeInstanceStatus


-- | Describes the specified attribute of the specified instance. You can
--   specify only one attribute at a time. Valid attribute values are:
--   <tt>instanceType</tt> | <tt>kernel</tt> | <tt>ramdisk</tt> |
--   <a>userData</a> | <tt>disableApiTermination</tt> |
--   <tt>instanceInitiatedShutdownBehavior</tt> | <tt>rootDeviceName</tt> |
--   <a>blockDeviceMapping</a> | <tt>productCodes</tt> |
--   <tt>sourceDestCheck</tt> | <tt>groupSet</tt> | <tt>ebsOptimized</tt> |
--   <tt>sriovNetSupport</tt>
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeInstanceAttribute.html</a>
module Network.AWS.EC2.DescribeInstanceAttribute
data DescribeInstanceAttribute

-- | <a>DescribeInstanceAttribute</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>diaAttribute</a> <tt>::</tt> <a>InstanceAttributeName</a></li>
--   <li><a>diaDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>diaInstanceId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
describeInstanceAttribute :: Text -> InstanceAttributeName -> DescribeInstanceAttribute

-- | The instance attribute.
diaAttribute :: Lens' DescribeInstanceAttribute InstanceAttributeName

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
diaDryRun :: Lens' DescribeInstanceAttribute (Maybe Bool)

-- | The ID of the instance.
diaInstanceId :: Lens' DescribeInstanceAttribute Text
data DescribeInstanceAttributeResponse

-- | <a>DescribeInstanceAttributeResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>diar1BlockDeviceMappings</a> <tt>::</tt>
--   [<a>InstanceBlockDeviceMapping</a>]</li>
--   <li><a>diar1DisableApiTermination</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttributeBooleanValue</a></li>
--   <li><a>diar1EbsOptimized</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttributeBooleanValue</a></li>
--   <li><a>diar1Groups</a> <tt>::</tt> [<a>GroupIdentifier</a>]</li>
--   <li><a>diar1InstanceId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>diar1InstanceInitiatedShutdownBehavior</a> <tt>::</tt>
--   <a>Maybe</a> <a>AttributeValue</a></li>
--   <li><a>diar1InstanceType</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttributeValue</a></li>
--   <li><a>diar1KernelId</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttributeValue</a></li>
--   <li><a>diar1ProductCodes</a> <tt>::</tt> [<a>ProductCode</a>]</li>
--   <li><a>diar1RamdiskId</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttributeValue</a></li>
--   <li><a>diar1RootDeviceName</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttributeValue</a></li>
--   <li><a>diar1SourceDestCheck</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttributeBooleanValue</a></li>
--   <li><a>diar1SriovNetSupport</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttributeValue</a></li>
--   <li><a>diar1UserData</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttributeValue</a></li>
--   </ul>
describeInstanceAttributeResponse :: DescribeInstanceAttributeResponse

-- | The block device mapping of the instance.
diar1BlockDeviceMappings :: Lens' DescribeInstanceAttributeResponse [InstanceBlockDeviceMapping]

-- | If the value is <tt>true</tt>, you can't terminate the instance
--   through the Amazon EC2 console, CLI, or API; otherwise, you can.
diar1DisableApiTermination :: Lens' DescribeInstanceAttributeResponse (Maybe AttributeBooleanValue)

-- | Indicates whether the instance is optimized for EBS I/O.
diar1EbsOptimized :: Lens' DescribeInstanceAttributeResponse (Maybe AttributeBooleanValue)

-- | The security groups associated with the instance.
diar1Groups :: Lens' DescribeInstanceAttributeResponse [GroupIdentifier]

-- | The ID of the instance.
diar1InstanceId :: Lens' DescribeInstanceAttributeResponse (Maybe Text)

-- | Indicates whether an instance stops or terminates when you initiate
--   shutdown from the instance (using the operating system command for
--   system shutdown).
diar1InstanceInitiatedShutdownBehavior :: Lens' DescribeInstanceAttributeResponse (Maybe AttributeValue)

-- | The instance type.
diar1InstanceType :: Lens' DescribeInstanceAttributeResponse (Maybe AttributeValue)

-- | The kernel ID.
diar1KernelId :: Lens' DescribeInstanceAttributeResponse (Maybe AttributeValue)

-- | A list of product codes.
diar1ProductCodes :: Lens' DescribeInstanceAttributeResponse [ProductCode]

-- | The RAM disk ID.
diar1RamdiskId :: Lens' DescribeInstanceAttributeResponse (Maybe AttributeValue)

-- | The name of the root device (for example, '/dev/sda1' or '/dev/xvda').
diar1RootDeviceName :: Lens' DescribeInstanceAttributeResponse (Maybe AttributeValue)

-- | Indicates whether source/destination checking is enabled. A value of
--   <tt>true</tt> means checking is enabled, and <tt>false</tt> means
--   checking is disabled. This value must be <tt>false</tt> for a NAT
--   instance to perform NAT.
diar1SourceDestCheck :: Lens' DescribeInstanceAttributeResponse (Maybe AttributeBooleanValue)
diar1SriovNetSupport :: Lens' DescribeInstanceAttributeResponse (Maybe AttributeValue)

-- | The Base64-encoded MIME user data.
diar1UserData :: Lens' DescribeInstanceAttributeResponse (Maybe AttributeValue)
instance Eq DescribeInstanceAttribute
instance Read DescribeInstanceAttribute
instance Show DescribeInstanceAttribute
instance Eq DescribeInstanceAttributeResponse
instance Read DescribeInstanceAttributeResponse
instance Show DescribeInstanceAttributeResponse
instance FromXML DescribeInstanceAttributeResponse
instance AWSRequest DescribeInstanceAttribute
instance ToHeaders DescribeInstanceAttribute
instance ToQuery DescribeInstanceAttribute
instance ToPath DescribeInstanceAttribute


-- | Describes your import snapshot tasks.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeImportSnapshotTasks.html</a>
module Network.AWS.EC2.DescribeImportSnapshotTasks
data DescribeImportSnapshotTasks

-- | <a>DescribeImportSnapshotTasks</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>distDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>distFilters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>distImportTaskIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>distMaxResults</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>distNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
describeImportSnapshotTasks :: DescribeImportSnapshotTasks

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
distDryRun :: Lens' DescribeImportSnapshotTasks (Maybe Bool)

-- | One or more filters.
distFilters :: Lens' DescribeImportSnapshotTasks [Filter]

-- | A list of import snapshot task IDs.
distImportTaskIds :: Lens' DescribeImportSnapshotTasks [Text]

-- | The maximum number of results to return in a single request.
distMaxResults :: Lens' DescribeImportSnapshotTasks (Maybe Int)

-- | A token that indicates the next page of results.
distNextToken :: Lens' DescribeImportSnapshotTasks (Maybe Text)
data DescribeImportSnapshotTasksResponse

-- | <a>DescribeImportSnapshotTasksResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>distrImportSnapshotTasks</a> <tt>::</tt>
--   [<a>ImportSnapshotTask</a>]</li>
--   <li><a>distrNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
describeImportSnapshotTasksResponse :: DescribeImportSnapshotTasksResponse

-- | A list of zero or more import snapshot tasks that are currently active
--   or were completed or canceled in the previous 7 days.
distrImportSnapshotTasks :: Lens' DescribeImportSnapshotTasksResponse [ImportSnapshotTask]

-- | The token to use to get the next page of results. This value is
--   <a>null</a> when there are no more results to return.
distrNextToken :: Lens' DescribeImportSnapshotTasksResponse (Maybe Text)
instance Eq DescribeImportSnapshotTasks
instance Read DescribeImportSnapshotTasks
instance Show DescribeImportSnapshotTasks
instance Eq DescribeImportSnapshotTasksResponse
instance Read DescribeImportSnapshotTasksResponse
instance Show DescribeImportSnapshotTasksResponse
instance FromXML DescribeImportSnapshotTasksResponse
instance AWSRequest DescribeImportSnapshotTasks
instance ToHeaders DescribeImportSnapshotTasks
instance ToQuery DescribeImportSnapshotTasks
instance ToPath DescribeImportSnapshotTasks


-- | Displays details about an import virtual machine or import snapshot
--   tasks that are already created.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeImportImageTasks.html</a>
module Network.AWS.EC2.DescribeImportImageTasks
data DescribeImportImageTasks

-- | <a>DescribeImportImageTasks</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>diitDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>diitFilters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>diitImportTaskIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>diitMaxResults</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>diitNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
describeImportImageTasks :: DescribeImportImageTasks

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
diitDryRun :: Lens' DescribeImportImageTasks (Maybe Bool)

-- | One or more filters.
diitFilters :: Lens' DescribeImportImageTasks [Filter]

-- | A list of import image task IDs.
diitImportTaskIds :: Lens' DescribeImportImageTasks [Text]

-- | The maximum number of results to return in a single request.
diitMaxResults :: Lens' DescribeImportImageTasks (Maybe Int)

-- | A token that indicates the next page of results.
diitNextToken :: Lens' DescribeImportImageTasks (Maybe Text)
data DescribeImportImageTasksResponse

-- | <a>DescribeImportImageTasksResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>diitrImportImageTasks</a> <tt>::</tt>
--   [<a>ImportImageTask</a>]</li>
--   <li><a>diitrNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
describeImportImageTasksResponse :: DescribeImportImageTasksResponse

-- | A list of zero or more import image tasks that are currently active or
--   were completed or canceled in the previous 7 days.
diitrImportImageTasks :: Lens' DescribeImportImageTasksResponse [ImportImageTask]

-- | The token to use to get the next page of results. This value is
--   <a>null</a> when there are no more results to return.
diitrNextToken :: Lens' DescribeImportImageTasksResponse (Maybe Text)
instance Eq DescribeImportImageTasks
instance Read DescribeImportImageTasks
instance Show DescribeImportImageTasks
instance Eq DescribeImportImageTasksResponse
instance Read DescribeImportImageTasksResponse
instance Show DescribeImportImageTasksResponse
instance FromXML DescribeImportImageTasksResponse
instance AWSRequest DescribeImportImageTasks
instance ToHeaders DescribeImportImageTasks
instance ToQuery DescribeImportImageTasks
instance ToPath DescribeImportImageTasks


-- | Describes one or more of the images (AMIs, AKIs, and ARIs) available
--   to you. Images available to you include public images, private images
--   that you own, and private images owned by other AWS accounts but for
--   which you have explicit launch permissions.
--   
--   Deregistered images are included in the returned results for an
--   unspecified interval after deregistration.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeImages.html</a>
module Network.AWS.EC2.DescribeImages
data DescribeImages

-- | <a>DescribeImages</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>di2DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>di2ExecutableUsers</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>di2Filters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>di2ImageIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>di2Owners</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeImages :: DescribeImages

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
di2DryRun :: Lens' DescribeImages (Maybe Bool)

-- | Scopes the images by users with explicit launch permissions. Specify
--   an AWS account ID, <tt>self</tt> (the sender of the request), or
--   <a>all</a> (public AMIs).
di2ExecutableUsers :: Lens' DescribeImages [Text]

-- | One or more filters.
--   
--   <tt>architecture</tt> - The image architecture (<tt>i386</tt> |
--   <tt>x86_64</tt>).
--   
--   'block-device-mapping.delete-on-termination' - A Boolean value that
--   indicates whether the Amazon EBS volume is deleted on instance
--   termination.
--   
--   'block-device-mapping.device-name' - The device name for the EBS
--   volume (for example, '/dev/sdh').
--   
--   'block-device-mapping.snapshot-id' - The ID of the snapshot used for
--   the EBS volume.
--   
--   'block-device-mapping.volume-size' - The volume size of the EBS
--   volume, in GiB.
--   
--   'block-device-mapping.volume-type' - The volume type of the EBS volume
--   (<tt>gp2</tt> | <tt>standard</tt> | <tt>io1</tt>).
--   
--   <tt>description</tt> - The description of the image (provided during
--   image creation).
--   
--   <tt>hypervisor</tt> - The hypervisor type (<tt>ovm</tt> |
--   <tt>xen</tt>).
--   
--   'image-id' - The ID of the image.
--   
--   'image-type' - The image type (<tt>machine</tt> | <tt>kernel</tt> |
--   <tt>ramdisk</tt>).
--   
--   'is-public' - A Boolean that indicates whether the image is public.
--   
--   'kernel-id' - The kernel ID.
--   
--   'manifest-location' - The location of the image manifest.
--   
--   <tt>name</tt> - The name of the AMI (provided during image creation).
--   
--   'owner-alias' - The AWS account alias (for example, <tt>amazon</tt>).
--   
--   'owner-id' - The AWS account ID of the image owner.
--   
--   <tt>platform</tt> - The platform. To only list Windows-based AMIs, use
--   <tt>windows</tt>.
--   
--   'product-code' - The product code.
--   
--   'product-code.type' - The type of the product code (<tt>devpay</tt> |
--   <tt>marketplace</tt>).
--   
--   'ramdisk-id' - The RAM disk ID.
--   
--   'root-device-name' - The name of the root device volume (for example,
--   '/dev/sda1').
--   
--   'root-device-type' - The type of the root device volume (<tt>ebs</tt>
--   | 'instance-store' ).
--   
--   <tt>state</tt> - The state of the image (<tt>available</tt> |
--   <tt>pending</tt> | <tt>failed</tt>).
--   
--   'state-reason-code' - The reason code for the state change.
--   
--   'state-reason-message' - The message for the state change.
--   
--   <a>tag</a>:<i>key</i>=<i>value</i> - The key/value combination of a
--   tag assigned to the resource.
--   
--   'tag-key' - The key of a tag assigned to the resource. This filter is
--   independent of the tag-value filter. For example, if you use both the
--   filter "tag-key=Purpose" and the filter "tag-value=X", you get any
--   resources assigned both the tag key Purpose (regardless of what the
--   tag's value is), and the tag value X (regardless of what the tag's key
--   is). If you want to list only resources where Purpose is X, see the
--   <a>tag</a>:<i>key</i>=<i>value</i> filter.
--   
--   'tag-value' - The value of a tag assigned to the resource. This filter
--   is independent of the 'tag-key' filter.
--   
--   'virtualization-type' - The virtualization type (<tt>paravirtual</tt>
--   | <tt>hvm</tt>).
di2Filters :: Lens' DescribeImages [Filter]

-- | One or more image IDs.
--   
--   Default: Describes all images available to you.
di2ImageIds :: Lens' DescribeImages [Text]

-- | Filters the images by the owner. Specify an AWS account ID,
--   <tt>amazon</tt> (owner is Amazon), 'aws-marketplace' (owner is AWS
--   Marketplace), <tt>self</tt> (owner is the sender of the request).
--   Omitting this option returns all images for which you have launch
--   permissions, regardless of ownership.
di2Owners :: Lens' DescribeImages [Text]
data DescribeImagesResponse

-- | <a>DescribeImagesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dirImages</a> <tt>::</tt> [<a>Image</a>]</li>
--   </ul>
describeImagesResponse :: DescribeImagesResponse

-- | Information about one or more images.
dirImages :: Lens' DescribeImagesResponse [Image]
instance Eq DescribeImages
instance Read DescribeImages
instance Show DescribeImages
instance Eq DescribeImagesResponse
instance Read DescribeImagesResponse
instance Show DescribeImagesResponse
instance Monoid DescribeImagesResponse
instance Semigroup DescribeImagesResponse
instance FromXML DescribeImagesResponse
instance AWSRequest DescribeImages
instance ToHeaders DescribeImages
instance ToQuery DescribeImages
instance ToPath DescribeImages


-- | Describes the specified attribute of the specified AMI. You can
--   specify only one attribute at a time.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeImageAttribute.html</a>
module Network.AWS.EC2.DescribeImageAttribute
data DescribeImageAttribute

-- | <a>DescribeImageAttribute</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dia1Attribute</a> <tt>::</tt> <a>ImageAttributeName</a></li>
--   <li><a>dia1DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dia1ImageId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
describeImageAttribute :: Text -> ImageAttributeName -> DescribeImageAttribute

-- | The AMI attribute.
--   
--   Note: Depending on your account privileges, the
--   <a>blockDeviceMapping</a> attribute may return a <a>AuthFailure</a>
--   error. If this happens, use <tt>DescribeImages</tt> to get information
--   about the block device mapping for the AMI.
dia1Attribute :: Lens' DescribeImageAttribute ImageAttributeName

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dia1DryRun :: Lens' DescribeImageAttribute (Maybe Bool)

-- | The ID of the AMI.
dia1ImageId :: Lens' DescribeImageAttribute Text
data DescribeImageAttributeResponse

-- | <a>DescribeImageAttributeResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>diarBlockDeviceMappings</a> <tt>::</tt>
--   [<a>BlockDeviceMapping</a>]</li>
--   <li><a>diarDescription</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttributeValue</a></li>
--   <li><a>diarImageId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>diarKernelId</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttributeValue</a></li>
--   <li><a>diarLaunchPermissions</a> <tt>::</tt>
--   [<a>LaunchPermission</a>]</li>
--   <li><a>diarProductCodes</a> <tt>::</tt> [<a>ProductCode</a>]</li>
--   <li><a>diarRamdiskId</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttributeValue</a></li>
--   <li><a>diarSriovNetSupport</a> <tt>::</tt> <a>Maybe</a>
--   <a>AttributeValue</a></li>
--   </ul>
describeImageAttributeResponse :: DescribeImageAttributeResponse

-- | One or more block device mapping entries.
diarBlockDeviceMappings :: Lens' DescribeImageAttributeResponse [BlockDeviceMapping]

-- | A description for the AMI.
diarDescription :: Lens' DescribeImageAttributeResponse (Maybe AttributeValue)

-- | The ID of the AMI.
diarImageId :: Lens' DescribeImageAttributeResponse (Maybe Text)

-- | The kernel ID.
diarKernelId :: Lens' DescribeImageAttributeResponse (Maybe AttributeValue)

-- | One or more launch permissions.
diarLaunchPermissions :: Lens' DescribeImageAttributeResponse [LaunchPermission]

-- | One or more product codes.
diarProductCodes :: Lens' DescribeImageAttributeResponse [ProductCode]

-- | The RAM disk ID.
diarRamdiskId :: Lens' DescribeImageAttributeResponse (Maybe AttributeValue)
diarSriovNetSupport :: Lens' DescribeImageAttributeResponse (Maybe AttributeValue)
instance Eq DescribeImageAttribute
instance Read DescribeImageAttribute
instance Show DescribeImageAttribute
instance Eq DescribeImageAttributeResponse
instance Read DescribeImageAttributeResponse
instance Show DescribeImageAttributeResponse
instance FromXML DescribeImageAttributeResponse
instance AWSRequest DescribeImageAttribute
instance ToHeaders DescribeImageAttribute
instance ToQuery DescribeImageAttribute
instance ToPath DescribeImageAttribute


-- | Describes one or more of your export tasks.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeExportTasks.html</a>
module Network.AWS.EC2.DescribeExportTasks
data DescribeExportTasks

-- | <a>DescribeExportTasks</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>detExportTaskIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeExportTasks :: DescribeExportTasks

-- | One or more export task IDs.
detExportTaskIds :: Lens' DescribeExportTasks [Text]
data DescribeExportTasksResponse

-- | <a>DescribeExportTasksResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>detrExportTasks</a> <tt>::</tt> [<a>ExportTask</a>]</li>
--   </ul>
describeExportTasksResponse :: DescribeExportTasksResponse

-- | Information about the export tasks.
detrExportTasks :: Lens' DescribeExportTasksResponse [ExportTask]
instance Eq DescribeExportTasks
instance Ord DescribeExportTasks
instance Read DescribeExportTasks
instance Show DescribeExportTasks
instance Monoid DescribeExportTasks
instance Semigroup DescribeExportTasks
instance Eq DescribeExportTasksResponse
instance Read DescribeExportTasksResponse
instance Show DescribeExportTasksResponse
instance Monoid DescribeExportTasksResponse
instance Semigroup DescribeExportTasksResponse
instance FromXML DescribeExportTasksResponse
instance AWSRequest DescribeExportTasks
instance ToHeaders DescribeExportTasks
instance ToQuery DescribeExportTasks
instance ToPath DescribeExportTasks


-- | Describes one or more of your DHCP options sets.
--   
--   For more information about DHCP options sets, see <a>DHCP Options
--   Sets</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeDhcpOptions.html</a>
module Network.AWS.EC2.DescribeDhcpOptions
data DescribeDhcpOptions

-- | <a>DescribeDhcpOptions</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ddoDhcpOptionsIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>ddoDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>ddoFilters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   </ul>
describeDhcpOptions :: DescribeDhcpOptions

-- | The IDs of one or more DHCP options sets.
--   
--   Default: Describes all your DHCP options sets.
ddoDhcpOptionsIds :: Lens' DescribeDhcpOptions [Text]

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
ddoDryRun :: Lens' DescribeDhcpOptions (Maybe Bool)

-- | One or more filters.
--   
--   'dhcp-options-id' - The ID of a set of DHCP options.
--   
--   <tt>key</tt> - The key for one of the options (for example,
--   'domain-name').
--   
--   <tt>value</tt> - The value for one of the options.
--   
--   <a>tag</a>:<i>key</i>=<i>value</i> - The key/value combination of a
--   tag assigned to the resource.
--   
--   'tag-key' - The key of a tag assigned to the resource. This filter is
--   independent of the 'tag-value' filter. For example, if you use both
--   the filter "tag-key=Purpose" and the filter "tag-value=X", you get any
--   resources assigned both the tag key Purpose (regardless of what the
--   tag's value is), and the tag value X (regardless of what the tag's key
--   is). If you want to list only resources where Purpose is X, see the
--   <a>tag</a>:<i>key</i>=<i>value</i> filter.
--   
--   'tag-value' - The value of a tag assigned to the resource. This filter
--   is independent of the 'tag-key' filter.
ddoFilters :: Lens' DescribeDhcpOptions [Filter]
data DescribeDhcpOptionsResponse

-- | <a>DescribeDhcpOptionsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ddorDhcpOptions</a> <tt>::</tt> [<a>DhcpOptions</a>]</li>
--   </ul>
describeDhcpOptionsResponse :: DescribeDhcpOptionsResponse

-- | Information about one or more DHCP options sets.
ddorDhcpOptions :: Lens' DescribeDhcpOptionsResponse [DhcpOptions]
instance Eq DescribeDhcpOptions
instance Read DescribeDhcpOptions
instance Show DescribeDhcpOptions
instance Eq DescribeDhcpOptionsResponse
instance Read DescribeDhcpOptionsResponse
instance Show DescribeDhcpOptionsResponse
instance Monoid DescribeDhcpOptionsResponse
instance Semigroup DescribeDhcpOptionsResponse
instance FromXML DescribeDhcpOptionsResponse
instance AWSRequest DescribeDhcpOptions
instance ToHeaders DescribeDhcpOptions
instance ToQuery DescribeDhcpOptions
instance ToPath DescribeDhcpOptions


-- | Describes one or more of your VPN customer gateways.
--   
--   For more information about VPN customer gateways, see <a>Adding a
--   HardwareVirtual Private Gateway to Your VPC</a> in the <i>Amazon
--   Virtual Private Cloud UserGuide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeCustomerGateways.html</a>
module Network.AWS.EC2.DescribeCustomerGateways
data DescribeCustomerGateways

-- | <a>DescribeCustomerGateways</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dcgCustomerGatewayIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>dcgDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dcgFilters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   </ul>
describeCustomerGateways :: DescribeCustomerGateways

-- | One or more customer gateway IDs.
--   
--   Default: Describes all your customer gateways.
dcgCustomerGatewayIds :: Lens' DescribeCustomerGateways [Text]

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dcgDryRun :: Lens' DescribeCustomerGateways (Maybe Bool)

-- | One or more filters.
--   
--   'bgp-asn' - The customer gateway's Border Gateway Protocol (BGP)
--   Autonomous System Number (ASN).
--   
--   'customer-gateway-id' - The ID of the customer gateway.
--   
--   'ip-address' - The IP address of the customer gateway's
--   Internet-routable external interface.
--   
--   <tt>state</tt> - The state of the customer gateway (<tt>pending</tt> |
--   <tt>available</tt> | <tt>deleting</tt> | <tt>deleted</tt>).
--   
--   'type' - The type of customer gateway. Currently, the only supported
--   type is 'ipsec.1'.
--   
--   <a>tag</a>:<i>key</i>=<i>value</i> - The key/value combination of a
--   tag assigned to the resource.
--   
--   'tag-key' - The key of a tag assigned to the resource. This filter is
--   independent of the 'tag-value' filter. For example, if you use both
--   the filter "tag-key=Purpose" and the filter "tag-value=X", you get any
--   resources assigned both the tag key Purpose (regardless of what the
--   tag's value is), and the tag value X (regardless of what the tag's key
--   is). If you want to list only resources where Purpose is X, see the
--   <a>tag</a>:<i>key</i>=<i>value</i> filter.
--   
--   'tag-value' - The value of a tag assigned to the resource. This filter
--   is independent of the 'tag-key' filter.
dcgFilters :: Lens' DescribeCustomerGateways [Filter]
data DescribeCustomerGatewaysResponse

-- | <a>DescribeCustomerGatewaysResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dcgrCustomerGateways</a> <tt>::</tt>
--   [<a>CustomerGateway</a>]</li>
--   </ul>
describeCustomerGatewaysResponse :: DescribeCustomerGatewaysResponse

-- | Information about one or more customer gateways.
dcgrCustomerGateways :: Lens' DescribeCustomerGatewaysResponse [CustomerGateway]
instance Eq DescribeCustomerGateways
instance Read DescribeCustomerGateways
instance Show DescribeCustomerGateways
instance Eq DescribeCustomerGatewaysResponse
instance Read DescribeCustomerGatewaysResponse
instance Show DescribeCustomerGatewaysResponse
instance Monoid DescribeCustomerGatewaysResponse
instance Semigroup DescribeCustomerGatewaysResponse
instance FromXML DescribeCustomerGatewaysResponse
instance AWSRequest DescribeCustomerGateways
instance ToHeaders DescribeCustomerGateways
instance ToQuery DescribeCustomerGateways
instance ToPath DescribeCustomerGateways


-- | Describes one or more of your conversion tasks. For more information,
--   see <a>Using the Command Line Tools to Import Your Virtual Machine to
--   Amazon EC2</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeConversionTasks.html</a>
module Network.AWS.EC2.DescribeConversionTasks
data DescribeConversionTasks

-- | <a>DescribeConversionTasks</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dctConversionTaskIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>dctDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dctFilters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   </ul>
describeConversionTasks :: DescribeConversionTasks

-- | One or more conversion task IDs.
dctConversionTaskIds :: Lens' DescribeConversionTasks [Text]

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dctDryRun :: Lens' DescribeConversionTasks (Maybe Bool)

-- | One or more filters.
dctFilters :: Lens' DescribeConversionTasks [Filter]
data DescribeConversionTasksResponse

-- | <a>DescribeConversionTasksResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dctrConversionTasks</a> <tt>::</tt>
--   [<a>ConversionTask</a>]</li>
--   </ul>
describeConversionTasksResponse :: DescribeConversionTasksResponse

-- | Information about the conversion tasks.
dctrConversionTasks :: Lens' DescribeConversionTasksResponse [ConversionTask]
instance Eq DescribeConversionTasks
instance Read DescribeConversionTasks
instance Show DescribeConversionTasks
instance Eq DescribeConversionTasksResponse
instance Read DescribeConversionTasksResponse
instance Show DescribeConversionTasksResponse
instance Monoid DescribeConversionTasksResponse
instance Semigroup DescribeConversionTasksResponse
instance FromXML DescribeConversionTasksResponse
instance AWSRequest DescribeConversionTasks
instance ToHeaders DescribeConversionTasks
instance ToQuery DescribeConversionTasks
instance ToPath DescribeConversionTasks


-- | Describes one or more of your linked EC2-Classic instances. This
--   request only returns information about EC2-Classic instances linked to
--   a VPC through ClassicLink; you cannot use this request to return
--   information about other instances.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeClassicLinkInstances.html</a>
module Network.AWS.EC2.DescribeClassicLinkInstances
data DescribeClassicLinkInstances

-- | <a>DescribeClassicLinkInstances</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dcliDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dcliFilters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>dcliInstanceIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>dcliMaxResults</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>dcliNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
describeClassicLinkInstances :: DescribeClassicLinkInstances

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dcliDryRun :: Lens' DescribeClassicLinkInstances (Maybe Bool)

-- | One or more filters.
--   
--   'group-id' - The ID of a VPC security group that's associated with the
--   instance.
--   
--   'instance-id' - The ID of the instance.
--   
--   <a>tag</a>:<i>key</i>=<i>value</i> - The key/value combination of a
--   tag assigned to the resource.
--   
--   'tag-key' - The key of a tag assigned to the resource. This filter is
--   independent of the 'tag-value' filter. For example, if you use both
--   the filter "tag-key=Purpose" and the filter "tag-value=X", you get any
--   resources assigned both the tag key Purpose (regardless of what the
--   tag's value is), and the tag value X (regardless of what the tag's key
--   is). If you want to list only resources where Purpose is X, see the
--   <a>tag</a>:<i>key</i>=<i>value</i> filter.
--   
--   'tag-value' - The value of a tag assigned to the resource. This filter
--   is independent of the 'tag-key' filter.
--   
--   'vpc-id' - The ID of the VPC that the instance is linked to.
dcliFilters :: Lens' DescribeClassicLinkInstances [Filter]

-- | One or more instance IDs. Must be instances linked to a VPC through
--   ClassicLink.
dcliInstanceIds :: Lens' DescribeClassicLinkInstances [Text]

-- | The maximum number of results to return for the request in a single
--   page. The remaining results of the initial request can be seen by
--   sending another request with the returned <tt>NextToken</tt> value.
--   This value can be between 5 and 1000; if <tt>MaxResults</tt> is given
--   a value larger than 1000, only 1000 results are returned. You cannot
--   specify this parameter and the instance IDs parameter in the same
--   request.
--   
--   Constraint: If the value is greater than 1000, we return only 1000
--   items.
dcliMaxResults :: Lens' DescribeClassicLinkInstances (Maybe Int)

-- | The token to retrieve the next page of results.
dcliNextToken :: Lens' DescribeClassicLinkInstances (Maybe Text)
data DescribeClassicLinkInstancesResponse

-- | <a>DescribeClassicLinkInstancesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dclirInstances</a> <tt>::</tt>
--   [<a>ClassicLinkInstance</a>]</li>
--   <li><a>dclirNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
describeClassicLinkInstancesResponse :: DescribeClassicLinkInstancesResponse

-- | Information about one or more linked EC2-Classic instances.
dclirInstances :: Lens' DescribeClassicLinkInstancesResponse [ClassicLinkInstance]

-- | The token to use to retrieve the next page of results. This value is
--   <a>null</a> when there are no more results to return.
dclirNextToken :: Lens' DescribeClassicLinkInstancesResponse (Maybe Text)
instance Eq DescribeClassicLinkInstances
instance Read DescribeClassicLinkInstances
instance Show DescribeClassicLinkInstances
instance Eq DescribeClassicLinkInstancesResponse
instance Read DescribeClassicLinkInstancesResponse
instance Show DescribeClassicLinkInstancesResponse
instance FromXML DescribeClassicLinkInstancesResponse
instance AWSRequest DescribeClassicLinkInstances
instance ToHeaders DescribeClassicLinkInstances
instance ToQuery DescribeClassicLinkInstances
instance ToPath DescribeClassicLinkInstances


-- | Describes one or more of your bundling tasks.
--   
--   Completed bundle tasks are listed for only a limited time. If your
--   bundle task is no longer in the list, you can still register an AMI
--   from it. Just use <tt>RegisterImage</tt> with the Amazon S3 bucket
--   name and image manifest name you provided to the bundle task.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeBundleTasks.html</a>
module Network.AWS.EC2.DescribeBundleTasks
data DescribeBundleTasks

-- | <a>DescribeBundleTasks</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dbtBundleIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>dbtDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dbtFilters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   </ul>
describeBundleTasks :: DescribeBundleTasks

-- | One or more bundle task IDs.
--   
--   Default: Describes all your bundle tasks.
dbtBundleIds :: Lens' DescribeBundleTasks [Text]

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dbtDryRun :: Lens' DescribeBundleTasks (Maybe Bool)

-- | One or more filters.
--   
--   'bundle-id' - The ID of the bundle task.
--   
--   'error-code' - If the task failed, the error code returned.
--   
--   'error-message' - If the task failed, the error message returned.
--   
--   'instance-id' - The ID of the instance.
--   
--   <tt>progress</tt> - The level of task completion, as a percentage (for
--   example, 20%).
--   
--   's3-bucket' - The Amazon S3 bucket to store the AMI.
--   
--   's3-prefix' - The beginning of the AMI name.
--   
--   'start-time' - The time the task started (for example,
--   2013-09-15T17:15:20.000Z).
--   
--   <tt>state</tt> - The state of the task (<tt>pending</tt> |
--   'waiting-for-shutdown' | <tt>bundling</tt> | <tt>storing</tt> |
--   <tt>cancelling</tt> | <tt>complete</tt> | <tt>failed</tt>).
--   
--   'update-time' - The time of the most recent update for the task.
dbtFilters :: Lens' DescribeBundleTasks [Filter]
data DescribeBundleTasksResponse

-- | <a>DescribeBundleTasksResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dbtrBundleTasks</a> <tt>::</tt> [<a>BundleTask</a>]</li>
--   </ul>
describeBundleTasksResponse :: DescribeBundleTasksResponse

-- | Information about one or more bundle tasks.
dbtrBundleTasks :: Lens' DescribeBundleTasksResponse [BundleTask]
instance Eq DescribeBundleTasks
instance Read DescribeBundleTasks
instance Show DescribeBundleTasks
instance Eq DescribeBundleTasksResponse
instance Read DescribeBundleTasksResponse
instance Show DescribeBundleTasksResponse
instance Monoid DescribeBundleTasksResponse
instance Semigroup DescribeBundleTasksResponse
instance FromXML DescribeBundleTasksResponse
instance AWSRequest DescribeBundleTasks
instance ToHeaders DescribeBundleTasks
instance ToQuery DescribeBundleTasks
instance ToPath DescribeBundleTasks

module Network.AWS.EC2.Waiters
bundleTaskComplete :: Wait DescribeBundleTasks
conversionTaskCancelled :: Wait DescribeConversionTasks
conversionTaskCompleted :: Wait DescribeConversionTasks
customerGatewayAvailable :: Wait DescribeCustomerGateways
exportTaskCancelled :: Wait DescribeExportTasks
exportTaskCompleted :: Wait DescribeExportTasks
imageAvailable :: Wait DescribeImages
instanceExists :: Wait DescribeInstances
instanceRunning :: Wait DescribeInstances
instanceStatusOk :: Wait DescribeInstanceStatus
instanceStopped :: Wait DescribeInstances
instanceTerminated :: Wait DescribeInstances
passwordDataAvailable :: Wait GetPasswordData
snapshotCompleted :: Wait DescribeSnapshots
spotInstanceRequestFulfilled :: Wait DescribeSpotInstanceRequests
subnetAvailable :: Wait DescribeSubnets
systemStatusOk :: Wait DescribeInstanceStatus
volumeAvailable :: Wait DescribeVolumes
volumeDeleted :: Wait DescribeVolumes
volumeInUse :: Wait DescribeVolumes
vpcAvailable :: Wait DescribeVpcs
vpnConnectionAvailable :: Wait DescribeVpnConnections
vpnConnectionDeleted :: Wait DescribeVpnConnections


-- | Describes one or more of the Availability Zones that are available to
--   you. The results include zones only for the region you're currently
--   using. If there is an event impacting an Availability Zone, you can
--   use this request to view the state and any provided message for that
--   Availability Zone.
--   
--   For more information, see <a>Regions and Availability Zones</a> in the
--   <i>AmazonElastic Compute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeAvailabilityZones.html</a>
module Network.AWS.EC2.DescribeAvailabilityZones
data DescribeAvailabilityZones

-- | <a>DescribeAvailabilityZones</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dazDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dazFilters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>dazZoneNames</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeAvailabilityZones :: DescribeAvailabilityZones

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dazDryRun :: Lens' DescribeAvailabilityZones (Maybe Bool)

-- | One or more filters.
--   
--   <tt>message</tt> - Information about the Availability Zone.
--   
--   'region-name' - The name of the region for the Availability Zone (for
--   example, 'us-east-1').
--   
--   <tt>state</tt> - The state of the Availability Zone
--   (<tt>available</tt> | <tt>impaired</tt> | <tt>unavailable</tt>).
--   
--   'zone-name' - The name of the Availability Zone (for example,
--   'us-east-1a').
dazFilters :: Lens' DescribeAvailabilityZones [Filter]

-- | The names of one or more Availability Zones.
dazZoneNames :: Lens' DescribeAvailabilityZones [Text]
data DescribeAvailabilityZonesResponse

-- | <a>DescribeAvailabilityZonesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dazrAvailabilityZones</a> <tt>::</tt>
--   [<a>AvailabilityZone</a>]</li>
--   </ul>
describeAvailabilityZonesResponse :: DescribeAvailabilityZonesResponse

-- | Information about one or more Availability Zones.
dazrAvailabilityZones :: Lens' DescribeAvailabilityZonesResponse [AvailabilityZone]
instance Eq DescribeAvailabilityZones
instance Read DescribeAvailabilityZones
instance Show DescribeAvailabilityZones
instance Eq DescribeAvailabilityZonesResponse
instance Read DescribeAvailabilityZonesResponse
instance Show DescribeAvailabilityZonesResponse
instance Monoid DescribeAvailabilityZonesResponse
instance Semigroup DescribeAvailabilityZonesResponse
instance FromXML DescribeAvailabilityZonesResponse
instance AWSRequest DescribeAvailabilityZones
instance ToHeaders DescribeAvailabilityZones
instance ToQuery DescribeAvailabilityZones
instance ToPath DescribeAvailabilityZones


-- | Describes one or more of your Elastic IP addresses.
--   
--   An Elastic IP address is for use in either the EC2-Classic platform or
--   in a VPC. For more information, see <a>Elastic IP Addresses</a> in the
--   <i>Amazon ElasticCompute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeAddresses.html</a>
module Network.AWS.EC2.DescribeAddresses
data DescribeAddresses

-- | <a>DescribeAddresses</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>daAllocationIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>daDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>daFilters</a> <tt>::</tt> [<a>Filter</a>]</li>
--   <li><a>daPublicIps</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeAddresses :: DescribeAddresses

-- | <ul>
--   <li><i>EC2-VPC</i> One or more allocation IDs.</li>
--   </ul>
--   
--   Default: Describes all your Elastic IP addresses.
daAllocationIds :: Lens' DescribeAddresses [Text]

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
daDryRun :: Lens' DescribeAddresses (Maybe Bool)

-- | One or more filters. Filter names and values are case-sensitive.
--   
--   'allocation-id' - [EC2-VPC] The allocation ID for the address.
--   
--   'association-id' - [EC2-VPC] The association ID for the address.
--   
--   <tt>domain</tt> - Indicates whether the address is for use in
--   EC2-Classic (<tt>standard</tt>) or in a VPC ( <a>vpc</a>).
--   
--   'instance-id' - The ID of the instance the address is associated with,
--   if any.
--   
--   'network-interface-id' - [EC2-VPC] The ID of the network interface
--   that the address is associated with, if any.
--   
--   'network-interface-owner-id' - The AWS account ID of the owner.
--   
--   'private-ip-address' - [EC2-VPC] The private IP address associated
--   with the Elastic IP address.
--   
--   'public-ip' - The Elastic IP address.
daFilters :: Lens' DescribeAddresses [Filter]

-- | <ul>
--   <li><i>EC2-Classic</i> One or more Elastic IP addresses.</li>
--   </ul>
--   
--   Default: Describes all your Elastic IP addresses.
daPublicIps :: Lens' DescribeAddresses [Text]
data DescribeAddressesResponse

-- | <a>DescribeAddressesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>darAddresses</a> <tt>::</tt> [<a>Address</a>]</li>
--   </ul>
describeAddressesResponse :: DescribeAddressesResponse

-- | Information about one or more Elastic IP addresses.
darAddresses :: Lens' DescribeAddressesResponse [Address]
instance Eq DescribeAddresses
instance Read DescribeAddresses
instance Show DescribeAddresses
instance Eq DescribeAddressesResponse
instance Read DescribeAddressesResponse
instance Show DescribeAddressesResponse
instance Monoid DescribeAddressesResponse
instance Semigroup DescribeAddressesResponse
instance FromXML DescribeAddressesResponse
instance AWSRequest DescribeAddresses
instance ToHeaders DescribeAddresses
instance ToQuery DescribeAddresses
instance ToPath DescribeAddresses


-- | Describes attributes of your AWS account. The following are the
--   supported account attributes:
--   
--   'supported-platforms': Indicates whether your account can launch
--   instances into EC2-Classic and EC2-VPC, or only into EC2-VPC.
--   
--   'default-vpc': The ID of the default VPC for your account, or
--   <tt>none</tt>.
--   
--   'max-instances': The maximum number of On-Demand instances that you
--   can run.
--   
--   'vpc-max-security-groups-per-interface': The maximum number of
--   security groups that you can assign to a network interface.
--   
--   'max-elastic-ips': The maximum number of Elastic IP addresses that you
--   can allocate for use with EC2-Classic.
--   
--   'vpc-max-elastic-ips': The maximum number of Elastic IP addresses that
--   you can allocate for use with EC2-VPC.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeAccountAttributes.html</a>
module Network.AWS.EC2.DescribeAccountAttributes
data DescribeAccountAttributes

-- | <a>DescribeAccountAttributes</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>daaAttributeNames</a> <tt>::</tt>
--   [<a>AccountAttributeName</a>]</li>
--   <li><a>daaDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   </ul>
describeAccountAttributes :: DescribeAccountAttributes

-- | One or more account attribute names.
daaAttributeNames :: Lens' DescribeAccountAttributes [AccountAttributeName]

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
daaDryRun :: Lens' DescribeAccountAttributes (Maybe Bool)
data DescribeAccountAttributesResponse

-- | <a>DescribeAccountAttributesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>daarAccountAttributes</a> <tt>::</tt>
--   [<a>AccountAttribute</a>]</li>
--   </ul>
describeAccountAttributesResponse :: DescribeAccountAttributesResponse

-- | Information about one or more account attributes.
daarAccountAttributes :: Lens' DescribeAccountAttributesResponse [AccountAttribute]
instance Eq DescribeAccountAttributes
instance Read DescribeAccountAttributes
instance Show DescribeAccountAttributes
instance Eq DescribeAccountAttributesResponse
instance Read DescribeAccountAttributesResponse
instance Show DescribeAccountAttributesResponse
instance Monoid DescribeAccountAttributesResponse
instance Semigroup DescribeAccountAttributesResponse
instance FromXML DescribeAccountAttributesResponse
instance AWSRequest DescribeAccountAttributes
instance ToHeaders DescribeAccountAttributes
instance ToQuery DescribeAccountAttributes
instance ToPath DescribeAccountAttributes


-- | Deregisters the specified AMI. After you deregister an AMI, it can't
--   be used to launch new instances.
--   
--   This command does not delete the AMI.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeregisterImage.html</a>
module Network.AWS.EC2.DeregisterImage
data DeregisterImage

-- | <a>DeregisterImage</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>diDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>diImageId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deregisterImage :: Text -> DeregisterImage

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
diDryRun :: Lens' DeregisterImage (Maybe Bool)

-- | The ID of the AMI.
diImageId :: Lens' DeregisterImage Text
data DeregisterImageResponse

-- | <a>DeregisterImageResponse</a> constructor.
deregisterImageResponse :: DeregisterImageResponse
instance Eq DeregisterImage
instance Ord DeregisterImage
instance Read DeregisterImage
instance Show DeregisterImage
instance Eq DeregisterImageResponse
instance Ord DeregisterImageResponse
instance Read DeregisterImageResponse
instance Show DeregisterImageResponse
instance Generic DeregisterImageResponse
instance Datatype D1DeregisterImageResponse
instance Constructor C1_0DeregisterImageResponse
instance AWSRequest DeregisterImage
instance ToHeaders DeregisterImage
instance ToQuery DeregisterImage
instance ToPath DeregisterImage


-- | Deletes the specified virtual private gateway. We recommend that
--   before you delete a virtual private gateway, you detach it from the
--   VPC and delete the VPN connection. Note that you don't need to delete
--   the virtual private gateway if you plan to delete and recreate the VPN
--   connection between your VPC and your network.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteVpnGateway.html</a>
module Network.AWS.EC2.DeleteVpnGateway
data DeleteVpnGateway

-- | <a>DeleteVpnGateway</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvgDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dvgVpnGatewayId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteVpnGateway :: Text -> DeleteVpnGateway

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dvgDryRun :: Lens' DeleteVpnGateway (Maybe Bool)

-- | The ID of the virtual private gateway.
dvgVpnGatewayId :: Lens' DeleteVpnGateway Text
data DeleteVpnGatewayResponse

-- | <a>DeleteVpnGatewayResponse</a> constructor.
deleteVpnGatewayResponse :: DeleteVpnGatewayResponse
instance Eq DeleteVpnGateway
instance Ord DeleteVpnGateway
instance Read DeleteVpnGateway
instance Show DeleteVpnGateway
instance Eq DeleteVpnGatewayResponse
instance Ord DeleteVpnGatewayResponse
instance Read DeleteVpnGatewayResponse
instance Show DeleteVpnGatewayResponse
instance Generic DeleteVpnGatewayResponse
instance Datatype D1DeleteVpnGatewayResponse
instance Constructor C1_0DeleteVpnGatewayResponse
instance AWSRequest DeleteVpnGateway
instance ToHeaders DeleteVpnGateway
instance ToQuery DeleteVpnGateway
instance ToPath DeleteVpnGateway


-- | Deletes the specified static route associated with a VPN connection
--   between an existing virtual private gateway and a VPN customer
--   gateway. The static route allows traffic to be routed from the virtual
--   private gateway to the VPN customer gateway.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteVpnConnectionRoute.html</a>
module Network.AWS.EC2.DeleteVpnConnectionRoute
data DeleteVpnConnectionRoute

-- | <a>DeleteVpnConnectionRoute</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvcrDestinationCidrBlock</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>dvcrVpnConnectionId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteVpnConnectionRoute :: Text -> Text -> DeleteVpnConnectionRoute

-- | The CIDR block associated with the local subnet of the customer
--   network.
dvcrDestinationCidrBlock :: Lens' DeleteVpnConnectionRoute Text

-- | The ID of the VPN connection.
dvcrVpnConnectionId :: Lens' DeleteVpnConnectionRoute Text
data DeleteVpnConnectionRouteResponse

-- | <a>DeleteVpnConnectionRouteResponse</a> constructor.
deleteVpnConnectionRouteResponse :: DeleteVpnConnectionRouteResponse
instance Eq DeleteVpnConnectionRoute
instance Ord DeleteVpnConnectionRoute
instance Read DeleteVpnConnectionRoute
instance Show DeleteVpnConnectionRoute
instance Eq DeleteVpnConnectionRouteResponse
instance Ord DeleteVpnConnectionRouteResponse
instance Read DeleteVpnConnectionRouteResponse
instance Show DeleteVpnConnectionRouteResponse
instance Generic DeleteVpnConnectionRouteResponse
instance Datatype D1DeleteVpnConnectionRouteResponse
instance Constructor C1_0DeleteVpnConnectionRouteResponse
instance AWSRequest DeleteVpnConnectionRoute
instance ToHeaders DeleteVpnConnectionRoute
instance ToQuery DeleteVpnConnectionRoute
instance ToPath DeleteVpnConnectionRoute


-- | Deletes the specified VPN connection.
--   
--   If you're deleting the VPC and its associated components, we recommend
--   that you detach the virtual private gateway from the VPC and delete
--   the VPC before deleting the VPN connection. If you believe that the
--   tunnel credentials for your VPN connection have been compromised, you
--   can delete the VPN connection and create a new one that has new keys,
--   without needing to delete the VPC or virtual private gateway. If you
--   create a new VPN connection, you must reconfigure the customer gateway
--   using the new configuration information returned with the new VPN
--   connection ID.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteVpnConnection.html</a>
module Network.AWS.EC2.DeleteVpnConnection
data DeleteVpnConnection

-- | <a>DeleteVpnConnection</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvcDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dvcVpnConnectionId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteVpnConnection :: Text -> DeleteVpnConnection

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dvcDryRun :: Lens' DeleteVpnConnection (Maybe Bool)

-- | The ID of the VPN connection.
dvcVpnConnectionId :: Lens' DeleteVpnConnection Text
data DeleteVpnConnectionResponse

-- | <a>DeleteVpnConnectionResponse</a> constructor.
deleteVpnConnectionResponse :: DeleteVpnConnectionResponse
instance Eq DeleteVpnConnection
instance Ord DeleteVpnConnection
instance Read DeleteVpnConnection
instance Show DeleteVpnConnection
instance Eq DeleteVpnConnectionResponse
instance Ord DeleteVpnConnectionResponse
instance Read DeleteVpnConnectionResponse
instance Show DeleteVpnConnectionResponse
instance Generic DeleteVpnConnectionResponse
instance Datatype D1DeleteVpnConnectionResponse
instance Constructor C1_0DeleteVpnConnectionResponse
instance AWSRequest DeleteVpnConnection
instance ToHeaders DeleteVpnConnection
instance ToQuery DeleteVpnConnection
instance ToPath DeleteVpnConnection


-- | Deletes a VPC peering connection. Either the owner of the requester
--   VPC or the owner of the peer VPC can delete the VPC peering connection
--   if it's in the <tt>active</tt> state. The owner of the requester VPC
--   can delete a VPC peering connection in the 'pending-acceptance' state.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteVpcPeeringConnection.html</a>
module Network.AWS.EC2.DeleteVpcPeeringConnection
data DeleteVpcPeeringConnection

-- | <a>DeleteVpcPeeringConnection</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvpcDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dvpcVpcPeeringConnectionId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteVpcPeeringConnection :: Text -> DeleteVpcPeeringConnection

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dvpcDryRun :: Lens' DeleteVpcPeeringConnection (Maybe Bool)

-- | The ID of the VPC peering connection.
dvpcVpcPeeringConnectionId :: Lens' DeleteVpcPeeringConnection Text
data DeleteVpcPeeringConnectionResponse

-- | <a>DeleteVpcPeeringConnectionResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dvpcrReturn</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   </ul>
deleteVpcPeeringConnectionResponse :: DeleteVpcPeeringConnectionResponse

-- | Returns <tt>true</tt> if the request succeeds; otherwise, it returns
--   an error.
dvpcrReturn :: Lens' DeleteVpcPeeringConnectionResponse (Maybe Bool)
instance Eq DeleteVpcPeeringConnection
instance Ord DeleteVpcPeeringConnection
instance Read DeleteVpcPeeringConnection
instance Show DeleteVpcPeeringConnection
instance Eq DeleteVpcPeeringConnectionResponse
instance Ord DeleteVpcPeeringConnectionResponse
instance Read DeleteVpcPeeringConnectionResponse
instance Show DeleteVpcPeeringConnectionResponse
instance FromXML DeleteVpcPeeringConnectionResponse
instance AWSRequest DeleteVpcPeeringConnection
instance ToHeaders DeleteVpcPeeringConnection
instance ToQuery DeleteVpcPeeringConnection
instance ToPath DeleteVpcPeeringConnection


-- | Deletes one or more specified VPC endpoints. Deleting the endpoint
--   also deletes the endpoint routes in the route tables that were
--   associated with the endpoint.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteVpcEndpoints.html</a>
module Network.AWS.EC2.DeleteVpcEndpoints
data DeleteVpcEndpoints

-- | <a>DeleteVpcEndpoints</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dveDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dveVpcEndpointIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
deleteVpcEndpoints :: DeleteVpcEndpoints

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dveDryRun :: Lens' DeleteVpcEndpoints (Maybe Bool)

-- | One or more endpoint IDs.
dveVpcEndpointIds :: Lens' DeleteVpcEndpoints [Text]
data DeleteVpcEndpointsResponse

-- | <a>DeleteVpcEndpointsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dverUnsuccessful</a> <tt>::</tt> [<a>UnsuccessfulItem</a>]</li>
--   </ul>
deleteVpcEndpointsResponse :: DeleteVpcEndpointsResponse

-- | Information about the endpoints that were not successfully deleted.
dverUnsuccessful :: Lens' DeleteVpcEndpointsResponse [UnsuccessfulItem]
instance Eq DeleteVpcEndpoints
instance Ord DeleteVpcEndpoints
instance Read DeleteVpcEndpoints
instance Show DeleteVpcEndpoints
instance Eq DeleteVpcEndpointsResponse
instance Read DeleteVpcEndpointsResponse
instance Show DeleteVpcEndpointsResponse
instance Monoid DeleteVpcEndpointsResponse
instance Semigroup DeleteVpcEndpointsResponse
instance FromXML DeleteVpcEndpointsResponse
instance AWSRequest DeleteVpcEndpoints
instance ToHeaders DeleteVpcEndpoints
instance ToQuery DeleteVpcEndpoints
instance ToPath DeleteVpcEndpoints


-- | Deletes the specified VPC. You must detach or delete all gateways and
--   resources that are associated with the VPC before you can delete it.
--   For example, you must terminate all instances running in the VPC,
--   delete all security groups associated with the VPC (except the default
--   one), delete all route tables associated with the VPC (except the
--   default one), and so on.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteVpc.html</a>
module Network.AWS.EC2.DeleteVpc
data DeleteVpc

-- | <a>DeleteVpc</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dv3DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dv3VpcId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteVpc :: Text -> DeleteVpc

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dv3DryRun :: Lens' DeleteVpc (Maybe Bool)

-- | The ID of the VPC.
dv3VpcId :: Lens' DeleteVpc Text
data DeleteVpcResponse

-- | <a>DeleteVpcResponse</a> constructor.
deleteVpcResponse :: DeleteVpcResponse
instance Eq DeleteVpc
instance Ord DeleteVpc
instance Read DeleteVpc
instance Show DeleteVpc
instance Eq DeleteVpcResponse
instance Ord DeleteVpcResponse
instance Read DeleteVpcResponse
instance Show DeleteVpcResponse
instance Generic DeleteVpcResponse
instance Datatype D1DeleteVpcResponse
instance Constructor C1_0DeleteVpcResponse
instance AWSRequest DeleteVpc
instance ToHeaders DeleteVpc
instance ToQuery DeleteVpc
instance ToPath DeleteVpc


-- | Deletes the specified EBS volume. The volume must be in the
--   <tt>available</tt> state (not attached to an instance).
--   
--   The volume may remain in the <tt>deleting</tt> state for several
--   minutes.
--   
--   For more information, see <a>Deleting an Amazon EBS Volume</a> in the
--   <i>AmazonElastic Compute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteVolume.html</a>
module Network.AWS.EC2.DeleteVolume
data DeleteVolume

-- | <a>DeleteVolume</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dv4DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dv4VolumeId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteVolume :: Text -> DeleteVolume

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dv4DryRun :: Lens' DeleteVolume (Maybe Bool)

-- | The ID of the volume.
dv4VolumeId :: Lens' DeleteVolume Text
data DeleteVolumeResponse

-- | <a>DeleteVolumeResponse</a> constructor.
deleteVolumeResponse :: DeleteVolumeResponse
instance Eq DeleteVolume
instance Ord DeleteVolume
instance Read DeleteVolume
instance Show DeleteVolume
instance Eq DeleteVolumeResponse
instance Ord DeleteVolumeResponse
instance Read DeleteVolumeResponse
instance Show DeleteVolumeResponse
instance Generic DeleteVolumeResponse
instance Datatype D1DeleteVolumeResponse
instance Constructor C1_0DeleteVolumeResponse
instance AWSRequest DeleteVolume
instance ToHeaders DeleteVolume
instance ToQuery DeleteVolume
instance ToPath DeleteVolume


-- | Deletes the specified set of tags from the specified set of resources.
--   This call is designed to follow a <tt>DescribeTags</tt> request.
--   
--   For more information about tags, see <a>Tagging Your Resources</a> in
--   the <i>AmazonElastic Compute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteTags.html</a>
module Network.AWS.EC2.DeleteTags
data DeleteTags

-- | <a>DeleteTags</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dt1DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dt1Resources</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>dt1Tags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   </ul>
deleteTags :: DeleteTags

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dt1DryRun :: Lens' DeleteTags (Maybe Bool)

-- | The ID of the resource. For example, ami-1a2b3c4d. You can specify
--   more than one resource ID.
dt1Resources :: Lens' DeleteTags [Text]

-- | One or more tags to delete. If you omit the <tt>value</tt> parameter,
--   we delete the tag regardless of its value. If you specify this
--   parameter with an empty string as the value, we delete the key only if
--   its value is an empty string.
dt1Tags :: Lens' DeleteTags [Tag]
data DeleteTagsResponse

-- | <a>DeleteTagsResponse</a> constructor.
deleteTagsResponse :: DeleteTagsResponse
instance Eq DeleteTags
instance Read DeleteTags
instance Show DeleteTags
instance Eq DeleteTagsResponse
instance Ord DeleteTagsResponse
instance Read DeleteTagsResponse
instance Show DeleteTagsResponse
instance Generic DeleteTagsResponse
instance Datatype D1DeleteTagsResponse
instance Constructor C1_0DeleteTagsResponse
instance AWSRequest DeleteTags
instance ToHeaders DeleteTags
instance ToQuery DeleteTags
instance ToPath DeleteTags


-- | Deletes the specified subnet. You must terminate all running instances
--   in the subnet before you can delete the subnet.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteSubnet.html</a>
module Network.AWS.EC2.DeleteSubnet
data DeleteSubnet

-- | <a>DeleteSubnet</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ds2DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>ds2SubnetId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteSubnet :: Text -> DeleteSubnet

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
ds2DryRun :: Lens' DeleteSubnet (Maybe Bool)

-- | The ID of the subnet.
ds2SubnetId :: Lens' DeleteSubnet Text
data DeleteSubnetResponse

-- | <a>DeleteSubnetResponse</a> constructor.
deleteSubnetResponse :: DeleteSubnetResponse
instance Eq DeleteSubnet
instance Ord DeleteSubnet
instance Read DeleteSubnet
instance Show DeleteSubnet
instance Eq DeleteSubnetResponse
instance Ord DeleteSubnetResponse
instance Read DeleteSubnetResponse
instance Show DeleteSubnetResponse
instance Generic DeleteSubnetResponse
instance Datatype D1DeleteSubnetResponse
instance Constructor C1_0DeleteSubnetResponse
instance AWSRequest DeleteSubnet
instance ToHeaders DeleteSubnet
instance ToQuery DeleteSubnet
instance ToPath DeleteSubnet


-- | Deletes the data feed for Spot Instances. For more information, see
--   <a>SpotInstance Data Feed</a> in the <i>Amazon Elastic Compute Cloud
--   User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteSpotDatafeedSubscription.html</a>
module Network.AWS.EC2.DeleteSpotDatafeedSubscription
data DeleteSpotDatafeedSubscription

-- | <a>DeleteSpotDatafeedSubscription</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsds1DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   </ul>
deleteSpotDatafeedSubscription :: DeleteSpotDatafeedSubscription

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dsds1DryRun :: Lens' DeleteSpotDatafeedSubscription (Maybe Bool)
data DeleteSpotDatafeedSubscriptionResponse

-- | <a>DeleteSpotDatafeedSubscriptionResponse</a> constructor.
deleteSpotDatafeedSubscriptionResponse :: DeleteSpotDatafeedSubscriptionResponse
instance Eq DeleteSpotDatafeedSubscription
instance Ord DeleteSpotDatafeedSubscription
instance Read DeleteSpotDatafeedSubscription
instance Show DeleteSpotDatafeedSubscription
instance Eq DeleteSpotDatafeedSubscriptionResponse
instance Ord DeleteSpotDatafeedSubscriptionResponse
instance Read DeleteSpotDatafeedSubscriptionResponse
instance Show DeleteSpotDatafeedSubscriptionResponse
instance Generic DeleteSpotDatafeedSubscriptionResponse
instance Datatype D1DeleteSpotDatafeedSubscriptionResponse
instance Constructor C1_0DeleteSpotDatafeedSubscriptionResponse
instance AWSRequest DeleteSpotDatafeedSubscription
instance ToHeaders DeleteSpotDatafeedSubscription
instance ToQuery DeleteSpotDatafeedSubscription
instance ToPath DeleteSpotDatafeedSubscription


-- | Deletes the specified snapshot.
--   
--   When you make periodic snapshots of a volume, the snapshots are
--   incremental, and only the blocks on the device that have changed since
--   your last snapshot are saved in the new snapshot. When you delete a
--   snapshot, only the data not needed for any other snapshot is removed.
--   So regardless of which prior snapshots have been deleted, all active
--   snapshots will have access to all the information needed to restore
--   the volume.
--   
--   You cannot delete a snapshot of the root device of an EBS volume used
--   by a registered AMI. You must first de-register the AMI before you can
--   delete the snapshot.
--   
--   For more information, see <a>Deleting an Amazon EBS Snapshot</a> in
--   the <i>AmazonElastic Compute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteSnapshot.html</a>
module Network.AWS.EC2.DeleteSnapshot
data DeleteSnapshot

-- | <a>DeleteSnapshot</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ds3DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>ds3SnapshotId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteSnapshot :: Text -> DeleteSnapshot

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
ds3DryRun :: Lens' DeleteSnapshot (Maybe Bool)

-- | The ID of the EBS snapshot.
ds3SnapshotId :: Lens' DeleteSnapshot Text
data DeleteSnapshotResponse

-- | <a>DeleteSnapshotResponse</a> constructor.
deleteSnapshotResponse :: DeleteSnapshotResponse
instance Eq DeleteSnapshot
instance Ord DeleteSnapshot
instance Read DeleteSnapshot
instance Show DeleteSnapshot
instance Eq DeleteSnapshotResponse
instance Ord DeleteSnapshotResponse
instance Read DeleteSnapshotResponse
instance Show DeleteSnapshotResponse
instance Generic DeleteSnapshotResponse
instance Datatype D1DeleteSnapshotResponse
instance Constructor C1_0DeleteSnapshotResponse
instance AWSRequest DeleteSnapshot
instance ToHeaders DeleteSnapshot
instance ToQuery DeleteSnapshot
instance ToPath DeleteSnapshot


-- | Deletes a security group.
--   
--   If you attempt to delete a security group that is associated with an
--   instance, or is referenced by another security group, the operation
--   fails with <a>InUse</a> in EC2-Classic or <tt>DependencyViolation</tt>
--   in EC2-VPC.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteSecurityGroup.html</a>
module Network.AWS.EC2.DeleteSecurityGroup
data DeleteSecurityGroup

-- | <a>DeleteSecurityGroup</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsgDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dsgGroupId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dsgGroupName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
deleteSecurityGroup :: DeleteSecurityGroup

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dsgDryRun :: Lens' DeleteSecurityGroup (Maybe Bool)

-- | The ID of the security group. Required for a nondefault VPC.
dsgGroupId :: Lens' DeleteSecurityGroup (Maybe Text)

-- | <ul>
--   <li><i>EC2-Classic, default VPC</i> The name of the security group.
--   You can specify either the security group name or the security group
--   ID.</li>
--   </ul>
dsgGroupName :: Lens' DeleteSecurityGroup (Maybe Text)
data DeleteSecurityGroupResponse

-- | <a>DeleteSecurityGroupResponse</a> constructor.
deleteSecurityGroupResponse :: DeleteSecurityGroupResponse
instance Eq DeleteSecurityGroup
instance Ord DeleteSecurityGroup
instance Read DeleteSecurityGroup
instance Show DeleteSecurityGroup
instance Eq DeleteSecurityGroupResponse
instance Ord DeleteSecurityGroupResponse
instance Read DeleteSecurityGroupResponse
instance Show DeleteSecurityGroupResponse
instance Generic DeleteSecurityGroupResponse
instance Datatype D1DeleteSecurityGroupResponse
instance Constructor C1_0DeleteSecurityGroupResponse
instance AWSRequest DeleteSecurityGroup
instance ToHeaders DeleteSecurityGroup
instance ToQuery DeleteSecurityGroup
instance ToPath DeleteSecurityGroup


-- | Deletes the specified route table. You must disassociate the route
--   table from any subnets before you can delete it. You can't delete the
--   main route table.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteRouteTable.html</a>
module Network.AWS.EC2.DeleteRouteTable
data DeleteRouteTable

-- | <a>DeleteRouteTable</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>drt1DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>drt1RouteTableId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteRouteTable :: Text -> DeleteRouteTable

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
drt1DryRun :: Lens' DeleteRouteTable (Maybe Bool)

-- | The ID of the route table.
drt1RouteTableId :: Lens' DeleteRouteTable Text
data DeleteRouteTableResponse

-- | <a>DeleteRouteTableResponse</a> constructor.
deleteRouteTableResponse :: DeleteRouteTableResponse
instance Eq DeleteRouteTable
instance Ord DeleteRouteTable
instance Read DeleteRouteTable
instance Show DeleteRouteTable
instance Eq DeleteRouteTableResponse
instance Ord DeleteRouteTableResponse
instance Read DeleteRouteTableResponse
instance Show DeleteRouteTableResponse
instance Generic DeleteRouteTableResponse
instance Datatype D1DeleteRouteTableResponse
instance Constructor C1_0DeleteRouteTableResponse
instance AWSRequest DeleteRouteTable
instance ToHeaders DeleteRouteTable
instance ToQuery DeleteRouteTable
instance ToPath DeleteRouteTable


-- | Deletes the specified route from the specified route table.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteRoute.html</a>
module Network.AWS.EC2.DeleteRoute
data DeleteRoute

-- | <a>DeleteRoute</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>drDestinationCidrBlock</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>drDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>drRouteTableId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteRoute :: Text -> Text -> DeleteRoute

-- | The CIDR range for the route. The value you specify must match the
--   CIDR for the route exactly.
drDestinationCidrBlock :: Lens' DeleteRoute Text

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
drDryRun :: Lens' DeleteRoute (Maybe Bool)

-- | The ID of the route table.
drRouteTableId :: Lens' DeleteRoute Text
data DeleteRouteResponse

-- | <a>DeleteRouteResponse</a> constructor.
deleteRouteResponse :: DeleteRouteResponse
instance Eq DeleteRoute
instance Ord DeleteRoute
instance Read DeleteRoute
instance Show DeleteRoute
instance Eq DeleteRouteResponse
instance Ord DeleteRouteResponse
instance Read DeleteRouteResponse
instance Show DeleteRouteResponse
instance Generic DeleteRouteResponse
instance Datatype D1DeleteRouteResponse
instance Constructor C1_0DeleteRouteResponse
instance AWSRequest DeleteRoute
instance ToHeaders DeleteRoute
instance ToQuery DeleteRoute
instance ToPath DeleteRoute


-- | Deletes the specified placement group. You must terminate all
--   instances in the placement group before you can delete the placement
--   group. For more information about placement groups and cluster
--   instances, see <a>ClusterInstances</a> in the <i>Amazon Elastic
--   Compute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeletePlacementGroup.html</a>
module Network.AWS.EC2.DeletePlacementGroup
data DeletePlacementGroup

-- | <a>DeletePlacementGroup</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dpgDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dpgGroupName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deletePlacementGroup :: Text -> DeletePlacementGroup

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dpgDryRun :: Lens' DeletePlacementGroup (Maybe Bool)

-- | The name of the placement group.
dpgGroupName :: Lens' DeletePlacementGroup Text
data DeletePlacementGroupResponse

-- | <a>DeletePlacementGroupResponse</a> constructor.
deletePlacementGroupResponse :: DeletePlacementGroupResponse
instance Eq DeletePlacementGroup
instance Ord DeletePlacementGroup
instance Read DeletePlacementGroup
instance Show DeletePlacementGroup
instance Eq DeletePlacementGroupResponse
instance Ord DeletePlacementGroupResponse
instance Read DeletePlacementGroupResponse
instance Show DeletePlacementGroupResponse
instance Generic DeletePlacementGroupResponse
instance Datatype D1DeletePlacementGroupResponse
instance Constructor C1_0DeletePlacementGroupResponse
instance AWSRequest DeletePlacementGroup
instance ToHeaders DeletePlacementGroup
instance ToQuery DeletePlacementGroup
instance ToPath DeletePlacementGroup


-- | Deletes the specified network interface. You must detach the network
--   interface before you can delete it.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteNetworkInterface.html</a>
module Network.AWS.EC2.DeleteNetworkInterface
data DeleteNetworkInterface

-- | <a>DeleteNetworkInterface</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dni2DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dni2NetworkInterfaceId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteNetworkInterface :: Text -> DeleteNetworkInterface

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dni2DryRun :: Lens' DeleteNetworkInterface (Maybe Bool)

-- | The ID of the network interface.
dni2NetworkInterfaceId :: Lens' DeleteNetworkInterface Text
data DeleteNetworkInterfaceResponse

-- | <a>DeleteNetworkInterfaceResponse</a> constructor.
deleteNetworkInterfaceResponse :: DeleteNetworkInterfaceResponse
instance Eq DeleteNetworkInterface
instance Ord DeleteNetworkInterface
instance Read DeleteNetworkInterface
instance Show DeleteNetworkInterface
instance Eq DeleteNetworkInterfaceResponse
instance Ord DeleteNetworkInterfaceResponse
instance Read DeleteNetworkInterfaceResponse
instance Show DeleteNetworkInterfaceResponse
instance Generic DeleteNetworkInterfaceResponse
instance Datatype D1DeleteNetworkInterfaceResponse
instance Constructor C1_0DeleteNetworkInterfaceResponse
instance AWSRequest DeleteNetworkInterface
instance ToHeaders DeleteNetworkInterface
instance ToQuery DeleteNetworkInterface
instance ToPath DeleteNetworkInterface


-- | Deletes the specified ingress or egress entry (rule) from the
--   specified network ACL.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteNetworkAclEntry.html</a>
module Network.AWS.EC2.DeleteNetworkAclEntry
data DeleteNetworkAclEntry

-- | <a>DeleteNetworkAclEntry</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dnaeDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dnaeEgress</a> <tt>::</tt> <a>Bool</a></li>
--   <li><a>dnaeNetworkAclId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>dnaeRuleNumber</a> <tt>::</tt> <a>Int</a></li>
--   </ul>
deleteNetworkAclEntry :: Text -> Int -> Bool -> DeleteNetworkAclEntry

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dnaeDryRun :: Lens' DeleteNetworkAclEntry (Maybe Bool)

-- | Indicates whether the rule is an egress rule.
dnaeEgress :: Lens' DeleteNetworkAclEntry Bool

-- | The ID of the network ACL.
dnaeNetworkAclId :: Lens' DeleteNetworkAclEntry Text

-- | The rule number of the entry to delete.
dnaeRuleNumber :: Lens' DeleteNetworkAclEntry Int
data DeleteNetworkAclEntryResponse

-- | <a>DeleteNetworkAclEntryResponse</a> constructor.
deleteNetworkAclEntryResponse :: DeleteNetworkAclEntryResponse
instance Eq DeleteNetworkAclEntry
instance Ord DeleteNetworkAclEntry
instance Read DeleteNetworkAclEntry
instance Show DeleteNetworkAclEntry
instance Eq DeleteNetworkAclEntryResponse
instance Ord DeleteNetworkAclEntryResponse
instance Read DeleteNetworkAclEntryResponse
instance Show DeleteNetworkAclEntryResponse
instance Generic DeleteNetworkAclEntryResponse
instance Datatype D1DeleteNetworkAclEntryResponse
instance Constructor C1_0DeleteNetworkAclEntryResponse
instance AWSRequest DeleteNetworkAclEntry
instance ToHeaders DeleteNetworkAclEntry
instance ToQuery DeleteNetworkAclEntry
instance ToPath DeleteNetworkAclEntry


-- | Deletes the specified network ACL. You can't delete the ACL if it's
--   associated with any subnets. You can't delete the default network ACL.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteNetworkAcl.html</a>
module Network.AWS.EC2.DeleteNetworkAcl
data DeleteNetworkAcl

-- | <a>DeleteNetworkAcl</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dnaDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dnaNetworkAclId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteNetworkAcl :: Text -> DeleteNetworkAcl

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dnaDryRun :: Lens' DeleteNetworkAcl (Maybe Bool)

-- | The ID of the network ACL.
dnaNetworkAclId :: Lens' DeleteNetworkAcl Text
data DeleteNetworkAclResponse

-- | <a>DeleteNetworkAclResponse</a> constructor.
deleteNetworkAclResponse :: DeleteNetworkAclResponse
instance Eq DeleteNetworkAcl
instance Ord DeleteNetworkAcl
instance Read DeleteNetworkAcl
instance Show DeleteNetworkAcl
instance Eq DeleteNetworkAclResponse
instance Ord DeleteNetworkAclResponse
instance Read DeleteNetworkAclResponse
instance Show DeleteNetworkAclResponse
instance Generic DeleteNetworkAclResponse
instance Datatype D1DeleteNetworkAclResponse
instance Constructor C1_0DeleteNetworkAclResponse
instance AWSRequest DeleteNetworkAcl
instance ToHeaders DeleteNetworkAcl
instance ToQuery DeleteNetworkAcl
instance ToPath DeleteNetworkAcl


-- | Deletes the specified key pair, by removing the public key from Amazon
--   EC2.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteKeyPair.html</a>
module Network.AWS.EC2.DeleteKeyPair
data DeleteKeyPair

-- | <a>DeleteKeyPair</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dkpDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dkpKeyName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteKeyPair :: Text -> DeleteKeyPair

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dkpDryRun :: Lens' DeleteKeyPair (Maybe Bool)

-- | The name of the key pair.
dkpKeyName :: Lens' DeleteKeyPair Text
data DeleteKeyPairResponse

-- | <a>DeleteKeyPairResponse</a> constructor.
deleteKeyPairResponse :: DeleteKeyPairResponse
instance Eq DeleteKeyPair
instance Ord DeleteKeyPair
instance Read DeleteKeyPair
instance Show DeleteKeyPair
instance Eq DeleteKeyPairResponse
instance Ord DeleteKeyPairResponse
instance Read DeleteKeyPairResponse
instance Show DeleteKeyPairResponse
instance Generic DeleteKeyPairResponse
instance Datatype D1DeleteKeyPairResponse
instance Constructor C1_0DeleteKeyPairResponse
instance AWSRequest DeleteKeyPair
instance ToHeaders DeleteKeyPair
instance ToQuery DeleteKeyPair
instance ToPath DeleteKeyPair


-- | Deletes the specified Internet gateway. You must detach the Internet
--   gateway from the VPC before you can delete it.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteInternetGateway.html</a>
module Network.AWS.EC2.DeleteInternetGateway
data DeleteInternetGateway

-- | <a>DeleteInternetGateway</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dig2DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dig2InternetGatewayId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteInternetGateway :: Text -> DeleteInternetGateway

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dig2DryRun :: Lens' DeleteInternetGateway (Maybe Bool)

-- | The ID of the Internet gateway.
dig2InternetGatewayId :: Lens' DeleteInternetGateway Text
data DeleteInternetGatewayResponse

-- | <a>DeleteInternetGatewayResponse</a> constructor.
deleteInternetGatewayResponse :: DeleteInternetGatewayResponse
instance Eq DeleteInternetGateway
instance Ord DeleteInternetGateway
instance Read DeleteInternetGateway
instance Show DeleteInternetGateway
instance Eq DeleteInternetGatewayResponse
instance Ord DeleteInternetGatewayResponse
instance Read DeleteInternetGatewayResponse
instance Show DeleteInternetGatewayResponse
instance Generic DeleteInternetGatewayResponse
instance Datatype D1DeleteInternetGatewayResponse
instance Constructor C1_0DeleteInternetGatewayResponse
instance AWSRequest DeleteInternetGateway
instance ToHeaders DeleteInternetGateway
instance ToQuery DeleteInternetGateway
instance ToPath DeleteInternetGateway


-- | Deletes the specified set of DHCP options. You must disassociate the
--   set of DHCP options before you can delete it. You can disassociate the
--   set of DHCP options by associating either a new set of options or the
--   default set of options with the VPC.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteDhcpOptions.html</a>
module Network.AWS.EC2.DeleteDhcpOptions
data DeleteDhcpOptions

-- | <a>DeleteDhcpOptions</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ddo1DhcpOptionsId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ddo1DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   </ul>
deleteDhcpOptions :: Text -> DeleteDhcpOptions

-- | The ID of the DHCP options set.
ddo1DhcpOptionsId :: Lens' DeleteDhcpOptions Text

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
ddo1DryRun :: Lens' DeleteDhcpOptions (Maybe Bool)
data DeleteDhcpOptionsResponse

-- | <a>DeleteDhcpOptionsResponse</a> constructor.
deleteDhcpOptionsResponse :: DeleteDhcpOptionsResponse
instance Eq DeleteDhcpOptions
instance Ord DeleteDhcpOptions
instance Read DeleteDhcpOptions
instance Show DeleteDhcpOptions
instance Eq DeleteDhcpOptionsResponse
instance Ord DeleteDhcpOptionsResponse
instance Read DeleteDhcpOptionsResponse
instance Show DeleteDhcpOptionsResponse
instance Generic DeleteDhcpOptionsResponse
instance Datatype D1DeleteDhcpOptionsResponse
instance Constructor C1_0DeleteDhcpOptionsResponse
instance AWSRequest DeleteDhcpOptions
instance ToHeaders DeleteDhcpOptions
instance ToQuery DeleteDhcpOptions
instance ToPath DeleteDhcpOptions


-- | Deletes the specified customer gateway. You must delete the VPN
--   connection before you can delete the customer gateway.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteCustomerGateway.html</a>
module Network.AWS.EC2.DeleteCustomerGateway
data DeleteCustomerGateway

-- | <a>DeleteCustomerGateway</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dcg1CustomerGatewayId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>dcg1DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   </ul>
deleteCustomerGateway :: Text -> DeleteCustomerGateway

-- | The ID of the customer gateway.
dcg1CustomerGatewayId :: Lens' DeleteCustomerGateway Text

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
dcg1DryRun :: Lens' DeleteCustomerGateway (Maybe Bool)
data DeleteCustomerGatewayResponse

-- | <a>DeleteCustomerGatewayResponse</a> constructor.
deleteCustomerGatewayResponse :: DeleteCustomerGatewayResponse
instance Eq DeleteCustomerGateway
instance Ord DeleteCustomerGateway
instance Read DeleteCustomerGateway
instance Show DeleteCustomerGateway
instance Eq DeleteCustomerGatewayResponse
instance Ord DeleteCustomerGatewayResponse
instance Read DeleteCustomerGatewayResponse
instance Show DeleteCustomerGatewayResponse
instance Generic DeleteCustomerGatewayResponse
instance Datatype D1DeleteCustomerGatewayResponse
instance Constructor C1_0DeleteCustomerGatewayResponse
instance AWSRequest DeleteCustomerGateway
instance ToHeaders DeleteCustomerGateway
instance ToQuery DeleteCustomerGateway
instance ToPath DeleteCustomerGateway


-- | Creates a virtual private gateway. A virtual private gateway is the
--   endpoint on the VPC side of your VPN connection. You can create a
--   virtual private gateway before creating the VPC itself.
--   
--   For more information about virtual private gateways, see <a>Adding a
--   HardwareVirtual Private Gateway to Your VPC</a> in the <i>Amazon
--   Virtual Private Cloud UserGuide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html</a>
module Network.AWS.EC2.CreateVpnGateway
data CreateVpnGateway

-- | <a>CreateVpnGateway</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cvgAvailabilityZone</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cvgDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>cvgType</a> <tt>::</tt> <a>GatewayType</a></li>
--   </ul>
createVpnGateway :: GatewayType -> CreateVpnGateway

-- | The Availability Zone for the virtual private gateway.
cvgAvailabilityZone :: Lens' CreateVpnGateway (Maybe Text)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
cvgDryRun :: Lens' CreateVpnGateway (Maybe Bool)

-- | The type of VPN connection this virtual private gateway supports.
cvgType :: Lens' CreateVpnGateway GatewayType
data CreateVpnGatewayResponse

-- | <a>CreateVpnGatewayResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cvgrVpnGateway</a> <tt>::</tt> <a>Maybe</a>
--   <a>VpnGateway</a></li>
--   </ul>
createVpnGatewayResponse :: CreateVpnGatewayResponse

-- | Information about the virtual private gateway.
cvgrVpnGateway :: Lens' CreateVpnGatewayResponse (Maybe VpnGateway)
instance Eq CreateVpnGateway
instance Read CreateVpnGateway
instance Show CreateVpnGateway
instance Eq CreateVpnGatewayResponse
instance Read CreateVpnGatewayResponse
instance Show CreateVpnGatewayResponse
instance FromXML CreateVpnGatewayResponse
instance AWSRequest CreateVpnGateway
instance ToHeaders CreateVpnGateway
instance ToQuery CreateVpnGateway
instance ToPath CreateVpnGateway


-- | Creates a static route associated with a VPN connection between an
--   existing virtual private gateway and a VPN customer gateway. The
--   static route allows traffic to be routed from the virtual private
--   gateway to the VPN customer gateway.
--   
--   For more information about VPN connections, see <a>Adding a Hardware
--   VirtualPrivate Gateway to Your VPC</a> in the <i>Amazon Virtual
--   Private Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnConnectionRoute.html</a>
module Network.AWS.EC2.CreateVpnConnectionRoute
data CreateVpnConnectionRoute

-- | <a>CreateVpnConnectionRoute</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cvcrDestinationCidrBlock</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cvcrVpnConnectionId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createVpnConnectionRoute :: Text -> Text -> CreateVpnConnectionRoute

-- | The CIDR block associated with the local subnet of the customer
--   network.
cvcrDestinationCidrBlock :: Lens' CreateVpnConnectionRoute Text

-- | The ID of the VPN connection.
cvcrVpnConnectionId :: Lens' CreateVpnConnectionRoute Text
data CreateVpnConnectionRouteResponse

-- | <a>CreateVpnConnectionRouteResponse</a> constructor.
createVpnConnectionRouteResponse :: CreateVpnConnectionRouteResponse
instance Eq CreateVpnConnectionRoute
instance Ord CreateVpnConnectionRoute
instance Read CreateVpnConnectionRoute
instance Show CreateVpnConnectionRoute
instance Eq CreateVpnConnectionRouteResponse
instance Ord CreateVpnConnectionRouteResponse
instance Read CreateVpnConnectionRouteResponse
instance Show CreateVpnConnectionRouteResponse
instance Generic CreateVpnConnectionRouteResponse
instance Datatype D1CreateVpnConnectionRouteResponse
instance Constructor C1_0CreateVpnConnectionRouteResponse
instance AWSRequest CreateVpnConnectionRoute
instance ToHeaders CreateVpnConnectionRoute
instance ToQuery CreateVpnConnectionRoute
instance ToPath CreateVpnConnectionRoute


-- | Creates a VPN connection between an existing virtual private gateway
--   and a VPN customer gateway. The only supported connection type is
--   'ipsec.1'.
--   
--   The response includes information that you need to give to your
--   network administrator to configure your customer gateway.
--   
--   We strongly recommend that you use HTTPS when calling this operation
--   because the response contains sensitive cryptographic information for
--   configuring your customer gateway.
--   
--   If you decide to shut down your VPN connection for any reason and
--   later create a new VPN connection, you must reconfigure your customer
--   gateway with the new information returned from this call.
--   
--   For more information about VPN connections, see <a>Adding a Hardware
--   VirtualPrivate Gateway to Your VPC</a> in the <i>Amazon Virtual
--   Private Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnConnection.html</a>
module Network.AWS.EC2.CreateVpnConnection
data CreateVpnConnection

-- | <a>CreateVpnConnection</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cvcCustomerGatewayId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cvcDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>cvcOptions</a> <tt>::</tt> <a>Maybe</a>
--   <a>VpnConnectionOptionsSpecification</a></li>
--   <li><a>cvcType</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cvcVpnGatewayId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createVpnConnection :: Text -> Text -> Text -> CreateVpnConnection

-- | The ID of the customer gateway.
cvcCustomerGatewayId :: Lens' CreateVpnConnection Text

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
cvcDryRun :: Lens' CreateVpnConnection (Maybe Bool)

-- | Indicates whether the VPN connection requires static routes. If you
--   are creating a VPN connection for a device that does not support BGP,
--   you must specify <tt>true</tt>.
--   
--   Default: <tt>false</tt>
cvcOptions :: Lens' CreateVpnConnection (Maybe VpnConnectionOptionsSpecification)

-- | The type of VPN connection ('ipsec.1').
cvcType :: Lens' CreateVpnConnection Text

-- | The ID of the virtual private gateway.
cvcVpnGatewayId :: Lens' CreateVpnConnection Text
data CreateVpnConnectionResponse

-- | <a>CreateVpnConnectionResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cvcrVpnConnection</a> <tt>::</tt> <a>Maybe</a>
--   <a>VpnConnection</a></li>
--   </ul>
createVpnConnectionResponse :: CreateVpnConnectionResponse

-- | Information about the VPN connection.
cvcrVpnConnection :: Lens' CreateVpnConnectionResponse (Maybe VpnConnection)
instance Eq CreateVpnConnection
instance Read CreateVpnConnection
instance Show CreateVpnConnection
instance Eq CreateVpnConnectionResponse
instance Read CreateVpnConnectionResponse
instance Show CreateVpnConnectionResponse
instance FromXML CreateVpnConnectionResponse
instance AWSRequest CreateVpnConnection
instance ToHeaders CreateVpnConnection
instance ToQuery CreateVpnConnection
instance ToPath CreateVpnConnection


-- | Requests a VPC peering connection between two VPCs: a requester VPC
--   that you own and a peer VPC with which to create the connection. The
--   peer VPC can belong to another AWS account. The requester VPC and peer
--   VPC cannot have overlapping CIDR blocks.
--   
--   The owner of the peer VPC must accept the peering request to activate
--   the peering connection. The VPC peering connection request expires
--   after 7 days, after which it cannot be accepted or rejected.
--   
--   A <a>CreateVpcPeeringConnection</a> request between VPCs with
--   overlapping CIDR blocks results in the VPC peering connection having a
--   status of <tt>failed</tt>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpcPeeringConnection.html</a>
module Network.AWS.EC2.CreateVpcPeeringConnection
data CreateVpcPeeringConnection

-- | <a>CreateVpcPeeringConnection</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cvpcDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>cvpcPeerOwnerId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cvpcPeerVpcId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cvpcVpcId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
createVpcPeeringConnection :: CreateVpcPeeringConnection

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
cvpcDryRun :: Lens' CreateVpcPeeringConnection (Maybe Bool)

-- | The AWS account ID of the owner of the peer VPC.
--   
--   Default: Your AWS account ID
cvpcPeerOwnerId :: Lens' CreateVpcPeeringConnection (Maybe Text)

-- | The ID of the VPC with which you are creating the VPC peering
--   connection.
cvpcPeerVpcId :: Lens' CreateVpcPeeringConnection (Maybe Text)

-- | The ID of the requester VPC.
cvpcVpcId :: Lens' CreateVpcPeeringConnection (Maybe Text)
data CreateVpcPeeringConnectionResponse

-- | <a>CreateVpcPeeringConnectionResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cvpcrVpcPeeringConnection</a> <tt>::</tt> <a>Maybe</a>
--   <a>VpcPeeringConnection</a></li>
--   </ul>
createVpcPeeringConnectionResponse :: CreateVpcPeeringConnectionResponse

-- | Information about the VPC peering connection.
cvpcrVpcPeeringConnection :: Lens' CreateVpcPeeringConnectionResponse (Maybe VpcPeeringConnection)
instance Eq CreateVpcPeeringConnection
instance Ord CreateVpcPeeringConnection
instance Read CreateVpcPeeringConnection
instance Show CreateVpcPeeringConnection
instance Eq CreateVpcPeeringConnectionResponse
instance Read CreateVpcPeeringConnectionResponse
instance Show CreateVpcPeeringConnectionResponse
instance FromXML CreateVpcPeeringConnectionResponse
instance AWSRequest CreateVpcPeeringConnection
instance ToHeaders CreateVpcPeeringConnection
instance ToQuery CreateVpcPeeringConnection
instance ToPath CreateVpcPeeringConnection


-- | Creates a VPC endpoint for a specified AWS service. An endpoint
--   enables you to create a private connection between your VPC and
--   another AWS service in your account. You can specify an endpoint
--   policy to attach to the endpoint that will control access to the
--   service from your VPC. You can also specify the VPC route tables that
--   use the endpoint.
--   
--   Currently, only endpoints to Amazon S3 are supported.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpcEndpoint.html</a>
module Network.AWS.EC2.CreateVpcEndpoint
data CreateVpcEndpoint

-- | <a>CreateVpcEndpoint</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cveClientToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cveDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>cvePolicyDocument</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cveRouteTableIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>cveServiceName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cveVpcId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createVpcEndpoint :: Text -> Text -> CreateVpcEndpoint

-- | Unique, case-sensitive identifier you provide to ensure the
--   idempotency of the request. For more information, see <a>How to Ensure
--   Idempotency</a>.
cveClientToken :: Lens' CreateVpcEndpoint (Maybe Text)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
cveDryRun :: Lens' CreateVpcEndpoint (Maybe Bool)

-- | A policy to attach to the endpoint that controls access to the
--   service. The policy must be in valid JSON format. If this parameter is
--   not specified, we attach a default policy that allows full access to
--   the service.
cvePolicyDocument :: Lens' CreateVpcEndpoint (Maybe Text)

-- | One or more route table IDs.
cveRouteTableIds :: Lens' CreateVpcEndpoint [Text]

-- | The AWS service name, in the form
--   com.amazonaws.<a>region</a>.<a>service</a>. To get a list of available
--   services, use the DescribeVpcEndpointServices request.
cveServiceName :: Lens' CreateVpcEndpoint Text

-- | The ID of the VPC in which the endpoint will be used.
cveVpcId :: Lens' CreateVpcEndpoint Text
data CreateVpcEndpointResponse

-- | <a>CreateVpcEndpointResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cverClientToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cverVpcEndpoint</a> <tt>::</tt> <a>Maybe</a>
--   <a>VpcEndpoint</a></li>
--   </ul>
createVpcEndpointResponse :: CreateVpcEndpointResponse

-- | Unique, case-sensitive identifier you provide to ensure the
--   idempotency of the request.
cverClientToken :: Lens' CreateVpcEndpointResponse (Maybe Text)

-- | Information about the endpoint.
cverVpcEndpoint :: Lens' CreateVpcEndpointResponse (Maybe VpcEndpoint)
instance Eq CreateVpcEndpoint
instance Ord CreateVpcEndpoint
instance Read CreateVpcEndpoint
instance Show CreateVpcEndpoint
instance Eq CreateVpcEndpointResponse
instance Read CreateVpcEndpointResponse
instance Show CreateVpcEndpointResponse
instance FromXML CreateVpcEndpointResponse
instance AWSRequest CreateVpcEndpoint
instance ToHeaders CreateVpcEndpoint
instance ToQuery CreateVpcEndpoint
instance ToPath CreateVpcEndpoint


-- | Creates a VPC with the specified CIDR block.
--   
--   The smallest VPC you can create uses a /28 netmask (16 IP addresses),
--   and the largest uses a /16 netmask (65,536 IP addresses). To help you
--   decide how big to make your VPC, see <a>Your VPC and Subnets</a> in
--   the <i>Amazon Virtual PrivateCloud User Guide</i>.
--   
--   By default, each instance you launch in the VPC has the default DHCP
--   options, which includes only a default DNS server that we provide
--   (AmazonProvidedDNS). For more information about DHCP options, see
--   <a>DHCPOptions Sets</a> in the <i>Amazon Virtual Private Cloud User
--   Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpc.html</a>
module Network.AWS.EC2.CreateVpc
data CreateVpc

-- | <a>CreateVpc</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cvCidrBlock</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cvDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>cvInstanceTenancy</a> <tt>::</tt> <a>Maybe</a>
--   <a>Tenancy</a></li>
--   </ul>
createVpc :: Text -> CreateVpc

-- | The network range for the VPC, in CIDR notation. For example,
--   '10.0.0.0/16'.
cvCidrBlock :: Lens' CreateVpc Text

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
cvDryRun :: Lens' CreateVpc (Maybe Bool)

-- | The supported tenancy options for instances launched into the VPC. A
--   value of 'default' means that instances can be launched with any
--   tenancy; a value of <tt>dedicated</tt> means all instances launched
--   into the VPC are launched as dedicated tenancy instances regardless of
--   the tenancy assigned to the instance at launch. Dedicated tenancy
--   instances run on single-tenant hardware.
--   
--   Default: 'default'
cvInstanceTenancy :: Lens' CreateVpc (Maybe Tenancy)
data CreateVpcResponse

-- | <a>CreateVpcResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cvrVpc</a> <tt>::</tt> <a>Maybe</a> <a>Vpc</a></li>
--   </ul>
createVpcResponse :: CreateVpcResponse

-- | Information about the VPC.
cvrVpc :: Lens' CreateVpcResponse (Maybe Vpc)
instance Eq CreateVpc
instance Read CreateVpc
instance Show CreateVpc
instance Eq CreateVpcResponse
instance Read CreateVpcResponse
instance Show CreateVpcResponse
instance FromXML CreateVpcResponse
instance AWSRequest CreateVpc
instance ToHeaders CreateVpc
instance ToQuery CreateVpc
instance ToPath CreateVpc


-- | Creates an EBS volume that can be attached to an instance in the same
--   Availability Zone. The volume is created in the regional endpoint that
--   you send the HTTP request to. For more information see <a>Regions and
--   Endpoints</a>.
--   
--   You can create a new empty volume or restore a volume from an EBS
--   snapshot. Any AWS Marketplace product codes from the snapshot are
--   propagated to the volume.
--   
--   You can create encrypted volumes with the <tt>Encrypted</tt>
--   parameter. Encrypted volumes may only be attached to instances that
--   support Amazon EBS encryption. Volumes that are created from encrypted
--   snapshots are also automatically encrypted. For more information, see
--   <a>Amazon EBS Encryption</a> in the <i>AmazonElastic Compute Cloud
--   User Guide</i>.
--   
--   For more information, see <a>Creating or Restoring an Amazon EBS
--   Volume</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVolume.html</a>
module Network.AWS.EC2.CreateVolume
data CreateVolume

-- | <a>CreateVolume</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cv1AvailabilityZone</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cv1DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>cv1Encrypted</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>cv1Iops</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>cv1KmsKeyId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cv1Size</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>cv1SnapshotId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cv1VolumeType</a> <tt>::</tt> <a>Maybe</a>
--   <a>VolumeType</a></li>
--   </ul>
createVolume :: Text -> CreateVolume

-- | The Availability Zone in which to create the volume. Use
--   <tt>DescribeAvailabilityZones</tt> to list the Availability Zones that
--   are currently available to you.
cv1AvailabilityZone :: Lens' CreateVolume Text

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
cv1DryRun :: Lens' CreateVolume (Maybe Bool)

-- | Specifies whether the volume should be encrypted. Encrypted Amazon EBS
--   volumes may only be attached to instances that support Amazon EBS
--   encryption. Volumes that are created from encrypted snapshots are
--   automatically encrypted. There is no way to create an encrypted volume
--   from an unencrypted snapshot or vice versa. If your AMI uses encrypted
--   volumes, you can only launch it on supported instance types. For more
--   information, see <a>Amazon EBSEncryption</a> in the <i>Amazon Elastic
--   Compute Cloud User Guide</i>.
cv1Encrypted :: Lens' CreateVolume (Maybe Bool)

-- | Only valid for Provisioned IOPS (SSD) volumes. The number of I/O
--   operations per second (IOPS) to provision for the volume, with a
--   maximum ratio of 30 IOPS/GiB.
--   
--   Constraint: Range is 100 to 20000 for Provisioned IOPS (SSD) volumes
cv1Iops :: Lens' CreateVolume (Maybe Int)

-- | The full ARN of the AWS Key Management Service (KMS) master key to use
--   when creating the encrypted volume. This parameter is only required if
--   you want to use a non-default master key; if this parameter is not
--   specified, the default master key is used. The ARN contains the
--   'arn:aws:kms' namespace, followed by the region of the master key, the
--   AWS account ID of the master key owner, the <tt>key</tt> namespace,
--   and then the master key ID. For example,
--   arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:key/<i>abcd1234-a123-456a-a12b-a123b4cd56ef</i>.
cv1KmsKeyId :: Lens' CreateVolume (Maybe Text)

-- | The size of the volume, in GiBs.
--   
--   Constraints: '1-1024' for <tt>standard</tt> volumes, '1-16384' for
--   <tt>gp2</tt> volumes, and '4-16384' for <tt>io1</tt> volumes. If you
--   specify a snapshot, the volume size must be equal to or larger than
--   the snapshot size.
--   
--   Default: If you're creating the volume from a snapshot and don't
--   specify a volume size, the default is the snapshot size.
cv1Size :: Lens' CreateVolume (Maybe Int)

-- | The snapshot from which to create the volume.
cv1SnapshotId :: Lens' CreateVolume (Maybe Text)

-- | The volume type. This can be <tt>gp2</tt> for General Purpose (SSD)
--   volumes, <tt>io1</tt> for Provisioned IOPS (SSD) volumes, or
--   <tt>standard</tt> for Magnetic volumes.
--   
--   Default: <tt>standard</tt>
cv1VolumeType :: Lens' CreateVolume (Maybe VolumeType)
data CreateVolumeResponse

-- | <a>CreateVolumeResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cvrAttachments</a> <tt>::</tt> [<a>VolumeAttachment</a>]</li>
--   <li><a>cvrAvailabilityZone</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cvrCreateTime</a> <tt>::</tt> <a>UTCTime</a></li>
--   <li><a>cvrEncrypted</a> <tt>::</tt> <a>Bool</a></li>
--   <li><a>cvrIops</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>cvrKmsKeyId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cvrSize</a> <tt>::</tt> <a>Int</a></li>
--   <li><a>cvrSnapshotId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cvrState</a> <tt>::</tt> <a>VolumeState</a></li>
--   <li><a>cvrTags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   <li><a>cvrVolumeId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cvrVolumeType</a> <tt>::</tt> <a>VolumeType</a></li>
--   </ul>
createVolumeResponse :: Text -> Int -> Text -> Text -> VolumeState -> UTCTime -> VolumeType -> Bool -> CreateVolumeResponse

-- | Information about the volume attachments.
cvrAttachments :: Lens' CreateVolumeResponse [VolumeAttachment]

-- | The Availability Zone for the volume.
cvrAvailabilityZone :: Lens' CreateVolumeResponse Text

-- | The time stamp when volume creation was initiated.
cvrCreateTime :: Lens' CreateVolumeResponse UTCTime

-- | Indicates whether the volume will be encrypted.
cvrEncrypted :: Lens' CreateVolumeResponse Bool

-- | The number of I/O operations per second (IOPS) that the volume
--   supports. For Provisioned IOPS (SSD) volumes, this represents the
--   number of IOPS that are provisioned for the volume. For General
--   Purpose (SSD) volumes, this represents the baseline performance of the
--   volume and the rate at which the volume accumulates I/O credits for
--   bursting. For more information on General Purpose (SSD) baseline
--   performance, I<i>O credits, and bursting, see
--   &lt;http:</i><i>docs.aws.amazon.com</i>AWSEC2<i>latest</i>UserGuide<i>EBSVolumeTypes.html
--   Amazon EBSVolume Types&gt; in the </i>Amazon Elastic Compute Cloud
--   User Guide/.
--   
--   Constraint: Range is 100 to 20000 for Provisioned IOPS (SSD) volumes
--   and 3 to 10000 for General Purpose (SSD) volumes.
--   
--   Condition: This parameter is required for requests to create
--   <tt>io1</tt> volumes; it is not used in requests to create
--   <tt>standard</tt> or <tt>gp2</tt> volumes.
cvrIops :: Lens' CreateVolumeResponse (Maybe Int)

-- | The full ARN of the AWS Key Management Service (KMS) master key that
--   was used to protect the volume encryption key for the volume.
cvrKmsKeyId :: Lens' CreateVolumeResponse (Maybe Text)

-- | The size of the volume, in GiBs.
cvrSize :: Lens' CreateVolumeResponse Int

-- | The snapshot from which the volume was created, if applicable.
cvrSnapshotId :: Lens' CreateVolumeResponse Text

-- | The volume state.
cvrState :: Lens' CreateVolumeResponse VolumeState

-- | Any tags assigned to the volume.
cvrTags :: Lens' CreateVolumeResponse [Tag]

-- | The ID of the volume.
cvrVolumeId :: Lens' CreateVolumeResponse Text

-- | The volume type. This can be <tt>gp2</tt> for General Purpose (SSD)
--   volumes, <tt>io1</tt> for Provisioned IOPS (SSD) volumes, or
--   <tt>standard</tt> for Magnetic volumes.
cvrVolumeType :: Lens' CreateVolumeResponse VolumeType
instance Eq CreateVolume
instance Read CreateVolume
instance Show CreateVolume
instance Eq CreateVolumeResponse
instance Read CreateVolumeResponse
instance Show CreateVolumeResponse
instance FromXML CreateVolumeResponse
instance AWSRequest CreateVolume
instance ToHeaders CreateVolume
instance ToQuery CreateVolume
instance ToPath CreateVolume


-- | Adds or overwrites one or more tags for the specified Amazon EC2
--   resource or resources. Each resource can have a maximum of 10 tags.
--   Each tag consists of a key and optional value. Tag keys must be unique
--   per resource.
--   
--   For more information about tags, see <a>Tagging Your Resources</a> in
--   the <i>AmazonElastic Compute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateTags.html</a>
module Network.AWS.EC2.CreateTags
data CreateTags

-- | <a>CreateTags</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ct1DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>ct1Resources</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>ct1Tags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   </ul>
createTags :: CreateTags

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
ct1DryRun :: Lens' CreateTags (Maybe Bool)

-- | The IDs of one or more resources to tag. For example, ami-1a2b3c4d.
ct1Resources :: Lens' CreateTags [Text]

-- | One or more tags. The <tt>value</tt> parameter is required, but if you
--   don't want the tag to have a value, specify the parameter with no
--   value, and we set the value to an empty string.
ct1Tags :: Lens' CreateTags [Tag]
data CreateTagsResponse

-- | <a>CreateTagsResponse</a> constructor.
createTagsResponse :: CreateTagsResponse
instance Eq CreateTags
instance Read CreateTags
instance Show CreateTags
instance Eq CreateTagsResponse
instance Ord CreateTagsResponse
instance Read CreateTagsResponse
instance Show CreateTagsResponse
instance Generic CreateTagsResponse
instance Datatype D1CreateTagsResponse
instance Constructor C1_0CreateTagsResponse
instance AWSRequest CreateTags
instance ToHeaders CreateTags
instance ToQuery CreateTags
instance ToPath CreateTags


-- | Creates a subnet in an existing VPC.
--   
--   When you create each subnet, you provide the VPC ID and the CIDR block
--   you want for the subnet. After you create a subnet, you can't change
--   its CIDR block. The subnet's CIDR block can be the same as the VPC's
--   CIDR block (assuming you want only a single subnet in the VPC), or a
--   subset of the VPC's CIDR block. If you create more than one subnet in
--   a VPC, the subnets' CIDR blocks must not overlap. The smallest subnet
--   (and VPC) you can create uses a <i>28 netmask (16 IP addresses), and
--   the largest uses a </i>16 netmask (65,536 IP addresses).
--   
--   AWS reserves both the first four and the last IP address in each
--   subnet's CIDR block. They're not available for use.
--   
--   If you add more than one subnet to a VPC, they're set up in a star
--   topology with a logical router in the middle.
--   
--   If you launch an instance in a VPC using an Amazon EBS-backed AMI, the
--   IP address doesn't change if you stop and restart the instance (unlike
--   a similar instance launched outside a VPC, which gets a new IP address
--   when restarted). It's therefore possible to have a subnet with no
--   running instances (they're all stopped), but no remaining IP addresses
--   available.
--   
--   For more information about subnets, see <a>Your VPC and Subnets</a> in
--   the <i>AmazonVirtual Private Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateSubnet.html</a>
module Network.AWS.EC2.CreateSubnet
data CreateSubnet

-- | <a>CreateSubnet</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cs1AvailabilityZone</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cs1CidrBlock</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cs1DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>cs1VpcId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createSubnet :: Text -> Text -> CreateSubnet

-- | The Availability Zone for the subnet.
--   
--   Default: Amazon EC2 selects one for you (recommended).
cs1AvailabilityZone :: Lens' CreateSubnet (Maybe Text)

-- | The network range for the subnet, in CIDR notation. For example,
--   '10.0.0.0/24'.
cs1CidrBlock :: Lens' CreateSubnet Text

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
cs1DryRun :: Lens' CreateSubnet (Maybe Bool)

-- | The ID of the VPC.
cs1VpcId :: Lens' CreateSubnet Text
data CreateSubnetResponse

-- | <a>CreateSubnetResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>csrSubnet</a> <tt>::</tt> <a>Maybe</a> <a>Subnet</a></li>
--   </ul>
createSubnetResponse :: CreateSubnetResponse

-- | Information about the subnet.
csrSubnet :: Lens' CreateSubnetResponse (Maybe Subnet)
instance Eq CreateSubnet
instance Ord CreateSubnet
instance Read CreateSubnet
instance Show CreateSubnet
instance Eq CreateSubnetResponse
instance Read CreateSubnetResponse
instance Show CreateSubnetResponse
instance FromXML CreateSubnetResponse
instance AWSRequest CreateSubnet
instance ToHeaders CreateSubnet
instance ToQuery CreateSubnet
instance ToPath CreateSubnet


-- | Creates a data feed for Spot Instances, enabling you to view Spot
--   Instance usage logs. You can create one data feed per AWS account. For
--   more information, see <a>Spot Instance Data Feed</a> in the <i>Amazon
--   Elastic Compute CloudUser Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateSpotDatafeedSubscription.html</a>
module Network.AWS.EC2.CreateSpotDatafeedSubscription
data CreateSpotDatafeedSubscription

-- | <a>CreateSpotDatafeedSubscription</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>csdsBucket</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>csdsDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>csdsPrefix</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
createSpotDatafeedSubscription :: Text -> CreateSpotDatafeedSubscription

-- | The Amazon S3 bucket in which to store the Spot Instance data feed.
csdsBucket :: Lens' CreateSpotDatafeedSubscription Text

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
csdsDryRun :: Lens' CreateSpotDatafeedSubscription (Maybe Bool)

-- | A prefix for the data feed file names.
csdsPrefix :: Lens' CreateSpotDatafeedSubscription (Maybe Text)
data CreateSpotDatafeedSubscriptionResponse

-- | <a>CreateSpotDatafeedSubscriptionResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>csdsrSpotDatafeedSubscription</a> <tt>::</tt> <a>Maybe</a>
--   <a>SpotDatafeedSubscription</a></li>
--   </ul>
createSpotDatafeedSubscriptionResponse :: CreateSpotDatafeedSubscriptionResponse

-- | The Spot Instance data feed subscription.
csdsrSpotDatafeedSubscription :: Lens' CreateSpotDatafeedSubscriptionResponse (Maybe SpotDatafeedSubscription)
instance Eq CreateSpotDatafeedSubscription
instance Ord CreateSpotDatafeedSubscription
instance Read CreateSpotDatafeedSubscription
instance Show CreateSpotDatafeedSubscription
instance Eq CreateSpotDatafeedSubscriptionResponse
instance Read CreateSpotDatafeedSubscriptionResponse
instance Show CreateSpotDatafeedSubscriptionResponse
instance FromXML CreateSpotDatafeedSubscriptionResponse
instance AWSRequest CreateSpotDatafeedSubscription
instance ToHeaders CreateSpotDatafeedSubscription
instance ToQuery CreateSpotDatafeedSubscription
instance ToPath CreateSpotDatafeedSubscription


-- | Creates a snapshot of an EBS volume and stores it in Amazon S3. You
--   can use snapshots for backups, to make copies of EBS volumes, and to
--   save data before shutting down an instance.
--   
--   When a snapshot is created, any AWS Marketplace product codes that are
--   associated with the source volume are propagated to the snapshot.
--   
--   You can take a snapshot of an attached volume that is in use. However,
--   snapshots only capture data that has been written to your EBS volume
--   at the time the snapshot command is issued; this may exclude any data
--   that has been cached by any applications or the operating system. If
--   you can pause any file systems on the volume long enough to take a
--   snapshot, your snapshot should be complete. However, if you cannot
--   pause all file writes to the volume, you should unmount the volume
--   from within the instance, issue the snapshot command, and then remount
--   the volume to ensure a consistent and complete snapshot. You may
--   remount and use your volume while the snapshot status is
--   <tt>pending</tt>.
--   
--   To create a snapshot for EBS volumes that serve as root devices, you
--   should stop the instance before taking the snapshot.
--   
--   Snapshots that are taken from encrypted volumes are automatically
--   encrypted. Volumes that are created from encrypted snapshots are also
--   automatically encrypted. Your encrypted volumes and any associated
--   snapshots always remain protected.
--   
--   For more information, see <a>Amazon Elastic Block Store</a> and
--   <a>Amazon EBSEncryption</a> in the <i>Amazon Elastic Compute Cloud
--   User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateSnapshot.html</a>
module Network.AWS.EC2.CreateSnapshot
data CreateSnapshot

-- | <a>CreateSnapshot</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cs2Description</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cs2DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>cs2VolumeId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createSnapshot :: Text -> CreateSnapshot

-- | A description for the snapshot.
cs2Description :: Lens' CreateSnapshot (Maybe Text)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
cs2DryRun :: Lens' CreateSnapshot (Maybe Bool)

-- | The ID of the EBS volume.
cs2VolumeId :: Lens' CreateSnapshot Text
data CreateSnapshotResponse

-- | <a>CreateSnapshotResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>csr1Description</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>csr1Encrypted</a> <tt>::</tt> <a>Bool</a></li>
--   <li><a>csr1KmsKeyId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>csr1OwnerAlias</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>csr1OwnerId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>csr1Progress</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>csr1SnapshotId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>csr1StartTime</a> <tt>::</tt> <a>UTCTime</a></li>
--   <li><a>csr1State</a> <tt>::</tt> <a>SnapshotState</a></li>
--   <li><a>csr1Tags</a> <tt>::</tt> [<a>Tag</a>]</li>
--   <li><a>csr1VolumeId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>csr1VolumeSize</a> <tt>::</tt> <a>Int</a></li>
--   </ul>
createSnapshotResponse :: Text -> Text -> SnapshotState -> UTCTime -> Text -> Text -> Text -> Int -> Bool -> CreateSnapshotResponse

-- | The description for the snapshot.
csr1Description :: Lens' CreateSnapshotResponse Text

-- | Indicates whether the snapshot is encrypted.
csr1Encrypted :: Lens' CreateSnapshotResponse Bool

-- | The full ARN of the AWS Key Management Service (KMS) master key that
--   was used to protect the volume encryption key for the parent volume.
csr1KmsKeyId :: Lens' CreateSnapshotResponse (Maybe Text)

-- | The AWS account alias (for example, <tt>amazon</tt>, <tt>self</tt>) or
--   AWS account ID that owns the snapshot.
csr1OwnerAlias :: Lens' CreateSnapshotResponse (Maybe Text)

-- | The AWS account ID of the EBS snapshot owner.
csr1OwnerId :: Lens' CreateSnapshotResponse Text

-- | The progress of the snapshot, as a percentage.
csr1Progress :: Lens' CreateSnapshotResponse Text

-- | The ID of the snapshot.
csr1SnapshotId :: Lens' CreateSnapshotResponse Text

-- | The time stamp when the snapshot was initiated.
csr1StartTime :: Lens' CreateSnapshotResponse UTCTime

-- | The snapshot state.
csr1State :: Lens' CreateSnapshotResponse SnapshotState

-- | Any tags assigned to the snapshot.
csr1Tags :: Lens' CreateSnapshotResponse [Tag]

-- | The ID of the volume.
csr1VolumeId :: Lens' CreateSnapshotResponse Text

-- | The size of the volume, in GiB.
csr1VolumeSize :: Lens' CreateSnapshotResponse Int
instance Eq CreateSnapshot
instance Ord CreateSnapshot
instance Read CreateSnapshot
instance Show CreateSnapshot
instance Eq CreateSnapshotResponse
instance Read CreateSnapshotResponse
instance Show CreateSnapshotResponse
instance FromXML CreateSnapshotResponse
instance AWSRequest CreateSnapshot
instance ToHeaders CreateSnapshot
instance ToQuery CreateSnapshot
instance ToPath CreateSnapshot


-- | Creates a security group.
--   
--   A security group is for use with instances either in the EC2-Classic
--   platform or in a specific VPC. For more information, see <a>Amazon EC2
--   SecurityGroups</a> in the <i>Amazon Elastic Compute Cloud User
--   Guide</i> and <a>Security Groups forYour VPC</a> in the <i>Amazon
--   Virtual Private Cloud User Guide</i>.
--   
--   EC2-Classic: You can have up to 500 security groups.
--   
--   EC2-VPC: You can create up to 100 security groups per VPC.
--   
--   When you create a security group, you specify a friendly name of your
--   choice. You can have a security group for use in EC2-Classic with the
--   same name as a security group for use in a VPC. However, you can't
--   have two security groups for use in EC2-Classic with the same name or
--   two security groups for use in a VPC with the same name.
--   
--   You have a default security group for use in EC2-Classic and a default
--   security group for use in your VPC. If you don't specify a security
--   group when you launch an instance, the instance is launched into the
--   appropriate default security group. A default security group includes
--   a default rule that grants instances unrestricted network access to
--   each other.
--   
--   You can add or remove rules from your security groups using
--   <tt>AuthorizeSecurityGroupIngress</tt>,
--   <tt>AuthorizeSecurityGroupEgress</tt>,
--   <tt>RevokeSecurityGroupIngress</tt>, and
--   <tt>RevokeSecurityGroupEgress</tt>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateSecurityGroup.html</a>
module Network.AWS.EC2.CreateSecurityGroup
data CreateSecurityGroup

-- | <a>CreateSecurityGroup</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>csgDescription</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>csgDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>csgGroupName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>csgVpcId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
createSecurityGroup :: Text -> Text -> CreateSecurityGroup

-- | A description for the security group. This is informational only.
--   
--   Constraints: Up to 255 characters in length
--   
--   Constraints for EC2-Classic: ASCII characters
--   
--   Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and
--   ._-:/()#,@[]+=&amp;;{}!$*
csgDescription :: Lens' CreateSecurityGroup Text

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
csgDryRun :: Lens' CreateSecurityGroup (Maybe Bool)

-- | The name of the security group.
--   
--   Constraints: Up to 255 characters in length
--   
--   Constraints for EC2-Classic: ASCII characters
--   
--   Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and
--   ._-:/()#,@[]+=&amp;;{}!$*
csgGroupName :: Lens' CreateSecurityGroup Text

-- | <ul>
--   <li><i>EC2-VPC</i> The ID of the VPC. Required for EC2-VPC.</li>
--   </ul>
csgVpcId :: Lens' CreateSecurityGroup (Maybe Text)
data CreateSecurityGroupResponse

-- | <a>CreateSecurityGroupResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>csgrGroupId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createSecurityGroupResponse :: Text -> CreateSecurityGroupResponse

-- | The ID of the security group.
csgrGroupId :: Lens' CreateSecurityGroupResponse Text
instance Eq CreateSecurityGroup
instance Ord CreateSecurityGroup
instance Read CreateSecurityGroup
instance Show CreateSecurityGroup
instance Eq CreateSecurityGroupResponse
instance Ord CreateSecurityGroupResponse
instance Read CreateSecurityGroupResponse
instance Show CreateSecurityGroupResponse
instance Monoid CreateSecurityGroupResponse
instance IsString CreateSecurityGroupResponse
instance FromXML CreateSecurityGroupResponse
instance AWSRequest CreateSecurityGroup
instance ToHeaders CreateSecurityGroup
instance ToQuery CreateSecurityGroup
instance ToPath CreateSecurityGroup


-- | Creates a route table for the specified VPC. After you create a route
--   table, you can add routes and associate the table with a subnet.
--   
--   For more information about route tables, see <a>Route Tables</a> in
--   the <i>AmazonVirtual Private Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateRouteTable.html</a>
module Network.AWS.EC2.CreateRouteTable
data CreateRouteTable

-- | <a>CreateRouteTable</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>crtDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>crtVpcId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createRouteTable :: Text -> CreateRouteTable

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
crtDryRun :: Lens' CreateRouteTable (Maybe Bool)

-- | The ID of the VPC.
crtVpcId :: Lens' CreateRouteTable Text
data CreateRouteTableResponse

-- | <a>CreateRouteTableResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>crtrRouteTable</a> <tt>::</tt> <a>Maybe</a>
--   <a>RouteTable</a></li>
--   </ul>
createRouteTableResponse :: CreateRouteTableResponse

-- | Information about the route table.
crtrRouteTable :: Lens' CreateRouteTableResponse (Maybe RouteTable)
instance Eq CreateRouteTable
instance Ord CreateRouteTable
instance Read CreateRouteTable
instance Show CreateRouteTable
instance Eq CreateRouteTableResponse
instance Read CreateRouteTableResponse
instance Show CreateRouteTableResponse
instance FromXML CreateRouteTableResponse
instance AWSRequest CreateRouteTable
instance ToHeaders CreateRouteTable
instance ToQuery CreateRouteTable
instance ToPath CreateRouteTable


-- | Creates a route in a route table within a VPC.
--   
--   You must specify one of the following targets: Internet gateway or
--   virtual private gateway, NAT instance, VPC peering connection, or
--   network interface.
--   
--   When determining how to route traffic, we use the route with the most
--   specific match. For example, let's say the traffic is destined for
--   '192.0.2.3', and the route table includes the following two routes:
--   
--   '192.0.2.0/24' (goes to some target A)
--   
--   '192.0.2.0/28' (goes to some target B)
--   
--   Both routes apply to the traffic destined for '192.0.2.3'. However,
--   the second route in the list covers a smaller number of IP addresses
--   and is therefore more specific, so we use that route to determine
--   where to target the traffic.
--   
--   For more information about route tables, see <a>Route Tables</a> in
--   the <i>AmazonVirtual Private Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateRoute.html</a>
module Network.AWS.EC2.CreateRoute
data CreateRoute

-- | <a>CreateRoute</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>crClientToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>crDestinationCidrBlock</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>crDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>crGatewayId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>crInstanceId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>crNetworkInterfaceId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>crRouteTableId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>crVpcPeeringConnectionId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
createRoute :: Text -> Text -> CreateRoute

-- | Unique, case-sensitive identifier you provide to ensure the
--   idempotency of the request. For more information, see <a>How to Ensure
--   Idempotency</a>.
crClientToken :: Lens' CreateRoute (Maybe Text)

-- | The CIDR address block used for the destination match. Routing
--   decisions are based on the most specific match.
crDestinationCidrBlock :: Lens' CreateRoute Text

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
crDryRun :: Lens' CreateRoute (Maybe Bool)

-- | The ID of an Internet gateway or virtual private gateway attached to
--   your VPC.
crGatewayId :: Lens' CreateRoute (Maybe Text)

-- | The ID of a NAT instance in your VPC. The operation fails if you
--   specify an instance ID unless exactly one network interface is
--   attached.
crInstanceId :: Lens' CreateRoute (Maybe Text)

-- | The ID of a network interface.
crNetworkInterfaceId :: Lens' CreateRoute (Maybe Text)

-- | The ID of the route table for the route.
crRouteTableId :: Lens' CreateRoute Text

-- | The ID of a VPC peering connection.
crVpcPeeringConnectionId :: Lens' CreateRoute (Maybe Text)
data CreateRouteResponse

-- | <a>CreateRouteResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>crrClientToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>crrReturn</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   </ul>
createRouteResponse :: CreateRouteResponse

-- | Unique, case-sensitive identifier you provide to ensure the
--   idempotency of the request.
crrClientToken :: Lens' CreateRouteResponse (Maybe Text)

-- | Returns <tt>true</tt> if the request succeeds; otherwise, it returns
--   an error.
crrReturn :: Lens' CreateRouteResponse (Maybe Bool)
instance Eq CreateRoute
instance Ord CreateRoute
instance Read CreateRoute
instance Show CreateRoute
instance Eq CreateRouteResponse
instance Ord CreateRouteResponse
instance Read CreateRouteResponse
instance Show CreateRouteResponse
instance FromXML CreateRouteResponse
instance AWSRequest CreateRoute
instance ToHeaders CreateRoute
instance ToQuery CreateRoute
instance ToPath CreateRoute


-- | Creates a listing for Amazon EC2 Reserved Instances to be sold in the
--   Reserved Instance Marketplace. You can submit one Reserved Instance
--   listing at a time. To get a list of your Reserved Instances, you can
--   use the <tt>DescribeReservedInstances</tt> operation.
--   
--   The Reserved Instance Marketplace matches sellers who want to resell
--   Reserved Instance capacity that they no longer need with buyers who
--   want to purchase additional capacity. Reserved Instances bought and
--   sold through the Reserved Instance Marketplace work like any other
--   Reserved Instances.
--   
--   To sell your Reserved Instances, you must first register as a Seller
--   in the Reserved Instance Marketplace. After completing the
--   registration process, you can create a Reserved Instance Marketplace
--   listing of some or all of your Reserved Instances, and specify the
--   upfront price to receive for them. Your Reserved Instance listings
--   then become available for purchase. To view the details of your
--   Reserved Instance listing, you can use the
--   <tt>DescribeReservedInstancesListings</tt> operation.
--   
--   For more information, see <a>Reserved Instance Marketplace</a> in the
--   <i>AmazonElastic Compute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateReservedInstancesListing.html</a>
module Network.AWS.EC2.CreateReservedInstancesListing
data CreateReservedInstancesListing

-- | <a>CreateReservedInstancesListing</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>crilClientToken</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>crilInstanceCount</a> <tt>::</tt> <a>Int</a></li>
--   <li><a>crilPriceSchedules</a> <tt>::</tt>
--   [<a>PriceScheduleSpecification</a>]</li>
--   <li><a>crilReservedInstancesId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createReservedInstancesListing :: Text -> Int -> Text -> CreateReservedInstancesListing

-- | Unique, case-sensitive identifier you provide to ensure idempotency of
--   your listings. This helps avoid duplicate listings. For more
--   information, see <a>Ensuring Idempotency</a>.
crilClientToken :: Lens' CreateReservedInstancesListing Text

-- | The number of instances that are a part of a Reserved Instance account
--   to be listed in the Reserved Instance Marketplace. This number should
--   be less than or equal to the instance count associated with the
--   Reserved Instance ID specified in this call.
crilInstanceCount :: Lens' CreateReservedInstancesListing Int

-- | A list specifying the price of the Reserved Instance for each month
--   remaining in the Reserved Instance term.
crilPriceSchedules :: Lens' CreateReservedInstancesListing [PriceScheduleSpecification]

-- | The ID of the active Reserved Instance.
crilReservedInstancesId :: Lens' CreateReservedInstancesListing Text
data CreateReservedInstancesListingResponse

-- | <a>CreateReservedInstancesListingResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>crilr1ReservedInstancesListings</a> <tt>::</tt>
--   [<a>ReservedInstancesListing</a>]</li>
--   </ul>
createReservedInstancesListingResponse :: CreateReservedInstancesListingResponse

-- | Information about the Reserved Instances listing.
crilr1ReservedInstancesListings :: Lens' CreateReservedInstancesListingResponse [ReservedInstancesListing]
instance Eq CreateReservedInstancesListing
instance Read CreateReservedInstancesListing
instance Show CreateReservedInstancesListing
instance Eq CreateReservedInstancesListingResponse
instance Read CreateReservedInstancesListingResponse
instance Show CreateReservedInstancesListingResponse
instance Monoid CreateReservedInstancesListingResponse
instance Semigroup CreateReservedInstancesListingResponse
instance FromXML CreateReservedInstancesListingResponse
instance AWSRequest CreateReservedInstancesListing
instance ToHeaders CreateReservedInstancesListing
instance ToQuery CreateReservedInstancesListing
instance ToPath CreateReservedInstancesListing


-- | Creates a placement group that you launch cluster instances into. You
--   must give the group a name that's unique within the scope of your
--   account.
--   
--   For more information about placement groups and cluster instances, see
--   <a>Cluster Instances</a> in the <i>Amazon Elastic Compute Cloud User
--   Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreatePlacementGroup.html</a>
module Network.AWS.EC2.CreatePlacementGroup
data CreatePlacementGroup

-- | <a>CreatePlacementGroup</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cpgDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>cpgGroupName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cpgStrategy</a> <tt>::</tt> <a>PlacementStrategy</a></li>
--   </ul>
createPlacementGroup :: Text -> PlacementStrategy -> CreatePlacementGroup

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
cpgDryRun :: Lens' CreatePlacementGroup (Maybe Bool)

-- | A name for the placement group.
--   
--   Constraints: Up to 255 ASCII characters
cpgGroupName :: Lens' CreatePlacementGroup Text

-- | The placement strategy.
cpgStrategy :: Lens' CreatePlacementGroup PlacementStrategy
data CreatePlacementGroupResponse

-- | <a>CreatePlacementGroupResponse</a> constructor.
createPlacementGroupResponse :: CreatePlacementGroupResponse
instance Eq CreatePlacementGroup
instance Read CreatePlacementGroup
instance Show CreatePlacementGroup
instance Eq CreatePlacementGroupResponse
instance Ord CreatePlacementGroupResponse
instance Read CreatePlacementGroupResponse
instance Show CreatePlacementGroupResponse
instance Generic CreatePlacementGroupResponse
instance Datatype D1CreatePlacementGroupResponse
instance Constructor C1_0CreatePlacementGroupResponse
instance AWSRequest CreatePlacementGroup
instance ToHeaders CreatePlacementGroup
instance ToQuery CreatePlacementGroup
instance ToPath CreatePlacementGroup


-- | Creates a network interface in the specified subnet.
--   
--   For more information about network interfaces, see <a>Elastic Network
--   Interfaces</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateNetworkInterface.html</a>
module Network.AWS.EC2.CreateNetworkInterface
data CreateNetworkInterface

-- | <a>CreateNetworkInterface</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cniDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cniDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>cniGroups</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>cniPrivateIpAddress</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cniPrivateIpAddresses</a> <tt>::</tt>
--   [<a>PrivateIpAddressSpecification</a>]</li>
--   <li><a>cniSecondaryPrivateIpAddressCount</a> <tt>::</tt> <a>Maybe</a>
--   <a>Int</a></li>
--   <li><a>cniSubnetId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createNetworkInterface :: Text -> CreateNetworkInterface

-- | A description for the network interface.
cniDescription :: Lens' CreateNetworkInterface (Maybe Text)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
cniDryRun :: Lens' CreateNetworkInterface (Maybe Bool)

-- | The IDs of one or more security groups.
cniGroups :: Lens' CreateNetworkInterface [Text]

-- | The primary private IP address of the network interface. If you don't
--   specify an IP address, Amazon EC2 selects one for you from the subnet
--   range. If you specify an IP address, you cannot indicate any IP
--   addresses specified in <tt>privateIpAddresses</tt> as primary (only
--   one IP address can be designated as primary).
cniPrivateIpAddress :: Lens' CreateNetworkInterface (Maybe Text)

-- | One or more private IP addresses.
cniPrivateIpAddresses :: Lens' CreateNetworkInterface [PrivateIpAddressSpecification]

-- | The number of secondary private IP addresses to assign to a network
--   interface. When you specify a number of secondary IP addresses, Amazon
--   EC2 selects these IP addresses within the subnet range. You can't
--   specify this option and specify more than one private IP address using
--   <tt>privateIpAddresses</tt>.
--   
--   The number of IP addresses you can assign to a network interface
--   varies by instance type. For more information, see <a>Private IP
--   Addresses Per ENI PerInstance Type</a> in the <i>Amazon Elastic
--   Compute Cloud User Guide</i>.
cniSecondaryPrivateIpAddressCount :: Lens' CreateNetworkInterface (Maybe Int)

-- | The ID of the subnet to associate with the network interface.
cniSubnetId :: Lens' CreateNetworkInterface Text
data CreateNetworkInterfaceResponse

-- | <a>CreateNetworkInterfaceResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cnirNetworkInterface</a> <tt>::</tt> <a>Maybe</a>
--   <a>NetworkInterface</a></li>
--   </ul>
createNetworkInterfaceResponse :: CreateNetworkInterfaceResponse

-- | Information about the network interface.
cnirNetworkInterface :: Lens' CreateNetworkInterfaceResponse (Maybe NetworkInterface)
instance Eq CreateNetworkInterface
instance Read CreateNetworkInterface
instance Show CreateNetworkInterface
instance Eq CreateNetworkInterfaceResponse
instance Read CreateNetworkInterfaceResponse
instance Show CreateNetworkInterfaceResponse
instance FromXML CreateNetworkInterfaceResponse
instance AWSRequest CreateNetworkInterface
instance ToHeaders CreateNetworkInterface
instance ToQuery CreateNetworkInterface
instance ToPath CreateNetworkInterface


-- | Creates an entry (a rule) in a network ACL with the specified rule
--   number. Each network ACL has a set of numbered ingress rules and a
--   separate set of numbered egress rules. When determining whether a
--   packet should be allowed in or out of a subnet associated with the
--   ACL, we process the entries in the ACL according to the rule numbers,
--   in ascending order. Each network ACL has a set of ingress rules and a
--   separate set of egress rules.
--   
--   We recommend that you leave room between the rule numbers (for
--   example, 100, 110, 120, ...), and not number them one right after the
--   other (for example, 101, 102, 103, ...). This makes it easier to add a
--   rule between existing ones without having to renumber the rules.
--   
--   After you add an entry, you can't modify it; you must either replace
--   it, or create an entry and delete the old one.
--   
--   For more information about network ACLs, see <a>Network ACLs</a> in
--   the <i>AmazonVirtual Private Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateNetworkAclEntry.html</a>
module Network.AWS.EC2.CreateNetworkAclEntry
data CreateNetworkAclEntry

-- | <a>CreateNetworkAclEntry</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cnaeCidrBlock</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cnaeDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>cnaeEgress</a> <tt>::</tt> <a>Bool</a></li>
--   <li><a>cnaeIcmpTypeCode</a> <tt>::</tt> <a>Maybe</a>
--   <a>IcmpTypeCode</a></li>
--   <li><a>cnaeNetworkAclId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cnaePortRange</a> <tt>::</tt> <a>Maybe</a>
--   <a>PortRange</a></li>
--   <li><a>cnaeProtocol</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cnaeRuleAction</a> <tt>::</tt> <a>RuleAction</a></li>
--   <li><a>cnaeRuleNumber</a> <tt>::</tt> <a>Int</a></li>
--   </ul>
createNetworkAclEntry :: Text -> Int -> Text -> RuleAction -> Bool -> Text -> CreateNetworkAclEntry

-- | The network range to allow or deny, in CIDR notation (for example
--   '172.16.0.0/24').
cnaeCidrBlock :: Lens' CreateNetworkAclEntry Text

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
cnaeDryRun :: Lens' CreateNetworkAclEntry (Maybe Bool)

-- | Indicates whether this is an egress rule (rule is applied to traffic
--   leaving the subnet).
cnaeEgress :: Lens' CreateNetworkAclEntry Bool

-- | ICMP protocol: The ICMP type and code. Required if specifying ICMP for
--   the protocol.
cnaeIcmpTypeCode :: Lens' CreateNetworkAclEntry (Maybe IcmpTypeCode)

-- | The ID of the network ACL.
cnaeNetworkAclId :: Lens' CreateNetworkAclEntry Text

-- | TCP or UDP protocols: The range of ports the rule applies to.
cnaePortRange :: Lens' CreateNetworkAclEntry (Maybe PortRange)

-- | The protocol. A value of -1 means all protocols.
cnaeProtocol :: Lens' CreateNetworkAclEntry Text

-- | Indicates whether to allow or deny the traffic that matches the rule.
cnaeRuleAction :: Lens' CreateNetworkAclEntry RuleAction

-- | The rule number for the entry (for example, 100). ACL entries are
--   processed in ascending order by rule number.
--   
--   Constraints: Positive integer from 1 to 32766
cnaeRuleNumber :: Lens' CreateNetworkAclEntry Int
data CreateNetworkAclEntryResponse

-- | <a>CreateNetworkAclEntryResponse</a> constructor.
createNetworkAclEntryResponse :: CreateNetworkAclEntryResponse
instance Eq CreateNetworkAclEntry
instance Read CreateNetworkAclEntry
instance Show CreateNetworkAclEntry
instance Eq CreateNetworkAclEntryResponse
instance Ord CreateNetworkAclEntryResponse
instance Read CreateNetworkAclEntryResponse
instance Show CreateNetworkAclEntryResponse
instance Generic CreateNetworkAclEntryResponse
instance Datatype D1CreateNetworkAclEntryResponse
instance Constructor C1_0CreateNetworkAclEntryResponse
instance AWSRequest CreateNetworkAclEntry
instance ToHeaders CreateNetworkAclEntry
instance ToQuery CreateNetworkAclEntry
instance ToPath CreateNetworkAclEntry


-- | Creates a network ACL in a VPC. Network ACLs provide an optional layer
--   of security (in addition to security groups) for the instances in your
--   VPC.
--   
--   For more information about network ACLs, see <a>Network ACLs</a> in
--   the <i>AmazonVirtual Private Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateNetworkAcl.html</a>
module Network.AWS.EC2.CreateNetworkAcl
data CreateNetworkAcl

-- | <a>CreateNetworkAcl</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cnaDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>cnaVpcId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createNetworkAcl :: Text -> CreateNetworkAcl

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
cnaDryRun :: Lens' CreateNetworkAcl (Maybe Bool)

-- | The ID of the VPC.
cnaVpcId :: Lens' CreateNetworkAcl Text
data CreateNetworkAclResponse

-- | <a>CreateNetworkAclResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cnarNetworkAcl</a> <tt>::</tt> <a>Maybe</a>
--   <a>NetworkAcl</a></li>
--   </ul>
createNetworkAclResponse :: CreateNetworkAclResponse

-- | Information about the network ACL.
cnarNetworkAcl :: Lens' CreateNetworkAclResponse (Maybe NetworkAcl)
instance Eq CreateNetworkAcl
instance Ord CreateNetworkAcl
instance Read CreateNetworkAcl
instance Show CreateNetworkAcl
instance Eq CreateNetworkAclResponse
instance Read CreateNetworkAclResponse
instance Show CreateNetworkAclResponse
instance FromXML CreateNetworkAclResponse
instance AWSRequest CreateNetworkAcl
instance ToHeaders CreateNetworkAcl
instance ToQuery CreateNetworkAcl
instance ToPath CreateNetworkAcl


-- | Creates a 2048-bit RSA key pair with the specified name. Amazon EC2
--   stores the public key and displays the private key for you to save to
--   a file. The private key is returned as an unencrypted PEM encoded
--   PKCS#8 private key. If a key with the specified name already exists,
--   Amazon EC2 returns an error.
--   
--   You can have up to five thousand key pairs per region.
--   
--   The key pair returned to you is available only in the region in which
--   you create it. To create a key pair that is available in all regions,
--   use <tt>ImportKeyPair</tt>.
--   
--   For more information about key pairs, see <a>Key Pairs</a> in the
--   <i>Amazon ElasticCompute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateKeyPair.html</a>
module Network.AWS.EC2.CreateKeyPair
data CreateKeyPair

-- | <a>CreateKeyPair</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ckpDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>ckpKeyName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createKeyPair :: Text -> CreateKeyPair

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
ckpDryRun :: Lens' CreateKeyPair (Maybe Bool)

-- | A unique name for the key pair.
--   
--   Constraints: Up to 255 ASCII characters
ckpKeyName :: Lens' CreateKeyPair Text
data CreateKeyPairResponse

-- | <a>CreateKeyPairResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ckprKeyFingerprint</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ckprKeyMaterial</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ckprKeyName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createKeyPairResponse :: Text -> Text -> Text -> CreateKeyPairResponse

-- | The SHA-1 digest of the DER encoded private key.
ckprKeyFingerprint :: Lens' CreateKeyPairResponse Text

-- | An unencrypted PEM encoded RSA private key.
ckprKeyMaterial :: Lens' CreateKeyPairResponse Text

-- | The name of the key pair.
ckprKeyName :: Lens' CreateKeyPairResponse Text
instance Eq CreateKeyPair
instance Ord CreateKeyPair
instance Read CreateKeyPair
instance Show CreateKeyPair
instance Eq CreateKeyPairResponse
instance Ord CreateKeyPairResponse
instance Read CreateKeyPairResponse
instance Show CreateKeyPairResponse
instance FromXML CreateKeyPairResponse
instance AWSRequest CreateKeyPair
instance ToHeaders CreateKeyPair
instance ToQuery CreateKeyPair
instance ToPath CreateKeyPair


-- | Creates an Internet gateway for use with a VPC. After creating the
--   Internet gateway, you attach it to a VPC using
--   <tt>AttachInternetGateway</tt>.
--   
--   For more information about your VPC and Internet gateway, see the
--   <a>AmazonVirtual Private Cloud User Guide</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateInternetGateway.html</a>
module Network.AWS.EC2.CreateInternetGateway
data CreateInternetGateway

-- | <a>CreateInternetGateway</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cigDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   </ul>
createInternetGateway :: CreateInternetGateway

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
cigDryRun :: Lens' CreateInternetGateway (Maybe Bool)
data CreateInternetGatewayResponse

-- | <a>CreateInternetGatewayResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cigrInternetGateway</a> <tt>::</tt> <a>Maybe</a>
--   <a>InternetGateway</a></li>
--   </ul>
createInternetGatewayResponse :: CreateInternetGatewayResponse

-- | Information about the Internet gateway.
cigrInternetGateway :: Lens' CreateInternetGatewayResponse (Maybe InternetGateway)
instance Eq CreateInternetGateway
instance Ord CreateInternetGateway
instance Read CreateInternetGateway
instance Show CreateInternetGateway
instance Eq CreateInternetGatewayResponse
instance Read CreateInternetGatewayResponse
instance Show CreateInternetGatewayResponse
instance FromXML CreateInternetGatewayResponse
instance AWSRequest CreateInternetGateway
instance ToHeaders CreateInternetGateway
instance ToQuery CreateInternetGateway
instance ToPath CreateInternetGateway


-- | Exports a running or stopped instance to an S3 bucket.
--   
--   For information about the supported operating systems, image formats,
--   and known limitations for the types of instances you can export, see
--   <a>ExportingEC2 Instances</a> in the <i>Amazon Elastic Compute Cloud
--   User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateInstanceExportTask.html</a>
module Network.AWS.EC2.CreateInstanceExportTask
data CreateInstanceExportTask

-- | <a>CreateInstanceExportTask</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cietDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cietExportToS3Task</a> <tt>::</tt> <a>Maybe</a>
--   <a>ExportToS3TaskSpecification</a></li>
--   <li><a>cietInstanceId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cietTargetEnvironment</a> <tt>::</tt> <a>Maybe</a>
--   <a>ExportEnvironment</a></li>
--   </ul>
createInstanceExportTask :: Text -> CreateInstanceExportTask

-- | A description for the conversion task or the resource being exported.
--   The maximum length is 255 bytes.
cietDescription :: Lens' CreateInstanceExportTask (Maybe Text)

-- | The format and location for an instance export task.
cietExportToS3Task :: Lens' CreateInstanceExportTask (Maybe ExportToS3TaskSpecification)

-- | The ID of the instance.
cietInstanceId :: Lens' CreateInstanceExportTask Text

-- | The target virtualization environment.
cietTargetEnvironment :: Lens' CreateInstanceExportTask (Maybe ExportEnvironment)
data CreateInstanceExportTaskResponse

-- | <a>CreateInstanceExportTaskResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cietrExportTask</a> <tt>::</tt> <a>Maybe</a>
--   <a>ExportTask</a></li>
--   </ul>
createInstanceExportTaskResponse :: CreateInstanceExportTaskResponse

-- | Information about the instance export task.
cietrExportTask :: Lens' CreateInstanceExportTaskResponse (Maybe ExportTask)
instance Eq CreateInstanceExportTask
instance Read CreateInstanceExportTask
instance Show CreateInstanceExportTask
instance Eq CreateInstanceExportTaskResponse
instance Read CreateInstanceExportTaskResponse
instance Show CreateInstanceExportTaskResponse
instance FromXML CreateInstanceExportTaskResponse
instance AWSRequest CreateInstanceExportTask
instance ToHeaders CreateInstanceExportTask
instance ToQuery CreateInstanceExportTask
instance ToPath CreateInstanceExportTask


-- | Creates an Amazon EBS-backed AMI from an Amazon EBS-backed instance
--   that is either running or stopped.
--   
--   If you customized your instance with instance store volumes or EBS
--   volumes in addition to the root device volume, the new AMI contains
--   block device mapping information for those volumes. When you launch an
--   instance from this new AMI, the instance automatically launches with
--   those additional volumes.
--   
--   For more information, see <a>Creating Amazon EBS-Backed Linux AMIs</a>
--   in the <i>Amazon Elastic Compute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateImage.html</a>
module Network.AWS.EC2.CreateImage
data CreateImage

-- | <a>CreateImage</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ci1BlockDeviceMappings</a> <tt>::</tt>
--   [<a>BlockDeviceMapping</a>]</li>
--   <li><a>ci1Description</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ci1DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>ci1InstanceId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ci1Name</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ci1NoReboot</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   </ul>
createImage :: Text -> Text -> CreateImage

-- | Information about one or more block device mappings.
ci1BlockDeviceMappings :: Lens' CreateImage [BlockDeviceMapping]

-- | A description for the new image.
ci1Description :: Lens' CreateImage (Maybe Text)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
ci1DryRun :: Lens' CreateImage (Maybe Bool)

-- | The ID of the instance.
ci1InstanceId :: Lens' CreateImage Text

-- | A name for the new image.
--   
--   Constraints: 3-128 alphanumeric characters, parentheses (()), square
--   brackets ([]), spaces ( ), periods (.), slashes (/), dashes (-),
--   single quotes ('), at-signs (@), or underscores(_)
ci1Name :: Lens' CreateImage Text

-- | By default, this parameter is set to <tt>false</tt>, which means
--   Amazon EC2 attempts to shut down the instance cleanly before image
--   creation and then reboots the instance. When the parameter is set to
--   <tt>true</tt>, Amazon EC2 doesn't shut down the instance before
--   creating the image. When this option is used, file system integrity on
--   the created image can't be guaranteed.
ci1NoReboot :: Lens' CreateImage (Maybe Bool)
data CreateImageResponse

-- | <a>CreateImageResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cirImageId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
createImageResponse :: CreateImageResponse

-- | The ID of the new AMI.
cirImageId :: Lens' CreateImageResponse (Maybe Text)
instance Eq CreateImage
instance Read CreateImage
instance Show CreateImage
instance Eq CreateImageResponse
instance Ord CreateImageResponse
instance Read CreateImageResponse
instance Show CreateImageResponse
instance Monoid CreateImageResponse
instance FromXML CreateImageResponse
instance AWSRequest CreateImage
instance ToHeaders CreateImage
instance ToQuery CreateImage
instance ToPath CreateImage


-- | Creates a set of DHCP options for your VPC. After creating the set,
--   you must associate it with the VPC, causing all existing and new
--   instances that you launch in the VPC to use this set of DHCP options.
--   The following are the individual DHCP options you can specify. For
--   more information about the options, see <a>RFC 2132</a>.
--   
--   'domain-name-servers' - The IP addresses of up to four domain name
--   servers, or <tt>AmazonProvidedDNS</tt>. The default DHCP option set
--   specifies <tt>AmazonProvidedDNS</tt>. If specifying more than one
--   domain name server, specify the IP addresses in a single parameter,
--   separated by commas. 'domain-name' - If you're using AmazonProvidedDNS
--   in 'us-east-1', specify 'ec2.internal'. If you're using
--   AmazonProvidedDNS in another region, specify 'region.compute.internal'
--   (for example, 'ap-northeast-1.compute.internal'). Otherwise, specify a
--   domain name (for example, <a>com</a>). Important: Some Linux operating
--   systems accept multiple domain names separated by spaces. However,
--   Windows and other Linux operating systems treat the value as a single
--   domain, which results in unexpected behavior. If your DHCP options set
--   is associated with a VPC that has instances with multiple operating
--   systems, specify only one domain name. 'ntp-servers' - The IP
--   addresses of up to four Network Time Protocol (NTP) servers.
--   'netbios-name-servers' - The IP addresses of up to four NetBIOS name
--   servers. 'netbios-node-type' - The NetBIOS node type (1, 2, 4, or 8).
--   We recommend that you specify 2 (broadcast and multicast are not
--   currently supported). For more information about these node types, see
--   <a>RFC 2132</a>. Your VPC automatically starts out with a set of DHCP
--   options that includes only a DNS server that we provide
--   (AmazonProvidedDNS). If you create a set of options, and if your VPC
--   has an Internet gateway, make sure to set the 'domain-name-servers'
--   option either to <tt>AmazonProvidedDNS</tt> or to a domain name server
--   of your choice. For more information about DHCP options, see <a>DHCP
--   Options Sets</a> in the <i>Amazon Virtual Private Cloud User
--   Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateDhcpOptions.html</a>
module Network.AWS.EC2.CreateDhcpOptions
data CreateDhcpOptions

-- | <a>CreateDhcpOptions</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cdoDhcpConfigurations</a> <tt>::</tt>
--   [<a>NewDhcpConfiguration</a>]</li>
--   <li><a>cdoDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   </ul>
createDhcpOptions :: CreateDhcpOptions

-- | A DHCP configuration option.
cdoDhcpConfigurations :: Lens' CreateDhcpOptions [NewDhcpConfiguration]

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
cdoDryRun :: Lens' CreateDhcpOptions (Maybe Bool)
data CreateDhcpOptionsResponse

-- | <a>CreateDhcpOptionsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cdorDhcpOptions</a> <tt>::</tt> <a>Maybe</a>
--   <a>DhcpOptions</a></li>
--   </ul>
createDhcpOptionsResponse :: CreateDhcpOptionsResponse

-- | A set of DHCP options.
cdorDhcpOptions :: Lens' CreateDhcpOptionsResponse (Maybe DhcpOptions)
instance Eq CreateDhcpOptions
instance Read CreateDhcpOptions
instance Show CreateDhcpOptions
instance Eq CreateDhcpOptionsResponse
instance Read CreateDhcpOptionsResponse
instance Show CreateDhcpOptionsResponse
instance FromXML CreateDhcpOptionsResponse
instance AWSRequest CreateDhcpOptions
instance ToHeaders CreateDhcpOptions
instance ToQuery CreateDhcpOptions
instance ToPath CreateDhcpOptions


-- | Provides information to AWS about your VPN customer gateway device.
--   The customer gateway is the appliance at your end of the VPN
--   connection. (The device on the AWS side of the VPN connection is the
--   virtual private gateway.) You must provide the Internet-routable IP
--   address of the customer gateway's external interface. The IP address
--   must be static and can't be behind a device performing network address
--   translation (NAT).
--   
--   For devices that use Border Gateway Protocol (BGP), you can also
--   provide the device's BGP Autonomous System Number (ASN). You can use
--   an existing ASN assigned to your network. If you don't have an ASN
--   already, you can use a private ASN (in the 64512 - 65534 range).
--   
--   Amazon EC2 supports all 2-byte ASN numbers in the range of 1 - 65534,
--   with the exception of 7224, which is reserved in the 'us-east-1'
--   region, and 9059, which is reserved in the 'eu-west-1' region.
--   
--   For more information about VPN customer gateways, see <a>Adding a
--   HardwareVirtual Private Gateway to Your VPC</a> in the <i>Amazon
--   Virtual Private Cloud UserGuide</i>.
--   
--   You cannot create more than one customer gateway with the same VPN
--   type, IP address, and BGP ASN parameter values. If you run an
--   identical request more than one time, the first request creates the
--   customer gateway, and subsequent requests return information about the
--   existing customer gateway. The subsequent requests do not create new
--   customer gateway resources.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateCustomerGateway.html</a>
module Network.AWS.EC2.CreateCustomerGateway
data CreateCustomerGateway

-- | <a>CreateCustomerGateway</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ccgBgpAsn</a> <tt>::</tt> <a>Int</a></li>
--   <li><a>ccgDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>ccgPublicIp</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ccgType</a> <tt>::</tt> <a>GatewayType</a></li>
--   </ul>
createCustomerGateway :: GatewayType -> Text -> Int -> CreateCustomerGateway

-- | For devices that support BGP, the customer gateway's BGP ASN.
--   
--   Default: 65000
ccgBgpAsn :: Lens' CreateCustomerGateway Int

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
ccgDryRun :: Lens' CreateCustomerGateway (Maybe Bool)

-- | The Internet-routable IP address for the customer gateway's outside
--   interface. The address must be static.
ccgPublicIp :: Lens' CreateCustomerGateway Text

-- | The type of VPN connection that this customer gateway supports
--   ('ipsec.1').
ccgType :: Lens' CreateCustomerGateway GatewayType
data CreateCustomerGatewayResponse

-- | <a>CreateCustomerGatewayResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ccgrCustomerGateway</a> <tt>::</tt> <a>Maybe</a>
--   <a>CustomerGateway</a></li>
--   </ul>
createCustomerGatewayResponse :: CreateCustomerGatewayResponse

-- | Information about the customer gateway.
ccgrCustomerGateway :: Lens' CreateCustomerGatewayResponse (Maybe CustomerGateway)
instance Eq CreateCustomerGateway
instance Read CreateCustomerGateway
instance Show CreateCustomerGateway
instance Eq CreateCustomerGatewayResponse
instance Read CreateCustomerGatewayResponse
instance Show CreateCustomerGatewayResponse
instance FromXML CreateCustomerGatewayResponse
instance AWSRequest CreateCustomerGateway
instance ToHeaders CreateCustomerGateway
instance ToQuery CreateCustomerGateway
instance ToPath CreateCustomerGateway


-- | Copies a point-in-time snapshot of an EBS volume and stores it in
--   Amazon S3. You can copy the snapshot within the same region or from
--   one region to another. You can use the snapshot to create EBS volumes
--   or Amazon Machine Images (AMIs). The snapshot is copied to the
--   regional endpoint that you send the HTTP request to.
--   
--   Copies of encrypted EBS snapshots remain encrypted. Copies of
--   unencrypted snapshots remain unencrypted.
--   
--   Copying snapshots that were encrypted with non-default AWS Key
--   Management Service (KMS) master keys is not supported at this time.
--   
--   For more information, see <a>Copying an Amazon EBS Snapshot</a> in the
--   <i>AmazonElastic Compute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CopySnapshot.html</a>
module Network.AWS.EC2.CopySnapshot
data CopySnapshot

-- | <a>CopySnapshot</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>csDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>csDestinationRegion</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>csDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>csPresignedUrl</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>csSourceRegion</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>csSourceSnapshotId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
copySnapshot :: Text -> Text -> CopySnapshot

-- | A description for the EBS snapshot.
csDescription :: Lens' CopySnapshot (Maybe Text)

-- | The destination region to use in the <tt>PresignedUrl</tt> parameter
--   of a snapshot copy operation. This parameter is only valid for
--   specifying the destination region in a <tt>PresignedUrl</tt>
--   parameter, where it is required.
--   
--   <a>CopySnapshot</a> sends the snapshot copy to the regional endpoint
--   that you send the HTTP request to, such as
--   'ec2.us-east-1.amazonaws.com' (in the AWS CLI, this is specified with
--   the '--region' parameter or the default region in your AWS
--   configuration file).
csDestinationRegion :: Lens' CopySnapshot (Maybe Text)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
csDryRun :: Lens' CopySnapshot (Maybe Bool)

-- | The pre-signed URL that facilitates copying an encrypted snapshot.
--   This parameter is only required when copying an encrypted snapshot
--   with the Amazon EC2 Query API; it is available as an optional
--   parameter in all other cases. The <tt>PresignedUrl</tt> should use the
--   snapshot source endpoint, the <a>CopySnapshot</a> action, and include
--   the <tt>SourceRegion</tt>, <tt>SourceSnapshotId</tt>, and
--   <tt>DestinationRegion</tt> parameters. The <tt>PresignedUrl</tt> must
--   be signed using AWS Signature Version 4. Because EBS snapshots are
--   stored in Amazon S3, the signing algorithm for this parameter uses the
--   same logic that is described in <a>Authenticating Requests byUsing
--   Query Parameters (AWS Signature Version 4)</a> in the <i>Amazon Simple
--   StorageService API Reference</i>. An invalid or improperly signed
--   <tt>PresignedUrl</tt> will cause the copy operation to fail
--   asynchronously, and the snapshot will move to an <tt>error</tt> state.
csPresignedUrl :: Lens' CopySnapshot (Maybe Text)

-- | The ID of the region that contains the snapshot to be copied.
csSourceRegion :: Lens' CopySnapshot Text

-- | The ID of the EBS snapshot to copy.
csSourceSnapshotId :: Lens' CopySnapshot Text
data CopySnapshotResponse

-- | <a>CopySnapshotResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>csrSnapshotId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
copySnapshotResponse :: CopySnapshotResponse

-- | The ID of the new snapshot.
csrSnapshotId :: Lens' CopySnapshotResponse (Maybe Text)
instance Eq CopySnapshot
instance Ord CopySnapshot
instance Read CopySnapshot
instance Show CopySnapshot
instance Eq CopySnapshotResponse
instance Ord CopySnapshotResponse
instance Read CopySnapshotResponse
instance Show CopySnapshotResponse
instance Monoid CopySnapshotResponse
instance FromXML CopySnapshotResponse
instance AWSRequest CopySnapshot
instance ToHeaders CopySnapshot
instance ToQuery CopySnapshot
instance ToPath CopySnapshot


-- | Initiates the copy of an AMI from the specified source region to the
--   current region. You specify the destination region by using its
--   endpoint when making the request. AMIs that use encrypted EBS
--   snapshots cannot be copied with this method.
--   
--   For more information, see <a>Copying AMIs</a> in the <i>Amazon Elastic
--   Compute CloudUser Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CopyImage.html</a>
module Network.AWS.EC2.CopyImage
data CopyImage

-- | <a>CopyImage</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ciClientToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ciDescription</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ciDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>ciName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ciSourceImageId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ciSourceRegion</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
copyImage :: Text -> Text -> Text -> CopyImage

-- | Unique, case-sensitive identifier you provide to ensure idempotency of
--   the request. For more information, see <a>How to Ensure
--   Idempotency</a> in the <i>AmazonElastic Compute Cloud User Guide</i>.
ciClientToken :: Lens' CopyImage (Maybe Text)

-- | A description for the new AMI in the destination region.
ciDescription :: Lens' CopyImage (Maybe Text)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
ciDryRun :: Lens' CopyImage (Maybe Bool)

-- | The name of the new AMI in the destination region.
ciName :: Lens' CopyImage Text

-- | The ID of the AMI to copy.
ciSourceImageId :: Lens' CopyImage Text

-- | The name of the region that contains the AMI to copy.
ciSourceRegion :: Lens' CopyImage Text
data CopyImageResponse

-- | <a>CopyImageResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cir1ImageId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
copyImageResponse :: CopyImageResponse

-- | The ID of the new AMI.
cir1ImageId :: Lens' CopyImageResponse (Maybe Text)
instance Eq CopyImage
instance Ord CopyImage
instance Read CopyImage
instance Show CopyImage
instance Eq CopyImageResponse
instance Ord CopyImageResponse
instance Read CopyImageResponse
instance Show CopyImageResponse
instance Monoid CopyImageResponse
instance FromXML CopyImageResponse
instance AWSRequest CopyImage
instance ToHeaders CopyImage
instance ToQuery CopyImage
instance ToPath CopyImage


-- | Determines whether a product code is associated with an instance. This
--   action can only be used by the owner of the product code. It is useful
--   when a product code owner needs to verify whether another user's
--   instance is eligible for support.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ConfirmProductInstance.html</a>
module Network.AWS.EC2.ConfirmProductInstance
data ConfirmProductInstance

-- | <a>ConfirmProductInstance</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cpiDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>cpiInstanceId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cpiProductCode</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
confirmProductInstance :: Text -> Text -> ConfirmProductInstance

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
cpiDryRun :: Lens' ConfirmProductInstance (Maybe Bool)

-- | The ID of the instance.
cpiInstanceId :: Lens' ConfirmProductInstance Text

-- | The product code. This must be a product code that you own.
cpiProductCode :: Lens' ConfirmProductInstance Text
data ConfirmProductInstanceResponse

-- | <a>ConfirmProductInstanceResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cpirOwnerId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
confirmProductInstanceResponse :: ConfirmProductInstanceResponse

-- | The AWS account ID of the instance owner. This is only present if the
--   product code is attached to the instance.
cpirOwnerId :: Lens' ConfirmProductInstanceResponse (Maybe Text)
instance Eq ConfirmProductInstance
instance Ord ConfirmProductInstance
instance Read ConfirmProductInstance
instance Show ConfirmProductInstance
instance Eq ConfirmProductInstanceResponse
instance Ord ConfirmProductInstanceResponse
instance Read ConfirmProductInstanceResponse
instance Show ConfirmProductInstanceResponse
instance Monoid ConfirmProductInstanceResponse
instance FromXML ConfirmProductInstanceResponse
instance AWSRequest ConfirmProductInstance
instance ToHeaders ConfirmProductInstance
instance ToQuery ConfirmProductInstance
instance ToPath ConfirmProductInstance


-- | Cancels one or more Spot Instance requests. Spot Instances are
--   instances that Amazon EC2 starts on your behalf when the bid price
--   that you specify exceeds the current Spot Price. Amazon EC2
--   periodically sets the Spot Price based on available Spot Instance
--   capacity and current Spot Instance requests. For more information, see
--   <a>Spot Instance Requests</a> in the <i>Amazon Elastic Compute
--   CloudUser Guide</i>.
--   
--   Canceling a Spot Instance request does not terminate running Spot
--   Instances associated with the request.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CancelSpotInstanceRequests.html</a>
module Network.AWS.EC2.CancelSpotInstanceRequests
data CancelSpotInstanceRequests

-- | <a>CancelSpotInstanceRequests</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>csirDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>csirSpotInstanceRequestIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
cancelSpotInstanceRequests :: CancelSpotInstanceRequests

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
csirDryRun :: Lens' CancelSpotInstanceRequests (Maybe Bool)

-- | One or more Spot Instance request IDs.
csirSpotInstanceRequestIds :: Lens' CancelSpotInstanceRequests [Text]
data CancelSpotInstanceRequestsResponse

-- | <a>CancelSpotInstanceRequestsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>csirrCancelledSpotInstanceRequests</a> <tt>::</tt>
--   [<a>CancelledSpotInstanceRequest</a>]</li>
--   </ul>
cancelSpotInstanceRequestsResponse :: CancelSpotInstanceRequestsResponse

-- | One or more Spot Instance requests.
csirrCancelledSpotInstanceRequests :: Lens' CancelSpotInstanceRequestsResponse [CancelledSpotInstanceRequest]
instance Eq CancelSpotInstanceRequests
instance Ord CancelSpotInstanceRequests
instance Read CancelSpotInstanceRequests
instance Show CancelSpotInstanceRequests
instance Eq CancelSpotInstanceRequestsResponse
instance Read CancelSpotInstanceRequestsResponse
instance Show CancelSpotInstanceRequestsResponse
instance Monoid CancelSpotInstanceRequestsResponse
instance Semigroup CancelSpotInstanceRequestsResponse
instance FromXML CancelSpotInstanceRequestsResponse
instance AWSRequest CancelSpotInstanceRequests
instance ToHeaders CancelSpotInstanceRequests
instance ToQuery CancelSpotInstanceRequests
instance ToPath CancelSpotInstanceRequests


-- | Cancels the specified Spot fleet requests.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CancelSpotFleetRequests.html</a>
module Network.AWS.EC2.CancelSpotFleetRequests
data CancelSpotFleetRequests

-- | <a>CancelSpotFleetRequests</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>csfrDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>csfrSpotFleetRequestIds</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>csfrTerminateInstances</a> <tt>::</tt> <a>Bool</a></li>
--   </ul>
cancelSpotFleetRequests :: Bool -> CancelSpotFleetRequests

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
csfrDryRun :: Lens' CancelSpotFleetRequests (Maybe Bool)

-- | The IDs of the Spot fleet requests.
csfrSpotFleetRequestIds :: Lens' CancelSpotFleetRequests [Text]

-- | Indicates whether to terminate instances for a Spot fleet request if
--   it is canceled successfully.
csfrTerminateInstances :: Lens' CancelSpotFleetRequests Bool
data CancelSpotFleetRequestsResponse

-- | <a>CancelSpotFleetRequestsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>csfrrSuccessfulFleetRequests</a> <tt>::</tt>
--   [<a>CancelSpotFleetRequestsSuccessItem</a>]</li>
--   <li><a>csfrrUnsuccessfulFleetRequests</a> <tt>::</tt>
--   [<a>CancelSpotFleetRequestsErrorItem</a>]</li>
--   </ul>
cancelSpotFleetRequestsResponse :: CancelSpotFleetRequestsResponse

-- | Information about the Spot fleet requests that are successfully
--   canceled.
csfrrSuccessfulFleetRequests :: Lens' CancelSpotFleetRequestsResponse [CancelSpotFleetRequestsSuccessItem]

-- | Information about the Spot fleet requests that are not successfully
--   canceled.
csfrrUnsuccessfulFleetRequests :: Lens' CancelSpotFleetRequestsResponse [CancelSpotFleetRequestsErrorItem]
instance Eq CancelSpotFleetRequests
instance Ord CancelSpotFleetRequests
instance Read CancelSpotFleetRequests
instance Show CancelSpotFleetRequests
instance Eq CancelSpotFleetRequestsResponse
instance Read CancelSpotFleetRequestsResponse
instance Show CancelSpotFleetRequestsResponse
instance FromXML CancelSpotFleetRequestsResponse
instance AWSRequest CancelSpotFleetRequests
instance ToHeaders CancelSpotFleetRequests
instance ToQuery CancelSpotFleetRequests
instance ToPath CancelSpotFleetRequests


-- | Cancels the specified Reserved Instance listing in the Reserved
--   Instance Marketplace.
--   
--   For more information, see <a>Reserved Instance Marketplace</a> in the
--   <i>AmazonElastic Compute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CancelReservedInstancesListing.html</a>
module Network.AWS.EC2.CancelReservedInstancesListing
data CancelReservedInstancesListing

-- | <a>CancelReservedInstancesListing</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>crilReservedInstancesListingId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
cancelReservedInstancesListing :: Text -> CancelReservedInstancesListing

-- | The ID of the Reserved Instance listing.
crilReservedInstancesListingId :: Lens' CancelReservedInstancesListing Text
data CancelReservedInstancesListingResponse

-- | <a>CancelReservedInstancesListingResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>crilrReservedInstancesListings</a> <tt>::</tt>
--   [<a>ReservedInstancesListing</a>]</li>
--   </ul>
cancelReservedInstancesListingResponse :: CancelReservedInstancesListingResponse

-- | The Reserved Instance listing.
crilrReservedInstancesListings :: Lens' CancelReservedInstancesListingResponse [ReservedInstancesListing]
instance Eq CancelReservedInstancesListing
instance Ord CancelReservedInstancesListing
instance Read CancelReservedInstancesListing
instance Show CancelReservedInstancesListing
instance Monoid CancelReservedInstancesListing
instance IsString CancelReservedInstancesListing
instance Eq CancelReservedInstancesListingResponse
instance Read CancelReservedInstancesListingResponse
instance Show CancelReservedInstancesListingResponse
instance Monoid CancelReservedInstancesListingResponse
instance Semigroup CancelReservedInstancesListingResponse
instance FromXML CancelReservedInstancesListingResponse
instance AWSRequest CancelReservedInstancesListing
instance ToHeaders CancelReservedInstancesListing
instance ToQuery CancelReservedInstancesListing
instance ToPath CancelReservedInstancesListing


-- | Cancels an in-process import virtual machine or import snapshot task.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CancelImportTask.html</a>
module Network.AWS.EC2.CancelImportTask
data CancelImportTask

-- | <a>CancelImportTask</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>citCancelReason</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>citDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>citImportTaskId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
cancelImportTask :: CancelImportTask

-- | The reason for canceling the task.
citCancelReason :: Lens' CancelImportTask (Maybe Text)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
citDryRun :: Lens' CancelImportTask (Maybe Bool)

-- | The ID of the import image or import snapshot task to be canceled.
citImportTaskId :: Lens' CancelImportTask (Maybe Text)
data CancelImportTaskResponse

-- | <a>CancelImportTaskResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>citrImportTaskId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>citrPreviousState</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>citrState</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
cancelImportTaskResponse :: CancelImportTaskResponse

-- | The ID of the task being canceled.
citrImportTaskId :: Lens' CancelImportTaskResponse (Maybe Text)

-- | The current state of the task being canceled.
citrPreviousState :: Lens' CancelImportTaskResponse (Maybe Text)

-- | The current state of the task being canceled.
citrState :: Lens' CancelImportTaskResponse (Maybe Text)
instance Eq CancelImportTask
instance Ord CancelImportTask
instance Read CancelImportTask
instance Show CancelImportTask
instance Eq CancelImportTaskResponse
instance Ord CancelImportTaskResponse
instance Read CancelImportTaskResponse
instance Show CancelImportTaskResponse
instance FromXML CancelImportTaskResponse
instance AWSRequest CancelImportTask
instance ToHeaders CancelImportTask
instance ToQuery CancelImportTask
instance ToPath CancelImportTask


-- | Cancels an active export task. The request removes all artifacts of
--   the export, including any partially-created Amazon S3 objects. If the
--   export task is complete or is in the process of transferring the final
--   disk image, the command fails and returns an error.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CancelExportTask.html</a>
module Network.AWS.EC2.CancelExportTask
data CancelExportTask

-- | <a>CancelExportTask</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cetExportTaskId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
cancelExportTask :: Text -> CancelExportTask

-- | The ID of the export task. This is the ID returned by
--   <tt>CreateInstanceExportTask</tt> .
cetExportTaskId :: Lens' CancelExportTask Text
data CancelExportTaskResponse

-- | <a>CancelExportTaskResponse</a> constructor.
cancelExportTaskResponse :: CancelExportTaskResponse
instance Eq CancelExportTask
instance Ord CancelExportTask
instance Read CancelExportTask
instance Show CancelExportTask
instance Monoid CancelExportTask
instance IsString CancelExportTask
instance Eq CancelExportTaskResponse
instance Ord CancelExportTaskResponse
instance Read CancelExportTaskResponse
instance Show CancelExportTaskResponse
instance Generic CancelExportTaskResponse
instance Datatype D1CancelExportTaskResponse
instance Constructor C1_0CancelExportTaskResponse
instance AWSRequest CancelExportTask
instance ToHeaders CancelExportTask
instance ToQuery CancelExportTask
instance ToPath CancelExportTask


-- | Cancels an active conversion task. The task can be the import of an
--   instance or volume. The action removes all artifacts of the
--   conversion, including a partially uploaded volume or instance. If the
--   conversion is complete or is in the process of transferring the final
--   disk image, the command fails and returns an exception.
--   
--   For more information, see <a>Using the Command Line Tools to Import
--   YourVirtual Machine to Amazon EC2</a> in the <i>Amazon Elastic Compute
--   Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CancelConversionTask.html</a>
module Network.AWS.EC2.CancelConversionTask
data CancelConversionTask

-- | <a>CancelConversionTask</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cctConversionTaskId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cctDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>cctReasonMessage</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
cancelConversionTask :: Text -> CancelConversionTask

-- | The ID of the conversion task.
cctConversionTaskId :: Lens' CancelConversionTask Text

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
cctDryRun :: Lens' CancelConversionTask (Maybe Bool)

-- | The reason for canceling the conversion task.
cctReasonMessage :: Lens' CancelConversionTask (Maybe Text)
data CancelConversionTaskResponse

-- | <a>CancelConversionTaskResponse</a> constructor.
cancelConversionTaskResponse :: CancelConversionTaskResponse
instance Eq CancelConversionTask
instance Ord CancelConversionTask
instance Read CancelConversionTask
instance Show CancelConversionTask
instance Eq CancelConversionTaskResponse
instance Ord CancelConversionTaskResponse
instance Read CancelConversionTaskResponse
instance Show CancelConversionTaskResponse
instance Generic CancelConversionTaskResponse
instance Datatype D1CancelConversionTaskResponse
instance Constructor C1_0CancelConversionTaskResponse
instance AWSRequest CancelConversionTask
instance ToHeaders CancelConversionTask
instance ToQuery CancelConversionTask
instance ToPath CancelConversionTask


-- | Cancels a bundling operation for an instance store-backed Windows
--   instance.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CancelBundleTask.html</a>
module Network.AWS.EC2.CancelBundleTask
data CancelBundleTask

-- | <a>CancelBundleTask</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cbtBundleId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cbtDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   </ul>
cancelBundleTask :: Text -> CancelBundleTask

-- | The ID of the bundle task.
cbtBundleId :: Lens' CancelBundleTask Text

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
cbtDryRun :: Lens' CancelBundleTask (Maybe Bool)
data CancelBundleTaskResponse

-- | <a>CancelBundleTaskResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cbtrBundleTask</a> <tt>::</tt> <a>Maybe</a>
--   <a>BundleTask</a></li>
--   </ul>
cancelBundleTaskResponse :: CancelBundleTaskResponse

-- | Information about the bundle task.
cbtrBundleTask :: Lens' CancelBundleTaskResponse (Maybe BundleTask)
instance Eq CancelBundleTask
instance Ord CancelBundleTask
instance Read CancelBundleTask
instance Show CancelBundleTask
instance Eq CancelBundleTaskResponse
instance Read CancelBundleTaskResponse
instance Show CancelBundleTaskResponse
instance FromXML CancelBundleTaskResponse
instance AWSRequest CancelBundleTask
instance ToHeaders CancelBundleTask
instance ToQuery CancelBundleTask
instance ToPath CancelBundleTask


-- | Bundles an Amazon instance store-backed Windows instance.
--   
--   During bundling, only the root device volume (C:) is bundled. Data on
--   other instance store volumes is not preserved.
--   
--   This action is not applicable for Linux/Unix instances or Windows
--   instances that are backed by Amazon EBS.
--   
--   For more information, see <a>Creating an Instance Store-Backed Windows
--   AMI</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-BundleInstance.html</a>
module Network.AWS.EC2.BundleInstance
data BundleInstance

-- | <a>BundleInstance</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>biDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>biInstanceId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>biStorage</a> <tt>::</tt> <a>Storage</a></li>
--   </ul>
bundleInstance :: Text -> Storage -> BundleInstance

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
biDryRun :: Lens' BundleInstance (Maybe Bool)

-- | The ID of the instance to bundle.
--   
--   Type: String
--   
--   Default: None
--   
--   Required: Yes
biInstanceId :: Lens' BundleInstance Text

-- | The bucket in which to store the AMI. You can specify a bucket that
--   you already own or a new bucket that Amazon EC2 creates on your
--   behalf. If you specify a bucket that belongs to someone else, Amazon
--   EC2 returns an error.
biStorage :: Lens' BundleInstance Storage
data BundleInstanceResponse

-- | <a>BundleInstanceResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>birBundleTask</a> <tt>::</tt> <a>Maybe</a>
--   <a>BundleTask</a></li>
--   </ul>
bundleInstanceResponse :: BundleInstanceResponse

-- | Information about the bundle task.
birBundleTask :: Lens' BundleInstanceResponse (Maybe BundleTask)
instance Eq BundleInstance
instance Read BundleInstance
instance Show BundleInstance
instance Eq BundleInstanceResponse
instance Read BundleInstanceResponse
instance Show BundleInstanceResponse
instance FromXML BundleInstanceResponse
instance AWSRequest BundleInstance
instance ToHeaders BundleInstance
instance ToQuery BundleInstance
instance ToPath BundleInstance


-- | Adds one or more ingress rules to a security group.
--   
--   EC2-Classic: You can have up to 100 rules per group.
--   
--   EC2-VPC: You can have up to 50 rules per group (covering both ingress
--   and egress rules).
--   
--   Rule changes are propagated to instances within the security group as
--   quickly as possible. However, a small delay might occur.
--   
--   <ul>
--   <li><i>EC2-Classic</i> This action gives one or more CIDR IP address
--   ranges permission to access a security group in your account, or gives
--   one or more security groups (called the <i>source groups</i>)
--   permission to access a security group for your account. A source group
--   can be for your own AWS account, or another.</li>
--   <li><i>EC2-VPC</i> This action gives one or more CIDR IP address
--   ranges permission to access a security group in your VPC, or gives one
--   or more other security groups (called the <i>source groups</i>)
--   permission to access a security group for your VPC. The security
--   groups must all be for the same VPC.</li>
--   </ul>
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-AuthorizeSecurityGroupIngress.html</a>
module Network.AWS.EC2.AuthorizeSecurityGroupIngress
data AuthorizeSecurityGroupIngress

-- | <a>AuthorizeSecurityGroupIngress</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>asgiCidrIp</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>asgiDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>asgiFromPort</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>asgiGroupId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>asgiGroupName</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>asgiIpPermissions</a> <tt>::</tt> [<a>IpPermission</a>]</li>
--   <li><a>asgiIpProtocol</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>asgiSourceSecurityGroupName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>asgiSourceSecurityGroupOwnerId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>asgiToPort</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   </ul>
authorizeSecurityGroupIngress :: AuthorizeSecurityGroupIngress

-- | The CIDR IP address range. You can't specify this parameter when
--   specifying a source security group.
asgiCidrIp :: Lens' AuthorizeSecurityGroupIngress (Maybe Text)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
asgiDryRun :: Lens' AuthorizeSecurityGroupIngress (Maybe Bool)

-- | The start of port range for the TCP and UDP protocols, or an ICMP type
--   number. For the ICMP type number, use '-1' to specify all ICMP types.
asgiFromPort :: Lens' AuthorizeSecurityGroupIngress (Maybe Int)

-- | The ID of the security group. Required for a nondefault VPC.
asgiGroupId :: Lens' AuthorizeSecurityGroupIngress (Maybe Text)

-- | <ul>
--   <li><i>EC2-Classic, default VPC</i> The name of the security
--   group.</li>
--   </ul>
asgiGroupName :: Lens' AuthorizeSecurityGroupIngress (Maybe Text)

-- | A set of IP permissions. Can be used to specify multiple rules in a
--   single command.
asgiIpPermissions :: Lens' AuthorizeSecurityGroupIngress [IpPermission]

-- | The IP protocol name (<tt>tcp</tt>, <tt>udp</tt>, <tt>icmp</tt>) or
--   number (see <a>Protocol Numbers</a>). (VPC only) Use '-1' to specify
--   all.
asgiIpProtocol :: Lens' AuthorizeSecurityGroupIngress (Maybe Text)

-- | <ul>
--   <li><i>EC2-Classic, default VPC</i> The name of the source security
--   group. You can't specify a source security group and a CIDR IP address
--   range.</li>
--   </ul>
asgiSourceSecurityGroupName :: Lens' AuthorizeSecurityGroupIngress (Maybe Text)

-- | The ID of the source security group. You can't specify a source
--   security group and a CIDR IP address range.
asgiSourceSecurityGroupOwnerId :: Lens' AuthorizeSecurityGroupIngress (Maybe Text)

-- | The end of port range for the TCP and UDP protocols, or an ICMP code
--   number. For the ICMP code number, use '-1' to specify all ICMP codes
--   for the ICMP type.
asgiToPort :: Lens' AuthorizeSecurityGroupIngress (Maybe Int)
data AuthorizeSecurityGroupIngressResponse

-- | <a>AuthorizeSecurityGroupIngressResponse</a> constructor.
authorizeSecurityGroupIngressResponse :: AuthorizeSecurityGroupIngressResponse
instance Eq AuthorizeSecurityGroupIngress
instance Read AuthorizeSecurityGroupIngress
instance Show AuthorizeSecurityGroupIngress
instance Eq AuthorizeSecurityGroupIngressResponse
instance Ord AuthorizeSecurityGroupIngressResponse
instance Read AuthorizeSecurityGroupIngressResponse
instance Show AuthorizeSecurityGroupIngressResponse
instance Generic AuthorizeSecurityGroupIngressResponse
instance Datatype D1AuthorizeSecurityGroupIngressResponse
instance Constructor C1_0AuthorizeSecurityGroupIngressResponse
instance AWSRequest AuthorizeSecurityGroupIngress
instance ToHeaders AuthorizeSecurityGroupIngress
instance ToQuery AuthorizeSecurityGroupIngress
instance ToPath AuthorizeSecurityGroupIngress


-- | Adds one or more egress rules to a security group for use with a VPC.
--   Specifically, this action permits instances to send traffic to one or
--   more destination CIDR IP address ranges, or to one or more destination
--   security groups for the same VPC.
--   
--   You can have up to 50 rules per security group (covering both ingress
--   and egress rules).
--   
--   A security group is for use with instances either in the EC2-Classic
--   platform or in a specific VPC. This action doesn't apply to security
--   groups for use in EC2-Classic. For more information, see <a>Security
--   Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User
--   Guide</i>.
--   
--   Each rule consists of the protocol (for example, TCP), plus either a
--   CIDR range or a source group. For the TCP and UDP protocols, you must
--   also specify the destination port or port range. For the ICMP
--   protocol, you must also specify the ICMP type and code. You can use -1
--   for the type or code to mean all types or all codes.
--   
--   Rule changes are propagated to affected instances as quickly as
--   possible. However, a small delay might occur.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-AuthorizeSecurityGroupEgress.html</a>
module Network.AWS.EC2.AuthorizeSecurityGroupEgress
data AuthorizeSecurityGroupEgress

-- | <a>AuthorizeSecurityGroupEgress</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>asgeCidrIp</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>asgeDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>asgeFromPort</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   <li><a>asgeGroupId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>asgeIpPermissions</a> <tt>::</tt> [<a>IpPermission</a>]</li>
--   <li><a>asgeIpProtocol</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>asgeSourceSecurityGroupName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>asgeSourceSecurityGroupOwnerId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>asgeToPort</a> <tt>::</tt> <a>Maybe</a> <a>Int</a></li>
--   </ul>
authorizeSecurityGroupEgress :: Text -> AuthorizeSecurityGroupEgress

-- | The CIDR IP address range. You can't specify this parameter when
--   specifying a source security group.
asgeCidrIp :: Lens' AuthorizeSecurityGroupEgress (Maybe Text)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
asgeDryRun :: Lens' AuthorizeSecurityGroupEgress (Maybe Bool)

-- | The start of port range for the TCP and UDP protocols, or an ICMP type
--   number. For the ICMP type number, use '-1' to specify all ICMP types.
asgeFromPort :: Lens' AuthorizeSecurityGroupEgress (Maybe Int)

-- | The ID of the security group.
asgeGroupId :: Lens' AuthorizeSecurityGroupEgress Text

-- | A set of IP permissions. You can't specify a destination security
--   group and a CIDR IP address range.
asgeIpPermissions :: Lens' AuthorizeSecurityGroupEgress [IpPermission]

-- | The IP protocol name (<tt>tcp</tt>, <tt>udp</tt>, <tt>icmp</tt>) or
--   number (see <a>Protocol Numbers</a>). Use '-1' to specify all.
asgeIpProtocol :: Lens' AuthorizeSecurityGroupEgress (Maybe Text)

-- | <ul>
--   <li><i>EC2-Classic, default VPC</i> The name of the destination
--   security group. You can't specify a destination security group and a
--   CIDR IP address range.</li>
--   </ul>
asgeSourceSecurityGroupName :: Lens' AuthorizeSecurityGroupEgress (Maybe Text)

-- | The ID of the destination security group. You can't specify a
--   destination security group and a CIDR IP address range.
asgeSourceSecurityGroupOwnerId :: Lens' AuthorizeSecurityGroupEgress (Maybe Text)

-- | The end of port range for the TCP and UDP protocols, or an ICMP code
--   number. For the ICMP code number, use '-1' to specify all ICMP codes
--   for the ICMP type.
asgeToPort :: Lens' AuthorizeSecurityGroupEgress (Maybe Int)
data AuthorizeSecurityGroupEgressResponse

-- | <a>AuthorizeSecurityGroupEgressResponse</a> constructor.
authorizeSecurityGroupEgressResponse :: AuthorizeSecurityGroupEgressResponse
instance Eq AuthorizeSecurityGroupEgress
instance Read AuthorizeSecurityGroupEgress
instance Show AuthorizeSecurityGroupEgress
instance Eq AuthorizeSecurityGroupEgressResponse
instance Ord AuthorizeSecurityGroupEgressResponse
instance Read AuthorizeSecurityGroupEgressResponse
instance Show AuthorizeSecurityGroupEgressResponse
instance Generic AuthorizeSecurityGroupEgressResponse
instance Datatype D1AuthorizeSecurityGroupEgressResponse
instance Constructor C1_0AuthorizeSecurityGroupEgressResponse
instance AWSRequest AuthorizeSecurityGroupEgress
instance ToHeaders AuthorizeSecurityGroupEgress
instance ToQuery AuthorizeSecurityGroupEgress
instance ToPath AuthorizeSecurityGroupEgress


-- | Attaches a virtual private gateway to a VPC. For more information, see
--   <a>Addinga Hardware Virtual Private Gateway to Your VPC</a> in the
--   <i>Amazon Virtual PrivateCloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-AttachVpnGateway.html</a>
module Network.AWS.EC2.AttachVpnGateway
data AttachVpnGateway

-- | <a>AttachVpnGateway</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>avgDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>avgVpcId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>avgVpnGatewayId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
attachVpnGateway :: Text -> Text -> AttachVpnGateway

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
avgDryRun :: Lens' AttachVpnGateway (Maybe Bool)

-- | The ID of the VPC.
avgVpcId :: Lens' AttachVpnGateway Text

-- | The ID of the virtual private gateway.
avgVpnGatewayId :: Lens' AttachVpnGateway Text
data AttachVpnGatewayResponse

-- | <a>AttachVpnGatewayResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>avgrVpcAttachment</a> <tt>::</tt> <a>Maybe</a>
--   <a>VpcAttachment</a></li>
--   </ul>
attachVpnGatewayResponse :: AttachVpnGatewayResponse

-- | Information about the attachment.
avgrVpcAttachment :: Lens' AttachVpnGatewayResponse (Maybe VpcAttachment)
instance Eq AttachVpnGateway
instance Ord AttachVpnGateway
instance Read AttachVpnGateway
instance Show AttachVpnGateway
instance Eq AttachVpnGatewayResponse
instance Read AttachVpnGatewayResponse
instance Show AttachVpnGatewayResponse
instance FromXML AttachVpnGatewayResponse
instance AWSRequest AttachVpnGateway
instance ToHeaders AttachVpnGateway
instance ToQuery AttachVpnGateway
instance ToPath AttachVpnGateway


-- | Attaches an EBS volume to a running or stopped instance and exposes it
--   to the instance with the specified device name.
--   
--   Encrypted EBS volumes may only be attached to instances that support
--   Amazon EBS encryption. For more information, see <a>Amazon EBS
--   Encryption</a> in the <i>AmazonElastic Compute Cloud User Guide</i>.
--   
--   For a list of supported device names, see <a>Attaching an EBS Volume
--   to anInstance</a>. Any device names that aren't reserved for instance
--   store volumes can be used for EBS volumes. For more information, see
--   <a>Amazon EC2 InstanceStore</a> in the <i>Amazon Elastic Compute Cloud
--   User Guide</i>.
--   
--   If a volume has an AWS Marketplace product code:
--   
--   The volume can be attached only to a stopped instance. AWS Marketplace
--   product codes are copied from the volume to the instance. You must be
--   subscribed to the product. The instance type and operating system of
--   the instance must support the product. For example, you can't detach a
--   volume from a Windows instance and attach it to a Linux instance. For
--   an overview of the AWS Marketplace, see <a>Introducing AWS
--   Marketplace</a>.
--   
--   For more information about EBS volumes, see <a>Attaching Amazon EBS
--   Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-AttachVolume.html</a>
module Network.AWS.EC2.AttachVolume
data AttachVolume

-- | <a>AttachVolume</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>avDevice</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>avDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>avInstanceId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>avVolumeId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
attachVolume :: Text -> Text -> Text -> AttachVolume

-- | The device name to expose to the instance (for example, '/dev/sdh' or
--   <tt>xvdh</tt>).
avDevice :: Lens' AttachVolume Text

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
avDryRun :: Lens' AttachVolume (Maybe Bool)

-- | The ID of the instance.
avInstanceId :: Lens' AttachVolume Text

-- | The ID of the EBS volume. The volume and instance must be within the
--   same Availability Zone.
avVolumeId :: Lens' AttachVolume Text
data AttachVolumeResponse

-- | <a>AttachVolumeResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>avrAttachTime</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>avrDeleteOnTermination</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>avrDevice</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>avrInstanceId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>avrState</a> <tt>::</tt> <a>Maybe</a>
--   <a>VolumeAttachmentState</a></li>
--   <li><a>avrVolumeId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
attachVolumeResponse :: AttachVolumeResponse

-- | The time stamp when the attachment initiated.
avrAttachTime :: Lens' AttachVolumeResponse (Maybe UTCTime)

-- | Indicates whether the EBS volume is deleted on instance termination.
avrDeleteOnTermination :: Lens' AttachVolumeResponse (Maybe Bool)

-- | The device name.
avrDevice :: Lens' AttachVolumeResponse (Maybe Text)

-- | The ID of the instance.
avrInstanceId :: Lens' AttachVolumeResponse (Maybe Text)

-- | The attachment state of the volume.
avrState :: Lens' AttachVolumeResponse (Maybe VolumeAttachmentState)

-- | The ID of the volume.
avrVolumeId :: Lens' AttachVolumeResponse (Maybe Text)
instance Eq AttachVolume
instance Ord AttachVolume
instance Read AttachVolume
instance Show AttachVolume
instance Eq AttachVolumeResponse
instance Read AttachVolumeResponse
instance Show AttachVolumeResponse
instance FromXML AttachVolumeResponse
instance AWSRequest AttachVolume
instance ToHeaders AttachVolume
instance ToQuery AttachVolume
instance ToPath AttachVolume


-- | Attaches a network interface to an instance.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-AttachNetworkInterface.html</a>
module Network.AWS.EC2.AttachNetworkInterface
data AttachNetworkInterface

-- | <a>AttachNetworkInterface</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>aniDeviceIndex</a> <tt>::</tt> <a>Int</a></li>
--   <li><a>aniDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>aniInstanceId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>aniNetworkInterfaceId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
attachNetworkInterface :: Text -> Text -> Int -> AttachNetworkInterface

-- | The index of the device for the network interface attachment.
aniDeviceIndex :: Lens' AttachNetworkInterface Int

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
aniDryRun :: Lens' AttachNetworkInterface (Maybe Bool)

-- | The ID of the instance.
aniInstanceId :: Lens' AttachNetworkInterface Text

-- | The ID of the network interface.
aniNetworkInterfaceId :: Lens' AttachNetworkInterface Text
data AttachNetworkInterfaceResponse

-- | <a>AttachNetworkInterfaceResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>anirAttachmentId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
attachNetworkInterfaceResponse :: AttachNetworkInterfaceResponse

-- | The ID of the network interface attachment.
anirAttachmentId :: Lens' AttachNetworkInterfaceResponse (Maybe Text)
instance Eq AttachNetworkInterface
instance Ord AttachNetworkInterface
instance Read AttachNetworkInterface
instance Show AttachNetworkInterface
instance Eq AttachNetworkInterfaceResponse
instance Ord AttachNetworkInterfaceResponse
instance Read AttachNetworkInterfaceResponse
instance Show AttachNetworkInterfaceResponse
instance Monoid AttachNetworkInterfaceResponse
instance FromXML AttachNetworkInterfaceResponse
instance AWSRequest AttachNetworkInterface
instance ToHeaders AttachNetworkInterface
instance ToQuery AttachNetworkInterface
instance ToPath AttachNetworkInterface


-- | Attaches an Internet gateway to a VPC, enabling connectivity between
--   the Internet and the VPC. For more information about your VPC and
--   Internet gateway, see the <a>Amazon Virtual Private Cloud User
--   Guide</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-AttachInternetGateway.html</a>
module Network.AWS.EC2.AttachInternetGateway
data AttachInternetGateway

-- | <a>AttachInternetGateway</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>aigDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>aigInternetGatewayId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>aigVpcId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
attachInternetGateway :: Text -> Text -> AttachInternetGateway

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
aigDryRun :: Lens' AttachInternetGateway (Maybe Bool)

-- | The ID of the Internet gateway.
aigInternetGatewayId :: Lens' AttachInternetGateway Text

-- | The ID of the VPC.
aigVpcId :: Lens' AttachInternetGateway Text
data AttachInternetGatewayResponse

-- | <a>AttachInternetGatewayResponse</a> constructor.
attachInternetGatewayResponse :: AttachInternetGatewayResponse
instance Eq AttachInternetGateway
instance Ord AttachInternetGateway
instance Read AttachInternetGateway
instance Show AttachInternetGateway
instance Eq AttachInternetGatewayResponse
instance Ord AttachInternetGatewayResponse
instance Read AttachInternetGatewayResponse
instance Show AttachInternetGatewayResponse
instance Generic AttachInternetGatewayResponse
instance Datatype D1AttachInternetGatewayResponse
instance Constructor C1_0AttachInternetGatewayResponse
instance AWSRequest AttachInternetGateway
instance ToHeaders AttachInternetGateway
instance ToQuery AttachInternetGateway
instance ToPath AttachInternetGateway


-- | Links an EC2-Classic instance to a ClassicLink-enabled VPC through one
--   or more of the VPC's security groups. You cannot link an EC2-Classic
--   instance to more than one VPC at a time. You can only link an instance
--   that's in the <tt>running</tt> state. An instance is automatically
--   unlinked from a VPC when it's stopped - you can link it to the VPC
--   again when you restart it.
--   
--   After you've linked an instance, you cannot change the VPC security
--   groups that are associated with it. To change the security groups, you
--   must first unlink the instance, and then link it again.
--   
--   Linking your instance to a VPC is sometimes referred to as
--   <i>attaching</i> your instance.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-AttachClassicLinkVpc.html</a>
module Network.AWS.EC2.AttachClassicLinkVpc
data AttachClassicLinkVpc

-- | <a>AttachClassicLinkVpc</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>aclvDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>aclvGroups</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>aclvInstanceId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>aclvVpcId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
attachClassicLinkVpc :: Text -> Text -> AttachClassicLinkVpc

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
aclvDryRun :: Lens' AttachClassicLinkVpc (Maybe Bool)

-- | The ID of one or more of the VPC's security groups. You cannot specify
--   security groups from a different VPC.
aclvGroups :: Lens' AttachClassicLinkVpc [Text]

-- | The ID of an EC2-Classic instance to link to the ClassicLink-enabled
--   VPC.
aclvInstanceId :: Lens' AttachClassicLinkVpc Text

-- | The ID of a ClassicLink-enabled VPC.
aclvVpcId :: Lens' AttachClassicLinkVpc Text
data AttachClassicLinkVpcResponse

-- | <a>AttachClassicLinkVpcResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>aclvrReturn</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   </ul>
attachClassicLinkVpcResponse :: AttachClassicLinkVpcResponse

-- | Returns <tt>true</tt> if the request succeeds; otherwise, it returns
--   an error.
aclvrReturn :: Lens' AttachClassicLinkVpcResponse (Maybe Bool)
instance Eq AttachClassicLinkVpc
instance Ord AttachClassicLinkVpc
instance Read AttachClassicLinkVpc
instance Show AttachClassicLinkVpc
instance Eq AttachClassicLinkVpcResponse
instance Ord AttachClassicLinkVpcResponse
instance Read AttachClassicLinkVpcResponse
instance Show AttachClassicLinkVpcResponse
instance FromXML AttachClassicLinkVpcResponse
instance AWSRequest AttachClassicLinkVpc
instance ToHeaders AttachClassicLinkVpc
instance ToQuery AttachClassicLinkVpc
instance ToPath AttachClassicLinkVpc


-- | Associates a subnet with a route table. The subnet and route table
--   must be in the same VPC. This association causes traffic originating
--   from the subnet to be routed according to the routes in the route
--   table. The action returns an association ID, which you need in order
--   to disassociate the route table from the subnet later. A route table
--   can be associated with multiple subnets.
--   
--   For more information about route tables, see <a>Route Tables</a> in
--   the <i>AmazonVirtual Private Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-AssociateRouteTable.html</a>
module Network.AWS.EC2.AssociateRouteTable
data AssociateRouteTable

-- | <a>AssociateRouteTable</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>artDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>artRouteTableId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>artSubnetId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
associateRouteTable :: Text -> Text -> AssociateRouteTable

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
artDryRun :: Lens' AssociateRouteTable (Maybe Bool)

-- | The ID of the route table.
artRouteTableId :: Lens' AssociateRouteTable Text

-- | The ID of the subnet.
artSubnetId :: Lens' AssociateRouteTable Text
data AssociateRouteTableResponse

-- | <a>AssociateRouteTableResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>artrAssociationId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
associateRouteTableResponse :: AssociateRouteTableResponse

-- | The route table association ID (needed to disassociate the route
--   table).
artrAssociationId :: Lens' AssociateRouteTableResponse (Maybe Text)
instance Eq AssociateRouteTable
instance Ord AssociateRouteTable
instance Read AssociateRouteTable
instance Show AssociateRouteTable
instance Eq AssociateRouteTableResponse
instance Ord AssociateRouteTableResponse
instance Read AssociateRouteTableResponse
instance Show AssociateRouteTableResponse
instance Monoid AssociateRouteTableResponse
instance FromXML AssociateRouteTableResponse
instance AWSRequest AssociateRouteTable
instance ToHeaders AssociateRouteTable
instance ToQuery AssociateRouteTable
instance ToPath AssociateRouteTable


-- | Associates a set of DHCP options (that you've previously created) with
--   the specified VPC, or associates no DHCP options with the VPC.
--   
--   After you associate the options with the VPC, any existing instances
--   and all new instances that you launch in that VPC use the options. You
--   don't need to restart or relaunch the instances. They automatically
--   pick up the changes within a few hours, depending on how frequently
--   the instance renews its DHCP lease. You can explicitly renew the lease
--   using the operating system on the instance.
--   
--   For more information, see <a>DHCP Options Sets</a> in the <i>Amazon
--   Virtual PrivateCloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-AssociateDhcpOptions.html</a>
module Network.AWS.EC2.AssociateDhcpOptions
data AssociateDhcpOptions

-- | <a>AssociateDhcpOptions</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>adoDhcpOptionsId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>adoDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>adoVpcId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
associateDhcpOptions :: Text -> Text -> AssociateDhcpOptions

-- | The ID of the DHCP options set, or 'default' to associate no DHCP
--   options with the VPC.
adoDhcpOptionsId :: Lens' AssociateDhcpOptions Text

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
adoDryRun :: Lens' AssociateDhcpOptions (Maybe Bool)

-- | The ID of the VPC.
adoVpcId :: Lens' AssociateDhcpOptions Text
data AssociateDhcpOptionsResponse

-- | <a>AssociateDhcpOptionsResponse</a> constructor.
associateDhcpOptionsResponse :: AssociateDhcpOptionsResponse
instance Eq AssociateDhcpOptions
instance Ord AssociateDhcpOptions
instance Read AssociateDhcpOptions
instance Show AssociateDhcpOptions
instance Eq AssociateDhcpOptionsResponse
instance Ord AssociateDhcpOptionsResponse
instance Read AssociateDhcpOptionsResponse
instance Show AssociateDhcpOptionsResponse
instance Generic AssociateDhcpOptionsResponse
instance Datatype D1AssociateDhcpOptionsResponse
instance Constructor C1_0AssociateDhcpOptionsResponse
instance AWSRequest AssociateDhcpOptions
instance ToHeaders AssociateDhcpOptions
instance ToQuery AssociateDhcpOptions
instance ToPath AssociateDhcpOptions


-- | Associates an Elastic IP address with an instance or a network
--   interface.
--   
--   An Elastic IP address is for use in either the EC2-Classic platform or
--   in a VPC. For more information, see <a>Elastic IP Addresses</a> in the
--   <i>Amazon ElasticCompute Cloud User Guide</i>.
--   
--   <ul>
--   <li><i>EC2-Classic, VPC in an EC2-VPC-only account</i> If the Elastic
--   IP address is already associated with a different instance, it is
--   disassociated from that instance and associated with the specified
--   instance.</li>
--   <li><i>VPC in an EC2-Classic account</i> If you don't specify a
--   private IP address, the Elastic IP address is associated with the
--   primary IP address. If the Elastic IP address is already associated
--   with a different instance or a network interface, you get an error
--   unless you allow reassociation.</li>
--   </ul>
--   
--   This is an idempotent operation. If you perform the operation more
--   than once, Amazon EC2 doesn't return an error.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-AssociateAddress.html</a>
module Network.AWS.EC2.AssociateAddress
data AssociateAddress

-- | <a>AssociateAddress</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>aa1AllocationId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>aa1AllowReassociation</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>aa1DryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>aa1InstanceId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>aa1NetworkInterfaceId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>aa1PrivateIpAddress</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>aa1PublicIp</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
associateAddress :: AssociateAddress

-- | <ul>
--   <li><i>EC2-VPC</i> The allocation ID. This is required for
--   EC2-VPC.</li>
--   </ul>
aa1AllocationId :: Lens' AssociateAddress (Maybe Text)

-- | <ul>
--   <li><i>EC2-VPC</i> Allows an Elastic IP address that is already
--   associated with an instance or network interface to be re-associated
--   with the specified instance or network interface. Otherwise, the
--   operation fails.</li>
--   </ul>
--   
--   Default: <tt>false</tt>
aa1AllowReassociation :: Lens' AssociateAddress (Maybe Bool)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
aa1DryRun :: Lens' AssociateAddress (Maybe Bool)

-- | The ID of the instance. This is required for EC2-Classic. For EC2-VPC,
--   you can specify either the instance ID or the network interface ID,
--   but not both. The operation fails if you specify an instance ID unless
--   exactly one network interface is attached.
aa1InstanceId :: Lens' AssociateAddress (Maybe Text)

-- | <ul>
--   <li><i>EC2-VPC</i> The ID of the network interface. If the instance
--   has more than one network interface, you must specify a network
--   interface ID.</li>
--   </ul>
aa1NetworkInterfaceId :: Lens' AssociateAddress (Maybe Text)

-- | <ul>
--   <li><i>EC2-VPC</i> The primary or secondary private IP address to
--   associate with the Elastic IP address. If no private IP address is
--   specified, the Elastic IP address is associated with the primary
--   private IP address.</li>
--   </ul>
aa1PrivateIpAddress :: Lens' AssociateAddress (Maybe Text)

-- | The Elastic IP address. This is required for EC2-Classic.
aa1PublicIp :: Lens' AssociateAddress (Maybe Text)
data AssociateAddressResponse

-- | <a>AssociateAddressResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>aarAssociationId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
associateAddressResponse :: AssociateAddressResponse

-- | <ul>
--   <li><i>EC2-VPC</i> The ID that represents the association of the
--   Elastic IP address with an instance.</li>
--   </ul>
aarAssociationId :: Lens' AssociateAddressResponse (Maybe Text)
instance Eq AssociateAddress
instance Ord AssociateAddress
instance Read AssociateAddress
instance Show AssociateAddress
instance Eq AssociateAddressResponse
instance Ord AssociateAddressResponse
instance Read AssociateAddressResponse
instance Show AssociateAddressResponse
instance Monoid AssociateAddressResponse
instance FromXML AssociateAddressResponse
instance AWSRequest AssociateAddress
instance ToHeaders AssociateAddress
instance ToQuery AssociateAddress
instance ToPath AssociateAddress


-- | Assigns one or more secondary private IP addresses to the specified
--   network interface. You can specify one or more specific secondary IP
--   addresses, or you can specify the number of secondary IP addresses to
--   be automatically assigned within the subnet's CIDR block range. The
--   number of secondary IP addresses that you can assign to an instance
--   varies by instance type. For information about instance types, see
--   <a>Instance Types</a> in the <i>Amazon ElasticCompute Cloud User
--   Guide</i>. For more information about Elastic IP addresses, see
--   <a>Elastic IP Addresses</a> in the <i>Amazon Elastic Compute Cloud
--   User Guide</i>.
--   
--   AssignPrivateIpAddresses is available only in EC2-VPC.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-AssignPrivateIpAddresses.html</a>
module Network.AWS.EC2.AssignPrivateIpAddresses
data AssignPrivateIpAddresses

-- | <a>AssignPrivateIpAddresses</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>apiaAllowReassignment</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>apiaNetworkInterfaceId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>apiaPrivateIpAddresses</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>apiaSecondaryPrivateIpAddressCount</a> <tt>::</tt> <a>Maybe</a>
--   <a>Int</a></li>
--   </ul>
assignPrivateIpAddresses :: Text -> AssignPrivateIpAddresses

-- | Indicates whether to allow an IP address that is already assigned to
--   another network interface or instance to be reassigned to the
--   specified network interface.
apiaAllowReassignment :: Lens' AssignPrivateIpAddresses (Maybe Bool)

-- | The ID of the network interface.
apiaNetworkInterfaceId :: Lens' AssignPrivateIpAddresses Text

-- | One or more IP addresses to be assigned as a secondary private IP
--   address to the network interface. You can't specify this parameter
--   when also specifying a number of secondary IP addresses.
--   
--   If you don't specify an IP address, Amazon EC2 automatically selects
--   an IP address within the subnet range.
apiaPrivateIpAddresses :: Lens' AssignPrivateIpAddresses [Text]

-- | The number of secondary IP addresses to assign to the network
--   interface. You can't specify this parameter when also specifying
--   private IP addresses.
apiaSecondaryPrivateIpAddressCount :: Lens' AssignPrivateIpAddresses (Maybe Int)
data AssignPrivateIpAddressesResponse

-- | <a>AssignPrivateIpAddressesResponse</a> constructor.
assignPrivateIpAddressesResponse :: AssignPrivateIpAddressesResponse
instance Eq AssignPrivateIpAddresses
instance Ord AssignPrivateIpAddresses
instance Read AssignPrivateIpAddresses
instance Show AssignPrivateIpAddresses
instance Eq AssignPrivateIpAddressesResponse
instance Ord AssignPrivateIpAddressesResponse
instance Read AssignPrivateIpAddressesResponse
instance Show AssignPrivateIpAddressesResponse
instance Generic AssignPrivateIpAddressesResponse
instance Datatype D1AssignPrivateIpAddressesResponse
instance Constructor C1_0AssignPrivateIpAddressesResponse
instance AWSRequest AssignPrivateIpAddresses
instance ToHeaders AssignPrivateIpAddresses
instance ToQuery AssignPrivateIpAddresses
instance ToPath AssignPrivateIpAddresses


-- | Acquires an Elastic IP address.
--   
--   An Elastic IP address is for use either in the EC2-Classic platform or
--   in a VPC. For more information, see <a>Elastic IP Addresses</a> in the
--   <i>Amazon ElasticCompute Cloud User Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-AllocateAddress.html</a>
module Network.AWS.EC2.AllocateAddress
data AllocateAddress

-- | <a>AllocateAddress</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>aaDomain</a> <tt>::</tt> <a>Maybe</a> <a>DomainType</a></li>
--   <li><a>aaDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   </ul>
allocateAddress :: AllocateAddress

-- | Set to <a>vpc</a> to allocate the address for use with instances in a
--   VPC.
--   
--   Default: The address is for use with instances in EC2-Classic.
aaDomain :: Lens' AllocateAddress (Maybe DomainType)

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
aaDryRun :: Lens' AllocateAddress (Maybe Bool)
data AllocateAddressResponse

-- | <a>AllocateAddressResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>aarAllocationId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>aarDomain</a> <tt>::</tt> <a>Maybe</a> <a>DomainType</a></li>
--   <li><a>aarPublicIp</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
allocateAddressResponse :: AllocateAddressResponse

-- | <ul>
--   <li><i>EC2-VPC</i> The ID that AWS assigns to represent the allocation
--   of the Elastic IP address for use with instances in a VPC.</li>
--   </ul>
aarAllocationId :: Lens' AllocateAddressResponse (Maybe Text)

-- | Indicates whether this Elastic IP address is for use with instances in
--   EC2-Classic (<tt>standard</tt>) or instances in a VPC (<a>vpc</a>).
aarDomain :: Lens' AllocateAddressResponse (Maybe DomainType)

-- | The Elastic IP address.
aarPublicIp :: Lens' AllocateAddressResponse (Maybe Text)
instance Eq AllocateAddress
instance Read AllocateAddress
instance Show AllocateAddress
instance Eq AllocateAddressResponse
instance Read AllocateAddressResponse
instance Show AllocateAddressResponse
instance FromXML AllocateAddressResponse
instance AWSRequest AllocateAddress
instance ToHeaders AllocateAddress
instance ToQuery AllocateAddress
instance ToPath AllocateAddress


-- | Accept a VPC peering connection request. To accept a request, the VPC
--   peering connection must be in the 'pending-acceptance' state, and you
--   must be the owner of the peer VPC. Use the
--   <tt>DescribeVpcPeeringConnections</tt> request to view your
--   outstanding VPC peering connection requests.
--   
--   
--   <a>http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-AcceptVpcPeeringConnection.html</a>
module Network.AWS.EC2.AcceptVpcPeeringConnection
data AcceptVpcPeeringConnection

-- | <a>AcceptVpcPeeringConnection</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>avpcDryRun</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>avpcVpcPeeringConnectionId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
acceptVpcPeeringConnection :: AcceptVpcPeeringConnection

-- | Checks whether you have the required permissions for the action,
--   without actually making the request, and provides an error response.
--   If you have the required permissions, the error response is
--   <tt>DryRunOperation</tt>. Otherwise, it is
--   <tt>UnauthorizedOperation</tt>.
avpcDryRun :: Lens' AcceptVpcPeeringConnection (Maybe Bool)

-- | The ID of the VPC peering connection.
avpcVpcPeeringConnectionId :: Lens' AcceptVpcPeeringConnection (Maybe Text)
data AcceptVpcPeeringConnectionResponse

-- | <a>AcceptVpcPeeringConnectionResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>avpcrVpcPeeringConnection</a> <tt>::</tt> <a>Maybe</a>
--   <a>VpcPeeringConnection</a></li>
--   </ul>
acceptVpcPeeringConnectionResponse :: AcceptVpcPeeringConnectionResponse

-- | Information about the VPC peering connection.
avpcrVpcPeeringConnection :: Lens' AcceptVpcPeeringConnectionResponse (Maybe VpcPeeringConnection)
instance Eq AcceptVpcPeeringConnection
instance Ord AcceptVpcPeeringConnection
instance Read AcceptVpcPeeringConnection
instance Show AcceptVpcPeeringConnection
instance Eq AcceptVpcPeeringConnectionResponse
instance Read AcceptVpcPeeringConnectionResponse
instance Show AcceptVpcPeeringConnectionResponse
instance FromXML AcceptVpcPeeringConnectionResponse
instance AWSRequest AcceptVpcPeeringConnection
instance ToHeaders AcceptVpcPeeringConnection
instance ToQuery AcceptVpcPeeringConnection
instance ToPath AcceptVpcPeeringConnection


-- | Amazon Elastic Compute Cloud (Amazon EC2) is a web service that
--   provides resizable compute capacity in the cloud. It is designed to
--   make web-scale computing easier for developers. Amazon EC2’s simple
--   web service interface allows you to obtain and configure capacity with
--   minimal friction. It provides you with complete control of your
--   computing resources and lets you run on Amazon’s proven computing
--   environment. Amazon EC2 reduces the time required to obtain and boot
--   new server instances to minutes, allowing you to quickly scale
--   capacity, both up and down, as your computing requirements change.
--   Amazon EC2 changes the economics of computing by allowing you to pay
--   only for capacity that you actually use. Amazon EC2 provides
--   developers the tools to build failure resilient applications and
--   isolate themselves from common failure scenarios.
module Network.AWS.EC2
