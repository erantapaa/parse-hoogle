-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Ad-hoc Ord instances
--   
--   Simple little thing to assign Ord instances dynamically. It's a bit
--   silly, but I've found use for it, along with other things like it,
--   when putting together quick hacks reusing large chunks of existing
--   code.
@package reord
@version 0.0.0.2

module Data.Ord.ReOrd

-- | A handy constructor which just reverses the sense of an existing
--   <a>Ord</a> instance.
newtype Ord a => ReverseOrd a
ReverseOrd :: a -> ReverseOrd a

-- | A type which provides an ad-hoc <a>Ord</a> instance for the type it
--   wraps. It is the user's responsibility to make sure that it obeys all
--   relevant laws, also taking into account the fact that when 2 items are
--   compared, only one of their <a>cmp</a> functions is invoked (the left
--   one)
data ReOrd a
ReOrd :: (a -> a -> Ordering) -> a -> ReOrd a
cmp :: ReOrd a -> a -> a -> Ordering
item :: ReOrd a -> a
instance Eq a => Eq (ReverseOrd a)
instance (Ord a, Show a) => Show (ReverseOrd a)
instance Ord (ReOrd a)
instance Eq (ReOrd a)
instance Ord a => Ord (ReverseOrd a)
