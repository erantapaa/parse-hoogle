-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A weighted nondeterministic search monad
--   
--   A weighted nondeterministic search monad
@package weighted-search
@version 0.1.0.1


-- | This is a nondeterminism monad which allows you to give computations
--   weights, such that the lowest-weight computations will be returned
--   first. This allows you to search infinite spaces productively, by
--   guarding recursive calls with weights. Example:
--   
--   <pre>
--   import qualified Control.Monad.WeightedSearch as W
--   import Control.Applicative
--   
--   -- All naturals, weighted by the size of the number
--   naturals :: W.T Integer Integer
--   naturals = go 0
--       where
--       go n = pure n &lt;|&gt; W.weight 1 (go $! n+1)
--   
--   -- All finite lists, weighted by the length of the list
--   finiteLists :: W.T Integer a -&gt; W.T Integer a
--   finiteLists = pure [] &lt;|&gt; W.weight 1 ((:) &lt;$&gt; w &lt;*&gt; finiteLists w)
--   
--   -- A list of all finite lists of naturals
--   finiteListsOfNaturals = W.toList (finiteLists naturals)
--      -- [ [], [0], [0,0], [1], [0,0,0], [0,1], [1,0], [2], [0,0,0,0], [0,0,1], ... ]
--   </pre>
--   
--   Weights must be strictly positive for this to be well-defined.
module Control.Monad.WeightedSearch

-- | Weighted nondeterminstic computations over the weight <tt>w</tt>.
data T w a

-- | The class of positive weights. We need to know how to subtract.
--   Weights must be strictly positive.
class Ord w => Weight w
difference :: Weight w => w -> w -> w

-- | Take a positive weight and weight a computation with it.
weight :: w -> T w a -> T w a

-- | List of elements of a structure.
toList :: Foldable t => t a -> [a]
instance Traversable (T w)
instance Foldable (T w)
instance Weight w => Alternative (T w)
instance Weight w => Applicative (T w)
instance Weight w => MonadPlus (T w)
instance Weight w => Monad (T w)
instance Functor (T w)
instance Integral a => Weight (Ratio a)
instance Weight Double
instance Weight Float
instance Weight Integer
instance Weight Int
