-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Bindings for YAJL, an event-based JSON implementation
--   
--   Bindings for YAJL, an event-based JSON implementation
@package yajl
@version 0.3.0.5

module Text.JSON.YAJL
data Parser m
data ParseStatus
ParseFinished :: ParseStatus

-- | More input is required before parsing can complete.
ParseContinue :: ParseStatus

-- | A callback returned <a>False</a>.
ParseCancelled :: ParseStatus

-- | An error occured while parsing. The included message contains details
--   about the error.
ParseError :: Text -> ParseStatus
newParserIO :: IO (Parser IO)
newParserST :: ST s (Parser (ST s))

-- | A callback should return <a>True</a> to continue parsing, or
--   <a>False</a> to cancel.
data Callback m a
setCallback :: Parser m -> Callback m a -> a -> m ()
clearCallback :: Parser m -> Callback m a -> m ()
parsedBeginArray :: Callback m (m Bool)
parsedEndArray :: Callback m (m Bool)
parsedBeginObject :: Callback m (m Bool)
parsedEndObject :: Callback m (m Bool)
parsedNull :: Callback m (m Bool)
parsedBoolean :: Callback m (Bool -> m Bool)
parsedInteger :: Callback m (Integer -> m Bool)
parsedDouble :: Callback m (Double -> m Bool)

-- | If <a>parsedNumber</a> is set, it overrides <a>parsedInteger</a> and
--   <a>parsedDouble</a>. Registered functions for these callbacks will not
--   receive any input until <a>parsedNumber</a> is unset.
--   
--   If <a>parsedNumber</a> is not set, but one of <a>parsedInteger</a> or
--   <a>parsedDouble</a> is set, then any values which cannot be
--   represented by <a>CLong</a> or <a>CDouble</a> will cause a parse
--   error.
--   
--   The <a>ByteString</a> is in UTF-8.
parsedNumber :: Callback m (ByteString -> m Bool)

-- | Only one of <a>parsedAttributeText</a>, <a>parsedAttributeBytes</a>,
--   or <a>parsedAttributeBuffer</a> may be set. If another of these
--   callbacks is set, it will unset the others.
parsedAttributeText :: Callback m (Text -> m Bool)

-- | Only one of <a>parsedAttributeText</a>, <a>parsedAttributeBytes</a>,
--   or <a>parsedAttributeBuffer</a> may be set. If another of these
--   callbacks is set, it will unset the others.
--   
--   The <a>ByteString</a> is in UTF-8.
parsedAttributeBytes :: Callback m (ByteString -> m Bool)

-- | Only one of <a>parsedAttributeText</a>, <a>parsedAttributeBytes</a>,
--   or <a>parsedAttributeBuffer</a> may be set. If another of these
--   callbacks is set, it will unset the others.
--   
--   The buffer is in UTF-8.
parsedAttributeBuffer :: Callback m ((Ptr Word8, Integer) -> m Bool)

-- | Only one of <a>parsedText</a>, <a>parsedBytes</a>, or
--   <a>parsedBuffer</a> may be set. If another of these callbacks is set,
--   it will unset the others.
parsedText :: Callback m (Text -> m Bool)

-- | Only one of <a>parsedText</a>, <a>parsedBytes</a>, or
--   <a>parsedBuffer</a> may be set. If another of these callbacks is set,
--   it will unset the others.
--   
--   The <a>ByteString</a> is in UTF-8.
parsedBytes :: Callback m (ByteString -> m Bool)

-- | Only one of <a>parsedText</a>, <a>parsedBytes</a>, or
--   <a>parsedBuffer</a> may be set. If another of these callbacks is set,
--   it will unset the others.
--   
--   The buffer is in UTF-8.
parsedBuffer :: Callback m ((Ptr Word8, Integer) -> m Bool)
parseText :: Parser m -> Text -> m ParseStatus
parseLazyText :: Parser m -> Text -> m ParseStatus

-- | The input must be in UTF-8.
parseBytes :: Parser m -> ByteString -> m ParseStatus

-- | The input must be in UTF-8.
parseLazyBytes :: Parser m -> ByteString -> m ParseStatus

-- | The input must be in UTF-8.
parseBuffer :: Parser m -> (Ptr Word8, Integer) -> m ParseStatus

-- | Clients should call this when no more input is available, to indicate
--   EOF.
parseComplete :: Parser m -> m ParseStatus

-- | Get the number of bytes consumed from the last input chunk.
--   
--   Note that if using <a>parseText</a> or <a>parseLazyText</a>, this
--   corresponds to UTF-8 bytes, <i>not</i> characters.
--   
--   If the most recent call to <a>parseBytes</a>, <a>parseText</a>, etc,
--   returned <a>ParseFinished</a>, this will indicate whether there are
--   any un-parsed bytes past the end of input.
--   
--   If the most recent parse returned <a>ParseError</a>, this will
--   indicate where the error occured.
getBytesConsumed :: Parser m -> m Integer
data Generator s
data GeneratorConfig
GeneratorConfig :: Bool -> Text -> GeneratorConfig

-- | Whether to generate indented, whitespaced output.
generatorBeautify :: GeneratorConfig -> Bool

-- | How much to indent beautified output by. This is only used if
--   <a>generatorBeautify</a> is <a>True</a>.
generatorIndent :: GeneratorConfig -> Text

-- | If an error is encountered when generating data, a
--   <a>GeneratorError</a> will be thrown.
--   
--   With the exception of <a>MaximumDepthExceeded</a>, this is usually due
--   to incorrect use of the library.
data GeneratorError
InvalidAttributeName :: GeneratorError
MaximumDepthExceeded :: GeneratorError
GeneratorInErrorState :: GeneratorError
GenerationComplete :: GeneratorError
InvalidNumber :: GeneratorError
NoBuffer :: GeneratorError
UnknownError :: Integer -> GeneratorError

-- | Create a new, empty generator with the given configuration.
newGenerator :: GeneratorConfig -> ST s (Generator s)

-- | Retrieve the <tt>NUL</tt>-terminated byte buffer.
getBuffer :: Generator s -> ST s ByteString

-- | Clear the generator's output buffer. This does not change the state of
--   the generator.
clearBuffer :: Generator s -> ST s ()
generateNull :: Generator s -> ST s ()
generateBoolean :: Generator s -> Bool -> ST s ()
generateIntegral :: Integral a => Generator s -> a -> ST s ()
generateDouble :: Generator s -> Double -> ST s ()
generateNumber :: Generator s -> ByteString -> ST s ()
generateText :: Generator s -> Text -> ST s ()
generateBeginArray :: Generator s -> ST s ()
generateEndArray :: Generator s -> ST s ()
generateBeginObject :: Generator s -> ST s ()
generateEndObject :: Generator s -> ST s ()
instance Typeable GeneratorError
instance Show GeneratorError
instance Eq GeneratorError
instance Show ParseStatus
instance Eq ParseStatus
instance Exception GeneratorError
