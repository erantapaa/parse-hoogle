-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Quandl.com API library
--   
@package quandl-api
@version 0.2.1.0


-- | This library provides an easy way to download data from Quandl.com.
--   See <a>http://www.quandl.com/help/api</a> for detailed information on
--   the Quandl API.
--   
--   For basic usage, see the <a>getTable</a> function. This function is
--   all you need to download tables.
--   
--   For more advanced usage, see the <a>getTableWith</a> function. This
--   function allows you to use query a subset of the data, query multiple
--   tables (multisets), apply frequency conversions, and apply
--   transformations supported by Quandl.
module Data.Quandl

-- | Download all rows and columns from a single table. To get all data
--   points for the dataset FRED/GDP:
--   
--   <pre>
--   getTable "FRED" "GDP" Nothing
--   </pre>
--   
--   Registered users should include their auth_token, like this:
--   
--   <pre>
--   getTable "FRED" "GDP" (Just "dsahFHUiewjjd")
--   </pre>
getTable :: String -> String -> Maybe String -> IO (Maybe Dataset)

-- | Default options to use for Quandl API calls. The default options do
--   not use an auth token and will return all rows in descending order.
defaultOptions :: Options

-- | Download data from Quandl using the full API. This function supports
--   all data manipulation options, plus downloading from multiple datasets
--   (multisets).
--   
--   For example, here is the annual percentage return for AAPL stock over
--   the previous decade, in ascending date order:
--   
--   <pre>
--   import Data.Quandl
--   import Data.Time (fromGregorian)
--   getTableWith (defaultOptions {opSortAscending  = True, 
--                                 opStartDate      = Just (fromGregorian 2000 1 1), 
--                                 opEndDate        = Just (fromGregorian 2010 1 1), 
--                                 opFrequency      = Just Annual, 
--                                 opTransformation = Just RDiff})
--                [("WIKI", "AAPL", Just 4)]  -- Just 4 means we only want the 4'th column (Close price)
--   </pre>
--   
--   You can pull data from multiple datasets (or from multiple columns in
--   a single dataset) using this function as well. In the example below,
--   we combine US GDP from FRED/GDP, crude oil spot prices from DOE/RWTC,
--   and Apple closing prices from WIKI/AAPL. We are going to convert all
--   of them to annual percentage changes, and look only at data for the
--   last 10 years.
--   
--   <pre>
--   import Data.Quandl
--   getTableWith (defaultOptions {opNumRows        = Just 10,
--                                 opFrequency      = Just Annual,
--                                 opTransformation = Just RDiff})
--                [("FRED", "GDP", Just 1), ("DOE", "RWTC", Just 1), ("WIKI", "AAPL", Just 4)]
--   </pre>
--   
--   Please note that Quandl does not return the table metadata when
--   pulling data from multiple datasets. In that case the <a>daTable</a>
--   field of the returned <a>Dataset</a> will be <a>Nothing</a>.
getTableWith :: Options -> [(String, String, Maybe Int)] -> IO (Maybe Dataset)

-- | Search for terms, returning given page
search :: [String] -> Maybe String -> Maybe Int -> Maybe Int -> IO (Maybe SearchPage)

-- | API parameters supported by Quandl, for use with the
--   <a>getTableWith</a> function. See
--   <a>http://www.quandl.com/help/api</a> for detailed information.
data Options
Options :: Maybe String -> Bool -> Maybe Int -> Maybe Day -> Maybe Day -> Maybe Frequency -> Maybe Transformation -> Bool -> Options

-- | The Quandl Auth Token (<a>Nothing</a> means no token supplied, limited
--   to 50 requests per day)
opAuthToken :: Options -> Maybe String

-- | Sort results ascending or descending
opSortAscending :: Options -> Bool

-- | Limits the number of returned rows (<a>Nothing</a> means no limit)
opNumRows :: Options -> Maybe Int

-- | Start date of returned results (inclusive, <a>Nothing</a> means no
--   restriction on start date)
opStartDate :: Options -> Maybe Day

-- | End date of returned results (inclusive, <a>Nothing</a> means no
--   restriction on end date)
opEndDate :: Options -> Maybe Day

-- | Desired frequency of returned results (<a>Nothing</a> means frequency
--   of original dataset)
opFrequency :: Options -> Maybe Frequency

-- | Desired transformation of returned results (<a>Nothing</a> means no
--   transformation)
opTransformation :: Options -> Maybe Transformation

-- | Only return metadata, do not return any data (only works for single
--   table queries)
opMetadataOnly :: Options -> Bool

-- | Desired frequency of returned results. See
--   <a>http://www.quandl.com/help/api</a> for detailed information.
data Frequency
Daily :: Frequency
Weekly :: Frequency
Monthly :: Frequency
Quarterly :: Frequency
Annual :: Frequency

-- | Desired transformation of returned results. See
--   <a>http://www.quandl.com/help/api</a> for detailed information.
data Transformation
Diff :: Transformation
RDiff :: Transformation
Cumul :: Transformation
Normalize :: Transformation

-- | Results from a Quandl API call.
data Dataset
Dataset :: Maybe Metadata -> [Text] -> [[Text]] -> Day -> Day -> Text -> Dataset

-- | Metadata of the table (<a>Nothing</a> if fields from multiple tables
--   are downloaded)
daTable :: Dataset -> Maybe Metadata

-- | The column names of the table
daColumnNames :: Dataset -> [Text]

-- | The contents of the table
daData :: Dataset -> [[Text]]

-- | The starting date of the returned data (inclusive)
daFromDate :: Dataset -> Day

-- | The ending date of the returned data (inclusive)
daToDate :: Dataset -> Day

-- | The frequency of the returned data (daily, monthly, etc)
daFrequency :: Dataset -> Text

-- | Metadata of a table. Only returned by Quandl when downloading from a
--   single table.
data Metadata
Metadata :: Int -> String -> String -> Text -> Text -> Text -> Text -> Text -> UTCTime -> Bool -> Metadata

-- | Table ID
meId :: Metadata -> Int

-- | Source code (can be used as parameter to <a>getTable</a> and
--   <a>getTableWith</a>)
meSourceCode :: Metadata -> String

-- | Table code (can be used as parameter to <a>getTable</a> and
--   <a>getTableWith</a>)
meTableCode :: Metadata -> String

-- | Human-readable name of the source
meSourceName :: Metadata -> Text

-- | Human-readable name of the table
meTableName :: Metadata -> Text

-- | Urlized name of the table as used on Quandl.com
meUrlName :: Metadata -> Text

-- | Description of the table
meDescription :: Metadata -> Text

-- | URL of the original data source
meSourceUrl :: Metadata -> Text

-- | Timestamp of latest update
meUpdatedAt :: Metadata -> UTCTime

-- | Private or public table
mePrivate :: Metadata -> Bool

-- | Results from Search calls.
data SearchSource
SearchSource :: Text -> Int -> Text -> Text -> Int -> Text -> SearchSource

-- | Name of the source
ssName :: SearchSource -> Text

-- | Source ID
ssId :: SearchSource -> Int

-- | Description of source
ssDescription :: SearchSource -> Text

-- | Source Host site
ssHost :: SearchSource -> Text

-- | count of datasets on host
ssDatasetsCount :: SearchSource -> Int

-- | Code to use in API.
ssCode :: SearchSource -> Text
data SearchDoc
SearchDoc :: Text -> Maybe Text -> Bool -> Text -> Text -> Day -> Text -> [Text] -> Text -> Text -> UTCTime -> Day -> Text -> SearchDoc

-- | Source code to use in API.
sdSourceCode :: SearchDoc -> Text

-- | URL to fetch original data from.
sdDisplayUrl :: SearchDoc -> Maybe Text

-- | Whether or not data is private
sdPrivate :: SearchDoc -> Bool

-- | Url encoded doc name.
sdUrlizeName :: SearchDoc -> Text

-- | Doc name.
sdName :: SearchDoc -> Text

-- | First date in source.
sdFromDate :: SearchDoc -> Day

-- | Description of data.
sdDescription :: SearchDoc -> Text

-- | Names of columns in data.
sdColumnNames :: SearchDoc -> [Text]

-- | Frequency of updates.
sdFrequency :: SearchDoc -> Text

-- | Name of source database.
sdSourceName :: SearchDoc -> Text

-- | Time of most recent updated.
sdUpdatedAt :: SearchDoc -> UTCTime

-- | Last day data is available.
sdToDate :: SearchDoc -> Day

-- | Doc code to use in API.
sdCode :: SearchDoc -> Text
data SearchPage
SearchPage :: Int -> Int -> Int -> [SearchSource] -> [SearchDoc] -> SearchPage

-- | Number of results available
spTotalCount :: SearchPage -> Int

-- | Current page of results
spCurrentPage :: SearchPage -> Int

-- | Results per page
spPerPage :: SearchPage -> Int

-- | Metadata for sources.
spSources :: SearchPage -> [SearchSource]

-- | Actual documents found.
spDocs :: SearchPage -> [SearchDoc]

-- | Returns unparsed JSON from a Quandl API call.
downloadJSON :: Options -> [(String, String, Maybe Int)] -> IO ByteString

-- | Construct a URL given the various API parameter options.
createUrl :: Options -> [(String, String, Maybe Int)] -> String
instance Typeable Frequency
instance Typeable Transformation
instance Typeable Options
instance Typeable Metadata
instance Typeable Dataset
instance Typeable SearchSource
instance Typeable SearchDoc
instance Typeable SearchPage
instance Eq Frequency
instance Ord Frequency
instance Show Frequency
instance Data Frequency
instance Eq Transformation
instance Ord Transformation
instance Show Transformation
instance Data Transformation
instance Eq Options
instance Ord Options
instance Show Options
instance Data Options
instance Eq Metadata
instance Ord Metadata
instance Show Metadata
instance Data Metadata
instance Eq Dataset
instance Show Dataset
instance Data Dataset
instance Eq SearchSource
instance Show SearchSource
instance Data SearchSource
instance Show SearchDoc
instance Eq SearchDoc
instance Data SearchDoc
instance Eq SearchPage
instance Show SearchPage
instance Data SearchPage
instance FromJSON SearchPage
instance FromJSON SearchDoc
instance FromJSON SearchSource
instance FromJSON Dataset
instance FromJSON Metadata
