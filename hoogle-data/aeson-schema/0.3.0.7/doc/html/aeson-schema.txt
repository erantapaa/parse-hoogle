-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Haskell JSON schema validator and parser generator
--   
@package aeson-schema
@version 0.3.0.7

module Data.Aeson.Schema.CodeGenM

-- | A top-level declaration.
data Declaration

-- | Optional textual declaration. This can be used for information (e.g.
--   inline comments) that are not representable in TH.
Declaration :: Dec -> (Maybe Text) -> Declaration

-- | Comment text
Comment :: Text -> Declaration

-- | Haskell code (without module declaration and imports)
type Code = [Declaration]
newtype CodeGenM s a
CodeGenM :: RWST s Code StringSet Q a -> CodeGenM s a
unCodeGenM :: CodeGenM s a -> RWST s Code StringSet Q a

-- | Render a declaration. When a declaration contains both a TH syntax
--   tree and a text representation, the text representation is preferred.
renderDeclaration :: Declaration -> Text

-- | Generates a fresh name
codeGenNewName :: String -> StringSet -> (Name, StringSet)
genRecord :: Name -> [(Name, TypeQ, Maybe Text)] -> [Name] -> Q Declaration
instance Typeable Declaration
instance Show Declaration
instance Eq Declaration
instance Data Declaration
instance Monad (CodeGenM s)
instance Applicative (CodeGenM s)
instance Functor (CodeGenM s)
instance MonadReader s (CodeGenM s)
instance MonadWriter Code (CodeGenM s)
instance MonadState StringSet (CodeGenM s)
instance MonadIO (CodeGenM s)
instance Quasi (CodeGenM s)

module Data.Aeson.Schema.Helpers

-- | Tests whether all items in a vector are different from each other.
vectorUnique :: Eq a => Vector a -> Bool

-- | List of format validators. Some validators haven't been implemented
--   yet. Those which are implemented take a Text value and return an error
--   in case the input is invalid.
formatValidators :: [(Text, Maybe (Text -> Maybe String))]

-- | Validates a Text value against a format.
validateFormat :: Text -> Text -> Maybe String

-- | Tests whether the first number is divisible by the second with no
--   remainder.
isDivisibleBy :: Scientific -> Scientific -> Bool

-- | Workaround for an issue in Template Haskell: when you quote a name in
--   TH like 'Text (Data.Text.Text) then TH searches for the module where
--   Text is defined, even if that module is not exported by its package
--   (in this case Text is defined in Data.Text.Internal). This works when
--   we use TH to insert some code in a module but not when we use the TH
--   code for pretty-printing.
replaceHiddenModules :: Data a => a -> a

-- | Workaround for a bug in Template Haskell: TH parses the empty list
--   constructor in patterns as <tt>ConP (mkName "Prelude.[]") []</tt>
--   instead of <tt>ListP []</tt>
cleanPatterns :: Data a => a -> a

-- | Extracts a list of used modules from a TH code tree.
getUsedModules :: Data a => a -> [String]


-- | This module implements generalized sum types. In theory, you could use
--   a type representing a choice between different options by nesting the
--   Either type. In practice, however, pattern matching against such a
--   type can quickly become unwieldy. This module defines data types and
--   functions for any number of choices from 2 to 20. The naming schema is
--   based on Data.Either. For example:
--   
--   <pre>
--   data Choice3 a b c = Choice1of3 a | Choice2of3 b | Choice3of3 c deriving (...)
--   choice3 :: (a -&gt; x) -&gt; (b -&gt; x) -&gt; (c -&gt; x) -&gt; Choice3 a b c -&gt; x
--   mapChoice3 :: (a1 -&gt; a2) -&gt; (b1 -&gt; b2) -&gt; (c1 -&gt; c2) -&gt; Choice a1 b1 c1 -&gt; Choice a2 b2 c2
--   choice1of3s :: [Choice3 a b c] -&gt; [a]
--   choice2of3s :: [Choice3 a b c] -&gt; [b]
--   choice3of3s :: [Choice3 a b c] -&gt; [c]
--   </pre>
module Data.Aeson.Schema.Choice
data Choice20 a b c d e f g h i j k l m n o p q r s t
Choice1of20 :: a -> Choice20 a b c d e f g h i j k l m n o p q r s t
Choice2of20 :: b -> Choice20 a b c d e f g h i j k l m n o p q r s t
Choice3of20 :: c -> Choice20 a b c d e f g h i j k l m n o p q r s t
Choice4of20 :: d -> Choice20 a b c d e f g h i j k l m n o p q r s t
Choice5of20 :: e -> Choice20 a b c d e f g h i j k l m n o p q r s t
Choice6of20 :: f -> Choice20 a b c d e f g h i j k l m n o p q r s t
Choice7of20 :: g -> Choice20 a b c d e f g h i j k l m n o p q r s t
Choice8of20 :: h -> Choice20 a b c d e f g h i j k l m n o p q r s t
Choice9of20 :: i -> Choice20 a b c d e f g h i j k l m n o p q r s t
Choice10of20 :: j -> Choice20 a b c d e f g h i j k l m n o p q r s t
Choice11of20 :: k -> Choice20 a b c d e f g h i j k l m n o p q r s t
Choice12of20 :: l -> Choice20 a b c d e f g h i j k l m n o p q r s t
Choice13of20 :: m -> Choice20 a b c d e f g h i j k l m n o p q r s t
Choice14of20 :: n -> Choice20 a b c d e f g h i j k l m n o p q r s t
Choice15of20 :: o -> Choice20 a b c d e f g h i j k l m n o p q r s t
Choice16of20 :: p -> Choice20 a b c d e f g h i j k l m n o p q r s t
Choice17of20 :: q -> Choice20 a b c d e f g h i j k l m n o p q r s t
Choice18of20 :: r -> Choice20 a b c d e f g h i j k l m n o p q r s t
Choice19of20 :: s -> Choice20 a b c d e f g h i j k l m n o p q r s t
Choice20of20 :: t -> Choice20 a b c d e f g h i j k l m n o p q r s t
data Choice19 a b c d e f g h i j k l m n o p q r s
Choice1of19 :: a -> Choice19 a b c d e f g h i j k l m n o p q r s
Choice2of19 :: b -> Choice19 a b c d e f g h i j k l m n o p q r s
Choice3of19 :: c -> Choice19 a b c d e f g h i j k l m n o p q r s
Choice4of19 :: d -> Choice19 a b c d e f g h i j k l m n o p q r s
Choice5of19 :: e -> Choice19 a b c d e f g h i j k l m n o p q r s
Choice6of19 :: f -> Choice19 a b c d e f g h i j k l m n o p q r s
Choice7of19 :: g -> Choice19 a b c d e f g h i j k l m n o p q r s
Choice8of19 :: h -> Choice19 a b c d e f g h i j k l m n o p q r s
Choice9of19 :: i -> Choice19 a b c d e f g h i j k l m n o p q r s
Choice10of19 :: j -> Choice19 a b c d e f g h i j k l m n o p q r s
Choice11of19 :: k -> Choice19 a b c d e f g h i j k l m n o p q r s
Choice12of19 :: l -> Choice19 a b c d e f g h i j k l m n o p q r s
Choice13of19 :: m -> Choice19 a b c d e f g h i j k l m n o p q r s
Choice14of19 :: n -> Choice19 a b c d e f g h i j k l m n o p q r s
Choice15of19 :: o -> Choice19 a b c d e f g h i j k l m n o p q r s
Choice16of19 :: p -> Choice19 a b c d e f g h i j k l m n o p q r s
Choice17of19 :: q -> Choice19 a b c d e f g h i j k l m n o p q r s
Choice18of19 :: r -> Choice19 a b c d e f g h i j k l m n o p q r s
Choice19of19 :: s -> Choice19 a b c d e f g h i j k l m n o p q r s
data Choice18 a b c d e f g h i j k l m n o p q r
Choice1of18 :: a -> Choice18 a b c d e f g h i j k l m n o p q r
Choice2of18 :: b -> Choice18 a b c d e f g h i j k l m n o p q r
Choice3of18 :: c -> Choice18 a b c d e f g h i j k l m n o p q r
Choice4of18 :: d -> Choice18 a b c d e f g h i j k l m n o p q r
Choice5of18 :: e -> Choice18 a b c d e f g h i j k l m n o p q r
Choice6of18 :: f -> Choice18 a b c d e f g h i j k l m n o p q r
Choice7of18 :: g -> Choice18 a b c d e f g h i j k l m n o p q r
Choice8of18 :: h -> Choice18 a b c d e f g h i j k l m n o p q r
Choice9of18 :: i -> Choice18 a b c d e f g h i j k l m n o p q r
Choice10of18 :: j -> Choice18 a b c d e f g h i j k l m n o p q r
Choice11of18 :: k -> Choice18 a b c d e f g h i j k l m n o p q r
Choice12of18 :: l -> Choice18 a b c d e f g h i j k l m n o p q r
Choice13of18 :: m -> Choice18 a b c d e f g h i j k l m n o p q r
Choice14of18 :: n -> Choice18 a b c d e f g h i j k l m n o p q r
Choice15of18 :: o -> Choice18 a b c d e f g h i j k l m n o p q r
Choice16of18 :: p -> Choice18 a b c d e f g h i j k l m n o p q r
Choice17of18 :: q -> Choice18 a b c d e f g h i j k l m n o p q r
Choice18of18 :: r -> Choice18 a b c d e f g h i j k l m n o p q r
data Choice17 a b c d e f g h i j k l m n o p q
Choice1of17 :: a -> Choice17 a b c d e f g h i j k l m n o p q
Choice2of17 :: b -> Choice17 a b c d e f g h i j k l m n o p q
Choice3of17 :: c -> Choice17 a b c d e f g h i j k l m n o p q
Choice4of17 :: d -> Choice17 a b c d e f g h i j k l m n o p q
Choice5of17 :: e -> Choice17 a b c d e f g h i j k l m n o p q
Choice6of17 :: f -> Choice17 a b c d e f g h i j k l m n o p q
Choice7of17 :: g -> Choice17 a b c d e f g h i j k l m n o p q
Choice8of17 :: h -> Choice17 a b c d e f g h i j k l m n o p q
Choice9of17 :: i -> Choice17 a b c d e f g h i j k l m n o p q
Choice10of17 :: j -> Choice17 a b c d e f g h i j k l m n o p q
Choice11of17 :: k -> Choice17 a b c d e f g h i j k l m n o p q
Choice12of17 :: l -> Choice17 a b c d e f g h i j k l m n o p q
Choice13of17 :: m -> Choice17 a b c d e f g h i j k l m n o p q
Choice14of17 :: n -> Choice17 a b c d e f g h i j k l m n o p q
Choice15of17 :: o -> Choice17 a b c d e f g h i j k l m n o p q
Choice16of17 :: p -> Choice17 a b c d e f g h i j k l m n o p q
Choice17of17 :: q -> Choice17 a b c d e f g h i j k l m n o p q
data Choice16 a b c d e f g h i j k l m n o p
Choice1of16 :: a -> Choice16 a b c d e f g h i j k l m n o p
Choice2of16 :: b -> Choice16 a b c d e f g h i j k l m n o p
Choice3of16 :: c -> Choice16 a b c d e f g h i j k l m n o p
Choice4of16 :: d -> Choice16 a b c d e f g h i j k l m n o p
Choice5of16 :: e -> Choice16 a b c d e f g h i j k l m n o p
Choice6of16 :: f -> Choice16 a b c d e f g h i j k l m n o p
Choice7of16 :: g -> Choice16 a b c d e f g h i j k l m n o p
Choice8of16 :: h -> Choice16 a b c d e f g h i j k l m n o p
Choice9of16 :: i -> Choice16 a b c d e f g h i j k l m n o p
Choice10of16 :: j -> Choice16 a b c d e f g h i j k l m n o p
Choice11of16 :: k -> Choice16 a b c d e f g h i j k l m n o p
Choice12of16 :: l -> Choice16 a b c d e f g h i j k l m n o p
Choice13of16 :: m -> Choice16 a b c d e f g h i j k l m n o p
Choice14of16 :: n -> Choice16 a b c d e f g h i j k l m n o p
Choice15of16 :: o -> Choice16 a b c d e f g h i j k l m n o p
Choice16of16 :: p -> Choice16 a b c d e f g h i j k l m n o p
data Choice15 a b c d e f g h i j k l m n o
Choice1of15 :: a -> Choice15 a b c d e f g h i j k l m n o
Choice2of15 :: b -> Choice15 a b c d e f g h i j k l m n o
Choice3of15 :: c -> Choice15 a b c d e f g h i j k l m n o
Choice4of15 :: d -> Choice15 a b c d e f g h i j k l m n o
Choice5of15 :: e -> Choice15 a b c d e f g h i j k l m n o
Choice6of15 :: f -> Choice15 a b c d e f g h i j k l m n o
Choice7of15 :: g -> Choice15 a b c d e f g h i j k l m n o
Choice8of15 :: h -> Choice15 a b c d e f g h i j k l m n o
Choice9of15 :: i -> Choice15 a b c d e f g h i j k l m n o
Choice10of15 :: j -> Choice15 a b c d e f g h i j k l m n o
Choice11of15 :: k -> Choice15 a b c d e f g h i j k l m n o
Choice12of15 :: l -> Choice15 a b c d e f g h i j k l m n o
Choice13of15 :: m -> Choice15 a b c d e f g h i j k l m n o
Choice14of15 :: n -> Choice15 a b c d e f g h i j k l m n o
Choice15of15 :: o -> Choice15 a b c d e f g h i j k l m n o
data Choice14 a b c d e f g h i j k l m n
Choice1of14 :: a -> Choice14 a b c d e f g h i j k l m n
Choice2of14 :: b -> Choice14 a b c d e f g h i j k l m n
Choice3of14 :: c -> Choice14 a b c d e f g h i j k l m n
Choice4of14 :: d -> Choice14 a b c d e f g h i j k l m n
Choice5of14 :: e -> Choice14 a b c d e f g h i j k l m n
Choice6of14 :: f -> Choice14 a b c d e f g h i j k l m n
Choice7of14 :: g -> Choice14 a b c d e f g h i j k l m n
Choice8of14 :: h -> Choice14 a b c d e f g h i j k l m n
Choice9of14 :: i -> Choice14 a b c d e f g h i j k l m n
Choice10of14 :: j -> Choice14 a b c d e f g h i j k l m n
Choice11of14 :: k -> Choice14 a b c d e f g h i j k l m n
Choice12of14 :: l -> Choice14 a b c d e f g h i j k l m n
Choice13of14 :: m -> Choice14 a b c d e f g h i j k l m n
Choice14of14 :: n -> Choice14 a b c d e f g h i j k l m n
data Choice13 a b c d e f g h i j k l m
Choice1of13 :: a -> Choice13 a b c d e f g h i j k l m
Choice2of13 :: b -> Choice13 a b c d e f g h i j k l m
Choice3of13 :: c -> Choice13 a b c d e f g h i j k l m
Choice4of13 :: d -> Choice13 a b c d e f g h i j k l m
Choice5of13 :: e -> Choice13 a b c d e f g h i j k l m
Choice6of13 :: f -> Choice13 a b c d e f g h i j k l m
Choice7of13 :: g -> Choice13 a b c d e f g h i j k l m
Choice8of13 :: h -> Choice13 a b c d e f g h i j k l m
Choice9of13 :: i -> Choice13 a b c d e f g h i j k l m
Choice10of13 :: j -> Choice13 a b c d e f g h i j k l m
Choice11of13 :: k -> Choice13 a b c d e f g h i j k l m
Choice12of13 :: l -> Choice13 a b c d e f g h i j k l m
Choice13of13 :: m -> Choice13 a b c d e f g h i j k l m
data Choice12 a b c d e f g h i j k l
Choice1of12 :: a -> Choice12 a b c d e f g h i j k l
Choice2of12 :: b -> Choice12 a b c d e f g h i j k l
Choice3of12 :: c -> Choice12 a b c d e f g h i j k l
Choice4of12 :: d -> Choice12 a b c d e f g h i j k l
Choice5of12 :: e -> Choice12 a b c d e f g h i j k l
Choice6of12 :: f -> Choice12 a b c d e f g h i j k l
Choice7of12 :: g -> Choice12 a b c d e f g h i j k l
Choice8of12 :: h -> Choice12 a b c d e f g h i j k l
Choice9of12 :: i -> Choice12 a b c d e f g h i j k l
Choice10of12 :: j -> Choice12 a b c d e f g h i j k l
Choice11of12 :: k -> Choice12 a b c d e f g h i j k l
Choice12of12 :: l -> Choice12 a b c d e f g h i j k l
data Choice11 a b c d e f g h i j k
Choice1of11 :: a -> Choice11 a b c d e f g h i j k
Choice2of11 :: b -> Choice11 a b c d e f g h i j k
Choice3of11 :: c -> Choice11 a b c d e f g h i j k
Choice4of11 :: d -> Choice11 a b c d e f g h i j k
Choice5of11 :: e -> Choice11 a b c d e f g h i j k
Choice6of11 :: f -> Choice11 a b c d e f g h i j k
Choice7of11 :: g -> Choice11 a b c d e f g h i j k
Choice8of11 :: h -> Choice11 a b c d e f g h i j k
Choice9of11 :: i -> Choice11 a b c d e f g h i j k
Choice10of11 :: j -> Choice11 a b c d e f g h i j k
Choice11of11 :: k -> Choice11 a b c d e f g h i j k
data Choice10 a b c d e f g h i j
Choice1of10 :: a -> Choice10 a b c d e f g h i j
Choice2of10 :: b -> Choice10 a b c d e f g h i j
Choice3of10 :: c -> Choice10 a b c d e f g h i j
Choice4of10 :: d -> Choice10 a b c d e f g h i j
Choice5of10 :: e -> Choice10 a b c d e f g h i j
Choice6of10 :: f -> Choice10 a b c d e f g h i j
Choice7of10 :: g -> Choice10 a b c d e f g h i j
Choice8of10 :: h -> Choice10 a b c d e f g h i j
Choice9of10 :: i -> Choice10 a b c d e f g h i j
Choice10of10 :: j -> Choice10 a b c d e f g h i j
data Choice9 a b c d e f g h i
Choice1of9 :: a -> Choice9 a b c d e f g h i
Choice2of9 :: b -> Choice9 a b c d e f g h i
Choice3of9 :: c -> Choice9 a b c d e f g h i
Choice4of9 :: d -> Choice9 a b c d e f g h i
Choice5of9 :: e -> Choice9 a b c d e f g h i
Choice6of9 :: f -> Choice9 a b c d e f g h i
Choice7of9 :: g -> Choice9 a b c d e f g h i
Choice8of9 :: h -> Choice9 a b c d e f g h i
Choice9of9 :: i -> Choice9 a b c d e f g h i
data Choice8 a b c d e f g h
Choice1of8 :: a -> Choice8 a b c d e f g h
Choice2of8 :: b -> Choice8 a b c d e f g h
Choice3of8 :: c -> Choice8 a b c d e f g h
Choice4of8 :: d -> Choice8 a b c d e f g h
Choice5of8 :: e -> Choice8 a b c d e f g h
Choice6of8 :: f -> Choice8 a b c d e f g h
Choice7of8 :: g -> Choice8 a b c d e f g h
Choice8of8 :: h -> Choice8 a b c d e f g h
data Choice7 a b c d e f g
Choice1of7 :: a -> Choice7 a b c d e f g
Choice2of7 :: b -> Choice7 a b c d e f g
Choice3of7 :: c -> Choice7 a b c d e f g
Choice4of7 :: d -> Choice7 a b c d e f g
Choice5of7 :: e -> Choice7 a b c d e f g
Choice6of7 :: f -> Choice7 a b c d e f g
Choice7of7 :: g -> Choice7 a b c d e f g
data Choice6 a b c d e f
Choice1of6 :: a -> Choice6 a b c d e f
Choice2of6 :: b -> Choice6 a b c d e f
Choice3of6 :: c -> Choice6 a b c d e f
Choice4of6 :: d -> Choice6 a b c d e f
Choice5of6 :: e -> Choice6 a b c d e f
Choice6of6 :: f -> Choice6 a b c d e f
data Choice5 a b c d e
Choice1of5 :: a -> Choice5 a b c d e
Choice2of5 :: b -> Choice5 a b c d e
Choice3of5 :: c -> Choice5 a b c d e
Choice4of5 :: d -> Choice5 a b c d e
Choice5of5 :: e -> Choice5 a b c d e
data Choice4 a b c d
Choice1of4 :: a -> Choice4 a b c d
Choice2of4 :: b -> Choice4 a b c d
Choice3of4 :: c -> Choice4 a b c d
Choice4of4 :: d -> Choice4 a b c d
data Choice3 a b c
Choice1of3 :: a -> Choice3 a b c
Choice2of3 :: b -> Choice3 a b c
Choice3of3 :: c -> Choice3 a b c
data Choice2 a b
Choice1of2 :: a -> Choice2 a b
Choice2of2 :: b -> Choice2 a b
choice20of20s :: [Choice20 a b c d e f g h i j k l m n o p q r s t] -> [t]
choice19of20s :: [Choice20 a b c d e f g h i j k l m n o p q r s t] -> [s]
choice18of20s :: [Choice20 a b c d e f g h i j k l m n o p q r s t] -> [r]
choice17of20s :: [Choice20 a b c d e f g h i j k l m n o p q r s t] -> [q]
choice16of20s :: [Choice20 a b c d e f g h i j k l m n o p q r s t] -> [p]
choice15of20s :: [Choice20 a b c d e f g h i j k l m n o p q r s t] -> [o]
choice14of20s :: [Choice20 a b c d e f g h i j k l m n o p q r s t] -> [n]
choice13of20s :: [Choice20 a b c d e f g h i j k l m n o p q r s t] -> [m]
choice12of20s :: [Choice20 a b c d e f g h i j k l m n o p q r s t] -> [l]
choice11of20s :: [Choice20 a b c d e f g h i j k l m n o p q r s t] -> [k]
choice10of20s :: [Choice20 a b c d e f g h i j k l m n o p q r s t] -> [j]
choice9of20s :: [Choice20 a b c d e f g h i j k l m n o p q r s t] -> [i]
choice8of20s :: [Choice20 a b c d e f g h i j k l m n o p q r s t] -> [h]
choice7of20s :: [Choice20 a b c d e f g h i j k l m n o p q r s t] -> [g]
choice6of20s :: [Choice20 a b c d e f g h i j k l m n o p q r s t] -> [f]
choice5of20s :: [Choice20 a b c d e f g h i j k l m n o p q r s t] -> [e]
choice4of20s :: [Choice20 a b c d e f g h i j k l m n o p q r s t] -> [d]
choice3of20s :: [Choice20 a b c d e f g h i j k l m n o p q r s t] -> [c]
choice2of20s :: [Choice20 a b c d e f g h i j k l m n o p q r s t] -> [b]
choice1of20s :: [Choice20 a b c d e f g h i j k l m n o p q r s t] -> [a]
mapChoice20 :: (a1 -> b1) -> (a2 -> b2) -> (a3 -> b3) -> (a4 -> b4) -> (a5 -> b5) -> (a6 -> b6) -> (a7 -> b7) -> (a8 -> b8) -> (a9 -> b9) -> (a10 -> b10) -> (a11 -> b11) -> (a12 -> b12) -> (a13 -> b13) -> (a14 -> b14) -> (a15 -> b15) -> (a16 -> b16) -> (a17 -> b17) -> (a18 -> b18) -> (a19 -> b19) -> (a20 -> b20) -> Choice20 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20 -> Choice20 b1 b2 b3 b4 b5 b6 b7 b8 b9 b10 b11 b12 b13 b14 b15 b16 b17 b18 b19 b20
choice20 :: (a -> res) -> (b -> res) -> (c -> res) -> (d -> res) -> (e -> res) -> (f -> res) -> (g -> res) -> (h -> res) -> (i -> res) -> (j -> res) -> (k -> res) -> (l -> res) -> (m -> res) -> (n -> res) -> (o -> res) -> (p -> res) -> (q -> res) -> (r -> res) -> (s -> res) -> (t -> res) -> Choice20 a b c d e f g h i j k l m n o p q r s t -> res
choice19of19s :: [Choice19 a b c d e f g h i j k l m n o p q r s] -> [s]
choice18of19s :: [Choice19 a b c d e f g h i j k l m n o p q r s] -> [r]
choice17of19s :: [Choice19 a b c d e f g h i j k l m n o p q r s] -> [q]
choice16of19s :: [Choice19 a b c d e f g h i j k l m n o p q r s] -> [p]
choice15of19s :: [Choice19 a b c d e f g h i j k l m n o p q r s] -> [o]
choice14of19s :: [Choice19 a b c d e f g h i j k l m n o p q r s] -> [n]
choice13of19s :: [Choice19 a b c d e f g h i j k l m n o p q r s] -> [m]
choice12of19s :: [Choice19 a b c d e f g h i j k l m n o p q r s] -> [l]
choice11of19s :: [Choice19 a b c d e f g h i j k l m n o p q r s] -> [k]
choice10of19s :: [Choice19 a b c d e f g h i j k l m n o p q r s] -> [j]
choice9of19s :: [Choice19 a b c d e f g h i j k l m n o p q r s] -> [i]
choice8of19s :: [Choice19 a b c d e f g h i j k l m n o p q r s] -> [h]
choice7of19s :: [Choice19 a b c d e f g h i j k l m n o p q r s] -> [g]
choice6of19s :: [Choice19 a b c d e f g h i j k l m n o p q r s] -> [f]
choice5of19s :: [Choice19 a b c d e f g h i j k l m n o p q r s] -> [e]
choice4of19s :: [Choice19 a b c d e f g h i j k l m n o p q r s] -> [d]
choice3of19s :: [Choice19 a b c d e f g h i j k l m n o p q r s] -> [c]
choice2of19s :: [Choice19 a b c d e f g h i j k l m n o p q r s] -> [b]
choice1of19s :: [Choice19 a b c d e f g h i j k l m n o p q r s] -> [a]
mapChoice19 :: (a1 -> b1) -> (a2 -> b2) -> (a3 -> b3) -> (a4 -> b4) -> (a5 -> b5) -> (a6 -> b6) -> (a7 -> b7) -> (a8 -> b8) -> (a9 -> b9) -> (a10 -> b10) -> (a11 -> b11) -> (a12 -> b12) -> (a13 -> b13) -> (a14 -> b14) -> (a15 -> b15) -> (a16 -> b16) -> (a17 -> b17) -> (a18 -> b18) -> (a19 -> b19) -> Choice19 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 -> Choice19 b1 b2 b3 b4 b5 b6 b7 b8 b9 b10 b11 b12 b13 b14 b15 b16 b17 b18 b19
choice19 :: (a -> res) -> (b -> res) -> (c -> res) -> (d -> res) -> (e -> res) -> (f -> res) -> (g -> res) -> (h -> res) -> (i -> res) -> (j -> res) -> (k -> res) -> (l -> res) -> (m -> res) -> (n -> res) -> (o -> res) -> (p -> res) -> (q -> res) -> (r -> res) -> (s -> res) -> Choice19 a b c d e f g h i j k l m n o p q r s -> res
choice18of18s :: [Choice18 a b c d e f g h i j k l m n o p q r] -> [r]
choice17of18s :: [Choice18 a b c d e f g h i j k l m n o p q r] -> [q]
choice16of18s :: [Choice18 a b c d e f g h i j k l m n o p q r] -> [p]
choice15of18s :: [Choice18 a b c d e f g h i j k l m n o p q r] -> [o]
choice14of18s :: [Choice18 a b c d e f g h i j k l m n o p q r] -> [n]
choice13of18s :: [Choice18 a b c d e f g h i j k l m n o p q r] -> [m]
choice12of18s :: [Choice18 a b c d e f g h i j k l m n o p q r] -> [l]
choice11of18s :: [Choice18 a b c d e f g h i j k l m n o p q r] -> [k]
choice10of18s :: [Choice18 a b c d e f g h i j k l m n o p q r] -> [j]
choice9of18s :: [Choice18 a b c d e f g h i j k l m n o p q r] -> [i]
choice8of18s :: [Choice18 a b c d e f g h i j k l m n o p q r] -> [h]
choice7of18s :: [Choice18 a b c d e f g h i j k l m n o p q r] -> [g]
choice6of18s :: [Choice18 a b c d e f g h i j k l m n o p q r] -> [f]
choice5of18s :: [Choice18 a b c d e f g h i j k l m n o p q r] -> [e]
choice4of18s :: [Choice18 a b c d e f g h i j k l m n o p q r] -> [d]
choice3of18s :: [Choice18 a b c d e f g h i j k l m n o p q r] -> [c]
choice2of18s :: [Choice18 a b c d e f g h i j k l m n o p q r] -> [b]
choice1of18s :: [Choice18 a b c d e f g h i j k l m n o p q r] -> [a]
mapChoice18 :: (a1 -> b1) -> (a2 -> b2) -> (a3 -> b3) -> (a4 -> b4) -> (a5 -> b5) -> (a6 -> b6) -> (a7 -> b7) -> (a8 -> b8) -> (a9 -> b9) -> (a10 -> b10) -> (a11 -> b11) -> (a12 -> b12) -> (a13 -> b13) -> (a14 -> b14) -> (a15 -> b15) -> (a16 -> b16) -> (a17 -> b17) -> (a18 -> b18) -> Choice18 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 -> Choice18 b1 b2 b3 b4 b5 b6 b7 b8 b9 b10 b11 b12 b13 b14 b15 b16 b17 b18
choice18 :: (a -> res) -> (b -> res) -> (c -> res) -> (d -> res) -> (e -> res) -> (f -> res) -> (g -> res) -> (h -> res) -> (i -> res) -> (j -> res) -> (k -> res) -> (l -> res) -> (m -> res) -> (n -> res) -> (o -> res) -> (p -> res) -> (q -> res) -> (r -> res) -> Choice18 a b c d e f g h i j k l m n o p q r -> res
choice17of17s :: [Choice17 a b c d e f g h i j k l m n o p q] -> [q]
choice16of17s :: [Choice17 a b c d e f g h i j k l m n o p q] -> [p]
choice15of17s :: [Choice17 a b c d e f g h i j k l m n o p q] -> [o]
choice14of17s :: [Choice17 a b c d e f g h i j k l m n o p q] -> [n]
choice13of17s :: [Choice17 a b c d e f g h i j k l m n o p q] -> [m]
choice12of17s :: [Choice17 a b c d e f g h i j k l m n o p q] -> [l]
choice11of17s :: [Choice17 a b c d e f g h i j k l m n o p q] -> [k]
choice10of17s :: [Choice17 a b c d e f g h i j k l m n o p q] -> [j]
choice9of17s :: [Choice17 a b c d e f g h i j k l m n o p q] -> [i]
choice8of17s :: [Choice17 a b c d e f g h i j k l m n o p q] -> [h]
choice7of17s :: [Choice17 a b c d e f g h i j k l m n o p q] -> [g]
choice6of17s :: [Choice17 a b c d e f g h i j k l m n o p q] -> [f]
choice5of17s :: [Choice17 a b c d e f g h i j k l m n o p q] -> [e]
choice4of17s :: [Choice17 a b c d e f g h i j k l m n o p q] -> [d]
choice3of17s :: [Choice17 a b c d e f g h i j k l m n o p q] -> [c]
choice2of17s :: [Choice17 a b c d e f g h i j k l m n o p q] -> [b]
choice1of17s :: [Choice17 a b c d e f g h i j k l m n o p q] -> [a]
mapChoice17 :: (a1 -> b1) -> (a2 -> b2) -> (a3 -> b3) -> (a4 -> b4) -> (a5 -> b5) -> (a6 -> b6) -> (a7 -> b7) -> (a8 -> b8) -> (a9 -> b9) -> (a10 -> b10) -> (a11 -> b11) -> (a12 -> b12) -> (a13 -> b13) -> (a14 -> b14) -> (a15 -> b15) -> (a16 -> b16) -> (a17 -> b17) -> Choice17 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 -> Choice17 b1 b2 b3 b4 b5 b6 b7 b8 b9 b10 b11 b12 b13 b14 b15 b16 b17
choice17 :: (a -> res) -> (b -> res) -> (c -> res) -> (d -> res) -> (e -> res) -> (f -> res) -> (g -> res) -> (h -> res) -> (i -> res) -> (j -> res) -> (k -> res) -> (l -> res) -> (m -> res) -> (n -> res) -> (o -> res) -> (p -> res) -> (q -> res) -> Choice17 a b c d e f g h i j k l m n o p q -> res
choice16of16s :: [Choice16 a b c d e f g h i j k l m n o p] -> [p]
choice15of16s :: [Choice16 a b c d e f g h i j k l m n o p] -> [o]
choice14of16s :: [Choice16 a b c d e f g h i j k l m n o p] -> [n]
choice13of16s :: [Choice16 a b c d e f g h i j k l m n o p] -> [m]
choice12of16s :: [Choice16 a b c d e f g h i j k l m n o p] -> [l]
choice11of16s :: [Choice16 a b c d e f g h i j k l m n o p] -> [k]
choice10of16s :: [Choice16 a b c d e f g h i j k l m n o p] -> [j]
choice9of16s :: [Choice16 a b c d e f g h i j k l m n o p] -> [i]
choice8of16s :: [Choice16 a b c d e f g h i j k l m n o p] -> [h]
choice7of16s :: [Choice16 a b c d e f g h i j k l m n o p] -> [g]
choice6of16s :: [Choice16 a b c d e f g h i j k l m n o p] -> [f]
choice5of16s :: [Choice16 a b c d e f g h i j k l m n o p] -> [e]
choice4of16s :: [Choice16 a b c d e f g h i j k l m n o p] -> [d]
choice3of16s :: [Choice16 a b c d e f g h i j k l m n o p] -> [c]
choice2of16s :: [Choice16 a b c d e f g h i j k l m n o p] -> [b]
choice1of16s :: [Choice16 a b c d e f g h i j k l m n o p] -> [a]
mapChoice16 :: (a1 -> b1) -> (a2 -> b2) -> (a3 -> b3) -> (a4 -> b4) -> (a5 -> b5) -> (a6 -> b6) -> (a7 -> b7) -> (a8 -> b8) -> (a9 -> b9) -> (a10 -> b10) -> (a11 -> b11) -> (a12 -> b12) -> (a13 -> b13) -> (a14 -> b14) -> (a15 -> b15) -> (a16 -> b16) -> Choice16 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 -> Choice16 b1 b2 b3 b4 b5 b6 b7 b8 b9 b10 b11 b12 b13 b14 b15 b16
choice16 :: (a -> res) -> (b -> res) -> (c -> res) -> (d -> res) -> (e -> res) -> (f -> res) -> (g -> res) -> (h -> res) -> (i -> res) -> (j -> res) -> (k -> res) -> (l -> res) -> (m -> res) -> (n -> res) -> (o -> res) -> (p -> res) -> Choice16 a b c d e f g h i j k l m n o p -> res
choice15of15s :: [Choice15 a b c d e f g h i j k l m n o] -> [o]
choice14of15s :: [Choice15 a b c d e f g h i j k l m n o] -> [n]
choice13of15s :: [Choice15 a b c d e f g h i j k l m n o] -> [m]
choice12of15s :: [Choice15 a b c d e f g h i j k l m n o] -> [l]
choice11of15s :: [Choice15 a b c d e f g h i j k l m n o] -> [k]
choice10of15s :: [Choice15 a b c d e f g h i j k l m n o] -> [j]
choice9of15s :: [Choice15 a b c d e f g h i j k l m n o] -> [i]
choice8of15s :: [Choice15 a b c d e f g h i j k l m n o] -> [h]
choice7of15s :: [Choice15 a b c d e f g h i j k l m n o] -> [g]
choice6of15s :: [Choice15 a b c d e f g h i j k l m n o] -> [f]
choice5of15s :: [Choice15 a b c d e f g h i j k l m n o] -> [e]
choice4of15s :: [Choice15 a b c d e f g h i j k l m n o] -> [d]
choice3of15s :: [Choice15 a b c d e f g h i j k l m n o] -> [c]
choice2of15s :: [Choice15 a b c d e f g h i j k l m n o] -> [b]
choice1of15s :: [Choice15 a b c d e f g h i j k l m n o] -> [a]
mapChoice15 :: (a1 -> b1) -> (a2 -> b2) -> (a3 -> b3) -> (a4 -> b4) -> (a5 -> b5) -> (a6 -> b6) -> (a7 -> b7) -> (a8 -> b8) -> (a9 -> b9) -> (a10 -> b10) -> (a11 -> b11) -> (a12 -> b12) -> (a13 -> b13) -> (a14 -> b14) -> (a15 -> b15) -> Choice15 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 -> Choice15 b1 b2 b3 b4 b5 b6 b7 b8 b9 b10 b11 b12 b13 b14 b15
choice15 :: (a -> res) -> (b -> res) -> (c -> res) -> (d -> res) -> (e -> res) -> (f -> res) -> (g -> res) -> (h -> res) -> (i -> res) -> (j -> res) -> (k -> res) -> (l -> res) -> (m -> res) -> (n -> res) -> (o -> res) -> Choice15 a b c d e f g h i j k l m n o -> res
choice14of14s :: [Choice14 a b c d e f g h i j k l m n] -> [n]
choice13of14s :: [Choice14 a b c d e f g h i j k l m n] -> [m]
choice12of14s :: [Choice14 a b c d e f g h i j k l m n] -> [l]
choice11of14s :: [Choice14 a b c d e f g h i j k l m n] -> [k]
choice10of14s :: [Choice14 a b c d e f g h i j k l m n] -> [j]
choice9of14s :: [Choice14 a b c d e f g h i j k l m n] -> [i]
choice8of14s :: [Choice14 a b c d e f g h i j k l m n] -> [h]
choice7of14s :: [Choice14 a b c d e f g h i j k l m n] -> [g]
choice6of14s :: [Choice14 a b c d e f g h i j k l m n] -> [f]
choice5of14s :: [Choice14 a b c d e f g h i j k l m n] -> [e]
choice4of14s :: [Choice14 a b c d e f g h i j k l m n] -> [d]
choice3of14s :: [Choice14 a b c d e f g h i j k l m n] -> [c]
choice2of14s :: [Choice14 a b c d e f g h i j k l m n] -> [b]
choice1of14s :: [Choice14 a b c d e f g h i j k l m n] -> [a]
mapChoice14 :: (a1 -> b1) -> (a2 -> b2) -> (a3 -> b3) -> (a4 -> b4) -> (a5 -> b5) -> (a6 -> b6) -> (a7 -> b7) -> (a8 -> b8) -> (a9 -> b9) -> (a10 -> b10) -> (a11 -> b11) -> (a12 -> b12) -> (a13 -> b13) -> (a14 -> b14) -> Choice14 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 -> Choice14 b1 b2 b3 b4 b5 b6 b7 b8 b9 b10 b11 b12 b13 b14
choice14 :: (a -> res) -> (b -> res) -> (c -> res) -> (d -> res) -> (e -> res) -> (f -> res) -> (g -> res) -> (h -> res) -> (i -> res) -> (j -> res) -> (k -> res) -> (l -> res) -> (m -> res) -> (n -> res) -> Choice14 a b c d e f g h i j k l m n -> res
choice13of13s :: [Choice13 a b c d e f g h i j k l m] -> [m]
choice12of13s :: [Choice13 a b c d e f g h i j k l m] -> [l]
choice11of13s :: [Choice13 a b c d e f g h i j k l m] -> [k]
choice10of13s :: [Choice13 a b c d e f g h i j k l m] -> [j]
choice9of13s :: [Choice13 a b c d e f g h i j k l m] -> [i]
choice8of13s :: [Choice13 a b c d e f g h i j k l m] -> [h]
choice7of13s :: [Choice13 a b c d e f g h i j k l m] -> [g]
choice6of13s :: [Choice13 a b c d e f g h i j k l m] -> [f]
choice5of13s :: [Choice13 a b c d e f g h i j k l m] -> [e]
choice4of13s :: [Choice13 a b c d e f g h i j k l m] -> [d]
choice3of13s :: [Choice13 a b c d e f g h i j k l m] -> [c]
choice2of13s :: [Choice13 a b c d e f g h i j k l m] -> [b]
choice1of13s :: [Choice13 a b c d e f g h i j k l m] -> [a]
mapChoice13 :: (a1 -> b1) -> (a2 -> b2) -> (a3 -> b3) -> (a4 -> b4) -> (a5 -> b5) -> (a6 -> b6) -> (a7 -> b7) -> (a8 -> b8) -> (a9 -> b9) -> (a10 -> b10) -> (a11 -> b11) -> (a12 -> b12) -> (a13 -> b13) -> Choice13 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 -> Choice13 b1 b2 b3 b4 b5 b6 b7 b8 b9 b10 b11 b12 b13
choice13 :: (a -> res) -> (b -> res) -> (c -> res) -> (d -> res) -> (e -> res) -> (f -> res) -> (g -> res) -> (h -> res) -> (i -> res) -> (j -> res) -> (k -> res) -> (l -> res) -> (m -> res) -> Choice13 a b c d e f g h i j k l m -> res
choice12of12s :: [Choice12 a b c d e f g h i j k l] -> [l]
choice11of12s :: [Choice12 a b c d e f g h i j k l] -> [k]
choice10of12s :: [Choice12 a b c d e f g h i j k l] -> [j]
choice9of12s :: [Choice12 a b c d e f g h i j k l] -> [i]
choice8of12s :: [Choice12 a b c d e f g h i j k l] -> [h]
choice7of12s :: [Choice12 a b c d e f g h i j k l] -> [g]
choice6of12s :: [Choice12 a b c d e f g h i j k l] -> [f]
choice5of12s :: [Choice12 a b c d e f g h i j k l] -> [e]
choice4of12s :: [Choice12 a b c d e f g h i j k l] -> [d]
choice3of12s :: [Choice12 a b c d e f g h i j k l] -> [c]
choice2of12s :: [Choice12 a b c d e f g h i j k l] -> [b]
choice1of12s :: [Choice12 a b c d e f g h i j k l] -> [a]
mapChoice12 :: (a1 -> b1) -> (a2 -> b2) -> (a3 -> b3) -> (a4 -> b4) -> (a5 -> b5) -> (a6 -> b6) -> (a7 -> b7) -> (a8 -> b8) -> (a9 -> b9) -> (a10 -> b10) -> (a11 -> b11) -> (a12 -> b12) -> Choice12 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 -> Choice12 b1 b2 b3 b4 b5 b6 b7 b8 b9 b10 b11 b12
choice12 :: (a -> res) -> (b -> res) -> (c -> res) -> (d -> res) -> (e -> res) -> (f -> res) -> (g -> res) -> (h -> res) -> (i -> res) -> (j -> res) -> (k -> res) -> (l -> res) -> Choice12 a b c d e f g h i j k l -> res
choice11of11s :: [Choice11 a b c d e f g h i j k] -> [k]
choice10of11s :: [Choice11 a b c d e f g h i j k] -> [j]
choice9of11s :: [Choice11 a b c d e f g h i j k] -> [i]
choice8of11s :: [Choice11 a b c d e f g h i j k] -> [h]
choice7of11s :: [Choice11 a b c d e f g h i j k] -> [g]
choice6of11s :: [Choice11 a b c d e f g h i j k] -> [f]
choice5of11s :: [Choice11 a b c d e f g h i j k] -> [e]
choice4of11s :: [Choice11 a b c d e f g h i j k] -> [d]
choice3of11s :: [Choice11 a b c d e f g h i j k] -> [c]
choice2of11s :: [Choice11 a b c d e f g h i j k] -> [b]
choice1of11s :: [Choice11 a b c d e f g h i j k] -> [a]
mapChoice11 :: (a1 -> b1) -> (a2 -> b2) -> (a3 -> b3) -> (a4 -> b4) -> (a5 -> b5) -> (a6 -> b6) -> (a7 -> b7) -> (a8 -> b8) -> (a9 -> b9) -> (a10 -> b10) -> (a11 -> b11) -> Choice11 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 -> Choice11 b1 b2 b3 b4 b5 b6 b7 b8 b9 b10 b11
choice11 :: (a -> res) -> (b -> res) -> (c -> res) -> (d -> res) -> (e -> res) -> (f -> res) -> (g -> res) -> (h -> res) -> (i -> res) -> (j -> res) -> (k -> res) -> Choice11 a b c d e f g h i j k -> res
choice10of10s :: [Choice10 a b c d e f g h i j] -> [j]
choice9of10s :: [Choice10 a b c d e f g h i j] -> [i]
choice8of10s :: [Choice10 a b c d e f g h i j] -> [h]
choice7of10s :: [Choice10 a b c d e f g h i j] -> [g]
choice6of10s :: [Choice10 a b c d e f g h i j] -> [f]
choice5of10s :: [Choice10 a b c d e f g h i j] -> [e]
choice4of10s :: [Choice10 a b c d e f g h i j] -> [d]
choice3of10s :: [Choice10 a b c d e f g h i j] -> [c]
choice2of10s :: [Choice10 a b c d e f g h i j] -> [b]
choice1of10s :: [Choice10 a b c d e f g h i j] -> [a]
mapChoice10 :: (a1 -> b1) -> (a2 -> b2) -> (a3 -> b3) -> (a4 -> b4) -> (a5 -> b5) -> (a6 -> b6) -> (a7 -> b7) -> (a8 -> b8) -> (a9 -> b9) -> (a10 -> b10) -> Choice10 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 -> Choice10 b1 b2 b3 b4 b5 b6 b7 b8 b9 b10
choice10 :: (a -> res) -> (b -> res) -> (c -> res) -> (d -> res) -> (e -> res) -> (f -> res) -> (g -> res) -> (h -> res) -> (i -> res) -> (j -> res) -> Choice10 a b c d e f g h i j -> res
choice9of9s :: [Choice9 a b c d e f g h i] -> [i]
choice8of9s :: [Choice9 a b c d e f g h i] -> [h]
choice7of9s :: [Choice9 a b c d e f g h i] -> [g]
choice6of9s :: [Choice9 a b c d e f g h i] -> [f]
choice5of9s :: [Choice9 a b c d e f g h i] -> [e]
choice4of9s :: [Choice9 a b c d e f g h i] -> [d]
choice3of9s :: [Choice9 a b c d e f g h i] -> [c]
choice2of9s :: [Choice9 a b c d e f g h i] -> [b]
choice1of9s :: [Choice9 a b c d e f g h i] -> [a]
mapChoice9 :: (a1 -> b1) -> (a2 -> b2) -> (a3 -> b3) -> (a4 -> b4) -> (a5 -> b5) -> (a6 -> b6) -> (a7 -> b7) -> (a8 -> b8) -> (a9 -> b9) -> Choice9 a1 a2 a3 a4 a5 a6 a7 a8 a9 -> Choice9 b1 b2 b3 b4 b5 b6 b7 b8 b9
choice9 :: (a -> res) -> (b -> res) -> (c -> res) -> (d -> res) -> (e -> res) -> (f -> res) -> (g -> res) -> (h -> res) -> (i -> res) -> Choice9 a b c d e f g h i -> res
choice8of8s :: [Choice8 a b c d e f g h] -> [h]
choice7of8s :: [Choice8 a b c d e f g h] -> [g]
choice6of8s :: [Choice8 a b c d e f g h] -> [f]
choice5of8s :: [Choice8 a b c d e f g h] -> [e]
choice4of8s :: [Choice8 a b c d e f g h] -> [d]
choice3of8s :: [Choice8 a b c d e f g h] -> [c]
choice2of8s :: [Choice8 a b c d e f g h] -> [b]
choice1of8s :: [Choice8 a b c d e f g h] -> [a]
mapChoice8 :: (a1 -> b1) -> (a2 -> b2) -> (a3 -> b3) -> (a4 -> b4) -> (a5 -> b5) -> (a6 -> b6) -> (a7 -> b7) -> (a8 -> b8) -> Choice8 a1 a2 a3 a4 a5 a6 a7 a8 -> Choice8 b1 b2 b3 b4 b5 b6 b7 b8
choice8 :: (a -> res) -> (b -> res) -> (c -> res) -> (d -> res) -> (e -> res) -> (f -> res) -> (g -> res) -> (h -> res) -> Choice8 a b c d e f g h -> res
choice7of7s :: [Choice7 a b c d e f g] -> [g]
choice6of7s :: [Choice7 a b c d e f g] -> [f]
choice5of7s :: [Choice7 a b c d e f g] -> [e]
choice4of7s :: [Choice7 a b c d e f g] -> [d]
choice3of7s :: [Choice7 a b c d e f g] -> [c]
choice2of7s :: [Choice7 a b c d e f g] -> [b]
choice1of7s :: [Choice7 a b c d e f g] -> [a]
mapChoice7 :: (a1 -> b1) -> (a2 -> b2) -> (a3 -> b3) -> (a4 -> b4) -> (a5 -> b5) -> (a6 -> b6) -> (a7 -> b7) -> Choice7 a1 a2 a3 a4 a5 a6 a7 -> Choice7 b1 b2 b3 b4 b5 b6 b7
choice7 :: (a -> res) -> (b -> res) -> (c -> res) -> (d -> res) -> (e -> res) -> (f -> res) -> (g -> res) -> Choice7 a b c d e f g -> res
choice6of6s :: [Choice6 a b c d e f] -> [f]
choice5of6s :: [Choice6 a b c d e f] -> [e]
choice4of6s :: [Choice6 a b c d e f] -> [d]
choice3of6s :: [Choice6 a b c d e f] -> [c]
choice2of6s :: [Choice6 a b c d e f] -> [b]
choice1of6s :: [Choice6 a b c d e f] -> [a]
mapChoice6 :: (a1 -> b1) -> (a2 -> b2) -> (a3 -> b3) -> (a4 -> b4) -> (a5 -> b5) -> (a6 -> b6) -> Choice6 a1 a2 a3 a4 a5 a6 -> Choice6 b1 b2 b3 b4 b5 b6
choice6 :: (a -> res) -> (b -> res) -> (c -> res) -> (d -> res) -> (e -> res) -> (f -> res) -> Choice6 a b c d e f -> res
choice5of5s :: [Choice5 a b c d e] -> [e]
choice4of5s :: [Choice5 a b c d e] -> [d]
choice3of5s :: [Choice5 a b c d e] -> [c]
choice2of5s :: [Choice5 a b c d e] -> [b]
choice1of5s :: [Choice5 a b c d e] -> [a]
mapChoice5 :: (a1 -> b1) -> (a2 -> b2) -> (a3 -> b3) -> (a4 -> b4) -> (a5 -> b5) -> Choice5 a1 a2 a3 a4 a5 -> Choice5 b1 b2 b3 b4 b5
choice5 :: (a -> res) -> (b -> res) -> (c -> res) -> (d -> res) -> (e -> res) -> Choice5 a b c d e -> res
choice4of4s :: [Choice4 a b c d] -> [d]
choice3of4s :: [Choice4 a b c d] -> [c]
choice2of4s :: [Choice4 a b c d] -> [b]
choice1of4s :: [Choice4 a b c d] -> [a]
mapChoice4 :: (a1 -> b1) -> (a2 -> b2) -> (a3 -> b3) -> (a4 -> b4) -> Choice4 a1 a2 a3 a4 -> Choice4 b1 b2 b3 b4
choice4 :: (a -> res) -> (b -> res) -> (c -> res) -> (d -> res) -> Choice4 a b c d -> res
choice3of3s :: [Choice3 a b c] -> [c]
choice2of3s :: [Choice3 a b c] -> [b]
choice1of3s :: [Choice3 a b c] -> [a]
mapChoice3 :: (a1 -> b1) -> (a2 -> b2) -> (a3 -> b3) -> Choice3 a1 a2 a3 -> Choice3 b1 b2 b3
choice3 :: (a -> res) -> (b -> res) -> (c -> res) -> Choice3 a b c -> res
choice2of2s :: [Choice2 a b] -> [b]
choice1of2s :: [Choice2 a b] -> [a]
mapChoice2 :: (a1 -> b1) -> (a2 -> b2) -> Choice2 a1 a2 -> Choice2 b1 b2
choice2 :: (a -> res) -> (b -> res) -> Choice2 a b -> res
instance (Lift a0, Lift b0, Lift c0, Lift d0, Lift e0, Lift f0, Lift g0, Lift h0, Lift i0, Lift j0, Lift k0, Lift l0, Lift m0, Lift n0, Lift o0, Lift p0, Lift q0, Lift r0, Lift s0, Lift t0) => Lift (Choice20 a0 b0 c0 d0 e0 f0 g0 h0 i0 j0 k0 l0 m0 n0 o0 p0 q0 r0 s0 t0)
instance (Lift a0, Lift b0, Lift c0, Lift d0, Lift e0, Lift f0, Lift g0, Lift h0, Lift i0, Lift j0, Lift k0, Lift l0, Lift m0, Lift n0, Lift o0, Lift p0, Lift q0, Lift r0, Lift s0) => Lift (Choice19 a0 b0 c0 d0 e0 f0 g0 h0 i0 j0 k0 l0 m0 n0 o0 p0 q0 r0 s0)
instance (Lift a0, Lift b0, Lift c0, Lift d0, Lift e0, Lift f0, Lift g0, Lift h0, Lift i0, Lift j0, Lift k0, Lift l0, Lift m0, Lift n0, Lift o0, Lift p0, Lift q0, Lift r0) => Lift (Choice18 a0 b0 c0 d0 e0 f0 g0 h0 i0 j0 k0 l0 m0 n0 o0 p0 q0 r0)
instance (Lift a0, Lift b0, Lift c0, Lift d0, Lift e0, Lift f0, Lift g0, Lift h0, Lift i0, Lift j0, Lift k0, Lift l0, Lift m0, Lift n0, Lift o0, Lift p0, Lift q0) => Lift (Choice17 a0 b0 c0 d0 e0 f0 g0 h0 i0 j0 k0 l0 m0 n0 o0 p0 q0)
instance (Lift a0, Lift b0, Lift c0, Lift d0, Lift e0, Lift f0, Lift g0, Lift h0, Lift i0, Lift j0, Lift k0, Lift l0, Lift m0, Lift n0, Lift o0, Lift p0) => Lift (Choice16 a0 b0 c0 d0 e0 f0 g0 h0 i0 j0 k0 l0 m0 n0 o0 p0)
instance (Lift a0, Lift b0, Lift c0, Lift d0, Lift e0, Lift f0, Lift g0, Lift h0, Lift i0, Lift j0, Lift k0, Lift l0, Lift m0, Lift n0, Lift o0) => Lift (Choice15 a0 b0 c0 d0 e0 f0 g0 h0 i0 j0 k0 l0 m0 n0 o0)
instance (Lift a0, Lift b0, Lift c0, Lift d0, Lift e0, Lift f0, Lift g0, Lift h0, Lift i0, Lift j0, Lift k0, Lift l0, Lift m0, Lift n0) => Lift (Choice14 a0 b0 c0 d0 e0 f0 g0 h0 i0 j0 k0 l0 m0 n0)
instance (Lift a0, Lift b0, Lift c0, Lift d0, Lift e0, Lift f0, Lift g0, Lift h0, Lift i0, Lift j0, Lift k0, Lift l0, Lift m0) => Lift (Choice13 a0 b0 c0 d0 e0 f0 g0 h0 i0 j0 k0 l0 m0)
instance (Lift a0, Lift b0, Lift c0, Lift d0, Lift e0, Lift f0, Lift g0, Lift h0, Lift i0, Lift j0, Lift k0, Lift l0) => Lift (Choice12 a0 b0 c0 d0 e0 f0 g0 h0 i0 j0 k0 l0)
instance (Lift a0, Lift b0, Lift c0, Lift d0, Lift e0, Lift f0, Lift g0, Lift h0, Lift i0, Lift j0, Lift k0) => Lift (Choice11 a0 b0 c0 d0 e0 f0 g0 h0 i0 j0 k0)
instance (Lift a0, Lift b0, Lift c0, Lift d0, Lift e0, Lift f0, Lift g0, Lift h0, Lift i0, Lift j0) => Lift (Choice10 a0 b0 c0 d0 e0 f0 g0 h0 i0 j0)
instance (Lift a0, Lift b0, Lift c0, Lift d0, Lift e0, Lift f0, Lift g0, Lift h0, Lift i0) => Lift (Choice9 a0 b0 c0 d0 e0 f0 g0 h0 i0)
instance (Lift a0, Lift b0, Lift c0, Lift d0, Lift e0, Lift f0, Lift g0, Lift h0) => Lift (Choice8 a0 b0 c0 d0 e0 f0 g0 h0)
instance (Lift a0, Lift b0, Lift c0, Lift d0, Lift e0, Lift f0, Lift g0) => Lift (Choice7 a0 b0 c0 d0 e0 f0 g0)
instance (Lift a0, Lift b0, Lift c0, Lift d0, Lift e0, Lift f0) => Lift (Choice6 a0 b0 c0 d0 e0 f0)
instance (Lift a0, Lift b0, Lift c0, Lift d0, Lift e0) => Lift (Choice5 a0 b0 c0 d0 e0)
instance (Lift a0, Lift b0, Lift c0, Lift d0) => Lift (Choice4 a0 b0 c0 d0)
instance (Lift a0, Lift b0, Lift c0) => Lift (Choice3 a0 b0 c0)
instance (Lift a0, Lift b0) => Lift (Choice2 a0 b0)
instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h, Eq i, Eq j, Eq k, Eq l, Eq m, Eq n, Eq o, Eq p, Eq q, Eq r, Eq s, Eq t) => Eq (Choice20 a b c d e f g h i j k l m n o p q r s t)
instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h, Ord i, Ord j, Ord k, Ord l, Ord m, Ord n, Ord o, Ord p, Ord q, Ord r, Ord s, Ord t) => Ord (Choice20 a b c d e f g h i j k l m n o p q r s t)
instance (Show a, Show b, Show c, Show d, Show e, Show f, Show g, Show h, Show i, Show j, Show k, Show l, Show m, Show n, Show o, Show p, Show q, Show r, Show s, Show t) => Show (Choice20 a b c d e f g h i j k l m n o p q r s t)
instance (Read a, Read b, Read c, Read d, Read e, Read f, Read g, Read h, Read i, Read j, Read k, Read l, Read m, Read n, Read o, Read p, Read q, Read r, Read s, Read t) => Read (Choice20 a b c d e f g h i j k l m n o p q r s t)
instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h, Eq i, Eq j, Eq k, Eq l, Eq m, Eq n, Eq o, Eq p, Eq q, Eq r, Eq s) => Eq (Choice19 a b c d e f g h i j k l m n o p q r s)
instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h, Ord i, Ord j, Ord k, Ord l, Ord m, Ord n, Ord o, Ord p, Ord q, Ord r, Ord s) => Ord (Choice19 a b c d e f g h i j k l m n o p q r s)
instance (Show a, Show b, Show c, Show d, Show e, Show f, Show g, Show h, Show i, Show j, Show k, Show l, Show m, Show n, Show o, Show p, Show q, Show r, Show s) => Show (Choice19 a b c d e f g h i j k l m n o p q r s)
instance (Read a, Read b, Read c, Read d, Read e, Read f, Read g, Read h, Read i, Read j, Read k, Read l, Read m, Read n, Read o, Read p, Read q, Read r, Read s) => Read (Choice19 a b c d e f g h i j k l m n o p q r s)
instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h, Eq i, Eq j, Eq k, Eq l, Eq m, Eq n, Eq o, Eq p, Eq q, Eq r) => Eq (Choice18 a b c d e f g h i j k l m n o p q r)
instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h, Ord i, Ord j, Ord k, Ord l, Ord m, Ord n, Ord o, Ord p, Ord q, Ord r) => Ord (Choice18 a b c d e f g h i j k l m n o p q r)
instance (Show a, Show b, Show c, Show d, Show e, Show f, Show g, Show h, Show i, Show j, Show k, Show l, Show m, Show n, Show o, Show p, Show q, Show r) => Show (Choice18 a b c d e f g h i j k l m n o p q r)
instance (Read a, Read b, Read c, Read d, Read e, Read f, Read g, Read h, Read i, Read j, Read k, Read l, Read m, Read n, Read o, Read p, Read q, Read r) => Read (Choice18 a b c d e f g h i j k l m n o p q r)
instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h, Eq i, Eq j, Eq k, Eq l, Eq m, Eq n, Eq o, Eq p, Eq q) => Eq (Choice17 a b c d e f g h i j k l m n o p q)
instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h, Ord i, Ord j, Ord k, Ord l, Ord m, Ord n, Ord o, Ord p, Ord q) => Ord (Choice17 a b c d e f g h i j k l m n o p q)
instance (Show a, Show b, Show c, Show d, Show e, Show f, Show g, Show h, Show i, Show j, Show k, Show l, Show m, Show n, Show o, Show p, Show q) => Show (Choice17 a b c d e f g h i j k l m n o p q)
instance (Read a, Read b, Read c, Read d, Read e, Read f, Read g, Read h, Read i, Read j, Read k, Read l, Read m, Read n, Read o, Read p, Read q) => Read (Choice17 a b c d e f g h i j k l m n o p q)
instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h, Eq i, Eq j, Eq k, Eq l, Eq m, Eq n, Eq o, Eq p) => Eq (Choice16 a b c d e f g h i j k l m n o p)
instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h, Ord i, Ord j, Ord k, Ord l, Ord m, Ord n, Ord o, Ord p) => Ord (Choice16 a b c d e f g h i j k l m n o p)
instance (Show a, Show b, Show c, Show d, Show e, Show f, Show g, Show h, Show i, Show j, Show k, Show l, Show m, Show n, Show o, Show p) => Show (Choice16 a b c d e f g h i j k l m n o p)
instance (Read a, Read b, Read c, Read d, Read e, Read f, Read g, Read h, Read i, Read j, Read k, Read l, Read m, Read n, Read o, Read p) => Read (Choice16 a b c d e f g h i j k l m n o p)
instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h, Eq i, Eq j, Eq k, Eq l, Eq m, Eq n, Eq o) => Eq (Choice15 a b c d e f g h i j k l m n o)
instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h, Ord i, Ord j, Ord k, Ord l, Ord m, Ord n, Ord o) => Ord (Choice15 a b c d e f g h i j k l m n o)
instance (Show a, Show b, Show c, Show d, Show e, Show f, Show g, Show h, Show i, Show j, Show k, Show l, Show m, Show n, Show o) => Show (Choice15 a b c d e f g h i j k l m n o)
instance (Read a, Read b, Read c, Read d, Read e, Read f, Read g, Read h, Read i, Read j, Read k, Read l, Read m, Read n, Read o) => Read (Choice15 a b c d e f g h i j k l m n o)
instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h, Eq i, Eq j, Eq k, Eq l, Eq m, Eq n) => Eq (Choice14 a b c d e f g h i j k l m n)
instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h, Ord i, Ord j, Ord k, Ord l, Ord m, Ord n) => Ord (Choice14 a b c d e f g h i j k l m n)
instance (Show a, Show b, Show c, Show d, Show e, Show f, Show g, Show h, Show i, Show j, Show k, Show l, Show m, Show n) => Show (Choice14 a b c d e f g h i j k l m n)
instance (Read a, Read b, Read c, Read d, Read e, Read f, Read g, Read h, Read i, Read j, Read k, Read l, Read m, Read n) => Read (Choice14 a b c d e f g h i j k l m n)
instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h, Eq i, Eq j, Eq k, Eq l, Eq m) => Eq (Choice13 a b c d e f g h i j k l m)
instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h, Ord i, Ord j, Ord k, Ord l, Ord m) => Ord (Choice13 a b c d e f g h i j k l m)
instance (Show a, Show b, Show c, Show d, Show e, Show f, Show g, Show h, Show i, Show j, Show k, Show l, Show m) => Show (Choice13 a b c d e f g h i j k l m)
instance (Read a, Read b, Read c, Read d, Read e, Read f, Read g, Read h, Read i, Read j, Read k, Read l, Read m) => Read (Choice13 a b c d e f g h i j k l m)
instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h, Eq i, Eq j, Eq k, Eq l) => Eq (Choice12 a b c d e f g h i j k l)
instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h, Ord i, Ord j, Ord k, Ord l) => Ord (Choice12 a b c d e f g h i j k l)
instance (Show a, Show b, Show c, Show d, Show e, Show f, Show g, Show h, Show i, Show j, Show k, Show l) => Show (Choice12 a b c d e f g h i j k l)
instance (Read a, Read b, Read c, Read d, Read e, Read f, Read g, Read h, Read i, Read j, Read k, Read l) => Read (Choice12 a b c d e f g h i j k l)
instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h, Eq i, Eq j, Eq k) => Eq (Choice11 a b c d e f g h i j k)
instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h, Ord i, Ord j, Ord k) => Ord (Choice11 a b c d e f g h i j k)
instance (Show a, Show b, Show c, Show d, Show e, Show f, Show g, Show h, Show i, Show j, Show k) => Show (Choice11 a b c d e f g h i j k)
instance (Read a, Read b, Read c, Read d, Read e, Read f, Read g, Read h, Read i, Read j, Read k) => Read (Choice11 a b c d e f g h i j k)
instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h, Eq i, Eq j) => Eq (Choice10 a b c d e f g h i j)
instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h, Ord i, Ord j) => Ord (Choice10 a b c d e f g h i j)
instance (Show a, Show b, Show c, Show d, Show e, Show f, Show g, Show h, Show i, Show j) => Show (Choice10 a b c d e f g h i j)
instance (Read a, Read b, Read c, Read d, Read e, Read f, Read g, Read h, Read i, Read j) => Read (Choice10 a b c d e f g h i j)
instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h, Eq i) => Eq (Choice9 a b c d e f g h i)
instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h, Ord i) => Ord (Choice9 a b c d e f g h i)
instance (Show a, Show b, Show c, Show d, Show e, Show f, Show g, Show h, Show i) => Show (Choice9 a b c d e f g h i)
instance (Read a, Read b, Read c, Read d, Read e, Read f, Read g, Read h, Read i) => Read (Choice9 a b c d e f g h i)
instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h) => Eq (Choice8 a b c d e f g h)
instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h) => Ord (Choice8 a b c d e f g h)
instance (Show a, Show b, Show c, Show d, Show e, Show f, Show g, Show h) => Show (Choice8 a b c d e f g h)
instance (Read a, Read b, Read c, Read d, Read e, Read f, Read g, Read h) => Read (Choice8 a b c d e f g h)
instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g) => Eq (Choice7 a b c d e f g)
instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g) => Ord (Choice7 a b c d e f g)
instance (Show a, Show b, Show c, Show d, Show e, Show f, Show g) => Show (Choice7 a b c d e f g)
instance (Read a, Read b, Read c, Read d, Read e, Read f, Read g) => Read (Choice7 a b c d e f g)
instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f) => Eq (Choice6 a b c d e f)
instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f) => Ord (Choice6 a b c d e f)
instance (Show a, Show b, Show c, Show d, Show e, Show f) => Show (Choice6 a b c d e f)
instance (Read a, Read b, Read c, Read d, Read e, Read f) => Read (Choice6 a b c d e f)
instance (Eq a, Eq b, Eq c, Eq d, Eq e) => Eq (Choice5 a b c d e)
instance (Ord a, Ord b, Ord c, Ord d, Ord e) => Ord (Choice5 a b c d e)
instance (Show a, Show b, Show c, Show d, Show e) => Show (Choice5 a b c d e)
instance (Read a, Read b, Read c, Read d, Read e) => Read (Choice5 a b c d e)
instance (Eq a, Eq b, Eq c, Eq d) => Eq (Choice4 a b c d)
instance (Ord a, Ord b, Ord c, Ord d) => Ord (Choice4 a b c d)
instance (Show a, Show b, Show c, Show d) => Show (Choice4 a b c d)
instance (Read a, Read b, Read c, Read d) => Read (Choice4 a b c d)
instance (Eq a, Eq b, Eq c) => Eq (Choice3 a b c)
instance (Ord a, Ord b, Ord c) => Ord (Choice3 a b c)
instance (Show a, Show b, Show c) => Show (Choice3 a b c)
instance (Read a, Read b, Read c) => Read (Choice3 a b c)
instance (Eq a, Eq b) => Eq (Choice2 a b)
instance (Ord a, Ord b) => Ord (Choice2 a b)
instance (Show a, Show b) => Show (Choice2 a b)
instance (Read a, Read b) => Read (Choice2 a b)
instance (Arbitrary a, Arbitrary b, Arbitrary c, Arbitrary d, Arbitrary e, Arbitrary f, Arbitrary g, Arbitrary h, Arbitrary i, Arbitrary j, Arbitrary k, Arbitrary l, Arbitrary m, Arbitrary n, Arbitrary o, Arbitrary p, Arbitrary q, Arbitrary r, Arbitrary s, Arbitrary t) => Arbitrary (Choice20 a b c d e f g h i j k l m n o p q r s t)
instance (FromJSON a, FromJSON b, FromJSON c, FromJSON d, FromJSON e, FromJSON f, FromJSON g, FromJSON h, FromJSON i, FromJSON j, FromJSON k, FromJSON l, FromJSON m, FromJSON n, FromJSON o, FromJSON p, FromJSON q, FromJSON r, FromJSON s, FromJSON t) => FromJSON (Choice20 a b c d e f g h i j k l m n o p q r s t)
instance (ToJSON a, ToJSON b, ToJSON c, ToJSON d, ToJSON e, ToJSON f, ToJSON g, ToJSON h, ToJSON i, ToJSON j, ToJSON k, ToJSON l, ToJSON m, ToJSON n, ToJSON o, ToJSON p, ToJSON q, ToJSON r, ToJSON s, ToJSON t) => ToJSON (Choice20 a b c d e f g h i j k l m n o p q r s t)
instance (Arbitrary a, Arbitrary b, Arbitrary c, Arbitrary d, Arbitrary e, Arbitrary f, Arbitrary g, Arbitrary h, Arbitrary i, Arbitrary j, Arbitrary k, Arbitrary l, Arbitrary m, Arbitrary n, Arbitrary o, Arbitrary p, Arbitrary q, Arbitrary r, Arbitrary s) => Arbitrary (Choice19 a b c d e f g h i j k l m n o p q r s)
instance (FromJSON a, FromJSON b, FromJSON c, FromJSON d, FromJSON e, FromJSON f, FromJSON g, FromJSON h, FromJSON i, FromJSON j, FromJSON k, FromJSON l, FromJSON m, FromJSON n, FromJSON o, FromJSON p, FromJSON q, FromJSON r, FromJSON s) => FromJSON (Choice19 a b c d e f g h i j k l m n o p q r s)
instance (ToJSON a, ToJSON b, ToJSON c, ToJSON d, ToJSON e, ToJSON f, ToJSON g, ToJSON h, ToJSON i, ToJSON j, ToJSON k, ToJSON l, ToJSON m, ToJSON n, ToJSON o, ToJSON p, ToJSON q, ToJSON r, ToJSON s) => ToJSON (Choice19 a b c d e f g h i j k l m n o p q r s)
instance (Arbitrary a, Arbitrary b, Arbitrary c, Arbitrary d, Arbitrary e, Arbitrary f, Arbitrary g, Arbitrary h, Arbitrary i, Arbitrary j, Arbitrary k, Arbitrary l, Arbitrary m, Arbitrary n, Arbitrary o, Arbitrary p, Arbitrary q, Arbitrary r) => Arbitrary (Choice18 a b c d e f g h i j k l m n o p q r)
instance (FromJSON a, FromJSON b, FromJSON c, FromJSON d, FromJSON e, FromJSON f, FromJSON g, FromJSON h, FromJSON i, FromJSON j, FromJSON k, FromJSON l, FromJSON m, FromJSON n, FromJSON o, FromJSON p, FromJSON q, FromJSON r) => FromJSON (Choice18 a b c d e f g h i j k l m n o p q r)
instance (ToJSON a, ToJSON b, ToJSON c, ToJSON d, ToJSON e, ToJSON f, ToJSON g, ToJSON h, ToJSON i, ToJSON j, ToJSON k, ToJSON l, ToJSON m, ToJSON n, ToJSON o, ToJSON p, ToJSON q, ToJSON r) => ToJSON (Choice18 a b c d e f g h i j k l m n o p q r)
instance (Arbitrary a, Arbitrary b, Arbitrary c, Arbitrary d, Arbitrary e, Arbitrary f, Arbitrary g, Arbitrary h, Arbitrary i, Arbitrary j, Arbitrary k, Arbitrary l, Arbitrary m, Arbitrary n, Arbitrary o, Arbitrary p, Arbitrary q) => Arbitrary (Choice17 a b c d e f g h i j k l m n o p q)
instance (FromJSON a, FromJSON b, FromJSON c, FromJSON d, FromJSON e, FromJSON f, FromJSON g, FromJSON h, FromJSON i, FromJSON j, FromJSON k, FromJSON l, FromJSON m, FromJSON n, FromJSON o, FromJSON p, FromJSON q) => FromJSON (Choice17 a b c d e f g h i j k l m n o p q)
instance (ToJSON a, ToJSON b, ToJSON c, ToJSON d, ToJSON e, ToJSON f, ToJSON g, ToJSON h, ToJSON i, ToJSON j, ToJSON k, ToJSON l, ToJSON m, ToJSON n, ToJSON o, ToJSON p, ToJSON q) => ToJSON (Choice17 a b c d e f g h i j k l m n o p q)
instance (Arbitrary a, Arbitrary b, Arbitrary c, Arbitrary d, Arbitrary e, Arbitrary f, Arbitrary g, Arbitrary h, Arbitrary i, Arbitrary j, Arbitrary k, Arbitrary l, Arbitrary m, Arbitrary n, Arbitrary o, Arbitrary p) => Arbitrary (Choice16 a b c d e f g h i j k l m n o p)
instance (FromJSON a, FromJSON b, FromJSON c, FromJSON d, FromJSON e, FromJSON f, FromJSON g, FromJSON h, FromJSON i, FromJSON j, FromJSON k, FromJSON l, FromJSON m, FromJSON n, FromJSON o, FromJSON p) => FromJSON (Choice16 a b c d e f g h i j k l m n o p)
instance (ToJSON a, ToJSON b, ToJSON c, ToJSON d, ToJSON e, ToJSON f, ToJSON g, ToJSON h, ToJSON i, ToJSON j, ToJSON k, ToJSON l, ToJSON m, ToJSON n, ToJSON o, ToJSON p) => ToJSON (Choice16 a b c d e f g h i j k l m n o p)
instance (Arbitrary a, Arbitrary b, Arbitrary c, Arbitrary d, Arbitrary e, Arbitrary f, Arbitrary g, Arbitrary h, Arbitrary i, Arbitrary j, Arbitrary k, Arbitrary l, Arbitrary m, Arbitrary n, Arbitrary o) => Arbitrary (Choice15 a b c d e f g h i j k l m n o)
instance (FromJSON a, FromJSON b, FromJSON c, FromJSON d, FromJSON e, FromJSON f, FromJSON g, FromJSON h, FromJSON i, FromJSON j, FromJSON k, FromJSON l, FromJSON m, FromJSON n, FromJSON o) => FromJSON (Choice15 a b c d e f g h i j k l m n o)
instance (ToJSON a, ToJSON b, ToJSON c, ToJSON d, ToJSON e, ToJSON f, ToJSON g, ToJSON h, ToJSON i, ToJSON j, ToJSON k, ToJSON l, ToJSON m, ToJSON n, ToJSON o) => ToJSON (Choice15 a b c d e f g h i j k l m n o)
instance (Arbitrary a, Arbitrary b, Arbitrary c, Arbitrary d, Arbitrary e, Arbitrary f, Arbitrary g, Arbitrary h, Arbitrary i, Arbitrary j, Arbitrary k, Arbitrary l, Arbitrary m, Arbitrary n) => Arbitrary (Choice14 a b c d e f g h i j k l m n)
instance (FromJSON a, FromJSON b, FromJSON c, FromJSON d, FromJSON e, FromJSON f, FromJSON g, FromJSON h, FromJSON i, FromJSON j, FromJSON k, FromJSON l, FromJSON m, FromJSON n) => FromJSON (Choice14 a b c d e f g h i j k l m n)
instance (ToJSON a, ToJSON b, ToJSON c, ToJSON d, ToJSON e, ToJSON f, ToJSON g, ToJSON h, ToJSON i, ToJSON j, ToJSON k, ToJSON l, ToJSON m, ToJSON n) => ToJSON (Choice14 a b c d e f g h i j k l m n)
instance (Arbitrary a, Arbitrary b, Arbitrary c, Arbitrary d, Arbitrary e, Arbitrary f, Arbitrary g, Arbitrary h, Arbitrary i, Arbitrary j, Arbitrary k, Arbitrary l, Arbitrary m) => Arbitrary (Choice13 a b c d e f g h i j k l m)
instance (FromJSON a, FromJSON b, FromJSON c, FromJSON d, FromJSON e, FromJSON f, FromJSON g, FromJSON h, FromJSON i, FromJSON j, FromJSON k, FromJSON l, FromJSON m) => FromJSON (Choice13 a b c d e f g h i j k l m)
instance (ToJSON a, ToJSON b, ToJSON c, ToJSON d, ToJSON e, ToJSON f, ToJSON g, ToJSON h, ToJSON i, ToJSON j, ToJSON k, ToJSON l, ToJSON m) => ToJSON (Choice13 a b c d e f g h i j k l m)
instance (Arbitrary a, Arbitrary b, Arbitrary c, Arbitrary d, Arbitrary e, Arbitrary f, Arbitrary g, Arbitrary h, Arbitrary i, Arbitrary j, Arbitrary k, Arbitrary l) => Arbitrary (Choice12 a b c d e f g h i j k l)
instance (FromJSON a, FromJSON b, FromJSON c, FromJSON d, FromJSON e, FromJSON f, FromJSON g, FromJSON h, FromJSON i, FromJSON j, FromJSON k, FromJSON l) => FromJSON (Choice12 a b c d e f g h i j k l)
instance (ToJSON a, ToJSON b, ToJSON c, ToJSON d, ToJSON e, ToJSON f, ToJSON g, ToJSON h, ToJSON i, ToJSON j, ToJSON k, ToJSON l) => ToJSON (Choice12 a b c d e f g h i j k l)
instance (Arbitrary a, Arbitrary b, Arbitrary c, Arbitrary d, Arbitrary e, Arbitrary f, Arbitrary g, Arbitrary h, Arbitrary i, Arbitrary j, Arbitrary k) => Arbitrary (Choice11 a b c d e f g h i j k)
instance (FromJSON a, FromJSON b, FromJSON c, FromJSON d, FromJSON e, FromJSON f, FromJSON g, FromJSON h, FromJSON i, FromJSON j, FromJSON k) => FromJSON (Choice11 a b c d e f g h i j k)
instance (ToJSON a, ToJSON b, ToJSON c, ToJSON d, ToJSON e, ToJSON f, ToJSON g, ToJSON h, ToJSON i, ToJSON j, ToJSON k) => ToJSON (Choice11 a b c d e f g h i j k)
instance (Arbitrary a, Arbitrary b, Arbitrary c, Arbitrary d, Arbitrary e, Arbitrary f, Arbitrary g, Arbitrary h, Arbitrary i, Arbitrary j) => Arbitrary (Choice10 a b c d e f g h i j)
instance (FromJSON a, FromJSON b, FromJSON c, FromJSON d, FromJSON e, FromJSON f, FromJSON g, FromJSON h, FromJSON i, FromJSON j) => FromJSON (Choice10 a b c d e f g h i j)
instance (ToJSON a, ToJSON b, ToJSON c, ToJSON d, ToJSON e, ToJSON f, ToJSON g, ToJSON h, ToJSON i, ToJSON j) => ToJSON (Choice10 a b c d e f g h i j)
instance (Arbitrary a, Arbitrary b, Arbitrary c, Arbitrary d, Arbitrary e, Arbitrary f, Arbitrary g, Arbitrary h, Arbitrary i) => Arbitrary (Choice9 a b c d e f g h i)
instance (FromJSON a, FromJSON b, FromJSON c, FromJSON d, FromJSON e, FromJSON f, FromJSON g, FromJSON h, FromJSON i) => FromJSON (Choice9 a b c d e f g h i)
instance (ToJSON a, ToJSON b, ToJSON c, ToJSON d, ToJSON e, ToJSON f, ToJSON g, ToJSON h, ToJSON i) => ToJSON (Choice9 a b c d e f g h i)
instance (Arbitrary a, Arbitrary b, Arbitrary c, Arbitrary d, Arbitrary e, Arbitrary f, Arbitrary g, Arbitrary h) => Arbitrary (Choice8 a b c d e f g h)
instance (FromJSON a, FromJSON b, FromJSON c, FromJSON d, FromJSON e, FromJSON f, FromJSON g, FromJSON h) => FromJSON (Choice8 a b c d e f g h)
instance (ToJSON a, ToJSON b, ToJSON c, ToJSON d, ToJSON e, ToJSON f, ToJSON g, ToJSON h) => ToJSON (Choice8 a b c d e f g h)
instance (Arbitrary a, Arbitrary b, Arbitrary c, Arbitrary d, Arbitrary e, Arbitrary f, Arbitrary g) => Arbitrary (Choice7 a b c d e f g)
instance (FromJSON a, FromJSON b, FromJSON c, FromJSON d, FromJSON e, FromJSON f, FromJSON g) => FromJSON (Choice7 a b c d e f g)
instance (ToJSON a, ToJSON b, ToJSON c, ToJSON d, ToJSON e, ToJSON f, ToJSON g) => ToJSON (Choice7 a b c d e f g)
instance (Arbitrary a, Arbitrary b, Arbitrary c, Arbitrary d, Arbitrary e, Arbitrary f) => Arbitrary (Choice6 a b c d e f)
instance (FromJSON a, FromJSON b, FromJSON c, FromJSON d, FromJSON e, FromJSON f) => FromJSON (Choice6 a b c d e f)
instance (ToJSON a, ToJSON b, ToJSON c, ToJSON d, ToJSON e, ToJSON f) => ToJSON (Choice6 a b c d e f)
instance (Arbitrary a, Arbitrary b, Arbitrary c, Arbitrary d, Arbitrary e) => Arbitrary (Choice5 a b c d e)
instance (FromJSON a, FromJSON b, FromJSON c, FromJSON d, FromJSON e) => FromJSON (Choice5 a b c d e)
instance (ToJSON a, ToJSON b, ToJSON c, ToJSON d, ToJSON e) => ToJSON (Choice5 a b c d e)
instance (Arbitrary a, Arbitrary b, Arbitrary c, Arbitrary d) => Arbitrary (Choice4 a b c d)
instance (FromJSON a, FromJSON b, FromJSON c, FromJSON d) => FromJSON (Choice4 a b c d)
instance (ToJSON a, ToJSON b, ToJSON c, ToJSON d) => ToJSON (Choice4 a b c d)
instance (Arbitrary a, Arbitrary b, Arbitrary c) => Arbitrary (Choice3 a b c)
instance (FromJSON a, FromJSON b, FromJSON c) => FromJSON (Choice3 a b c)
instance (ToJSON a, ToJSON b, ToJSON c) => ToJSON (Choice3 a b c)
instance (Arbitrary a, Arbitrary b) => Arbitrary (Choice2 a b)
instance (FromJSON a, FromJSON b) => FromJSON (Choice2 a b)
instance (ToJSON a, ToJSON b) => ToJSON (Choice2 a b)

module Data.Aeson.Schema.Types

-- | Compiled regex and its source
data Pattern
Pattern :: Text -> Regex -> Pattern
patternSource :: Pattern -> Text
patternCompiled :: Pattern -> Regex

-- | Compile a regex to a pattern, reporting errors with fail
mkPattern :: Monad m => Text -> m Pattern

-- | Primitive JSON types
data SchemaType
StringType :: SchemaType
NumberType :: SchemaType
IntegerType :: SchemaType
BooleanType :: SchemaType
ObjectType :: SchemaType
ArrayType :: SchemaType
NullType :: SchemaType

-- | any of the above
AnyType :: SchemaType

-- | JSON Schema (Draft 3) Core Schema Definition
data Schema ref
Schema :: [Choice2 SchemaType (Schema ref)] -> HashMap Text (Schema ref) -> [(Pattern, Schema ref)] -> Choice2 Bool (Schema ref) -> Maybe (Choice2 (Schema ref) [Schema ref]) -> Choice2 Bool (Schema ref) -> Bool -> HashMap Text (Choice2 [Text] (Schema ref)) -> Maybe Scientific -> Maybe Scientific -> Bool -> Bool -> Int -> Maybe Int -> Bool -> Maybe Pattern -> Int -> Maybe Int -> Maybe [Value] -> Maybe [Text] -> Maybe Value -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Scientific -> [Choice2 SchemaType (Schema ref)] -> [Schema ref] -> Maybe Text -> Maybe ref -> Maybe Text -> Schema ref

-- | List of allowed schema types
schemaType :: Schema ref -> [Choice2 SchemaType (Schema ref)]

-- | Subschemas for properties
schemaProperties :: Schema ref -> HashMap Text (Schema ref)

-- | All properties that match one of the regexes must validate against the
--   associated schema
schemaPatternProperties :: Schema ref -> [(Pattern, Schema ref)]

-- | Whether additional properties are allowed when the instance is an
--   object, and if so, a schema that they have to validate against
schemaAdditionalProperties :: Schema ref -> Choice2 Bool (Schema ref)

-- | Either a schema for all array items or a different schema for each
--   position in the array
schemaItems :: Schema ref -> Maybe (Choice2 (Schema ref) [Schema ref])

-- | Whether additional items are allowed
schemaAdditionalItems :: Schema ref -> Choice2 Bool (Schema ref)

-- | When this schema is used in a property of another schema, this means
--   that the property must have a value and not be undefined
schemaRequired :: Schema ref -> Bool

-- | Map of dependencies (property a requires properties b and c, property
--   a requires the instance to validate against another schema, etc.)
schemaDependencies :: Schema ref -> HashMap Text (Choice2 [Text] (Schema ref))

-- | Minimum value when the instance is a number
schemaMinimum :: Schema ref -> Maybe Scientific

-- | Maximum value when the instance is a number
schemaMaximum :: Schema ref -> Maybe Scientific

-- | Whether the minimum value is exclusive (only numbers greater than the
--   minimum are allowed)
schemaExclusiveMinimum :: Schema ref -> Bool

-- | Whether the maximum value is exclusive (only numbers less than the
--   maximum are allowed)
schemaExclusiveMaximum :: Schema ref -> Bool

-- | Minimum length for arrays
schemaMinItems :: Schema ref -> Int

-- | Maximum length for arrays
schemaMaxItems :: Schema ref -> Maybe Int

-- | Whether all array items must be distinct from each other
schemaUniqueItems :: Schema ref -> Bool

-- | Regex for validating strings
schemaPattern :: Schema ref -> Maybe Pattern

-- | Minimum length for strings
schemaMinLength :: Schema ref -> Int

-- | Maximum length for strings
schemaMaxLength :: Schema ref -> Maybe Int

-- | Allowed values for this schema
schemaEnum :: Schema ref -> Maybe [Value]

-- | Extension by Google: description for the values in schemaEnum
schemaEnumDescriptions :: Schema ref -> Maybe [Text]

-- | Default value if this schema is used in a property of another schema
--   and the value is undefined
schemaDefault :: Schema ref -> Maybe Value

-- | Short description of the instance property
schemaTitle :: Schema ref -> Maybe Text

-- | Full description of the purpose of the instance property
schemaDescription :: Schema ref -> Maybe Text

-- | Format of strings, e.g. 'data-time', <tt>regex</tt> or <tt>email</tt>
schemaFormat :: Schema ref -> Maybe Text

-- | When the instance is a number, it must be divisible by this number
--   with no remainder
schemaDivisibleBy :: Schema ref -> Maybe Scientific

-- | List of disallowed types
schemaDisallow :: Schema ref -> [Choice2 SchemaType (Schema ref)]

-- | Base schema that the current schema inherits from
schemaExtends :: Schema ref -> [Schema ref]

-- | Identifier of the current schema
schemaId :: Schema ref -> Maybe Text

-- | $ref: reference to another schema
schemaDRef :: Schema ref -> Maybe ref

-- | $schema: URI of a schema that defines the format of the current schema
schemaDSchema :: Schema ref -> Maybe Text

-- | Set of potentially mutually recursive schemas
type Graph f ref = Map ref (f ref)

-- | The empty schema accepts any JSON value.
empty :: Schema ref

-- | QuasiQuoter for schemas in JSON (e.g. <tt>[schemaQQ| { "type":
--   "number", "minimum": 0 } |]</tt>)
schemaQQ :: QuasiQuoter
instance Eq SchemaType
instance Ord SchemaType
instance Enum SchemaType
instance Bounded SchemaType
instance Show SchemaType
instance Read SchemaType
instance Eq ref => Eq (Schema ref)
instance Show ref => Show (Schema ref)
instance (Eq ref, Lift ref) => Lift (Schema ref)
instance FromJSON ref => FromJSON (Schema ref)
instance Foldable Schema
instance Functor Schema
instance Lift SchemaType
instance FromJSON SchemaType
instance Lift Pattern
instance FromJSON Pattern
instance Show Pattern
instance Eq Pattern

module Data.Aeson.Schema.Validator

-- | Errors encountered during validation
type ValidationError = String

-- | Validates a JSON value against a schema.
validate :: Ord ref => Graph Schema ref -> Schema ref -> Value -> [ValidationError]

module Data.Aeson.Schema.CodeGen

-- | A top-level declaration.
data Declaration

-- | Optional textual declaration. This can be used for information (e.g.
--   inline comments) that are not representable in TH.
Declaration :: Dec -> (Maybe Text) -> Declaration

-- | Comment text
Comment :: Text -> Declaration

-- | Haskell code (without module declaration and imports)
type Code = [Declaration]

-- | Generate a generalized representation of the code in a Haskell module
generate :: Graph Schema Text -> Q (Code, Map Text Name)

-- | Generate data-types and FromJSON instances for all schemas
generateTH :: Graph Schema Text -> Q ([Dec], Map Text Name)

-- | Generated a self-contained module that parses and validates values of
--   a set of given schemas.
generateModule :: Text -> Graph Schema Text -> Q (Text, Map Text Name)
instance (Lift k, Lift v) => Lift (Map k v)


-- | Validate all positive numbers:
--   
--   <pre>
--   &gt;&gt;&gt; :set -XQuasiQuotes
--   
--   &gt;&gt;&gt; :m +Data.Aeson Data.Aeson.Schema Data.Map Data.Text
--   
--   &gt;&gt;&gt; let positiveNumbers = [schemaQQ| { "type": "number", "minimum": 0, "exclusiveMinimum": true } |]
--   
--   &gt;&gt;&gt; validate Data.Map.empty positiveNumbers (Number $ fromInteger 1)
--   []
--   
--   &gt;&gt;&gt; validate Data.Map.empty positiveNumbers (Number $ fromInteger 0)
--   ["number must be greater than 0"]
--   
--   &gt;&gt;&gt; validate Data.Map.empty positiveNumbers (String $ pack "lorem")
--   ["type mismatch: expected NumberType but got string"]
--   </pre>
module Data.Aeson.Schema
