-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Low level bindings to Apache Portable Runtime Utility (APR Utility)
--   
--   Bindings to APR Utility: <a>http://apr.apache.org/</a>
@package bindings-apr-util
@version 0.1

module Bindings.APU.Version
c'APU_MAJOR_VERSION :: (Num a) => a
c'APU_MINOR_VERSION :: (Num a) => a
c'APU_PATCH_VERSION :: (Num a) => a
c'APU_VERSION_STRING :: Ptr (CChar)
c'apu_version :: Ptr C'apr_version_t -> IO ()
c'apu_version_string :: IO (Ptr CChar)
p'apu_version :: FunPtr (Ptr C'apr_version_t -> IO ())
p'apu_version_string :: FunPtr (IO (Ptr CChar))

module Bindings.APU
c'APU_HAVE_SDBM :: (Num a) => a
c'APU_HAVE_GDBM :: (Num a) => a
c'APU_HAVE_NDBM :: (Num a) => a
c'APU_HAVE_DB :: (Num a) => a
c'APU_HAVE_DB_VERSION :: (Num a) => a
c'APU_HAVE_PGSQL :: (Num a) => a
c'APU_HAVE_MYSQL :: (Num a) => a
c'APU_HAVE_SQLITE3 :: (Num a) => a
c'APU_HAVE_SQLITE2 :: (Num a) => a
c'APU_HAVE_ORACLE :: (Num a) => a
c'APU_HAVE_FREETDS :: (Num a) => a
c'APU_HAVE_ODBC :: (Num a) => a
c'APU_HAVE_APR_ICONV :: (Num a) => a
c'APU_HAVE_ICONV :: (Num a) => a
c'APR_HAS_XLATE :: (Num a) => a

module Bindings.APR.UUID
data C'apr_uuid_t
C'apr_uuid_t :: [CUChar] -> C'apr_uuid_t
c'apr_uuid_t'data :: C'apr_uuid_t -> [CUChar]
c'APR_UUID_FORMATTED_LENGTH :: (Num a) => a
c'apr_uuid_get :: Ptr C'apr_uuid_t -> IO ()
c'apr_uuid_format :: Ptr CChar -> Ptr C'apr_uuid_t -> IO ()
p'apr_uuid_get :: FunPtr (Ptr C'apr_uuid_t -> IO ())
c'apr_uuid_parse :: Ptr C'apr_uuid_t -> Ptr CChar -> IO C'apr_status_t
p'apr_uuid_format :: FunPtr (Ptr CChar -> Ptr C'apr_uuid_t -> IO ())
p'apr_uuid_parse :: FunPtr (Ptr C'apr_uuid_t -> Ptr CChar -> IO C'apr_status_t)
instance Eq C'apr_uuid_t
instance Show C'apr_uuid_t
instance Storable C'apr_uuid_t

module Bindings.APR.URI
c'APR_URI_FTP_DEFAULT_PORT :: (Num a) => a
c'APR_URI_SSH_DEFAULT_PORT :: (Num a) => a
c'APR_URI_TELNET_DEFAULT_PORT :: (Num a) => a
c'APR_URI_GOPHER_DEFAULT_PORT :: (Num a) => a
c'APR_URI_HTTP_DEFAULT_PORT :: (Num a) => a
c'APR_URI_POP_DEFAULT_PORT :: (Num a) => a
c'APR_URI_NNTP_DEFAULT_PORT :: (Num a) => a
c'APR_URI_IMAP_DEFAULT_PORT :: (Num a) => a
c'APR_URI_PROSPERO_DEFAULT_PORT :: (Num a) => a
c'APR_URI_WAIS_DEFAULT_PORT :: (Num a) => a
c'APR_URI_LDAP_DEFAULT_PORT :: (Num a) => a
c'APR_URI_HTTPS_DEFAULT_PORT :: (Num a) => a
c'APR_URI_RTSP_DEFAULT_PORT :: (Num a) => a
c'APR_URI_SNEWS_DEFAULT_PORT :: (Num a) => a
c'APR_URI_ACAP_DEFAULT_PORT :: (Num a) => a
c'APR_URI_NFS_DEFAULT_PORT :: (Num a) => a
c'APR_URI_TIP_DEFAULT_PORT :: (Num a) => a
c'APR_URI_SIP_DEFAULT_PORT :: (Num a) => a
c'APR_URI_UNP_OMITSITEPART :: (Num a) => a
c'APR_URI_UNP_OMITUSER :: (Num a) => a
c'APR_URI_UNP_OMITPASSWORD :: (Num a) => a
c'APR_URI_UNP_OMITUSERINFO :: (Num a) => a
c'APR_URI_UNP_REVEALPASSWORD :: (Num a) => a
c'APR_URI_UNP_OMITPATHINFO :: (Num a) => a
c'APR_URI_UNP_OMITQUERY :: (Num a) => a
data C'apr_uri_t
C'apr_uri_t :: Ptr CChar -> Ptr CChar -> Ptr CChar -> Ptr CChar -> Ptr CChar -> Ptr CChar -> Ptr CChar -> Ptr CChar -> Ptr CChar -> C'apr_port_t -> C'apr_uri_t
c'apr_uri_t'scheme :: C'apr_uri_t -> Ptr CChar
c'apr_uri_t'hostinfo :: C'apr_uri_t -> Ptr CChar
c'apr_uri_t'user :: C'apr_uri_t -> Ptr CChar
c'apr_uri_t'password :: C'apr_uri_t -> Ptr CChar
c'apr_uri_t'hostname :: C'apr_uri_t -> Ptr CChar
c'apr_uri_t'port_str :: C'apr_uri_t -> Ptr CChar
c'apr_uri_t'path :: C'apr_uri_t -> Ptr CChar
c'apr_uri_t'query :: C'apr_uri_t -> Ptr CChar
c'apr_uri_t'fragment :: C'apr_uri_t -> Ptr CChar
c'apr_uri_t'port :: C'apr_uri_t -> C'apr_port_t
c'apr_uri_port_of_scheme :: Ptr CChar -> IO C'apr_port_t
c'apr_uri_unparse :: Ptr C'apr_pool_t -> Ptr C'apr_uri_t -> CUInt -> IO (Ptr CChar)
p'apr_uri_port_of_scheme :: FunPtr (Ptr CChar -> IO C'apr_port_t)
c'apr_uri_parse :: Ptr C'apr_pool_t -> Ptr CChar -> Ptr C'apr_uri_t -> IO C'apr_status_t
c'apr_uri_parse_hostinfo :: Ptr C'apr_pool_t -> Ptr CChar -> Ptr C'apr_uri_t -> IO C'apr_status_t
p'apr_uri_unparse :: FunPtr (Ptr C'apr_pool_t -> Ptr C'apr_uri_t -> CUInt -> IO (Ptr CChar))
p'apr_uri_parse :: FunPtr (Ptr C'apr_pool_t -> Ptr CChar -> Ptr C'apr_uri_t -> IO C'apr_status_t)
p'apr_uri_parse_hostinfo :: FunPtr (Ptr C'apr_pool_t -> Ptr CChar -> Ptr C'apr_uri_t -> IO C'apr_status_t)
instance Eq C'apr_uri_t
instance Show C'apr_uri_t
instance Storable C'apr_uri_t

module Bindings.APR.Thread.Pool
data C'apr_thread_pool_t
C'apr_thread_pool_t :: C'apr_thread_pool_t
c'APR_THREAD_TASK_PRIORITY_LOWEST :: (Num a) => a
c'APR_THREAD_TASK_PRIORITY_LOW :: (Num a) => a
c'APR_THREAD_TASK_PRIORITY_NORMAL :: (Num a) => a
c'APR_THREAD_TASK_PRIORITY_HIGH :: (Num a) => a
c'APR_THREAD_TASK_PRIORITY_HIGHEST :: (Num a) => a
c'apr_thread_pool_create :: Ptr (Ptr C'apr_thread_pool_t) -> C'apr_size_t -> C'apr_size_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_thread_pool_destroy :: Ptr C'apr_thread_pool_t -> IO C'apr_status_t
c'apr_thread_pool_push :: Ptr C'apr_thread_pool_t -> C'apr_thread_start_t -> Ptr () -> C'apr_byte_t -> Ptr () -> IO C'apr_status_t
p'apr_thread_pool_create :: FunPtr (Ptr (Ptr C'apr_thread_pool_t) -> C'apr_size_t -> C'apr_size_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
p'apr_thread_pool_destroy :: FunPtr (Ptr C'apr_thread_pool_t -> IO C'apr_status_t)
c'apr_thread_pool_schedule :: Ptr C'apr_thread_pool_t -> C'apr_thread_start_t -> Ptr () -> C'apr_interval_time_t -> Ptr () -> IO C'apr_status_t
c'apr_thread_pool_top :: Ptr C'apr_thread_pool_t -> C'apr_thread_start_t -> Ptr () -> C'apr_byte_t -> Ptr () -> IO C'apr_status_t
p'apr_thread_pool_push :: FunPtr (Ptr C'apr_thread_pool_t -> C'apr_thread_start_t -> Ptr () -> C'apr_byte_t -> Ptr () -> IO C'apr_status_t)
c'apr_thread_pool_tasks_cancel :: Ptr C'apr_thread_pool_t -> Ptr () -> IO C'apr_status_t
p'apr_thread_pool_schedule :: FunPtr (Ptr C'apr_thread_pool_t -> C'apr_thread_start_t -> Ptr () -> C'apr_interval_time_t -> Ptr () -> IO C'apr_status_t)
c'apr_thread_pool_tasks_count :: Ptr C'apr_thread_pool_t -> IO C'apr_size_t
p'apr_thread_pool_top :: FunPtr (Ptr C'apr_thread_pool_t -> C'apr_thread_start_t -> Ptr () -> C'apr_byte_t -> Ptr () -> IO C'apr_status_t)
c'apr_thread_pool_scheduled_tasks_count :: Ptr C'apr_thread_pool_t -> IO C'apr_size_t
p'apr_thread_pool_tasks_cancel :: FunPtr (Ptr C'apr_thread_pool_t -> Ptr () -> IO C'apr_status_t)
c'apr_thread_pool_threads_count :: Ptr C'apr_thread_pool_t -> IO C'apr_size_t
p'apr_thread_pool_tasks_count :: FunPtr (Ptr C'apr_thread_pool_t -> IO C'apr_size_t)
c'apr_thread_pool_busy_count :: Ptr C'apr_thread_pool_t -> IO C'apr_size_t
p'apr_thread_pool_scheduled_tasks_count :: FunPtr (Ptr C'apr_thread_pool_t -> IO C'apr_size_t)
c'apr_thread_pool_idle_count :: Ptr C'apr_thread_pool_t -> IO C'apr_size_t
p'apr_thread_pool_threads_count :: FunPtr (Ptr C'apr_thread_pool_t -> IO C'apr_size_t)
p'apr_thread_pool_busy_count :: FunPtr (Ptr C'apr_thread_pool_t -> IO C'apr_size_t)
c'apr_thread_pool_idle_max_set :: Ptr C'apr_thread_pool_t -> C'apr_size_t -> IO C'apr_size_t
c'apr_thread_pool_tasks_run_count :: Ptr C'apr_thread_pool_t -> IO C'apr_size_t
p'apr_thread_pool_idle_count :: FunPtr (Ptr C'apr_thread_pool_t -> IO C'apr_size_t)
c'apr_thread_pool_tasks_high_count :: Ptr C'apr_thread_pool_t -> IO C'apr_size_t
p'apr_thread_pool_idle_max_set :: FunPtr (Ptr C'apr_thread_pool_t -> C'apr_size_t -> IO C'apr_size_t)
c'apr_thread_pool_threads_high_count :: Ptr C'apr_thread_pool_t -> IO C'apr_size_t
p'apr_thread_pool_tasks_run_count :: FunPtr (Ptr C'apr_thread_pool_t -> IO C'apr_size_t)
c'apr_thread_pool_threads_idle_timeout_count :: Ptr C'apr_thread_pool_t -> IO C'apr_size_t
p'apr_thread_pool_tasks_high_count :: FunPtr (Ptr C'apr_thread_pool_t -> IO C'apr_size_t)
c'apr_thread_pool_idle_max_get :: Ptr C'apr_thread_pool_t -> IO C'apr_size_t
p'apr_thread_pool_threads_high_count :: FunPtr (Ptr C'apr_thread_pool_t -> IO C'apr_size_t)
p'apr_thread_pool_threads_idle_timeout_count :: FunPtr (Ptr C'apr_thread_pool_t -> IO C'apr_size_t)
c'apr_thread_pool_thread_max_set :: Ptr C'apr_thread_pool_t -> C'apr_size_t -> IO C'apr_size_t
p'apr_thread_pool_idle_max_get :: FunPtr (Ptr C'apr_thread_pool_t -> IO C'apr_size_t)
c'apr_thread_pool_idle_wait_set :: Ptr C'apr_thread_pool_t -> C'apr_interval_time_t -> IO C'apr_interval_time_t
c'apr_thread_pool_idle_wait_get :: Ptr C'apr_thread_pool_t -> IO C'apr_interval_time_t
p'apr_thread_pool_thread_max_set :: FunPtr (Ptr C'apr_thread_pool_t -> C'apr_size_t -> IO C'apr_size_t)
c'apr_thread_pool_thread_max_get :: Ptr C'apr_thread_pool_t -> IO C'apr_size_t
p'apr_thread_pool_idle_wait_set :: FunPtr (Ptr C'apr_thread_pool_t -> C'apr_interval_time_t -> IO C'apr_interval_time_t)
c'apr_thread_pool_threshold_set :: Ptr C'apr_thread_pool_t -> C'apr_size_t -> IO C'apr_size_t
p'apr_thread_pool_idle_wait_get :: FunPtr (Ptr C'apr_thread_pool_t -> IO C'apr_interval_time_t)
c'apr_thread_pool_threshold_get :: Ptr C'apr_thread_pool_t -> IO C'apr_size_t
p'apr_thread_pool_thread_max_get :: FunPtr (Ptr C'apr_thread_pool_t -> IO C'apr_size_t)
c'apr_thread_pool_task_owner_get :: Ptr C'apr_thread_t -> Ptr (Ptr ()) -> IO C'apr_status_t
p'apr_thread_pool_threshold_set :: FunPtr (Ptr C'apr_thread_pool_t -> C'apr_size_t -> IO C'apr_size_t)
p'apr_thread_pool_threshold_get :: FunPtr (Ptr C'apr_thread_pool_t -> IO C'apr_size_t)
p'apr_thread_pool_task_owner_get :: FunPtr (Ptr C'apr_thread_t -> Ptr (Ptr ()) -> IO C'apr_status_t)

module Bindings.APR.StrMatch
data C'apr_strmatch_pattern
C'apr_strmatch_pattern :: FunPtr (Ptr C'apr_strmatch_pattern -> Ptr CChar -> C'apr_size_t -> IO (Ptr CChar)) -> Ptr CChar -> C'apr_size_t -> Ptr () -> C'apr_strmatch_pattern
c'apr_strmatch_pattern'compare :: C'apr_strmatch_pattern -> FunPtr (Ptr C'apr_strmatch_pattern -> Ptr CChar -> C'apr_size_t -> IO (Ptr CChar))
c'apr_strmatch_pattern'pattern :: C'apr_strmatch_pattern -> Ptr CChar
c'apr_strmatch_pattern'length :: C'apr_strmatch_pattern -> C'apr_size_t
c'apr_strmatch_pattern'context :: C'apr_strmatch_pattern -> Ptr ()
c'apr_strmach :: Ptr C'apr_strmatch_pattern -> Ptr CChar -> C'apr_size_t -> IO (Ptr CChar)
c'apr_strmatch_precompile :: Ptr C'apr_pool_t -> Ptr CChar -> CInt -> IO (Ptr C'apr_strmatch_pattern)
p'apr_strmatch_precompile :: FunPtr (Ptr C'apr_pool_t -> Ptr CChar -> CInt -> IO (Ptr C'apr_strmatch_pattern))
instance Eq C'apr_strmatch_pattern
instance Show C'apr_strmatch_pattern
instance Storable C'apr_strmatch_pattern

module Bindings.APR.SHA1
c'APR_SHA1_DIGESTSIZE :: (Num a) => a
c'APR_SHA1_ID :: Ptr (CChar)
c'APR_SHA1PW_IDLEN :: (Num a) => a
data C'apr_sha1_ctx_t
C'apr_sha1_ctx_t :: [C'apr_uint32_t] -> C'apr_uint32_t -> C'apr_uint32_t -> [C'apr_uint32_t] -> CInt -> C'apr_sha1_ctx_t
c'apr_sha1_ctx_t'digest :: C'apr_sha1_ctx_t -> [C'apr_uint32_t]
c'apr_sha1_ctx_t'count_lo :: C'apr_sha1_ctx_t -> C'apr_uint32_t
c'apr_sha1_ctx_t'count_hi :: C'apr_sha1_ctx_t -> C'apr_uint32_t
c'apr_sha1_ctx_t'data :: C'apr_sha1_ctx_t -> [C'apr_uint32_t]
c'apr_sha1_ctx_t'local :: C'apr_sha1_ctx_t -> CInt
c'apr_sha1_base64 :: Ptr CChar -> CInt -> Ptr CChar -> IO ()
c'apr_sha1_init :: Ptr C'apr_sha1_ctx_t -> IO ()
p'apr_sha1_base64 :: FunPtr (Ptr CChar -> CInt -> Ptr CChar -> IO ())
c'apr_sha1_update :: Ptr C'apr_sha1_ctx_t -> Ptr CChar -> CUInt -> IO ()
p'apr_sha1_init :: FunPtr (Ptr C'apr_sha1_ctx_t -> IO ())
c'apr_sha1_update_binary :: Ptr C'apr_sha1_ctx_t -> Ptr CUInt -> CUInt -> IO ()
c'apr_sha1_final :: Ptr CUChar -> Ptr C'apr_sha1_ctx_t -> IO ()
p'apr_sha1_update :: FunPtr (Ptr C'apr_sha1_ctx_t -> Ptr CChar -> CUInt -> IO ())
p'apr_sha1_update_binary :: FunPtr (Ptr C'apr_sha1_ctx_t -> Ptr CUInt -> CUInt -> IO ())
p'apr_sha1_final :: FunPtr (Ptr CUChar -> Ptr C'apr_sha1_ctx_t -> IO ())
instance Eq C'apr_sha1_ctx_t
instance Show C'apr_sha1_ctx_t
instance Storable C'apr_sha1_ctx_t

module Bindings.APR.SDBM
data C'apr_sdbm_t
C'apr_sdbm_t :: C'apr_sdbm_t
data C'apr_sdbm_datum_t
C'apr_sdbm_datum_t :: Ptr CChar -> CInt -> C'apr_sdbm_datum_t
c'apr_sdbm_datum_t'dptr :: C'apr_sdbm_datum_t -> Ptr CChar
c'apr_sdbm_datum_t'dsize :: C'apr_sdbm_datum_t -> CInt
c'APR_SDBM_DIRFEXT :: Ptr (CChar)
c'APR_SDBM_PAGFEXT :: Ptr (CChar)
c'APR_SDBM_INSERT :: (Num a) => a
c'APR_SDBM_REPLACE :: (Num a) => a
c'APR_SDBM_INSERTDUP :: (Num a) => a
c'apr_sdbm_open :: Ptr (Ptr C'apr_sdbm_t) -> Ptr CChar -> C'apr_int32_t -> C'apr_fileperms_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_sdbm_close :: Ptr C'apr_sdbm_t -> IO C'apr_status_t
c'apr_sdbm_lock :: Ptr C'apr_sdbm_t -> CInt -> IO C'apr_status_t
p'apr_sdbm_open :: FunPtr (Ptr (Ptr C'apr_sdbm_t) -> Ptr CChar -> C'apr_int32_t -> C'apr_fileperms_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_sdbm_unlock :: Ptr C'apr_sdbm_t -> IO C'apr_status_t
p'apr_sdbm_close :: FunPtr (Ptr C'apr_sdbm_t -> IO C'apr_status_t)
p'apr_sdbm_lock :: FunPtr (Ptr C'apr_sdbm_t -> CInt -> IO C'apr_status_t)
c'apr_sdbm_fetch :: Ptr C'apr_sdbm_t -> Ptr C'apr_sdbm_datum_t -> Ptr C'apr_sdbm_datum_t -> IO C'apr_status_t
p'apr_sdbm_unlock :: FunPtr (Ptr C'apr_sdbm_t -> IO C'apr_status_t)
c'apr_sdbm_store :: Ptr C'apr_sdbm_t -> Ptr C'apr_sdbm_datum_t -> Ptr C'apr_sdbm_datum_t -> CInt -> IO C'apr_status_t
c'apr_sdbm_delete :: Ptr C'apr_sdbm_t -> Ptr C'apr_sdbm_datum_t -> IO C'apr_status_t
c'apr_sdbm_firstkey :: Ptr C'apr_sdbm_t -> Ptr C'apr_sdbm_datum_t -> IO C'apr_status_t
c'apr_sdbm_nextkey :: Ptr C'apr_sdbm_t -> Ptr C'apr_sdbm_datum_t -> IO C'apr_status_t
c'apr_sdbm_rdonly :: Ptr C'apr_sdbm_t -> IO CInt
p'apr_sdbm_firstkey :: FunPtr (Ptr C'apr_sdbm_t -> Ptr C'apr_sdbm_datum_t -> IO C'apr_status_t)
p'apr_sdbm_nextkey :: FunPtr (Ptr C'apr_sdbm_t -> Ptr C'apr_sdbm_datum_t -> IO C'apr_status_t)
p'apr_sdbm_rdonly :: FunPtr (Ptr C'apr_sdbm_t -> IO CInt)
instance Eq C'apr_sdbm_datum_t
instance Show C'apr_sdbm_datum_t
instance Storable C'apr_sdbm_datum_t

module Bindings.APR.Queue
data C'apr_queue_t
C'apr_queue_t :: C'apr_queue_t
c'apr_queue_create :: Ptr (Ptr C'apr_queue_t) -> CUInt -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_queue_push :: Ptr C'apr_queue_t -> Ptr () -> IO C'apr_status_t
c'apr_queue_pop :: Ptr C'apr_queue_t -> Ptr (Ptr ()) -> IO C'apr_status_t
p'apr_queue_create :: FunPtr (Ptr (Ptr C'apr_queue_t) -> CUInt -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_queue_trypush :: Ptr C'apr_queue_t -> Ptr () -> IO C'apr_status_t
p'apr_queue_push :: FunPtr (Ptr C'apr_queue_t -> Ptr () -> IO C'apr_status_t)
c'apr_queue_trypop :: Ptr C'apr_queue_t -> Ptr (Ptr ()) -> IO C'apr_status_t
p'apr_queue_pop :: FunPtr (Ptr C'apr_queue_t -> Ptr (Ptr ()) -> IO C'apr_status_t)
c'apr_queue_size :: Ptr C'apr_queue_t -> IO CUInt
p'apr_queue_trypush :: FunPtr (Ptr C'apr_queue_t -> Ptr () -> IO C'apr_status_t)
c'apr_queue_interrupt_all :: Ptr C'apr_queue_t -> IO C'apr_status_t
p'apr_queue_trypop :: FunPtr (Ptr C'apr_queue_t -> Ptr (Ptr ()) -> IO C'apr_status_t)
c'apr_queue_term :: Ptr C'apr_queue_t -> IO C'apr_status_t
p'apr_queue_size :: FunPtr (Ptr C'apr_queue_t -> IO CUInt)
p'apr_queue_interrupt_all :: FunPtr (Ptr C'apr_queue_t -> IO C'apr_status_t)
p'apr_queue_term :: FunPtr (Ptr C'apr_queue_t -> IO C'apr_status_t)

module Bindings.APR.ResList
data C'apr_reslist_t
C'apr_reslist_t :: C'apr_reslist_t
type C'apr_reslist_constructor = FunPtr (Ptr (Ptr ()) -> Ptr () -> Ptr C'apr_pool_t -> IO C'apr_status_t)
type C'apr_reslist_destructor = FunPtr (Ptr () -> Ptr () -> Ptr C'apr_pool_t -> IO C'apr_status_t)
mk'apr_reslist_constructor :: (Ptr (Ptr ()) -> Ptr () -> Ptr C'apr_pool_t -> IO C'apr_status_t) -> IO C'apr_reslist_constructor
mk'apr_reslist_destructor :: (Ptr () -> Ptr () -> Ptr C'apr_pool_t -> IO C'apr_status_t) -> IO C'apr_reslist_destructor
mK'apr_reslist_constructor :: C'apr_reslist_constructor -> (Ptr (Ptr ()) -> Ptr () -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_reslist_create :: Ptr (Ptr C'apr_reslist_t) -> CInt -> CInt -> CInt -> C'apr_interval_time_t -> C'apr_reslist_constructor -> C'apr_reslist_destructor -> Ptr () -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_reslist_destroy :: Ptr C'apr_reslist_t -> IO C'apr_status_t
mK'apr_reslist_destructor :: C'apr_reslist_destructor -> (Ptr () -> Ptr () -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_reslist_acquire :: Ptr C'apr_reslist_t -> Ptr (Ptr ()) -> IO C'apr_status_t
p'apr_reslist_create :: FunPtr (Ptr (Ptr C'apr_reslist_t) -> CInt -> CInt -> CInt -> C'apr_interval_time_t -> C'apr_reslist_constructor -> C'apr_reslist_destructor -> Ptr () -> Ptr C'apr_pool_t -> IO C'apr_status_t)
p'apr_reslist_destroy :: FunPtr (Ptr C'apr_reslist_t -> IO C'apr_status_t)
c'apr_reslist_release :: Ptr C'apr_reslist_t -> Ptr () -> IO C'apr_status_t
p'apr_reslist_acquire :: FunPtr (Ptr C'apr_reslist_t -> Ptr (Ptr ()) -> IO C'apr_status_t)
c'apr_reslist_timeout_set :: Ptr C'apr_reslist_t -> C'apr_interval_time_t -> IO ()
p'apr_reslist_release :: FunPtr (Ptr C'apr_reslist_t -> Ptr () -> IO C'apr_status_t)
c'apr_reslist_acquired_count :: Ptr C'apr_reslist_t -> IO C'apr_uint32_t
c'apr_reslist_invalidate :: Ptr C'apr_reslist_t -> Ptr () -> IO C'apr_status_t
p'apr_reslist_timeout_set :: FunPtr (Ptr C'apr_reslist_t -> C'apr_interval_time_t -> IO ())
p'apr_reslist_acquired_count :: FunPtr (Ptr C'apr_reslist_t -> IO C'apr_uint32_t)
p'apr_reslist_invalidate :: FunPtr (Ptr C'apr_reslist_t -> Ptr () -> IO C'apr_status_t)

module Bindings.APR.MemCache
type C'apr_memcache_server_status_t = CUInt
c'APR_MC_SERVER_LIVE :: (Num a) => a
c'APR_MC_SERVER_DEAD :: (Num a) => a
data C'apr_memcache_conn_t
C'apr_memcache_conn_t :: C'apr_memcache_conn_t
data C'apr_memcache_server_t
C'apr_memcache_server_t :: Ptr CChar -> C'apr_port_t -> C'apr_memcache_server_status_t -> Ptr C'apr_reslist_t -> Ptr C'apr_pool_t -> Ptr C'apr_thread_mutex_t -> C'apr_time_t -> C'apr_memcache_server_t
c'apr_memcache_server_t'host :: C'apr_memcache_server_t -> Ptr CChar
c'apr_memcache_server_t'port :: C'apr_memcache_server_t -> C'apr_port_t
c'apr_memcache_server_t'status :: C'apr_memcache_server_t -> C'apr_memcache_server_status_t
c'apr_memcache_server_t'conns :: C'apr_memcache_server_t -> Ptr C'apr_reslist_t
c'apr_memcache_server_t'p :: C'apr_memcache_server_t -> Ptr C'apr_pool_t
c'apr_memcache_server_t'lock :: C'apr_memcache_server_t -> Ptr C'apr_thread_mutex_t
c'apr_memcache_server_t'btime :: C'apr_memcache_server_t -> C'apr_time_t
type C'apr_memcache_hash_func = FunPtr (Ptr () -> Ptr CChar -> C'apr_size_t -> IO C'apr_uint32_t)
type C'apr_memcache_server_func = FunPtr (Ptr () -> Ptr C'apr_memcache_t -> C'apr_uint32_t -> IO (Ptr C'apr_memcache_server_t))
mk'apr_memcache_hash_func :: (Ptr () -> Ptr CChar -> C'apr_size_t -> IO C'apr_uint32_t) -> IO C'apr_memcache_hash_func
mk'apr_memcache_server_func :: (Ptr () -> Ptr C'apr_memcache_t -> C'apr_uint32_t -> IO (Ptr C'apr_memcache_server_t)) -> IO C'apr_memcache_server_func
mK'apr_memcache_hash_func :: C'apr_memcache_hash_func -> (Ptr () -> Ptr CChar -> C'apr_size_t -> IO C'apr_uint32_t)
data C'apr_memcache_t
C'apr_memcache_t :: C'apr_uint32_t -> C'apr_uint16_t -> C'apr_uint16_t -> Ptr (Ptr C'apr_memcache_server_t) -> Ptr C'apr_pool_t -> C'apr_memcache_hash_func -> Ptr () -> C'apr_memcache_server_func -> C'apr_memcache_t
c'apr_memcache_t'flags :: C'apr_memcache_t -> C'apr_uint32_t
c'apr_memcache_t'nalloc :: C'apr_memcache_t -> C'apr_uint16_t
c'apr_memcache_t'ntotal :: C'apr_memcache_t -> C'apr_uint16_t
c'apr_memcache_t'live_servers :: C'apr_memcache_t -> Ptr (Ptr C'apr_memcache_server_t)
c'apr_memcache_t'p :: C'apr_memcache_t -> Ptr C'apr_pool_t
c'apr_memcache_t'hash_func :: C'apr_memcache_t -> C'apr_memcache_hash_func
c'apr_memcache_t'server_baton :: C'apr_memcache_t -> Ptr ()
c'apr_memcache_t'server_func :: C'apr_memcache_t -> C'apr_memcache_server_func
mK'apr_memcache_server_func :: C'apr_memcache_server_func -> (Ptr () -> Ptr C'apr_memcache_t -> C'apr_uint32_t -> IO (Ptr C'apr_memcache_server_t))
data C'apr_memcache_value_t
C'apr_memcache_value_t :: C'apr_status_t -> Ptr CChar -> C'apr_size_t -> Ptr () -> C'apr_uint16_t -> C'apr_memcache_value_t
c'apr_memcache_value_t'status :: C'apr_memcache_value_t -> C'apr_status_t
c'apr_memcache_value_t'key :: C'apr_memcache_value_t -> Ptr CChar
c'apr_memcache_value_t'len :: C'apr_memcache_value_t -> C'apr_size_t
c'apr_memcache_value_t'data :: C'apr_memcache_value_t -> Ptr ()
c'apr_memcache_value_t'flags :: C'apr_memcache_value_t -> C'apr_uint16_t
c'apr_memcache_hash :: Ptr C'apr_memcache_t -> Ptr CChar -> C'apr_size_t -> IO C'apr_uint32_t
c'apr_memcache_hash_crc32 :: Ptr () -> Ptr CChar -> C'apr_size_t -> IO C'apr_uint32_t
c'apr_memcache_hash_default :: Ptr () -> Ptr CChar -> C'apr_size_t -> IO C'apr_uint32_t
p'apr_memcache_hash :: FunPtr (Ptr C'apr_memcache_t -> Ptr CChar -> C'apr_size_t -> IO C'apr_uint32_t)
p'apr_memcache_hash_crc32 :: FunPtr (Ptr () -> Ptr CChar -> C'apr_size_t -> IO C'apr_uint32_t)
p'apr_memcache_hash_default :: FunPtr (Ptr () -> Ptr CChar -> C'apr_size_t -> IO C'apr_uint32_t)
c'apr_memcache_find_server_hash :: Ptr C'apr_memcache_t -> C'apr_uint32_t -> IO (Ptr C'apr_memcache_server_t)
c'apr_memcache_find_server_hash_default :: Ptr () -> Ptr C'apr_memcache_t -> C'apr_uint32_t -> IO (Ptr C'apr_memcache_server_t)
p'apr_memcache_find_server_hash :: FunPtr (Ptr C'apr_memcache_t -> C'apr_uint32_t -> IO (Ptr C'apr_memcache_server_t))
c'apr_memcache_add_server :: Ptr C'apr_memcache_t -> Ptr C'apr_memcache_server_t -> IO C'apr_status_t
p'apr_memcache_find_server_hash_default :: FunPtr (Ptr () -> Ptr C'apr_memcache_t -> C'apr_uint32_t -> IO (Ptr C'apr_memcache_server_t))
c'apr_memcache_find_server :: Ptr C'apr_memcache_t -> Ptr CChar -> C'apr_port_t -> IO (Ptr C'apr_memcache_server_t)
c'apr_memcache_enable_server :: Ptr C'apr_memcache_t -> Ptr C'apr_memcache_server_t -> IO C'apr_status_t
p'apr_memcache_add_server :: FunPtr (Ptr C'apr_memcache_t -> Ptr C'apr_memcache_server_t -> IO C'apr_status_t)
c'apr_memcache_disable_server :: Ptr C'apr_memcache_t -> Ptr C'apr_memcache_server_t -> IO C'apr_status_t
p'apr_memcache_find_server :: FunPtr (Ptr C'apr_memcache_t -> Ptr CChar -> C'apr_port_t -> IO (Ptr C'apr_memcache_server_t))
p'apr_memcache_enable_server :: FunPtr (Ptr C'apr_memcache_t -> Ptr C'apr_memcache_server_t -> IO C'apr_status_t)
c'apr_memcache_server_create :: Ptr C'apr_pool_t -> Ptr CChar -> C'apr_port_t -> C'apr_uint32_t -> C'apr_uint32_t -> C'apr_uint32_t -> C'apr_uint32_t -> Ptr (Ptr C'apr_memcache_server_t) -> IO C'apr_status_t
p'apr_memcache_disable_server :: FunPtr (Ptr C'apr_memcache_t -> Ptr C'apr_memcache_server_t -> IO C'apr_status_t)
c'apr_memcache_create :: Ptr C'apr_pool_t -> C'apr_uint16_t -> C'apr_uint32_t -> Ptr (Ptr C'apr_memcache_t) -> IO C'apr_status_t
c'apr_memcache_getp :: Ptr C'apr_memcache_t -> Ptr C'apr_pool_t -> Ptr CChar -> Ptr (Ptr CChar) -> Ptr C'apr_size_t -> Ptr C'apr_uint16_t -> IO C'apr_status_t
p'apr_memcache_server_create :: FunPtr (Ptr C'apr_pool_t -> Ptr CChar -> C'apr_port_t -> C'apr_uint32_t -> C'apr_uint32_t -> C'apr_uint32_t -> C'apr_uint32_t -> Ptr (Ptr C'apr_memcache_server_t) -> IO C'apr_status_t)
c'apr_memcache_add_multget_key :: Ptr C'apr_pool_t -> Ptr CChar -> Ptr (Ptr C'apr_hash_t) -> IO ()
p'apr_memcache_create :: FunPtr (Ptr C'apr_pool_t -> C'apr_uint16_t -> C'apr_uint32_t -> Ptr (Ptr C'apr_memcache_t) -> IO C'apr_status_t)
c'apr_memcache_multgetp :: Ptr C'apr_memcache_t -> Ptr C'apr_pool_t -> Ptr C'apr_pool_t -> Ptr C'apr_hash_t -> IO C'apr_status_t
p'apr_memcache_getp :: FunPtr (Ptr C'apr_memcache_t -> Ptr C'apr_pool_t -> Ptr CChar -> Ptr (Ptr CChar) -> Ptr C'apr_size_t -> Ptr C'apr_uint16_t -> IO C'apr_status_t)
p'apr_memcache_add_multget_key :: FunPtr (Ptr C'apr_pool_t -> Ptr CChar -> Ptr (Ptr C'apr_hash_t) -> IO ())
c'apr_memcache_set :: Ptr C'apr_memcache_t -> Ptr CChar -> Ptr CChar -> C'apr_size_t -> C'apr_uint32_t -> C'apr_uint16_t -> IO C'apr_status_t
p'apr_memcache_multgetp :: FunPtr (Ptr C'apr_memcache_t -> Ptr C'apr_pool_t -> Ptr C'apr_pool_t -> Ptr C'apr_hash_t -> IO C'apr_status_t)
c'apr_memcache_add :: Ptr C'apr_memcache_t -> Ptr CChar -> Ptr CChar -> C'apr_size_t -> C'apr_uint32_t -> C'apr_uint16_t -> IO C'apr_status_t
c'apr_memcache_replace :: Ptr C'apr_memcache_t -> Ptr CChar -> Ptr CChar -> C'apr_size_t -> C'apr_uint32_t -> C'apr_uint16_t -> IO C'apr_status_t
p'apr_memcache_set :: FunPtr (Ptr C'apr_memcache_t -> Ptr CChar -> Ptr CChar -> C'apr_size_t -> C'apr_uint32_t -> C'apr_uint16_t -> IO C'apr_status_t)
c'apr_memcache_delete :: Ptr C'apr_memcache_t -> Ptr CChar -> C'apr_uint32_t -> IO C'apr_status_t
p'apr_memcache_add :: FunPtr (Ptr C'apr_memcache_t -> Ptr CChar -> Ptr CChar -> C'apr_size_t -> C'apr_uint32_t -> C'apr_uint16_t -> IO C'apr_status_t)
c'apr_memcache_incr :: Ptr C'apr_memcache_t -> Ptr CChar -> C'apr_int32_t -> Ptr C'apr_uint32_t -> IO C'apr_status_t
p'apr_memcache_replace :: FunPtr (Ptr C'apr_memcache_t -> Ptr CChar -> Ptr CChar -> C'apr_size_t -> C'apr_uint32_t -> C'apr_uint16_t -> IO C'apr_status_t)
p'apr_memcache_delete :: FunPtr (Ptr C'apr_memcache_t -> Ptr CChar -> C'apr_uint32_t -> IO C'apr_status_t)
c'apr_memcache_decr :: Ptr C'apr_memcache_t -> Ptr CChar -> C'apr_int32_t -> Ptr C'apr_uint32_t -> IO C'apr_status_t
c'apr_memcache_version :: Ptr C'apr_memcache_server_t -> Ptr C'apr_pool_t -> Ptr (Ptr CChar) -> IO C'apr_status_t
p'apr_memcache_incr :: FunPtr (Ptr C'apr_memcache_t -> Ptr CChar -> C'apr_int32_t -> Ptr C'apr_uint32_t -> IO C'apr_status_t)
p'apr_memcache_decr :: FunPtr (Ptr C'apr_memcache_t -> Ptr CChar -> C'apr_int32_t -> Ptr C'apr_uint32_t -> IO C'apr_status_t)
p'apr_memcache_version :: FunPtr (Ptr C'apr_memcache_server_t -> Ptr C'apr_pool_t -> Ptr (Ptr CChar) -> IO C'apr_status_t)
data C'apr_memcache_stats_t
C'apr_memcache_stats_t :: Ptr CChar -> C'apr_uint32_t -> C'apr_uint32_t -> C'apr_time_t -> C'apr_uint32_t -> C'apr_time_t -> C'apr_time_t -> C'apr_uint32_t -> C'apr_uint32_t -> C'apr_uint64_t -> C'apr_uint32_t -> C'apr_uint32_t -> C'apr_uint32_t -> C'apr_uint32_t -> C'apr_uint32_t -> C'apr_uint32_t -> C'apr_uint32_t -> C'apr_uint64_t -> C'apr_uint64_t -> C'apr_uint64_t -> C'apr_uint32_t -> C'apr_uint32_t -> C'apr_memcache_stats_t
c'apr_memcache_stats_t'version :: C'apr_memcache_stats_t -> Ptr CChar
c'apr_memcache_stats_t'pid :: C'apr_memcache_stats_t -> C'apr_uint32_t
c'apr_memcache_stats_t'uptime :: C'apr_memcache_stats_t -> C'apr_uint32_t
c'apr_memcache_stats_t'time :: C'apr_memcache_stats_t -> C'apr_time_t
c'apr_memcache_stats_t'pointer_size :: C'apr_memcache_stats_t -> C'apr_uint32_t
c'apr_memcache_stats_t'rusage_user :: C'apr_memcache_stats_t -> C'apr_time_t
c'apr_memcache_stats_t'rusage_system :: C'apr_memcache_stats_t -> C'apr_time_t
c'apr_memcache_stats_t'curr_items :: C'apr_memcache_stats_t -> C'apr_uint32_t
c'apr_memcache_stats_t'total_items :: C'apr_memcache_stats_t -> C'apr_uint32_t
c'apr_memcache_stats_t'bytes :: C'apr_memcache_stats_t -> C'apr_uint64_t
c'apr_memcache_stats_t'curr_connections :: C'apr_memcache_stats_t -> C'apr_uint32_t
c'apr_memcache_stats_t'total_connections :: C'apr_memcache_stats_t -> C'apr_uint32_t
c'apr_memcache_stats_t'connection_structures :: C'apr_memcache_stats_t -> C'apr_uint32_t
c'apr_memcache_stats_t'cmd_get :: C'apr_memcache_stats_t -> C'apr_uint32_t
c'apr_memcache_stats_t'cmd_set :: C'apr_memcache_stats_t -> C'apr_uint32_t
c'apr_memcache_stats_t'get_hits :: C'apr_memcache_stats_t -> C'apr_uint32_t
c'apr_memcache_stats_t'get_misses :: C'apr_memcache_stats_t -> C'apr_uint32_t
c'apr_memcache_stats_t'evictions :: C'apr_memcache_stats_t -> C'apr_uint64_t
c'apr_memcache_stats_t'bytes_read :: C'apr_memcache_stats_t -> C'apr_uint64_t
c'apr_memcache_stats_t'bytes_written :: C'apr_memcache_stats_t -> C'apr_uint64_t
c'apr_memcache_stats_t'limit_maxbytes :: C'apr_memcache_stats_t -> C'apr_uint32_t
c'apr_memcache_stats_t'threads :: C'apr_memcache_stats_t -> C'apr_uint32_t
c'apr_memcache_stats :: Ptr C'apr_memcache_server_t -> Ptr C'apr_pool_t -> Ptr (Ptr C'apr_memcache_stats_t) -> IO C'apr_status_t
p'apr_memcache_stats :: FunPtr (Ptr C'apr_memcache_server_t -> Ptr C'apr_pool_t -> Ptr (Ptr C'apr_memcache_stats_t) -> IO C'apr_status_t)
instance Eq C'apr_memcache_stats_t
instance Show C'apr_memcache_stats_t
instance Eq C'apr_memcache_value_t
instance Show C'apr_memcache_value_t
instance Eq C'apr_memcache_t
instance Show C'apr_memcache_t
instance Eq C'apr_memcache_server_t
instance Show C'apr_memcache_server_t
instance Storable C'apr_memcache_stats_t
instance Storable C'apr_memcache_value_t
instance Storable C'apr_memcache_t
instance Storable C'apr_memcache_server_t

module Bindings.APR.XLate
data C'apr_xlate_t
C'apr_xlate_t :: C'apr_xlate_t
c'apr_xlate_open :: Ptr (Ptr C'apr_xlate_t) -> Ptr CChar -> Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_xlate_open :: FunPtr (Ptr (Ptr C'apr_xlate_t) -> Ptr CChar -> Ptr CChar -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'APR_DEFAULT_CHARSET :: Ptr a
c'APR_LOCALE_CHARSET :: Ptr a
c'apr_xlate_sb_get :: Ptr C'apr_xlate_t -> Ptr CInt -> IO C'apr_status_t
c'apr_xlate_conv_buffer :: Ptr C'apr_xlate_t -> Ptr CChar -> Ptr C'apr_size_t -> Ptr CChar -> Ptr C'apr_size_t -> IO C'apr_status_t
p'apr_xlate_sb_get :: FunPtr (Ptr C'apr_xlate_t -> Ptr CInt -> IO C'apr_status_t)
p'apr_xlate_conv_buffer :: FunPtr (Ptr C'apr_xlate_t -> Ptr CChar -> Ptr C'apr_size_t -> Ptr CChar -> Ptr C'apr_size_t -> IO C'apr_status_t)
c'apr_xlate_conv_byte :: Ptr C'apr_xlate_t -> CUChar -> IO C'apr_int32_t
c'apr_xlate_close :: Ptr C'apr_xlate_t -> IO C'apr_status_t
p'apr_xlate_conv_byte :: FunPtr (Ptr C'apr_xlate_t -> CUChar -> IO C'apr_int32_t)
p'apr_xlate_close :: FunPtr (Ptr C'apr_xlate_t -> IO C'apr_status_t)

module Bindings.APR.MD5
c'APR_MD5_DIGESTSIZE :: (Num a) => a
data C'apr_md5_ctx_t
C'apr_md5_ctx_t :: [C'apr_uint32_t] -> [C'apr_uint32_t] -> [CUChar] -> Ptr C'apr_xlate_t -> C'apr_md5_ctx_t
c'apr_md5_ctx_t'state :: C'apr_md5_ctx_t -> [C'apr_uint32_t]
c'apr_md5_ctx_t'count :: C'apr_md5_ctx_t -> [C'apr_uint32_t]
c'apr_md5_ctx_t'buffer :: C'apr_md5_ctx_t -> [CUChar]
c'apr_md5_ctx_t'xlate :: C'apr_md5_ctx_t -> Ptr C'apr_xlate_t
c'apr_md5_init :: Ptr C'apr_md5_ctx_t -> IO C'apr_status_t
c'apr_md5_set_xlate :: Ptr C'apr_md5_ctx_t -> Ptr C'apr_xlate_t -> IO C'apr_status_t
p'apr_md5_init :: FunPtr (Ptr C'apr_md5_ctx_t -> IO C'apr_status_t)
c'apr_md5_update :: Ptr C'apr_md5_ctx_t -> Ptr () -> C'apr_size_t -> IO C'apr_status_t
c'apr_md5_final :: Ptr CUChar -> Ptr C'apr_md5_ctx_t -> IO C'apr_status_t
p'apr_md5_set_xlate :: FunPtr (Ptr C'apr_md5_ctx_t -> Ptr C'apr_xlate_t -> IO C'apr_status_t)
c'apr_md5 :: Ptr CUChar -> Ptr () -> C'apr_size_t -> IO C'apr_status_t
p'apr_md5_update :: FunPtr (Ptr C'apr_md5_ctx_t -> Ptr () -> C'apr_size_t -> IO C'apr_status_t)
p'apr_md5_final :: FunPtr (Ptr CUChar -> Ptr C'apr_md5_ctx_t -> IO C'apr_status_t)
c'apr_md5_encode :: Ptr CChar -> Ptr CChar -> Ptr CChar -> C'apr_size_t -> IO C'apr_status_t
c'apr_password_validate :: Ptr CChar -> Ptr CChar -> IO C'apr_status_t
p'apr_md5 :: FunPtr (Ptr CUChar -> Ptr () -> C'apr_size_t -> IO C'apr_status_t)
p'apr_md5_encode :: FunPtr (Ptr CChar -> Ptr CChar -> Ptr CChar -> C'apr_size_t -> IO C'apr_status_t)
p'apr_password_validate :: FunPtr (Ptr CChar -> Ptr CChar -> IO C'apr_status_t)
instance Eq C'apr_md5_ctx_t
instance Show C'apr_md5_ctx_t
instance Storable C'apr_md5_ctx_t

module Bindings.APR.XML
data C'apr_text
C'apr_text :: Ptr CChar -> Ptr C'apr_text -> C'apr_text
c'apr_text'text :: C'apr_text -> Ptr CChar
c'apr_text'next :: C'apr_text -> Ptr C'apr_text
data C'apr_text_header
C'apr_text_header :: Ptr C'apr_text -> Ptr C'apr_text -> C'apr_text_header
c'apr_text_header'first :: C'apr_text_header -> Ptr C'apr_text
c'apr_text_header'last :: C'apr_text_header -> Ptr C'apr_text
c'apr_text_append :: Ptr C'apr_pool_t -> Ptr C'apr_text_header -> Ptr CChar -> IO ()
p'apr_text_append :: FunPtr (Ptr C'apr_pool_t -> Ptr C'apr_text_header -> Ptr CChar -> IO ())
c'APR_XML_NS_DAV_ID :: (Num a) => a
c'APR_XML_NS_NONE :: (Num a) => a
c'APR_XML_NS_ERROR_BASE :: (Num a) => a
c'APR_XML_NS_IS_ERROR :: CInt -> IO CInt
data C'apr_xml_attr
C'apr_xml_attr :: Ptr CChar -> CInt -> Ptr CChar -> Ptr C'apr_xml_attr -> C'apr_xml_attr
c'apr_xml_attr'name :: C'apr_xml_attr -> Ptr CChar
c'apr_xml_attr'ns :: C'apr_xml_attr -> CInt
c'apr_xml_attr'value :: C'apr_xml_attr -> Ptr CChar
c'apr_xml_attr'next :: C'apr_xml_attr -> Ptr C'apr_xml_attr
data C'apr_xml_ns_scope
C'apr_xml_ns_scope :: C'apr_xml_ns_scope
data C'apr_xml_elem
C'apr_xml_elem :: Ptr CChar -> CInt -> Ptr CChar -> C'apr_text_header -> C'apr_text_header -> Ptr C'apr_xml_elem -> Ptr C'apr_xml_elem -> Ptr C'apr_xml_elem -> Ptr C'apr_xml_elem -> Ptr C'apr_xml_elem -> Ptr C'apr_xml_ns_scope -> Ptr () -> C'apr_xml_elem
c'apr_xml_elem'name :: C'apr_xml_elem -> Ptr CChar
c'apr_xml_elem'ns :: C'apr_xml_elem -> CInt
c'apr_xml_elem'lang :: C'apr_xml_elem -> Ptr CChar
c'apr_xml_elem'first_cdata :: C'apr_xml_elem -> C'apr_text_header
c'apr_xml_elem'following_cdata :: C'apr_xml_elem -> C'apr_text_header
c'apr_xml_elem'parent :: C'apr_xml_elem -> Ptr C'apr_xml_elem
c'apr_xml_elem'next :: C'apr_xml_elem -> Ptr C'apr_xml_elem
c'apr_xml_elem'first_child :: C'apr_xml_elem -> Ptr C'apr_xml_elem
c'apr_xml_elem'attr :: C'apr_xml_elem -> Ptr C'apr_xml_elem
c'apr_xml_elem'last_child :: C'apr_xml_elem -> Ptr C'apr_xml_elem
c'apr_xml_elem'ns_scope :: C'apr_xml_elem -> Ptr C'apr_xml_ns_scope
c'apr_xml_elem'priv :: C'apr_xml_elem -> Ptr ()
c'APR_XML_ELEM_IS_EMPTY :: Ptr C'apr_xml_elem -> IO CInt
data C'apr_xml_doc
C'apr_xml_doc :: Ptr C'apr_xml_elem -> Ptr C'apr_array_header_t -> C'apr_xml_doc
c'apr_xml_doc'root :: C'apr_xml_doc -> Ptr C'apr_xml_elem
c'apr_xml_doc'namespaces :: C'apr_xml_doc -> Ptr C'apr_array_header_t
data C'apr_xml_parser
C'apr_xml_parser :: C'apr_xml_parser
c'apr_xml_parser_create :: Ptr C'apr_pool_t -> IO (Ptr C'apr_xml_parser)
c'apr_xml_parse_file :: Ptr C'apr_pool_t -> Ptr (Ptr C'apr_xml_parser) -> Ptr (Ptr C'apr_xml_doc) -> Ptr C'apr_file_t -> C'apr_size_t -> IO C'apr_status_t
p'apr_xml_parser_create :: FunPtr (Ptr C'apr_pool_t -> IO (Ptr C'apr_xml_parser))
c'apr_xml_parser_feed :: Ptr C'apr_xml_parser -> Ptr CChar -> C'apr_size_t -> IO C'apr_status_t
c'apr_xml_parser_done :: Ptr C'apr_xml_parser -> Ptr (Ptr C'apr_xml_doc) -> IO C'apr_status_t
p'apr_xml_parse_file :: FunPtr (Ptr C'apr_pool_t -> Ptr (Ptr C'apr_xml_parser) -> Ptr (Ptr C'apr_xml_doc) -> Ptr C'apr_file_t -> C'apr_size_t -> IO C'apr_status_t)
c'apr_xml_parser_geterror :: Ptr C'apr_xml_parser -> Ptr CChar -> C'apr_size_t -> IO (Ptr CChar)
p'apr_xml_parser_feed :: FunPtr (Ptr C'apr_xml_parser -> Ptr CChar -> C'apr_size_t -> IO C'apr_status_t)
p'apr_xml_parser_done :: FunPtr (Ptr C'apr_xml_parser -> Ptr (Ptr C'apr_xml_doc) -> IO C'apr_status_t)
p'apr_xml_parser_geterror :: FunPtr (Ptr C'apr_xml_parser -> Ptr CChar -> C'apr_size_t -> IO (Ptr CChar))
c'apr_xml_to_text :: Ptr C'apr_pool_t -> Ptr C'apr_xml_elem -> CInt -> Ptr C'apr_array_header_t -> Ptr CInt -> Ptr (Ptr CChar) -> Ptr C'apr_size_t -> IO ()
p'apr_xml_to_text :: FunPtr (Ptr C'apr_pool_t -> Ptr C'apr_xml_elem -> CInt -> Ptr C'apr_array_header_t -> Ptr CInt -> Ptr (Ptr CChar) -> Ptr C'apr_size_t -> IO ())
c'APR_XML_X2T_FULL :: (Num a) => a
c'APR_XML_X2T_INNER :: (Num a) => a
c'APR_XML_X2T_LANG_INNER :: (Num a) => a
c'APR_XML_X2T_FULL_NS_LANG :: (Num a) => a
c'apr_xml_empty_elem :: Ptr C'apr_pool_t -> Ptr C'apr_xml_elem -> IO (Ptr CChar)
c'apr_xml_quote_string :: Ptr C'apr_pool_t -> Ptr CChar -> CInt -> IO (Ptr CChar)
c'apr_xml_quote_elem :: Ptr C'apr_pool_t -> Ptr C'apr_xml_elem -> IO ()
p'apr_xml_empty_elem :: FunPtr (Ptr C'apr_pool_t -> Ptr C'apr_xml_elem -> IO (Ptr CChar))
c'apr_xml_insert_uri :: Ptr C'apr_array_header_t -> Ptr CChar -> IO CInt
p'apr_xml_quote_string :: FunPtr (Ptr C'apr_pool_t -> Ptr CChar -> CInt -> IO (Ptr CChar))
p'apr_xml_quote_elem :: FunPtr (Ptr C'apr_pool_t -> Ptr C'apr_xml_elem -> IO ())
c'APR_XML_GET_URI_ITEM :: Ptr C'apr_array_header_t -> CInt -> IO (Ptr CChar)
p'apr_xml_insert_uri :: FunPtr (Ptr C'apr_array_header_t -> Ptr CChar -> IO CInt)
instance Eq C'apr_xml_doc
instance Show C'apr_xml_doc
instance Eq C'apr_xml_elem
instance Show C'apr_xml_elem
instance Eq C'apr_xml_attr
instance Show C'apr_xml_attr
instance Eq C'apr_text_header
instance Show C'apr_text_header
instance Eq C'apr_text
instance Show C'apr_text
instance Storable C'apr_xml_doc
instance Storable C'apr_xml_elem
instance Storable C'apr_xml_attr
instance Storable C'apr_text_header
instance Storable C'apr_text

module Bindings.APR.MD4
c'APR_MD4_DIGESTSIZE :: (Num a) => a
data C'apr_md4_ctx_t
C'apr_md4_ctx_t :: [C'apr_uint32_t] -> [C'apr_uint32_t] -> [CUChar] -> Ptr C'apr_xlate_t -> C'apr_md4_ctx_t
c'apr_md4_ctx_t'state :: C'apr_md4_ctx_t -> [C'apr_uint32_t]
c'apr_md4_ctx_t'count :: C'apr_md4_ctx_t -> [C'apr_uint32_t]
c'apr_md4_ctx_t'buffer :: C'apr_md4_ctx_t -> [CUChar]
c'apr_md4_ctx_t'xlate :: C'apr_md4_ctx_t -> Ptr C'apr_xlate_t
c'apr_md4_init :: Ptr C'apr_md4_ctx_t -> IO C'apr_status_t
c'apr_md4_set_xlate :: Ptr C'apr_md4_ctx_t -> Ptr C'apr_xlate_t -> IO C'apr_status_t
p'apr_md4_init :: FunPtr (Ptr C'apr_md4_ctx_t -> IO C'apr_status_t)
c'apr_md4_update :: Ptr C'apr_md4_ctx_t -> Ptr CUChar -> C'apr_size_t -> IO C'apr_status_t
c'apr_md4_final :: Ptr CUChar -> Ptr C'apr_md4_ctx_t -> IO C'apr_status_t
c'apr_md4 :: Ptr CUChar -> Ptr CUChar -> C'apr_size_t -> IO C'apr_status_t
p'apr_md4_update :: FunPtr (Ptr C'apr_md4_ctx_t -> Ptr CUChar -> C'apr_size_t -> IO C'apr_status_t)
p'apr_md4_final :: FunPtr (Ptr CUChar -> Ptr C'apr_md4_ctx_t -> IO C'apr_status_t)
p'apr_md4 :: FunPtr (Ptr CUChar -> Ptr CUChar -> C'apr_size_t -> IO C'apr_status_t)
instance Eq C'apr_md4_ctx_t
instance Show C'apr_md4_ctx_t
instance Storable C'apr_md4_ctx_t

module Bindings.APR.LDAP
c'APR_HAS_LDAP :: (Num a) => a
c'APR_HAS_NETSCAPE_LDAPSDK :: (Num a) => a
c'APR_HAS_SOLARIS_LDAPSDK :: (Num a) => a
c'APR_HAS_NOVELL_LDAPSDK :: (Num a) => a
c'APR_HAS_MOZILLA_LDAPSDK :: (Num a) => a
c'APR_HAS_OPENLDAP_LDAPSDK :: (Num a) => a
c'APR_HAS_MICROSOFT_LDAPSDK :: (Num a) => a
c'APR_HAS_TIVOLI_LDAPSDK :: (Num a) => a
c'APR_HAS_ZOS_LDAPSDK :: (Num a) => a
c'APR_HAS_OTHER_LDAPSDK :: (Num a) => a
c'APR_HAS_LDAP_SSL :: (Num a) => a
c'APR_HAS_LDAP_URL_PARSE :: (Num a) => a
data C'LDAP
C'LDAP :: C'LDAP
c'APR_HAS_LDAPSSL_CLIENT_INIT :: (Num a) => a
c'APR_HAS_LDAPSSL_CLIENT_DEINIT :: (Num a) => a
c'APR_HAS_LDAPSSL_ADD_TRUSTED_CERT :: (Num a) => a
c'APR_HAS_LDAP_START_TLS_S :: (Num a) => a
c'APR_HAS_LDAP_SSLINIT :: (Num a) => a
c'APR_HAS_LDAPSSL_INIT :: (Num a) => a
c'APR_HAS_LDAPSSL_INSTALL_ROUTINES :: (Num a) => a
c'APR_LDAP_SIZELIMIT :: (Num a) => a
data C'apr_ldap_err_t
C'apr_ldap_err_t :: Ptr CChar -> Ptr CChar -> CInt -> C'apr_ldap_err_t
c'apr_ldap_err_t'reason :: C'apr_ldap_err_t -> Ptr CChar
c'apr_ldap_err_t'msg :: C'apr_ldap_err_t -> Ptr CChar
c'apr_ldap_err_t'rc :: C'apr_ldap_err_t -> CInt
c'APR_LDAP_IS_SERVER_DOWN :: CInt -> IO CInt
instance Eq C'apr_ldap_err_t
instance Show C'apr_ldap_err_t
instance Storable C'apr_ldap_err_t

module Bindings.APR.LDAP.Init
c'APU_LDAP_INSUFFICIENT_ACCESS :: (Num a) => a
c'APU_LDAP_SECURITY_ERROR :: CInt -> IO CInt
c'apr_ldap_ssl_init :: Ptr C'apr_pool_t -> Ptr CChar -> CInt -> Ptr (Ptr C'apr_ldap_err_t) -> IO CInt
c'apr_ldap_ssl_deinit :: IO CInt
p'apr_ldap_ssl_init :: FunPtr (Ptr C'apr_pool_t -> Ptr CChar -> CInt -> Ptr (Ptr C'apr_ldap_err_t) -> IO CInt)
c'apr_ldap_init :: Ptr C'apr_pool_t -> Ptr (Ptr C'LDAP) -> Ptr CChar -> CInt -> CInt -> Ptr (Ptr C'apr_ldap_err_t) -> IO CInt
p'apr_ldap_ssl_deinit :: FunPtr (IO CInt)
c'apr_ldap_info :: Ptr C'apr_pool_t -> Ptr (Ptr C'apr_ldap_err_t) -> IO CInt
p'apr_ldap_init :: FunPtr (Ptr C'apr_pool_t -> Ptr (Ptr C'LDAP) -> Ptr CChar -> CInt -> CInt -> Ptr (Ptr C'apr_ldap_err_t) -> IO CInt)
p'apr_ldap_info :: FunPtr (Ptr C'apr_pool_t -> Ptr (Ptr C'apr_ldap_err_t) -> IO CInt)

module Bindings.APR.LDAP.Option
c'APR_LDAP_OPT_TLS :: (Num a) => a
c'APR_LDAP_OPT_TLS_CERT :: (Num a) => a
c'APR_LDAP_OPT_VERIFY_CERT :: (Num a) => a
c'APR_LDAP_OPT_REFERRALS :: (Num a) => a
c'APR_LDAP_OPT_REFHOPLIMIT :: (Num a) => a
c'APR_LDAP_CA_TYPE_UNKNOWN :: (Num a) => a
c'APR_LDAP_CA_TYPE_DER :: (Num a) => a
c'APR_LDAP_CA_TYPE_BASE64 :: (Num a) => a
c'APR_LDAP_CA_TYPE_SECMOD :: (Num a) => a
c'APR_LDAP_CERT_TYPE_UNKNOWN :: (Num a) => a
c'APR_LDAP_CERT_TYPE_DER :: (Num a) => a
c'APR_LDAP_CERT_TYPE_BASE64 :: (Num a) => a
c'APR_LDAP_CERT_TYPE_KEY3_DB :: (Num a) => a
c'APR_LDAP_CERT_TYPE_NICKNAME :: (Num a) => a
c'APR_LDAP_KEY_TYPE_UNKNOWN :: (Num a) => a
c'APR_LDAP_KEY_TYPE_DER :: (Num a) => a
c'APR_LDAP_KEY_TYPE_BASE64 :: (Num a) => a
c'APR_LDAP_CERT_TYPE_PFX :: (Num a) => a
c'APR_LDAP_KEY_TYPE_PFX :: (Num a) => a
c'APR_LDAP_CA_TYPE_CACERTDIR_BASE64 :: (Num a) => a
data C'apr_ldap_opt_tls_cert_t
C'apr_ldap_opt_tls_cert_t :: CInt -> Ptr CChar -> Ptr CChar -> C'apr_ldap_opt_tls_cert_t
c'apr_ldap_opt_tls_cert_t'type :: C'apr_ldap_opt_tls_cert_t -> CInt
c'apr_ldap_opt_tls_cert_t'path :: C'apr_ldap_opt_tls_cert_t -> Ptr CChar
c'apr_ldap_opt_tls_cert_t'password :: C'apr_ldap_opt_tls_cert_t -> Ptr CChar
c'APR_LDAP_NONE :: (Num a) => a
c'APR_LDAP_SSL :: (Num a) => a
c'APR_LDAP_STARTTLS :: (Num a) => a
c'APR_LDAP_STOPTLS :: (Num a) => a
c'apr_ldap_get_option :: Ptr C'apr_pool_t -> Ptr C'LDAP -> CInt -> Ptr () -> Ptr (Ptr C'apr_ldap_err_t) -> IO CInt
c'apr_ldap_set_option :: Ptr C'apr_pool_t -> Ptr C'LDAP -> CInt -> Ptr () -> Ptr (Ptr C'apr_ldap_err_t) -> IO CInt
p'apr_ldap_get_option :: FunPtr (Ptr C'apr_pool_t -> Ptr C'LDAP -> CInt -> Ptr () -> Ptr (Ptr C'apr_ldap_err_t) -> IO CInt)
p'apr_ldap_set_option :: FunPtr (Ptr C'apr_pool_t -> Ptr C'LDAP -> CInt -> Ptr () -> Ptr (Ptr C'apr_ldap_err_t) -> IO CInt)
instance Eq C'apr_ldap_opt_tls_cert_t
instance Show C'apr_ldap_opt_tls_cert_t
instance Storable C'apr_ldap_opt_tls_cert_t

module Bindings.APR.LDAP.Rebind
c'apr_ldap_rebind_add :: Ptr C'apr_pool_t -> Ptr C'LDAP -> Ptr CChar -> Ptr CChar -> IO C'apr_status_t
c'apr_ldap_rebind_remove :: Ptr C'LDAP -> IO C'apr_status_t
p'apr_ldap_rebind_add :: FunPtr (Ptr C'apr_pool_t -> Ptr C'LDAP -> Ptr CChar -> Ptr CChar -> IO C'apr_status_t)
p'apr_ldap_rebind_remove :: FunPtr (Ptr C'LDAP -> IO C'apr_status_t)

module Bindings.APR.LDAP.URL
data C'apr_ldap_url_desc_t
C'apr_ldap_url_desc_t :: Ptr C'apr_ldap_url_desc_t -> Ptr CChar -> Ptr CChar -> CInt -> Ptr CChar -> Ptr (Ptr CChar) -> CInt -> Ptr CChar -> Ptr (Ptr CChar) -> CInt -> C'apr_ldap_url_desc_t
c'apr_ldap_url_desc_t'lud_next :: C'apr_ldap_url_desc_t -> Ptr C'apr_ldap_url_desc_t
c'apr_ldap_url_desc_t'lud_scheme :: C'apr_ldap_url_desc_t -> Ptr CChar
c'apr_ldap_url_desc_t'lud_host :: C'apr_ldap_url_desc_t -> Ptr CChar
c'apr_ldap_url_desc_t'lud_port :: C'apr_ldap_url_desc_t -> CInt
c'apr_ldap_url_desc_t'lud_dn :: C'apr_ldap_url_desc_t -> Ptr CChar
c'apr_ldap_url_desc_t'lud_attrs :: C'apr_ldap_url_desc_t -> Ptr (Ptr CChar)
c'apr_ldap_url_desc_t'lud_scope :: C'apr_ldap_url_desc_t -> CInt
c'apr_ldap_url_desc_t'lud_filter :: C'apr_ldap_url_desc_t -> Ptr CChar
c'apr_ldap_url_desc_t'lud_exts :: C'apr_ldap_url_desc_t -> Ptr (Ptr CChar)
c'apr_ldap_url_desc_t'lud_crit_exts :: C'apr_ldap_url_desc_t -> CInt
c'APR_LDAP_URL_SUCCESS :: (Num a) => a
c'APR_LDAP_URL_ERR_MEM :: (Num a) => a
c'APR_LDAP_URL_ERR_PARAM :: (Num a) => a
c'APR_LDAP_URL_ERR_BADSCHEME :: (Num a) => a
c'APR_LDAP_URL_ERR_BADENCLOSURE :: (Num a) => a
c'APR_LDAP_URL_ERR_BADURL :: (Num a) => a
c'APR_LDAP_URL_ERR_BADHOST :: (Num a) => a
c'APR_LDAP_URL_ERR_BADATTRS :: (Num a) => a
c'APR_LDAP_URL_ERR_BADSCOPE :: (Num a) => a
c'APR_LDAP_URL_ERR_BADFILTER :: (Num a) => a
c'APR_LDAP_URL_ERR_BADEXTS :: (Num a) => a
c'apr_ldap_is_ldap_url :: Ptr CChar -> IO CInt
c'apr_ldap_is_ldaps_url :: Ptr CChar -> IO CInt
c'apr_ldap_is_ldapi_url :: Ptr CChar -> IO CInt
p'apr_ldap_is_ldap_url :: FunPtr (Ptr CChar -> IO CInt)
p'apr_ldap_is_ldaps_url :: FunPtr (Ptr CChar -> IO CInt)
c'apr_ldap_url_parse_ext :: Ptr C'apr_pool_t -> Ptr CChar -> Ptr (Ptr C'apr_ldap_url_desc_t) -> Ptr (Ptr C'apr_ldap_err_t) -> IO CInt
p'apr_ldap_is_ldapi_url :: FunPtr (Ptr CChar -> IO CInt)
c'apr_ldap_url_parse :: Ptr C'apr_pool_t -> Ptr CChar -> Ptr (Ptr C'apr_ldap_url_desc_t) -> Ptr (Ptr C'apr_ldap_err_t) -> IO CInt
p'apr_ldap_url_parse_ext :: FunPtr (Ptr C'apr_pool_t -> Ptr CChar -> Ptr (Ptr C'apr_ldap_url_desc_t) -> Ptr (Ptr C'apr_ldap_err_t) -> IO CInt)
p'apr_ldap_url_parse :: FunPtr (Ptr C'apr_pool_t -> Ptr CChar -> Ptr (Ptr C'apr_ldap_url_desc_t) -> Ptr (Ptr C'apr_ldap_err_t) -> IO CInt)
instance Eq C'apr_ldap_url_desc_t
instance Show C'apr_ldap_url_desc_t
instance Storable C'apr_ldap_url_desc_t

module Bindings.APR.Hooks
c'APR_HOOK_REALLY_FIRST :: (Num a) => a
c'APR_HOOK_FIRST :: (Num a) => a
c'APR_HOOK_MIDDLE :: (Num a) => a
c'APR_HOOK_LAST :: (Num a) => a
c'APR_HOOK_REALLY_LAST :: (Num a) => a
p'apr_hook_global_pool :: Ptr (Ptr C'apr_pool_t)
p'apr_hook_debug_enabled :: Ptr (CInt)
p'apr_hook_debug_current :: Ptr (Ptr CChar)
c'apr_hook_sort_register :: Ptr CChar -> Ptr (Ptr C'apr_array_header_t) -> IO ()
c'apr_hook_sort_all :: Ptr ()
c'apr_hook_debug_show :: Ptr CChar -> Ptr (Ptr CChar) -> Ptr (Ptr CChar) -> IO ()
p'apr_hook_sort_register :: FunPtr (Ptr CChar -> Ptr (Ptr C'apr_array_header_t) -> IO ())
c'apr_hook_deregister_all :: Ptr ()
p'apr_hook_sort_all :: FunPtr (Ptr ())
p'apr_hook_debug_show :: FunPtr (Ptr CChar -> Ptr (Ptr CChar) -> Ptr (Ptr CChar) -> IO ())
p'apr_hook_deregister_all :: FunPtr (Ptr ())

module Bindings.APR.DBM
data C'apr_dbm_t
C'apr_dbm_t :: C'apr_dbm_t
data C'apr_datum_t
C'apr_datum_t :: Ptr CChar -> C'apr_size_t -> C'apr_datum_t
c'apr_datum_t'dptr :: C'apr_datum_t -> Ptr CChar
c'apr_datum_t'dsize :: C'apr_datum_t -> C'apr_size_t
c'APR_DBM_READONLY :: (Num a) => a
c'APR_DBM_READWRITE :: (Num a) => a
c'APR_DBM_RWCREATE :: (Num a) => a
c'APR_DBM_RWTRUNC :: (Num a) => a
c'apr_dbm_open_ex :: Ptr (Ptr C'apr_dbm_t) -> Ptr CChar -> Ptr CChar -> C'apr_int32_t -> C'apr_fileperms_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_dbm_open :: Ptr (Ptr C'apr_dbm_t) -> Ptr CChar -> C'apr_int32_t -> C'apr_fileperms_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_dbm_close :: Ptr C'apr_dbm_t -> IO ()
p'apr_dbm_open_ex :: FunPtr (Ptr (Ptr C'apr_dbm_t) -> Ptr CChar -> Ptr CChar -> C'apr_int32_t -> C'apr_fileperms_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_dbm_fetch :: Ptr C'apr_dbm_t -> Ptr C'apr_datum_t -> Ptr C'apr_datum_t -> IO C'apr_status_t
p'apr_dbm_open :: FunPtr (Ptr (Ptr C'apr_dbm_t) -> Ptr CChar -> C'apr_int32_t -> C'apr_fileperms_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
p'apr_dbm_close :: FunPtr (Ptr C'apr_dbm_t -> IO ())
c'apr_dbm_store :: Ptr C'apr_dbm_t -> Ptr C'apr_datum_t -> Ptr C'apr_datum_t -> IO C'apr_status_t
c'apr_dbm_delete :: Ptr C'apr_dbm_t -> Ptr C'apr_datum_t -> IO C'apr_status_t
c'apr_dbm_exists :: Ptr C'apr_dbm_t -> Ptr C'apr_datum_t -> IO CInt
c'apr_dbm_firstkey :: Ptr C'apr_dbm_t -> Ptr C'apr_datum_t -> IO C'apr_status_t
c'apr_dbm_nextkey :: Ptr C'apr_dbm_t -> Ptr C'apr_datum_t -> IO C'apr_status_t
c'apr_dbm_freedatum :: Ptr C'apr_dbm_t -> Ptr C'apr_datum_t -> IO ()
p'apr_dbm_firstkey :: FunPtr (Ptr C'apr_dbm_t -> Ptr C'apr_datum_t -> IO C'apr_status_t)
p'apr_dbm_nextkey :: FunPtr (Ptr C'apr_dbm_t -> Ptr C'apr_datum_t -> IO C'apr_status_t)
c'apr_dbm_geterror :: Ptr C'apr_dbm_t -> Ptr CInt -> Ptr CChar -> C'apr_size_t -> IO (Ptr CChar)
c'apr_dbm_get_usednames_ex :: Ptr C'apr_pool_t -> Ptr CChar -> Ptr CChar -> Ptr (Ptr CChar) -> Ptr (Ptr CChar) -> IO C'apr_status_t
c'apr_dbm_get_usednames :: Ptr C'apr_pool_t -> Ptr CChar -> Ptr (Ptr CChar) -> Ptr (Ptr CChar) -> IO ()
p'apr_dbm_geterror :: FunPtr (Ptr C'apr_dbm_t -> Ptr CInt -> Ptr CChar -> C'apr_size_t -> IO (Ptr CChar))
p'apr_dbm_get_usednames_ex :: FunPtr (Ptr C'apr_pool_t -> Ptr CChar -> Ptr CChar -> Ptr (Ptr CChar) -> Ptr (Ptr CChar) -> IO C'apr_status_t)
p'apr_dbm_get_usednames :: FunPtr (Ptr C'apr_pool_t -> Ptr CChar -> Ptr (Ptr CChar) -> Ptr (Ptr CChar) -> IO ())
instance Eq C'apr_datum_t
instance Show C'apr_datum_t
instance Storable C'apr_datum_t

module Bindings.APR.DBD
type C'apr_dbd_type_e = CUInt
c'APR_DBD_TYPE_NONE :: (Num a) => a
c'APR_DBD_TYPE_TINY :: (Num a) => a
c'APR_DBD_TYPE_UTINY :: (Num a) => a
c'APR_DBD_TYPE_SHORT :: (Num a) => a
c'APR_DBD_TYPE_USHORT :: (Num a) => a
c'APR_DBD_TYPE_INT :: (Num a) => a
c'APR_DBD_TYPE_UINT :: (Num a) => a
c'APR_DBD_TYPE_LONG :: (Num a) => a
c'APR_DBD_TYPE_ULONG :: (Num a) => a
c'APR_DBD_TYPE_LONGLONG :: (Num a) => a
c'APR_DBD_TYPE_ULONGLONG :: (Num a) => a
c'APR_DBD_TYPE_FLOAT :: (Num a) => a
c'APR_DBD_TYPE_DOUBLE :: (Num a) => a
c'APR_DBD_TYPE_STRING :: (Num a) => a
c'APR_DBD_TYPE_TEXT :: (Num a) => a
c'APR_DBD_TYPE_TIME :: (Num a) => a
c'APR_DBD_TYPE_DATE :: (Num a) => a
c'APR_DBD_TYPE_DATETIME :: (Num a) => a
c'APR_DBD_TYPE_TIMESTAMP :: (Num a) => a
c'APR_DBD_TYPE_ZTIMESTAMP :: (Num a) => a
c'APR_DBD_TYPE_BLOB :: (Num a) => a
c'APR_DBD_TYPE_CLOB :: (Num a) => a
c'APR_DBD_TYPE_NULL :: (Num a) => a
data C'apr_dbd_driver_t
C'apr_dbd_driver_t :: C'apr_dbd_driver_t
data C'apr_dbd_t
C'apr_dbd_t :: C'apr_dbd_t
data C'apr_dbd_transaction_t
C'apr_dbd_transaction_t :: C'apr_dbd_transaction_t
data C'apr_dbd_results_t
C'apr_dbd_results_t :: C'apr_dbd_results_t
data C'apr_dbd_row_t
C'apr_dbd_row_t :: C'apr_dbd_row_t
data C'apr_dbd_prepared_t
C'apr_dbd_prepared_t :: C'apr_dbd_prepared_t
c'apr_dbd_init :: Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_dbd_get_driver :: Ptr C'apr_pool_t -> Ptr CChar -> Ptr (Ptr C'apr_dbd_driver_t) -> IO C'apr_status_t
p'apr_dbd_init :: FunPtr (Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_dbd_open_ex :: Ptr C'apr_dbd_driver_t -> Ptr C'apr_pool_t -> Ptr CChar -> Ptr (Ptr C'apr_dbd_t) -> Ptr (Ptr CChar) -> IO C'apr_status_t
p'apr_dbd_get_driver :: FunPtr (Ptr C'apr_pool_t -> Ptr CChar -> Ptr (Ptr C'apr_dbd_driver_t) -> IO C'apr_status_t)
c'apr_dbd_open :: Ptr C'apr_dbd_driver_t -> Ptr C'apr_pool_t -> Ptr CChar -> Ptr (Ptr C'apr_dbd_t) -> IO C'apr_status_t
c'apr_dbd_close :: Ptr C'apr_dbd_driver_t -> Ptr C'apr_dbd_t -> IO C'apr_status_t
p'apr_dbd_open_ex :: FunPtr (Ptr C'apr_dbd_driver_t -> Ptr C'apr_pool_t -> Ptr CChar -> Ptr (Ptr C'apr_dbd_t) -> Ptr (Ptr CChar) -> IO C'apr_status_t)
c'apr_dbd_name :: Ptr C'apr_dbd_driver_t -> IO (Ptr CChar)
p'apr_dbd_open :: FunPtr (Ptr C'apr_dbd_driver_t -> Ptr C'apr_pool_t -> Ptr CChar -> Ptr (Ptr C'apr_dbd_t) -> IO C'apr_status_t)
c'apr_dbd_native_handle :: Ptr C'apr_dbd_driver_t -> Ptr C'apr_dbd_t -> IO (Ptr ())
p'apr_dbd_close :: FunPtr (Ptr C'apr_dbd_driver_t -> Ptr C'apr_dbd_t -> IO C'apr_status_t)
p'apr_dbd_name :: FunPtr (Ptr C'apr_dbd_driver_t -> IO (Ptr CChar))
c'apr_dbd_check_conn :: Ptr C'apr_dbd_driver_t -> Ptr C'apr_pool_t -> Ptr C'apr_dbd_t -> IO CInt
p'apr_dbd_native_handle :: FunPtr (Ptr C'apr_dbd_driver_t -> Ptr C'apr_dbd_t -> IO (Ptr ()))
c'apr_dbd_set_dbname :: Ptr C'apr_dbd_driver_t -> Ptr C'apr_pool_t -> Ptr C'apr_dbd_t -> Ptr CChar -> IO CInt
p'apr_dbd_check_conn :: FunPtr (Ptr C'apr_dbd_driver_t -> Ptr C'apr_pool_t -> Ptr C'apr_dbd_t -> IO CInt)
p'apr_dbd_set_dbname :: FunPtr (Ptr C'apr_dbd_driver_t -> Ptr C'apr_pool_t -> Ptr C'apr_dbd_t -> Ptr CChar -> IO CInt)
c'apr_dbd_transaction_start :: Ptr C'apr_dbd_driver_t -> Ptr C'apr_pool_t -> Ptr C'apr_dbd_t -> Ptr (Ptr C'apr_dbd_transaction_t) -> IO CInt
c'apr_dbd_transaction_end :: Ptr C'apr_dbd_driver_t -> Ptr C'apr_pool_t -> Ptr C'apr_dbd_transaction_t -> IO CInt
p'apr_dbd_transaction_start :: FunPtr (Ptr C'apr_dbd_driver_t -> Ptr C'apr_pool_t -> Ptr C'apr_dbd_t -> Ptr (Ptr C'apr_dbd_transaction_t) -> IO CInt)
p'apr_dbd_transaction_end :: FunPtr (Ptr C'apr_dbd_driver_t -> Ptr C'apr_pool_t -> Ptr C'apr_dbd_transaction_t -> IO CInt)
c'APR_DBD_TRANSACTION_COMMIT :: (Num a) => a
c'APR_DBD_TRANSACTION_ROLLBACK :: (Num a) => a
c'APR_DBD_TRANSACTION_IGNORE_ERRORS :: (Num a) => a
c'apr_dbd_transaction_mode_get :: Ptr C'apr_dbd_driver_t -> Ptr C'apr_dbd_transaction_t -> IO CInt
c'apr_dbd_transaction_mode_set :: Ptr C'apr_dbd_driver_t -> Ptr C'apr_dbd_transaction_t -> CInt -> IO CInt
p'apr_dbd_transaction_mode_get :: FunPtr (Ptr C'apr_dbd_driver_t -> Ptr C'apr_dbd_transaction_t -> IO CInt)
c'apr_dbd_query :: Ptr C'apr_dbd_driver_t -> Ptr C'apr_dbd_t -> Ptr CInt -> Ptr CChar -> IO CInt
p'apr_dbd_transaction_mode_set :: FunPtr (Ptr C'apr_dbd_driver_t -> Ptr C'apr_dbd_transaction_t -> CInt -> IO CInt)
c'apr_dbd_select :: Ptr C'apr_dbd_driver_t -> Ptr C'apr_pool_t -> Ptr C'apr_dbd_t -> Ptr (Ptr C'apr_dbd_results_t) -> Ptr CChar -> CInt -> IO CInt
c'apr_dbd_num_cols :: Ptr C'apr_dbd_driver_t -> Ptr C'apr_dbd_results_t -> IO CInt
p'apr_dbd_query :: FunPtr (Ptr C'apr_dbd_driver_t -> Ptr C'apr_dbd_t -> Ptr CInt -> Ptr CChar -> IO CInt)
c'apr_dbd_num_tuples :: Ptr C'apr_dbd_driver_t -> Ptr C'apr_dbd_results_t -> IO CInt
p'apr_dbd_select :: FunPtr (Ptr C'apr_dbd_driver_t -> Ptr C'apr_pool_t -> Ptr C'apr_dbd_t -> Ptr (Ptr C'apr_dbd_results_t) -> Ptr CChar -> CInt -> IO CInt)
p'apr_dbd_num_cols :: FunPtr (Ptr C'apr_dbd_driver_t -> Ptr C'apr_dbd_results_t -> IO CInt)
c'apr_dbd_get_row :: Ptr C'apr_dbd_driver_t -> Ptr C'apr_pool_t -> Ptr C'apr_dbd_results_t -> Ptr (Ptr C'apr_dbd_row_t) -> CInt -> IO CInt
p'apr_dbd_num_tuples :: FunPtr (Ptr C'apr_dbd_driver_t -> Ptr C'apr_dbd_results_t -> IO CInt)
c'apr_dbd_get_entry :: Ptr C'apr_dbd_driver_t -> Ptr C'apr_dbd_row_t -> CInt -> IO (Ptr CChar)
c'apr_dbd_get_name :: Ptr C'apr_dbd_driver_t -> Ptr C'apr_dbd_results_t -> CInt -> IO (Ptr CChar)
p'apr_dbd_get_row :: FunPtr (Ptr C'apr_dbd_driver_t -> Ptr C'apr_pool_t -> Ptr C'apr_dbd_results_t -> Ptr (Ptr C'apr_dbd_row_t) -> CInt -> IO CInt)
c'apr_dbd_error :: Ptr C'apr_dbd_driver_t -> Ptr C'apr_dbd_t -> CInt -> IO (Ptr CChar)
p'apr_dbd_get_entry :: FunPtr (Ptr C'apr_dbd_driver_t -> Ptr C'apr_dbd_row_t -> CInt -> IO (Ptr CChar))
p'apr_dbd_get_name :: FunPtr (Ptr C'apr_dbd_driver_t -> Ptr C'apr_dbd_results_t -> CInt -> IO (Ptr CChar))
c'apr_dbd_escape :: Ptr C'apr_dbd_driver_t -> Ptr C'apr_dbd_t -> Ptr CChar -> Ptr C'apr_dbd_t -> IO (Ptr CChar)
p'apr_dbd_error :: FunPtr (Ptr C'apr_dbd_driver_t -> Ptr C'apr_dbd_t -> CInt -> IO (Ptr CChar))
p'apr_dbd_escape :: FunPtr (Ptr C'apr_dbd_driver_t -> Ptr C'apr_dbd_t -> Ptr CChar -> Ptr C'apr_dbd_t -> IO (Ptr CChar))
c'apr_dbd_prepare :: Ptr C'apr_dbd_driver_t -> Ptr C'apr_pool_t -> Ptr C'apr_dbd_t -> Ptr CChar -> Ptr CChar -> Ptr (Ptr C'apr_dbd_prepared_t) -> IO CInt
c'apr_dbd_pquery :: Ptr C'apr_dbd_driver_t -> Ptr C'apr_pool_t -> Ptr C'apr_dbd_t -> Ptr CInt -> Ptr C'apr_dbd_prepared_t -> CInt -> Ptr (Ptr CChar) -> IO CInt
p'apr_dbd_prepare :: FunPtr (Ptr C'apr_dbd_driver_t -> Ptr C'apr_pool_t -> Ptr C'apr_dbd_t -> Ptr CChar -> Ptr CChar -> Ptr (Ptr C'apr_dbd_prepared_t) -> IO CInt)
c'apr_dbd_pselect :: Ptr C'apr_dbd_driver_t -> Ptr C'apr_pool_t -> Ptr C'apr_dbd_t -> Ptr (Ptr C'apr_dbd_results_t) -> Ptr C'apr_dbd_prepared_t -> CInt -> CInt -> Ptr (Ptr CChar) -> IO CInt
p'apr_dbd_pquery :: FunPtr (Ptr C'apr_dbd_driver_t -> Ptr C'apr_pool_t -> Ptr C'apr_dbd_t -> Ptr CInt -> Ptr C'apr_dbd_prepared_t -> CInt -> Ptr (Ptr CChar) -> IO CInt)
p'apr_dbd_pselect :: FunPtr (Ptr C'apr_dbd_driver_t -> Ptr C'apr_pool_t -> Ptr C'apr_dbd_t -> Ptr (Ptr C'apr_dbd_results_t) -> Ptr C'apr_dbd_prepared_t -> CInt -> CInt -> Ptr (Ptr CChar) -> IO CInt)
c'apr_dbd_pbquery :: Ptr C'apr_dbd_driver_t -> Ptr C'apr_pool_t -> Ptr C'apr_dbd_t -> Ptr CInt -> Ptr C'apr_dbd_prepared_t -> Ptr (Ptr ()) -> IO CInt
c'apr_dbd_pbselect :: Ptr C'apr_dbd_driver_t -> Ptr C'apr_pool_t -> Ptr C'apr_dbd_t -> Ptr (Ptr C'apr_dbd_results_t) -> Ptr C'apr_dbd_prepared_t -> CInt -> Ptr (Ptr ()) -> IO CInt
p'apr_dbd_pbquery :: FunPtr (Ptr C'apr_dbd_driver_t -> Ptr C'apr_pool_t -> Ptr C'apr_dbd_t -> Ptr CInt -> Ptr C'apr_dbd_prepared_t -> Ptr (Ptr ()) -> IO CInt)
p'apr_dbd_pbselect :: FunPtr (Ptr C'apr_dbd_driver_t -> Ptr C'apr_pool_t -> Ptr C'apr_dbd_t -> Ptr (Ptr C'apr_dbd_results_t) -> Ptr C'apr_dbd_prepared_t -> CInt -> Ptr (Ptr ()) -> IO CInt)
c'apr_dbd_datum_get :: Ptr C'apr_dbd_driver_t -> Ptr C'apr_dbd_row_t -> CInt -> C'apr_dbd_type_e -> Ptr () -> IO C'apr_status_t
p'apr_dbd_datum_get :: FunPtr (Ptr C'apr_dbd_driver_t -> Ptr C'apr_dbd_row_t -> CInt -> C'apr_dbd_type_e -> Ptr () -> IO C'apr_status_t)

module Bindings.APR.Date
c'APR_DATE_BAD :: (Num a) => a
c'apr_date_checkmask :: Ptr CChar -> Ptr CChar -> IO CInt
c'apr_date_parse_http :: Ptr CChar -> IO C'apr_time_t
c'apr_date_parse_rfc :: Ptr CChar -> IO C'apr_time_t
p'apr_date_checkmask :: FunPtr (Ptr CChar -> Ptr CChar -> IO CInt)
p'apr_date_parse_http :: FunPtr (Ptr CChar -> IO C'apr_time_t)
p'apr_date_parse_rfc :: FunPtr (Ptr CChar -> IO C'apr_time_t)

module Bindings.APR.Buckets
c'APR_BUCKET_BUFF_SIZE :: (Num a) => a
type C'apr_read_type_e = CUInt
c'APR_BLOCK_READ :: (Num a) => a
c'APR_NONBLOCK_READ :: (Num a) => a
data C'apr_bucket_alloc_t
C'apr_bucket_alloc_t :: C'apr_bucket_alloc_t
c'APR_BUCKET_DATA :: (Num a) => a
c'APR_BUCKET_METADATA :: (Num a) => a
data C'apr_bucket_type_t
C'apr_bucket_type_t :: Ptr CChar -> CInt -> CInt -> FunPtr (Ptr () -> IO ()) -> FunPtr (Ptr C'apr_bucket -> Ptr (Ptr CChar) -> Ptr C'apr_size_t -> C'apr_read_type_e -> IO C'apr_status_t) -> FunPtr (Ptr C'apr_bucket -> Ptr C'apr_pool_t -> IO C'apr_status_t) -> FunPtr (Ptr C'apr_bucket -> C'apr_size_t -> IO C'apr_status_t) -> FunPtr (Ptr C'apr_bucket -> Ptr (Ptr C'apr_bucket) -> IO C'apr_status_t) -> C'apr_bucket_type_t
c'apr_bucket_type_t'name :: C'apr_bucket_type_t -> Ptr CChar
c'apr_bucket_type_t'num_func :: C'apr_bucket_type_t -> CInt
c'apr_bucket_type_t'is_metadata :: C'apr_bucket_type_t -> CInt
c'apr_bucket_type_t'destroy :: C'apr_bucket_type_t -> FunPtr (Ptr () -> IO ())
c'apr_bucket_type_t'read :: C'apr_bucket_type_t -> FunPtr (Ptr C'apr_bucket -> Ptr (Ptr CChar) -> Ptr C'apr_size_t -> C'apr_read_type_e -> IO C'apr_status_t)
c'apr_bucket_type_t'setaside :: C'apr_bucket_type_t -> FunPtr (Ptr C'apr_bucket -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_bucket_type_t'split :: C'apr_bucket_type_t -> FunPtr (Ptr C'apr_bucket -> C'apr_size_t -> IO C'apr_status_t)
c'apr_bucket_type_t'copy :: C'apr_bucket_type_t -> FunPtr (Ptr C'apr_bucket -> Ptr (Ptr C'apr_bucket) -> IO C'apr_status_t)
data C'apr_bucket
C'apr_bucket :: Ptr C'apr_bucket -> Ptr C'apr_bucket -> Ptr C'apr_bucket_type_t -> C'apr_size_t -> C'apr_off_t -> Ptr () -> FunPtr (Ptr () -> IO ()) -> Ptr C'apr_bucket_alloc_t -> C'apr_bucket
c'apr_bucket'link'next :: C'apr_bucket -> Ptr C'apr_bucket
c'apr_bucket'link'prev :: C'apr_bucket -> Ptr C'apr_bucket
c'apr_bucket'type :: C'apr_bucket -> Ptr C'apr_bucket_type_t
c'apr_bucket'length :: C'apr_bucket -> C'apr_size_t
c'apr_bucket'start :: C'apr_bucket -> C'apr_off_t
c'apr_bucket'data :: C'apr_bucket -> Ptr ()
c'apr_bucket'free :: C'apr_bucket -> FunPtr (Ptr () -> IO ())
c'apr_bucket'list :: C'apr_bucket -> Ptr C'apr_bucket_alloc_t
data C'apr_bucket_list
C'apr_bucket_list :: Ptr C'apr_bucket -> Ptr C'apr_bucket -> C'apr_bucket_list
c'apr_bucket_list'next :: C'apr_bucket_list -> Ptr C'apr_bucket
c'apr_bucket_list'prev :: C'apr_bucket_list -> Ptr C'apr_bucket
data C'apr_bucket_brigade
C'apr_bucket_brigade :: Ptr C'apr_pool_t -> C'apr_bucket_list -> Ptr C'apr_bucket_alloc_t -> C'apr_bucket_brigade
c'apr_bucket_brigade'p :: C'apr_bucket_brigade -> Ptr C'apr_pool_t
c'apr_bucket_brigade'list :: C'apr_bucket_brigade -> C'apr_bucket_list
c'apr_bucket_brigade'bucket_alloc :: C'apr_bucket_brigade -> Ptr C'apr_bucket_alloc_t
type C'apr_brigade_flush = FunPtr (Ptr C'apr_bucket_brigade -> Ptr () -> IO C'apr_status_t)
mk'apr_brigade_flush :: (Ptr C'apr_bucket_brigade -> Ptr () -> IO C'apr_status_t) -> IO C'apr_brigade_flush
c'APR_BRIGADE_CHECK_CONSISTENCY :: Ptr C'apr_bucket_brigade -> IO ()
c'APR_BUCKET_CHECK_CONSISTENCY :: Ptr C'apr_bucket -> IO ()
mK'apr_brigade_flush :: C'apr_brigade_flush -> (Ptr C'apr_bucket_brigade -> Ptr () -> IO C'apr_status_t)
c'APR_BRIGADE_SENTINEL :: Ptr C'apr_bucket_brigade -> IO (Ptr C'apr_bucket)
c'APR_BRIGADE_EMPTY :: Ptr C'apr_bucket_brigade -> IO CInt
c'APR_BRIGADE_FIRST :: Ptr C'apr_bucket_brigade -> IO (Ptr C'apr_bucket)
c'APR_BRIGADE_LAST :: Ptr C'apr_bucket_brigade -> IO (Ptr C'apr_bucket)
c'APR_BRIGADE_INSERT_HEAD :: Ptr C'apr_bucket_brigade -> Ptr C'apr_bucket -> IO ()
c'APR_BRIGADE_INSERT_TAIL :: Ptr C'apr_bucket_brigade -> Ptr C'apr_bucket -> IO ()
c'APR_BRIGADE_CONCAT :: Ptr C'apr_bucket_brigade -> Ptr C'apr_bucket_brigade -> IO ()
c'APR_BRIGADE_PREPEND :: Ptr C'apr_bucket_brigade -> Ptr C'apr_bucket_brigade -> IO ()
c'APR_BUCKET_INSERT_BEFORE :: Ptr C'apr_bucket -> Ptr C'apr_bucket -> IO ()
c'APR_BUCKET_INSERT_AFTER :: Ptr C'apr_bucket -> Ptr C'apr_bucket -> IO ()
c'APR_BUCKET_NEXT :: Ptr C'apr_bucket -> IO (Ptr C'apr_bucket)
c'APR_BUCKET_PREV :: Ptr C'apr_bucket -> IO (Ptr C'apr_bucket)
c'APR_BUCKET_REMOVE :: Ptr C'apr_bucket -> IO ()
c'APR_BUCKET_INIT :: Ptr C'apr_bucket -> IO ()
c'APR_BUCKET_IS_METADATA :: Ptr C'apr_bucket -> IO CInt
c'APR_BUCKET_IS_FLUSH :: Ptr C'apr_bucket -> IO CInt
c'APR_BUCKET_IS_EOS :: Ptr C'apr_bucket -> IO CInt
c'APR_BUCKET_IS_FILE :: Ptr C'apr_bucket -> IO CInt
c'APR_BUCKET_IS_PIPE :: Ptr C'apr_bucket -> IO CInt
c'APR_BUCKET_IS_SOCKET :: Ptr C'apr_bucket -> IO CInt
c'APR_BUCKET_IS_HEAP :: Ptr C'apr_bucket -> IO CInt
c'APR_BUCKET_IS_TRANSIENT :: Ptr C'apr_bucket -> IO CInt
c'APR_BUCKET_IS_IMMORTAL :: Ptr C'apr_bucket -> IO CInt
c'APR_BUCKET_IS_MMAP :: Ptr C'apr_bucket -> IO CInt
c'APR_BUCKET_IS_POOL :: Ptr C'apr_bucket -> IO CInt
data C'apr_bucket_refcount
C'apr_bucket_refcount :: CInt -> C'apr_bucket_refcount
c'apr_bucket_refcount'refcount :: C'apr_bucket_refcount -> CInt
data C'apr_bucket_heap
C'apr_bucket_heap :: C'apr_bucket_refcount -> Ptr CChar -> C'apr_size_t -> FunPtr (Ptr () -> IO ()) -> C'apr_bucket_heap
c'apr_bucket_heap'refcount :: C'apr_bucket_heap -> C'apr_bucket_refcount
c'apr_bucket_heap'base :: C'apr_bucket_heap -> Ptr CChar
c'apr_bucket_heap'alloc_len :: C'apr_bucket_heap -> C'apr_size_t
c'apr_bucket_heap'free_func :: C'apr_bucket_heap -> FunPtr (Ptr () -> IO ())
data C'apr_bucket_pool
C'apr_bucket_pool :: C'apr_bucket_heap -> Ptr CChar -> Ptr C'apr_pool_t -> Ptr C'apr_bucket_alloc_t -> C'apr_bucket_pool
c'apr_bucket_pool'heap :: C'apr_bucket_pool -> C'apr_bucket_heap
c'apr_bucket_pool'base :: C'apr_bucket_pool -> Ptr CChar
c'apr_bucket_pool'pool :: C'apr_bucket_pool -> Ptr C'apr_pool_t
c'apr_bucket_pool'list :: C'apr_bucket_pool -> Ptr C'apr_bucket_alloc_t
data C'apr_bucket_mmap
C'apr_bucket_mmap :: C'apr_bucket_refcount -> C'apr_mmap_t -> C'apr_bucket_mmap
c'apr_bucket_mmap'refcount :: C'apr_bucket_mmap -> C'apr_bucket_refcount
c'apr_bucket_mmap'mmap :: C'apr_bucket_mmap -> C'apr_mmap_t
data C'apr_bucket_file
C'apr_bucket_file :: C'apr_bucket_refcount -> Ptr C'apr_file_t -> Ptr C'apr_pool_t -> CInt -> C'apr_bucket_file
c'apr_bucket_file'refcount :: C'apr_bucket_file -> C'apr_bucket_refcount
c'apr_bucket_file'fd :: C'apr_bucket_file -> Ptr C'apr_file_t
c'apr_bucket_file'readpool :: C'apr_bucket_file -> Ptr C'apr_pool_t
c'apr_bucket_file'can_mmap :: C'apr_bucket_file -> CInt
data C'apr_bucket_structs
C'apr_bucket_structs :: C'apr_bucket -> C'apr_bucket_heap -> C'apr_bucket_pool -> C'apr_bucket_mmap -> C'apr_bucket_file -> C'apr_bucket_structs
c'apr_bucket_structs'b :: C'apr_bucket_structs -> C'apr_bucket
c'apr_bucket_structs'heap :: C'apr_bucket_structs -> C'apr_bucket_heap
c'apr_bucket_structs'pool :: C'apr_bucket_structs -> C'apr_bucket_pool
c'apr_bucket_structs'mmap :: C'apr_bucket_structs -> C'apr_bucket_mmap
c'apr_bucket_structs'file :: C'apr_bucket_structs -> C'apr_bucket_file
c'APR_BUCKET_ALLOC_SIZE :: (Num a) => a
c'apr_brigade_create :: Ptr C'apr_pool_t -> Ptr C'apr_bucket_alloc_t -> IO (Ptr C'apr_bucket_brigade)
c'apr_brigade_destroy :: Ptr C'apr_bucket_brigade -> IO C'apr_status_t
c'apr_brigade_cleanup :: Ptr () -> IO C'apr_status_t
p'apr_brigade_create :: FunPtr (Ptr C'apr_pool_t -> Ptr C'apr_bucket_alloc_t -> IO (Ptr C'apr_bucket_brigade))
p'apr_brigade_destroy :: FunPtr (Ptr C'apr_bucket_brigade -> IO C'apr_status_t)
c'apr_brigade_split_ex :: Ptr C'apr_bucket_brigade -> Ptr C'apr_bucket -> Ptr C'apr_bucket_brigade -> IO (Ptr C'apr_bucket_brigade)
p'apr_brigade_cleanup :: FunPtr (Ptr () -> IO C'apr_status_t)
c'apr_brigade_split :: Ptr C'apr_bucket_brigade -> Ptr C'apr_bucket -> IO (Ptr C'apr_bucket_brigade)
c'apr_brigade_partition :: Ptr C'apr_bucket_brigade -> C'apr_off_t -> Ptr (Ptr C'apr_bucket) -> IO C'apr_status_t
p'apr_brigade_split_ex :: FunPtr (Ptr C'apr_bucket_brigade -> Ptr C'apr_bucket -> Ptr C'apr_bucket_brigade -> IO (Ptr C'apr_bucket_brigade))
c'apr_brigade_length :: Ptr C'apr_bucket_brigade -> CInt -> Ptr C'apr_off_t -> IO C'apr_status_t
p'apr_brigade_split :: FunPtr (Ptr C'apr_bucket_brigade -> Ptr C'apr_bucket -> IO (Ptr C'apr_bucket_brigade))
c'apr_brigade_flatten :: Ptr C'apr_bucket_brigade -> Ptr CChar -> Ptr C'apr_size_t -> IO C'apr_status_t
p'apr_brigade_partition :: FunPtr (Ptr C'apr_bucket_brigade -> C'apr_off_t -> Ptr (Ptr C'apr_bucket) -> IO C'apr_status_t)
u'apr_bucket_structs'b :: C'apr_bucket_structs -> C'apr_bucket -> IO C'apr_bucket_structs
p'apr_brigade_length :: FunPtr (Ptr C'apr_bucket_brigade -> CInt -> Ptr C'apr_off_t -> IO C'apr_status_t)
c'apr_brigade_pflatten :: Ptr C'apr_bucket_brigade -> Ptr (Ptr CChar) -> Ptr C'apr_size_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_brigade_flatten :: FunPtr (Ptr C'apr_bucket_brigade -> Ptr CChar -> Ptr C'apr_size_t -> IO C'apr_status_t)
c'apr_brigade_split_line :: Ptr C'apr_bucket_brigade -> Ptr C'apr_bucket_brigade -> C'apr_read_type_e -> C'apr_off_t -> IO C'apr_status_t
c'apr_brigade_to_iovec :: Ptr C'apr_bucket_brigade -> Ptr C'iovec -> Ptr CInt -> C'apr_status_t
p'apr_brigade_pflatten :: FunPtr (Ptr C'apr_bucket_brigade -> Ptr (Ptr CChar) -> Ptr C'apr_size_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
p'apr_brigade_split_line :: FunPtr (Ptr C'apr_bucket_brigade -> Ptr C'apr_bucket_brigade -> C'apr_read_type_e -> C'apr_off_t -> IO C'apr_status_t)
p'apr_brigade_to_iovec :: FunPtr (Ptr C'apr_bucket_brigade -> Ptr C'iovec -> Ptr CInt -> C'apr_status_t)
c'apr_brigade_write :: Ptr C'apr_bucket_brigade -> C'apr_brigade_flush -> Ptr () -> Ptr CChar -> C'apr_size_t -> IO C'apr_status_t
c'apr_brigade_writev :: Ptr C'apr_bucket_brigade -> C'apr_brigade_flush -> Ptr () -> Ptr C'iovec -> C'apr_size_t -> IO C'apr_status_t
c'apr_brigade_puts :: Ptr C'apr_bucket_brigade -> C'apr_brigade_flush -> Ptr () -> Ptr CChar -> IO C'apr_status_t
p'apr_brigade_write :: FunPtr (Ptr C'apr_bucket_brigade -> C'apr_brigade_flush -> Ptr () -> Ptr CChar -> C'apr_size_t -> IO C'apr_status_t)
c'apr_brigade_putc :: Ptr C'apr_bucket_brigade -> C'apr_brigade_flush -> Ptr () -> CChar -> IO C'apr_status_t
p'apr_brigade_writev :: FunPtr (Ptr C'apr_bucket_brigade -> C'apr_brigade_flush -> Ptr () -> Ptr C'iovec -> C'apr_size_t -> IO C'apr_status_t)
p'apr_brigade_puts :: FunPtr (Ptr C'apr_bucket_brigade -> C'apr_brigade_flush -> Ptr () -> Ptr CChar -> IO C'apr_status_t)
p'apr_brigade_putc :: FunPtr (Ptr C'apr_bucket_brigade -> C'apr_brigade_flush -> Ptr () -> CChar -> IO C'apr_status_t)
u'apr_bucket_structs'heap :: C'apr_bucket_structs -> C'apr_bucket_heap -> IO C'apr_bucket_structs
c'apr_brigade_insert_file :: Ptr C'apr_bucket_brigade -> Ptr C'apr_file_t -> C'apr_off_t -> C'apr_off_t -> Ptr C'apr_pool_t -> IO (Ptr C'apr_bucket)
c'apr_bucket_alloc_create :: Ptr C'apr_pool_t -> Ptr (C'apr_bucket_alloc_t)
p'apr_brigade_insert_file :: FunPtr (Ptr C'apr_bucket_brigade -> Ptr C'apr_file_t -> C'apr_off_t -> C'apr_off_t -> Ptr C'apr_pool_t -> IO (Ptr C'apr_bucket))
c'apr_bucket_alloc_create_ex :: Ptr C'apr_allocator_t -> Ptr (C'apr_bucket_alloc_t)
c'apr_bucket_alloc_destroy :: Ptr C'apr_bucket_alloc_t -> IO ()
p'apr_bucket_alloc_create :: FunPtr (Ptr C'apr_pool_t -> Ptr (C'apr_bucket_alloc_t))
c'apr_bucket_alloc :: C'apr_size_t -> Ptr C'apr_bucket_alloc_t -> IO (Ptr ())
p'apr_bucket_alloc_create_ex :: FunPtr (Ptr C'apr_allocator_t -> Ptr (C'apr_bucket_alloc_t))
c'apr_bucket_free :: Ptr () -> IO ()
p'apr_bucket_alloc_destroy :: FunPtr (Ptr C'apr_bucket_alloc_t -> IO ())
p'apr_bucket_alloc :: FunPtr (C'apr_size_t -> Ptr C'apr_bucket_alloc_t -> IO (Ptr ()))
p'apr_bucket_free :: FunPtr (Ptr () -> IO ())
c'apr_bucket_destroy :: Ptr C'apr_bucket -> IO ()
c'apr_bucket_delete :: Ptr C'apr_bucket -> IO ()
c'apr_bucket_read :: Ptr C'apr_bucket -> Ptr (Ptr CChar) -> Ptr C'apr_size_t -> C'apr_read_type_e -> IO C'apr_status_t
u'apr_bucket_structs'pool :: C'apr_bucket_structs -> C'apr_bucket_pool -> IO C'apr_bucket_structs
c'apr_bucket_setaside :: Ptr C'apr_bucket -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_bucket_split :: Ptr C'apr_bucket -> C'apr_size_t -> IO C'apr_status_t
c'apr_bucket_copy :: Ptr C'apr_bucket -> Ptr (Ptr C'apr_bucket) -> IO C'apr_status_t
c'apr_bucket_setaside_noop :: Ptr C'apr_bucket -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_bucket_setaside_notimpl :: Ptr C'apr_bucket -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_bucket_split_notimpl :: Ptr C'apr_bucket -> C'apr_size_t -> IO C'apr_status_t
p'apr_bucket_setaside_noop :: FunPtr (Ptr C'apr_bucket -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_bucket_copy_notimpl :: Ptr C'apr_bucket -> Ptr (Ptr C'apr_bucket) -> IO C'apr_status_t
p'apr_bucket_setaside_notimpl :: FunPtr (Ptr C'apr_bucket -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_bucket_destroy_noop :: Ptr () -> IO ()
p'apr_bucket_split_notimpl :: FunPtr (Ptr C'apr_bucket -> C'apr_size_t -> IO C'apr_status_t)
p'apr_bucket_copy_notimpl :: FunPtr (Ptr C'apr_bucket -> Ptr (Ptr C'apr_bucket) -> IO C'apr_status_t)
p'apr_bucket_destroy_noop :: FunPtr (Ptr () -> IO ())
p'apr_bucket_type_flush :: Ptr (C'apr_bucket_type_t)
u'apr_bucket_structs'mmap :: C'apr_bucket_structs -> C'apr_bucket_mmap -> IO C'apr_bucket_structs
p'apr_bucket_type_eos :: Ptr (C'apr_bucket_type_t)
p'apr_bucket_type_file :: Ptr (C'apr_bucket_type_t)
p'apr_bucket_type_heap :: Ptr (C'apr_bucket_type_t)
p'apr_bucket_type_mmap :: Ptr (C'apr_bucket_type_t)
p'apr_bucket_type_pool :: Ptr (C'apr_bucket_type_t)
p'apr_bucket_type_pipe :: Ptr (C'apr_bucket_type_t)
p'apr_bucket_type_immortal :: Ptr (C'apr_bucket_type_t)
p'apr_bucket_type_transient :: Ptr (C'apr_bucket_type_t)
p'apr_bucket_type_socket :: Ptr (C'apr_bucket_type_t)
u'apr_bucket_structs'file :: C'apr_bucket_structs -> C'apr_bucket_file -> IO C'apr_bucket_structs
c'apr_bucket_simple_split :: Ptr C'apr_bucket -> C'apr_size_t -> IO C'apr_status_t
c'apr_bucket_simple_copy :: Ptr C'apr_bucket -> Ptr (Ptr C'apr_bucket) -> IO C'apr_status_t
p'apr_bucket_simple_split :: FunPtr (Ptr C'apr_bucket -> C'apr_size_t -> IO C'apr_status_t)
p'apr_bucket_simple_copy :: FunPtr (Ptr C'apr_bucket -> Ptr (Ptr C'apr_bucket) -> IO C'apr_status_t)
c'apr_bucket_shared_make :: Ptr C'apr_bucket -> Ptr () -> C'apr_off_t -> C'apr_size_t -> IO (Ptr C'apr_bucket)
c'apr_bucket_shared_destroy :: Ptr () -> IO CInt
c'apr_bucket_shared_split :: Ptr C'apr_bucket -> C'apr_size_t -> IO C'apr_status_t
p'apr_bucket_shared_make :: FunPtr (Ptr C'apr_bucket -> Ptr () -> C'apr_off_t -> C'apr_size_t -> IO (Ptr C'apr_bucket))
p'apr_bucket_shared_destroy :: FunPtr (Ptr () -> IO CInt)
c'apr_bucket_shared_copy :: Ptr C'apr_bucket -> Ptr (Ptr C'apr_bucket) -> IO C'apr_status_t
p'apr_bucket_shared_split :: FunPtr (Ptr C'apr_bucket -> C'apr_size_t -> IO C'apr_status_t)
c'apr_bucket_eos_create :: Ptr C'apr_bucket_alloc_t -> IO (Ptr C'apr_bucket)
p'apr_bucket_shared_copy :: FunPtr (Ptr C'apr_bucket -> Ptr (Ptr C'apr_bucket) -> IO C'apr_status_t)
c'apr_bucket_eos_make :: Ptr C'apr_bucket -> IO (Ptr C'apr_bucket)
c'apr_bucket_flush_create :: Ptr C'apr_bucket_alloc_t -> IO (Ptr C'apr_bucket)
p'apr_bucket_eos_create :: FunPtr (Ptr C'apr_bucket_alloc_t -> IO (Ptr C'apr_bucket))
c'apr_bucket_flush_make :: Ptr C'apr_bucket -> IO (Ptr C'apr_bucket)
p'apr_bucket_eos_make :: FunPtr (Ptr C'apr_bucket -> IO (Ptr C'apr_bucket))
p'apr_bucket_flush_create :: FunPtr (Ptr C'apr_bucket_alloc_t -> IO (Ptr C'apr_bucket))
c'apr_bucket_immortal_create :: Ptr CChar -> C'apr_size_t -> Ptr C'apr_bucket_alloc_t -> IO (Ptr C'apr_bucket)
p'apr_bucket_flush_make :: FunPtr (Ptr C'apr_bucket -> IO (Ptr C'apr_bucket))
c'apr_bucket_immortal_make :: Ptr C'apr_bucket -> Ptr CChar -> C'apr_size_t -> IO (Ptr C'apr_bucket)
c'apr_bucket_transient_create :: Ptr CChar -> C'apr_size_t -> Ptr C'apr_bucket_alloc_t -> IO (Ptr C'apr_bucket)
p'apr_bucket_immortal_create :: FunPtr (Ptr CChar -> C'apr_size_t -> Ptr C'apr_bucket_alloc_t -> IO (Ptr C'apr_bucket))
c'apr_bucket_transient_make :: Ptr C'apr_bucket -> Ptr CChar -> C'apr_size_t -> IO (Ptr C'apr_bucket)
p'apr_bucket_immortal_make :: FunPtr (Ptr C'apr_bucket -> Ptr CChar -> C'apr_size_t -> IO (Ptr C'apr_bucket))
p'apr_bucket_transient_create :: FunPtr (Ptr CChar -> C'apr_size_t -> Ptr C'apr_bucket_alloc_t -> IO (Ptr C'apr_bucket))
c'apr_bucket_heap_create :: Ptr CChar -> C'apr_size_t -> FunPtr (Ptr () -> IO ()) -> Ptr C'apr_bucket_alloc_t -> IO (Ptr C'apr_bucket)
p'apr_bucket_transient_make :: FunPtr (Ptr C'apr_bucket -> Ptr CChar -> C'apr_size_t -> IO (Ptr C'apr_bucket))
c'apr_bucket_heap_make :: Ptr C'apr_bucket -> Ptr CChar -> C'apr_size_t -> FunPtr (Ptr () -> IO ()) -> IO (Ptr C'apr_bucket)
c'apr_bucket_pool_create :: Ptr CChar -> C'apr_size_t -> Ptr C'apr_pool_t -> Ptr C'apr_bucket_alloc_t -> IO (Ptr C'apr_bucket)
p'apr_bucket_heap_create :: FunPtr (Ptr CChar -> C'apr_size_t -> FunPtr (Ptr () -> IO ()) -> Ptr C'apr_bucket_alloc_t -> IO (Ptr C'apr_bucket))
c'apr_bucket_pool_make :: Ptr C'apr_bucket -> Ptr CChar -> C'apr_size_t -> Ptr C'apr_pool_t -> IO (Ptr C'apr_bucket)
p'apr_bucket_heap_make :: FunPtr (Ptr C'apr_bucket -> Ptr CChar -> C'apr_size_t -> FunPtr (Ptr () -> IO ()) -> IO (Ptr C'apr_bucket))
p'apr_bucket_pool_create :: FunPtr (Ptr CChar -> C'apr_size_t -> Ptr C'apr_pool_t -> Ptr C'apr_bucket_alloc_t -> IO (Ptr C'apr_bucket))
p'apr_bucket_pool_make :: FunPtr (Ptr C'apr_bucket -> Ptr CChar -> C'apr_size_t -> Ptr C'apr_pool_t -> IO (Ptr C'apr_bucket))
c'apr_bucket_mmap_create :: Ptr C'apr_mmap_t -> C'apr_off_t -> C'apr_size_t -> Ptr C'apr_bucket_alloc_t -> IO (Ptr C'apr_bucket)
c'apr_bucket_mmap_make :: Ptr C'apr_bucket -> Ptr C'apr_mmap_t -> C'apr_off_t -> C'apr_size_t -> IO (Ptr C'apr_bucket)
p'apr_bucket_mmap_create :: FunPtr (Ptr C'apr_mmap_t -> C'apr_off_t -> C'apr_size_t -> Ptr C'apr_bucket_alloc_t -> IO (Ptr C'apr_bucket))
c'apr_bucket_socket_create :: Ptr C'apr_socket_t -> Ptr C'apr_bucket_alloc_t -> IO (Ptr C'apr_bucket)
p'apr_bucket_mmap_make :: FunPtr (Ptr C'apr_bucket -> Ptr C'apr_mmap_t -> C'apr_off_t -> C'apr_size_t -> IO (Ptr C'apr_bucket))
c'apr_bucket_socket_make :: Ptr C'apr_bucket -> Ptr C'apr_socket_t -> IO (Ptr C'apr_bucket)
c'apr_bucket_pipe_create :: Ptr C'apr_file_t -> Ptr C'apr_bucket_alloc_t -> IO (Ptr C'apr_bucket)
p'apr_bucket_socket_create :: FunPtr (Ptr C'apr_socket_t -> Ptr C'apr_bucket_alloc_t -> IO (Ptr C'apr_bucket))
c'apr_bucket_pipe_make :: Ptr C'apr_bucket -> Ptr C'apr_file_t -> IO (Ptr C'apr_bucket)
p'apr_bucket_socket_make :: FunPtr (Ptr C'apr_bucket -> Ptr C'apr_socket_t -> IO (Ptr C'apr_bucket))
p'apr_bucket_pipe_create :: FunPtr (Ptr C'apr_file_t -> Ptr C'apr_bucket_alloc_t -> IO (Ptr C'apr_bucket))
c'apr_bucket_file_create :: Ptr C'apr_file_t -> C'apr_off_t -> C'apr_size_t -> Ptr C'apr_pool_t -> Ptr C'apr_bucket_alloc_t -> IO (Ptr C'apr_bucket)
p'apr_bucket_pipe_make :: FunPtr (Ptr C'apr_bucket -> Ptr C'apr_file_t -> IO (Ptr C'apr_bucket))
c'apr_bucket_file_make :: Ptr C'apr_bucket -> Ptr C'apr_file_t -> C'apr_off_t -> C'apr_size_t -> Ptr C'apr_pool_t -> IO (Ptr C'apr_bucket)
c'apr_bucket_file_enable_mmap :: Ptr C'apr_bucket -> CInt -> IO C'apr_status_t
p'apr_bucket_file_create :: FunPtr (Ptr C'apr_file_t -> C'apr_off_t -> C'apr_size_t -> Ptr C'apr_pool_t -> Ptr C'apr_bucket_alloc_t -> IO (Ptr C'apr_bucket))
p'apr_bucket_file_make :: FunPtr (Ptr C'apr_bucket -> Ptr C'apr_file_t -> C'apr_off_t -> C'apr_size_t -> Ptr C'apr_pool_t -> IO (Ptr C'apr_bucket))
p'apr_bucket_file_enable_mmap :: FunPtr (Ptr C'apr_bucket -> CInt -> IO C'apr_status_t)
instance Eq C'apr_bucket_structs
instance Show C'apr_bucket_structs
instance Eq C'apr_bucket_file
instance Show C'apr_bucket_file
instance Eq C'apr_bucket_mmap
instance Show C'apr_bucket_mmap
instance Eq C'apr_bucket_pool
instance Show C'apr_bucket_pool
instance Eq C'apr_bucket_heap
instance Show C'apr_bucket_heap
instance Eq C'apr_bucket_refcount
instance Show C'apr_bucket_refcount
instance Eq C'apr_bucket_brigade
instance Show C'apr_bucket_brigade
instance Eq C'apr_bucket_list
instance Show C'apr_bucket_list
instance Eq C'apr_bucket
instance Show C'apr_bucket
instance Eq C'apr_bucket_type_t
instance Show C'apr_bucket_type_t
instance Storable C'apr_bucket_structs
instance Storable C'apr_bucket_file
instance Storable C'apr_bucket_mmap
instance Storable C'apr_bucket_pool
instance Storable C'apr_bucket_heap
instance Storable C'apr_bucket_refcount
instance Storable C'apr_bucket_brigade
instance Storable C'apr_bucket_list
instance Storable C'apr_bucket
instance Storable C'apr_bucket_type_t

module Bindings.APR.Base64
c'apr_base64_encode_len :: CInt -> IO CInt
c'apr_base64_encode :: Ptr CChar -> Ptr CChar -> CInt -> IO CInt
p'apr_base64_encode_len :: FunPtr (CInt -> IO CInt)
c'apr_base64_encode_binary :: Ptr CChar -> Ptr CUChar -> CInt -> IO CInt
c'apr_base64_decode_len :: Ptr CChar -> IO CInt
p'apr_base64_encode :: FunPtr (Ptr CChar -> Ptr CChar -> CInt -> IO CInt)
c'apr_base64_decode :: Ptr CChar -> Ptr CChar -> IO CInt
p'apr_base64_encode_binary :: FunPtr (Ptr CChar -> Ptr CUChar -> CInt -> IO CInt)
p'apr_base64_decode_len :: FunPtr (Ptr CChar -> IO CInt)
c'apr_base64_decode_binary :: Ptr CUChar -> Ptr CChar -> IO CInt
p'apr_base64_decode :: FunPtr (Ptr CChar -> Ptr CChar -> IO CInt)
p'apr_base64_decode_binary :: FunPtr (Ptr CUChar -> Ptr CChar -> IO CInt)

module Bindings.APR.AnyLock
type C'tm_lock = CInt
c'apr_anylock_none :: (Num a) => a
c'apr_anylock_procmutex :: (Num a) => a
c'apr_anylock_readlock :: (Num a) => a
c'apr_anylock_writelock :: (Num a) => a
data C'apr_anylock_u_t
C'apr_anylock_u_t :: Ptr C'apr_proc_mutex_t -> Ptr C'apr_thread_mutex_t -> Ptr C'apr_thread_rwlock_t -> C'apr_anylock_u_t
c'apr_anylock_u_t'pm :: C'apr_anylock_u_t -> Ptr C'apr_proc_mutex_t
c'apr_anylock_u_t'tm :: C'apr_anylock_u_t -> Ptr C'apr_thread_mutex_t
c'apr_anylock_u_t'rw :: C'apr_anylock_u_t -> Ptr C'apr_thread_rwlock_t
data C'apr_anylock_t
C'apr_anylock_t :: C'tm_lock -> C'apr_anylock_u_t -> C'apr_anylock_t
c'apr_anylock_t'type :: C'apr_anylock_t -> C'tm_lock
c'apr_anylock_t'lock :: C'apr_anylock_t -> C'apr_anylock_u_t
c'APR_ANYLOCK_LOCK :: Ptr C'apr_anylock_t -> IO C'apr_status_t
c'APR_ANYLOCK_TRYLOCK :: Ptr C'apr_anylock_t -> IO C'apr_status_t
c'APR_ANYLOCK_UNLOCK :: Ptr C'apr_anylock_t -> IO C'apr_status_t
u'apr_anylock_u_t'pm :: C'apr_anylock_u_t -> Ptr C'apr_proc_mutex_t -> IO C'apr_anylock_u_t
u'apr_anylock_u_t'tm :: C'apr_anylock_u_t -> Ptr C'apr_thread_mutex_t -> IO C'apr_anylock_u_t
u'apr_anylock_u_t'rw :: C'apr_anylock_u_t -> Ptr C'apr_thread_rwlock_t -> IO C'apr_anylock_u_t
instance Eq C'apr_anylock_t
instance Show C'apr_anylock_t
instance Eq C'apr_anylock_u_t
instance Show C'apr_anylock_u_t
instance Storable C'apr_anylock_t
instance Storable C'apr_anylock_u_t

module Bindings.APR.RMM
data C'apr_rmm_t
C'apr_rmm_t :: C'apr_rmm_t
type C'apr_rmm_off_t = CUInt
c'apr_rmm_init :: Ptr (Ptr C'apr_rmm_t) -> Ptr C'apr_anylock_t -> Ptr () -> C'apr_size_t -> Ptr C'apr_pool_t -> IO C'apr_status_t
c'apr_rmm_destroy :: Ptr C'apr_rmm_t -> IO C'apr_status_t
c'apr_rmm_attach :: Ptr (Ptr C'apr_rmm_t) -> Ptr C'apr_anylock_t -> Ptr () -> Ptr C'apr_pool_t -> IO C'apr_status_t
p'apr_rmm_init :: FunPtr (Ptr (Ptr C'apr_rmm_t) -> Ptr C'apr_anylock_t -> Ptr () -> C'apr_size_t -> Ptr C'apr_pool_t -> IO C'apr_status_t)
c'apr_rmm_detach :: Ptr C'apr_rmm_t -> IO C'apr_status_t
p'apr_rmm_destroy :: FunPtr (Ptr C'apr_rmm_t -> IO C'apr_status_t)
c'apr_rmm_malloc :: Ptr C'apr_rmm_t -> C'apr_size_t -> IO C'apr_rmm_off_t
p'apr_rmm_attach :: FunPtr (Ptr (Ptr C'apr_rmm_t) -> Ptr C'apr_anylock_t -> Ptr () -> Ptr C'apr_pool_t -> IO C'apr_status_t)
p'apr_rmm_detach :: FunPtr (Ptr C'apr_rmm_t -> IO C'apr_status_t)
c'apr_rmm_realloc :: Ptr C'apr_rmm_t -> Ptr () -> C'apr_size_t -> IO C'apr_rmm_off_t
c'apr_rmm_calloc :: Ptr C'apr_rmm_t -> C'apr_size_t -> IO C'apr_rmm_off_t
p'apr_rmm_malloc :: FunPtr (Ptr C'apr_rmm_t -> C'apr_size_t -> IO C'apr_rmm_off_t)
c'apr_rmm_free :: Ptr C'apr_rmm_t -> C'apr_rmm_off_t -> IO C'apr_status_t
p'apr_rmm_realloc :: FunPtr (Ptr C'apr_rmm_t -> Ptr () -> C'apr_size_t -> IO C'apr_rmm_off_t)
c'apr_rmm_addr_get :: Ptr C'apr_rmm_t -> C'apr_rmm_off_t -> IO (Ptr ())
p'apr_rmm_calloc :: FunPtr (Ptr C'apr_rmm_t -> C'apr_size_t -> IO C'apr_rmm_off_t)
c'apr_rmm_offset_get :: Ptr C'apr_rmm_t -> Ptr () -> IO C'apr_rmm_off_t
p'apr_rmm_free :: FunPtr (Ptr C'apr_rmm_t -> C'apr_rmm_off_t -> IO C'apr_status_t)
c'apr_rmm_overhead_get :: CInt -> IO C'apr_size_t
p'apr_rmm_addr_get :: FunPtr (Ptr C'apr_rmm_t -> C'apr_rmm_off_t -> IO (Ptr ()))
p'apr_rmm_offset_get :: FunPtr (Ptr C'apr_rmm_t -> Ptr () -> IO C'apr_rmm_off_t)
p'apr_rmm_overhead_get :: FunPtr (CInt -> IO C'apr_size_t)
