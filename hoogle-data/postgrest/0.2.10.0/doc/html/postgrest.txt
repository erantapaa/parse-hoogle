-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | REST API for any Postgres database
--   
@package postgrest
@version 0.2.10.0

module PostgREST.Error
type PgError = SessionError Postgres
errResponse :: PgError -> Response
instance ToJSON PgError

module PostgREST.RangeQuery
rangeParse :: ByteString -> Maybe NonnegRange
rangeRequested :: RequestHeaders -> Maybe NonnegRange
rangeLimit :: NonnegRange -> Maybe Int
rangeOffset :: NonnegRange -> Int
type NonnegRange = Range Int

module PostgREST.PgQuery
type PStmt = Stmt Postgres
type StatementT = PStmt -> PStmt
data QualifiedTable
QualifiedTable :: Text -> Text -> QualifiedTable
qtSchema :: QualifiedTable -> Text
qtName :: QualifiedTable -> Text
data OrderTerm
OrderTerm :: Text -> ByteString -> Maybe ByteString -> OrderTerm
otTerm :: OrderTerm -> Text
otDirection :: OrderTerm -> ByteString
otNullOrder :: OrderTerm -> Maybe ByteString
limitT :: Maybe NonnegRange -> StatementT
whereT :: Query -> StatementT
withT :: PStmt -> Text -> StatementT
orderT :: [OrderTerm] -> StatementT
parentheticT :: StatementT
iffNotT :: PStmt -> StatementT
countT :: StatementT
countRows :: QualifiedTable -> PStmt
asJsonWithCount :: StatementT
asJsonRow :: StatementT
selectStar :: QualifiedTable -> PStmt
returningStarT :: StatementT
deleteFrom :: QualifiedTable -> PStmt
insertInto :: QualifiedTable -> Vector Text -> Vector (Vector Value) -> PStmt
insertSelect :: QualifiedTable -> [Text] -> [Value] -> PStmt
update :: QualifiedTable -> [Text] -> [Value] -> PStmt
wherePred :: QueryItem -> PStmt
orderParse :: Query -> [OrderTerm]
orderParseTerm :: Text -> Maybe OrderTerm
commaq :: PStmt
andq :: PStmt
data JsonbPath
ColIdentifier :: Text -> JsonbPath
KeyIdentifier :: Text -> JsonbPath
SingleArrow :: JsonbPath -> JsonbPath -> JsonbPath
DoubleArrow :: JsonbPath -> JsonbPath -> JsonbPath
parseJsonbPath :: Text -> Maybe JsonbPath
pgFmtJsonbPath :: Text -> Text
pgFmtIdent :: Text -> Text
pgFmtLit :: Text -> Text
trimNullChars :: Text -> Text
fromQt :: QualifiedTable -> Text
unquoted :: Value -> Text
insertableText :: Text -> Text
insertableValue :: Value -> Text
paramFilter :: Value -> Text
instance Show QualifiedTable
instance Show JsonbPath
instance Monoid PStmt

module PostgREST.PgStructure
foreignKeys :: QualifiedTable -> Tx Postgres s (Map Text ForeignKey)
tables :: Text -> Tx Postgres s [Table]
columns :: QualifiedTable -> Tx Postgres s [Column]
primaryKeyColumns :: QualifiedTable -> Tx Postgres s [Text]
toBool :: Text -> Bool
data Table
Table :: Text -> Text -> Bool -> Table
tableSchema :: Table -> Text
tableName :: Table -> Text
tableInsertable :: Table -> Bool
data ForeignKey
ForeignKey :: Text -> Text -> ForeignKey
fkTable :: ForeignKey -> Text
fkCol :: ForeignKey -> Text
data Column
Column :: Text -> Text -> Text -> Int -> Bool -> Text -> Bool -> Maybe Int -> Maybe Int -> Maybe Text -> [Text] -> Maybe ForeignKey -> Column
colSchema :: Column -> Text
colTable :: Column -> Text
colName :: Column -> Text
colPosition :: Column -> Int
colNullable :: Column -> Bool
colType :: Column -> Text
colUpdatable :: Column -> Bool
colMaxLen :: Column -> Maybe Int
colPrecision :: Column -> Maybe Int
colDefault :: Column -> Maybe Text
colEnum :: Column -> [Text]
colFK :: Column -> Maybe ForeignKey
tableFromRow :: (Text, Text, Text) -> Table
columnFromRow :: (Text, Text, Text, Int, Text, Text, Text, Maybe Int, Maybe Int, Maybe Text, Maybe Text) -> Column
instance Show Table
instance Eq ForeignKey
instance Show ForeignKey
instance Show Column
instance ToJSON Table
instance ToJSON ForeignKey
instance ToJSON Column

module PostgREST.Auth
data AuthUser
AuthUser :: String -> String -> String -> AuthUser
userId :: AuthUser -> String
userPass :: AuthUser -> String
userRole :: AuthUser -> String
type DbRole = Text
type UserId = Text
data LoginAttempt
NoCredentials :: LoginAttempt
MalformedAuth :: LoginAttempt
LoginFailed :: LoginAttempt
LoginSuccess :: DbRole -> UserId -> LoginAttempt
checkPass :: Text -> Text -> Bool
setRole :: Text -> Tx Postgres s ()
resetRole :: Tx Postgres s ()
setUserId :: Text -> Tx Postgres s ()
resetUserId :: Tx Postgres s ()
addUser :: Text -> Text -> Text -> Tx Postgres s ()
signInRole :: Text -> Text -> Tx Postgres s LoginAttempt
signInWithJWT :: Text -> Text -> LoginAttempt
tokenJWT :: Text -> Text -> Text -> Text
instance Show AuthUser
instance Eq LoginAttempt
instance Show LoginAttempt
instance ToJSON AuthUser
instance FromJSON AuthUser

module PostgREST.Config
data AppConfig
AppConfig :: String -> Int -> String -> String -> String -> Int -> String -> Bool -> Int -> String -> String -> AppConfig
configDbName :: AppConfig -> String
configDbPort :: AppConfig -> Int
configDbUser :: AppConfig -> String
configDbPass :: AppConfig -> String
configDbHost :: AppConfig -> String
configPort :: AppConfig -> Int
configAnonRole :: AppConfig -> String
configSecure :: AppConfig -> Bool
configPool :: AppConfig -> Int
configV1Schema :: AppConfig -> String
configJwtSecret :: AppConfig -> String
argParser :: Parser AppConfig
defaultCorsPolicy :: CorsResourcePolicy
corsPolicy :: Request -> Maybe CorsResourcePolicy

module PostgREST.Middleware
authenticated :: AppConfig -> (Request -> Tx Postgres s Response) -> Request -> Tx Postgres s Response
redirectInsecure :: Application -> Application

module PostgREST.App
app :: AppConfig -> ByteString -> Request -> Tx Postgres s Response
sqlError :: t
isSqlError :: t
instance ToJSON TableOptions
