-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Tests for deka, decimal floating point arithmetic
--   
--   deka provides decimal floating point arithmetic. It is based on
--   mpdecimal, the C library used to provide support for the Decimal
--   module in Python 3.
--   
--   You will need to install mpdecimal to use deka; otherwise your
--   executables will not link. It is available at
--   
--   <a>http://www.bytereef.org/mpdecimal/</a>
--   
--   mpdecimal has also been packaged for some Linux distributions, such as
--   Debian (libmpdec-dev - available in Jessie and later) and Arch
--   (mpdecimal).
--   
--   mpdecimal, in turn, implements the General Decimal Arithmetic
--   Specification, which is available at
--   
--   <a>http://speleotrove.com/decimal/</a>
--   
--   For more on deka, please see the Github home page at
--   
--   <a>https://github.com/massysett/deka</a>
--   
--   This package contains only tests, so that other packages may also use
--   the tests.
@package deka-tests
@version 0.6.0.2

module Deka.Dec.Shrinkers
posNeg :: PosNeg -> [PosNeg]
sign :: Sign -> [Sign]

module Deka.Native.Abstract.Shrinkers
novem :: Novem -> [Novem]
decem :: Decem -> [Decem]
decuple :: Decuple -> [Decuple]
aut :: Aut -> [Aut]
firmado :: Firmado -> [Firmado]
coefficient :: Coefficient -> [Coefficient]
exponent :: Exponent -> [Exponent]
diagnostic :: Diagnostic -> [Diagnostic]
noisy :: Noisy -> [Noisy]
nonNum :: NonNum -> [NonNum]
value :: Value -> [Value]
abstract :: Abstract -> [Abstract]
adjustedExp :: AdjustedExp -> [AdjustedExp]

module Deka.Dec.Generators
posNeg :: Gen PosNeg
sign :: Gen Sign

module Deka.Native.Abstract.Generators
novem :: Gen Novem
decem :: Gen Decem
decuple :: Gen Decuple
aut :: Gen Aut
firmado :: Gen Firmado
coefficient :: Gen Coefficient
exponent :: Gen Exponent
diagnostic :: Gen Diagnostic
noisy :: Gen Noisy
nonNum :: Gen NonNum
value :: Gen Value
abstract :: Gen Abstract
adjustedExp :: Gen AdjustedExp

module Deka.Tests.Util
varInt :: Int -> Gen b -> Gen b
coarbitraryList :: (a -> Gen b -> Gen b) -> [a] -> Gen b -> Gen b

module Deka.Dec.Coarbitrary
posNeg :: PosNeg -> Gen a -> Gen a
sign :: Sign -> Gen a -> Gen a

module Deka.Native.Abstract.Coarbitrary
novem :: Novem -> Gen a -> Gen a
decem :: Decem -> Gen a -> Gen a
decuple :: Decuple -> Gen a -> Gen a
aut :: Aut -> Gen a -> Gen a
firmado :: Firmado -> Gen a -> Gen a
coefficient :: Coefficient -> Gen a -> Gen a
exponent :: Exponent -> Gen a -> Gen a
diagnostic :: Diagnostic -> Gen a -> Gen a
noisy :: Noisy -> Gen a -> Gen a
nonNum :: NonNum -> Gen a -> Gen a
value :: Value -> Gen a -> Gen a
abstract :: Abstract -> Gen a -> Gen a
adjustedExp :: AdjustedExp -> Gen a -> Gen a
