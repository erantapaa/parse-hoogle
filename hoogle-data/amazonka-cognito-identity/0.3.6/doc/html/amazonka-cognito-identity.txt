-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Amazon Cognito Identity SDK.
--   
@package amazonka-cognito-identity
@version 0.3.6

module Network.AWS.CognitoIdentity.Types

-- | Version <tt>2014-06-30</tt> of the Amazon Cognito Identity service.
data CognitoIdentity
data JSONError :: *
data Credentials

-- | <a>Credentials</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cAccessKeyId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cExpiration</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>cSecretKey</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>cSessionToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
credentials :: Credentials

-- | The Access Key portion of the credentials.
cAccessKeyId :: Lens' Credentials (Maybe Text)

-- | The date at which these credentials will expire.
cExpiration :: Lens' Credentials (Maybe UTCTime)

-- | The Secret Access Key portion of the credentials
cSecretKey :: Lens' Credentials (Maybe Text)

-- | The Session Token portion of the credentials
cSessionToken :: Lens' Credentials (Maybe Text)
data IdentityDescription

-- | <a>IdentityDescription</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>idCreationDate</a> <tt>::</tt> <a>Maybe</a> <a>UTCTime</a></li>
--   <li><a>idIdentityId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>idLastModifiedDate</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>idLogins</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
identityDescription :: IdentityDescription

-- | Date on which the identity was created.
idCreationDate :: Lens' IdentityDescription (Maybe UTCTime)

-- | A unique identifier in the format REGION:GUID.
idIdentityId :: Lens' IdentityDescription (Maybe Text)

-- | Date on which the identity was last modified.
idLastModifiedDate :: Lens' IdentityDescription (Maybe UTCTime)

-- | A set of optional name-value pairs that map provider names to provider
--   tokens.
idLogins :: Lens' IdentityDescription [Text]
data IdentityPool

-- | <a>IdentityPool</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ipAllowUnauthenticatedIdentities</a> <tt>::</tt>
--   <a>Bool</a></li>
--   <li><a>ipDeveloperProviderName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>ipIdentityPoolId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ipIdentityPoolName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ipOpenIdConnectProviderARNs</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>ipSupportedLoginProviders</a> <tt>::</tt> <a>HashMap</a>
--   <a>Text</a> <a>Text</a></li>
--   </ul>
identityPool :: Text -> Text -> Bool -> IdentityPool

-- | TRUE if the identity pool supports unauthenticated logins.
ipAllowUnauthenticatedIdentities :: Lens' IdentityPool Bool

-- | The "domain" by which Cognito will refer to your users.
ipDeveloperProviderName :: Lens' IdentityPool (Maybe Text)

-- | An identity pool ID in the format REGION:GUID.
ipIdentityPoolId :: Lens' IdentityPool Text

-- | A string that you provide.
ipIdentityPoolName :: Lens' IdentityPool Text

-- | A list of OpendID Connect provider ARNs.
ipOpenIdConnectProviderARNs :: Lens' IdentityPool [Text]

-- | Optional key:value pairs mapping provider names to provider app IDs.
ipSupportedLoginProviders :: Lens' IdentityPool (HashMap Text Text)
data IdentityPoolShortDescription

-- | <a>IdentityPoolShortDescription</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ipsdIdentityPoolId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>ipsdIdentityPoolName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
identityPoolShortDescription :: IdentityPoolShortDescription

-- | An identity pool ID in the format REGION:GUID.
ipsdIdentityPoolId :: Lens' IdentityPoolShortDescription (Maybe Text)

-- | A string that you provide.
ipsdIdentityPoolName :: Lens' IdentityPoolShortDescription (Maybe Text)
instance Eq Credentials
instance Ord Credentials
instance Read Credentials
instance Show Credentials
instance Eq IdentityDescription
instance Ord IdentityDescription
instance Read IdentityDescription
instance Show IdentityDescription
instance Eq IdentityPool
instance Read IdentityPool
instance Show IdentityPool
instance Eq IdentityPoolShortDescription
instance Ord IdentityPoolShortDescription
instance Read IdentityPoolShortDescription
instance Show IdentityPoolShortDescription
instance ToJSON IdentityPoolShortDescription
instance FromJSON IdentityPoolShortDescription
instance ToJSON IdentityPool
instance FromJSON IdentityPool
instance ToJSON IdentityDescription
instance FromJSON IdentityDescription
instance ToJSON Credentials
instance FromJSON Credentials
instance AWSService CognitoIdentity


-- | Unlinks a <tt>DeveloperUserIdentifier</tt> from an existing identity.
--   Unlinked developer users will be considered new identities next time
--   they are seen. If, for a given Cognito identity, you remove all
--   federated identities as well as the developer user identifier, the
--   Cognito identity becomes inaccessible.
--   
--   
--   <a>http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_UnlinkDeveloperIdentity.html</a>
module Network.AWS.CognitoIdentity.UnlinkDeveloperIdentity
data UnlinkDeveloperIdentity

-- | <a>UnlinkDeveloperIdentity</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>udiDeveloperProviderName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>udiDeveloperUserIdentifier</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>udiIdentityId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>udiIdentityPoolId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
unlinkDeveloperIdentity :: Text -> Text -> Text -> Text -> UnlinkDeveloperIdentity

-- | The "domain" by which Cognito will refer to your users.
udiDeveloperProviderName :: Lens' UnlinkDeveloperIdentity Text

-- | A unique ID used by your backend authentication process to identify a
--   user.
udiDeveloperUserIdentifier :: Lens' UnlinkDeveloperIdentity Text

-- | A unique identifier in the format REGION:GUID.
udiIdentityId :: Lens' UnlinkDeveloperIdentity Text

-- | An identity pool ID in the format REGION:GUID.
udiIdentityPoolId :: Lens' UnlinkDeveloperIdentity Text
data UnlinkDeveloperIdentityResponse

-- | <a>UnlinkDeveloperIdentityResponse</a> constructor.
unlinkDeveloperIdentityResponse :: UnlinkDeveloperIdentityResponse
instance Eq UnlinkDeveloperIdentity
instance Ord UnlinkDeveloperIdentity
instance Read UnlinkDeveloperIdentity
instance Show UnlinkDeveloperIdentity
instance Eq UnlinkDeveloperIdentityResponse
instance Ord UnlinkDeveloperIdentityResponse
instance Read UnlinkDeveloperIdentityResponse
instance Show UnlinkDeveloperIdentityResponse
instance Generic UnlinkDeveloperIdentityResponse
instance Datatype D1UnlinkDeveloperIdentityResponse
instance Constructor C1_0UnlinkDeveloperIdentityResponse
instance AWSRequest UnlinkDeveloperIdentity
instance ToJSON UnlinkDeveloperIdentity
instance ToHeaders UnlinkDeveloperIdentity
instance ToQuery UnlinkDeveloperIdentity
instance ToPath UnlinkDeveloperIdentity


-- | Unlinks a federated identity from an existing account. Unlinked logins
--   will be considered new identities next time they are seen. Removing
--   the last linked login will make this identity inaccessible.
--   
--   
--   <a>http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_UnlinkIdentity.html</a>
module Network.AWS.CognitoIdentity.UnlinkIdentity
data UnlinkIdentity

-- | <a>UnlinkIdentity</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uiIdentityId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>uiLogins</a> <tt>::</tt> <a>HashMap</a> <a>Text</a>
--   <a>Text</a></li>
--   <li><a>uiLoginsToRemove</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
unlinkIdentity :: Text -> UnlinkIdentity

-- | A unique identifier in the format REGION:GUID.
uiIdentityId :: Lens' UnlinkIdentity Text

-- | A set of optional name-value pairs that map provider names to provider
--   tokens.
uiLogins :: Lens' UnlinkIdentity (HashMap Text Text)

-- | Provider names to unlink from this identity.
uiLoginsToRemove :: Lens' UnlinkIdentity [Text]
data UnlinkIdentityResponse

-- | <a>UnlinkIdentityResponse</a> constructor.
unlinkIdentityResponse :: UnlinkIdentityResponse
instance Eq UnlinkIdentity
instance Read UnlinkIdentity
instance Show UnlinkIdentity
instance Eq UnlinkIdentityResponse
instance Ord UnlinkIdentityResponse
instance Read UnlinkIdentityResponse
instance Show UnlinkIdentityResponse
instance Generic UnlinkIdentityResponse
instance Datatype D1UnlinkIdentityResponse
instance Constructor C1_0UnlinkIdentityResponse
instance AWSRequest UnlinkIdentity
instance ToJSON UnlinkIdentity
instance ToHeaders UnlinkIdentity
instance ToQuery UnlinkIdentity
instance ToPath UnlinkIdentity


-- | Updates a user pool.
--   
--   
--   <a>http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_UpdateIdentityPool.html</a>
module Network.AWS.CognitoIdentity.UpdateIdentityPool
data UpdateIdentityPool

-- | <a>UpdateIdentityPool</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uipAllowUnauthenticatedIdentities</a> <tt>::</tt>
--   <a>Bool</a></li>
--   <li><a>uipDeveloperProviderName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>uipIdentityPoolId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>uipIdentityPoolName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>uipOpenIdConnectProviderARNs</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>uipSupportedLoginProviders</a> <tt>::</tt> <a>HashMap</a>
--   <a>Text</a> <a>Text</a></li>
--   </ul>
updateIdentityPool :: Text -> Text -> Bool -> UpdateIdentityPool

-- | TRUE if the identity pool supports unauthenticated logins.
uipAllowUnauthenticatedIdentities :: Lens' UpdateIdentityPool Bool

-- | The "domain" by which Cognito will refer to your users.
uipDeveloperProviderName :: Lens' UpdateIdentityPool (Maybe Text)

-- | An identity pool ID in the format REGION:GUID.
uipIdentityPoolId :: Lens' UpdateIdentityPool Text

-- | A string that you provide.
uipIdentityPoolName :: Lens' UpdateIdentityPool Text

-- | A list of OpendID Connect provider ARNs.
uipOpenIdConnectProviderARNs :: Lens' UpdateIdentityPool [Text]

-- | Optional key:value pairs mapping provider names to provider app IDs.
uipSupportedLoginProviders :: Lens' UpdateIdentityPool (HashMap Text Text)
data UpdateIdentityPoolResponse

-- | <a>UpdateIdentityPoolResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uiprAllowUnauthenticatedIdentities</a> <tt>::</tt>
--   <a>Bool</a></li>
--   <li><a>uiprDeveloperProviderName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>uiprIdentityPoolId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>uiprIdentityPoolName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>uiprOpenIdConnectProviderARNs</a> <tt>::</tt>
--   [<a>Text</a>]</li>
--   <li><a>uiprSupportedLoginProviders</a> <tt>::</tt> <a>HashMap</a>
--   <a>Text</a> <a>Text</a></li>
--   </ul>
updateIdentityPoolResponse :: Text -> Text -> Bool -> UpdateIdentityPoolResponse

-- | TRUE if the identity pool supports unauthenticated logins.
uiprAllowUnauthenticatedIdentities :: Lens' UpdateIdentityPoolResponse Bool

-- | The "domain" by which Cognito will refer to your users.
uiprDeveloperProviderName :: Lens' UpdateIdentityPoolResponse (Maybe Text)

-- | An identity pool ID in the format REGION:GUID.
uiprIdentityPoolId :: Lens' UpdateIdentityPoolResponse Text

-- | A string that you provide.
uiprIdentityPoolName :: Lens' UpdateIdentityPoolResponse Text

-- | A list of OpendID Connect provider ARNs.
uiprOpenIdConnectProviderARNs :: Lens' UpdateIdentityPoolResponse [Text]

-- | Optional key:value pairs mapping provider names to provider app IDs.
uiprSupportedLoginProviders :: Lens' UpdateIdentityPoolResponse (HashMap Text Text)
instance Eq UpdateIdentityPool
instance Read UpdateIdentityPool
instance Show UpdateIdentityPool
instance Eq UpdateIdentityPoolResponse
instance Read UpdateIdentityPoolResponse
instance Show UpdateIdentityPoolResponse
instance FromJSON UpdateIdentityPoolResponse
instance AWSRequest UpdateIdentityPool
instance ToJSON UpdateIdentityPool
instance ToHeaders UpdateIdentityPool
instance ToQuery UpdateIdentityPool
instance ToPath UpdateIdentityPool


-- | Sets the roles for an identity pool. These roles are used when making
--   calls to <tt>GetCredentialsForIdentity</tt> action.
--   
--   
--   <a>http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_SetIdentityPoolRoles.html</a>
module Network.AWS.CognitoIdentity.SetIdentityPoolRoles
data SetIdentityPoolRoles

-- | <a>SetIdentityPoolRoles</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>siprIdentityPoolId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>siprRoles</a> <tt>::</tt> <a>HashMap</a> <a>Text</a>
--   <a>Text</a></li>
--   </ul>
setIdentityPoolRoles :: Text -> SetIdentityPoolRoles

-- | An identity pool ID in the format REGION:GUID.
siprIdentityPoolId :: Lens' SetIdentityPoolRoles Text

-- | The map of roles associated with this pool. Currently only
--   authenticated and unauthenticated roles are supported.
siprRoles :: Lens' SetIdentityPoolRoles (HashMap Text Text)
data SetIdentityPoolRolesResponse

-- | <a>SetIdentityPoolRolesResponse</a> constructor.
setIdentityPoolRolesResponse :: SetIdentityPoolRolesResponse
instance Eq SetIdentityPoolRoles
instance Read SetIdentityPoolRoles
instance Show SetIdentityPoolRoles
instance Eq SetIdentityPoolRolesResponse
instance Ord SetIdentityPoolRolesResponse
instance Read SetIdentityPoolRolesResponse
instance Show SetIdentityPoolRolesResponse
instance Generic SetIdentityPoolRolesResponse
instance Datatype D1SetIdentityPoolRolesResponse
instance Constructor C1_0SetIdentityPoolRolesResponse
instance AWSRequest SetIdentityPoolRoles
instance ToJSON SetIdentityPoolRoles
instance ToHeaders SetIdentityPoolRoles
instance ToQuery SetIdentityPoolRoles
instance ToPath SetIdentityPoolRoles


-- | Merges two users having different <tt>IdentityId</tt>s, existing in
--   the same identity pool, and identified by the same developer provider.
--   You can use this action to request that discrete users be merged and
--   identified as a single user in the Cognito environment. Cognito
--   associates the given source user (<tt>SourceUserIdentifier</tt>) with
--   the <tt>IdentityId</tt> of the <tt>DestinationUserIdentifier</tt>.
--   Only developer-authenticated users can be merged. If the users to be
--   merged are associated with the same public provider, but as two
--   different users, an exception will be thrown.
--   
--   
--   <a>http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_MergeDeveloperIdentities.html</a>
module Network.AWS.CognitoIdentity.MergeDeveloperIdentities
data MergeDeveloperIdentities

-- | <a>MergeDeveloperIdentities</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>mdiDestinationUserIdentifier</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>mdiDeveloperProviderName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>mdiIdentityPoolId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>mdiSourceUserIdentifier</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
mergeDeveloperIdentities :: Text -> Text -> Text -> Text -> MergeDeveloperIdentities

-- | User identifier for the destination user. The value should be a
--   <tt>DeveloperUserIdentifier</tt>.
mdiDestinationUserIdentifier :: Lens' MergeDeveloperIdentities Text

-- | The "domain" by which Cognito will refer to your users. This is a
--   (pseudo) domain name that you provide while creating an identity pool.
--   This name acts as a placeholder that allows your backend and the
--   Cognito service to communicate about the developer provider. For the
--   <tt>DeveloperProviderName</tt>, you can use letters as well as period
--   (.), underscore (_), and dash (-).
mdiDeveloperProviderName :: Lens' MergeDeveloperIdentities Text

-- | An identity pool ID in the format REGION:GUID.
mdiIdentityPoolId :: Lens' MergeDeveloperIdentities Text

-- | User identifier for the source user. The value should be a
--   <tt>DeveloperUserIdentifier</tt>.
mdiSourceUserIdentifier :: Lens' MergeDeveloperIdentities Text
data MergeDeveloperIdentitiesResponse

-- | <a>MergeDeveloperIdentitiesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>mdirIdentityId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
mergeDeveloperIdentitiesResponse :: MergeDeveloperIdentitiesResponse

-- | A unique identifier in the format REGION:GUID.
mdirIdentityId :: Lens' MergeDeveloperIdentitiesResponse (Maybe Text)
instance Eq MergeDeveloperIdentities
instance Ord MergeDeveloperIdentities
instance Read MergeDeveloperIdentities
instance Show MergeDeveloperIdentities
instance Eq MergeDeveloperIdentitiesResponse
instance Ord MergeDeveloperIdentitiesResponse
instance Read MergeDeveloperIdentitiesResponse
instance Show MergeDeveloperIdentitiesResponse
instance Monoid MergeDeveloperIdentitiesResponse
instance FromJSON MergeDeveloperIdentitiesResponse
instance AWSRequest MergeDeveloperIdentities
instance ToJSON MergeDeveloperIdentities
instance ToHeaders MergeDeveloperIdentities
instance ToQuery MergeDeveloperIdentities
instance ToPath MergeDeveloperIdentities


-- | Retrieves the <tt>IdentityID</tt> associated with a
--   <tt>DeveloperUserIdentifier</tt> or the list of
--   <tt>DeveloperUserIdentifier</tt>s associated with an
--   <tt>IdentityId</tt> for an existing identity. Either
--   <tt>IdentityID</tt> or <tt>DeveloperUserIdentifier</tt> must not be
--   null. If you supply only one of these values, the other value will be
--   searched in the database and returned as a part of the response. If
--   you supply both, <tt>DeveloperUserIdentifier</tt> will be matched
--   against <tt>IdentityID</tt>. If the values are verified against the
--   database, the response returns both values and is the same as the
--   request. Otherwise a <tt>ResourceConflictException</tt> is thrown.
--   
--   
--   <a>http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_LookupDeveloperIdentity.html</a>
module Network.AWS.CognitoIdentity.LookupDeveloperIdentity
data LookupDeveloperIdentity

-- | <a>LookupDeveloperIdentity</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ldiDeveloperUserIdentifier</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>ldiIdentityId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ldiIdentityPoolId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ldiMaxResults</a> <tt>::</tt> <a>Maybe</a> <a>Natural</a></li>
--   <li><a>ldiNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
lookupDeveloperIdentity :: Text -> LookupDeveloperIdentity

-- | A unique ID used by your backend authentication process to identify a
--   user. Typically, a developer identity provider would issue many
--   developer user identifiers, in keeping with the number of users.
ldiDeveloperUserIdentifier :: Lens' LookupDeveloperIdentity (Maybe Text)

-- | A unique identifier in the format REGION:GUID.
ldiIdentityId :: Lens' LookupDeveloperIdentity (Maybe Text)

-- | An identity pool ID in the format REGION:GUID.
ldiIdentityPoolId :: Lens' LookupDeveloperIdentity Text

-- | The maximum number of identities to return.
ldiMaxResults :: Lens' LookupDeveloperIdentity (Maybe Natural)

-- | A pagination token. The first call you make will have
--   <tt>NextToken</tt> set to null. After that the service will return
--   <tt>NextToken</tt> values as needed. For example, let's say you make a
--   request with <tt>MaxResults</tt> set to 10, and there are 20 matches
--   in the database. The service will return a pagination token as a part
--   of the response. This token can be used to call the API again and get
--   results starting from the 11th match.
ldiNextToken :: Lens' LookupDeveloperIdentity (Maybe Text)
data LookupDeveloperIdentityResponse

-- | <a>LookupDeveloperIdentityResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ldirDeveloperUserIdentifierList</a> <tt>::</tt>
--   [<a>Text</a>]</li>
--   <li><a>ldirIdentityId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>ldirNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
lookupDeveloperIdentityResponse :: LookupDeveloperIdentityResponse

-- | This is the list of developer user identifiers associated with an
--   identity ID. Cognito supports the association of multiple developer
--   user identifiers with an identity ID.
ldirDeveloperUserIdentifierList :: Lens' LookupDeveloperIdentityResponse [Text]

-- | A unique identifier in the format REGION:GUID.
ldirIdentityId :: Lens' LookupDeveloperIdentityResponse (Maybe Text)

-- | A pagination token. The first call you make will have
--   <tt>NextToken</tt> set to null. After that the service will return
--   <tt>NextToken</tt> values as needed. For example, let's say you make a
--   request with <tt>MaxResults</tt> set to 10, and there are 20 matches
--   in the database. The service will return a pagination token as a part
--   of the response. This token can be used to call the API again and get
--   results starting from the 11th match.
ldirNextToken :: Lens' LookupDeveloperIdentityResponse (Maybe Text)
instance Eq LookupDeveloperIdentity
instance Ord LookupDeveloperIdentity
instance Read LookupDeveloperIdentity
instance Show LookupDeveloperIdentity
instance Eq LookupDeveloperIdentityResponse
instance Ord LookupDeveloperIdentityResponse
instance Read LookupDeveloperIdentityResponse
instance Show LookupDeveloperIdentityResponse
instance FromJSON LookupDeveloperIdentityResponse
instance AWSRequest LookupDeveloperIdentity
instance ToJSON LookupDeveloperIdentity
instance ToHeaders LookupDeveloperIdentity
instance ToQuery LookupDeveloperIdentity
instance ToPath LookupDeveloperIdentity


-- | Lists all of the Cognito identity pools registered for your account.
--   
--   
--   <a>http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_ListIdentityPools.html</a>
module Network.AWS.CognitoIdentity.ListIdentityPools
data ListIdentityPools

-- | <a>ListIdentityPools</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lipMaxResults</a> <tt>::</tt> <a>Natural</a></li>
--   <li><a>lipNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listIdentityPools :: Natural -> ListIdentityPools

-- | The maximum number of identities to return.
lipMaxResults :: Lens' ListIdentityPools Natural

-- | A pagination token.
lipNextToken :: Lens' ListIdentityPools (Maybe Text)
data ListIdentityPoolsResponse

-- | <a>ListIdentityPoolsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>liprIdentityPools</a> <tt>::</tt>
--   [<a>IdentityPoolShortDescription</a>]</li>
--   <li><a>liprNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listIdentityPoolsResponse :: ListIdentityPoolsResponse

-- | The identity pools returned by the ListIdentityPools action.
liprIdentityPools :: Lens' ListIdentityPoolsResponse [IdentityPoolShortDescription]

-- | A pagination token.
liprNextToken :: Lens' ListIdentityPoolsResponse (Maybe Text)
instance Eq ListIdentityPools
instance Ord ListIdentityPools
instance Read ListIdentityPools
instance Show ListIdentityPools
instance Eq ListIdentityPoolsResponse
instance Read ListIdentityPoolsResponse
instance Show ListIdentityPoolsResponse
instance FromJSON ListIdentityPoolsResponse
instance AWSRequest ListIdentityPools
instance ToJSON ListIdentityPools
instance ToHeaders ListIdentityPools
instance ToQuery ListIdentityPools
instance ToPath ListIdentityPools


-- | Lists the identities in a pool.
--   
--   
--   <a>http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_ListIdentities.html</a>
module Network.AWS.CognitoIdentity.ListIdentities
data ListIdentities

-- | <a>ListIdentities</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>liIdentityPoolId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>liMaxResults</a> <tt>::</tt> <a>Natural</a></li>
--   <li><a>liNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listIdentities :: Text -> Natural -> ListIdentities

-- | An identity pool ID in the format REGION:GUID.
liIdentityPoolId :: Lens' ListIdentities Text

-- | The maximum number of identities to return.
liMaxResults :: Lens' ListIdentities Natural

-- | A pagination token.
liNextToken :: Lens' ListIdentities (Maybe Text)
data ListIdentitiesResponse

-- | <a>ListIdentitiesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lirIdentities</a> <tt>::</tt> [<a>IdentityDescription</a>]</li>
--   <li><a>lirIdentityPoolId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lirNextToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
listIdentitiesResponse :: ListIdentitiesResponse

-- | An object containing a set of identities and associated mappings.
lirIdentities :: Lens' ListIdentitiesResponse [IdentityDescription]

-- | An identity pool ID in the format REGION:GUID.
lirIdentityPoolId :: Lens' ListIdentitiesResponse (Maybe Text)

-- | A pagination token.
lirNextToken :: Lens' ListIdentitiesResponse (Maybe Text)
instance Eq ListIdentities
instance Ord ListIdentities
instance Read ListIdentities
instance Show ListIdentities
instance Eq ListIdentitiesResponse
instance Read ListIdentitiesResponse
instance Show ListIdentitiesResponse
instance FromJSON ListIdentitiesResponse
instance AWSRequest ListIdentities
instance ToJSON ListIdentities
instance ToHeaders ListIdentities
instance ToQuery ListIdentities
instance ToPath ListIdentities


-- | Registers (or retrieves) a Cognito <tt>IdentityId</tt> and an OpenID
--   Connect token for a user authenticated by your backend authentication
--   process. Supplying multiple logins will create an implicit linked
--   account. You can only specify one developer provider as part of the
--   <tt>Logins</tt> map, which is linked to the identity pool. The
--   developer provider is the "domain" by which Cognito will refer to your
--   users.
--   
--   You can use <a>GetOpenIdTokenForDeveloperIdentity</a> to create a new
--   identity and to link new logins (that is, user credentials issued by a
--   public provider or developer provider) to an existing identity. When
--   you want to create a new identity, the <tt>IdentityId</tt> should be
--   null. When you want to associate a new login with an existing
--   authenticated/unauthenticated identity, you can do so by providing the
--   existing <tt>IdentityId</tt>. This API will create the identity in the
--   specified <tt>IdentityPoolId</tt>.
--   
--   
--   <a>http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetOpenIdTokenForDeveloperIdentity.html</a>
module Network.AWS.CognitoIdentity.GetOpenIdTokenForDeveloperIdentity
data GetOpenIdTokenForDeveloperIdentity

-- | <a>GetOpenIdTokenForDeveloperIdentity</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>goitfdiIdentityId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>goitfdiIdentityPoolId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>goitfdiLogins</a> <tt>::</tt> <a>HashMap</a> <a>Text</a>
--   <a>Text</a></li>
--   <li><a>goitfdiTokenDuration</a> <tt>::</tt> <a>Maybe</a>
--   <a>Natural</a></li>
--   </ul>
getOpenIdTokenForDeveloperIdentity :: Text -> GetOpenIdTokenForDeveloperIdentity

-- | A unique identifier in the format REGION:GUID.
goitfdiIdentityId :: Lens' GetOpenIdTokenForDeveloperIdentity (Maybe Text)

-- | An identity pool ID in the format REGION:GUID.
goitfdiIdentityPoolId :: Lens' GetOpenIdTokenForDeveloperIdentity Text

-- | A set of optional name-value pairs that map provider names to provider
--   tokens. Each name-value pair represents a user from a public provider
--   or developer provider. If the user is from a developer provider, the
--   name-value pair will follow the syntax
--   '"developer_provider_name":"developer_user_identifier"'. The developer
--   provider is the "domain" by which Cognito will refer to your users;
--   you provided this domain while creating/updating the identity pool.
--   The developer user identifier is an identifier from your backend that
--   uniquely identifies a user. When you create an identity pool, you can
--   specify the supported logins.
goitfdiLogins :: Lens' GetOpenIdTokenForDeveloperIdentity (HashMap Text Text)

-- | The expiration time of the token, in seconds. You can specify a custom
--   expiration time for the token so that you can cache it. If you don't
--   provide an expiration time, the token is valid for 15 minutes. You can
--   exchange the token with Amazon STS for temporary AWS credentials,
--   which are valid for a maximum of one hour. The maximum token duration
--   you can set is 24 hours. You should take care in setting the
--   expiration time for a token, as there are significant security
--   implications: an attacker could use a leaked token to access your AWS
--   resources for the token's duration.
goitfdiTokenDuration :: Lens' GetOpenIdTokenForDeveloperIdentity (Maybe Natural)
data GetOpenIdTokenForDeveloperIdentityResponse

-- | <a>GetOpenIdTokenForDeveloperIdentityResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>goitfdirIdentityId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>goitfdirToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
getOpenIdTokenForDeveloperIdentityResponse :: GetOpenIdTokenForDeveloperIdentityResponse

-- | A unique identifier in the format REGION:GUID.
goitfdirIdentityId :: Lens' GetOpenIdTokenForDeveloperIdentityResponse (Maybe Text)

-- | An OpenID token.
goitfdirToken :: Lens' GetOpenIdTokenForDeveloperIdentityResponse (Maybe Text)
instance Eq GetOpenIdTokenForDeveloperIdentity
instance Read GetOpenIdTokenForDeveloperIdentity
instance Show GetOpenIdTokenForDeveloperIdentity
instance Eq GetOpenIdTokenForDeveloperIdentityResponse
instance Ord GetOpenIdTokenForDeveloperIdentityResponse
instance Read GetOpenIdTokenForDeveloperIdentityResponse
instance Show GetOpenIdTokenForDeveloperIdentityResponse
instance FromJSON GetOpenIdTokenForDeveloperIdentityResponse
instance AWSRequest GetOpenIdTokenForDeveloperIdentity
instance ToJSON GetOpenIdTokenForDeveloperIdentity
instance ToHeaders GetOpenIdTokenForDeveloperIdentity
instance ToQuery GetOpenIdTokenForDeveloperIdentity
instance ToPath GetOpenIdTokenForDeveloperIdentity


-- | Gets an OpenID token, using a known Cognito ID. This known Cognito ID
--   is returned by <tt>GetId</tt>. You can optionally add additional
--   logins for the identity. Supplying multiple logins creates an implicit
--   link.
--   
--   The OpenId token is valid for 15 minutes.
--   
--   
--   <a>http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetOpenIdToken.html</a>
module Network.AWS.CognitoIdentity.GetOpenIdToken
data GetOpenIdToken

-- | <a>GetOpenIdToken</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>goitIdentityId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>goitLogins</a> <tt>::</tt> <a>HashMap</a> <a>Text</a>
--   <a>Text</a></li>
--   </ul>
getOpenIdToken :: Text -> GetOpenIdToken

-- | A unique identifier in the format REGION:GUID.
goitIdentityId :: Lens' GetOpenIdToken Text

-- | A set of optional name-value pairs that map provider names to provider
--   tokens.
goitLogins :: Lens' GetOpenIdToken (HashMap Text Text)
data GetOpenIdTokenResponse

-- | <a>GetOpenIdTokenResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>goitrIdentityId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>goitrToken</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
getOpenIdTokenResponse :: GetOpenIdTokenResponse

-- | A unique identifier in the format REGION:GUID. Note that the
--   IdentityId returned may not match the one passed on input.
goitrIdentityId :: Lens' GetOpenIdTokenResponse (Maybe Text)

-- | An OpenID token, valid for 15 minutes.
goitrToken :: Lens' GetOpenIdTokenResponse (Maybe Text)
instance Eq GetOpenIdToken
instance Read GetOpenIdToken
instance Show GetOpenIdToken
instance Eq GetOpenIdTokenResponse
instance Ord GetOpenIdTokenResponse
instance Read GetOpenIdTokenResponse
instance Show GetOpenIdTokenResponse
instance FromJSON GetOpenIdTokenResponse
instance AWSRequest GetOpenIdToken
instance ToJSON GetOpenIdToken
instance ToHeaders GetOpenIdToken
instance ToQuery GetOpenIdToken
instance ToPath GetOpenIdToken


-- | Gets the roles for an identity pool.
--   
--   
--   <a>http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetIdentityPoolRoles.html</a>
module Network.AWS.CognitoIdentity.GetIdentityPoolRoles
data GetIdentityPoolRoles

-- | <a>GetIdentityPoolRoles</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>giprIdentityPoolId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   </ul>
getIdentityPoolRoles :: GetIdentityPoolRoles

-- | An identity pool ID in the format REGION:GUID.
giprIdentityPoolId :: Lens' GetIdentityPoolRoles (Maybe Text)
data GetIdentityPoolRolesResponse

-- | <a>GetIdentityPoolRolesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>giprrIdentityPoolId</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>giprrRoles</a> <tt>::</tt> <a>HashMap</a> <a>Text</a>
--   <a>Text</a></li>
--   </ul>
getIdentityPoolRolesResponse :: GetIdentityPoolRolesResponse

-- | An identity pool ID in the format REGION:GUID.
giprrIdentityPoolId :: Lens' GetIdentityPoolRolesResponse (Maybe Text)

-- | The map of roles associated with this pool. Currently only
--   authenticated and unauthenticated roles are supported.
giprrRoles :: Lens' GetIdentityPoolRolesResponse (HashMap Text Text)
instance Eq GetIdentityPoolRoles
instance Ord GetIdentityPoolRoles
instance Read GetIdentityPoolRoles
instance Show GetIdentityPoolRoles
instance Monoid GetIdentityPoolRoles
instance Eq GetIdentityPoolRolesResponse
instance Read GetIdentityPoolRolesResponse
instance Show GetIdentityPoolRolesResponse
instance FromJSON GetIdentityPoolRolesResponse
instance AWSRequest GetIdentityPoolRoles
instance ToJSON GetIdentityPoolRoles
instance ToHeaders GetIdentityPoolRoles
instance ToQuery GetIdentityPoolRoles
instance ToPath GetIdentityPoolRoles


-- | Generates (or retrieves) a Cognito ID. Supplying multiple logins will
--   create an implicit linked account.
--   
--   
--   <a>http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetId.html</a>
module Network.AWS.CognitoIdentity.GetId
data GetId

-- | <a>GetId</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>giAccountId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>giIdentityPoolId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>giLogins</a> <tt>::</tt> <a>HashMap</a> <a>Text</a>
--   <a>Text</a></li>
--   </ul>
getId :: Text -> GetId

-- | A standard AWS account ID (9+ digits).
giAccountId :: Lens' GetId (Maybe Text)

-- | An identity pool ID in the format REGION:GUID.
giIdentityPoolId :: Lens' GetId Text

-- | A set of optional name-value pairs that map provider names to provider
--   tokens.
--   
--   The available provider names for <tt>Logins</tt> are as follows:
--   Facebook: 'graph.facebook.com' Google: 'accounts.google.com' Amazon:
--   'www.amazon.com'
giLogins :: Lens' GetId (HashMap Text Text)
data GetIdResponse

-- | <a>GetIdResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>girIdentityId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
getIdResponse :: GetIdResponse

-- | A unique identifier in the format REGION:GUID.
girIdentityId :: Lens' GetIdResponse (Maybe Text)
instance Eq GetId
instance Read GetId
instance Show GetId
instance Eq GetIdResponse
instance Ord GetIdResponse
instance Read GetIdResponse
instance Show GetIdResponse
instance Monoid GetIdResponse
instance FromJSON GetIdResponse
instance AWSRequest GetId
instance ToJSON GetId
instance ToHeaders GetId
instance ToQuery GetId
instance ToPath GetId


-- | Returns credentials for the the provided identity ID. Any provided
--   logins will be validated against supported login providers. If the
--   token is for cognito-identity.amazonaws.com, it will be passed through
--   to AWS Security Token Service with the appropriate role for the token.
--   
--   
--   <a>http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetCredentialsForIdentity.html</a>
module Network.AWS.CognitoIdentity.GetCredentialsForIdentity
data GetCredentialsForIdentity

-- | <a>GetCredentialsForIdentity</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gcfiIdentityId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>gcfiLogins</a> <tt>::</tt> <a>HashMap</a> <a>Text</a>
--   <a>Text</a></li>
--   </ul>
getCredentialsForIdentity :: Text -> GetCredentialsForIdentity

-- | A unique identifier in the format REGION:GUID.
gcfiIdentityId :: Lens' GetCredentialsForIdentity Text

-- | A set of optional name-value pairs that map provider names to provider
--   tokens.
gcfiLogins :: Lens' GetCredentialsForIdentity (HashMap Text Text)
data GetCredentialsForIdentityResponse

-- | <a>GetCredentialsForIdentityResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>gcfirCredentials</a> <tt>::</tt> <a>Maybe</a>
--   <a>Credentials</a></li>
--   <li><a>gcfirIdentityId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
getCredentialsForIdentityResponse :: GetCredentialsForIdentityResponse

-- | Credentials for the the provided identity ID.
gcfirCredentials :: Lens' GetCredentialsForIdentityResponse (Maybe Credentials)

-- | A unique identifier in the format REGION:GUID.
gcfirIdentityId :: Lens' GetCredentialsForIdentityResponse (Maybe Text)
instance Eq GetCredentialsForIdentity
instance Read GetCredentialsForIdentity
instance Show GetCredentialsForIdentity
instance Eq GetCredentialsForIdentityResponse
instance Read GetCredentialsForIdentityResponse
instance Show GetCredentialsForIdentityResponse
instance FromJSON GetCredentialsForIdentityResponse
instance AWSRequest GetCredentialsForIdentity
instance ToJSON GetCredentialsForIdentity
instance ToHeaders GetCredentialsForIdentity
instance ToQuery GetCredentialsForIdentity
instance ToPath GetCredentialsForIdentity


-- | Gets details about a particular identity pool, including the pool
--   name, ID description, creation date, and current number of users.
--   
--   
--   <a>http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_DescribeIdentityPool.html</a>
module Network.AWS.CognitoIdentity.DescribeIdentityPool
data DescribeIdentityPool

-- | <a>DescribeIdentityPool</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dipIdentityPoolId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
describeIdentityPool :: Text -> DescribeIdentityPool

-- | An identity pool ID in the format REGION:GUID.
dipIdentityPoolId :: Lens' DescribeIdentityPool Text
data DescribeIdentityPoolResponse

-- | <a>DescribeIdentityPoolResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>diprAllowUnauthenticatedIdentities</a> <tt>::</tt>
--   <a>Bool</a></li>
--   <li><a>diprDeveloperProviderName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>diprIdentityPoolId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>diprIdentityPoolName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>diprOpenIdConnectProviderARNs</a> <tt>::</tt>
--   [<a>Text</a>]</li>
--   <li><a>diprSupportedLoginProviders</a> <tt>::</tt> <a>HashMap</a>
--   <a>Text</a> <a>Text</a></li>
--   </ul>
describeIdentityPoolResponse :: Text -> Text -> Bool -> DescribeIdentityPoolResponse

-- | TRUE if the identity pool supports unauthenticated logins.
diprAllowUnauthenticatedIdentities :: Lens' DescribeIdentityPoolResponse Bool

-- | The "domain" by which Cognito will refer to your users.
diprDeveloperProviderName :: Lens' DescribeIdentityPoolResponse (Maybe Text)

-- | An identity pool ID in the format REGION:GUID.
diprIdentityPoolId :: Lens' DescribeIdentityPoolResponse Text

-- | A string that you provide.
diprIdentityPoolName :: Lens' DescribeIdentityPoolResponse Text

-- | A list of OpendID Connect provider ARNs.
diprOpenIdConnectProviderARNs :: Lens' DescribeIdentityPoolResponse [Text]

-- | Optional key:value pairs mapping provider names to provider app IDs.
diprSupportedLoginProviders :: Lens' DescribeIdentityPoolResponse (HashMap Text Text)
instance Eq DescribeIdentityPool
instance Ord DescribeIdentityPool
instance Read DescribeIdentityPool
instance Show DescribeIdentityPool
instance Monoid DescribeIdentityPool
instance IsString DescribeIdentityPool
instance Eq DescribeIdentityPoolResponse
instance Read DescribeIdentityPoolResponse
instance Show DescribeIdentityPoolResponse
instance FromJSON DescribeIdentityPoolResponse
instance AWSRequest DescribeIdentityPool
instance ToJSON DescribeIdentityPool
instance ToHeaders DescribeIdentityPool
instance ToQuery DescribeIdentityPool
instance ToPath DescribeIdentityPool


-- | Returns metadata related to the given identity, including when the
--   identity was created and any associated linked logins.
--   
--   
--   <a>http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_DescribeIdentity.html</a>
module Network.AWS.CognitoIdentity.DescribeIdentity
data DescribeIdentity

-- | <a>DescribeIdentity</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>diIdentityId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
describeIdentity :: Text -> DescribeIdentity

-- | A unique identifier in the format REGION:GUID.
diIdentityId :: Lens' DescribeIdentity Text
data DescribeIdentityResponse

-- | <a>DescribeIdentityResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dirCreationDate</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>dirIdentityId</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dirLastModifiedDate</a> <tt>::</tt> <a>Maybe</a>
--   <a>UTCTime</a></li>
--   <li><a>dirLogins</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeIdentityResponse :: DescribeIdentityResponse

-- | Date on which the identity was created.
dirCreationDate :: Lens' DescribeIdentityResponse (Maybe UTCTime)

-- | A unique identifier in the format REGION:GUID.
dirIdentityId :: Lens' DescribeIdentityResponse (Maybe Text)

-- | Date on which the identity was last modified.
dirLastModifiedDate :: Lens' DescribeIdentityResponse (Maybe UTCTime)

-- | A set of optional name-value pairs that map provider names to provider
--   tokens.
dirLogins :: Lens' DescribeIdentityResponse [Text]
instance Eq DescribeIdentity
instance Ord DescribeIdentity
instance Read DescribeIdentity
instance Show DescribeIdentity
instance Monoid DescribeIdentity
instance IsString DescribeIdentity
instance Eq DescribeIdentityResponse
instance Ord DescribeIdentityResponse
instance Read DescribeIdentityResponse
instance Show DescribeIdentityResponse
instance FromJSON DescribeIdentityResponse
instance AWSRequest DescribeIdentity
instance ToJSON DescribeIdentity
instance ToHeaders DescribeIdentity
instance ToQuery DescribeIdentity
instance ToPath DescribeIdentity


-- | Deletes a user pool. Once a pool is deleted, users will not be able to
--   authenticate with the pool.
--   
--   
--   <a>http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_DeleteIdentityPool.html</a>
module Network.AWS.CognitoIdentity.DeleteIdentityPool
data DeleteIdentityPool

-- | <a>DeleteIdentityPool</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dip1IdentityPoolId</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteIdentityPool :: Text -> DeleteIdentityPool

-- | An identity pool ID in the format REGION:GUID.
dip1IdentityPoolId :: Lens' DeleteIdentityPool Text
data DeleteIdentityPoolResponse

-- | <a>DeleteIdentityPoolResponse</a> constructor.
deleteIdentityPoolResponse :: DeleteIdentityPoolResponse
instance Eq DeleteIdentityPool
instance Ord DeleteIdentityPool
instance Read DeleteIdentityPool
instance Show DeleteIdentityPool
instance Monoid DeleteIdentityPool
instance IsString DeleteIdentityPool
instance Eq DeleteIdentityPoolResponse
instance Ord DeleteIdentityPoolResponse
instance Read DeleteIdentityPoolResponse
instance Show DeleteIdentityPoolResponse
instance Generic DeleteIdentityPoolResponse
instance Datatype D1DeleteIdentityPoolResponse
instance Constructor C1_0DeleteIdentityPoolResponse
instance AWSRequest DeleteIdentityPool
instance ToJSON DeleteIdentityPool
instance ToHeaders DeleteIdentityPool
instance ToQuery DeleteIdentityPool
instance ToPath DeleteIdentityPool


-- | Creates a new identity pool. The identity pool is a store of user
--   identity information that is specific to your AWS account. The limit
--   on identity pools is 60 per account.
--   
--   
--   <a>http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_CreateIdentityPool.html</a>
module Network.AWS.CognitoIdentity.CreateIdentityPool
data CreateIdentityPool

-- | <a>CreateIdentityPool</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cipAllowUnauthenticatedIdentities</a> <tt>::</tt>
--   <a>Bool</a></li>
--   <li><a>cipDeveloperProviderName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>cipIdentityPoolName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>cipOpenIdConnectProviderARNs</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>cipSupportedLoginProviders</a> <tt>::</tt> <a>HashMap</a>
--   <a>Text</a> <a>Text</a></li>
--   </ul>
createIdentityPool :: Text -> Bool -> CreateIdentityPool

-- | TRUE if the identity pool supports unauthenticated logins.
cipAllowUnauthenticatedIdentities :: Lens' CreateIdentityPool Bool

-- | The "domain" by which Cognito will refer to your users. This name acts
--   as a placeholder that allows your backend and the Cognito service to
--   communicate about the developer provider. For the
--   <tt>DeveloperProviderName</tt>, you can use letters as well as period
--   (<a>.</a>), underscore ('_'), and dash (<a>-</a>).
--   
--   Once you have set a developer provider name, you cannot change it.
--   Please take care in setting this parameter.
cipDeveloperProviderName :: Lens' CreateIdentityPool (Maybe Text)

-- | A string that you provide.
cipIdentityPoolName :: Lens' CreateIdentityPool Text

-- | A list of OpendID Connect provider ARNs.
cipOpenIdConnectProviderARNs :: Lens' CreateIdentityPool [Text]

-- | Optional key:value pairs mapping provider names to provider app IDs.
cipSupportedLoginProviders :: Lens' CreateIdentityPool (HashMap Text Text)
data CreateIdentityPoolResponse

-- | <a>CreateIdentityPoolResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ciprAllowUnauthenticatedIdentities</a> <tt>::</tt>
--   <a>Bool</a></li>
--   <li><a>ciprDeveloperProviderName</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>ciprIdentityPoolId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ciprIdentityPoolName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ciprOpenIdConnectProviderARNs</a> <tt>::</tt>
--   [<a>Text</a>]</li>
--   <li><a>ciprSupportedLoginProviders</a> <tt>::</tt> <a>HashMap</a>
--   <a>Text</a> <a>Text</a></li>
--   </ul>
createIdentityPoolResponse :: Text -> Text -> Bool -> CreateIdentityPoolResponse

-- | TRUE if the identity pool supports unauthenticated logins.
ciprAllowUnauthenticatedIdentities :: Lens' CreateIdentityPoolResponse Bool

-- | The "domain" by which Cognito will refer to your users.
ciprDeveloperProviderName :: Lens' CreateIdentityPoolResponse (Maybe Text)

-- | An identity pool ID in the format REGION:GUID.
ciprIdentityPoolId :: Lens' CreateIdentityPoolResponse Text

-- | A string that you provide.
ciprIdentityPoolName :: Lens' CreateIdentityPoolResponse Text

-- | A list of OpendID Connect provider ARNs.
ciprOpenIdConnectProviderARNs :: Lens' CreateIdentityPoolResponse [Text]

-- | Optional key:value pairs mapping provider names to provider app IDs.
ciprSupportedLoginProviders :: Lens' CreateIdentityPoolResponse (HashMap Text Text)
instance Eq CreateIdentityPool
instance Read CreateIdentityPool
instance Show CreateIdentityPool
instance Eq CreateIdentityPoolResponse
instance Read CreateIdentityPoolResponse
instance Show CreateIdentityPoolResponse
instance FromJSON CreateIdentityPoolResponse
instance AWSRequest CreateIdentityPool
instance ToJSON CreateIdentityPool
instance ToHeaders CreateIdentityPool
instance ToQuery CreateIdentityPool
instance ToPath CreateIdentityPool


-- | Amazon Cognito is a web service that facilitates the delivery of
--   scoped, temporary credentials to mobile devices or other untrusted
--   environments. Amazon Cognito uniquely identifies a device or user and
--   supplies the user with a consistent identity throughout the lifetime
--   of an application. Amazon Cognito lets users authenticate with
--   third-party identity providers (Facebook, Google, or Login with
--   Amazon). As a developer, you decide which identity providers to trust.
--   You can also choose to support unauthenticated access from your
--   application. Your users are provided with Cognito tokens that uniquely
--   identify their device and any information provided about third-party
--   logins.
module Network.AWS.CognitoIdentity
