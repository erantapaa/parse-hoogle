-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Read and write BED and GTF format genome annotations
--   
@package seqloc-datafiles
@version 0.4.2


-- | Minimal tab-delimited annotation of <a>Transcript</a> locations. Each
--   <a>Transcript</a> has one line, containing the <a>geneId</a> and
--   <a>trxId</a> fields, followed by the <a>LocRepr</a> representation of
--   the <a>SpliceSeqLoc</a> location of the transcript, and then the
--   location of the CDS within the transcript or "n/a" if there is no CDS.
module Bio.SeqLoc.TranscriptTable

-- | Read a transcript table file as a list of annotated transcripts
readTable :: FilePath -> IO [Transcript]

-- | Parse a transcript table line, not including the newline
parseLine :: ByteString -> Maybe Transcript

-- | Write a transcript table file
writeTable :: FilePath -> [Transcript] -> IO ()

-- | Produce a single transcript table line for a <a>Transcript</a>,
--   newline not included.
unparseLine :: Transcript -> ByteString


-- | Utilities for reading and writing GTF format gene annotations
module Bio.SeqLoc.GTF

-- | Read a GTF annotation file. The entire file is read at once, because a
--   single annotated transcript can span many lines in a GTF file that are
--   not required to occur in any specific order. The transcript
--   <a>SpliceSeqLoc</a> transcript location is assembled from
--   <tt>exon</tt> annotations and any CDS location is then produced from
--   <tt>CDS</tt> annotations, with an error occurring if the CDS is not a
--   single contiguous location within the transcript.
readGtfTranscripts :: FilePath -> IO [Transcript]
readGtfTranscriptsErr :: FilePath -> IO ([Transcript], [String])

-- | Convert a <a>Transcript</a> to a string consisting of GTF lines. These
--   lines will contain <tt>exon</tt> lines for the transcript, as well as
--   <tt>CDS</tt> lines if the <a>Transcript</a> has a <a>cds</a>.
transcriptToGtf :: ByteString -> Transcript -> ByteString


-- | Utilities for reading and writing BED format gene annotations
module Bio.SeqLoc.Bed

-- | Read all BED format annotations in a BED file
readBedTranscripts :: FilePath -> IO [Transcript]

-- | Minimalistic <a>Parser</a>-style parser for a BED format line, not
--   including the trailing newline.
bedZP :: Parser Transcript

-- | Iteratee to convert an <a>Iteratee</a> over a <a>ByteString</a>, such
--   as the standard <a>fileDriver</a>, into an iteratee over a list of
--   <a>Transcript</a> annotations from the file.
bedTranscriptEnum :: Monad m => Iteratee [Transcript] m a -> Iteratee ByteString m a

-- | Conduit from a <a>ByteString</a> source such as a BED file to a source
--   of <a>Transcript</a> annotations from the file.
bedConduit :: (Monad m, MonadBase IO m) => Conduit ByteString m Transcript
unbedConduit :: Monad m => Conduit Transcript m ByteString

-- | Convert a <a>Transcript</a> to a BED annotation line, specifying the
--   <i>score</i> and <i>itemRGB</i> fields.
transcriptToBed :: ByteString -> ByteString -> Transcript -> ByteString

-- | Convert a <a>Transcript</a> to a BED annotation line.
transcriptToBedStd :: Transcript -> ByteString
