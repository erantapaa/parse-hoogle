-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Determine the size of some common image formats.
--   
@package imagesize-conduit
@version 1.1


-- | Detect the image size without opening the image itself and retrieving
--   the minimum amount of data.
module Data.Conduit.ImageSize
data Size
Size :: Int -> Int -> Size
width :: Size -> Int
height :: Size -> Int
data FileFormat
GIF :: FileFormat
PNG :: FileFormat
JPG :: FileFormat
data ImageSizeException
EmptyImage :: ImageSizeException
UnknownImageFormat :: ImageSizeException
BadGIFHeader :: ImageSizeException
BadPNGHeader :: ImageSizeException
BadJPGHeader :: ImageSizeException

-- | Find out the size of an image. Also returns the file format that
--   parsed correctly. Note that this function does not verify that the
--   file is indeed in the format that it returns, since it looks only at a
--   small part of the header.
sinkImageInfo :: (Monad m, MonadThrow n) => Consumer ByteString m (n (Size, FileFormat))

-- | Specialized version of <a>sinkImageInfo</a> that returns only the
--   image size.
sinkImageSize :: (Monad m, MonadThrow n, Functor n) => Consumer ByteString m (n Size)
instance Typeable Size
instance Typeable FileFormat
instance Typeable ImageSizeException
instance Show Size
instance Eq Size
instance Ord Size
instance Read Size
instance Show FileFormat
instance Eq FileFormat
instance Ord FileFormat
instance Read FileFormat
instance Enum FileFormat
instance Show ImageSizeException
instance Exception ImageSizeException
