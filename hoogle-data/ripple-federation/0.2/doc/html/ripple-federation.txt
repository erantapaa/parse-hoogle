-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Utilities and types to work with the Ripple federation protocol
--   
--   To resolve federation names, etc.
@package ripple-federation
@version 0.2

module Ripple.Federation

-- | Resolve an alias
resolve :: Alias -> IO (Either Error ResolvedAlias)

-- | Resolve an alias against a known federation_url
resolveAgainst :: Alias -> URI -> IO (Either Error ResolvedAlias)

-- | Lookup the ripple.txt for a domain
getRippleTxt :: Text -> IO (Either Error [(Text, [Text])])

-- | destination@domain
data Alias
Alias :: Text -> Text -> Alias
destination :: Alias -> Text
domain :: Alias -> Text
data ResolvedAlias
ResolvedAlias :: Alias -> RippleAddress -> Maybe Word32 -> ResolvedAlias
alias :: ResolvedAlias -> Alias
ripple :: ResolvedAlias -> RippleAddress
dt :: ResolvedAlias -> Maybe Word32
data Error
Error :: ErrorType -> Text -> Error
errorType :: Error -> ErrorType
errorMessage :: Error -> Text
data ErrorType
NoSuchUser :: ErrorType
NoSupported :: ErrorType
NoSuchDomain :: ErrorType
InvalidParams :: ErrorType
Unavailable :: ErrorType

-- | Attoparsec parser for ripple.txt
rippleTxtParser :: Parser [(Text, [Text])]
instance Show ErrorType
instance Eq ErrorType
instance Show Error
instance Eq Error
instance Eq Alias
instance Show ResolvedAlias
instance Eq ResolvedAlias
instance FromJSON RippleNameResponse
instance FromJSON ResolvedAlias
instance ToJSON ResolvedAlias
instance QueryLike Alias
instance Read Alias
instance Show Alias
instance FromJSON a => FromJSON (FederationResult a)
instance FromJSON ErrorType
instance ToJSON ErrorType
instance FromJSON Error
instance ToJSON Error
instance Monoid Error
