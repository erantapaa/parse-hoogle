-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Amazon CloudSearch SDK.
--   
@package amazonka-cloudsearch
@version 0.3.6

module Network.AWS.CloudSearch.Types

-- | Version <tt>2013-01-01</tt> of the Amazon CloudSearch service.
data CloudSearch
data RESTError :: *
ns :: Text
data DomainStatus

-- | <a>DomainStatus</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsARN</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dsCreated</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dsDeleted</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dsDocService</a> <tt>::</tt> <a>Maybe</a>
--   <a>ServiceEndpoint</a></li>
--   <li><a>dsDomainId</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>dsDomainName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>dsLimits</a> <tt>::</tt> <a>Maybe</a> <a>Limits</a></li>
--   <li><a>dsProcessing</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dsRequiresIndexDocuments</a> <tt>::</tt> <a>Bool</a></li>
--   <li><a>dsSearchInstanceCount</a> <tt>::</tt> <a>Maybe</a>
--   <a>Natural</a></li>
--   <li><a>dsSearchInstanceType</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>dsSearchPartitionCount</a> <tt>::</tt> <a>Maybe</a>
--   <a>Natural</a></li>
--   <li><a>dsSearchService</a> <tt>::</tt> <a>Maybe</a>
--   <a>ServiceEndpoint</a></li>
--   </ul>
domainStatus :: Text -> Text -> Bool -> DomainStatus
dsARN :: Lens' DomainStatus (Maybe Text)

-- | True if the search domain is created. It can take several minutes to
--   initialize a domain when <tt>CreateDomain</tt> is called. Newly
--   created search domains are returned from <tt>DescribeDomains</tt> with
--   a false value for Created until domain creation is complete.
dsCreated :: Lens' DomainStatus (Maybe Bool)

-- | True if the search domain has been deleted. The system must clean up
--   resources dedicated to the search domain when <tt>DeleteDomain</tt> is
--   called. Newly deleted search domains are returned from
--   <tt>DescribeDomains</tt> with a true value for IsDeleted for several
--   minutes until resource cleanup is complete.
dsDeleted :: Lens' DomainStatus (Maybe Bool)

-- | The service endpoint for updating documents in a search domain.
dsDocService :: Lens' DomainStatus (Maybe ServiceEndpoint)
dsDomainId :: Lens' DomainStatus Text
dsDomainName :: Lens' DomainStatus Text
dsLimits :: Lens' DomainStatus (Maybe Limits)

-- | True if processing is being done to activate the current domain
--   configuration.
dsProcessing :: Lens' DomainStatus (Maybe Bool)

-- | True if <tt>IndexDocuments</tt> needs to be called to activate the
--   current domain configuration.
dsRequiresIndexDocuments :: Lens' DomainStatus Bool

-- | The number of search instances that are available to process search
--   requests.
dsSearchInstanceCount :: Lens' DomainStatus (Maybe Natural)

-- | The instance type that is being used to process search requests.
dsSearchInstanceType :: Lens' DomainStatus (Maybe Text)

-- | The number of partitions across which the search index is spread.
dsSearchPartitionCount :: Lens' DomainStatus (Maybe Natural)

-- | The service endpoint for requesting search results from a search
--   domain.
dsSearchService :: Lens' DomainStatus (Maybe ServiceEndpoint)
data DocumentSuggesterOptions

-- | <a>DocumentSuggesterOptions</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsoFuzzyMatching</a> <tt>::</tt> <a>Maybe</a>
--   <a>SuggesterFuzzyMatching</a></li>
--   <li><a>dsoSortExpression</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dsoSourceField</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
documentSuggesterOptions :: Text -> DocumentSuggesterOptions

-- | The level of fuzziness allowed when suggesting matches for a string:
--   <tt>none</tt>, <tt>low</tt> , or <tt>high</tt>. With none, the
--   specified string is treated as an exact prefix. With low, suggestions
--   must differ from the specified string by no more than one character.
--   With high, suggestions can differ by up to two characters. The default
--   is none.
dsoFuzzyMatching :: Lens' DocumentSuggesterOptions (Maybe SuggesterFuzzyMatching)

-- | An expression that computes a score for each suggestion to control how
--   they are sorted. The scores are rounded to the nearest integer, with a
--   floor of 0 and a ceiling of 2^31-1. A document's relevance score is
--   not computed for suggestions, so sort expressions cannot reference the
--   <tt>_score</tt> value. To sort suggestions using a numeric field or
--   existing expression, simply specify the name of the field or
--   expression. If no expression is configured for the suggester, the
--   suggestions are sorted with the closest matches listed first.
dsoSortExpression :: Lens' DocumentSuggesterOptions (Maybe Text)

-- | The name of the index field you want to use for suggestions.
dsoSourceField :: Lens' DocumentSuggesterOptions Text
data DoubleArrayOptions

-- | <a>DoubleArrayOptions</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>daoDefaultValue</a> <tt>::</tt> <a>Maybe</a> <a>Double</a></li>
--   <li><a>daoFacetEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>daoReturnEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>daoSearchEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>daoSourceFields</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
doubleArrayOptions :: DoubleArrayOptions

-- | A value to use for the field if the field isn't specified for a
--   document.
daoDefaultValue :: Lens' DoubleArrayOptions (Maybe Double)

-- | Whether facet information can be returned for the field.
daoFacetEnabled :: Lens' DoubleArrayOptions (Maybe Bool)

-- | Whether the contents of the field can be returned in the search
--   results.
daoReturnEnabled :: Lens' DoubleArrayOptions (Maybe Bool)

-- | Whether the contents of the field are searchable.
daoSearchEnabled :: Lens' DoubleArrayOptions (Maybe Bool)

-- | A list of source fields to map to the field.
daoSourceFields :: Lens' DoubleArrayOptions (Maybe Text)
data IndexField

-- | <a>IndexField</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ifDateArrayOptions</a> <tt>::</tt> <a>Maybe</a>
--   <a>DateArrayOptions</a></li>
--   <li><a>ifDateOptions</a> <tt>::</tt> <a>Maybe</a>
--   <a>DateOptions</a></li>
--   <li><a>ifDoubleArrayOptions</a> <tt>::</tt> <a>Maybe</a>
--   <a>DoubleArrayOptions</a></li>
--   <li><a>ifDoubleOptions</a> <tt>::</tt> <a>Maybe</a>
--   <a>DoubleOptions</a></li>
--   <li><a>ifIndexFieldName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ifIndexFieldType</a> <tt>::</tt> <a>IndexFieldType</a></li>
--   <li><a>ifIntArrayOptions</a> <tt>::</tt> <a>Maybe</a>
--   <a>IntArrayOptions</a></li>
--   <li><a>ifIntOptions</a> <tt>::</tt> <a>Maybe</a>
--   <a>IntOptions</a></li>
--   <li><a>ifLatLonOptions</a> <tt>::</tt> <a>Maybe</a>
--   <a>LatLonOptions</a></li>
--   <li><a>ifLiteralArrayOptions</a> <tt>::</tt> <a>Maybe</a>
--   <a>LiteralArrayOptions</a></li>
--   <li><a>ifLiteralOptions</a> <tt>::</tt> <a>Maybe</a>
--   <a>LiteralOptions</a></li>
--   <li><a>ifTextArrayOptions</a> <tt>::</tt> <a>Maybe</a>
--   <a>TextArrayOptions</a></li>
--   <li><a>ifTextOptions</a> <tt>::</tt> <a>Maybe</a>
--   <a>TextOptions</a></li>
--   </ul>
indexField :: Text -> IndexFieldType -> IndexField
ifDateArrayOptions :: Lens' IndexField (Maybe DateArrayOptions)
ifDateOptions :: Lens' IndexField (Maybe DateOptions)
ifDoubleArrayOptions :: Lens' IndexField (Maybe DoubleArrayOptions)
ifDoubleOptions :: Lens' IndexField (Maybe DoubleOptions)

-- | A string that represents the name of an index field. CloudSearch
--   supports regular index fields as well as dynamic fields. A dynamic
--   field's name defines a pattern that begins or ends with a wildcard.
--   Any document fields that don't map to a regular index field but do
--   match a dynamic field's pattern are configured with the dynamic
--   field's indexing options.
--   
--   Regular field names begin with a letter and can contain the following
--   characters: a-z (lowercase), 0-9, and _ (underscore). Dynamic field
--   names must begin or end with a wildcard (*). The wildcard can also be
--   the only character in a dynamic field name. Multiple wildcards, and
--   wildcards embedded within a string are not supported.
--   
--   The name <tt>score</tt> is reserved and cannot be used as a field
--   name. To reference a document's ID, you can use the name <tt>_id</tt>.
ifIndexFieldName :: Lens' IndexField Text
ifIndexFieldType :: Lens' IndexField IndexFieldType
ifIntArrayOptions :: Lens' IndexField (Maybe IntArrayOptions)
ifIntOptions :: Lens' IndexField (Maybe IntOptions)
ifLatLonOptions :: Lens' IndexField (Maybe LatLonOptions)
ifLiteralArrayOptions :: Lens' IndexField (Maybe LiteralArrayOptions)
ifLiteralOptions :: Lens' IndexField (Maybe LiteralOptions)
ifTextArrayOptions :: Lens' IndexField (Maybe TextArrayOptions)
ifTextOptions :: Lens' IndexField (Maybe TextOptions)
data DateOptions

-- | <a>DateOptions</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>doDefaultValue</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>doFacetEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>doReturnEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>doSearchEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>doSortEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>doSourceField</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
dateOptions :: DateOptions

-- | A value to use for the field if the field isn't specified for a
--   document.
doDefaultValue :: Lens' DateOptions (Maybe Text)

-- | Whether facet information can be returned for the field.
doFacetEnabled :: Lens' DateOptions (Maybe Bool)

-- | Whether the contents of the field can be returned in the search
--   results.
doReturnEnabled :: Lens' DateOptions (Maybe Bool)

-- | Whether the contents of the field are searchable.
doSearchEnabled :: Lens' DateOptions (Maybe Bool)

-- | Whether the field can be used to sort the search results.
doSortEnabled :: Lens' DateOptions (Maybe Bool)
doSourceField :: Lens' DateOptions (Maybe Text)
data OptionState

-- | Active
Active :: OptionState

-- | FailedToValidate
FailedToValidate :: OptionState

-- | Processing
Processing :: OptionState

-- | RequiresIndexDocuments
RequiresIndexDocuments :: OptionState
data TextArrayOptions

-- | <a>TextArrayOptions</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>taoAnalysisScheme</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>taoDefaultValue</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>taoHighlightEnabled</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>taoReturnEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>taoSourceFields</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
textArrayOptions :: TextArrayOptions

-- | The name of an analysis scheme for a 'text-array' field.
taoAnalysisScheme :: Lens' TextArrayOptions (Maybe Text)

-- | A value to use for the field if the field isn't specified for a
--   document.
taoDefaultValue :: Lens' TextArrayOptions (Maybe Text)

-- | Whether highlights can be returned for the field.
taoHighlightEnabled :: Lens' TextArrayOptions (Maybe Bool)

-- | Whether the contents of the field can be returned in the search
--   results.
taoReturnEnabled :: Lens' TextArrayOptions (Maybe Bool)

-- | A list of source fields to map to the field.
taoSourceFields :: Lens' TextArrayOptions (Maybe Text)
data AlgorithmicStemming

-- | full
Full :: AlgorithmicStemming

-- | light
Light :: AlgorithmicStemming

-- | minimal
Minimal :: AlgorithmicStemming

-- | none
None :: AlgorithmicStemming
data AnalysisScheme

-- | <a>AnalysisScheme</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>asAnalysisOptions</a> <tt>::</tt> <a>Maybe</a>
--   <a>AnalysisOptions</a></li>
--   <li><a>asAnalysisSchemeLanguage</a> <tt>::</tt>
--   <a>AnalysisSchemeLanguage</a></li>
--   <li><a>asAnalysisSchemeName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
analysisScheme :: Text -> AnalysisSchemeLanguage -> AnalysisScheme
asAnalysisOptions :: Lens' AnalysisScheme (Maybe AnalysisOptions)
asAnalysisSchemeLanguage :: Lens' AnalysisScheme AnalysisSchemeLanguage
asAnalysisSchemeName :: Lens' AnalysisScheme Text
data ScalingParameters

-- | <a>ScalingParameters</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>spDesiredInstanceType</a> <tt>::</tt> <a>Maybe</a>
--   <a>PartitionInstanceType</a></li>
--   <li><a>spDesiredPartitionCount</a> <tt>::</tt> <a>Maybe</a>
--   <a>Natural</a></li>
--   <li><a>spDesiredReplicationCount</a> <tt>::</tt> <a>Maybe</a>
--   <a>Natural</a></li>
--   </ul>
scalingParameters :: ScalingParameters

-- | The instance type that you want to preconfigure for your domain. For
--   example, 'search.m1.small'.
spDesiredInstanceType :: Lens' ScalingParameters (Maybe PartitionInstanceType)

-- | The number of partitions you want to preconfigure for your domain.
--   Only valid when you select 'm2.2xlarge' as the desired instance type.
spDesiredPartitionCount :: Lens' ScalingParameters (Maybe Natural)

-- | The number of replicas you want to preconfigure for each index
--   partition.
spDesiredReplicationCount :: Lens' ScalingParameters (Maybe Natural)
data AnalysisOptions

-- | <a>AnalysisOptions</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>aoAlgorithmicStemming</a> <tt>::</tt> <a>Maybe</a>
--   <a>AlgorithmicStemming</a></li>
--   <li><a>aoJapaneseTokenizationDictionary</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>aoStemmingDictionary</a> <tt>::</tt> <a>Maybe</a>
--   <a>Text</a></li>
--   <li><a>aoStopwords</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>aoSynonyms</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
analysisOptions :: AnalysisOptions

-- | The level of algorithmic stemming to perform: <tt>none</tt>,
--   <tt>minimal</tt>, <tt>light</tt>, or <tt>full</tt>. The available
--   levels vary depending on the language. For more information, see
--   Language Specific Text Processing Settings in the <i>Amazon
--   CloudSearchDeveloper Guide</i>
aoAlgorithmicStemming :: Lens' AnalysisOptions (Maybe AlgorithmicStemming)

-- | A JSON array that contains a collection of terms, tokens, readings and
--   part of speech for Japanese Tokenizaiton. The Japanese tokenization
--   dictionary enables you to override the default tokenization for
--   selected terms. This is only valid for Japanese language fields.
aoJapaneseTokenizationDictionary :: Lens' AnalysisOptions (Maybe Text)

-- | A JSON object that contains a collection of string:value pairs that
--   each map a term to its stem. For example, '{"term1": "stem1", "term2":
--   "stem2","term3": "stem3"}'. The stemming dictionary is applied in
--   addition to any algorithmic stemming. This enables you to override the
--   results of the algorithmic stemming to correct specific cases of
--   overstemming or understemming. The maximum size of a stemming
--   dictionary is 500 KB.
aoStemmingDictionary :: Lens' AnalysisOptions (Maybe Text)

-- | A JSON array of terms to ignore during indexing and searching. For
--   example, '["a", "an", "the", "of"]'. The stopwords dictionary must
--   explicitly list each word you want to ignore. Wildcards and regular
--   expressions are not supported.
aoStopwords :: Lens' AnalysisOptions (Maybe Text)

-- | A JSON object that defines synonym groups and aliases. A synonym group
--   is an array of arrays, where each sub-array is a group of terms where
--   each term in the group is considered a synonym of every other term in
--   the group. The aliases value is an object that contains a collection
--   of string:value pairs where the string specifies a term and the array
--   of values specifies each of the aliases for that term. An alias is
--   considered a synonym of the specified term, but the term is not
--   considered a synonym of the alias. For more information about
--   specifying synonyms, see <a>Synonyms</a> in the <i>Amazon
--   CloudSearchDeveloper Guide</i>.
aoSynonyms :: Lens' AnalysisOptions (Maybe Text)
data DoubleOptions

-- | <a>DoubleOptions</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>do1DefaultValue</a> <tt>::</tt> <a>Maybe</a> <a>Double</a></li>
--   <li><a>do1FacetEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>do1ReturnEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>do1SearchEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>do1SortEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>do1SourceField</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
doubleOptions :: DoubleOptions

-- | A value to use for the field if the field isn't specified for a
--   document. This can be important if you are using the field in an
--   expression and that field is not present in every document.
do1DefaultValue :: Lens' DoubleOptions (Maybe Double)

-- | Whether facet information can be returned for the field.
do1FacetEnabled :: Lens' DoubleOptions (Maybe Bool)

-- | Whether the contents of the field can be returned in the search
--   results.
do1ReturnEnabled :: Lens' DoubleOptions (Maybe Bool)

-- | Whether the contents of the field are searchable.
do1SearchEnabled :: Lens' DoubleOptions (Maybe Bool)

-- | Whether the field can be used to sort the search results.
do1SortEnabled :: Lens' DoubleOptions (Maybe Bool)

-- | The name of the source field to map to the field.
do1SourceField :: Lens' DoubleOptions (Maybe Text)
data TextOptions

-- | <a>TextOptions</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>toAnalysisScheme</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>toDefaultValue</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>toHighlightEnabled</a> <tt>::</tt> <a>Maybe</a>
--   <a>Bool</a></li>
--   <li><a>toReturnEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>toSortEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>toSourceField</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
textOptions :: TextOptions

-- | The name of an analysis scheme for a <tt>text</tt> field.
toAnalysisScheme :: Lens' TextOptions (Maybe Text)

-- | A value to use for the field if the field isn't specified for a
--   document.
toDefaultValue :: Lens' TextOptions (Maybe Text)

-- | Whether highlights can be returned for the field.
toHighlightEnabled :: Lens' TextOptions (Maybe Bool)

-- | Whether the contents of the field can be returned in the search
--   results.
toReturnEnabled :: Lens' TextOptions (Maybe Bool)

-- | Whether the field can be used to sort the search results.
toSortEnabled :: Lens' TextOptions (Maybe Bool)
toSourceField :: Lens' TextOptions (Maybe Text)
data AvailabilityOptionsStatus

-- | <a>AvailabilityOptionsStatus</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>aosOptions</a> <tt>::</tt> <a>Bool</a></li>
--   <li><a>aosStatus</a> <tt>::</tt> <a>OptionStatus</a></li>
--   </ul>
availabilityOptionsStatus :: Bool -> OptionStatus -> AvailabilityOptionsStatus

-- | The availability options configured for the domain.
aosOptions :: Lens' AvailabilityOptionsStatus Bool
aosStatus :: Lens' AvailabilityOptionsStatus OptionStatus
data IndexFieldStatus

-- | <a>IndexFieldStatus</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ifsOptions</a> <tt>::</tt> <a>IndexField</a></li>
--   <li><a>ifsStatus</a> <tt>::</tt> <a>OptionStatus</a></li>
--   </ul>
indexFieldStatus :: IndexField -> OptionStatus -> IndexFieldStatus
ifsOptions :: Lens' IndexFieldStatus IndexField
ifsStatus :: Lens' IndexFieldStatus OptionStatus
data ScalingParametersStatus

-- | <a>ScalingParametersStatus</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>spsOptions</a> <tt>::</tt> <a>ScalingParameters</a></li>
--   <li><a>spsStatus</a> <tt>::</tt> <a>OptionStatus</a></li>
--   </ul>
scalingParametersStatus :: ScalingParameters -> OptionStatus -> ScalingParametersStatus
spsOptions :: Lens' ScalingParametersStatus ScalingParameters
spsStatus :: Lens' ScalingParametersStatus OptionStatus
data AnalysisSchemeStatus

-- | <a>AnalysisSchemeStatus</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>assOptions</a> <tt>::</tt> <a>AnalysisScheme</a></li>
--   <li><a>assStatus</a> <tt>::</tt> <a>OptionStatus</a></li>
--   </ul>
analysisSchemeStatus :: AnalysisScheme -> OptionStatus -> AnalysisSchemeStatus
assOptions :: Lens' AnalysisSchemeStatus AnalysisScheme
assStatus :: Lens' AnalysisSchemeStatus OptionStatus
data ServiceEndpoint

-- | <a>ServiceEndpoint</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>seEndpoint</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
serviceEndpoint :: ServiceEndpoint
seEndpoint :: Lens' ServiceEndpoint (Maybe Text)
data Limits

-- | <a>Limits</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lMaximumPartitionCount</a> <tt>::</tt> <a>Natural</a></li>
--   <li><a>lMaximumReplicationCount</a> <tt>::</tt> <a>Natural</a></li>
--   </ul>
limits :: Natural -> Natural -> Limits
lMaximumPartitionCount :: Lens' Limits Natural
lMaximumReplicationCount :: Lens' Limits Natural
data ExpressionStatus

-- | <a>ExpressionStatus</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>esOptions</a> <tt>::</tt> <a>Expression</a></li>
--   <li><a>esStatus</a> <tt>::</tt> <a>OptionStatus</a></li>
--   </ul>
expressionStatus :: Expression -> OptionStatus -> ExpressionStatus

-- | The expression that is evaluated for sorting while processing a search
--   request.
esOptions :: Lens' ExpressionStatus Expression
esStatus :: Lens' ExpressionStatus OptionStatus
data IndexFieldType

-- | date
IFTDate :: IndexFieldType

-- | date-array
IFTDateArray :: IndexFieldType

-- | double
IFTDouble :: IndexFieldType

-- | double-array
IFTDoubleArray :: IndexFieldType

-- | int
IFTInt :: IndexFieldType

-- | int-array
IFTIntArray :: IndexFieldType

-- | latlon
IFTLatlon :: IndexFieldType

-- | literal
IFTLiteral :: IndexFieldType

-- | literal-array
IFTLiteralArray :: IndexFieldType

-- | text
IFTText :: IndexFieldType

-- | text-array
IFTTextArray :: IndexFieldType
data LatLonOptions

-- | <a>LatLonOptions</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>lloDefaultValue</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>lloFacetEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>lloReturnEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>lloSearchEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>lloSortEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>lloSourceField</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
latLonOptions :: LatLonOptions

-- | A value to use for the field if the field isn't specified for a
--   document.
lloDefaultValue :: Lens' LatLonOptions (Maybe Text)

-- | Whether facet information can be returned for the field.
lloFacetEnabled :: Lens' LatLonOptions (Maybe Bool)

-- | Whether the contents of the field can be returned in the search
--   results.
lloReturnEnabled :: Lens' LatLonOptions (Maybe Bool)

-- | Whether the contents of the field are searchable.
lloSearchEnabled :: Lens' LatLonOptions (Maybe Bool)

-- | Whether the field can be used to sort the search results.
lloSortEnabled :: Lens' LatLonOptions (Maybe Bool)
lloSourceField :: Lens' LatLonOptions (Maybe Text)
data SuggesterStatus

-- | <a>SuggesterStatus</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ssOptions</a> <tt>::</tt> <a>Suggester</a></li>
--   <li><a>ssStatus</a> <tt>::</tt> <a>OptionStatus</a></li>
--   </ul>
suggesterStatus :: Suggester -> OptionStatus -> SuggesterStatus
ssOptions :: Lens' SuggesterStatus Suggester
ssStatus :: Lens' SuggesterStatus OptionStatus
data OptionStatus

-- | <a>OptionStatus</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>osCreationDate</a> <tt>::</tt> <a>UTCTime</a></li>
--   <li><a>osPendingDeletion</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>osState</a> <tt>::</tt> <a>OptionState</a></li>
--   <li><a>osUpdateDate</a> <tt>::</tt> <a>UTCTime</a></li>
--   <li><a>osUpdateVersion</a> <tt>::</tt> <a>Maybe</a>
--   <a>Natural</a></li>
--   </ul>
optionStatus :: UTCTime -> UTCTime -> OptionState -> OptionStatus

-- | A timestamp for when this option was created.
osCreationDate :: Lens' OptionStatus UTCTime

-- | Indicates that the option will be deleted once processing is complete.
osPendingDeletion :: Lens' OptionStatus (Maybe Bool)

-- | The state of processing a change to an option. Possible values:
--   
--   <a>RequiresIndexDocuments</a>: the option's latest value will not be
--   deployed until <tt>IndexDocuments</tt> has been called and indexing is
--   complete. <a>Processing</a>: the option's latest value is in the
--   process of being activated. <a>Active</a>: the option's latest value
--   is completely deployed. <a>FailedToValidate</a>: the option value is
--   not compatible with the domain's data and cannot be used to index the
--   data. You must either modify the option value or update or remove the
--   incompatible documents.
osState :: Lens' OptionStatus OptionState

-- | A timestamp for when this option was last updated.
osUpdateDate :: Lens' OptionStatus UTCTime

-- | A unique integer that indicates when this option was last updated.
osUpdateVersion :: Lens' OptionStatus (Maybe Natural)
data LiteralArrayOptions

-- | <a>LiteralArrayOptions</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>laoDefaultValue</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>laoFacetEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>laoReturnEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>laoSearchEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>laoSourceFields</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
literalArrayOptions :: LiteralArrayOptions

-- | A value to use for the field if the field isn't specified for a
--   document.
laoDefaultValue :: Lens' LiteralArrayOptions (Maybe Text)

-- | Whether facet information can be returned for the field.
laoFacetEnabled :: Lens' LiteralArrayOptions (Maybe Bool)

-- | Whether the contents of the field can be returned in the search
--   results.
laoReturnEnabled :: Lens' LiteralArrayOptions (Maybe Bool)

-- | Whether the contents of the field are searchable.
laoSearchEnabled :: Lens' LiteralArrayOptions (Maybe Bool)

-- | A list of source fields to map to the field.
laoSourceFields :: Lens' LiteralArrayOptions (Maybe Text)
data IntArrayOptions

-- | <a>IntArrayOptions</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>iaoDefaultValue</a> <tt>::</tt> <a>Maybe</a>
--   <a>Integer</a></li>
--   <li><a>iaoFacetEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>iaoReturnEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>iaoSearchEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>iaoSourceFields</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
intArrayOptions :: IntArrayOptions

-- | A value to use for the field if the field isn't specified for a
--   document.
iaoDefaultValue :: Lens' IntArrayOptions (Maybe Integer)

-- | Whether facet information can be returned for the field.
iaoFacetEnabled :: Lens' IntArrayOptions (Maybe Bool)

-- | Whether the contents of the field can be returned in the search
--   results.
iaoReturnEnabled :: Lens' IntArrayOptions (Maybe Bool)

-- | Whether the contents of the field are searchable.
iaoSearchEnabled :: Lens' IntArrayOptions (Maybe Bool)

-- | A list of source fields to map to the field.
iaoSourceFields :: Lens' IntArrayOptions (Maybe Text)
data Expression

-- | <a>Expression</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>eExpressionName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>eExpressionValue</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
expression :: Text -> Text -> Expression
eExpressionName :: Lens' Expression Text
eExpressionValue :: Lens' Expression Text
data SuggesterFuzzyMatching

-- | high
SFMHigh :: SuggesterFuzzyMatching

-- | low
SFMLow :: SuggesterFuzzyMatching

-- | none
SFMNone :: SuggesterFuzzyMatching
data DateArrayOptions

-- | <a>DateArrayOptions</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dao1DefaultValue</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>dao1FacetEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dao1ReturnEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dao1SearchEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dao1SourceFields</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
dateArrayOptions :: DateArrayOptions

-- | A value to use for the field if the field isn't specified for a
--   document.
dao1DefaultValue :: Lens' DateArrayOptions (Maybe Text)

-- | Whether facet information can be returned for the field.
dao1FacetEnabled :: Lens' DateArrayOptions (Maybe Bool)

-- | Whether the contents of the field can be returned in the search
--   results.
dao1ReturnEnabled :: Lens' DateArrayOptions (Maybe Bool)

-- | Whether the contents of the field are searchable.
dao1SearchEnabled :: Lens' DateArrayOptions (Maybe Bool)

-- | A list of source fields to map to the field.
dao1SourceFields :: Lens' DateArrayOptions (Maybe Text)
data AnalysisSchemeLanguage

-- | ar
Ar :: AnalysisSchemeLanguage

-- | bg
Bg :: AnalysisSchemeLanguage

-- | ca
Ca :: AnalysisSchemeLanguage

-- | cs
Cs :: AnalysisSchemeLanguage

-- | da
Da :: AnalysisSchemeLanguage

-- | de
De :: AnalysisSchemeLanguage

-- | el
El :: AnalysisSchemeLanguage

-- | en
En :: AnalysisSchemeLanguage

-- | es
Es :: AnalysisSchemeLanguage

-- | eu
Eu :: AnalysisSchemeLanguage

-- | fa
Fa :: AnalysisSchemeLanguage

-- | fi
Fi :: AnalysisSchemeLanguage

-- | fr
Fr :: AnalysisSchemeLanguage

-- | ga
Ga :: AnalysisSchemeLanguage

-- | gl
Gl :: AnalysisSchemeLanguage

-- | he
He :: AnalysisSchemeLanguage

-- | hi
Hi :: AnalysisSchemeLanguage

-- | hu
Hu :: AnalysisSchemeLanguage

-- | hy
Hy :: AnalysisSchemeLanguage

-- | id
Id :: AnalysisSchemeLanguage

-- | it
It :: AnalysisSchemeLanguage

-- | ja
Ja :: AnalysisSchemeLanguage

-- | ko
Ko :: AnalysisSchemeLanguage

-- | lv
Lv :: AnalysisSchemeLanguage

-- | mul
Mul :: AnalysisSchemeLanguage

-- | nl
Nl :: AnalysisSchemeLanguage

-- | no
No :: AnalysisSchemeLanguage

-- | pt
Pt :: AnalysisSchemeLanguage

-- | ro
Ro :: AnalysisSchemeLanguage

-- | ru
Ru :: AnalysisSchemeLanguage

-- | sv
Sv :: AnalysisSchemeLanguage

-- | th
Th :: AnalysisSchemeLanguage

-- | tr
Tr :: AnalysisSchemeLanguage

-- | zh-Hans
ZhHans :: AnalysisSchemeLanguage

-- | zh-Hant
ZhHant :: AnalysisSchemeLanguage
data PartitionInstanceType

-- | search.m1.large
SearchM1Large :: PartitionInstanceType

-- | search.m1.small
SearchM1Small :: PartitionInstanceType

-- | search.m2.2xlarge
SearchM22xlarge :: PartitionInstanceType

-- | search.m2.xlarge
SearchM2Xlarge :: PartitionInstanceType

-- | search.m3.2xlarge
SearchM32xlarge :: PartitionInstanceType

-- | search.m3.large
SearchM3Large :: PartitionInstanceType

-- | search.m3.medium
SearchM3Medium :: PartitionInstanceType

-- | search.m3.xlarge
SearchM3Xlarge :: PartitionInstanceType
data Suggester

-- | <a>Suggester</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>sDocumentSuggesterOptions</a> <tt>::</tt>
--   <a>DocumentSuggesterOptions</a></li>
--   <li><a>sSuggesterName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
suggester :: Text -> DocumentSuggesterOptions -> Suggester
sDocumentSuggesterOptions :: Lens' Suggester DocumentSuggesterOptions
sSuggesterName :: Lens' Suggester Text
data IntOptions

-- | <a>IntOptions</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ioDefaultValue</a> <tt>::</tt> <a>Maybe</a> <a>Integer</a></li>
--   <li><a>ioFacetEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>ioReturnEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>ioSearchEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>ioSortEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>ioSourceField</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
intOptions :: IntOptions

-- | A value to use for the field if the field isn't specified for a
--   document. This can be important if you are using the field in an
--   expression and that field is not present in every document.
ioDefaultValue :: Lens' IntOptions (Maybe Integer)

-- | Whether facet information can be returned for the field.
ioFacetEnabled :: Lens' IntOptions (Maybe Bool)

-- | Whether the contents of the field can be returned in the search
--   results.
ioReturnEnabled :: Lens' IntOptions (Maybe Bool)

-- | Whether the contents of the field are searchable.
ioSearchEnabled :: Lens' IntOptions (Maybe Bool)

-- | Whether the field can be used to sort the search results.
ioSortEnabled :: Lens' IntOptions (Maybe Bool)

-- | The name of the source field to map to the field.
ioSourceField :: Lens' IntOptions (Maybe Text)
data LiteralOptions

-- | <a>LiteralOptions</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>loDefaultValue</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   <li><a>loFacetEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>loReturnEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>loSearchEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>loSortEnabled</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>loSourceField</a> <tt>::</tt> <a>Maybe</a> <a>Text</a></li>
--   </ul>
literalOptions :: LiteralOptions

-- | A value to use for the field if the field isn't specified for a
--   document.
loDefaultValue :: Lens' LiteralOptions (Maybe Text)

-- | Whether facet information can be returned for the field.
loFacetEnabled :: Lens' LiteralOptions (Maybe Bool)

-- | Whether the contents of the field can be returned in the search
--   results.
loReturnEnabled :: Lens' LiteralOptions (Maybe Bool)

-- | Whether the contents of the field are searchable.
loSearchEnabled :: Lens' LiteralOptions (Maybe Bool)

-- | Whether the field can be used to sort the search results.
loSortEnabled :: Lens' LiteralOptions (Maybe Bool)
loSourceField :: Lens' LiteralOptions (Maybe Text)
data AccessPoliciesStatus

-- | <a>AccessPoliciesStatus</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>apsOptions</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>apsStatus</a> <tt>::</tt> <a>OptionStatus</a></li>
--   </ul>
accessPoliciesStatus :: Text -> OptionStatus -> AccessPoliciesStatus
apsOptions :: Lens' AccessPoliciesStatus Text
apsStatus :: Lens' AccessPoliciesStatus OptionStatus
instance Eq DoubleArrayOptions
instance Ord DoubleArrayOptions
instance Read DoubleArrayOptions
instance Show DoubleArrayOptions
instance Eq DateOptions
instance Ord DateOptions
instance Read DateOptions
instance Show DateOptions
instance Eq OptionState
instance Ord OptionState
instance Read OptionState
instance Show OptionState
instance Generic OptionState
instance Enum OptionState
instance Eq TextArrayOptions
instance Ord TextArrayOptions
instance Read TextArrayOptions
instance Show TextArrayOptions
instance Eq AlgorithmicStemming
instance Ord AlgorithmicStemming
instance Read AlgorithmicStemming
instance Show AlgorithmicStemming
instance Generic AlgorithmicStemming
instance Enum AlgorithmicStemming
instance Eq AnalysisOptions
instance Read AnalysisOptions
instance Show AnalysisOptions
instance Eq DoubleOptions
instance Ord DoubleOptions
instance Read DoubleOptions
instance Show DoubleOptions
instance Eq TextOptions
instance Ord TextOptions
instance Read TextOptions
instance Show TextOptions
instance Eq ServiceEndpoint
instance Ord ServiceEndpoint
instance Read ServiceEndpoint
instance Show ServiceEndpoint
instance Monoid ServiceEndpoint
instance Eq Limits
instance Ord Limits
instance Read Limits
instance Show Limits
instance Eq DomainStatus
instance Read DomainStatus
instance Show DomainStatus
instance Eq IndexFieldType
instance Ord IndexFieldType
instance Read IndexFieldType
instance Show IndexFieldType
instance Generic IndexFieldType
instance Enum IndexFieldType
instance Eq LatLonOptions
instance Ord LatLonOptions
instance Read LatLonOptions
instance Show LatLonOptions
instance Eq OptionStatus
instance Read OptionStatus
instance Show OptionStatus
instance Eq AvailabilityOptionsStatus
instance Read AvailabilityOptionsStatus
instance Show AvailabilityOptionsStatus
instance Eq LiteralArrayOptions
instance Ord LiteralArrayOptions
instance Read LiteralArrayOptions
instance Show LiteralArrayOptions
instance Eq IntArrayOptions
instance Ord IntArrayOptions
instance Read IntArrayOptions
instance Show IntArrayOptions
instance Eq Expression
instance Ord Expression
instance Read Expression
instance Show Expression
instance Eq ExpressionStatus
instance Read ExpressionStatus
instance Show ExpressionStatus
instance Eq SuggesterFuzzyMatching
instance Ord SuggesterFuzzyMatching
instance Read SuggesterFuzzyMatching
instance Show SuggesterFuzzyMatching
instance Generic SuggesterFuzzyMatching
instance Enum SuggesterFuzzyMatching
instance Eq DocumentSuggesterOptions
instance Read DocumentSuggesterOptions
instance Show DocumentSuggesterOptions
instance Eq DateArrayOptions
instance Ord DateArrayOptions
instance Read DateArrayOptions
instance Show DateArrayOptions
instance Eq AnalysisSchemeLanguage
instance Ord AnalysisSchemeLanguage
instance Read AnalysisSchemeLanguage
instance Show AnalysisSchemeLanguage
instance Generic AnalysisSchemeLanguage
instance Enum AnalysisSchemeLanguage
instance Eq AnalysisScheme
instance Read AnalysisScheme
instance Show AnalysisScheme
instance Eq AnalysisSchemeStatus
instance Read AnalysisSchemeStatus
instance Show AnalysisSchemeStatus
instance Eq PartitionInstanceType
instance Ord PartitionInstanceType
instance Read PartitionInstanceType
instance Show PartitionInstanceType
instance Generic PartitionInstanceType
instance Enum PartitionInstanceType
instance Eq ScalingParameters
instance Read ScalingParameters
instance Show ScalingParameters
instance Eq ScalingParametersStatus
instance Read ScalingParametersStatus
instance Show ScalingParametersStatus
instance Eq Suggester
instance Read Suggester
instance Show Suggester
instance Eq SuggesterStatus
instance Read SuggesterStatus
instance Show SuggesterStatus
instance Eq IntOptions
instance Ord IntOptions
instance Read IntOptions
instance Show IntOptions
instance Eq LiteralOptions
instance Ord LiteralOptions
instance Read LiteralOptions
instance Show LiteralOptions
instance Eq IndexField
instance Read IndexField
instance Show IndexField
instance Eq IndexFieldStatus
instance Read IndexFieldStatus
instance Show IndexFieldStatus
instance Eq AccessPoliciesStatus
instance Read AccessPoliciesStatus
instance Show AccessPoliciesStatus
instance Datatype D1OptionState
instance Constructor C1_0OptionState
instance Constructor C1_1OptionState
instance Constructor C1_2OptionState
instance Constructor C1_3OptionState
instance Datatype D1AlgorithmicStemming
instance Constructor C1_0AlgorithmicStemming
instance Constructor C1_1AlgorithmicStemming
instance Constructor C1_2AlgorithmicStemming
instance Constructor C1_3AlgorithmicStemming
instance Datatype D1IndexFieldType
instance Constructor C1_0IndexFieldType
instance Constructor C1_1IndexFieldType
instance Constructor C1_2IndexFieldType
instance Constructor C1_3IndexFieldType
instance Constructor C1_4IndexFieldType
instance Constructor C1_5IndexFieldType
instance Constructor C1_6IndexFieldType
instance Constructor C1_7IndexFieldType
instance Constructor C1_8IndexFieldType
instance Constructor C1_9IndexFieldType
instance Constructor C1_10IndexFieldType
instance Datatype D1SuggesterFuzzyMatching
instance Constructor C1_0SuggesterFuzzyMatching
instance Constructor C1_1SuggesterFuzzyMatching
instance Constructor C1_2SuggesterFuzzyMatching
instance Datatype D1AnalysisSchemeLanguage
instance Constructor C1_0AnalysisSchemeLanguage
instance Constructor C1_1AnalysisSchemeLanguage
instance Constructor C1_2AnalysisSchemeLanguage
instance Constructor C1_3AnalysisSchemeLanguage
instance Constructor C1_4AnalysisSchemeLanguage
instance Constructor C1_5AnalysisSchemeLanguage
instance Constructor C1_6AnalysisSchemeLanguage
instance Constructor C1_7AnalysisSchemeLanguage
instance Constructor C1_8AnalysisSchemeLanguage
instance Constructor C1_9AnalysisSchemeLanguage
instance Constructor C1_10AnalysisSchemeLanguage
instance Constructor C1_11AnalysisSchemeLanguage
instance Constructor C1_12AnalysisSchemeLanguage
instance Constructor C1_13AnalysisSchemeLanguage
instance Constructor C1_14AnalysisSchemeLanguage
instance Constructor C1_15AnalysisSchemeLanguage
instance Constructor C1_16AnalysisSchemeLanguage
instance Constructor C1_17AnalysisSchemeLanguage
instance Constructor C1_18AnalysisSchemeLanguage
instance Constructor C1_19AnalysisSchemeLanguage
instance Constructor C1_20AnalysisSchemeLanguage
instance Constructor C1_21AnalysisSchemeLanguage
instance Constructor C1_22AnalysisSchemeLanguage
instance Constructor C1_23AnalysisSchemeLanguage
instance Constructor C1_24AnalysisSchemeLanguage
instance Constructor C1_25AnalysisSchemeLanguage
instance Constructor C1_26AnalysisSchemeLanguage
instance Constructor C1_27AnalysisSchemeLanguage
instance Constructor C1_28AnalysisSchemeLanguage
instance Constructor C1_29AnalysisSchemeLanguage
instance Constructor C1_30AnalysisSchemeLanguage
instance Constructor C1_31AnalysisSchemeLanguage
instance Constructor C1_32AnalysisSchemeLanguage
instance Constructor C1_33AnalysisSchemeLanguage
instance Constructor C1_34AnalysisSchemeLanguage
instance Datatype D1PartitionInstanceType
instance Constructor C1_0PartitionInstanceType
instance Constructor C1_1PartitionInstanceType
instance Constructor C1_2PartitionInstanceType
instance Constructor C1_3PartitionInstanceType
instance Constructor C1_4PartitionInstanceType
instance Constructor C1_5PartitionInstanceType
instance Constructor C1_6PartitionInstanceType
instance Constructor C1_7PartitionInstanceType
instance ToQuery AccessPoliciesStatus
instance FromXML AccessPoliciesStatus
instance ToQuery LiteralOptions
instance FromXML LiteralOptions
instance ToQuery IntOptions
instance FromXML IntOptions
instance ToQuery Suggester
instance FromXML Suggester
instance FromXML PartitionInstanceType
instance ToQuery PartitionInstanceType
instance ToHeader PartitionInstanceType
instance ToByteString PartitionInstanceType
instance ToText PartitionInstanceType
instance FromText PartitionInstanceType
instance Hashable PartitionInstanceType
instance FromXML AnalysisSchemeLanguage
instance ToQuery AnalysisSchemeLanguage
instance ToHeader AnalysisSchemeLanguage
instance ToByteString AnalysisSchemeLanguage
instance ToText AnalysisSchemeLanguage
instance FromText AnalysisSchemeLanguage
instance Hashable AnalysisSchemeLanguage
instance ToQuery DateArrayOptions
instance FromXML DateArrayOptions
instance FromXML SuggesterFuzzyMatching
instance ToQuery SuggesterFuzzyMatching
instance ToHeader SuggesterFuzzyMatching
instance ToByteString SuggesterFuzzyMatching
instance ToText SuggesterFuzzyMatching
instance FromText SuggesterFuzzyMatching
instance Hashable SuggesterFuzzyMatching
instance ToQuery Expression
instance FromXML Expression
instance ToQuery IntArrayOptions
instance FromXML IntArrayOptions
instance ToQuery LiteralArrayOptions
instance FromXML LiteralArrayOptions
instance ToQuery OptionStatus
instance FromXML OptionStatus
instance ToQuery SuggesterStatus
instance FromXML SuggesterStatus
instance ToQuery LatLonOptions
instance FromXML LatLonOptions
instance FromXML IndexFieldType
instance ToQuery IndexFieldType
instance ToHeader IndexFieldType
instance ToByteString IndexFieldType
instance ToText IndexFieldType
instance FromText IndexFieldType
instance Hashable IndexFieldType
instance ToQuery ExpressionStatus
instance FromXML ExpressionStatus
instance ToQuery Limits
instance FromXML Limits
instance ToQuery ServiceEndpoint
instance FromXML ServiceEndpoint
instance ToQuery AnalysisSchemeStatus
instance FromXML AnalysisSchemeStatus
instance ToQuery ScalingParametersStatus
instance FromXML ScalingParametersStatus
instance ToQuery IndexFieldStatus
instance FromXML IndexFieldStatus
instance ToQuery AvailabilityOptionsStatus
instance FromXML AvailabilityOptionsStatus
instance ToQuery TextOptions
instance FromXML TextOptions
instance ToQuery DoubleOptions
instance FromXML DoubleOptions
instance ToQuery AnalysisOptions
instance FromXML AnalysisOptions
instance ToQuery ScalingParameters
instance FromXML ScalingParameters
instance ToQuery AnalysisScheme
instance FromXML AnalysisScheme
instance FromXML AlgorithmicStemming
instance ToQuery AlgorithmicStemming
instance ToHeader AlgorithmicStemming
instance ToByteString AlgorithmicStemming
instance ToText AlgorithmicStemming
instance FromText AlgorithmicStemming
instance Hashable AlgorithmicStemming
instance ToQuery TextArrayOptions
instance FromXML TextArrayOptions
instance FromXML OptionState
instance ToQuery OptionState
instance ToHeader OptionState
instance ToByteString OptionState
instance ToText OptionState
instance FromText OptionState
instance Hashable OptionState
instance ToQuery DateOptions
instance FromXML DateOptions
instance ToQuery IndexField
instance FromXML IndexField
instance ToQuery DoubleArrayOptions
instance FromXML DoubleArrayOptions
instance ToQuery DocumentSuggesterOptions
instance FromXML DocumentSuggesterOptions
instance ToQuery DomainStatus
instance FromXML DomainStatus
instance AWSService CloudSearch


-- | Configures the availability options for a domain. Enabling the
--   Multi-AZ option expands an Amazon CloudSearch domain to an additional
--   Availability Zone in the same Region to increase fault tolerance in
--   the event of a service disruption. Changes to the Multi-AZ option can
--   take about half an hour to become active. For more information, see
--   Configuring Availability Options in the <i>Amazon CloudSearch
--   Developer Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_UpdateAvailabilityOptions.html</a>
module Network.AWS.CloudSearch.UpdateAvailabilityOptions
data UpdateAvailabilityOptions

-- | <a>UpdateAvailabilityOptions</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uaoDomainName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>uaoMultiAZ</a> <tt>::</tt> <a>Bool</a></li>
--   </ul>
updateAvailabilityOptions :: Text -> Bool -> UpdateAvailabilityOptions
uaoDomainName :: Lens' UpdateAvailabilityOptions Text

-- | You expand an existing search domain to a second Availability Zone by
--   setting the Multi-AZ option to true. Similarly, you can turn off the
--   Multi-AZ option to downgrade the domain to a single Availability Zone
--   by setting the Multi-AZ option to <tt>false</tt>.
uaoMultiAZ :: Lens' UpdateAvailabilityOptions Bool
data UpdateAvailabilityOptionsResponse

-- | <a>UpdateAvailabilityOptionsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uaorAvailabilityOptions</a> <tt>::</tt> <a>Maybe</a>
--   <a>AvailabilityOptionsStatus</a></li>
--   </ul>
updateAvailabilityOptionsResponse :: UpdateAvailabilityOptionsResponse

-- | The newly-configured availability options. Indicates whether Multi-AZ
--   is enabled for the domain.
uaorAvailabilityOptions :: Lens' UpdateAvailabilityOptionsResponse (Maybe AvailabilityOptionsStatus)
instance Eq UpdateAvailabilityOptions
instance Ord UpdateAvailabilityOptions
instance Read UpdateAvailabilityOptions
instance Show UpdateAvailabilityOptions
instance Eq UpdateAvailabilityOptionsResponse
instance Read UpdateAvailabilityOptionsResponse
instance Show UpdateAvailabilityOptionsResponse
instance FromXML UpdateAvailabilityOptionsResponse
instance AWSRequest UpdateAvailabilityOptions
instance ToHeaders UpdateAvailabilityOptions
instance ToQuery UpdateAvailabilityOptions
instance ToPath UpdateAvailabilityOptions


-- | Configures scaling parameters for a domain. A domain's scaling
--   parameters specify the desired search instance type and replication
--   count. Amazon CloudSearch will still automatically scale your domain
--   based on the volume of data and traffic, but not below the desired
--   instance type and replication count. If the Multi-AZ option is
--   enabled, these values control the resources used per Availability
--   Zone. For more information, see Configuring Scaling Options in the
--   <i>Amazon CloudSearch Developer Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_UpdateScalingParameters.html</a>
module Network.AWS.CloudSearch.UpdateScalingParameters
data UpdateScalingParameters

-- | <a>UpdateScalingParameters</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>uspDomainName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>uspScalingParameters</a> <tt>::</tt>
--   <a>ScalingParameters</a></li>
--   </ul>
updateScalingParameters :: Text -> ScalingParameters -> UpdateScalingParameters
uspDomainName :: Lens' UpdateScalingParameters Text
uspScalingParameters :: Lens' UpdateScalingParameters ScalingParameters
data UpdateScalingParametersResponse

-- | <a>UpdateScalingParametersResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>usprScalingParameters</a> <tt>::</tt>
--   <a>ScalingParametersStatus</a></li>
--   </ul>
updateScalingParametersResponse :: ScalingParametersStatus -> UpdateScalingParametersResponse
usprScalingParameters :: Lens' UpdateScalingParametersResponse ScalingParametersStatus
instance Eq UpdateScalingParameters
instance Read UpdateScalingParameters
instance Show UpdateScalingParameters
instance Eq UpdateScalingParametersResponse
instance Read UpdateScalingParametersResponse
instance Show UpdateScalingParametersResponse
instance FromXML UpdateScalingParametersResponse
instance AWSRequest UpdateScalingParameters
instance ToHeaders UpdateScalingParameters
instance ToQuery UpdateScalingParameters
instance ToPath UpdateScalingParameters


-- | Configures the access rules that control access to the domain's
--   document and search endpoints. For more information, see Configuring
--   Access for an Amazon CloudSearch Domain.
--   
--   
--   <a>http://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_UpdateServiceAccessPolicies.html</a>
module Network.AWS.CloudSearch.UpdateServiceAccessPolicies
data UpdateServiceAccessPolicies

-- | <a>UpdateServiceAccessPolicies</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>usapAccessPolicies</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>usapDomainName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
updateServiceAccessPolicies :: Text -> Text -> UpdateServiceAccessPolicies

-- | The access rules you want to configure. These rules replace any
--   existing rules.
usapAccessPolicies :: Lens' UpdateServiceAccessPolicies Text
usapDomainName :: Lens' UpdateServiceAccessPolicies Text
data UpdateServiceAccessPoliciesResponse

-- | <a>UpdateServiceAccessPoliciesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>usaprAccessPolicies</a> <tt>::</tt>
--   <a>AccessPoliciesStatus</a></li>
--   </ul>
updateServiceAccessPoliciesResponse :: AccessPoliciesStatus -> UpdateServiceAccessPoliciesResponse

-- | The access rules configured for the domain.
usaprAccessPolicies :: Lens' UpdateServiceAccessPoliciesResponse AccessPoliciesStatus
instance Eq UpdateServiceAccessPolicies
instance Ord UpdateServiceAccessPolicies
instance Read UpdateServiceAccessPolicies
instance Show UpdateServiceAccessPolicies
instance Eq UpdateServiceAccessPoliciesResponse
instance Read UpdateServiceAccessPoliciesResponse
instance Show UpdateServiceAccessPoliciesResponse
instance FromXML UpdateServiceAccessPoliciesResponse
instance AWSRequest UpdateServiceAccessPolicies
instance ToHeaders UpdateServiceAccessPolicies
instance ToQuery UpdateServiceAccessPolicies
instance ToPath UpdateServiceAccessPolicies


-- | Lists all search domains owned by an account.
--   
--   
--   <a>http://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_ListDomainNames.html</a>
module Network.AWS.CloudSearch.ListDomainNames
data ListDomainNames

-- | <a>ListDomainNames</a> constructor.
listDomainNames :: ListDomainNames
data ListDomainNamesResponse

-- | <a>ListDomainNamesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ldnrDomainNames</a> <tt>::</tt> <a>HashMap</a> <a>Text</a>
--   <a>Text</a></li>
--   </ul>
listDomainNamesResponse :: ListDomainNamesResponse

-- | The names of the search domains owned by an account.
ldnrDomainNames :: Lens' ListDomainNamesResponse (HashMap Text Text)
instance Eq ListDomainNames
instance Ord ListDomainNames
instance Read ListDomainNames
instance Show ListDomainNames
instance Generic ListDomainNames
instance Eq ListDomainNamesResponse
instance Read ListDomainNamesResponse
instance Show ListDomainNamesResponse
instance Monoid ListDomainNamesResponse
instance Semigroup ListDomainNamesResponse
instance Datatype D1ListDomainNames
instance Constructor C1_0ListDomainNames
instance FromXML ListDomainNamesResponse
instance AWSRequest ListDomainNames
instance ToHeaders ListDomainNames
instance ToQuery ListDomainNames
instance ToPath ListDomainNames


-- | Tells the search domain to start indexing its documents using the
--   latest indexing options. This operation must be invoked to activate
--   options whose <a>OptionStatus</a> is <a>RequiresIndexDocuments</a>.
--   
--   
--   <a>http://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_IndexDocuments.html</a>
module Network.AWS.CloudSearch.IndexDocuments
data IndexDocuments

-- | <a>IndexDocuments</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>idDomainName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
indexDocuments :: Text -> IndexDocuments
idDomainName :: Lens' IndexDocuments Text
data IndexDocumentsResponse

-- | <a>IndexDocumentsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>idrFieldNames</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
indexDocumentsResponse :: IndexDocumentsResponse

-- | The names of the fields that are currently being indexed.
idrFieldNames :: Lens' IndexDocumentsResponse [Text]
instance Eq IndexDocuments
instance Ord IndexDocuments
instance Read IndexDocuments
instance Show IndexDocuments
instance Monoid IndexDocuments
instance IsString IndexDocuments
instance Eq IndexDocumentsResponse
instance Ord IndexDocumentsResponse
instance Read IndexDocumentsResponse
instance Show IndexDocumentsResponse
instance Monoid IndexDocumentsResponse
instance Semigroup IndexDocumentsResponse
instance FromXML IndexDocumentsResponse
instance AWSRequest IndexDocuments
instance ToHeaders IndexDocuments
instance ToQuery IndexDocuments
instance ToPath IndexDocuments
instance IsList IndexDocumentsResponse


-- | Gets the suggesters configured for a domain. A suggester enables you
--   to display possible matches before users finish typing their queries.
--   Can be limited to specific suggesters by name. By default, shows all
--   suggesters and includes any pending changes to the configuration. Set
--   the <tt>Deployed</tt> option to <tt>true</tt> to show the active
--   configuration and exclude pending changes. For more information, see
--   Getting Search Suggestions in the <i>Amazon CloudSearchDeveloper
--   Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_DescribeSuggesters.html</a>
module Network.AWS.CloudSearch.DescribeSuggesters
data DescribeSuggesters

-- | <a>DescribeSuggesters</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ds1Deployed</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>ds1DomainName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ds1SuggesterNames</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeSuggesters :: Text -> DescribeSuggesters

-- | Whether to display the deployed configuration (<tt>true</tt>) or
--   include any pending changes (<tt>false</tt>). Defaults to
--   <tt>false</tt>.
ds1Deployed :: Lens' DescribeSuggesters (Maybe Bool)

-- | The name of the domain you want to describe.
ds1DomainName :: Lens' DescribeSuggesters Text

-- | The suggesters you want to describe.
ds1SuggesterNames :: Lens' DescribeSuggesters [Text]
data DescribeSuggestersResponse

-- | <a>DescribeSuggestersResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsrSuggesters</a> <tt>::</tt> [<a>SuggesterStatus</a>]</li>
--   </ul>
describeSuggestersResponse :: DescribeSuggestersResponse

-- | The suggesters configured for the domain specified in the request.
dsrSuggesters :: Lens' DescribeSuggestersResponse [SuggesterStatus]
instance Eq DescribeSuggesters
instance Ord DescribeSuggesters
instance Read DescribeSuggesters
instance Show DescribeSuggesters
instance Eq DescribeSuggestersResponse
instance Read DescribeSuggestersResponse
instance Show DescribeSuggestersResponse
instance Monoid DescribeSuggestersResponse
instance Semigroup DescribeSuggestersResponse
instance FromXML DescribeSuggestersResponse
instance AWSRequest DescribeSuggesters
instance ToHeaders DescribeSuggesters
instance ToQuery DescribeSuggesters
instance ToPath DescribeSuggesters
instance IsList DescribeSuggestersResponse


-- | Gets information about the access policies that control access to the
--   domain's document and search endpoints. By default, shows the
--   configuration with any pending changes. Set the <tt>Deployed</tt>
--   option to <tt>true</tt> to show the active configuration and exclude
--   pending changes. For more information, see Configuring Access for a
--   Search Domain in the <i>Amazon CloudSearch Developer Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_DescribeServiceAccessPolicies.html</a>
module Network.AWS.CloudSearch.DescribeServiceAccessPolicies
data DescribeServiceAccessPolicies

-- | <a>DescribeServiceAccessPolicies</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsapDeployed</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>dsapDomainName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
describeServiceAccessPolicies :: Text -> DescribeServiceAccessPolicies

-- | Whether to display the deployed configuration (<tt>true</tt>) or
--   include any pending changes (<tt>false</tt>). Defaults to
--   <tt>false</tt>.
dsapDeployed :: Lens' DescribeServiceAccessPolicies (Maybe Bool)

-- | The name of the domain you want to describe.
dsapDomainName :: Lens' DescribeServiceAccessPolicies Text
data DescribeServiceAccessPoliciesResponse

-- | <a>DescribeServiceAccessPoliciesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsaprAccessPolicies</a> <tt>::</tt>
--   <a>AccessPoliciesStatus</a></li>
--   </ul>
describeServiceAccessPoliciesResponse :: AccessPoliciesStatus -> DescribeServiceAccessPoliciesResponse

-- | The access rules configured for the domain specified in the request.
dsaprAccessPolicies :: Lens' DescribeServiceAccessPoliciesResponse AccessPoliciesStatus
instance Eq DescribeServiceAccessPolicies
instance Ord DescribeServiceAccessPolicies
instance Read DescribeServiceAccessPolicies
instance Show DescribeServiceAccessPolicies
instance Eq DescribeServiceAccessPoliciesResponse
instance Read DescribeServiceAccessPoliciesResponse
instance Show DescribeServiceAccessPoliciesResponse
instance FromXML DescribeServiceAccessPoliciesResponse
instance AWSRequest DescribeServiceAccessPolicies
instance ToHeaders DescribeServiceAccessPolicies
instance ToQuery DescribeServiceAccessPolicies
instance ToPath DescribeServiceAccessPolicies


-- | Gets the scaling parameters configured for a domain. A domain's
--   scaling parameters specify the desired search instance type and
--   replication count. For more information, see Configuring Scaling
--   Options in the <i>AmazonCloudSearch Developer Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_DescribeScalingParameters.html</a>
module Network.AWS.CloudSearch.DescribeScalingParameters
data DescribeScalingParameters

-- | <a>DescribeScalingParameters</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dspDomainName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
describeScalingParameters :: Text -> DescribeScalingParameters
dspDomainName :: Lens' DescribeScalingParameters Text
data DescribeScalingParametersResponse

-- | <a>DescribeScalingParametersResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsprScalingParameters</a> <tt>::</tt>
--   <a>ScalingParametersStatus</a></li>
--   </ul>
describeScalingParametersResponse :: ScalingParametersStatus -> DescribeScalingParametersResponse
dsprScalingParameters :: Lens' DescribeScalingParametersResponse ScalingParametersStatus
instance Eq DescribeScalingParameters
instance Ord DescribeScalingParameters
instance Read DescribeScalingParameters
instance Show DescribeScalingParameters
instance Monoid DescribeScalingParameters
instance IsString DescribeScalingParameters
instance Eq DescribeScalingParametersResponse
instance Read DescribeScalingParametersResponse
instance Show DescribeScalingParametersResponse
instance FromXML DescribeScalingParametersResponse
instance AWSRequest DescribeScalingParameters
instance ToHeaders DescribeScalingParameters
instance ToQuery DescribeScalingParameters
instance ToPath DescribeScalingParameters


-- | Gets information about the index fields configured for the search
--   domain. Can be limited to specific fields by name. By default, shows
--   all fields and includes any pending changes to the configuration. Set
--   the <tt>Deployed</tt> option to <tt>true</tt> to show the active
--   configuration and exclude pending changes. For more information, see
--   Getting Domain Information in the <i>Amazon CloudSearchDeveloper
--   Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_DescribeIndexFields.html</a>
module Network.AWS.CloudSearch.DescribeIndexFields
data DescribeIndexFields

-- | <a>DescribeIndexFields</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>difDeployed</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>difDomainName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>difFieldNames</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeIndexFields :: Text -> DescribeIndexFields

-- | Whether to display the deployed configuration (<tt>true</tt>) or
--   include any pending changes (<tt>false</tt>). Defaults to
--   <tt>false</tt>.
difDeployed :: Lens' DescribeIndexFields (Maybe Bool)

-- | The name of the domain you want to describe.
difDomainName :: Lens' DescribeIndexFields Text

-- | A list of the index fields you want to describe. If not specified,
--   information is returned for all configured index fields.
difFieldNames :: Lens' DescribeIndexFields [Text]
data DescribeIndexFieldsResponse

-- | <a>DescribeIndexFieldsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>difrIndexFields</a> <tt>::</tt> [<a>IndexFieldStatus</a>]</li>
--   </ul>
describeIndexFieldsResponse :: DescribeIndexFieldsResponse

-- | The index fields configured for the domain.
difrIndexFields :: Lens' DescribeIndexFieldsResponse [IndexFieldStatus]
instance Eq DescribeIndexFields
instance Ord DescribeIndexFields
instance Read DescribeIndexFields
instance Show DescribeIndexFields
instance Eq DescribeIndexFieldsResponse
instance Read DescribeIndexFieldsResponse
instance Show DescribeIndexFieldsResponse
instance Monoid DescribeIndexFieldsResponse
instance Semigroup DescribeIndexFieldsResponse
instance FromXML DescribeIndexFieldsResponse
instance AWSRequest DescribeIndexFields
instance ToHeaders DescribeIndexFields
instance ToQuery DescribeIndexFields
instance ToPath DescribeIndexFields
instance IsList DescribeIndexFieldsResponse


-- | Gets the expressions configured for the search domain. Can be limited
--   to specific expressions by name. By default, shows all expressions and
--   includes any pending changes to the configuration. Set the
--   <tt>Deployed</tt> option to <tt>true</tt> to show the active
--   configuration and exclude pending changes. For more information, see
--   Configuring Expressions in the <i>Amazon CloudSearch
--   DeveloperGuide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_DescribeExpressions.html</a>
module Network.AWS.CloudSearch.DescribeExpressions
data DescribeExpressions

-- | <a>DescribeExpressions</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>deDeployed</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>deDomainName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>deExpressionNames</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeExpressions :: Text -> DescribeExpressions

-- | Whether to display the deployed configuration (<tt>true</tt>) or
--   include any pending changes (<tt>false</tt>). Defaults to
--   <tt>false</tt>.
deDeployed :: Lens' DescribeExpressions (Maybe Bool)

-- | The name of the domain you want to describe.
deDomainName :: Lens' DescribeExpressions Text

-- | Limits the ''DescribeExpressions' response to the specified
--   expressions. If not specified, all expressions are shown.
deExpressionNames :: Lens' DescribeExpressions [Text]
data DescribeExpressionsResponse

-- | <a>DescribeExpressionsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>derExpressions</a> <tt>::</tt> [<a>ExpressionStatus</a>]</li>
--   </ul>
describeExpressionsResponse :: DescribeExpressionsResponse

-- | The expressions configured for the domain.
derExpressions :: Lens' DescribeExpressionsResponse [ExpressionStatus]
instance Eq DescribeExpressions
instance Ord DescribeExpressions
instance Read DescribeExpressions
instance Show DescribeExpressions
instance Eq DescribeExpressionsResponse
instance Read DescribeExpressionsResponse
instance Show DescribeExpressionsResponse
instance Monoid DescribeExpressionsResponse
instance Semigroup DescribeExpressionsResponse
instance FromXML DescribeExpressionsResponse
instance AWSRequest DescribeExpressions
instance ToHeaders DescribeExpressions
instance ToQuery DescribeExpressions
instance ToPath DescribeExpressions
instance IsList DescribeExpressionsResponse


-- | Gets information about the search domains owned by this account. Can
--   be limited to specific domains. Shows all domains by default. To get
--   the number of searchable documents in a domain, use the console or
--   submit a <tt>matchall</tt> request to your domain's search endpoint:
--   'q=matchall&amp;amp;q.parser=structured&amp;amp;size=0'. For more
--   information, see Getting Information about a Search Domain in the
--   <i>Amazon CloudSearch Developer Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_DescribeDomains.html</a>
module Network.AWS.CloudSearch.DescribeDomains
data DescribeDomains

-- | <a>DescribeDomains</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ddDomainNames</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
describeDomains :: DescribeDomains

-- | The names of the domains you want to include in the response.
ddDomainNames :: Lens' DescribeDomains [Text]
data DescribeDomainsResponse

-- | <a>DescribeDomainsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ddrDomainStatusList</a> <tt>::</tt> [<a>DomainStatus</a>]</li>
--   </ul>
describeDomainsResponse :: DescribeDomainsResponse
ddrDomainStatusList :: Lens' DescribeDomainsResponse [DomainStatus]
instance Eq DescribeDomains
instance Ord DescribeDomains
instance Read DescribeDomains
instance Show DescribeDomains
instance Monoid DescribeDomains
instance Semigroup DescribeDomains
instance Eq DescribeDomainsResponse
instance Read DescribeDomainsResponse
instance Show DescribeDomainsResponse
instance Monoid DescribeDomainsResponse
instance Semigroup DescribeDomainsResponse
instance FromXML DescribeDomainsResponse
instance AWSRequest DescribeDomains
instance ToHeaders DescribeDomains
instance ToQuery DescribeDomains
instance ToPath DescribeDomains
instance IsList DescribeDomainsResponse
instance IsList DescribeDomains


-- | Gets the availability options configured for a domain. By default,
--   shows the configuration with any pending changes. Set the
--   <tt>Deployed</tt> option to <tt>true</tt> to show the active
--   configuration and exclude pending changes. For more information, see
--   Configuring Availability Options in the <i>Amazon CloudSearchDeveloper
--   Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_DescribeAvailabilityOptions.html</a>
module Network.AWS.CloudSearch.DescribeAvailabilityOptions
data DescribeAvailabilityOptions

-- | <a>DescribeAvailabilityOptions</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>daoDeployed</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>daoDomainName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
describeAvailabilityOptions :: Text -> DescribeAvailabilityOptions

-- | Whether to display the deployed configuration (<tt>true</tt>) or
--   include any pending changes (<tt>false</tt>). Defaults to
--   <tt>false</tt>.
daoDeployed :: Lens' DescribeAvailabilityOptions (Maybe Bool)

-- | The name of the domain you want to describe.
daoDomainName :: Lens' DescribeAvailabilityOptions Text
data DescribeAvailabilityOptionsResponse

-- | <a>DescribeAvailabilityOptionsResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>daorAvailabilityOptions</a> <tt>::</tt> <a>Maybe</a>
--   <a>AvailabilityOptionsStatus</a></li>
--   </ul>
describeAvailabilityOptionsResponse :: DescribeAvailabilityOptionsResponse

-- | The availability options configured for the domain. Indicates whether
--   Multi-AZ is enabled for the domain.
daorAvailabilityOptions :: Lens' DescribeAvailabilityOptionsResponse (Maybe AvailabilityOptionsStatus)
instance Eq DescribeAvailabilityOptions
instance Ord DescribeAvailabilityOptions
instance Read DescribeAvailabilityOptions
instance Show DescribeAvailabilityOptions
instance Eq DescribeAvailabilityOptionsResponse
instance Read DescribeAvailabilityOptionsResponse
instance Show DescribeAvailabilityOptionsResponse
instance FromXML DescribeAvailabilityOptionsResponse
instance AWSRequest DescribeAvailabilityOptions
instance ToHeaders DescribeAvailabilityOptions
instance ToQuery DescribeAvailabilityOptions
instance ToPath DescribeAvailabilityOptions


-- | Gets the analysis schemes configured for a domain. An analysis scheme
--   defines language-specific text processing options for a <tt>text</tt>
--   field. Can be limited to specific analysis schemes by name. By
--   default, shows all analysis schemes and includes any pending changes
--   to the configuration. Set the <tt>Deployed</tt> option to
--   <tt>true</tt> to show the active configuration and exclude pending
--   changes. For more information, see Configuring Analysis Schemes in the
--   <i>Amazon CloudSearchDeveloper Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_DescribeAnalysisSchemes.html</a>
module Network.AWS.CloudSearch.DescribeAnalysisSchemes
data DescribeAnalysisSchemes

-- | <a>DescribeAnalysisSchemes</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>das1AnalysisSchemeNames</a> <tt>::</tt> [<a>Text</a>]</li>
--   <li><a>das1Deployed</a> <tt>::</tt> <a>Maybe</a> <a>Bool</a></li>
--   <li><a>das1DomainName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
describeAnalysisSchemes :: Text -> DescribeAnalysisSchemes

-- | The analysis schemes you want to describe.
das1AnalysisSchemeNames :: Lens' DescribeAnalysisSchemes [Text]

-- | Whether to display the deployed configuration (<tt>true</tt>) or
--   include any pending changes (<tt>false</tt>). Defaults to
--   <tt>false</tt>.
das1Deployed :: Lens' DescribeAnalysisSchemes (Maybe Bool)

-- | The name of the domain you want to describe.
das1DomainName :: Lens' DescribeAnalysisSchemes Text
data DescribeAnalysisSchemesResponse

-- | <a>DescribeAnalysisSchemesResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dasrAnalysisSchemes</a> <tt>::</tt>
--   [<a>AnalysisSchemeStatus</a>]</li>
--   </ul>
describeAnalysisSchemesResponse :: DescribeAnalysisSchemesResponse

-- | The analysis scheme descriptions.
dasrAnalysisSchemes :: Lens' DescribeAnalysisSchemesResponse [AnalysisSchemeStatus]
instance Eq DescribeAnalysisSchemes
instance Ord DescribeAnalysisSchemes
instance Read DescribeAnalysisSchemes
instance Show DescribeAnalysisSchemes
instance Eq DescribeAnalysisSchemesResponse
instance Read DescribeAnalysisSchemesResponse
instance Show DescribeAnalysisSchemesResponse
instance Monoid DescribeAnalysisSchemesResponse
instance Semigroup DescribeAnalysisSchemesResponse
instance FromXML DescribeAnalysisSchemesResponse
instance AWSRequest DescribeAnalysisSchemes
instance ToHeaders DescribeAnalysisSchemes
instance ToQuery DescribeAnalysisSchemes
instance ToPath DescribeAnalysisSchemes
instance IsList DescribeAnalysisSchemesResponse


-- | Deletes a suggester. For more information, see Getting Search
--   Suggestions in the <i>Amazon CloudSearch Developer Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_DeleteSuggester.html</a>
module Network.AWS.CloudSearch.DeleteSuggester
data DeleteSuggester

-- | <a>DeleteSuggester</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ds3DomainName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ds3SuggesterName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteSuggester :: Text -> Text -> DeleteSuggester
ds3DomainName :: Lens' DeleteSuggester Text

-- | Specifies the name of the suggester you want to delete.
ds3SuggesterName :: Lens' DeleteSuggester Text
data DeleteSuggesterResponse

-- | <a>DeleteSuggesterResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsr1Suggester</a> <tt>::</tt> <a>SuggesterStatus</a></li>
--   </ul>
deleteSuggesterResponse :: SuggesterStatus -> DeleteSuggesterResponse

-- | The status of the suggester being deleted.
dsr1Suggester :: Lens' DeleteSuggesterResponse SuggesterStatus
instance Eq DeleteSuggester
instance Ord DeleteSuggester
instance Read DeleteSuggester
instance Show DeleteSuggester
instance Eq DeleteSuggesterResponse
instance Read DeleteSuggesterResponse
instance Show DeleteSuggesterResponse
instance FromXML DeleteSuggesterResponse
instance AWSRequest DeleteSuggester
instance ToHeaders DeleteSuggester
instance ToQuery DeleteSuggester
instance ToPath DeleteSuggester


-- | Removes an ''IndexField' from the search domain. For more information,
--   see Configuring Index Fields in the <i>Amazon CloudSearch Developer
--   Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_DeleteIndexField.html</a>
module Network.AWS.CloudSearch.DeleteIndexField
data DeleteIndexField

-- | <a>DeleteIndexField</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dif1DomainName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>dif1IndexFieldName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteIndexField :: Text -> Text -> DeleteIndexField
dif1DomainName :: Lens' DeleteIndexField Text

-- | The name of the index field your want to remove from the domain's
--   indexing options.
dif1IndexFieldName :: Lens' DeleteIndexField Text
data DeleteIndexFieldResponse

-- | <a>DeleteIndexFieldResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>difrIndexField</a> <tt>::</tt> <a>IndexFieldStatus</a></li>
--   </ul>
deleteIndexFieldResponse :: IndexFieldStatus -> DeleteIndexFieldResponse

-- | The status of the index field being deleted.
difrIndexField :: Lens' DeleteIndexFieldResponse IndexFieldStatus
instance Eq DeleteIndexField
instance Ord DeleteIndexField
instance Read DeleteIndexField
instance Show DeleteIndexField
instance Eq DeleteIndexFieldResponse
instance Read DeleteIndexFieldResponse
instance Show DeleteIndexFieldResponse
instance FromXML DeleteIndexFieldResponse
instance AWSRequest DeleteIndexField
instance ToHeaders DeleteIndexField
instance ToQuery DeleteIndexField
instance ToPath DeleteIndexField


-- | Removes an ''Expression' from the search domain. For more information,
--   see Configuring Expressions in the <i>Amazon CloudSearch Developer
--   Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_DeleteExpression.html</a>
module Network.AWS.CloudSearch.DeleteExpression
data DeleteExpression

-- | <a>DeleteExpression</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>de2DomainName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>de2ExpressionName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteExpression :: Text -> Text -> DeleteExpression
de2DomainName :: Lens' DeleteExpression Text

-- | The name of the ''Expression' to delete.
de2ExpressionName :: Lens' DeleteExpression Text
data DeleteExpressionResponse

-- | <a>DeleteExpressionResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>der1Expression</a> <tt>::</tt> <a>ExpressionStatus</a></li>
--   </ul>
deleteExpressionResponse :: ExpressionStatus -> DeleteExpressionResponse

-- | The status of the expression being deleted.
der1Expression :: Lens' DeleteExpressionResponse ExpressionStatus
instance Eq DeleteExpression
instance Ord DeleteExpression
instance Read DeleteExpression
instance Show DeleteExpression
instance Eq DeleteExpressionResponse
instance Read DeleteExpressionResponse
instance Show DeleteExpressionResponse
instance FromXML DeleteExpressionResponse
instance AWSRequest DeleteExpression
instance ToHeaders DeleteExpression
instance ToQuery DeleteExpression
instance ToPath DeleteExpression


-- | Permanently deletes a search domain and all of its data. Once a domain
--   has been deleted, it cannot be recovered. For more information, see
--   Deleting a Search Domain in the <i>Amazon CloudSearch Developer
--   Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_DeleteDomain.html</a>
module Network.AWS.CloudSearch.DeleteDomain
data DeleteDomain

-- | <a>DeleteDomain</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ddDomainName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteDomain :: Text -> DeleteDomain

-- | The name of the domain you want to permanently delete.
ddDomainName :: Lens' DeleteDomain Text
data DeleteDomainResponse

-- | <a>DeleteDomainResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ddrDomainStatus</a> <tt>::</tt> <a>Maybe</a>
--   <a>DomainStatus</a></li>
--   </ul>
deleteDomainResponse :: DeleteDomainResponse
ddrDomainStatus :: Lens' DeleteDomainResponse (Maybe DomainStatus)
instance Eq DeleteDomain
instance Ord DeleteDomain
instance Read DeleteDomain
instance Show DeleteDomain
instance Monoid DeleteDomain
instance IsString DeleteDomain
instance Eq DeleteDomainResponse
instance Read DeleteDomainResponse
instance Show DeleteDomainResponse
instance FromXML DeleteDomainResponse
instance AWSRequest DeleteDomain
instance ToHeaders DeleteDomain
instance ToQuery DeleteDomain
instance ToPath DeleteDomain


-- | Deletes an analysis scheme. For more information, see Configuring
--   Analysis Schemes in the <i>Amazon CloudSearch Developer Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_DeleteAnalysisScheme.html</a>
module Network.AWS.CloudSearch.DeleteAnalysisScheme
data DeleteAnalysisScheme

-- | <a>DeleteAnalysisScheme</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dasAnalysisSchemeName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>dasDomainName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
deleteAnalysisScheme :: Text -> Text -> DeleteAnalysisScheme

-- | The name of the analysis scheme you want to delete.
dasAnalysisSchemeName :: Lens' DeleteAnalysisScheme Text
dasDomainName :: Lens' DeleteAnalysisScheme Text
data DeleteAnalysisSchemeResponse

-- | <a>DeleteAnalysisSchemeResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dasrAnalysisScheme</a> <tt>::</tt>
--   <a>AnalysisSchemeStatus</a></li>
--   </ul>
deleteAnalysisSchemeResponse :: AnalysisSchemeStatus -> DeleteAnalysisSchemeResponse

-- | The status of the analysis scheme being deleted.
dasrAnalysisScheme :: Lens' DeleteAnalysisSchemeResponse AnalysisSchemeStatus
instance Eq DeleteAnalysisScheme
instance Ord DeleteAnalysisScheme
instance Read DeleteAnalysisScheme
instance Show DeleteAnalysisScheme
instance Eq DeleteAnalysisSchemeResponse
instance Read DeleteAnalysisSchemeResponse
instance Show DeleteAnalysisSchemeResponse
instance FromXML DeleteAnalysisSchemeResponse
instance AWSRequest DeleteAnalysisScheme
instance ToHeaders DeleteAnalysisScheme
instance ToQuery DeleteAnalysisScheme
instance ToPath DeleteAnalysisScheme


-- | Configures a suggester for a domain. A suggester enables you to
--   display possible matches before users finish typing their queries.
--   When you configure a suggester, you must specify the name of the text
--   field you want to search for possible matches and a unique name for
--   the suggester. For more information, see Getting Search Suggestions in
--   the <i>Amazon CloudSearchDeveloper Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_DefineSuggester.html</a>
module Network.AWS.CloudSearch.DefineSuggester
data DefineSuggester

-- | <a>DefineSuggester</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>ds2DomainName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>ds2Suggester</a> <tt>::</tt> <a>Suggester</a></li>
--   </ul>
defineSuggester :: Text -> Suggester -> DefineSuggester
ds2DomainName :: Lens' DefineSuggester Text
ds2Suggester :: Lens' DefineSuggester Suggester
data DefineSuggesterResponse

-- | <a>DefineSuggesterResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dsrSuggester</a> <tt>::</tt> <a>SuggesterStatus</a></li>
--   </ul>
defineSuggesterResponse :: SuggesterStatus -> DefineSuggesterResponse
dsrSuggester :: Lens' DefineSuggesterResponse SuggesterStatus
instance Eq DefineSuggester
instance Read DefineSuggester
instance Show DefineSuggester
instance Eq DefineSuggesterResponse
instance Read DefineSuggesterResponse
instance Show DefineSuggesterResponse
instance FromXML DefineSuggesterResponse
instance AWSRequest DefineSuggester
instance ToHeaders DefineSuggester
instance ToQuery DefineSuggester
instance ToPath DefineSuggester


-- | Configures an ''IndexField' for the search domain. Used to create new
--   fields and modify existing ones. You must specify the name of the
--   domain you are configuring and an index field configuration. The index
--   field configuration specifies a unique name, the index field type, and
--   the options you want to configure for the field. The options you can
--   specify depend on the ''IndexFieldType'. If the field exists, the new
--   configuration replaces the old one. For more information, see
--   Configuring Index Fields in the <i>Amazon CloudSearch
--   DeveloperGuide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_DefineIndexField.html</a>
module Network.AWS.CloudSearch.DefineIndexField
data DefineIndexField

-- | <a>DefineIndexField</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dif2DomainName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>dif2IndexField</a> <tt>::</tt> <a>IndexField</a></li>
--   </ul>
defineIndexField :: Text -> IndexField -> DefineIndexField
dif2DomainName :: Lens' DefineIndexField Text

-- | The index field and field options you want to configure.
dif2IndexField :: Lens' DefineIndexField IndexField
data DefineIndexFieldResponse

-- | <a>DefineIndexFieldResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>difr1IndexField</a> <tt>::</tt> <a>IndexFieldStatus</a></li>
--   </ul>
defineIndexFieldResponse :: IndexFieldStatus -> DefineIndexFieldResponse
difr1IndexField :: Lens' DefineIndexFieldResponse IndexFieldStatus
instance Eq DefineIndexField
instance Read DefineIndexField
instance Show DefineIndexField
instance Eq DefineIndexFieldResponse
instance Read DefineIndexFieldResponse
instance Show DefineIndexFieldResponse
instance FromXML DefineIndexFieldResponse
instance AWSRequest DefineIndexField
instance ToHeaders DefineIndexField
instance ToQuery DefineIndexField
instance ToPath DefineIndexField


-- | Configures an ''Expression' for the search domain. Used to create new
--   expressions and modify existing ones. If the expression exists, the
--   new configuration replaces the old one. For more information, see
--   Configuring Expressions in the <i>Amazon CloudSearch Developer
--   Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_DefineExpression.html</a>
module Network.AWS.CloudSearch.DefineExpression
data DefineExpression

-- | <a>DefineExpression</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>de1DomainName</a> <tt>::</tt> <a>Text</a></li>
--   <li><a>de1Expression</a> <tt>::</tt> <a>Expression</a></li>
--   </ul>
defineExpression :: Text -> Expression -> DefineExpression
de1DomainName :: Lens' DefineExpression Text
de1Expression :: Lens' DefineExpression Expression
data DefineExpressionResponse

-- | <a>DefineExpressionResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>derExpression</a> <tt>::</tt> <a>ExpressionStatus</a></li>
--   </ul>
defineExpressionResponse :: ExpressionStatus -> DefineExpressionResponse
derExpression :: Lens' DefineExpressionResponse ExpressionStatus
instance Eq DefineExpression
instance Read DefineExpression
instance Show DefineExpression
instance Eq DefineExpressionResponse
instance Read DefineExpressionResponse
instance Show DefineExpressionResponse
instance FromXML DefineExpressionResponse
instance AWSRequest DefineExpression
instance ToHeaders DefineExpression
instance ToQuery DefineExpression
instance ToPath DefineExpression


-- | Configures an analysis scheme that can be applied to a <tt>text</tt>
--   or 'text-array' field to define language-specific text processing
--   options. For more information, see Configuring Analysis Schemes in the
--   <i>Amazon CloudSearchDeveloper Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_DefineAnalysisScheme.html</a>
module Network.AWS.CloudSearch.DefineAnalysisScheme
data DefineAnalysisScheme

-- | <a>DefineAnalysisScheme</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>das2AnalysisScheme</a> <tt>::</tt> <a>AnalysisScheme</a></li>
--   <li><a>das2DomainName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
defineAnalysisScheme :: Text -> AnalysisScheme -> DefineAnalysisScheme
das2AnalysisScheme :: Lens' DefineAnalysisScheme AnalysisScheme
das2DomainName :: Lens' DefineAnalysisScheme Text
data DefineAnalysisSchemeResponse

-- | <a>DefineAnalysisSchemeResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>dasr1AnalysisScheme</a> <tt>::</tt>
--   <a>AnalysisSchemeStatus</a></li>
--   </ul>
defineAnalysisSchemeResponse :: AnalysisSchemeStatus -> DefineAnalysisSchemeResponse
dasr1AnalysisScheme :: Lens' DefineAnalysisSchemeResponse AnalysisSchemeStatus
instance Eq DefineAnalysisScheme
instance Read DefineAnalysisScheme
instance Show DefineAnalysisScheme
instance Eq DefineAnalysisSchemeResponse
instance Read DefineAnalysisSchemeResponse
instance Show DefineAnalysisSchemeResponse
instance FromXML DefineAnalysisSchemeResponse
instance AWSRequest DefineAnalysisScheme
instance ToHeaders DefineAnalysisScheme
instance ToQuery DefineAnalysisScheme
instance ToPath DefineAnalysisScheme


-- | Creates a new search domain. For more information, see Creating a
--   Search Domain in the <i>Amazon CloudSearch Developer Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_CreateDomain.html</a>
module Network.AWS.CloudSearch.CreateDomain
data CreateDomain

-- | <a>CreateDomain</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cdDomainName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
createDomain :: Text -> CreateDomain

-- | A name for the domain you are creating. Allowed characters are a-z
--   (lower-case letters), 0-9, and hyphen (-). Domain names must start
--   with a letter or number and be at least 3 and no more than 28
--   characters long.
cdDomainName :: Lens' CreateDomain Text
data CreateDomainResponse

-- | <a>CreateDomainResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>cdrDomainStatus</a> <tt>::</tt> <a>Maybe</a>
--   <a>DomainStatus</a></li>
--   </ul>
createDomainResponse :: CreateDomainResponse
cdrDomainStatus :: Lens' CreateDomainResponse (Maybe DomainStatus)
instance Eq CreateDomain
instance Ord CreateDomain
instance Read CreateDomain
instance Show CreateDomain
instance Monoid CreateDomain
instance IsString CreateDomain
instance Eq CreateDomainResponse
instance Read CreateDomainResponse
instance Show CreateDomainResponse
instance FromXML CreateDomainResponse
instance AWSRequest CreateDomain
instance ToHeaders CreateDomain
instance ToQuery CreateDomain
instance ToPath CreateDomain


-- | Indexes the search suggestions. For more information, see
--   <a>ConfiguringSuggesters</a> in the <i>Amazon CloudSearch Developer
--   Guide</i>.
--   
--   
--   <a>http://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_BuildSuggesters.html</a>
module Network.AWS.CloudSearch.BuildSuggesters
data BuildSuggesters

-- | <a>BuildSuggesters</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>bsDomainName</a> <tt>::</tt> <a>Text</a></li>
--   </ul>
buildSuggesters :: Text -> BuildSuggesters
bsDomainName :: Lens' BuildSuggesters Text
data BuildSuggestersResponse

-- | <a>BuildSuggestersResponse</a> constructor.
--   
--   The fields accessible through corresponding lenses are:
--   
--   <ul>
--   <li><a>bsrFieldNames</a> <tt>::</tt> [<a>Text</a>]</li>
--   </ul>
buildSuggestersResponse :: BuildSuggestersResponse
bsrFieldNames :: Lens' BuildSuggestersResponse [Text]
instance Eq BuildSuggesters
instance Ord BuildSuggesters
instance Read BuildSuggesters
instance Show BuildSuggesters
instance Monoid BuildSuggesters
instance IsString BuildSuggesters
instance Eq BuildSuggestersResponse
instance Ord BuildSuggestersResponse
instance Read BuildSuggestersResponse
instance Show BuildSuggestersResponse
instance Monoid BuildSuggestersResponse
instance Semigroup BuildSuggestersResponse
instance FromXML BuildSuggestersResponse
instance AWSRequest BuildSuggesters
instance ToHeaders BuildSuggesters
instance ToQuery BuildSuggesters
instance ToPath BuildSuggesters
instance IsList BuildSuggestersResponse


-- | Amazon CloudSearch is a fully-managed service in the AWS Cloud that
--   makes it simple and cost-effective to set up, manage, and scale a
--   search solution for your website or application. Amazon CloudSearch
--   supports 34 languages and popular search features such as
--   highlighting, autocomplete, and geospatial search.
module Network.AWS.CloudSearch
