-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Haskell binding for FreeType 2 library
--   
--   Wrapper around FreeType 2 library. Relevant exerpts from the FreeType
--   2 website:
--   
--   What is FreeType 2?
--   
--   FreeType 2 is a software font engine that is designed to be small,
--   efficient, highly customizable, and portable while capable of
--   producing high-quality output (glyph images). It can be used in
--   graphics libraries, display servers, font conversion tools, text image
--   generation tools, and many other products as well.
--   
--   The following is a non-exhaustive list of features provided by
--   FreeType 2.
--   
--   <ul>
--   <li>FreeType 2 provides a simple and easy-to-use API to access font
--   content in a uniform way, independently of the file format.
--   Additionally, some format-specific APIs can be used to access special
--   data in the font file.</li>
--   <li>Unlike most comparable libraries, FreeType 2 supports scalable
--   font formats like TrueType or Type 1 natively and can return the
--   outline data (and control instructions/hints) to client
--   applications.</li>
--   </ul>
--   
--   By default, FreeType 2 supports the following font formats.
--   
--   <ul>
--   <li>TrueType fonts (and collections)</li>
--   <li>Type 1 fonts</li>
--   <li>CID-keyed Type 1 fonts</li>
--   <li>CFF fonts</li>
--   <li>OpenType fonts (both TrueType and CFF variants)</li>
--   <li>SFNT-based bitmap fonts</li>
--   <li>X11 PCF fonts</li>
--   <li>Windows FNT fonts</li>
--   <li>BDF fonts (including anti-aliased ones)</li>
--   <li>PFR fonts</li>
--   <li>Type 42 fonts (limited support)</li>
--   </ul>
--   
--   From a given glyph outline, FreeType 2 is capable of producing a
--   high-quality monochrome bitmap, or anti-aliased pixmap, using 256
--   levels of <a>gray</a>. This is much better than the 5 levels used by
--   Windows 9x/98/NT/2000 or FreeType 1.
--   
--   FreeType 2 supports all the character mappings defined by the TrueType
--   and OpenType specification. It is also capable of automatically
--   synthetizing a Unicode charmap from Type 1 fonts, which puts an end to
--   the painful 'encoding translation' headache common with this format
--   (of course, original encodings are also available in the case where
--   you need them).
--   
--   The FreeType 2 core API provides simple functions to access advanced
--   information like glyph names or kerning data.
--   
--   FreeType 2 provides information that is often not available from other
--   similar font engines, like kerning distances, glyph names, vertical
--   metrics, etc.
--   
--   FreeType 2 provides its own caching subsystem since release 2.0.1. It
--   can be used to cache either face instances or glyph images
--   efficiently.
@package freetype2
@version 0.1.1

module Graphics.Rendering.FreeType.Internal.Renderer
data FT_RendererRec_
type FT_Renderer = Ptr FT_RendererRec_

module Graphics.Rendering.FreeType.Internal.Span
data FT_Span
FT_Span :: CShort -> CUShort -> CUChar -> FT_Span
x :: FT_Span -> CShort
len :: FT_Span -> CUShort
coverage :: FT_Span -> CUChar
instance Read FT_Span
instance Show FT_Span
instance Eq FT_Span
instance Storable FT_Span

module Graphics.Rendering.FreeType.Internal.Module
data FT_ModuleRec_
type FT_Module = Ptr FT_ModuleRec_

module Graphics.Rendering.FreeType.Internal.SubGlyph
data FT_SubGlyphRec_
type FT_SubGlyph = Ptr FT_SubGlyphRec_

module Graphics.Rendering.FreeType.Internal.Generic
data FT_Generic
FT_Generic :: Ptr () -> FT_Generic_Finalizer -> FT_Generic
data_ :: FT_Generic -> Ptr ()
finalizer :: FT_Generic -> FT_Generic_Finalizer
type FT_Generic_Finalizer = FunPtr (Ptr () -> IO ())
instance Storable FT_Generic

module Graphics.Rendering.FreeType.Internal.Driver
data FT_DriverRec_
type FT_Driver = Ptr FT_DriverRec_

module Graphics.Rendering.FreeType.Internal.FaceType
data FT_FaceRec_
type FT_Face = Ptr FT_FaceRec_

module Graphics.Rendering.FreeType.Internal.Bitmap
data FT_Bitmap
FT_Bitmap :: CInt -> CInt -> CInt -> Ptr CChar -> CShort -> CChar -> CChar -> Ptr () -> FT_Bitmap
rows :: FT_Bitmap -> CInt
width :: FT_Bitmap -> CInt
pitch :: FT_Bitmap -> CInt
buffer :: FT_Bitmap -> Ptr CChar
num_grays :: FT_Bitmap -> CShort
pixel_mode :: FT_Bitmap -> CChar
palette_mode :: FT_Bitmap -> CChar
palette :: FT_Bitmap -> Ptr ()
instance Storable FT_Bitmap

module Graphics.Rendering.FreeType.Internal.Memory
data FT_MemoryRec
FT_MemoryRec :: Ptr () -> FT_Alloc_Func -> FT_Free_Func -> FT_Realloc_Func -> FT_MemoryRec
user :: FT_MemoryRec -> Ptr ()
alloc :: FT_MemoryRec -> FT_Alloc_Func
free :: FT_MemoryRec -> FT_Free_Func
realloc :: FT_MemoryRec -> FT_Realloc_Func
type FT_Memory = Ptr FT_MemoryRec
instance Storable FT_MemoryRec

module Graphics.Rendering.FreeType.Internal.Stream
data FT_StreamRec_
type FT_Stream = Ptr FT_StreamRec_
type FT_StreamDesc = CLong
type FT_Stream_IoFunc = FunPtr (FT_Stream -> CULong -> Ptr CUChar -> CULong -> IO CULong)
type FT_Stream_CloseFunc = FunPtr (FT_Stream -> IO ())
base :: FT_Stream -> Ptr (Ptr CUChar)
size :: FT_Stream -> Ptr CULong
pos :: FT_Stream -> Ptr CULong
descriptor :: FT_Stream -> Ptr FT_StreamDesc
read :: FT_Stream -> Ptr FT_Stream_IoFunc
close :: FT_Stream -> Ptr FT_Stream_CloseFunc
memory :: FT_Stream -> Ptr FT_Memory
cursor :: FT_Stream -> Ptr (Ptr CUChar)
limit :: FT_Stream -> Ptr (Ptr CUChar)

module Graphics.Rendering.FreeType.Internal.Library
data FT_LibraryRec_
type FT_Library = Ptr FT_LibraryRec_

module Graphics.Rendering.FreeType.Internal.PrimitiveTypes
ft_LOAD_DEFAULT :: FT_Int32
ft_LOAD_NO_SCALE :: FT_Int32
ft_LOAD_NO_HINTING :: FT_Int32
ft_LOAD_RENDER :: FT_Int32
ft_LOAD_NO_BITMAP :: FT_Int32
ft_LOAD_VERTICAL_LAYOUT :: FT_Int32
ft_LOAD_FORCE_AUTOHINT :: FT_Int32
ft_LOAD_CROP_BITMAP :: FT_Int32
ft_LOAD_PEDANTIC :: FT_Int32
ft_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH :: FT_Int32
ft_LOAD_NO_RECURSE :: FT_Int32
ft_LOAD_IGNORE_TRANSFORM :: FT_Int32
ft_LOAD_MONOCHROME :: FT_Int32
ft_LOAD_LINEAR_DESIGN :: FT_Int32
ft_LOAD_NO_AUTOHINT :: FT_Int32
type FT_Byte = CUChar
type FT_Bytes = Ptr FT_Byte
type FT_Char = CChar
type FT_Int = CInt
type FT_UInt = CUInt
type FT_Int16 = CShort
type FT_UInt16 = CUShort
type FT_Int32 = Int32
type FT_UInt32 = Word32
type FT_Short = CShort
type FT_UShort = CUShort
type FT_Long = CLong
type FT_ULong = CULong
type FT_Bool = CUChar
type FT_Offset = Word32
type FT_Error = CInt
type FT_F26Dot6 = CLong
type FT_Fixed = CLong
type FT_Pos = CLong
type FT_Pointer = Ptr ()
newtype FT_Render_Mode
FT_Render_Mode :: CUInt -> FT_Render_Mode
ft_RENDER_MODE_NORMAL :: FT_Render_Mode
ft_RENDER_MODE_LIGHT :: FT_Render_Mode
ft_RENDER_MODE_MONO :: FT_Render_Mode
ft_RENDER_MODE_LCD :: FT_Render_Mode
fREETYPE_MAJOR :: FT_Int
ft_RENDER_MODE_LCD_V :: FT_Render_Mode
fREETYPE_MINOR :: FT_Int
fREETYPE_PATCH :: FT_Int
newtype FT_Encoding
FT_Encoding :: FT_UInt32 -> FT_Encoding
ft_ENCODING_NONE :: FT_Encoding
ft_ENCODING_MS_SYMBOL :: FT_Encoding
ft_ENCODING_UNICODE :: FT_Encoding
ft_ENCODING_SJIS :: FT_Encoding
ft_ENCODING_GB2312 :: FT_Encoding
ft_ENCODING_BIG5 :: FT_Encoding
ft_ENCODING_WANSUNG :: FT_Encoding
ft_ENCODING_JOHAB :: FT_Encoding
ft_ENCODING_MS_SJIS :: FT_Encoding
ft_ENCODING_MS_GB2312 :: FT_Encoding
ft_ENCODING_MS_BIG5 :: FT_Encoding
ft_ENCODING_MS_WANSUNG :: FT_Encoding
newtype FT_FACE_FLAG
FT_FACE_FLAG :: FT_Int -> FT_FACE_FLAG
ft_ENCODING_MS_JOHAB :: FT_Encoding
ft_FACE_FLAG_SCALABLE :: FT_FACE_FLAG
ft_ENCODING_ADOBE_STANDARD :: FT_Encoding
ft_FACE_FLAG_FIXED_SIZES :: FT_FACE_FLAG
ft_ENCODING_ADOBE_EXPERT :: FT_Encoding
ft_FACE_FLAG_FIXED_WIDTH :: FT_FACE_FLAG
ft_ENCODING_ADOBE_CUSTOM :: FT_Encoding
ft_FACE_FLAG_SFNT :: FT_FACE_FLAG
ft_ENCODING_ADOBE_LATIN_1 :: FT_Encoding
ft_FACE_FLAG_HORIZONTAL :: FT_FACE_FLAG
ft_ENCODING_OLD_LATIN_2 :: FT_Encoding
ft_FACE_FLAG_VERTICAL :: FT_FACE_FLAG
ft_ENCODING_APPLE_ROMAN :: FT_Encoding
ft_FACE_FLAG_KERNING :: FT_FACE_FLAG
ft_FACE_FLAG_FAST_GLYPHS :: FT_FACE_FLAG
ft_FACE_FLAG_MULTIPLE_MASTERS :: FT_FACE_FLAG
newtype FT_OPEN
FT_OPEN :: FT_UInt -> FT_OPEN
ft_FACE_FLAG_GLYPH_NAMES :: FT_FACE_FLAG
ft_OPEN_MEMORY :: FT_OPEN
ft_FACE_FLAG_EXTERNAL_STREAM :: FT_FACE_FLAG
ft_OPEN_STREAM :: FT_OPEN
ft_FACE_FLAG_HINTER :: FT_FACE_FLAG
ft_OPEN_PATHNAME :: FT_OPEN
ft_FACE_FLAG_CID_KEYED :: FT_FACE_FLAG
ft_OPEN_DRIVER :: FT_OPEN
ft_FACE_FLAG_TRICKY :: FT_FACE_FLAG
ft_OPEN_PARAMS :: FT_OPEN
newtype FT_Size_Request_Type
FT_Size_Request_Type :: FT_UInt -> FT_Size_Request_Type
ft_SIZE_REQUEST_TYPE_NOMINAL :: FT_Size_Request_Type
ft_SIZE_REQUEST_TYPE_REAL_DIM :: FT_Size_Request_Type
ft_SIZE_REQUEST_TYPE_BBOX :: FT_Size_Request_Type
ft_SIZE_REQUEST_TYPE_CELL :: FT_Size_Request_Type
ft_LOAD_TARGET_NORMAL :: FT_UInt32
ft_SIZE_REQUEST_TYPE_SCALES :: FT_Size_Request_Type
ft_LOAD_TARGET_LIGHT :: FT_UInt32
ft_LOAD_TARGET_MONO :: FT_UInt32
ft_LOAD_TARGET_LCD :: FT_UInt32
ft_LOAD_TARGET_LCD_V :: FT_UInt32
newtype FT_Kerning_Mode
FT_Kerning_Mode :: FT_UInt32 -> FT_Kerning_Mode
ft_KERNING_DEFAULT :: FT_Kerning_Mode
ft_KERNING_UNFITTED :: FT_Kerning_Mode
ft_KERNING_UNSCALED :: FT_Kerning_Mode
newtype FT_SUBGLYPH_FLAG
FT_SUBGLYPH_FLAG :: FT_UInt -> FT_SUBGLYPH_FLAG
ft_SUBGLYPH_FLAG_ARGS_ARE_WORDS :: FT_SUBGLYPH_FLAG
ft_SUBGLYPH_FLAG_ARGS_ARE_XY_VALUES :: FT_SUBGLYPH_FLAG
ft_SUBGLYPH_FLAG_ROUND_XY_TO_GRID :: FT_SUBGLYPH_FLAG
ft_SUBGLYPH_FLAG_SCALE :: FT_SUBGLYPH_FLAG
ft_SUBGLYPH_FLAG_XY_SCALE :: FT_SUBGLYPH_FLAG
ft_SUBGLYPH_FLAG_2X2 :: FT_SUBGLYPH_FLAG
ft_FSTYPE_INSTALLABLE_EMBEDDING :: FT_UShort
ft_SUBGLYPH_FLAG_USE_MY_METRICS :: FT_SUBGLYPH_FLAG
ft_FSTYPE_RESTRICTED_LICENSE_EMBEDDING :: FT_UShort
ft_FSTYPE_PREVIEW_AND_PRINT_EMBEDDING :: FT_UShort
ft_FSTYPE_EDITABLE_EMBEDDING :: FT_UShort
ft_FSTYPE_NO_SUBSETTING :: FT_UShort
ft_FSTYPE_BITMAP_EMBEDDING_ONLY :: FT_UShort
newtype FT_Glyph_Format
FT_Glyph_Format :: FT_UInt32 -> FT_Glyph_Format
ft_GLYPH_FORMAT_NONE :: FT_Glyph_Format
ft_GLYPH_FORMAT_COMPOSITE :: FT_Glyph_Format
ft_GLYPH_FORMAT_BITMAP :: FT_Glyph_Format
ft_GLYPH_FORMAT_OUTLINE :: FT_Glyph_Format
ft_GLYPH_FORMAT_PLOTTER :: FT_Glyph_Format
newtype FT_OUTLINE_FLAGS
FT_OUTLINE_FLAGS :: FT_UInt32 -> FT_OUTLINE_FLAGS
ft_OUTLINE_NONE :: FT_OUTLINE_FLAGS
ft_OUTLINE_OWNER :: FT_OUTLINE_FLAGS
ft_OUTLINE_EVEN_ODD_FILL :: FT_OUTLINE_FLAGS
ft_OUTLINE_REVERSE_FILL :: FT_OUTLINE_FLAGS
ft_OUTLINE_IGNORE_DROPOUTS :: FT_OUTLINE_FLAGS
ft_OUTLINE_SMART_DROPOUTS :: FT_OUTLINE_FLAGS
ft_OUTLINE_INCLUDE_STUBS :: FT_OUTLINE_FLAGS
newtype FT_Orientation
FT_Orientation :: FT_UInt -> FT_Orientation
ft_OUTLINE_HIGH_PRECISION :: FT_OUTLINE_FLAGS
ft_ORIENTATION_TRUETYPE :: FT_Orientation
ft_OUTLINE_SINGLE_PASS :: FT_OUTLINE_FLAGS
ft_ORIENTATION_POSTSCRIPT :: FT_Orientation
ft_ORIENTATION_FILL_RIGHT :: FT_Orientation
ft_ORIENTATION_FILL_LEFT :: FT_Orientation
ft_ORIENTATION_NONE :: FT_Orientation
instance Eq FT_Render_Mode
instance Show FT_Render_Mode
instance Real FT_Render_Mode
instance Ord FT_Render_Mode
instance Enum FT_Render_Mode
instance Num FT_Render_Mode
instance Integral FT_Render_Mode
instance Storable FT_Render_Mode
instance Eq FT_Encoding
instance Show FT_Encoding
instance Real FT_Encoding
instance Ord FT_Encoding
instance Enum FT_Encoding
instance Num FT_Encoding
instance Integral FT_Encoding
instance Storable FT_Encoding
instance Eq FT_FACE_FLAG
instance Show FT_FACE_FLAG
instance Real FT_FACE_FLAG
instance Ord FT_FACE_FLAG
instance Enum FT_FACE_FLAG
instance Num FT_FACE_FLAG
instance Integral FT_FACE_FLAG
instance Storable FT_FACE_FLAG
instance Eq FT_OPEN
instance Show FT_OPEN
instance Real FT_OPEN
instance Ord FT_OPEN
instance Enum FT_OPEN
instance Num FT_OPEN
instance Integral FT_OPEN
instance Storable FT_OPEN
instance Eq FT_Size_Request_Type
instance Show FT_Size_Request_Type
instance Real FT_Size_Request_Type
instance Ord FT_Size_Request_Type
instance Enum FT_Size_Request_Type
instance Num FT_Size_Request_Type
instance Integral FT_Size_Request_Type
instance Storable FT_Size_Request_Type
instance Eq FT_Kerning_Mode
instance Show FT_Kerning_Mode
instance Real FT_Kerning_Mode
instance Ord FT_Kerning_Mode
instance Enum FT_Kerning_Mode
instance Num FT_Kerning_Mode
instance Integral FT_Kerning_Mode
instance Storable FT_Kerning_Mode
instance Eq FT_SUBGLYPH_FLAG
instance Show FT_SUBGLYPH_FLAG
instance Real FT_SUBGLYPH_FLAG
instance Ord FT_SUBGLYPH_FLAG
instance Enum FT_SUBGLYPH_FLAG
instance Num FT_SUBGLYPH_FLAG
instance Integral FT_SUBGLYPH_FLAG
instance Storable FT_SUBGLYPH_FLAG
instance Eq FT_Glyph_Format
instance Show FT_Glyph_Format
instance Real FT_Glyph_Format
instance Ord FT_Glyph_Format
instance Enum FT_Glyph_Format
instance Num FT_Glyph_Format
instance Integral FT_Glyph_Format
instance Storable FT_Glyph_Format
instance Eq FT_OUTLINE_FLAGS
instance Show FT_OUTLINE_FLAGS
instance Real FT_OUTLINE_FLAGS
instance Ord FT_OUTLINE_FLAGS
instance Enum FT_OUTLINE_FLAGS
instance Num FT_OUTLINE_FLAGS
instance Integral FT_OUTLINE_FLAGS
instance Storable FT_OUTLINE_FLAGS
instance Eq FT_Orientation
instance Show FT_Orientation
instance Real FT_Orientation
instance Ord FT_Orientation
instance Enum FT_Orientation
instance Num FT_Orientation
instance Integral FT_Orientation
instance Storable FT_Orientation

module Graphics.Rendering.FreeType.Internal.Matrix
data FT_Matrix
FT_Matrix :: FT_Fixed -> FT_Fixed -> FT_Fixed -> FT_Fixed -> FT_Matrix
xx :: FT_Matrix -> FT_Fixed
xy :: FT_Matrix -> FT_Fixed
yx :: FT_Matrix -> FT_Fixed
yy :: FT_Matrix -> FT_Fixed
instance Read FT_Matrix
instance Show FT_Matrix
instance Eq FT_Matrix
instance Storable FT_Matrix

module Graphics.Rendering.FreeType.Internal.Vector
data FT_Vector
FT_Vector :: FT_Pos -> FT_Pos -> FT_Vector
x :: FT_Vector -> FT_Pos
y :: FT_Vector -> FT_Pos
instance Read FT_Vector
instance Show FT_Vector
instance Eq FT_Vector
instance Storable FT_Vector

module Graphics.Rendering.FreeType.Internal.Glyph
data FT_GlyphRec_
type FT_Glyph = Ptr FT_GlyphRec_
library :: FT_Glyph -> Ptr FT_Library
format :: FT_Glyph -> Ptr FT_Glyph_Format
advance :: FT_Glyph -> Ptr FT_Vector

module Graphics.Rendering.FreeType.Internal.SizeRequest
data FT_Size_RequestRec
FT_Size_RequestRec :: FT_Size_Request_Type -> FT_Long -> FT_Long -> FT_UInt -> FT_UInt -> FT_Size_RequestRec
type_ :: FT_Size_RequestRec -> FT_Size_Request_Type
width :: FT_Size_RequestRec -> FT_Long
height :: FT_Size_RequestRec -> FT_Long
horiResolution :: FT_Size_RequestRec -> FT_UInt
vertResolution :: FT_Size_RequestRec -> FT_UInt
type FT_Size_Request = Ptr FT_Size_RequestRec
instance Storable FT_Size_RequestRec

module Graphics.Rendering.FreeType.Internal.CharMap
data FT_CharMapRec
type FT_CharMap = Ptr FT_CharMapRec
face :: FT_CharMap -> Ptr FT_Face
encoding :: FT_CharMap -> Ptr FT_Encoding
platform_id :: FT_CharMap -> Ptr FT_UShort
encoding_id :: FT_CharMap -> Ptr FT_UShort

module Graphics.Rendering.FreeType.Internal.Outline
data FT_Outline
FT_Outline :: CShort -> CShort -> Ptr FT_Vector -> CString -> Ptr CShort -> FT_OUTLINE_FLAGS -> FT_Outline
n_contours :: FT_Outline -> CShort
n_points :: FT_Outline -> CShort
points :: FT_Outline -> Ptr FT_Vector
tags :: FT_Outline -> CString
contours :: FT_Outline -> Ptr CShort
flags :: FT_Outline -> FT_OUTLINE_FLAGS
type FT_Outline_MoveToFunc = FunPtr (Ptr FT_Vector -> Ptr () -> IO CInt)
type FT_Outline_LineToFunc = FunPtr (Ptr FT_Vector -> Ptr () -> IO CInt)
type FT_Outline_ConicToFunc = FunPtr (Ptr FT_Vector -> Ptr FT_Vector -> Ptr () -> IO CInt)
type FT_Outline_CubicToFunc = FunPtr (Ptr FT_Vector -> Ptr FT_Vector -> Ptr FT_Vector -> Ptr () -> IO CInt)
data FT_Outline_Funcs
FT_Outline_Funcs :: FT_Outline_MoveToFunc -> FT_Outline_LineToFunc -> FT_Outline_ConicToFunc -> FT_Outline_CubicToFunc -> CInt -> FT_Pos -> FT_Outline_Funcs
move_to :: FT_Outline_Funcs -> FT_Outline_MoveToFunc
line_to :: FT_Outline_Funcs -> FT_Outline_LineToFunc
conic_to :: FT_Outline_Funcs -> FT_Outline_ConicToFunc
cubic_to :: FT_Outline_Funcs -> FT_Outline_CubicToFunc
shift :: FT_Outline_Funcs -> CInt
delta :: FT_Outline_Funcs -> FT_Pos
instance Storable FT_Outline_Funcs
instance Storable FT_Outline

module Graphics.Rendering.FreeType.Internal.OutlineGlyph
data FT_OutlineGlyph
root :: FT_OutlineGlyph -> FT_Glyph
outline :: FT_OutlineGlyph -> Ptr FT_Outline
cast :: FT_Glyph -> FT_OutlineGlyph

module Graphics.Rendering.FreeType.Internal.BBox
data FT_BBox
FT_BBox :: FT_Pos -> FT_Pos -> FT_Pos -> FT_Pos -> FT_BBox
xMin :: FT_BBox -> FT_Pos
yMin :: FT_BBox -> FT_Pos
xMax :: FT_BBox -> FT_Pos
yMax :: FT_BBox -> FT_Pos
instance Read FT_BBox
instance Show FT_BBox
instance Eq FT_BBox
instance Storable FT_BBox

module Graphics.Rendering.FreeType.Internal.RasterParams
data FT_Raster_Params
type FT_SpanFunc = FunPtr (CInt -> CInt -> Ptr FT_Span -> Ptr () -> IO ())
type FT_Raster_BitTest_Func = FunPtr (CInt -> CInt -> Ptr () -> IO CInt)
type FT_Raster_BitSet_Func = FunPtr (CInt -> CInt -> Ptr () -> IO ())
target :: FT_Raster_Params -> Ptr FT_Bitmap
source :: FT_Raster_Params -> Ptr ()
flags :: FT_Raster_Params -> CInt
gray_spans :: FT_Raster_Params -> FT_SpanFunc
user :: FT_Raster_Params -> Ptr ()
clip_box :: FT_Raster_Params -> FT_BBox
instance Storable FT_Raster_Params

module Graphics.Rendering.FreeType.Internal.BitmapGlyph
data FT_BitmapGlyph
root :: FT_BitmapGlyph -> FT_Glyph
left :: FT_BitmapGlyph -> Ptr FT_Int
top :: FT_BitmapGlyph -> Ptr FT_Int
bitmap :: FT_BitmapGlyph -> Ptr FT_Bitmap
cast :: FT_Glyph -> FT_BitmapGlyph

module Graphics.Rendering.FreeType.Internal.BitmapSize
data FT_Bitmap_Size
FT_Bitmap_Size :: FT_Short -> FT_Short -> FT_Pos -> FT_Pos -> FT_Pos -> FT_Bitmap_Size
height :: FT_Bitmap_Size -> FT_Short
width :: FT_Bitmap_Size -> FT_Short
size :: FT_Bitmap_Size -> FT_Pos
x_ppem :: FT_Bitmap_Size -> FT_Pos
y_ppem :: FT_Bitmap_Size -> FT_Pos
instance Read FT_Bitmap_Size
instance Show FT_Bitmap_Size
instance Eq FT_Bitmap_Size
instance Storable FT_Bitmap_Size

module Graphics.Rendering.FreeType.Internal.GlyphMetrics
data FT_Glyph_Metrics
FT_Glyph_Metrics :: FT_Pos -> FT_Pos -> FT_Pos -> FT_Pos -> FT_Pos -> FT_Pos -> FT_Pos -> FT_Pos -> FT_Glyph_Metrics
width :: FT_Glyph_Metrics -> FT_Pos
height :: FT_Glyph_Metrics -> FT_Pos
horiBearingX :: FT_Glyph_Metrics -> FT_Pos
horiBearingY :: FT_Glyph_Metrics -> FT_Pos
horiAdvance :: FT_Glyph_Metrics -> FT_Pos
vertBearingX :: FT_Glyph_Metrics -> FT_Pos
vertBearingY :: FT_Glyph_Metrics -> FT_Pos
vertAdvance :: FT_Glyph_Metrics -> FT_Pos
instance Read FT_Glyph_Metrics
instance Show FT_Glyph_Metrics
instance Eq FT_Glyph_Metrics
instance Storable FT_Glyph_Metrics

module Graphics.Rendering.FreeType.Internal.GlyphSlot
data FT_GlyphSlotRec_
type FT_GlyphSlot = Ptr FT_GlyphSlotRec_
library :: FT_GlyphSlot -> Ptr FT_Library
face :: FT_GlyphSlot -> Ptr FT_Face
next :: FT_GlyphSlot -> Ptr FT_GlyphSlot
generic :: FT_GlyphSlot -> Ptr FT_Generic
metrics :: FT_GlyphSlot -> Ptr FT_Glyph_Metrics
linearHoriAdvance :: FT_GlyphSlot -> Ptr FT_Fixed
linearVertAdvance :: FT_GlyphSlot -> Ptr FT_Fixed
advance :: FT_GlyphSlot -> Ptr FT_Vector
format :: FT_GlyphSlot -> Ptr FT_Glyph_Format
bitmap :: FT_GlyphSlot -> Ptr FT_Bitmap
bitmap_top :: FT_GlyphSlot -> Ptr FT_Int
bitmap_left :: FT_GlyphSlot -> Ptr FT_Int
outline :: FT_GlyphSlot -> Ptr FT_Outline
num_subglyphs :: FT_GlyphSlot -> Ptr FT_UInt
subglyphs :: FT_GlyphSlot -> Ptr FT_SubGlyph
control_data :: FT_GlyphSlot -> Ptr a
control_len :: FT_GlyphSlot -> Ptr CLong
lsb_delta :: FT_GlyphSlot -> Ptr FT_Pos
rsb_delta :: FT_GlyphSlot -> Ptr FT_Pos

module Graphics.Rendering.FreeType.Internal.Parameter
data FT_Parameter
FT_Parameter :: FT_ULong -> FT_Pointer -> FT_Parameter
tag :: FT_Parameter -> FT_ULong
data_ :: FT_Parameter -> FT_Pointer
instance Storable FT_Parameter

module Graphics.Rendering.FreeType.Internal.OpenArgs
data FT_Open_Args
FT_Open_Args :: FT_UInt -> FT_Bytes -> FT_Long -> CString -> FT_Stream -> FT_Module -> FT_Int -> Ptr FT_Parameter -> FT_Open_Args
flags :: FT_Open_Args -> FT_UInt
memory_base :: FT_Open_Args -> FT_Bytes
memory_size :: FT_Open_Args -> FT_Long
pathname :: FT_Open_Args -> CString
stream :: FT_Open_Args -> FT_Stream
driver :: FT_Open_Args -> FT_Module
num_params :: FT_Open_Args -> FT_Int
params :: FT_Open_Args -> Ptr FT_Parameter
instance Storable FT_Open_Args

module Graphics.Rendering.FreeType.Internal.SizeMetrics
data FT_Size_Metrics
FT_Size_Metrics :: FT_UShort -> FT_UShort -> FT_Fixed -> FT_Fixed -> FT_Pos -> FT_Pos -> FT_Pos -> FT_Pos -> FT_Size_Metrics
x_ppem :: FT_Size_Metrics -> FT_UShort
y_ppem :: FT_Size_Metrics -> FT_UShort
x_scale :: FT_Size_Metrics -> FT_Fixed
y_scale :: FT_Size_Metrics -> FT_Fixed
ascender :: FT_Size_Metrics -> FT_Pos
descender :: FT_Size_Metrics -> FT_Pos
height :: FT_Size_Metrics -> FT_Pos
max_advance :: FT_Size_Metrics -> FT_Pos
instance Read FT_Size_Metrics
instance Show FT_Size_Metrics
instance Eq FT_Size_Metrics
instance Storable FT_Size_Metrics

module Graphics.Rendering.FreeType.Internal.Size
data FT_SizeRec_
type FT_Size = Ptr FT_SizeRec_
face :: FT_Size -> Ptr FT_Face
generic :: FT_Size -> Ptr FT_Generic
metrics :: FT_Size -> Ptr FT_Size_Metrics

module Graphics.Rendering.FreeType.Internal.Face
data FT_FaceRec_
type FT_Face = Ptr FT_FaceRec_
num_faces :: FT_Face -> Ptr FT_Long
face_index :: FT_Face -> Ptr FT_Long
face_flags :: FT_Face -> Ptr FT_Long
style_flags :: FT_Face -> Ptr FT_Long
num_glyphs :: FT_Face -> Ptr FT_Long
family_name :: FT_Face -> Ptr CString
style_name :: FT_Face -> Ptr CString
num_fixed_sizes :: FT_Face -> Ptr FT_Int
available_sizes :: FT_Face -> Ptr (Ptr FT_Bitmap_Size)
num_charmaps :: FT_Face -> Ptr FT_Int
charmaps :: FT_Face -> Ptr (Ptr FT_CharMap)
generic :: FT_Face -> Ptr FT_Generic
bbox :: FT_Face -> Ptr FT_BBox
units_per_EM :: FT_Face -> Ptr FT_UShort
ascender :: FT_Face -> Ptr FT_Short
descender :: FT_Face -> Ptr FT_Short
height :: FT_Face -> Ptr FT_Short
max_advance_width :: FT_Face -> Ptr FT_Short
max_advance_height :: FT_Face -> Ptr FT_Short
underline_position :: FT_Face -> Ptr FT_Short
underline_thickness :: FT_Face -> Ptr FT_Short
glyph :: FT_Face -> Ptr FT_GlyphSlot
size :: FT_Face -> Ptr FT_Size
charmap :: FT_Face -> Ptr FT_CharMap
ft_HAS_HORIZONTAL :: FT_Face -> IO Bool
ft_HAS_VERTICAL :: FT_Face -> IO Bool
ft_HAS_KERNING :: FT_Face -> IO Bool
ft_IS_SCALABLE :: FT_Face -> IO Bool
ft_IS_SFNT :: FT_Face -> IO Bool
ft_IS_FIXED_WIDTH :: FT_Face -> IO Bool
ft_HAS_FIXED_SIZES :: FT_Face -> IO Bool
ft_HAS_FAST_GLYPHS :: FT_Face -> IO Bool
ft_HAS_GLYPH_NAMES :: FT_Face -> IO Bool
ft_HAS_MULTIPLE_MASTERS :: FT_Face -> IO Bool
ft_IS_CID_KEYED :: FT_Face -> IO Bool
ft_IS_TRICKY :: FT_Face -> IO Bool
ft_STYLE_FLAG_ITALIC :: FT_Long
ft_STYLE_FLAG_BOLD :: FT_Long

module Graphics.Rendering.FreeType.Internal
ft_Init_FreeType :: Ptr FT_Library -> IO FT_Error
ft_New_Face :: FT_Library -> CString -> FT_Long -> Ptr FT_Face -> IO FT_Error
ft_Set_Char_Size :: FT_Face -> FT_F26Dot6 -> FT_F26Dot6 -> FT_UInt -> FT_UInt -> IO FT_Error
ft_Set_Pixel_Sizes :: FT_Face -> FT_UInt -> FT_UInt -> IO FT_Error
ft_Get_Char_Index :: FT_Face -> FT_ULong -> IO FT_UInt
ft_Set_Transform :: FT_Face -> Ptr FT_Matrix -> Ptr FT_Vector -> IO ()
ft_Load_Char :: FT_Face -> FT_ULong -> FT_Int32 -> IO FT_Error
ft_Done_Face :: FT_Face -> IO FT_Error
ft_Done_FreeType :: FT_Library -> IO FT_Error
ft_Load_Glyph :: FT_Face -> FT_UInt -> FT_Int32 -> IO FT_Error
ft_Get_Glyph :: FT_GlyphSlot -> Ptr FT_Glyph -> IO FT_Error
ft_Done_Glyph :: FT_Glyph -> IO ()
ft_Glyph_To_Bitmap :: Ptr FT_Glyph -> FT_Render_Mode -> Ptr FT_Vector -> FT_Bool -> IO FT_Error
ft_Library_Version :: FT_Library -> Ptr FT_Int -> Ptr FT_Int -> Ptr FT_Int -> IO ()

-- | This is just here for completeness, TrueType hinting is no longer
--   patented
ft_Face_CheckTrueTypePatents :: FT_Face -> IO FT_Bool

-- | This is just here for completeness, TrueType hinting is no longer
--   patented.
ft_Face_SetUnpatentedHinting :: FT_Face -> FT_Bool -> IO FT_Bool
ft_New_Memory_Face :: FT_Library -> FT_Bytes -> FT_Long -> FT_Long -> Ptr FT_Face -> IO FT_Error
ft_Open_Face :: FT_Library -> Ptr FT_Open_Args -> FT_Long -> Ptr FT_Face -> IO FT_Error
ft_Attach_File :: FT_Face -> CString -> IO FT_Error
ft_Attach_Stream :: FT_Face -> Ptr FT_Open_Args -> IO FT_Error
ft_Reference_Face :: FT_Face -> IO FT_Error
ft_Select_Size :: FT_Face -> FT_Int -> IO FT_Error
ft_Request_Size :: FT_Face -> FT_Size_Request -> IO FT_Error
ft_Render_Glyph :: FT_GlyphSlot -> FT_Render_Mode -> IO FT_Error
ft_Get_Kerning :: FT_Face -> FT_UInt -> FT_UInt -> FT_UInt -> Ptr FT_Vector -> IO FT_Error
ft_Get_Track_Kerning :: FT_Face -> FT_Fixed -> FT_Int -> Ptr FT_Fixed -> IO FT_Error
ft_Get_Glyph_Name :: FT_Face -> FT_UInt -> FT_Pointer -> FT_UInt -> IO FT_Error
ft_Get_Postscript_Name :: FT_Face -> IO CString
ft_Select_Charmap :: FT_Face -> FT_Encoding -> IO FT_Error
ft_Set_Charmap :: FT_Face -> FT_CharMap -> IO FT_Error
ft_Get_Charmap_Index :: FT_CharMap -> IO FT_Int
ft_Get_First_Char :: FT_Face -> Ptr FT_UInt -> IO FT_ULong
ft_Get_Next_Char :: FT_Face -> FT_ULong -> Ptr FT_UInt -> IO FT_ULong
ft_Get_Name_Index :: FT_Face -> CString -> IO FT_UInt
ft_Get_SubGlyph_Info :: FT_GlyphSlot -> FT_UInt -> Ptr FT_Int -> Ptr FT_UInt -> Ptr FT_Int -> Ptr FT_Int -> Ptr FT_Matrix -> IO FT_Error
ft_Get_FSType_Flags :: FT_Face -> IO FT_UShort
ft_Face_GetCharVariantIndex :: FT_Face -> FT_ULong -> FT_ULong -> IO FT_UInt
ft_Face_GetCharVariantIsDefault :: FT_Face -> FT_ULong -> FT_ULong -> IO FT_Int
ft_Face_GetVariantSelectors :: FT_Face -> IO (Ptr FT_UInt32)
ft_Face_GetVariantsOfChar :: FT_Face -> FT_ULong -> IO (Ptr FT_UInt32)
ft_Face_GetCharsOfVariant :: FT_Face -> FT_ULong -> IO (Ptr FT_UInt32)
ft_Outline_New :: FT_Library -> FT_UInt -> FT_Int -> Ptr FT_Outline -> IO FT_Error
ft_Outline_New_Internal :: FT_Memory -> FT_UInt -> FT_Int -> Ptr FT_Outline -> IO FT_Error
ft_Outline_Done :: FT_Library -> Ptr FT_Outline -> IO FT_Error
ft_Outline_Done_Internal :: FT_Memory -> Ptr FT_Outline -> IO FT_Error
ft_Outline_Copy :: Ptr FT_Outline -> Ptr FT_Outline -> IO FT_Error
ft_Outline_Translate :: Ptr FT_Outline -> FT_Pos -> FT_Pos -> IO ()
ft_Outline_Transform :: Ptr FT_Outline -> Ptr FT_Matrix -> IO ()
ft_Outline_Embolden :: Ptr FT_Outline -> FT_Pos -> IO FT_Error
ft_Outline_Reverse :: Ptr FT_Outline -> IO ()
ft_Outline_Check :: Ptr FT_Outline -> IO FT_Error
ft_Outline_Get_BBox :: Ptr FT_Outline -> Ptr FT_BBox -> IO FT_Error
ft_Outline_Decompose :: Ptr FT_Outline -> Ptr FT_Outline_Funcs -> Ptr a -> IO FT_Error
ft_Outline_Get_CBox :: Ptr FT_Outline -> Ptr FT_BBox -> IO ()
ft_Outline_Get_Bitmap :: FT_Library -> Ptr FT_Outline -> Ptr FT_Bitmap -> IO FT_Error
ft_Outline_Render :: FT_Library -> Ptr FT_Outline -> Ptr FT_Raster_Params -> IO FT_Error
ft_Outline_Get_Orientation :: Ptr FT_Outline -> IO FT_Orientation
ft_New_Size :: FT_Face -> Ptr FT_Size -> IO FT_Error
ft_Done_Size :: FT_Size -> IO FT_Error
ft_Activate_Size :: FT_Size -> IO FT_Error
