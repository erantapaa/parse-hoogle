-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Geographic and Geometric Data
--   
--   This package contains functions, types, and classes for manipulating
--   geographic and geometric data.
--   
--   The package supports parsing of GeoJSON 1.0
--   <a>&lt;http://geojson.org/geojson-spec.html</a>&gt;.
--   
--   The package also has rudimentary support for the Visualization Toolkit
--   (VTK) 4.2 <a>&lt;http://www.vtk.org/VTK/img/file-formats.pdf</a>&gt;.
--   An executable is provided for converting GeoJSON files to VTK ones.
@package handa-geodata
@version 0.2.0.1


-- | Rudimentary support for Visualization Toolkit (VTK) 4.2
--   <a>&lt;http://www.vtk.org/VTK/img/file-formats.pdf</a>&gt; legacy data
--   formats.
module Data.Geometry.LegacyVTK

-- | Legacy VTK geometry/topology data.

-- | <i>Warning: This interface is provisional and subject to substantial
--   revision. </i>
data Geometry
StructuredPoints :: Int -> Int -> Int -> Scientific -> Scientific -> Scientific -> Scientific -> Scientific -> Scientific -> Geometry
xDimension :: Geometry -> Int
yDimension :: Geometry -> Int
zDimension :: Geometry -> Int
xOrigin :: Geometry -> Scientific
yOrigin :: Geometry -> Scientific
zOrigin :: Geometry -> Scientific
xSpacing :: Geometry -> Scientific
ySpacing :: Geometry -> Scientific
zSpacing :: Geometry -> Scientific
StructuredGrid :: Int -> Int -> Int -> Points -> Geometry
xDimension :: Geometry -> Int
yDimension :: Geometry -> Int
zDimension :: Geometry -> Int
points :: Geometry -> Points
UnstructuredGrid :: Points -> [Points] -> [Int] -> Geometry
points :: Geometry -> Points
cells :: Geometry -> [Points]
cellTypes :: Geometry -> [Int]
PolyData :: Points -> [Points] -> [Points] -> [Points] -> [Points] -> Geometry
points :: Geometry -> Points
vertices :: Geometry -> [Points]
lines :: Geometry -> [Points]
polygons :: Geometry -> [Points]
triangleStrips :: Geometry -> [Points]
RectilinearGrid :: Int -> Int -> Int -> [Scientific] -> [Scientific] -> [Scientific] -> Geometry
xDimension :: Geometry -> Int
yDimension :: Geometry -> Int
zDimension :: Geometry -> Int
xCoordinates :: Geometry -> [Scientific]
yCoordinates :: Geometry -> [Scientific]
zCoordinates :: Geometry -> [Scientific]
Field :: Geometry

-- | A VTK point.

-- | <i>Warning: This interface is provisional and subject to substantial
--   revision. </i>
data Point

-- | <i>Warning: This interface is provisional and subject to substantial
--   revision. </i>
Point :: Scientific -> Scientific -> Scientific -> Point
x :: Point -> Scientific
y :: Point -> Scientific
z :: Point -> Scientific

-- | A list of VTK points.

-- | <i>Warning: This interface is provisional and subject to substantial
--   revision. </i>
type Points = [Point]

-- | VTK dataset attributes.

-- | <i>Warning: This interface is provisional and subject to substantial
--   revision. </i>
data Attribute
Scalar :: Attribute
ColorScalar :: Attribute
LookupTable :: Attribute
Vector :: Attribute
Normal :: Attribute
TextureCoordinate :: Attribute
Tensor :: Attribute
FieldData :: Attribute

-- | Create lines of a formatted legacy VTK data file.

-- | <i>Warning: This interface is provisional and subject to substantial
--   revision. </i>
makeVTK :: String -> Geometry -> Maybe Attribute -> Maybe Attribute -> [String]
instance Eq Point
instance Ord Point
instance Read Point
instance Show Point
instance Eq Geometry
instance Read Geometry
instance Show Geometry
instance Eq Attribute
instance Read Attribute
instance Show Attribute


-- | Support for parsing and manipulating GeoJSON 1.0
--   <a>&lt;http://geojson.org/geojson-spec.html</a>&gt;.
module Data.Geography.GeoJSON

-- | A GeoJSON feature collection object
--   <a>&lt;http://geojson.org/geojson-spec.html#feature-collection-objects</a>&gt;.
data FeatureCollection
FeatureCollection :: Maybe Value -> [Feature] -> FeatureCollection
collectionBoundingBox :: FeatureCollection -> Maybe Value
features :: FeatureCollection -> [Feature]

-- | A GeoJSON feature object
--   <a>&lt;http://geojson.org/geojson-spec.html#feature-objects</a>&gt;.
data Feature
Feature :: Maybe Value -> Geometry -> Value -> Maybe Value -> Feature
boundingBox :: Feature -> Maybe Value
geometry :: Feature -> Geometry
properties :: Feature -> Value
identifier :: Feature -> Maybe Value

-- | A GeoJSON geometry object
--   <a>&lt;http://geojson.org/geojson-spec.html#geometry-objects</a>&gt;.
data Geometry

-- | A GeoJSON <tt>Point</tt>
--   <a>&lt;http://geojson.org/geojson-spec.html#point</a>&gt;.
Point :: PointGeometry -> Geometry

-- | A GeoJSON <tt>MultiPoint</tt>
--   <a>&lt;http://geojson.org/geojson-spec.html#multipoint</a>&gt;.
MultiPoint :: MultiPointGeometry -> Geometry

-- | A GeoJSON <tt>LineString</tt>
--   <a>&lt;http://geojson.org/geojson-spec.html#linestring</a>&gt;.
LineString :: LineStringGeometry -> Geometry

-- | A GeoJSON <tt>MultiLineString</tt>
--   <a>&lt;http://geojson.org/geojson-spec.html#multilinestring</a>&gt;.
MultiLineString :: MultiLineStringGeometry -> Geometry

-- | A GeoJSON <tt>Polygon</tt>
--   <a>&lt;http://geojson.org/geojson-spec.html#polygon</a>&gt;.
Polygon :: PolygonGeometry -> Geometry

-- | A GeoJSON <tt>MultiPolygon</tt>
--   <a>&lt;http://geojson.org/geojson-spec.html#multipolygon</a>&gt;.
MultiPolygon :: MultiPolygonGeometry -> Geometry

-- | A GeoJSON <tt>GeometryCollection</tt>
--   <a>&lt;http://geojson.org/geojson-spec.html#geometry-collection</a>&gt;.
GeometryCollection :: [Geometry] -> Geometry

-- | GeoJSON <tt>Point</tt> geometry
--   <a>&lt;http://geojson.org/geojson-spec.html#point</a>&gt;.
data PointGeometry
PointGeometry :: [Scientific] -> PointGeometry
coordinates :: PointGeometry -> [Scientific]

-- | GeoJSON <tt>MultiPoint</tt> geometry
--   <a>&lt;http://geojson.org/geojson-spec.html#multipoint</a>&gt;.
data MultiPointGeometry
MultiPointGeometry :: [PointGeometry] -> MultiPointGeometry
points :: MultiPointGeometry -> [PointGeometry]

-- | GeoJSON <tt>LineString</tt> geometry
--   <a>&lt;http://geojson.org/geojson-spec.html#linestring</a>&gt;.
data LineStringGeometry
LineStringGeometry :: [PointGeometry] -> LineStringGeometry
lineString :: LineStringGeometry -> [PointGeometry]

-- | GeoJSON <tt>MultiLineString</tt> geometry
--   <a>&lt;http://geojson.org/geojson-spec.html#multilinestring</a>&gt;.
data MultiLineStringGeometry
MultiLineStringGeometry :: [LineStringGeometry] -> MultiLineStringGeometry
lineStrings :: MultiLineStringGeometry -> [LineStringGeometry]

-- | GeoJSON <tt>Polygon</tt> geometry
--   <a>&lt;http://geojson.org/geojson-spec.html#polygon</a>&gt;.
data PolygonGeometry
PolygonGeometry :: [PointGeometry] -> [[PointGeometry]] -> PolygonGeometry
exterior :: PolygonGeometry -> [PointGeometry]
holes :: PolygonGeometry -> [[PointGeometry]]

-- | GeoJSON <tt>MultiPolygon</tt> geometry
--   <a>&lt;http://geojson.org/geojson-spec.html#multipolygon</a>&gt;.
data MultiPolygonGeometry
MultiPolygonGeometry :: [PolygonGeometry] -> MultiPolygonGeometry
polygons :: MultiPolygonGeometry -> [PolygonGeometry]

-- | Read and parse a GeoJSON file.
readGeoJSON :: FilePath -> IO (Maybe FeatureCollection)
instance Eq PointGeometry
instance Read PointGeometry
instance Show PointGeometry
instance Eq MultiPointGeometry
instance Read MultiPointGeometry
instance Show MultiPointGeometry
instance Eq LineStringGeometry
instance Read LineStringGeometry
instance Show LineStringGeometry
instance Eq MultiLineStringGeometry
instance Read MultiLineStringGeometry
instance Show MultiLineStringGeometry
instance Eq PolygonGeometry
instance Read PolygonGeometry
instance Show PolygonGeometry
instance Eq MultiPolygonGeometry
instance Read MultiPolygonGeometry
instance Show MultiPolygonGeometry
instance Eq Geometry
instance Read Geometry
instance Show Geometry
instance Eq Feature
instance Show Feature
instance Eq FeatureCollection
instance Show FeatureCollection
instance FromJSON MultiPolygonGeometry
instance FromJSON PolygonGeometry
instance FromJSON MultiLineStringGeometry
instance FromJSON LineStringGeometry
instance FromJSON MultiPointGeometry
instance FromJSON PointGeometry
instance FromJSON Geometry
instance FromJSON Feature
instance FromJSON FeatureCollection


-- | Utility functions for manipulating Legacy VTK.
module Data.Geometry.LegacyVTK.Util

-- | Convert GeoJSON to VTK.
vtkFromGeojson :: FeatureCollection -> Geometry
