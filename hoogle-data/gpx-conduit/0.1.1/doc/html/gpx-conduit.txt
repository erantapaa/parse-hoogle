-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Read GPX files using conduits
--   
--   Read GPX files into simple Point types.
@package gpx-conduit
@version 0.1.1


-- | This is a partial parsing of the GPX 1.0 and 1.0 exchange types.
module Geo.GPX.Conduit
data Track
Track :: Maybe Text -> Maybe Text -> [Segment] -> Track
trkName :: Track -> Maybe Text
trkDescription :: Track -> Maybe Text
segments :: Track -> [Segment]

-- | A GPX file usually is a single track (but can be many) with one or
--   more segments and many points in each segment.
data GPX
GPX :: [Track] -> GPX
tracks :: GPX -> [Track]

-- | A GPX segments is just a bundle of points.
data Segment
Segment :: [Point] -> Segment
points :: Segment -> [Point]

-- | Track point is a full-fledged representation of all the data available
--   in most GPS loggers. It is possible you don't want all this data and
--   can just made do with coordinates (via <tt>Pnt</tt>) or a custom
--   derivative.
data Point
Point :: Latitude -> Longitude -> Maybe Double -> Maybe UTCTime -> Point
pntLat :: Point -> Latitude
pntLon :: Point -> Longitude

-- | In meters
pntEle :: Point -> Maybe Double
pntTime :: Point -> Maybe UTCTime
readGPXFile :: FilePath -> IO (Maybe GPX)
pt :: Latitude -> Longitude -> Maybe Double -> Maybe UTCTime -> Point
instance Eq Point
instance Ord Point
instance Show Point
instance Read Point
instance Eq Segment
instance Ord Segment
instance Show Segment
instance Read Segment
instance Eq Track
instance Ord Track
instance Show Track
instance Read Track
instance Eq GPX
instance Ord GPX
instance Show GPX
instance Read GPX
