-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Implements the RFC 2426 vCard 3.0 spec
--   
--   Implements the RFC 2426 vCard 3.0 spec
@package hs-vcard
@version 0.1

module Text.VCard

-- | Calling <tt>show</tt> on <tt>VCard</tt> will output a RFC
--   2426-compliant VCard that can, for example, be easily saved to a file
--   and imported by any supporting program.
data VCard
VCard :: CommonName -> IndividualNames -> [VCardProperty] -> VCard

-- | Common name of the represented person. E.g.,
--   
--   <pre>
--   CommonName "Mr. Michael A. F. Schade"
--   </pre>
type CommonName = String

-- | A breakdown of the vCard entity's name, corresponding, in sequence, to
--   Family Name, Given Name, Additional Names, Honorific Prefixes, and
--   Honorific Suffixes. E.g.,
--   
--   <pre>
--   IndividualNames ["Schade"] ["Michael"] ["Anthony", "Fanetti"] [] ["Esq."]
--   </pre>
data IndividualNames
IndividualNames :: [String] -> [String] -> [String] -> [String] -> [String] -> IndividualNames
familyName :: IndividualNames -> [String]
givenName :: IndividualNames -> [String]
additionalNames :: IndividualNames -> [String]
honorificPrefixes :: IndividualNames -> [String]
honorificSuffixes :: IndividualNames -> [String]
data VCardProperty

-- | A list of nicknames belonging to the VCard entity. E.g.,
--   
--   <pre>
--   Nickname ["Mike", "Mikey"]
--   </pre>
Nickname :: [String] -> VCardProperty

-- | A photo of the VCard entity. E.g.,
--   
--   <pre>
--   Photo Nothing (URI "http://accentuate.us/smedia/images/michael.jpg")
--   </pre>
Photo :: Maybe String -> Data -> VCardProperty

-- | Registered IANA format
phtType :: VCardProperty -> Maybe String
phtData :: VCardProperty -> Data

-- | Specifies the birth date of the VCard entity. E.g.,
--   
--   <pre>
--   Birthday $ UTCTime (fromGregorian 1991 10 14) (secondsToDiffTime 0)
--   </pre>
Birthday :: UTCTime -> VCardProperty

-- | A physical address associated with the vCard entity. E.g.,
--   
--   <pre>
--   Address [AddrParcel, AddrPostal] "PO Box 935" "" "" "Fenton" "MO"
--                                    "63026" "USA"
--   </pre>
Address :: [AddrType] -> String -> String -> String -> String -> String -> String -> String -> VCardProperty
addrType :: VCardProperty -> [AddrType]
poBox :: VCardProperty -> String
extAddress :: VCardProperty -> String
streetAddress :: VCardProperty -> String

-- | City
locality :: VCardProperty -> String

-- | State or Province
region :: VCardProperty -> String
postalCode :: VCardProperty -> String
countryName :: VCardProperty -> String

-- | Formatted text about the delivery address. This is typically similar
--   to the information in Address. E.g.,
--   
--   <pre>
--   Label  [AddrParcel, AddrPostal]
--          ["Michael Schade", "PO Box 935", "Fenton, MO 63026"]
--   </pre>
Label :: [AddrType] -> [String] -> VCardProperty
lblType :: VCardProperty -> [AddrType]

-- | Will be newline separated
label :: VCardProperty -> [String]

-- | A telephone number for the VCard entity, as well as a list of
--   properties describing the telephone number. E.g.,
--   
--   <pre>
--   Telephone [TelCell, TelPreferred] "+1-555-555-5555"
--   </pre>
Telephone :: [TelType] -> String -> VCardProperty
telType :: VCardProperty -> [TelType]
number :: VCardProperty -> String

-- | An email address for the VCard entity, including a list of properties
--   describing it. E.g.,
--   
--   <pre>
--   Email [EmailInternet, EmailPreferred] "hackage@mschade.me"
--   </pre>
Email :: [EmailType] -> String -> VCardProperty
emailType :: VCardProperty -> [EmailType]
email :: VCardProperty -> String

-- | Specifies the mailing agent the vCard entity uses. E.g.,
--   
--   <pre>
--   Mailer "MichaelMail 4.2" -- Not a real mailing agent, unfortunately :(
--   </pre>
Mailer :: String -> VCardProperty

-- | Represents the time zone of the vCard entity. E.g.,
--   
--   <pre>
--   TZ (hoursToTimeZone (-6))
--   </pre>
TZ :: TimeZone -> VCardProperty

-- | Relates to the global positioning of the vCard entity. The value is
--   (latitude, longitude) and must be specified as decimal degrees,
--   preferably to six decimal places.
--   
--   <pre>
--   Geo (37.386013, -122.082932)
--   </pre>
Geo :: (Double, Double) -> VCardProperty

-- | The VCard entity's job title or other position. E.g.,
--   
--   <pre>
--   Title "Co-Founder"
--   </pre>
Title :: String -> VCardProperty

-- | Specifies the role associated with the title. E.g.,
--   
--   <pre>
--   Role "Anything"   -- For the co-founder, or
--   Role "Programmer" -- For someone the title "Research and Development"
--   </pre>
Role :: String -> VCardProperty

-- | An image of the vCard entity's logo. This would typically relate to
--   their organization. E.g.,
--   
--   <pre>
--   Logo Nothing (URI "http://spearheaddev.com/smedia/images/logo-trans.png")
--   </pre>
Logo :: Maybe String -> Data -> VCardProperty

-- | Registered IANA format
lgoType :: VCardProperty -> Maybe String
lgoData :: VCardProperty -> Data

-- | Indicates the vCard of an assistant or area administrator who is
--   typically separately addressable. E.g.,
--   
--   <pre>
--   Agent (AgentURI "CID:JQPUBLIC.part3.960129T083020.xyzMail@host3.com")
--   </pre>
--   
--   or
--   
--   <pre>
--   Agent (AgentVCard (VCard   [ CommonName "James Q. Helpful"
--                              , Email [EmailInternet] "j@spearheaddev.com"
--                              ]))
--   </pre>
Agent :: AgentData -> VCardProperty

-- | The organization to which an entity belongs followed by organizational
--   unit names. E.g.,
--   
--   <pre>
--   Organization ["Spearhead Development, L.L.C.", "Executive"]
--   </pre>
Organization :: [String] -> VCardProperty

-- | General categories to describe the vCard entity. E.g.,
--   
--   <pre>
--   Categories ["Internet", "Web Services", "Programmers"]
--   </pre>
Categories :: [String] -> VCardProperty

-- | A general note about the vCard entity. E.g.,
--   
--   <pre>
--   Note "Email is the absolute best contact method."
--   </pre>
Note :: String -> VCardProperty

-- | Specifies the identifier of the product that created this vCard. E.g.,
--   
--   <pre>
--   ProductId "-//ONLINE DIRECTORY//NONSGML Version 1//EN"
--   </pre>
--   
--   Please note well that, by RFC 2426 guidelines, "implementations SHOULD
--   use a method such as that specified for Formal Public Identifiers in
--   ISO 9070 to assure that the text value is unique," but this module
--   does not support that.
ProductId :: String -> VCardProperty

-- | Distinguishes the current revision from other renditions. E.g.,
--   
--   <pre>
--   Revision $ UTCTime (fromGregorian 2011 04 16) (secondsToDiffTime 0)
--   </pre>
Revision :: UTCTime -> VCardProperty

-- | Provides a locale- or national-language-specific formatting of the
--   formatted name based on the vCard entity's family or given name. E.g.,
--   
--   <pre>
--   SortString "Schade"
--   </pre>
SortString :: String -> VCardProperty

-- | Specifies information in a digital sound format to annotate some
--   aspect of the vCard. This is typically for the proper pronunciation of
--   the vCard entity's name. E.g.,
--   
--   <pre>
--   Sound  "BASIC"
--          (URI "CID:JOHNQPUBLIC.part8.19960229T080000.xyzMail@host1.com")
--   </pre>
Sound :: Maybe String -> Data -> VCardProperty

-- | Registered IANA format
sndType :: VCardProperty -> Maybe String
sndData :: VCardProperty -> Data

-- | A value to uniquely identify the vCard. Please note well that this
--   should be one of the registered IANA formats, but as of this time,
--   this module does not support listing the UID type. E.g.,
--   
--   <pre>
--   UID "19950401-080045-40000F192713-0052"
--   </pre>
UID :: String -> VCardProperty

-- | A website associated with the vCard entity. E.g.,
--   
--   <pre>
--   URL "http://spearheaddev.com/"
--   </pre>
URL :: String -> VCardProperty

-- | Describes the general intention of the vCard owner as to how
--   accessible the included information should be. E.g.,
--   
--   <pre>
--   Class ClassConfidential
--   </pre>
Class :: Class -> VCardProperty

-- | Specifies a public key or authentication certificate associated with
--   the vCard entity. E.g.,
--   
--   <pre>
--   Key "x509" (Binary "dGhpcyBjb3VsZCBiZSAKbXkgY2VydGlmaWNhdGUK")
--   </pre>
Key :: Maybe String -> Data -> VCardProperty

-- | Registered IANA format
keyType :: VCardProperty -> Maybe String
keyData :: VCardProperty -> Data

-- | Represents the various types or properties of an address.
data AddrType
AddrDomestic :: AddrType
AddrInternational :: AddrType
AddrPostal :: AddrType
AddrParcel :: AddrType
AddrHome :: AddrType
AddrWork :: AddrType
AddrPreferred :: AddrType

-- | Represents the various types or properties of a telephone number.
data TelType
TelHome :: TelType
TelMessage :: TelType
TelWork :: TelType
TelVoice :: TelType
TelFax :: TelType
TelCell :: TelType
TelVideo :: TelType
TelPager :: TelType
TelBBS :: TelType
TelModem :: TelType
TelCar :: TelType
TelISDN :: TelType
TelPCS :: TelType
TelPreferred :: TelType

-- | Represents the various types or properties of an email address.
data EmailType
EmailInternet :: EmailType
EmailX400 :: EmailType
EmailPreferred :: EmailType

-- | Represents the data associated with a vCard's Agent. This could be a
--   URI to such a vCard or the embedded contents of the vCard itself.
data AgentData
AgentURI :: String -> AgentData
AgentVCard :: VCard -> AgentData

-- | Represents the various types of data that can be included in a vCard.
data Data
URI :: String -> Data
Binary :: String -> Data

-- | Classifies the vCard's intended access level.
data Class
ClassPublic :: Class
ClassPrivate :: Class
ClassConfidential :: Class
instance Show Class
instance Show Data
instance Show AgentData
instance Show EmailType
instance Show TelType
instance Show AddrType
instance Show VCardProperty
instance Show IndividualNames
instance Show VCard
