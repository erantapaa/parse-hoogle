-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A Template Haskell helper for deriving Random instances
--   
@package random-derive
@version 0.1.0.0


-- | This module exposes a <a>deriveRandom</a> function which automatically
--   creates <a>Random</a> instances for data types instantiating both
--   <a>Enum</a> as well as <a>Bounded</a>.
--   
--   This is useful for getting random values (or sequences of random
--   values) of custom types, e.g.:
--   
--   <pre>
--   import System.Random (mkStdGen, randoms)
--   import System.Random.TH
--   
--   data Color = Red | Green | Blue deriving (Enum, Bounded)
--   
--   $(deriveRandom ''Color)
--   
--   -- Yields an infinite sequence of random colors given some initial seed.
--   randomColors :: Int -&gt; [Color]
--   randomColors seed = randoms (mkStdGen seed)
--   </pre>
module System.Random.TH

-- | The <a>deriveRandom</a> function derives a Random instance for the
--   given type.
deriveRandom :: Name -> Q [Dec]
