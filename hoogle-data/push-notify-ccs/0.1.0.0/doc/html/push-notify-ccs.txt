-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A server-side library for sending/receiving push notifications through CCS (Google Cloud Messaging).
--   
--   This library offers a simple abstraction for sending/receiving
--   notifications through CCS (XMPP - Google Cloud Messaging)
--   
--   For more information and test examples:
--   <a>http://gsoc2013cwithmobiledevices.blogspot.com.ar/</a>
--   
--   GitHub repository:
--   <a>https://github.com/MarcosPividori/GSoC-Communicating-with-mobile-devices</a>
@package push-notify-ccs
@version 0.1.0.0


-- | This library defines an API for communicating with Android powered
--   devices, sending Push Notifications through Cloud Connection Server
--   (GCM).
--   
--   The GCM Cloud Connection Server (CCS) is a connection server based on
--   XMPP.
--   
--   CCS allows 3rd-party app servers to communicate with Android devices
--   by establishing a persistent TCP connection with Google servers using
--   the XMPP protocol. This communication is asynchronous and
--   bidirectional.
--   
--   To establish a XMPP connection, this library uses Pontarius XMPP
--   library.
module Network.PushNotify.Ccs

-- | <a>startCCS</a> starts the CCS service, which means starting a worker
--   thread which maintains a connection with CCS servers.
startCCS :: GCMCcsConfig -> (RegId -> Value -> IO ()) -> IO CCSManager

-- | <a>closeCCS</a> stops the CCS service.
--   
--   This means stopping the worker thread which maintains a connection
--   with CCS servers.
closeCCS :: CCSManager -> IO ()

-- | <a>sendCCS</a> sends messages to a CCS Server.
--   
--   Every time you call this function, it will put the notification in a
--   channel waiting to be proceesed by the worker thread.
--   
--   It will block until the worker thread receives a response from CCS
--   server.
sendCCS :: CCSManager -> GCMmessage -> IO GCMresult

-- | <a>GCMCcsConfig</a> represents the main necessary information for
--   sending notifications through CCS.
data GCMCcsConfig
GCMCcsConfig :: Text -> Text -> RetrySettings -> GCMCcsConfig

-- | Api key provided by Google.
aPiKey :: GCMCcsConfig -> Text

-- | Sender ID provided by Google.
senderID :: GCMCcsConfig -> Text

-- | How to retry to connect to CCS servers.
ccsRetrySettings :: GCMCcsConfig -> RetrySettings

-- | <a>withCCS</a> creates a new manager, uses it in the provided
--   function, and then releases it.
--   
--   (The second argument is a callback function to be called each time a
--   message arrives from a device).
withCCS :: GCMCcsConfig -> (RegId -> Value -> IO ()) -> (CCSManager -> IO a) -> IO a

-- | <a>withCCS'</a> creates a new manager, uses it in the provided
--   function, and then releases it (ignores messages that arrive from a
--   device).
withCCS' :: GCMCcsConfig -> (CCSManager -> IO a) -> IO a

-- | Manager of a CCS Connection.
data CCSManager
