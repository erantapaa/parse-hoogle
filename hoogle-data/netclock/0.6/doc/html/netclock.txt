-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Netclock protocol
--   
--   Implementation of the Netclock protocol for sharing clocks in music
--   performance
@package netclock
@version 0.6

module Network.Netclock.Client
data BpsChange
BpsChange :: Double -> Double -> Double -> BpsChange
changeBps :: BpsChange -> Double
changeTime :: BpsChange -> Double
changeBeat :: BpsChange -> Double
scport :: Int
logicalTime :: BpsChange -> Double -> Double
waitBeat :: BpsChange -> Double -> IO ()
sched :: String -> String -> String -> Int -> IO () -> IO ()
clocked :: String -> String -> String -> Int -> (BpsChange -> Int -> IO ()) -> IO ()
updateBps :: MVar (BpsChange, [BpsChange]) -> Double -> IO (BpsChange)
nextChange :: (BpsChange, [BpsChange]) -> Double -> (BpsChange, [BpsChange])
bpsListen :: String -> String -> String -> MVar (BpsChange, [BpsChange]) -> IO ()
bpsListenLoop :: MVar (BpsChange, [BpsChange]) -> UDP -> IO b
addChange :: MVar (BpsChange, [BpsChange]) -> BpsChange -> IO ()
register :: String -> String -> String -> Int -> IO (UDP)
toFloat :: Datum -> Float
readChange :: UDP -> IO (BpsChange)
instance Ord BpsChange
instance Eq BpsChange
instance Show BpsChange
