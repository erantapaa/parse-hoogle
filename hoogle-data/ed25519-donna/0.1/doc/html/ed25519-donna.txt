-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Haskell bindings to ed25519-donna (Elliptical Curve Signature Scheme)
--   
@package ed25519-donna
@version 0.1

module Crypto.Ed25519.Pure

-- | The type of a Ed25519 private key.
data PrivateKey

-- | The type of a Ed25519 public key.
data PublicKey
newtype Signature
Sig :: ByteString -> Signature
generatePrivate :: CryptoRandomGen g => g -> Either GenError (PrivateKey, g)
generatePublic :: PrivateKey -> PublicKey
generateKeyPair :: CryptoRandomGen g => g -> Either GenError (PrivateKey, PublicKey, g)
sign :: ByteString -> PrivateKey -> PublicKey -> Signature

-- | Returns true if the signature is valid
valid :: ByteString -> PublicKey -> Signature -> Bool
importPublic :: ByteString -> Maybe PublicKey
importPrivate :: ByteString -> Maybe PrivateKey
exportPublic :: PublicKey -> ByteString
exportPrivate :: PrivateKey -> ByteString
instance Show PrivateKey
instance Show PublicKey
instance Show Signature

module Crypto.Ed25519.Exceptions

-- | The type of a Ed25519 private key.
data PrivateKey

-- | The type of a Ed25519 public key.
data PublicKey
newtype Signature
Sig :: ByteString -> Signature

-- | Randomly generate an Ed25519 private key.
generatePrivate :: CryptoRandomGen g => g -> (PrivateKey, g)

-- | Randomly generate a curve25519 public key.
generatePublic :: PrivateKey -> PublicKey
generateKeyPair :: CryptoRandomGen g => g -> (PrivateKey, PublicKey, g)
sign :: ByteString -> PrivateKey -> PublicKey -> Signature
valid :: ByteString -> PublicKey -> Signature -> Bool
importPublic :: ByteString -> Maybe PublicKey
importPrivate :: ByteString -> Maybe PrivateKey
exportPublic :: PublicKey -> ByteString
exportPrivate :: PrivateKey -> ByteString

module Crypto.Ed25519
