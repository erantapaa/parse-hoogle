-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Watch some files; Rerun a command
--   
--   Commando comes in two forms - A library and an executable.
--   
--   <ul>
--   <li>Executable</li>
--   </ul>
--   
--   Watch a directory, and when changes occur, run a command.
--   
--   From the commandline the program is used like so:
--   
--   <pre>
--   commando -c echo
--   </pre>
--   
--   This will watch the current directory, and when an event occurs, pass
--   the serialized representation of the event as an argument to
--   <a>echo</a>.
--   
--   <ul>
--   <li>Library</li>
--   </ul>
--   
--   To use the library just
--   
--   <pre>
--   import System.Commando
--   </pre>
--   
--   See the <a>System.Commando</a> module documentation for more details.
--   
--   The Commando executable module is a good example of using Commando as
--   a library.
@package Commando
@version 1.0.0.2


-- | A library providing an interface to generate a lazy stream of command
--   results from events occurring in a directory.
module System.Commando

-- | Options used to configure the behavior of Commando
data Options
Options :: String -> Bool -> Bool -> Bool -> Bool -> (Event -> String) -> FilePath -> Options

-- | The commando to run
command :: Options -> String

-- | Silence any help
quiet :: Options -> Bool

-- | Command accepts input as an argument
consumer :: Options -> Bool

-- | Command accepts input on STDIN
stdin :: Options -> Bool

-- | Command remains running and new events are sent to its STDIN
persist :: Options -> Bool

-- | Display show function used to translate events to strings
display :: Options -> Event -> String

-- | The directory listened to - Default is the current directory.
directory :: Options -> FilePath

-- | An optparse-applicative parser for command-line options.
options :: Parser Options

-- | The main listening loop.
commando :: Options -> IO [String]
instance Default Options
