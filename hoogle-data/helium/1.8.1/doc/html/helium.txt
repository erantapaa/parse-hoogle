-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | The Helium Compiler.
--   
@package helium
@version 1.8.1


module Helium.StaticAnalysis.Miscellaneous.TypesToAlignedDocs
qualifiedTypesToAlignedDocs :: [QType] -> [Doc]
typesToAlignedDocs :: Tps -> [Doc]


module Helium.StaticAnalysis.Heuristics.TieBreakerHeuristics
class HasTrustFactor a
trustFactor :: HasTrustFactor a => a -> Float
avoidTrustedConstraints :: HasTrustFactor info => Heuristic info
class HasDirection a
isTopDown :: HasDirection a => a -> Bool
avoidFolkloreConstraints :: HasDirection info => Heuristic info
typeVariableInvolved :: HasTwoTypes info => Heuristic info
changeTypeVariables :: Int -> Tp -> (Int, Tp)


module Helium.Utils.OneLiner
data OneLineTree
OneLineNode :: [OneLineTree] -> OneLineTree
OneLineText :: String -> OneLineTree
showOneLine :: Int -> OneLineTree -> String


-- | basic constraints that are supplied by the Top framework). Some
--   constraints are lifted to work on finite maps as well.
module Helium.StaticAnalysis.Miscellaneous.TypeConstraints
type TypeConstraints info = [TypeConstraint info]
data TypeConstraint info
TC1 :: (EqualityConstraint info) -> TypeConstraint info
TC2 :: (ExtraConstraint info) -> TypeConstraint info
TC3 :: (PolymorphismConstraint info) -> TypeConstraint info
TCOper :: String -> (forall m. HasSubst m info => m ()) -> TypeConstraint info
polySubst :: Map Int (Scheme Predicates) -> TypeConstraint info -> TypeConstraint info
spreadFunction :: TypeConstraint info -> Maybe Int
spreadFromType :: Tp -> Maybe Int
lift :: Ord k => (a1 -> t1 -> t2 -> a) -> Map k a1 -> Map k [(t, t1)] -> (t -> t2) -> ([a], Map k [(t, t1)])
(.==.) :: Show info => Tp -> Tp -> info -> TypeConstraint info
(.===.) :: (Show info, Ord key) => Map key Tp -> Map key [(key, Tp)] -> (key -> info) -> ([TypeConstraint info], Map key [(key, Tp)])
(.::.) :: Show info => Tp -> TpScheme -> info -> TypeConstraint info
(.:::.) :: (Show info, Ord key) => Map key TpScheme -> Map key [(key, Tp)] -> (key -> info) -> ([TypeConstraint info], Map key [(key, Tp)])
(!::!) :: Tp -> TpScheme -> Tps -> info -> TypeConstraint info
(!:::!) :: (Show info, Ord key) => Map key TpScheme -> Map key Tp -> Tps -> (Tps -> key -> key -> info) -> ([TypeConstraint info], Map key Tp)
(.<=.) :: Show info => Tp -> Sigma Predicates -> info -> TypeConstraint info
(.<==.) :: (Show info, Ord key) => Map key (Sigma Predicates) -> Map key [(key, Tp)] -> (key -> info) -> ([TypeConstraint info], Map key [(key, Tp)])
(!<=!) :: Show info => Tps -> Tp -> Tp -> info -> TypeConstraint info
(!<==!) :: (Show info, Ord key) => Tps -> Map key Tp -> Map key [(key, Tp)] -> (key -> info) -> ([TypeConstraint info], Map key [(key, Tp)])
genConstraints :: Tps -> (key -> info) -> [(Int, (key, Tp))] -> TypeConstraints info
predicate :: Predicate -> info -> TypeConstraint info
instance Substitutable (TypeConstraint info)
instance Show info => Show (TypeConstraint info)
instance (HasBasic m info, HasTI m info, HasSubst m info, HasQual m info, PolyTypeConstraintInfo info) => Solvable (TypeConstraint info) m

module Helium.Utils.Texts
data Language
English :: Language
Dutch :: Language
language :: Language
data Arrow a b
(:->) :: a -> b -> Arrow a b
select :: Language -> [Arrow Language msg] -> msg
warning :: String
hint :: String
parserSyntaxError :: String
parserOr :: String
parserUnknown :: String
parserExpecting :: String
parserUnexpected :: String
parserEndOfInput :: String
parserSingleDigitPriority :: String
parserTypeClass :: String
parserTypeConstructor :: String
parserTypeVariable :: String
parserModuleName :: String
parserVariable :: String
parserConstructor :: String
parserConstructorOperator :: String
parserOperator :: String
parserCharacterLiteral :: String
parserStringLiteral :: String
parserIntegerLiteral :: String
parserFloatLiteral :: String
parserKeyword :: String
parserInsertedLBrace :: String
parserEndOfFile :: String
parserNextInBlock :: String
parserEndOfBlock :: String
parserExpression :: String
parserPattern :: String
parserType :: String
parserLiteral :: String
parserNumericLiteral :: String
parserImportDeclaration :: String
parserDeclaration :: String
lexerUnterminatedComment :: String
lexerMissingExponentDigits :: String
lexerUnexpectedChar :: Char -> String
lexerIllegalEscapeInChar :: String
lexerEmptyChar :: String
lexerIllegalCharInChar :: String
lexerNonTerminatedChar :: String
lexerInfixHint :: String -> String
lexerEOFInChar :: String
lexerEOFInString :: String
lexerIllegalEscapeInString :: String
lexerNewLineInString :: String
lexerIllegalCharInString :: String
lexerTooManyClose :: Show a => a -> String
lexerUnexpectedClose :: (Show a, Show b) => a -> b -> [String]
lexerStillOpenAtEOF :: [String] -> String
lexerCorrectFloats :: String
lexerCorrectChars :: String
lexerCorrectStrings :: String
lexerTabCharacter :: [String]
lexerLooksLikeFloatNoFraction :: String -> [String]
lexerLooksLikeFloatNoDigits :: String -> [String]
lexerNestedComment :: [String]
lexerCommentOperator :: [String]
commasAnd :: [String] -> String
kommasEn :: [String] -> String
instance Eq Language

module Helium.StaticAnalysis.Directives.TS_CoreSyntax
type Core_TypingStrategies = [Core_TypingStrategy]
data Core_Judgement
Judgement :: (String) -> (Tp) -> Core_Judgement
type Core_Judgements = [Core_Judgement]
data Core_TypeRule
TypeRule :: (Core_Judgements) -> (Core_Judgement) -> Core_TypeRule
data Core_TypingStrategy
Siblings :: (([String])) -> Core_TypingStrategy
TypingStrategy :: (([(String, Tp)])) -> (Core_TypeRule) -> (Core_UserStatements) -> Core_TypingStrategy
data Core_UserStatement
Equal :: (Tp) -> (Tp) -> (String) -> Core_UserStatement
Pred :: (String) -> (Tp) -> (String) -> Core_UserStatement
MetaVariableConstraints :: (String) -> Core_UserStatement
CorePhase :: (Int) -> Core_UserStatement
type Core_UserStatements = [Core_UserStatement]
instance Read Core_Judgement
instance Show Core_Judgement
instance Read Core_TypeRule
instance Show Core_TypeRule
instance Read Core_UserStatement
instance Show Core_UserStatement
instance Read Core_TypingStrategy
instance Show Core_TypingStrategy


module Helium.Parser.LexerToken
type Token = (SourcePos, Lexeme)
data Lexeme
LexChar :: String -> Lexeme
LexString :: String -> Lexeme
LexInt :: String -> Lexeme
LexFloat :: String -> Lexeme
LexVar :: String -> Lexeme
LexVarSym :: String -> Lexeme
LexCon :: String -> Lexeme
LexConSym :: String -> Lexeme
LexKeyword :: String -> Lexeme
LexResVarSym :: String -> Lexeme
LexResConSym :: String -> Lexeme
LexSpecial :: Char -> Lexeme
LexFeedback :: String -> Lexeme
LexCaseFeedback :: String -> Lexeme
LexMustUse :: Lexeme
LexHole :: Lexeme
LexInsertedOpenBrace :: Lexeme
LexInsertedCloseBrace :: Lexeme
LexInsertedSemicolon :: Lexeme
LexEOF :: Lexeme
lexemeLength :: Lexeme -> Int
instance Eq Lexeme
instance Show Lexeme


module Helium.Parser.LayoutRule
layout :: [Token] -> [Token]
instance Eq Context
instance Show Context

module Helium.Main.Version
version :: String


module Helium.Main.Args
data Option
BuildOne :: Option
BuildAll :: Option
DumpInformationForThisModule :: Option
DumpInformationForAllModules :: Option
DisableLogging :: Option
EnableLogging :: Option
Alert :: String -> Option
Overloading :: Option
NoOverloading :: Option
LvmPath :: String -> Option
Verbose :: Option
NoWarnings :: Option
MoreOptions :: Option
Information :: String -> Option
StopAfterParser :: Option
StopAfterStaticAnalysis :: Option
StopAfterTypeInferencing :: Option
StopAfterDesugar :: Option
DumpTokens :: Option
DumpUHA :: Option
DumpCore :: Option
DumpCoreToFile :: Option
DebugLogger :: Option
Host :: String -> Option
Port :: Int -> Option
DumpTypeDebug :: Option
AlgorithmW :: Option
AlgorithmM :: Option
DisableDirectives :: Option
NoRepairHeuristics :: Option
HFullQualification :: Option
ExperimentalOptions :: Option
KindInferencing :: Option
SignatureWarnings :: Option
RightToLeft :: Option
NoSpreading :: Option
TreeWalkTopDown :: Option
TreeWalkBottomUp :: Option
TreeWalkInorderTopFirstPre :: Option
TreeWalkInorderTopLastPre :: Option
TreeWalkInorderTopFirstPost :: Option
TreeWalkInorderTopLastPost :: Option
SolverSimple :: Option
SolverGreedy :: Option
SolverTypeGraph :: Option
SolverCombination :: Option
SolverChunks :: Option
UnifierHeuristics :: Option
SelectConstraintNumber :: Int -> Option
NoOverloadingTypeCheck :: Option
NoPrelude :: Option
UseTutor :: Option
processHeliumArgs :: [String] -> IO ([Option], Maybe String)
processRunHeliumArgs :: [String] -> IO ([Option], Maybe String)
processTexthintArgs :: [String] -> IO ([Option], Maybe String)
lvmPathFromOptions :: [Option] -> Maybe String
loggerDEFAULTHOST :: String
simplifyOptions :: [Option] -> [Option]
argsToOptions :: [String] -> [Option]
loggerDEFAULTPORT :: Int
hostFromOptions :: [Option] -> Maybe String
portFromOptions :: [Option] -> Maybe Int
overloadingFromOptions :: [Option] -> Bool
hasAlertOption :: [Option] -> Bool
instance Eq Option
instance Show Option


module Helium.Utils.Logger
logger :: String -> Maybe ([String], String) -> [Option] -> IO ()
logInternalError :: Maybe ([String], String) -> IO ()


module Helium.CodeGeneration.CoreToLvm
coreToLvm :: [Char] -> CoreModule -> IO ()


module Helium.CodeGeneration.CoreUtils
custom :: String -> String -> Custom
customStrategy :: String -> Decl a
stringToCore :: String -> Expr
coreList :: [Expr] -> Expr
let_ :: Id -> Expr -> Expr -> Expr
if_ :: Expr -> Expr -> Expr -> Expr
app_ :: Expr -> Expr -> Expr
letrec_ :: [CoreDecl] -> Expr -> Expr
cons :: Expr -> Expr -> Expr
nil :: Expr
var :: String -> Expr
decl :: Bool -> String -> Expr -> CoreDecl
float :: String -> Expr
packedString :: String -> Expr


-- | Some Prelude-like functions
module Helium.Utils.Utils

-- | Concrete representation of holes
hole :: String
ltrim :: String -> String
rtrim :: String -> String
trim :: String -> String
commaList :: [String] -> String
fst3 :: (a, b, c) -> a
snd3 :: (a, b, c) -> b
thd3 :: (a, b, c) -> c
fst4 :: (a, b, c, d) -> a
snd4 :: (a, b, c, d) -> b
thd4 :: (a, b, c, d) -> c
fth4 :: (a, b, c, d) -> d
throw :: String -> IO a
groupAll :: Ord a => [a] -> [[a]]
groupAllBy :: Ord a => (a -> a -> Bool) -> [a] -> [[a]]
indexOf :: Eq a => a -> [a] -> Maybe Int
lastIndexOf :: Eq a => a -> [a] -> Maybe Int
combinePathAndFile :: String -> String -> String
splitFilePath :: String -> (String, String, String)
refToCurrentFileName :: IORef String
refToCurrentImported :: IORef [String]
internalError :: String -> String -> String -> a
maxInt :: Integer
minInt :: Integer


-- | At each node, extra information (attributes) can be stored.
module Helium.StaticAnalysis.Miscellaneous.DoublyLinkedTree
data DoublyLinkedTree attributes
DoublyLinkedTree :: Maybe (DoublyLinkedTree attributes) -> attributes -> [DoublyLinkedTree attributes] -> DoublyLinkedTree attributes
parent :: DoublyLinkedTree attributes -> Maybe (DoublyLinkedTree attributes)
attribute :: DoublyLinkedTree attributes -> attributes
children :: DoublyLinkedTree attributes -> [DoublyLinkedTree attributes]
root :: a -> [DoublyLinkedTree a] -> DoublyLinkedTree a
node :: DoublyLinkedTree a -> a -> [DoublyLinkedTree a] -> DoublyLinkedTree a
selectChild :: Int -> DoublyLinkedTree a -> DoublyLinkedTree a
selectRoot :: DoublyLinkedTree a -> DoublyLinkedTree a


-- | Check whether identifiers look alike. Identifiers are alike if: - they
--   are the same when compared insensitive w.r.t. case - they differ in
--   one character (filter and fi1ter) - one has a character more than the
--   other (concatMap and concattMap) - two characters are swapped (filtre
--   and filter)
module Helium.Utils.Similarity
similar :: String -> String -> Bool

module Helium.Syntax.UHA_Syntax
data Alternative
Alternative_Hole :: (Range) -> (Integer) -> Alternative
Alternative_Feedback :: (Range) -> (String) -> (Alternative) -> Alternative
Alternative_Alternative :: (Range) -> (Pattern) -> (RightHandSide) -> Alternative
Alternative_Empty :: (Range) -> Alternative
type Alternatives = [Alternative]
data AnnotatedType
AnnotatedType_AnnotatedType :: (Range) -> (Bool) -> (Type) -> AnnotatedType
type AnnotatedTypes = [AnnotatedType]
data Body
Body_Hole :: (Range) -> (Integer) -> Body
Body_Body :: (Range) -> (ImportDeclarations) -> (Declarations) -> Body
data Constructor
Constructor_Constructor :: (Range) -> (Name) -> (AnnotatedTypes) -> Constructor
Constructor_Infix :: (Range) -> (AnnotatedType) -> (Name) -> (AnnotatedType) -> Constructor
Constructor_Record :: (Range) -> (Name) -> (FieldDeclarations) -> Constructor
type Constructors = [Constructor]
data ContextItem
ContextItem_ContextItem :: (Range) -> (Name) -> (Types) -> ContextItem
type ContextItems = [ContextItem]
data Declaration
Declaration_Hole :: (Range) -> (Integer) -> Declaration
Declaration_Type :: (Range) -> (SimpleType) -> (Type) -> Declaration
Declaration_Data :: (Range) -> (ContextItems) -> (SimpleType) -> (Constructors) -> (Names) -> Declaration
Declaration_Newtype :: (Range) -> (ContextItems) -> (SimpleType) -> (Constructor) -> (Names) -> Declaration
Declaration_Class :: (Range) -> (ContextItems) -> (SimpleType) -> (MaybeDeclarations) -> Declaration
Declaration_Instance :: (Range) -> (ContextItems) -> (Name) -> (Types) -> (MaybeDeclarations) -> Declaration
Declaration_Default :: (Range) -> (Types) -> Declaration
Declaration_FunctionBindings :: (Range) -> (FunctionBindings) -> Declaration
Declaration_PatternBinding :: (Range) -> (Pattern) -> (RightHandSide) -> Declaration
Declaration_TypeSignature :: (Range) -> (Names) -> (Type) -> Declaration
Declaration_Fixity :: (Range) -> (Fixity) -> (MaybeInt) -> (Names) -> Declaration
Declaration_Empty :: (Range) -> Declaration
type Declarations = [Declaration]
data Export
Export_Variable :: (Range) -> (Name) -> Export
Export_TypeOrClass :: (Range) -> (Name) -> (MaybeNames) -> Export
Export_TypeOrClassComplete :: (Range) -> (Name) -> Export
Export_Module :: (Range) -> (Name) -> Export
type Exports = [Export]
data Expression
Expression_Hole :: (Range) -> (Integer) -> Expression
Expression_Feedback :: (Range) -> (String) -> (Expression) -> Expression
Expression_MustUse :: (Range) -> (Expression) -> Expression
Expression_Literal :: (Range) -> (Literal) -> Expression
Expression_Variable :: (Range) -> (Name) -> Expression
Expression_Constructor :: (Range) -> (Name) -> Expression
Expression_Parenthesized :: (Range) -> (Expression) -> Expression
Expression_NormalApplication :: (Range) -> (Expression) -> (Expressions) -> Expression
Expression_InfixApplication :: (Range) -> (MaybeExpression) -> (Expression) -> (MaybeExpression) -> Expression
Expression_If :: (Range) -> (Expression) -> (Expression) -> (Expression) -> Expression
Expression_Lambda :: (Range) -> (Patterns) -> (Expression) -> Expression
Expression_Case :: (Range) -> (Expression) -> (Alternatives) -> Expression
Expression_Let :: (Range) -> (Declarations) -> (Expression) -> Expression
Expression_Do :: (Range) -> (Statements) -> Expression
Expression_List :: (Range) -> (Expressions) -> Expression
Expression_Tuple :: (Range) -> (Expressions) -> Expression
Expression_Comprehension :: (Range) -> (Expression) -> (Qualifiers) -> Expression
Expression_Typed :: (Range) -> (Expression) -> (Type) -> Expression
Expression_RecordConstruction :: (Range) -> (Name) -> (RecordExpressionBindings) -> Expression
Expression_RecordUpdate :: (Range) -> (Expression) -> (RecordExpressionBindings) -> Expression
Expression_Enum :: (Range) -> (Expression) -> (MaybeExpression) -> (MaybeExpression) -> Expression
Expression_Negate :: (Range) -> (Expression) -> Expression
Expression_NegateFloat :: (Range) -> (Expression) -> Expression
type Expressions = [Expression]
data FieldDeclaration
FieldDeclaration_FieldDeclaration :: (Range) -> (Names) -> (AnnotatedType) -> FieldDeclaration
type FieldDeclarations = [FieldDeclaration]
data Fixity
Fixity_Infixl :: (Range) -> Fixity
Fixity_Infixr :: (Range) -> Fixity
Fixity_Infix :: (Range) -> Fixity
data FunctionBinding
FunctionBinding_Hole :: (Range) -> (Integer) -> FunctionBinding
FunctionBinding_Feedback :: (Range) -> (String) -> (FunctionBinding) -> FunctionBinding
FunctionBinding_FunctionBinding :: (Range) -> (LeftHandSide) -> (RightHandSide) -> FunctionBinding
type FunctionBindings = [FunctionBinding]
data GuardedExpression
GuardedExpression_GuardedExpression :: (Range) -> (Expression) -> (Expression) -> GuardedExpression
type GuardedExpressions = [GuardedExpression]
data Import
Import_Variable :: (Range) -> (Name) -> Import
Import_TypeOrClass :: (Range) -> (Name) -> (MaybeNames) -> Import
Import_TypeOrClassComplete :: (Range) -> (Name) -> Import
data ImportDeclaration
ImportDeclaration_Import :: (Range) -> (Bool) -> (Name) -> (MaybeName) -> (MaybeImportSpecification) -> ImportDeclaration
ImportDeclaration_Empty :: (Range) -> ImportDeclaration
type ImportDeclarations = [ImportDeclaration]
data ImportSpecification
ImportSpecification_Import :: (Range) -> (Bool) -> (Imports) -> ImportSpecification
type Imports = [Import]
data LeftHandSide
LeftHandSide_Function :: (Range) -> (Name) -> (Patterns) -> LeftHandSide
LeftHandSide_Infix :: (Range) -> (Pattern) -> (Name) -> (Pattern) -> LeftHandSide
LeftHandSide_Parenthesized :: (Range) -> (LeftHandSide) -> (Patterns) -> LeftHandSide
data Literal
Literal_Int :: (Range) -> (String) -> Literal
Literal_Char :: (Range) -> (String) -> Literal
Literal_Float :: (Range) -> (String) -> Literal
Literal_String :: (Range) -> (String) -> Literal
data MaybeDeclarations
MaybeDeclarations_Nothing :: MaybeDeclarations
MaybeDeclarations_Just :: (Declarations) -> MaybeDeclarations
data MaybeExports
MaybeExports_Nothing :: MaybeExports
MaybeExports_Just :: (Exports) -> MaybeExports
data MaybeExpression
MaybeExpression_Nothing :: MaybeExpression
MaybeExpression_Just :: (Expression) -> MaybeExpression
data MaybeImportSpecification
MaybeImportSpecification_Nothing :: MaybeImportSpecification
MaybeImportSpecification_Just :: (ImportSpecification) -> MaybeImportSpecification
data MaybeInt
MaybeInt_Nothing :: MaybeInt
MaybeInt_Just :: (Int) -> MaybeInt
data MaybeName
MaybeName_Nothing :: MaybeName
MaybeName_Just :: (Name) -> MaybeName
data MaybeNames
MaybeNames_Nothing :: MaybeNames
MaybeNames_Just :: (Names) -> MaybeNames
data Module
Module_Module :: (Range) -> (MaybeName) -> (MaybeExports) -> (Body) -> Module
data Name
Name_Identifier :: (Range) -> (Strings) -> (String) -> Name
Name_Operator :: (Range) -> (Strings) -> (String) -> Name
Name_Special :: (Range) -> (Strings) -> (String) -> Name
type Names = [Name]
data Pattern
Pattern_Hole :: (Range) -> (Integer) -> Pattern
Pattern_Literal :: (Range) -> (Literal) -> Pattern
Pattern_Variable :: (Range) -> (Name) -> Pattern
Pattern_Constructor :: (Range) -> (Name) -> (Patterns) -> Pattern
Pattern_Parenthesized :: (Range) -> (Pattern) -> Pattern
Pattern_InfixConstructor :: (Range) -> (Pattern) -> (Name) -> (Pattern) -> Pattern
Pattern_List :: (Range) -> (Patterns) -> Pattern
Pattern_Tuple :: (Range) -> (Patterns) -> Pattern
Pattern_Record :: (Range) -> (Name) -> (RecordPatternBindings) -> Pattern
Pattern_Negate :: (Range) -> (Literal) -> Pattern
Pattern_As :: (Range) -> (Name) -> (Pattern) -> Pattern
Pattern_Wildcard :: (Range) -> Pattern
Pattern_Irrefutable :: (Range) -> (Pattern) -> Pattern
Pattern_Successor :: (Range) -> (Name) -> (Literal) -> Pattern
Pattern_NegateFloat :: (Range) -> (Literal) -> Pattern
type Patterns = [Pattern]
data Position
Position_Position :: (String) -> (Int) -> (Int) -> Position
Position_Unknown :: Position
data Qualifier
Qualifier_Guard :: (Range) -> (Expression) -> Qualifier
Qualifier_Let :: (Range) -> (Declarations) -> Qualifier
Qualifier_Generator :: (Range) -> (Pattern) -> (Expression) -> Qualifier
Qualifier_Empty :: (Range) -> Qualifier
type Qualifiers = [Qualifier]
data Range
Range_Range :: (Position) -> (Position) -> Range
data RecordExpressionBinding
RecordExpressionBinding_RecordExpressionBinding :: (Range) -> (Name) -> (Expression) -> RecordExpressionBinding
type RecordExpressionBindings = [RecordExpressionBinding]
data RecordPatternBinding
RecordPatternBinding_RecordPatternBinding :: (Range) -> (Name) -> (Pattern) -> RecordPatternBinding
type RecordPatternBindings = [RecordPatternBinding]
data RightHandSide
RightHandSide_Expression :: (Range) -> (Expression) -> (MaybeDeclarations) -> RightHandSide
RightHandSide_Guarded :: (Range) -> (GuardedExpressions) -> (MaybeDeclarations) -> RightHandSide
data SimpleType
SimpleType_SimpleType :: (Range) -> (Name) -> (Names) -> SimpleType
data Statement
Statement_Expression :: (Range) -> (Expression) -> Statement
Statement_Let :: (Range) -> (Declarations) -> Statement
Statement_Generator :: (Range) -> (Pattern) -> (Expression) -> Statement
Statement_Empty :: (Range) -> Statement
type Statements = [Statement]
type Strings = [(String)]
data Type
Type_Application :: (Range) -> (Bool) -> (Type) -> (Types) -> Type
Type_Variable :: (Range) -> (Name) -> Type
Type_Constructor :: (Range) -> (Name) -> Type
Type_Qualified :: (Range) -> (ContextItems) -> (Type) -> Type
Type_Forall :: (Range) -> (Names) -> (Type) -> Type
Type_Exists :: (Range) -> (Names) -> (Type) -> Type
Type_Parenthesized :: (Range) -> (Type) -> Type
type Types = [Type]


module Helium.Syntax.UHA_Range
getNameRange :: Name -> Range
setNameRange :: Name -> Range -> Name
rangeFromImportDeclaration :: ImportDeclaration -> Range
mergeRanges :: Range -> Range -> Range
noRange :: Range
emptyRange :: Range
makeImportRange :: Id -> Id -> Range
isImportRange :: Range -> Bool
isImportName :: Name -> Bool
modulesFromImportRange :: Range -> Maybe (String, String)
getRangeStart :: Range -> Position
getRangeEnd :: Range -> Position
getStatementRange :: Statement -> Range
getPatRange :: Pattern -> Range
getExprRange :: Expression -> Range
getRHSRange :: RightHandSide -> Range
getMaybeExprRange :: MaybeExpression -> Range
getLitRange :: Literal -> Range
getQualifierRange :: Qualifier -> Range
getAlternativeRange :: Alternative -> Range
getLHSRange :: LeftHandSide -> Range
getFBRange :: FunctionBinding -> Range
getDeclarationRange :: Declaration -> Range
getBodyRange :: Body -> Range
getTypeRange :: Type -> Range
getGuardedExprRange :: GuardedExpression -> Range
getRHSRangeSpecial :: RightHandSide -> Range
showRanges :: [Range] -> String
showRange :: Range -> String
showFullRange :: Range -> String
showPosition :: Position -> String
sortRanges :: [Range] -> [Range]
moduleFromPosition :: Position -> String
instance Ord Position
instance Eq Position
instance Ord Range
instance Eq Range
instance Show Range


module Helium.Syntax.UHA_Utils
newtype NameWithRange
NameWithRange :: Name -> NameWithRange
nameWithRangeToName :: NameWithRange -> Name
getNameName :: Name -> String
getHolmesName :: String -> Name -> String
getFrom :: Range -> [Char] -> [Char]
getModuleName :: Module -> String
idFromName :: Name -> Id
nameFromId :: Id -> Name
nameFromString :: String -> Name
isOperatorName :: Name -> Bool
isConstructor :: Name -> Bool
isIdentifierName :: Name -> Bool
showNameAsOperator :: Name -> String
showNameAsVariable :: Name -> String
stringFromImportDeclaration :: ImportDeclaration -> String
intUnaryMinusName :: Name
enumFromThenToName :: Name
enumFromThenName :: Name
enumFromToName :: Name
enumFromName :: Name
floatUnaryMinusName :: Name
patternVars :: Pattern -> [Name]
instance Ord NameWithRange
instance Eq NameWithRange
instance Show NameWithRange
instance Show Name
instance Ord Name
instance Eq Name


module Helium.ModuleSystem.DictionaryEnvironment
data DictionaryEnvironment
data DictionaryTree
ByPredicate :: Predicate -> DictionaryTree
ByInstance :: String -> String -> [DictionaryTree] -> DictionaryTree
BySuperClass :: String -> String -> DictionaryTree -> DictionaryTree
emptyDictionaryEnvironment :: DictionaryEnvironment
addForDeclaration :: Name -> Predicates -> DictionaryEnvironment -> DictionaryEnvironment
addForVariable :: Name -> [DictionaryTree] -> DictionaryEnvironment -> DictionaryEnvironment
getPredicateForDecl :: Name -> DictionaryEnvironment -> Predicates
getDictionaryTrees :: Name -> DictionaryEnvironment -> [DictionaryTree]
makeDictionaryTree :: ClassEnvironment -> Predicates -> Predicate -> Maybe DictionaryTree
makeDictionaryTrees :: ClassEnvironment -> Predicates -> Predicates -> Maybe [DictionaryTree]
instance Show DictionaryTree
instance Show DictionaryEnvironment


module Helium.StaticAnalysis.Miscellaneous.TypeConversion
namesInTypes :: Types -> Names
namesInType :: Type -> Names
makeNameMap :: Names -> [(Name, Tp)]
makeTpSchemeFromType' :: Type -> (TpScheme, [(Int, Name)])
makeTpSchemeFromType :: Type -> TpScheme
predicatesFromContext :: [(Name, Tp)] -> Type -> Predicates
makeTpFromType :: [(Name, Tp)] -> Type -> Tp
convertFromSimpleTypeAndTypes :: SimpleType -> Types -> (Tp, Tps)
makeTypeFromTp :: Tp -> Type


module Helium.CodeGeneration.PatternMatch
patternToCore :: (Id, Pattern) -> Expr -> Expr
patternsToCore :: [(Id, Pattern)] -> Expr -> Expr
nextClauseId :: Id
freshIds :: String -> Int -> [Id]


module Helium.CodeGeneration.DerivingShow
dataShowFunction :: Declaration -> CoreDecl
typeShowFunction :: Declaration -> Decl Expr
dataDictionary :: Declaration -> CoreDecl
nameOfShowFunction :: Name -> Name
typeOfShowFunction :: Name -> Names -> TpScheme
showFunctionOfType :: Bool -> Type -> Expr


module Helium.CodeGeneration.DerivingEq
dataDictionary :: Declaration -> CoreDecl


module Helium.StaticAnalysis.Messages.Messages
type Message = [MessageLine]
data MessageLine
MessageOneLiner :: MessageBlock -> MessageLine
MessageTable :: [(Bool, MessageBlock, MessageBlock)] -> MessageLine
MessageHints :: String -> MessageBlocks -> MessageLine
type MessageBlocks = [MessageBlock]
data MessageBlock
MessageString :: String -> MessageBlock
MessageRange :: Range -> MessageBlock
MessageType :: TpScheme -> MessageBlock
MessagePredicate :: Predicate -> MessageBlock
MessageOneLineTree :: OneLineTree -> MessageBlock
MessageCompose :: MessageBlocks -> MessageBlock
class HasMessage a where getRanges _ = []
getRanges :: HasMessage a => a -> [Range]
getMessage :: HasMessage a => a -> Message
(<:>) :: String -> MessageBlock -> (Bool, MessageBlock, MessageBlock)
(>:>) :: String -> MessageBlock -> (Bool, MessageBlock, MessageBlock)
data Entity
TypeSignature :: Entity
TypeVariable :: Entity
TypeConstructor :: Entity
Definition :: Entity
Constructor :: Entity
Variable :: Entity
Import :: Entity
ExportVariable :: Entity
ExportModule :: Entity
ExportConstructor :: Entity
ExportTypeConstructor :: Entity
Fixity :: Entity
sortMessages :: HasMessage a => [a] -> [a]
sortNamesByRange :: Names -> Names
ordinal :: Bool -> Int -> String
showNumber :: Int -> String
prettyOrList :: [String] -> String
prettyAndList :: [String] -> String
prettyNumberOfParameters :: Int -> String
capitalize :: String -> String
findSimilar :: Name -> Names -> Names
instance Eq Entity
instance Show Entity
instance Substitutable MessageBlock
instance Substitutable MessageLine
instance (HasMessage a, HasMessage b) => HasMessage (Either a b)


module Helium.StaticAnalysis.Messages.StaticErrors
type Errors = [Error]
data Error
NoFunDef :: Entity -> Name -> Names -> Error
Undefined :: Entity -> Name -> Names -> [String] -> Error
Duplicated :: Entity -> Names -> Error
LastStatementNotExpr :: Range -> Error
WrongFileName :: String -> String -> Range -> Error
TypeVarApplication :: Name -> Error
ArityMismatch :: Entity -> Name -> Int -> Int -> Error
DefArityMismatch :: Name -> (Maybe Int) -> Range -> Error
RecursiveTypeSynonyms :: Names -> Error
PatternDefinesNoVars :: Range -> Error
IntLiteralTooBig :: Range -> String -> Error
OverloadingDisabled :: Range -> Error
OverloadedRestrPat :: Name -> Error
WrongOverloadingFlag :: Bool -> Error
AmbiguousContext :: Name -> Error
UnknownClass :: Name -> Error
NonDerivableClass :: Name -> Error
CannotDerive :: Name -> Tps -> Error
TupleTooBig :: Range -> Error
sensiblySimilar :: Name -> Names -> [Name]
showError :: Error -> (MessageBlock, MessageBlocks)
makeUndefined :: Entity -> Names -> Names -> [Error]
makeDuplicated :: Entity -> [Names] -> [Error]
undefinedConstructorInExpr :: Name -> Names -> Names -> Error
undefinedConstructorInPat :: Bool -> Name -> Names -> Names -> Error
makeNoFunDef :: Entity -> Names -> Names -> [Error]
errorsLogCode :: Errors -> String
errorLogCode :: Error -> String
instance HasMessage Error


module Helium.StaticAnalysis.Messages.HeliumMessages
lineLength :: Int
tableWidthLeft :: Int
tablePrefix :: String
tableSeparator :: String
splitStringMargin :: Int
tableWidthRight :: Int
sortAndShowMessages :: HasMessage a => [a] -> String
showMessage :: HasMessage message => message -> String
showHints :: String -> MessageBlocks -> String
showTable :: [(Bool, MessageBlock, MessageBlock)] -> String
renderTypesInRight :: [(Bool, MessageBlock, MessageBlock)] -> [(Bool, MessageBlock, MessageBlock)]
splitString :: Int -> String -> [String]
prepareTypesAndTypeSchemes :: MessageLine -> MessageLine
instance Show MessageBlock
instance Show MessageLine

module Helium.ModuleSystem.ExtractImportDecls
data Inh_Alternative
Inh_Alternative :: Inh_Alternative
data Syn_Alternative
Syn_Alternative :: (Alternative) -> Syn_Alternative
self_Syn_Alternative :: Syn_Alternative -> (Alternative)
wrap_Alternative :: T_Alternative -> Inh_Alternative -> (Syn_Alternative)
sem_Alternative :: Alternative -> T_Alternative
newtype T_Alternative
T_Alternative :: Identity (T_Alternative_s2) -> T_Alternative
attach_T_Alternative :: T_Alternative -> Identity (T_Alternative_s2)
newtype T_Alternative_s2
C_Alternative_s2 :: (T_Alternative_v1) -> T_Alternative_s2
inv_Alternative_s2 :: T_Alternative_s2 -> (T_Alternative_v1)
data T_Alternative_s3
C_Alternative_s3 :: T_Alternative_s3
type T_Alternative_v1 = (T_Alternative_vIn1) -> (T_Alternative_vOut1)
data T_Alternative_vIn1
T_Alternative_vIn1 :: T_Alternative_vIn1
data T_Alternative_vOut1
T_Alternative_vOut1 :: (Alternative) -> T_Alternative_vOut1
sem_Alternative_Hole :: T_Range -> (Integer) -> T_Alternative
sem_Alternative_Feedback :: T_Range -> (String) -> T_Alternative -> T_Alternative
sem_Alternative_Alternative :: T_Range -> T_Pattern -> T_RightHandSide -> T_Alternative
sem_Alternative_Empty :: T_Range -> T_Alternative
data Inh_Alternatives
Inh_Alternatives :: Inh_Alternatives
data Syn_Alternatives
Syn_Alternatives :: (Alternatives) -> Syn_Alternatives
self_Syn_Alternatives :: Syn_Alternatives -> (Alternatives)
wrap_Alternatives :: T_Alternatives -> Inh_Alternatives -> (Syn_Alternatives)
sem_Alternatives :: Alternatives -> T_Alternatives
newtype T_Alternatives
T_Alternatives :: Identity (T_Alternatives_s5) -> T_Alternatives
attach_T_Alternatives :: T_Alternatives -> Identity (T_Alternatives_s5)
newtype T_Alternatives_s5
C_Alternatives_s5 :: (T_Alternatives_v4) -> T_Alternatives_s5
inv_Alternatives_s5 :: T_Alternatives_s5 -> (T_Alternatives_v4)
data T_Alternatives_s6
C_Alternatives_s6 :: T_Alternatives_s6
type T_Alternatives_v4 = (T_Alternatives_vIn4) -> (T_Alternatives_vOut4)
data T_Alternatives_vIn4
T_Alternatives_vIn4 :: T_Alternatives_vIn4
data T_Alternatives_vOut4
T_Alternatives_vOut4 :: (Alternatives) -> T_Alternatives_vOut4
sem_Alternatives_Cons :: T_Alternative -> T_Alternatives -> T_Alternatives
sem_Alternatives_Nil :: T_Alternatives
data Inh_AnnotatedType
Inh_AnnotatedType :: Inh_AnnotatedType
data Syn_AnnotatedType
Syn_AnnotatedType :: (AnnotatedType) -> Syn_AnnotatedType
self_Syn_AnnotatedType :: Syn_AnnotatedType -> (AnnotatedType)
wrap_AnnotatedType :: T_AnnotatedType -> Inh_AnnotatedType -> (Syn_AnnotatedType)
sem_AnnotatedType :: AnnotatedType -> T_AnnotatedType
newtype T_AnnotatedType
T_AnnotatedType :: Identity (T_AnnotatedType_s8) -> T_AnnotatedType
attach_T_AnnotatedType :: T_AnnotatedType -> Identity (T_AnnotatedType_s8)
newtype T_AnnotatedType_s8
C_AnnotatedType_s8 :: (T_AnnotatedType_v7) -> T_AnnotatedType_s8
inv_AnnotatedType_s8 :: T_AnnotatedType_s8 -> (T_AnnotatedType_v7)
data T_AnnotatedType_s9
C_AnnotatedType_s9 :: T_AnnotatedType_s9
type T_AnnotatedType_v7 = (T_AnnotatedType_vIn7) -> (T_AnnotatedType_vOut7)
data T_AnnotatedType_vIn7
T_AnnotatedType_vIn7 :: T_AnnotatedType_vIn7
data T_AnnotatedType_vOut7
T_AnnotatedType_vOut7 :: (AnnotatedType) -> T_AnnotatedType_vOut7
sem_AnnotatedType_AnnotatedType :: T_Range -> (Bool) -> T_Type -> T_AnnotatedType
data Inh_AnnotatedTypes
Inh_AnnotatedTypes :: Inh_AnnotatedTypes
data Syn_AnnotatedTypes
Syn_AnnotatedTypes :: (AnnotatedTypes) -> Syn_AnnotatedTypes
self_Syn_AnnotatedTypes :: Syn_AnnotatedTypes -> (AnnotatedTypes)
wrap_AnnotatedTypes :: T_AnnotatedTypes -> Inh_AnnotatedTypes -> (Syn_AnnotatedTypes)
sem_AnnotatedTypes :: AnnotatedTypes -> T_AnnotatedTypes
newtype T_AnnotatedTypes
T_AnnotatedTypes :: Identity (T_AnnotatedTypes_s11) -> T_AnnotatedTypes
attach_T_AnnotatedTypes :: T_AnnotatedTypes -> Identity (T_AnnotatedTypes_s11)
newtype T_AnnotatedTypes_s11
C_AnnotatedTypes_s11 :: (T_AnnotatedTypes_v10) -> T_AnnotatedTypes_s11
inv_AnnotatedTypes_s11 :: T_AnnotatedTypes_s11 -> (T_AnnotatedTypes_v10)
data T_AnnotatedTypes_s12
C_AnnotatedTypes_s12 :: T_AnnotatedTypes_s12
type T_AnnotatedTypes_v10 = (T_AnnotatedTypes_vIn10) -> (T_AnnotatedTypes_vOut10)
data T_AnnotatedTypes_vIn10
T_AnnotatedTypes_vIn10 :: T_AnnotatedTypes_vIn10
data T_AnnotatedTypes_vOut10
T_AnnotatedTypes_vOut10 :: (AnnotatedTypes) -> T_AnnotatedTypes_vOut10
sem_AnnotatedTypes_Cons :: T_AnnotatedType -> T_AnnotatedTypes -> T_AnnotatedTypes
sem_AnnotatedTypes_Nil :: T_AnnotatedTypes
data Inh_Body
Inh_Body :: Inh_Body
data Syn_Body
Syn_Body :: ([(CoreDecl, [Id])]) -> (Body) -> Syn_Body
coreImportDecls_Syn_Body :: Syn_Body -> ([(CoreDecl, [Id])])
self_Syn_Body :: Syn_Body -> (Body)
wrap_Body :: T_Body -> Inh_Body -> (Syn_Body)
sem_Body :: Body -> T_Body
newtype T_Body
T_Body :: Identity (T_Body_s14) -> T_Body
attach_T_Body :: T_Body -> Identity (T_Body_s14)
newtype T_Body_s14
C_Body_s14 :: (T_Body_v13) -> T_Body_s14
inv_Body_s14 :: T_Body_s14 -> (T_Body_v13)
data T_Body_s15
C_Body_s15 :: T_Body_s15
type T_Body_v13 = (T_Body_vIn13) -> (T_Body_vOut13)
data T_Body_vIn13
T_Body_vIn13 :: T_Body_vIn13
data T_Body_vOut13
T_Body_vOut13 :: ([(CoreDecl, [Id])]) -> (Body) -> T_Body_vOut13
sem_Body_Hole :: T_Range -> (Integer) -> T_Body
sem_Body_Body :: T_Range -> T_ImportDeclarations -> T_Declarations -> T_Body
data Inh_Constructor
Inh_Constructor :: Inh_Constructor
data Syn_Constructor
Syn_Constructor :: (Constructor) -> Syn_Constructor
self_Syn_Constructor :: Syn_Constructor -> (Constructor)
wrap_Constructor :: T_Constructor -> Inh_Constructor -> (Syn_Constructor)
sem_Constructor :: Constructor -> T_Constructor
newtype T_Constructor
T_Constructor :: Identity (T_Constructor_s17) -> T_Constructor
attach_T_Constructor :: T_Constructor -> Identity (T_Constructor_s17)
newtype T_Constructor_s17
C_Constructor_s17 :: (T_Constructor_v16) -> T_Constructor_s17
inv_Constructor_s17 :: T_Constructor_s17 -> (T_Constructor_v16)
data T_Constructor_s18
C_Constructor_s18 :: T_Constructor_s18
type T_Constructor_v16 = (T_Constructor_vIn16) -> (T_Constructor_vOut16)
data T_Constructor_vIn16
T_Constructor_vIn16 :: T_Constructor_vIn16
data T_Constructor_vOut16
T_Constructor_vOut16 :: (Constructor) -> T_Constructor_vOut16
sem_Constructor_Constructor :: T_Range -> T_Name -> T_AnnotatedTypes -> T_Constructor
sem_Constructor_Infix :: T_Range -> T_AnnotatedType -> T_Name -> T_AnnotatedType -> T_Constructor
sem_Constructor_Record :: T_Range -> T_Name -> T_FieldDeclarations -> T_Constructor
data Inh_Constructors
Inh_Constructors :: Inh_Constructors
data Syn_Constructors
Syn_Constructors :: (Constructors) -> Syn_Constructors
self_Syn_Constructors :: Syn_Constructors -> (Constructors)
wrap_Constructors :: T_Constructors -> Inh_Constructors -> (Syn_Constructors)
sem_Constructors :: Constructors -> T_Constructors
newtype T_Constructors
T_Constructors :: Identity (T_Constructors_s20) -> T_Constructors
attach_T_Constructors :: T_Constructors -> Identity (T_Constructors_s20)
newtype T_Constructors_s20
C_Constructors_s20 :: (T_Constructors_v19) -> T_Constructors_s20
inv_Constructors_s20 :: T_Constructors_s20 -> (T_Constructors_v19)
data T_Constructors_s21
C_Constructors_s21 :: T_Constructors_s21
type T_Constructors_v19 = (T_Constructors_vIn19) -> (T_Constructors_vOut19)
data T_Constructors_vIn19
T_Constructors_vIn19 :: T_Constructors_vIn19
data T_Constructors_vOut19
T_Constructors_vOut19 :: (Constructors) -> T_Constructors_vOut19
sem_Constructors_Cons :: T_Constructor -> T_Constructors -> T_Constructors
sem_Constructors_Nil :: T_Constructors
data Inh_ContextItem
Inh_ContextItem :: Inh_ContextItem
data Syn_ContextItem
Syn_ContextItem :: (ContextItem) -> Syn_ContextItem
self_Syn_ContextItem :: Syn_ContextItem -> (ContextItem)
wrap_ContextItem :: T_ContextItem -> Inh_ContextItem -> (Syn_ContextItem)
sem_ContextItem :: ContextItem -> T_ContextItem
newtype T_ContextItem
T_ContextItem :: Identity (T_ContextItem_s23) -> T_ContextItem
attach_T_ContextItem :: T_ContextItem -> Identity (T_ContextItem_s23)
newtype T_ContextItem_s23
C_ContextItem_s23 :: (T_ContextItem_v22) -> T_ContextItem_s23
inv_ContextItem_s23 :: T_ContextItem_s23 -> (T_ContextItem_v22)
data T_ContextItem_s24
C_ContextItem_s24 :: T_ContextItem_s24
type T_ContextItem_v22 = (T_ContextItem_vIn22) -> (T_ContextItem_vOut22)
data T_ContextItem_vIn22
T_ContextItem_vIn22 :: T_ContextItem_vIn22
data T_ContextItem_vOut22
T_ContextItem_vOut22 :: (ContextItem) -> T_ContextItem_vOut22
sem_ContextItem_ContextItem :: T_Range -> T_Name -> T_Types -> T_ContextItem
data Inh_ContextItems
Inh_ContextItems :: Inh_ContextItems
data Syn_ContextItems
Syn_ContextItems :: (ContextItems) -> Syn_ContextItems
self_Syn_ContextItems :: Syn_ContextItems -> (ContextItems)
wrap_ContextItems :: T_ContextItems -> Inh_ContextItems -> (Syn_ContextItems)
sem_ContextItems :: ContextItems -> T_ContextItems
newtype T_ContextItems
T_ContextItems :: Identity (T_ContextItems_s26) -> T_ContextItems
attach_T_ContextItems :: T_ContextItems -> Identity (T_ContextItems_s26)
newtype T_ContextItems_s26
C_ContextItems_s26 :: (T_ContextItems_v25) -> T_ContextItems_s26
inv_ContextItems_s26 :: T_ContextItems_s26 -> (T_ContextItems_v25)
data T_ContextItems_s27
C_ContextItems_s27 :: T_ContextItems_s27
type T_ContextItems_v25 = (T_ContextItems_vIn25) -> (T_ContextItems_vOut25)
data T_ContextItems_vIn25
T_ContextItems_vIn25 :: T_ContextItems_vIn25
data T_ContextItems_vOut25
T_ContextItems_vOut25 :: (ContextItems) -> T_ContextItems_vOut25
sem_ContextItems_Cons :: T_ContextItem -> T_ContextItems -> T_ContextItems
sem_ContextItems_Nil :: T_ContextItems
data Inh_Declaration
Inh_Declaration :: Inh_Declaration
data Syn_Declaration
Syn_Declaration :: (Declaration) -> Syn_Declaration
self_Syn_Declaration :: Syn_Declaration -> (Declaration)
wrap_Declaration :: T_Declaration -> Inh_Declaration -> (Syn_Declaration)
sem_Declaration :: Declaration -> T_Declaration
newtype T_Declaration
T_Declaration :: Identity (T_Declaration_s29) -> T_Declaration
attach_T_Declaration :: T_Declaration -> Identity (T_Declaration_s29)
newtype T_Declaration_s29
C_Declaration_s29 :: (T_Declaration_v28) -> T_Declaration_s29
inv_Declaration_s29 :: T_Declaration_s29 -> (T_Declaration_v28)
data T_Declaration_s30
C_Declaration_s30 :: T_Declaration_s30
type T_Declaration_v28 = (T_Declaration_vIn28) -> (T_Declaration_vOut28)
data T_Declaration_vIn28
T_Declaration_vIn28 :: T_Declaration_vIn28
data T_Declaration_vOut28
T_Declaration_vOut28 :: (Declaration) -> T_Declaration_vOut28
sem_Declaration_Hole :: T_Range -> (Integer) -> T_Declaration
sem_Declaration_Type :: T_Range -> T_SimpleType -> T_Type -> T_Declaration
sem_Declaration_Data :: T_Range -> T_ContextItems -> T_SimpleType -> T_Constructors -> T_Names -> T_Declaration
sem_Declaration_Newtype :: T_Range -> T_ContextItems -> T_SimpleType -> T_Constructor -> T_Names -> T_Declaration
sem_Declaration_Class :: T_Range -> T_ContextItems -> T_SimpleType -> T_MaybeDeclarations -> T_Declaration
sem_Declaration_Instance :: T_Range -> T_ContextItems -> T_Name -> T_Types -> T_MaybeDeclarations -> T_Declaration
sem_Declaration_Default :: T_Range -> T_Types -> T_Declaration
sem_Declaration_FunctionBindings :: T_Range -> T_FunctionBindings -> T_Declaration
sem_Declaration_PatternBinding :: T_Range -> T_Pattern -> T_RightHandSide -> T_Declaration
sem_Declaration_TypeSignature :: T_Range -> T_Names -> T_Type -> T_Declaration
sem_Declaration_Fixity :: T_Range -> T_Fixity -> T_MaybeInt -> T_Names -> T_Declaration
sem_Declaration_Empty :: T_Range -> T_Declaration
data Inh_Declarations
Inh_Declarations :: Inh_Declarations
data Syn_Declarations
Syn_Declarations :: (Declarations) -> Syn_Declarations
self_Syn_Declarations :: Syn_Declarations -> (Declarations)
wrap_Declarations :: T_Declarations -> Inh_Declarations -> (Syn_Declarations)
sem_Declarations :: Declarations -> T_Declarations
newtype T_Declarations
T_Declarations :: Identity (T_Declarations_s32) -> T_Declarations
attach_T_Declarations :: T_Declarations -> Identity (T_Declarations_s32)
newtype T_Declarations_s32
C_Declarations_s32 :: (T_Declarations_v31) -> T_Declarations_s32
inv_Declarations_s32 :: T_Declarations_s32 -> (T_Declarations_v31)
data T_Declarations_s33
C_Declarations_s33 :: T_Declarations_s33
type T_Declarations_v31 = (T_Declarations_vIn31) -> (T_Declarations_vOut31)
data T_Declarations_vIn31
T_Declarations_vIn31 :: T_Declarations_vIn31
data T_Declarations_vOut31
T_Declarations_vOut31 :: (Declarations) -> T_Declarations_vOut31
sem_Declarations_Cons :: T_Declaration -> T_Declarations -> T_Declarations
sem_Declarations_Nil :: T_Declarations
data Inh_Export
Inh_Export :: Inh_Export
data Syn_Export
Syn_Export :: (Export) -> Syn_Export
self_Syn_Export :: Syn_Export -> (Export)
wrap_Export :: T_Export -> Inh_Export -> (Syn_Export)
sem_Export :: Export -> T_Export
newtype T_Export
T_Export :: Identity (T_Export_s35) -> T_Export
attach_T_Export :: T_Export -> Identity (T_Export_s35)
newtype T_Export_s35
C_Export_s35 :: (T_Export_v34) -> T_Export_s35
inv_Export_s35 :: T_Export_s35 -> (T_Export_v34)
data T_Export_s36
C_Export_s36 :: T_Export_s36
type T_Export_v34 = (T_Export_vIn34) -> (T_Export_vOut34)
data T_Export_vIn34
T_Export_vIn34 :: T_Export_vIn34
data T_Export_vOut34
T_Export_vOut34 :: (Export) -> T_Export_vOut34
sem_Export_Variable :: T_Range -> T_Name -> T_Export
sem_Export_TypeOrClass :: T_Range -> T_Name -> T_MaybeNames -> T_Export
sem_Export_TypeOrClassComplete :: T_Range -> T_Name -> T_Export
sem_Export_Module :: T_Range -> T_Name -> T_Export
data Inh_Exports
Inh_Exports :: Inh_Exports
data Syn_Exports
Syn_Exports :: (Exports) -> Syn_Exports
self_Syn_Exports :: Syn_Exports -> (Exports)
wrap_Exports :: T_Exports -> Inh_Exports -> (Syn_Exports)
sem_Exports :: Exports -> T_Exports
newtype T_Exports
T_Exports :: Identity (T_Exports_s38) -> T_Exports
attach_T_Exports :: T_Exports -> Identity (T_Exports_s38)
newtype T_Exports_s38
C_Exports_s38 :: (T_Exports_v37) -> T_Exports_s38
inv_Exports_s38 :: T_Exports_s38 -> (T_Exports_v37)
data T_Exports_s39
C_Exports_s39 :: T_Exports_s39
type T_Exports_v37 = (T_Exports_vIn37) -> (T_Exports_vOut37)
data T_Exports_vIn37
T_Exports_vIn37 :: T_Exports_vIn37
data T_Exports_vOut37
T_Exports_vOut37 :: (Exports) -> T_Exports_vOut37
sem_Exports_Cons :: T_Export -> T_Exports -> T_Exports
sem_Exports_Nil :: T_Exports
data Inh_Expression
Inh_Expression :: Inh_Expression
data Syn_Expression
Syn_Expression :: (Expression) -> Syn_Expression
self_Syn_Expression :: Syn_Expression -> (Expression)
wrap_Expression :: T_Expression -> Inh_Expression -> (Syn_Expression)
sem_Expression :: Expression -> T_Expression
newtype T_Expression
T_Expression :: Identity (T_Expression_s41) -> T_Expression
attach_T_Expression :: T_Expression -> Identity (T_Expression_s41)
newtype T_Expression_s41
C_Expression_s41 :: (T_Expression_v40) -> T_Expression_s41
inv_Expression_s41 :: T_Expression_s41 -> (T_Expression_v40)
data T_Expression_s42
C_Expression_s42 :: T_Expression_s42
type T_Expression_v40 = (T_Expression_vIn40) -> (T_Expression_vOut40)
data T_Expression_vIn40
T_Expression_vIn40 :: T_Expression_vIn40
data T_Expression_vOut40
T_Expression_vOut40 :: (Expression) -> T_Expression_vOut40
sem_Expression_Hole :: T_Range -> (Integer) -> T_Expression
sem_Expression_Feedback :: T_Range -> (String) -> T_Expression -> T_Expression
sem_Expression_MustUse :: T_Range -> T_Expression -> T_Expression
sem_Expression_Literal :: T_Range -> T_Literal -> T_Expression
sem_Expression_Variable :: T_Range -> T_Name -> T_Expression
sem_Expression_Constructor :: T_Range -> T_Name -> T_Expression
sem_Expression_Parenthesized :: T_Range -> T_Expression -> T_Expression
sem_Expression_NormalApplication :: T_Range -> T_Expression -> T_Expressions -> T_Expression
sem_Expression_InfixApplication :: T_Range -> T_MaybeExpression -> T_Expression -> T_MaybeExpression -> T_Expression
sem_Expression_If :: T_Range -> T_Expression -> T_Expression -> T_Expression -> T_Expression
sem_Expression_Lambda :: T_Range -> T_Patterns -> T_Expression -> T_Expression
sem_Expression_Case :: T_Range -> T_Expression -> T_Alternatives -> T_Expression
sem_Expression_Let :: T_Range -> T_Declarations -> T_Expression -> T_Expression
sem_Expression_Do :: T_Range -> T_Statements -> T_Expression
sem_Expression_List :: T_Range -> T_Expressions -> T_Expression
sem_Expression_Tuple :: T_Range -> T_Expressions -> T_Expression
sem_Expression_Comprehension :: T_Range -> T_Expression -> T_Qualifiers -> T_Expression
sem_Expression_Typed :: T_Range -> T_Expression -> T_Type -> T_Expression
sem_Expression_RecordConstruction :: T_Range -> T_Name -> T_RecordExpressionBindings -> T_Expression
sem_Expression_RecordUpdate :: T_Range -> T_Expression -> T_RecordExpressionBindings -> T_Expression
sem_Expression_Enum :: T_Range -> T_Expression -> T_MaybeExpression -> T_MaybeExpression -> T_Expression
sem_Expression_Negate :: T_Range -> T_Expression -> T_Expression
sem_Expression_NegateFloat :: T_Range -> T_Expression -> T_Expression
data Inh_Expressions
Inh_Expressions :: Inh_Expressions
data Syn_Expressions
Syn_Expressions :: (Expressions) -> Syn_Expressions
self_Syn_Expressions :: Syn_Expressions -> (Expressions)
wrap_Expressions :: T_Expressions -> Inh_Expressions -> (Syn_Expressions)
sem_Expressions :: Expressions -> T_Expressions
newtype T_Expressions
T_Expressions :: Identity (T_Expressions_s44) -> T_Expressions
attach_T_Expressions :: T_Expressions -> Identity (T_Expressions_s44)
newtype T_Expressions_s44
C_Expressions_s44 :: (T_Expressions_v43) -> T_Expressions_s44
inv_Expressions_s44 :: T_Expressions_s44 -> (T_Expressions_v43)
data T_Expressions_s45
C_Expressions_s45 :: T_Expressions_s45
type T_Expressions_v43 = (T_Expressions_vIn43) -> (T_Expressions_vOut43)
data T_Expressions_vIn43
T_Expressions_vIn43 :: T_Expressions_vIn43
data T_Expressions_vOut43
T_Expressions_vOut43 :: (Expressions) -> T_Expressions_vOut43
sem_Expressions_Cons :: T_Expression -> T_Expressions -> T_Expressions
sem_Expressions_Nil :: T_Expressions
data Inh_FieldDeclaration
Inh_FieldDeclaration :: Inh_FieldDeclaration
data Syn_FieldDeclaration
Syn_FieldDeclaration :: (FieldDeclaration) -> Syn_FieldDeclaration
self_Syn_FieldDeclaration :: Syn_FieldDeclaration -> (FieldDeclaration)
wrap_FieldDeclaration :: T_FieldDeclaration -> Inh_FieldDeclaration -> (Syn_FieldDeclaration)
sem_FieldDeclaration :: FieldDeclaration -> T_FieldDeclaration
newtype T_FieldDeclaration
T_FieldDeclaration :: Identity (T_FieldDeclaration_s47) -> T_FieldDeclaration
attach_T_FieldDeclaration :: T_FieldDeclaration -> Identity (T_FieldDeclaration_s47)
newtype T_FieldDeclaration_s47
C_FieldDeclaration_s47 :: (T_FieldDeclaration_v46) -> T_FieldDeclaration_s47
inv_FieldDeclaration_s47 :: T_FieldDeclaration_s47 -> (T_FieldDeclaration_v46)
data T_FieldDeclaration_s48
C_FieldDeclaration_s48 :: T_FieldDeclaration_s48
type T_FieldDeclaration_v46 = (T_FieldDeclaration_vIn46) -> (T_FieldDeclaration_vOut46)
data T_FieldDeclaration_vIn46
T_FieldDeclaration_vIn46 :: T_FieldDeclaration_vIn46
data T_FieldDeclaration_vOut46
T_FieldDeclaration_vOut46 :: (FieldDeclaration) -> T_FieldDeclaration_vOut46
sem_FieldDeclaration_FieldDeclaration :: T_Range -> T_Names -> T_AnnotatedType -> T_FieldDeclaration
data Inh_FieldDeclarations
Inh_FieldDeclarations :: Inh_FieldDeclarations
data Syn_FieldDeclarations
Syn_FieldDeclarations :: (FieldDeclarations) -> Syn_FieldDeclarations
self_Syn_FieldDeclarations :: Syn_FieldDeclarations -> (FieldDeclarations)
wrap_FieldDeclarations :: T_FieldDeclarations -> Inh_FieldDeclarations -> (Syn_FieldDeclarations)
sem_FieldDeclarations :: FieldDeclarations -> T_FieldDeclarations
newtype T_FieldDeclarations
T_FieldDeclarations :: Identity (T_FieldDeclarations_s50) -> T_FieldDeclarations
attach_T_FieldDeclarations :: T_FieldDeclarations -> Identity (T_FieldDeclarations_s50)
newtype T_FieldDeclarations_s50
C_FieldDeclarations_s50 :: (T_FieldDeclarations_v49) -> T_FieldDeclarations_s50
inv_FieldDeclarations_s50 :: T_FieldDeclarations_s50 -> (T_FieldDeclarations_v49)
data T_FieldDeclarations_s51
C_FieldDeclarations_s51 :: T_FieldDeclarations_s51
type T_FieldDeclarations_v49 = (T_FieldDeclarations_vIn49) -> (T_FieldDeclarations_vOut49)
data T_FieldDeclarations_vIn49
T_FieldDeclarations_vIn49 :: T_FieldDeclarations_vIn49
data T_FieldDeclarations_vOut49
T_FieldDeclarations_vOut49 :: (FieldDeclarations) -> T_FieldDeclarations_vOut49
sem_FieldDeclarations_Cons :: T_FieldDeclaration -> T_FieldDeclarations -> T_FieldDeclarations
sem_FieldDeclarations_Nil :: T_FieldDeclarations
data Inh_Fixity
Inh_Fixity :: Inh_Fixity
data Syn_Fixity
Syn_Fixity :: (Fixity) -> Syn_Fixity
self_Syn_Fixity :: Syn_Fixity -> (Fixity)
wrap_Fixity :: T_Fixity -> Inh_Fixity -> (Syn_Fixity)
sem_Fixity :: Fixity -> T_Fixity
newtype T_Fixity
T_Fixity :: Identity (T_Fixity_s53) -> T_Fixity
attach_T_Fixity :: T_Fixity -> Identity (T_Fixity_s53)
newtype T_Fixity_s53
C_Fixity_s53 :: (T_Fixity_v52) -> T_Fixity_s53
inv_Fixity_s53 :: T_Fixity_s53 -> (T_Fixity_v52)
data T_Fixity_s54
C_Fixity_s54 :: T_Fixity_s54
type T_Fixity_v52 = (T_Fixity_vIn52) -> (T_Fixity_vOut52)
data T_Fixity_vIn52
T_Fixity_vIn52 :: T_Fixity_vIn52
data T_Fixity_vOut52
T_Fixity_vOut52 :: (Fixity) -> T_Fixity_vOut52
sem_Fixity_Infixl :: T_Range -> T_Fixity
sem_Fixity_Infixr :: T_Range -> T_Fixity
sem_Fixity_Infix :: T_Range -> T_Fixity
data Inh_FunctionBinding
Inh_FunctionBinding :: Inh_FunctionBinding
data Syn_FunctionBinding
Syn_FunctionBinding :: (Name) -> (FunctionBinding) -> Syn_FunctionBinding
name_Syn_FunctionBinding :: Syn_FunctionBinding -> (Name)
self_Syn_FunctionBinding :: Syn_FunctionBinding -> (FunctionBinding)
wrap_FunctionBinding :: T_FunctionBinding -> Inh_FunctionBinding -> (Syn_FunctionBinding)
sem_FunctionBinding :: FunctionBinding -> T_FunctionBinding
newtype T_FunctionBinding
T_FunctionBinding :: Identity (T_FunctionBinding_s56) -> T_FunctionBinding
attach_T_FunctionBinding :: T_FunctionBinding -> Identity (T_FunctionBinding_s56)
newtype T_FunctionBinding_s56
C_FunctionBinding_s56 :: (T_FunctionBinding_v55) -> T_FunctionBinding_s56
inv_FunctionBinding_s56 :: T_FunctionBinding_s56 -> (T_FunctionBinding_v55)
data T_FunctionBinding_s57
C_FunctionBinding_s57 :: T_FunctionBinding_s57
type T_FunctionBinding_v55 = (T_FunctionBinding_vIn55) -> (T_FunctionBinding_vOut55)
data T_FunctionBinding_vIn55
T_FunctionBinding_vIn55 :: T_FunctionBinding_vIn55
data T_FunctionBinding_vOut55
T_FunctionBinding_vOut55 :: (Name) -> (FunctionBinding) -> T_FunctionBinding_vOut55
sem_FunctionBinding_Hole :: T_Range -> (Integer) -> T_FunctionBinding
sem_FunctionBinding_Feedback :: T_Range -> (String) -> T_FunctionBinding -> T_FunctionBinding
sem_FunctionBinding_FunctionBinding :: T_Range -> T_LeftHandSide -> T_RightHandSide -> T_FunctionBinding
data Inh_FunctionBindings
Inh_FunctionBindings :: Inh_FunctionBindings
data Syn_FunctionBindings
Syn_FunctionBindings :: (Name) -> (FunctionBindings) -> Syn_FunctionBindings
name_Syn_FunctionBindings :: Syn_FunctionBindings -> (Name)
self_Syn_FunctionBindings :: Syn_FunctionBindings -> (FunctionBindings)
wrap_FunctionBindings :: T_FunctionBindings -> Inh_FunctionBindings -> (Syn_FunctionBindings)
sem_FunctionBindings :: FunctionBindings -> T_FunctionBindings
newtype T_FunctionBindings
T_FunctionBindings :: Identity (T_FunctionBindings_s59) -> T_FunctionBindings
attach_T_FunctionBindings :: T_FunctionBindings -> Identity (T_FunctionBindings_s59)
newtype T_FunctionBindings_s59
C_FunctionBindings_s59 :: (T_FunctionBindings_v58) -> T_FunctionBindings_s59
inv_FunctionBindings_s59 :: T_FunctionBindings_s59 -> (T_FunctionBindings_v58)
data T_FunctionBindings_s60
C_FunctionBindings_s60 :: T_FunctionBindings_s60
type T_FunctionBindings_v58 = (T_FunctionBindings_vIn58) -> (T_FunctionBindings_vOut58)
data T_FunctionBindings_vIn58
T_FunctionBindings_vIn58 :: T_FunctionBindings_vIn58
data T_FunctionBindings_vOut58
T_FunctionBindings_vOut58 :: (Name) -> (FunctionBindings) -> T_FunctionBindings_vOut58
sem_FunctionBindings_Cons :: T_FunctionBinding -> T_FunctionBindings -> T_FunctionBindings
sem_FunctionBindings_Nil :: T_FunctionBindings
data Inh_GuardedExpression
Inh_GuardedExpression :: Inh_GuardedExpression
data Syn_GuardedExpression
Syn_GuardedExpression :: (GuardedExpression) -> Syn_GuardedExpression
self_Syn_GuardedExpression :: Syn_GuardedExpression -> (GuardedExpression)
wrap_GuardedExpression :: T_GuardedExpression -> Inh_GuardedExpression -> (Syn_GuardedExpression)
sem_GuardedExpression :: GuardedExpression -> T_GuardedExpression
newtype T_GuardedExpression
T_GuardedExpression :: Identity (T_GuardedExpression_s62) -> T_GuardedExpression
attach_T_GuardedExpression :: T_GuardedExpression -> Identity (T_GuardedExpression_s62)
newtype T_GuardedExpression_s62
C_GuardedExpression_s62 :: (T_GuardedExpression_v61) -> T_GuardedExpression_s62
inv_GuardedExpression_s62 :: T_GuardedExpression_s62 -> (T_GuardedExpression_v61)
data T_GuardedExpression_s63
C_GuardedExpression_s63 :: T_GuardedExpression_s63
type T_GuardedExpression_v61 = (T_GuardedExpression_vIn61) -> (T_GuardedExpression_vOut61)
data T_GuardedExpression_vIn61
T_GuardedExpression_vIn61 :: T_GuardedExpression_vIn61
data T_GuardedExpression_vOut61
T_GuardedExpression_vOut61 :: (GuardedExpression) -> T_GuardedExpression_vOut61
sem_GuardedExpression_GuardedExpression :: T_Range -> T_Expression -> T_Expression -> T_GuardedExpression
data Inh_GuardedExpressions
Inh_GuardedExpressions :: Inh_GuardedExpressions
data Syn_GuardedExpressions
Syn_GuardedExpressions :: (GuardedExpressions) -> Syn_GuardedExpressions
self_Syn_GuardedExpressions :: Syn_GuardedExpressions -> (GuardedExpressions)
wrap_GuardedExpressions :: T_GuardedExpressions -> Inh_GuardedExpressions -> (Syn_GuardedExpressions)
sem_GuardedExpressions :: GuardedExpressions -> T_GuardedExpressions
newtype T_GuardedExpressions
T_GuardedExpressions :: Identity (T_GuardedExpressions_s65) -> T_GuardedExpressions
attach_T_GuardedExpressions :: T_GuardedExpressions -> Identity (T_GuardedExpressions_s65)
newtype T_GuardedExpressions_s65
C_GuardedExpressions_s65 :: (T_GuardedExpressions_v64) -> T_GuardedExpressions_s65
inv_GuardedExpressions_s65 :: T_GuardedExpressions_s65 -> (T_GuardedExpressions_v64)
data T_GuardedExpressions_s66
C_GuardedExpressions_s66 :: T_GuardedExpressions_s66
type T_GuardedExpressions_v64 = (T_GuardedExpressions_vIn64) -> (T_GuardedExpressions_vOut64)
data T_GuardedExpressions_vIn64
T_GuardedExpressions_vIn64 :: T_GuardedExpressions_vIn64
data T_GuardedExpressions_vOut64
T_GuardedExpressions_vOut64 :: (GuardedExpressions) -> T_GuardedExpressions_vOut64
sem_GuardedExpressions_Cons :: T_GuardedExpression -> T_GuardedExpressions -> T_GuardedExpressions
sem_GuardedExpressions_Nil :: T_GuardedExpressions
data Inh_Import
Inh_Import :: Inh_Import
data Syn_Import
Syn_Import :: ([Id]) -> (Import) -> Syn_Import
imps_Syn_Import :: Syn_Import -> ([Id])
self_Syn_Import :: Syn_Import -> (Import)
wrap_Import :: T_Import -> Inh_Import -> (Syn_Import)
sem_Import :: Import -> T_Import
newtype T_Import
T_Import :: Identity (T_Import_s68) -> T_Import
attach_T_Import :: T_Import -> Identity (T_Import_s68)
newtype T_Import_s68
C_Import_s68 :: (T_Import_v67) -> T_Import_s68
inv_Import_s68 :: T_Import_s68 -> (T_Import_v67)
data T_Import_s69
C_Import_s69 :: T_Import_s69
type T_Import_v67 = (T_Import_vIn67) -> (T_Import_vOut67)
data T_Import_vIn67
T_Import_vIn67 :: T_Import_vIn67
data T_Import_vOut67
T_Import_vOut67 :: ([Id]) -> (Import) -> T_Import_vOut67
sem_Import_Variable :: T_Range -> T_Name -> T_Import
sem_Import_TypeOrClass :: T_Range -> T_Name -> T_MaybeNames -> T_Import
sem_Import_TypeOrClassComplete :: T_Range -> T_Name -> T_Import
data Inh_ImportDeclaration
Inh_ImportDeclaration :: Inh_ImportDeclaration
data Syn_ImportDeclaration
Syn_ImportDeclaration :: ([(CoreDecl, [Id])]) -> (ImportDeclaration) -> Syn_ImportDeclaration
coreImportDecls_Syn_ImportDeclaration :: Syn_ImportDeclaration -> ([(CoreDecl, [Id])])
self_Syn_ImportDeclaration :: Syn_ImportDeclaration -> (ImportDeclaration)
wrap_ImportDeclaration :: T_ImportDeclaration -> Inh_ImportDeclaration -> (Syn_ImportDeclaration)
sem_ImportDeclaration :: ImportDeclaration -> T_ImportDeclaration
newtype T_ImportDeclaration
T_ImportDeclaration :: Identity (T_ImportDeclaration_s71) -> T_ImportDeclaration
attach_T_ImportDeclaration :: T_ImportDeclaration -> Identity (T_ImportDeclaration_s71)
newtype T_ImportDeclaration_s71
C_ImportDeclaration_s71 :: (T_ImportDeclaration_v70) -> T_ImportDeclaration_s71
inv_ImportDeclaration_s71 :: T_ImportDeclaration_s71 -> (T_ImportDeclaration_v70)
data T_ImportDeclaration_s72
C_ImportDeclaration_s72 :: T_ImportDeclaration_s72
type T_ImportDeclaration_v70 = (T_ImportDeclaration_vIn70) -> (T_ImportDeclaration_vOut70)
data T_ImportDeclaration_vIn70
T_ImportDeclaration_vIn70 :: T_ImportDeclaration_vIn70
data T_ImportDeclaration_vOut70
T_ImportDeclaration_vOut70 :: ([(CoreDecl, [Id])]) -> (ImportDeclaration) -> T_ImportDeclaration_vOut70
sem_ImportDeclaration_Import :: T_Range -> (Bool) -> T_Name -> T_MaybeName -> T_MaybeImportSpecification -> T_ImportDeclaration
sem_ImportDeclaration_Empty :: T_Range -> T_ImportDeclaration
data Inh_ImportDeclarations
Inh_ImportDeclarations :: Inh_ImportDeclarations
data Syn_ImportDeclarations
Syn_ImportDeclarations :: ([(CoreDecl, [Id])]) -> (ImportDeclarations) -> Syn_ImportDeclarations
coreImportDecls_Syn_ImportDeclarations :: Syn_ImportDeclarations -> ([(CoreDecl, [Id])])
self_Syn_ImportDeclarations :: Syn_ImportDeclarations -> (ImportDeclarations)
wrap_ImportDeclarations :: T_ImportDeclarations -> Inh_ImportDeclarations -> (Syn_ImportDeclarations)
sem_ImportDeclarations :: ImportDeclarations -> T_ImportDeclarations
newtype T_ImportDeclarations
T_ImportDeclarations :: Identity (T_ImportDeclarations_s74) -> T_ImportDeclarations
attach_T_ImportDeclarations :: T_ImportDeclarations -> Identity (T_ImportDeclarations_s74)
newtype T_ImportDeclarations_s74
C_ImportDeclarations_s74 :: (T_ImportDeclarations_v73) -> T_ImportDeclarations_s74
inv_ImportDeclarations_s74 :: T_ImportDeclarations_s74 -> (T_ImportDeclarations_v73)
data T_ImportDeclarations_s75
C_ImportDeclarations_s75 :: T_ImportDeclarations_s75
type T_ImportDeclarations_v73 = (T_ImportDeclarations_vIn73) -> (T_ImportDeclarations_vOut73)
data T_ImportDeclarations_vIn73
T_ImportDeclarations_vIn73 :: T_ImportDeclarations_vIn73
data T_ImportDeclarations_vOut73
T_ImportDeclarations_vOut73 :: ([(CoreDecl, [Id])]) -> (ImportDeclarations) -> T_ImportDeclarations_vOut73
sem_ImportDeclarations_Cons :: T_ImportDeclaration -> T_ImportDeclarations -> T_ImportDeclarations
sem_ImportDeclarations_Nil :: T_ImportDeclarations
data Inh_ImportSpecification
Inh_ImportSpecification :: Inh_ImportSpecification
data Syn_ImportSpecification
Syn_ImportSpecification :: ([Id]) -> (ImportSpecification) -> Syn_ImportSpecification
imps_Syn_ImportSpecification :: Syn_ImportSpecification -> ([Id])
self_Syn_ImportSpecification :: Syn_ImportSpecification -> (ImportSpecification)
wrap_ImportSpecification :: T_ImportSpecification -> Inh_ImportSpecification -> (Syn_ImportSpecification)
sem_ImportSpecification :: ImportSpecification -> T_ImportSpecification
newtype T_ImportSpecification
T_ImportSpecification :: Identity (T_ImportSpecification_s77) -> T_ImportSpecification
attach_T_ImportSpecification :: T_ImportSpecification -> Identity (T_ImportSpecification_s77)
newtype T_ImportSpecification_s77
C_ImportSpecification_s77 :: (T_ImportSpecification_v76) -> T_ImportSpecification_s77
inv_ImportSpecification_s77 :: T_ImportSpecification_s77 -> (T_ImportSpecification_v76)
data T_ImportSpecification_s78
C_ImportSpecification_s78 :: T_ImportSpecification_s78
type T_ImportSpecification_v76 = (T_ImportSpecification_vIn76) -> (T_ImportSpecification_vOut76)
data T_ImportSpecification_vIn76
T_ImportSpecification_vIn76 :: T_ImportSpecification_vIn76
data T_ImportSpecification_vOut76
T_ImportSpecification_vOut76 :: ([Id]) -> (ImportSpecification) -> T_ImportSpecification_vOut76
sem_ImportSpecification_Import :: T_Range -> (Bool) -> T_Imports -> T_ImportSpecification
data Inh_Imports
Inh_Imports :: Inh_Imports
data Syn_Imports
Syn_Imports :: ([Id]) -> (Imports) -> Syn_Imports
imps_Syn_Imports :: Syn_Imports -> ([Id])
self_Syn_Imports :: Syn_Imports -> (Imports)
wrap_Imports :: T_Imports -> Inh_Imports -> (Syn_Imports)
sem_Imports :: Imports -> T_Imports
newtype T_Imports
T_Imports :: Identity (T_Imports_s80) -> T_Imports
attach_T_Imports :: T_Imports -> Identity (T_Imports_s80)
newtype T_Imports_s80
C_Imports_s80 :: (T_Imports_v79) -> T_Imports_s80
inv_Imports_s80 :: T_Imports_s80 -> (T_Imports_v79)
data T_Imports_s81
C_Imports_s81 :: T_Imports_s81
type T_Imports_v79 = (T_Imports_vIn79) -> (T_Imports_vOut79)
data T_Imports_vIn79
T_Imports_vIn79 :: T_Imports_vIn79
data T_Imports_vOut79
T_Imports_vOut79 :: ([Id]) -> (Imports) -> T_Imports_vOut79
sem_Imports_Cons :: T_Import -> T_Imports -> T_Imports
sem_Imports_Nil :: T_Imports
data Inh_LeftHandSide
Inh_LeftHandSide :: Inh_LeftHandSide
data Syn_LeftHandSide
Syn_LeftHandSide :: (Name) -> (LeftHandSide) -> Syn_LeftHandSide
name_Syn_LeftHandSide :: Syn_LeftHandSide -> (Name)
self_Syn_LeftHandSide :: Syn_LeftHandSide -> (LeftHandSide)
wrap_LeftHandSide :: T_LeftHandSide -> Inh_LeftHandSide -> (Syn_LeftHandSide)
sem_LeftHandSide :: LeftHandSide -> T_LeftHandSide
newtype T_LeftHandSide
T_LeftHandSide :: Identity (T_LeftHandSide_s83) -> T_LeftHandSide
attach_T_LeftHandSide :: T_LeftHandSide -> Identity (T_LeftHandSide_s83)
newtype T_LeftHandSide_s83
C_LeftHandSide_s83 :: (T_LeftHandSide_v82) -> T_LeftHandSide_s83
inv_LeftHandSide_s83 :: T_LeftHandSide_s83 -> (T_LeftHandSide_v82)
data T_LeftHandSide_s84
C_LeftHandSide_s84 :: T_LeftHandSide_s84
type T_LeftHandSide_v82 = (T_LeftHandSide_vIn82) -> (T_LeftHandSide_vOut82)
data T_LeftHandSide_vIn82
T_LeftHandSide_vIn82 :: T_LeftHandSide_vIn82
data T_LeftHandSide_vOut82
T_LeftHandSide_vOut82 :: (Name) -> (LeftHandSide) -> T_LeftHandSide_vOut82
sem_LeftHandSide_Function :: T_Range -> T_Name -> T_Patterns -> T_LeftHandSide
sem_LeftHandSide_Infix :: T_Range -> T_Pattern -> T_Name -> T_Pattern -> T_LeftHandSide
sem_LeftHandSide_Parenthesized :: T_Range -> T_LeftHandSide -> T_Patterns -> T_LeftHandSide
data Inh_Literal
Inh_Literal :: Inh_Literal
data Syn_Literal
Syn_Literal :: (Literal) -> Syn_Literal
self_Syn_Literal :: Syn_Literal -> (Literal)
wrap_Literal :: T_Literal -> Inh_Literal -> (Syn_Literal)
sem_Literal :: Literal -> T_Literal
newtype T_Literal
T_Literal :: Identity (T_Literal_s86) -> T_Literal
attach_T_Literal :: T_Literal -> Identity (T_Literal_s86)
newtype T_Literal_s86
C_Literal_s86 :: (T_Literal_v85) -> T_Literal_s86
inv_Literal_s86 :: T_Literal_s86 -> (T_Literal_v85)
data T_Literal_s87
C_Literal_s87 :: T_Literal_s87
type T_Literal_v85 = (T_Literal_vIn85) -> (T_Literal_vOut85)
data T_Literal_vIn85
T_Literal_vIn85 :: T_Literal_vIn85
data T_Literal_vOut85
T_Literal_vOut85 :: (Literal) -> T_Literal_vOut85
sem_Literal_Int :: T_Range -> (String) -> T_Literal
sem_Literal_Char :: T_Range -> (String) -> T_Literal
sem_Literal_Float :: T_Range -> (String) -> T_Literal
sem_Literal_String :: T_Range -> (String) -> T_Literal
data Inh_MaybeDeclarations
Inh_MaybeDeclarations :: Inh_MaybeDeclarations
data Syn_MaybeDeclarations
Syn_MaybeDeclarations :: (MaybeDeclarations) -> Syn_MaybeDeclarations
self_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> (MaybeDeclarations)
wrap_MaybeDeclarations :: T_MaybeDeclarations -> Inh_MaybeDeclarations -> (Syn_MaybeDeclarations)
sem_MaybeDeclarations :: MaybeDeclarations -> T_MaybeDeclarations
newtype T_MaybeDeclarations
T_MaybeDeclarations :: Identity (T_MaybeDeclarations_s89) -> T_MaybeDeclarations
attach_T_MaybeDeclarations :: T_MaybeDeclarations -> Identity (T_MaybeDeclarations_s89)
newtype T_MaybeDeclarations_s89
C_MaybeDeclarations_s89 :: (T_MaybeDeclarations_v88) -> T_MaybeDeclarations_s89
inv_MaybeDeclarations_s89 :: T_MaybeDeclarations_s89 -> (T_MaybeDeclarations_v88)
data T_MaybeDeclarations_s90
C_MaybeDeclarations_s90 :: T_MaybeDeclarations_s90
type T_MaybeDeclarations_v88 = (T_MaybeDeclarations_vIn88) -> (T_MaybeDeclarations_vOut88)
data T_MaybeDeclarations_vIn88
T_MaybeDeclarations_vIn88 :: T_MaybeDeclarations_vIn88
data T_MaybeDeclarations_vOut88
T_MaybeDeclarations_vOut88 :: (MaybeDeclarations) -> T_MaybeDeclarations_vOut88
sem_MaybeDeclarations_Nothing :: T_MaybeDeclarations
sem_MaybeDeclarations_Just :: T_Declarations -> T_MaybeDeclarations
data Inh_MaybeExports
Inh_MaybeExports :: Inh_MaybeExports
data Syn_MaybeExports
Syn_MaybeExports :: (MaybeExports) -> Syn_MaybeExports
self_Syn_MaybeExports :: Syn_MaybeExports -> (MaybeExports)
wrap_MaybeExports :: T_MaybeExports -> Inh_MaybeExports -> (Syn_MaybeExports)
sem_MaybeExports :: MaybeExports -> T_MaybeExports
newtype T_MaybeExports
T_MaybeExports :: Identity (T_MaybeExports_s92) -> T_MaybeExports
attach_T_MaybeExports :: T_MaybeExports -> Identity (T_MaybeExports_s92)
newtype T_MaybeExports_s92
C_MaybeExports_s92 :: (T_MaybeExports_v91) -> T_MaybeExports_s92
inv_MaybeExports_s92 :: T_MaybeExports_s92 -> (T_MaybeExports_v91)
data T_MaybeExports_s93
C_MaybeExports_s93 :: T_MaybeExports_s93
type T_MaybeExports_v91 = (T_MaybeExports_vIn91) -> (T_MaybeExports_vOut91)
data T_MaybeExports_vIn91
T_MaybeExports_vIn91 :: T_MaybeExports_vIn91
data T_MaybeExports_vOut91
T_MaybeExports_vOut91 :: (MaybeExports) -> T_MaybeExports_vOut91
sem_MaybeExports_Nothing :: T_MaybeExports
sem_MaybeExports_Just :: T_Exports -> T_MaybeExports
data Inh_MaybeExpression
Inh_MaybeExpression :: Inh_MaybeExpression
data Syn_MaybeExpression
Syn_MaybeExpression :: (MaybeExpression) -> Syn_MaybeExpression
self_Syn_MaybeExpression :: Syn_MaybeExpression -> (MaybeExpression)
wrap_MaybeExpression :: T_MaybeExpression -> Inh_MaybeExpression -> (Syn_MaybeExpression)
sem_MaybeExpression :: MaybeExpression -> T_MaybeExpression
newtype T_MaybeExpression
T_MaybeExpression :: Identity (T_MaybeExpression_s95) -> T_MaybeExpression
attach_T_MaybeExpression :: T_MaybeExpression -> Identity (T_MaybeExpression_s95)
newtype T_MaybeExpression_s95
C_MaybeExpression_s95 :: (T_MaybeExpression_v94) -> T_MaybeExpression_s95
inv_MaybeExpression_s95 :: T_MaybeExpression_s95 -> (T_MaybeExpression_v94)
data T_MaybeExpression_s96
C_MaybeExpression_s96 :: T_MaybeExpression_s96
type T_MaybeExpression_v94 = (T_MaybeExpression_vIn94) -> (T_MaybeExpression_vOut94)
data T_MaybeExpression_vIn94
T_MaybeExpression_vIn94 :: T_MaybeExpression_vIn94
data T_MaybeExpression_vOut94
T_MaybeExpression_vOut94 :: (MaybeExpression) -> T_MaybeExpression_vOut94
sem_MaybeExpression_Nothing :: T_MaybeExpression
sem_MaybeExpression_Just :: T_Expression -> T_MaybeExpression
data Inh_MaybeImportSpecification
Inh_MaybeImportSpecification :: Inh_MaybeImportSpecification
data Syn_MaybeImportSpecification
Syn_MaybeImportSpecification :: ([Id]) -> (MaybeImportSpecification) -> Syn_MaybeImportSpecification
imps_Syn_MaybeImportSpecification :: Syn_MaybeImportSpecification -> ([Id])
self_Syn_MaybeImportSpecification :: Syn_MaybeImportSpecification -> (MaybeImportSpecification)
wrap_MaybeImportSpecification :: T_MaybeImportSpecification -> Inh_MaybeImportSpecification -> (Syn_MaybeImportSpecification)
sem_MaybeImportSpecification :: MaybeImportSpecification -> T_MaybeImportSpecification
newtype T_MaybeImportSpecification
T_MaybeImportSpecification :: Identity (T_MaybeImportSpecification_s98) -> T_MaybeImportSpecification
attach_T_MaybeImportSpecification :: T_MaybeImportSpecification -> Identity (T_MaybeImportSpecification_s98)
newtype T_MaybeImportSpecification_s98
C_MaybeImportSpecification_s98 :: (T_MaybeImportSpecification_v97) -> T_MaybeImportSpecification_s98
inv_MaybeImportSpecification_s98 :: T_MaybeImportSpecification_s98 -> (T_MaybeImportSpecification_v97)
data T_MaybeImportSpecification_s99
C_MaybeImportSpecification_s99 :: T_MaybeImportSpecification_s99
type T_MaybeImportSpecification_v97 = (T_MaybeImportSpecification_vIn97) -> (T_MaybeImportSpecification_vOut97)
data T_MaybeImportSpecification_vIn97
T_MaybeImportSpecification_vIn97 :: T_MaybeImportSpecification_vIn97
data T_MaybeImportSpecification_vOut97
T_MaybeImportSpecification_vOut97 :: ([Id]) -> (MaybeImportSpecification) -> T_MaybeImportSpecification_vOut97
sem_MaybeImportSpecification_Nothing :: T_MaybeImportSpecification
sem_MaybeImportSpecification_Just :: T_ImportSpecification -> T_MaybeImportSpecification
data Inh_MaybeInt
Inh_MaybeInt :: Inh_MaybeInt
data Syn_MaybeInt
Syn_MaybeInt :: (MaybeInt) -> Syn_MaybeInt
self_Syn_MaybeInt :: Syn_MaybeInt -> (MaybeInt)
wrap_MaybeInt :: T_MaybeInt -> Inh_MaybeInt -> (Syn_MaybeInt)
sem_MaybeInt :: MaybeInt -> T_MaybeInt
newtype T_MaybeInt
T_MaybeInt :: Identity (T_MaybeInt_s101) -> T_MaybeInt
attach_T_MaybeInt :: T_MaybeInt -> Identity (T_MaybeInt_s101)
newtype T_MaybeInt_s101
C_MaybeInt_s101 :: (T_MaybeInt_v100) -> T_MaybeInt_s101
inv_MaybeInt_s101 :: T_MaybeInt_s101 -> (T_MaybeInt_v100)
data T_MaybeInt_s102
C_MaybeInt_s102 :: T_MaybeInt_s102
type T_MaybeInt_v100 = (T_MaybeInt_vIn100) -> (T_MaybeInt_vOut100)
data T_MaybeInt_vIn100
T_MaybeInt_vIn100 :: T_MaybeInt_vIn100
data T_MaybeInt_vOut100
T_MaybeInt_vOut100 :: (MaybeInt) -> T_MaybeInt_vOut100
sem_MaybeInt_Nothing :: T_MaybeInt
sem_MaybeInt_Just :: (Int) -> T_MaybeInt
data Inh_MaybeName
Inh_MaybeName :: Inh_MaybeName
data Syn_MaybeName
Syn_MaybeName :: (Bool) -> (Maybe Name) -> (MaybeName) -> Syn_MaybeName
isNothing_Syn_MaybeName :: Syn_MaybeName -> (Bool)
name_Syn_MaybeName :: Syn_MaybeName -> (Maybe Name)
self_Syn_MaybeName :: Syn_MaybeName -> (MaybeName)
wrap_MaybeName :: T_MaybeName -> Inh_MaybeName -> (Syn_MaybeName)
sem_MaybeName :: MaybeName -> T_MaybeName
newtype T_MaybeName
T_MaybeName :: Identity (T_MaybeName_s104) -> T_MaybeName
attach_T_MaybeName :: T_MaybeName -> Identity (T_MaybeName_s104)
newtype T_MaybeName_s104
C_MaybeName_s104 :: (T_MaybeName_v103) -> T_MaybeName_s104
inv_MaybeName_s104 :: T_MaybeName_s104 -> (T_MaybeName_v103)
data T_MaybeName_s105
C_MaybeName_s105 :: T_MaybeName_s105
type T_MaybeName_v103 = (T_MaybeName_vIn103) -> (T_MaybeName_vOut103)
data T_MaybeName_vIn103
T_MaybeName_vIn103 :: T_MaybeName_vIn103
data T_MaybeName_vOut103
T_MaybeName_vOut103 :: (Bool) -> (Maybe Name) -> (MaybeName) -> T_MaybeName_vOut103
sem_MaybeName_Nothing :: T_MaybeName
sem_MaybeName_Just :: T_Name -> T_MaybeName
data Inh_MaybeNames
Inh_MaybeNames :: Inh_MaybeNames
data Syn_MaybeNames
Syn_MaybeNames :: (Maybe [Name]) -> (MaybeNames) -> Syn_MaybeNames
names_Syn_MaybeNames :: Syn_MaybeNames -> (Maybe [Name])
self_Syn_MaybeNames :: Syn_MaybeNames -> (MaybeNames)
wrap_MaybeNames :: T_MaybeNames -> Inh_MaybeNames -> (Syn_MaybeNames)
sem_MaybeNames :: MaybeNames -> T_MaybeNames
newtype T_MaybeNames
T_MaybeNames :: Identity (T_MaybeNames_s107) -> T_MaybeNames
attach_T_MaybeNames :: T_MaybeNames -> Identity (T_MaybeNames_s107)
newtype T_MaybeNames_s107
C_MaybeNames_s107 :: (T_MaybeNames_v106) -> T_MaybeNames_s107
inv_MaybeNames_s107 :: T_MaybeNames_s107 -> (T_MaybeNames_v106)
data T_MaybeNames_s108
C_MaybeNames_s108 :: T_MaybeNames_s108
type T_MaybeNames_v106 = (T_MaybeNames_vIn106) -> (T_MaybeNames_vOut106)
data T_MaybeNames_vIn106
T_MaybeNames_vIn106 :: T_MaybeNames_vIn106
data T_MaybeNames_vOut106
T_MaybeNames_vOut106 :: (Maybe [Name]) -> (MaybeNames) -> T_MaybeNames_vOut106
sem_MaybeNames_Nothing :: T_MaybeNames
sem_MaybeNames_Just :: T_Names -> T_MaybeNames
data Inh_Module
Inh_Module :: Inh_Module
data Syn_Module
Syn_Module :: ([(CoreDecl, [Id])]) -> (Module) -> Syn_Module
coreImportDecls_Syn_Module :: Syn_Module -> ([(CoreDecl, [Id])])
self_Syn_Module :: Syn_Module -> (Module)
wrap_Module :: T_Module -> Inh_Module -> (Syn_Module)
sem_Module :: Module -> T_Module
newtype T_Module
T_Module :: Identity (T_Module_s110) -> T_Module
attach_T_Module :: T_Module -> Identity (T_Module_s110)
newtype T_Module_s110
C_Module_s110 :: (T_Module_v109) -> T_Module_s110
inv_Module_s110 :: T_Module_s110 -> (T_Module_v109)
data T_Module_s111
C_Module_s111 :: T_Module_s111
type T_Module_v109 = (T_Module_vIn109) -> (T_Module_vOut109)
data T_Module_vIn109
T_Module_vIn109 :: T_Module_vIn109
data T_Module_vOut109
T_Module_vOut109 :: ([(CoreDecl, [Id])]) -> (Module) -> T_Module_vOut109
sem_Module_Module :: T_Range -> T_MaybeName -> T_MaybeExports -> T_Body -> T_Module
data Inh_Name
Inh_Name :: Inh_Name
data Syn_Name
Syn_Name :: (Name) -> Syn_Name
self_Syn_Name :: Syn_Name -> (Name)
wrap_Name :: T_Name -> Inh_Name -> (Syn_Name)
sem_Name :: Name -> T_Name
newtype T_Name
T_Name :: Identity (T_Name_s113) -> T_Name
attach_T_Name :: T_Name -> Identity (T_Name_s113)
newtype T_Name_s113
C_Name_s113 :: (T_Name_v112) -> T_Name_s113
inv_Name_s113 :: T_Name_s113 -> (T_Name_v112)
data T_Name_s114
C_Name_s114 :: T_Name_s114
type T_Name_v112 = (T_Name_vIn112) -> (T_Name_vOut112)
data T_Name_vIn112
T_Name_vIn112 :: T_Name_vIn112
data T_Name_vOut112
T_Name_vOut112 :: (Name) -> T_Name_vOut112
sem_Name_Identifier :: T_Range -> T_Strings -> (String) -> T_Name
sem_Name_Operator :: T_Range -> T_Strings -> (String) -> T_Name
sem_Name_Special :: T_Range -> T_Strings -> (String) -> T_Name
data Inh_Names
Inh_Names :: Inh_Names
data Syn_Names
Syn_Names :: ([Name]) -> (Names) -> Syn_Names
names_Syn_Names :: Syn_Names -> ([Name])
self_Syn_Names :: Syn_Names -> (Names)
wrap_Names :: T_Names -> Inh_Names -> (Syn_Names)
sem_Names :: Names -> T_Names
newtype T_Names
T_Names :: Identity (T_Names_s116) -> T_Names
attach_T_Names :: T_Names -> Identity (T_Names_s116)
newtype T_Names_s116
C_Names_s116 :: (T_Names_v115) -> T_Names_s116
inv_Names_s116 :: T_Names_s116 -> (T_Names_v115)
data T_Names_s117
C_Names_s117 :: T_Names_s117
type T_Names_v115 = (T_Names_vIn115) -> (T_Names_vOut115)
data T_Names_vIn115
T_Names_vIn115 :: T_Names_vIn115
data T_Names_vOut115
T_Names_vOut115 :: ([Name]) -> (Names) -> T_Names_vOut115
sem_Names_Cons :: T_Name -> T_Names -> T_Names
sem_Names_Nil :: T_Names
data Inh_Pattern
Inh_Pattern :: Inh_Pattern
data Syn_Pattern
Syn_Pattern :: (Pattern) -> Syn_Pattern
self_Syn_Pattern :: Syn_Pattern -> (Pattern)
wrap_Pattern :: T_Pattern -> Inh_Pattern -> (Syn_Pattern)
sem_Pattern :: Pattern -> T_Pattern
newtype T_Pattern
T_Pattern :: Identity (T_Pattern_s119) -> T_Pattern
attach_T_Pattern :: T_Pattern -> Identity (T_Pattern_s119)
newtype T_Pattern_s119
C_Pattern_s119 :: (T_Pattern_v118) -> T_Pattern_s119
inv_Pattern_s119 :: T_Pattern_s119 -> (T_Pattern_v118)
data T_Pattern_s120
C_Pattern_s120 :: T_Pattern_s120
type T_Pattern_v118 = (T_Pattern_vIn118) -> (T_Pattern_vOut118)
data T_Pattern_vIn118
T_Pattern_vIn118 :: T_Pattern_vIn118
data T_Pattern_vOut118
T_Pattern_vOut118 :: (Pattern) -> T_Pattern_vOut118
sem_Pattern_Hole :: T_Range -> (Integer) -> T_Pattern
sem_Pattern_Literal :: T_Range -> T_Literal -> T_Pattern
sem_Pattern_Variable :: T_Range -> T_Name -> T_Pattern
sem_Pattern_Constructor :: T_Range -> T_Name -> T_Patterns -> T_Pattern
sem_Pattern_Parenthesized :: T_Range -> T_Pattern -> T_Pattern
sem_Pattern_InfixConstructor :: T_Range -> T_Pattern -> T_Name -> T_Pattern -> T_Pattern
sem_Pattern_List :: T_Range -> T_Patterns -> T_Pattern
sem_Pattern_Tuple :: T_Range -> T_Patterns -> T_Pattern
sem_Pattern_Record :: T_Range -> T_Name -> T_RecordPatternBindings -> T_Pattern
sem_Pattern_Negate :: T_Range -> T_Literal -> T_Pattern
sem_Pattern_As :: T_Range -> T_Name -> T_Pattern -> T_Pattern
sem_Pattern_Wildcard :: T_Range -> T_Pattern
sem_Pattern_Irrefutable :: T_Range -> T_Pattern -> T_Pattern
sem_Pattern_Successor :: T_Range -> T_Name -> T_Literal -> T_Pattern
sem_Pattern_NegateFloat :: T_Range -> T_Literal -> T_Pattern
data Inh_Patterns
Inh_Patterns :: Inh_Patterns
data Syn_Patterns
Syn_Patterns :: (Patterns) -> Syn_Patterns
self_Syn_Patterns :: Syn_Patterns -> (Patterns)
wrap_Patterns :: T_Patterns -> Inh_Patterns -> (Syn_Patterns)
sem_Patterns :: Patterns -> T_Patterns
newtype T_Patterns
T_Patterns :: Identity (T_Patterns_s122) -> T_Patterns
attach_T_Patterns :: T_Patterns -> Identity (T_Patterns_s122)
newtype T_Patterns_s122
C_Patterns_s122 :: (T_Patterns_v121) -> T_Patterns_s122
inv_Patterns_s122 :: T_Patterns_s122 -> (T_Patterns_v121)
data T_Patterns_s123
C_Patterns_s123 :: T_Patterns_s123
type T_Patterns_v121 = (T_Patterns_vIn121) -> (T_Patterns_vOut121)
data T_Patterns_vIn121
T_Patterns_vIn121 :: T_Patterns_vIn121
data T_Patterns_vOut121
T_Patterns_vOut121 :: (Patterns) -> T_Patterns_vOut121
sem_Patterns_Cons :: T_Pattern -> T_Patterns -> T_Patterns
sem_Patterns_Nil :: T_Patterns
data Inh_Position
Inh_Position :: Inh_Position
data Syn_Position
Syn_Position :: (Position) -> Syn_Position
self_Syn_Position :: Syn_Position -> (Position)
wrap_Position :: T_Position -> Inh_Position -> (Syn_Position)
sem_Position :: Position -> T_Position
newtype T_Position
T_Position :: Identity (T_Position_s125) -> T_Position
attach_T_Position :: T_Position -> Identity (T_Position_s125)
newtype T_Position_s125
C_Position_s125 :: (T_Position_v124) -> T_Position_s125
inv_Position_s125 :: T_Position_s125 -> (T_Position_v124)
data T_Position_s126
C_Position_s126 :: T_Position_s126
type T_Position_v124 = (T_Position_vIn124) -> (T_Position_vOut124)
data T_Position_vIn124
T_Position_vIn124 :: T_Position_vIn124
data T_Position_vOut124
T_Position_vOut124 :: (Position) -> T_Position_vOut124
sem_Position_Position :: (String) -> (Int) -> (Int) -> T_Position
sem_Position_Unknown :: T_Position
data Inh_Qualifier
Inh_Qualifier :: Inh_Qualifier
data Syn_Qualifier
Syn_Qualifier :: (Qualifier) -> Syn_Qualifier
self_Syn_Qualifier :: Syn_Qualifier -> (Qualifier)
wrap_Qualifier :: T_Qualifier -> Inh_Qualifier -> (Syn_Qualifier)
sem_Qualifier :: Qualifier -> T_Qualifier
newtype T_Qualifier
T_Qualifier :: Identity (T_Qualifier_s128) -> T_Qualifier
attach_T_Qualifier :: T_Qualifier -> Identity (T_Qualifier_s128)
newtype T_Qualifier_s128
C_Qualifier_s128 :: (T_Qualifier_v127) -> T_Qualifier_s128
inv_Qualifier_s128 :: T_Qualifier_s128 -> (T_Qualifier_v127)
data T_Qualifier_s129
C_Qualifier_s129 :: T_Qualifier_s129
type T_Qualifier_v127 = (T_Qualifier_vIn127) -> (T_Qualifier_vOut127)
data T_Qualifier_vIn127
T_Qualifier_vIn127 :: T_Qualifier_vIn127
data T_Qualifier_vOut127
T_Qualifier_vOut127 :: (Qualifier) -> T_Qualifier_vOut127
sem_Qualifier_Guard :: T_Range -> T_Expression -> T_Qualifier
sem_Qualifier_Let :: T_Range -> T_Declarations -> T_Qualifier
sem_Qualifier_Generator :: T_Range -> T_Pattern -> T_Expression -> T_Qualifier
sem_Qualifier_Empty :: T_Range -> T_Qualifier
data Inh_Qualifiers
Inh_Qualifiers :: Inh_Qualifiers
data Syn_Qualifiers
Syn_Qualifiers :: (Qualifiers) -> Syn_Qualifiers
self_Syn_Qualifiers :: Syn_Qualifiers -> (Qualifiers)
wrap_Qualifiers :: T_Qualifiers -> Inh_Qualifiers -> (Syn_Qualifiers)
sem_Qualifiers :: Qualifiers -> T_Qualifiers
newtype T_Qualifiers
T_Qualifiers :: Identity (T_Qualifiers_s131) -> T_Qualifiers
attach_T_Qualifiers :: T_Qualifiers -> Identity (T_Qualifiers_s131)
newtype T_Qualifiers_s131
C_Qualifiers_s131 :: (T_Qualifiers_v130) -> T_Qualifiers_s131
inv_Qualifiers_s131 :: T_Qualifiers_s131 -> (T_Qualifiers_v130)
data T_Qualifiers_s132
C_Qualifiers_s132 :: T_Qualifiers_s132
type T_Qualifiers_v130 = (T_Qualifiers_vIn130) -> (T_Qualifiers_vOut130)
data T_Qualifiers_vIn130
T_Qualifiers_vIn130 :: T_Qualifiers_vIn130
data T_Qualifiers_vOut130
T_Qualifiers_vOut130 :: (Qualifiers) -> T_Qualifiers_vOut130
sem_Qualifiers_Cons :: T_Qualifier -> T_Qualifiers -> T_Qualifiers
sem_Qualifiers_Nil :: T_Qualifiers
data Inh_Range
Inh_Range :: Inh_Range
data Syn_Range
Syn_Range :: (Range) -> Syn_Range
self_Syn_Range :: Syn_Range -> (Range)
wrap_Range :: T_Range -> Inh_Range -> (Syn_Range)
sem_Range :: Range -> T_Range
newtype T_Range
T_Range :: Identity (T_Range_s134) -> T_Range
attach_T_Range :: T_Range -> Identity (T_Range_s134)
newtype T_Range_s134
C_Range_s134 :: (T_Range_v133) -> T_Range_s134
inv_Range_s134 :: T_Range_s134 -> (T_Range_v133)
data T_Range_s135
C_Range_s135 :: T_Range_s135
type T_Range_v133 = (T_Range_vIn133) -> (T_Range_vOut133)
data T_Range_vIn133
T_Range_vIn133 :: T_Range_vIn133
data T_Range_vOut133
T_Range_vOut133 :: (Range) -> T_Range_vOut133
sem_Range_Range :: T_Position -> T_Position -> T_Range
data Inh_RecordExpressionBinding
Inh_RecordExpressionBinding :: Inh_RecordExpressionBinding
data Syn_RecordExpressionBinding
Syn_RecordExpressionBinding :: (RecordExpressionBinding) -> Syn_RecordExpressionBinding
self_Syn_RecordExpressionBinding :: Syn_RecordExpressionBinding -> (RecordExpressionBinding)
wrap_RecordExpressionBinding :: T_RecordExpressionBinding -> Inh_RecordExpressionBinding -> (Syn_RecordExpressionBinding)
sem_RecordExpressionBinding :: RecordExpressionBinding -> T_RecordExpressionBinding
newtype T_RecordExpressionBinding
T_RecordExpressionBinding :: Identity (T_RecordExpressionBinding_s137) -> T_RecordExpressionBinding
attach_T_RecordExpressionBinding :: T_RecordExpressionBinding -> Identity (T_RecordExpressionBinding_s137)
newtype T_RecordExpressionBinding_s137
C_RecordExpressionBinding_s137 :: (T_RecordExpressionBinding_v136) -> T_RecordExpressionBinding_s137
inv_RecordExpressionBinding_s137 :: T_RecordExpressionBinding_s137 -> (T_RecordExpressionBinding_v136)
data T_RecordExpressionBinding_s138
C_RecordExpressionBinding_s138 :: T_RecordExpressionBinding_s138
type T_RecordExpressionBinding_v136 = (T_RecordExpressionBinding_vIn136) -> (T_RecordExpressionBinding_vOut136)
data T_RecordExpressionBinding_vIn136
T_RecordExpressionBinding_vIn136 :: T_RecordExpressionBinding_vIn136
data T_RecordExpressionBinding_vOut136
T_RecordExpressionBinding_vOut136 :: (RecordExpressionBinding) -> T_RecordExpressionBinding_vOut136
sem_RecordExpressionBinding_RecordExpressionBinding :: T_Range -> T_Name -> T_Expression -> T_RecordExpressionBinding
data Inh_RecordExpressionBindings
Inh_RecordExpressionBindings :: Inh_RecordExpressionBindings
data Syn_RecordExpressionBindings
Syn_RecordExpressionBindings :: (RecordExpressionBindings) -> Syn_RecordExpressionBindings
self_Syn_RecordExpressionBindings :: Syn_RecordExpressionBindings -> (RecordExpressionBindings)
wrap_RecordExpressionBindings :: T_RecordExpressionBindings -> Inh_RecordExpressionBindings -> (Syn_RecordExpressionBindings)
sem_RecordExpressionBindings :: RecordExpressionBindings -> T_RecordExpressionBindings
newtype T_RecordExpressionBindings
T_RecordExpressionBindings :: Identity (T_RecordExpressionBindings_s140) -> T_RecordExpressionBindings
attach_T_RecordExpressionBindings :: T_RecordExpressionBindings -> Identity (T_RecordExpressionBindings_s140)
newtype T_RecordExpressionBindings_s140
C_RecordExpressionBindings_s140 :: (T_RecordExpressionBindings_v139) -> T_RecordExpressionBindings_s140
inv_RecordExpressionBindings_s140 :: T_RecordExpressionBindings_s140 -> (T_RecordExpressionBindings_v139)
data T_RecordExpressionBindings_s141
C_RecordExpressionBindings_s141 :: T_RecordExpressionBindings_s141
type T_RecordExpressionBindings_v139 = (T_RecordExpressionBindings_vIn139) -> (T_RecordExpressionBindings_vOut139)
data T_RecordExpressionBindings_vIn139
T_RecordExpressionBindings_vIn139 :: T_RecordExpressionBindings_vIn139
data T_RecordExpressionBindings_vOut139
T_RecordExpressionBindings_vOut139 :: (RecordExpressionBindings) -> T_RecordExpressionBindings_vOut139
sem_RecordExpressionBindings_Cons :: T_RecordExpressionBinding -> T_RecordExpressionBindings -> T_RecordExpressionBindings
sem_RecordExpressionBindings_Nil :: T_RecordExpressionBindings
data Inh_RecordPatternBinding
Inh_RecordPatternBinding :: Inh_RecordPatternBinding
data Syn_RecordPatternBinding
Syn_RecordPatternBinding :: (RecordPatternBinding) -> Syn_RecordPatternBinding
self_Syn_RecordPatternBinding :: Syn_RecordPatternBinding -> (RecordPatternBinding)
wrap_RecordPatternBinding :: T_RecordPatternBinding -> Inh_RecordPatternBinding -> (Syn_RecordPatternBinding)
sem_RecordPatternBinding :: RecordPatternBinding -> T_RecordPatternBinding
newtype T_RecordPatternBinding
T_RecordPatternBinding :: Identity (T_RecordPatternBinding_s143) -> T_RecordPatternBinding
attach_T_RecordPatternBinding :: T_RecordPatternBinding -> Identity (T_RecordPatternBinding_s143)
newtype T_RecordPatternBinding_s143
C_RecordPatternBinding_s143 :: (T_RecordPatternBinding_v142) -> T_RecordPatternBinding_s143
inv_RecordPatternBinding_s143 :: T_RecordPatternBinding_s143 -> (T_RecordPatternBinding_v142)
data T_RecordPatternBinding_s144
C_RecordPatternBinding_s144 :: T_RecordPatternBinding_s144
type T_RecordPatternBinding_v142 = (T_RecordPatternBinding_vIn142) -> (T_RecordPatternBinding_vOut142)
data T_RecordPatternBinding_vIn142
T_RecordPatternBinding_vIn142 :: T_RecordPatternBinding_vIn142
data T_RecordPatternBinding_vOut142
T_RecordPatternBinding_vOut142 :: (RecordPatternBinding) -> T_RecordPatternBinding_vOut142
sem_RecordPatternBinding_RecordPatternBinding :: T_Range -> T_Name -> T_Pattern -> T_RecordPatternBinding
data Inh_RecordPatternBindings
Inh_RecordPatternBindings :: Inh_RecordPatternBindings
data Syn_RecordPatternBindings
Syn_RecordPatternBindings :: (RecordPatternBindings) -> Syn_RecordPatternBindings
self_Syn_RecordPatternBindings :: Syn_RecordPatternBindings -> (RecordPatternBindings)
wrap_RecordPatternBindings :: T_RecordPatternBindings -> Inh_RecordPatternBindings -> (Syn_RecordPatternBindings)
sem_RecordPatternBindings :: RecordPatternBindings -> T_RecordPatternBindings
newtype T_RecordPatternBindings
T_RecordPatternBindings :: Identity (T_RecordPatternBindings_s146) -> T_RecordPatternBindings
attach_T_RecordPatternBindings :: T_RecordPatternBindings -> Identity (T_RecordPatternBindings_s146)
newtype T_RecordPatternBindings_s146
C_RecordPatternBindings_s146 :: (T_RecordPatternBindings_v145) -> T_RecordPatternBindings_s146
inv_RecordPatternBindings_s146 :: T_RecordPatternBindings_s146 -> (T_RecordPatternBindings_v145)
data T_RecordPatternBindings_s147
C_RecordPatternBindings_s147 :: T_RecordPatternBindings_s147
type T_RecordPatternBindings_v145 = (T_RecordPatternBindings_vIn145) -> (T_RecordPatternBindings_vOut145)
data T_RecordPatternBindings_vIn145
T_RecordPatternBindings_vIn145 :: T_RecordPatternBindings_vIn145
data T_RecordPatternBindings_vOut145
T_RecordPatternBindings_vOut145 :: (RecordPatternBindings) -> T_RecordPatternBindings_vOut145
sem_RecordPatternBindings_Cons :: T_RecordPatternBinding -> T_RecordPatternBindings -> T_RecordPatternBindings
sem_RecordPatternBindings_Nil :: T_RecordPatternBindings
data Inh_RightHandSide
Inh_RightHandSide :: Inh_RightHandSide
data Syn_RightHandSide
Syn_RightHandSide :: (RightHandSide) -> Syn_RightHandSide
self_Syn_RightHandSide :: Syn_RightHandSide -> (RightHandSide)
wrap_RightHandSide :: T_RightHandSide -> Inh_RightHandSide -> (Syn_RightHandSide)
sem_RightHandSide :: RightHandSide -> T_RightHandSide
newtype T_RightHandSide
T_RightHandSide :: Identity (T_RightHandSide_s149) -> T_RightHandSide
attach_T_RightHandSide :: T_RightHandSide -> Identity (T_RightHandSide_s149)
newtype T_RightHandSide_s149
C_RightHandSide_s149 :: (T_RightHandSide_v148) -> T_RightHandSide_s149
inv_RightHandSide_s149 :: T_RightHandSide_s149 -> (T_RightHandSide_v148)
data T_RightHandSide_s150
C_RightHandSide_s150 :: T_RightHandSide_s150
type T_RightHandSide_v148 = (T_RightHandSide_vIn148) -> (T_RightHandSide_vOut148)
data T_RightHandSide_vIn148
T_RightHandSide_vIn148 :: T_RightHandSide_vIn148
data T_RightHandSide_vOut148
T_RightHandSide_vOut148 :: (RightHandSide) -> T_RightHandSide_vOut148
sem_RightHandSide_Expression :: T_Range -> T_Expression -> T_MaybeDeclarations -> T_RightHandSide
sem_RightHandSide_Guarded :: T_Range -> T_GuardedExpressions -> T_MaybeDeclarations -> T_RightHandSide
data Inh_SimpleType
Inh_SimpleType :: Inh_SimpleType
data Syn_SimpleType
Syn_SimpleType :: (SimpleType) -> Syn_SimpleType
self_Syn_SimpleType :: Syn_SimpleType -> (SimpleType)
wrap_SimpleType :: T_SimpleType -> Inh_SimpleType -> (Syn_SimpleType)
sem_SimpleType :: SimpleType -> T_SimpleType
newtype T_SimpleType
T_SimpleType :: Identity (T_SimpleType_s152) -> T_SimpleType
attach_T_SimpleType :: T_SimpleType -> Identity (T_SimpleType_s152)
newtype T_SimpleType_s152
C_SimpleType_s152 :: (T_SimpleType_v151) -> T_SimpleType_s152
inv_SimpleType_s152 :: T_SimpleType_s152 -> (T_SimpleType_v151)
data T_SimpleType_s153
C_SimpleType_s153 :: T_SimpleType_s153
type T_SimpleType_v151 = (T_SimpleType_vIn151) -> (T_SimpleType_vOut151)
data T_SimpleType_vIn151
T_SimpleType_vIn151 :: T_SimpleType_vIn151
data T_SimpleType_vOut151
T_SimpleType_vOut151 :: (SimpleType) -> T_SimpleType_vOut151
sem_SimpleType_SimpleType :: T_Range -> T_Name -> T_Names -> T_SimpleType
data Inh_Statement
Inh_Statement :: Inh_Statement
data Syn_Statement
Syn_Statement :: (Statement) -> Syn_Statement
self_Syn_Statement :: Syn_Statement -> (Statement)
wrap_Statement :: T_Statement -> Inh_Statement -> (Syn_Statement)
sem_Statement :: Statement -> T_Statement
newtype T_Statement
T_Statement :: Identity (T_Statement_s155) -> T_Statement
attach_T_Statement :: T_Statement -> Identity (T_Statement_s155)
newtype T_Statement_s155
C_Statement_s155 :: (T_Statement_v154) -> T_Statement_s155
inv_Statement_s155 :: T_Statement_s155 -> (T_Statement_v154)
data T_Statement_s156
C_Statement_s156 :: T_Statement_s156
type T_Statement_v154 = (T_Statement_vIn154) -> (T_Statement_vOut154)
data T_Statement_vIn154
T_Statement_vIn154 :: T_Statement_vIn154
data T_Statement_vOut154
T_Statement_vOut154 :: (Statement) -> T_Statement_vOut154
sem_Statement_Expression :: T_Range -> T_Expression -> T_Statement
sem_Statement_Let :: T_Range -> T_Declarations -> T_Statement
sem_Statement_Generator :: T_Range -> T_Pattern -> T_Expression -> T_Statement
sem_Statement_Empty :: T_Range -> T_Statement
data Inh_Statements
Inh_Statements :: Inh_Statements
data Syn_Statements
Syn_Statements :: (Statements) -> Syn_Statements
self_Syn_Statements :: Syn_Statements -> (Statements)
wrap_Statements :: T_Statements -> Inh_Statements -> (Syn_Statements)
sem_Statements :: Statements -> T_Statements
newtype T_Statements
T_Statements :: Identity (T_Statements_s158) -> T_Statements
attach_T_Statements :: T_Statements -> Identity (T_Statements_s158)
newtype T_Statements_s158
C_Statements_s158 :: (T_Statements_v157) -> T_Statements_s158
inv_Statements_s158 :: T_Statements_s158 -> (T_Statements_v157)
data T_Statements_s159
C_Statements_s159 :: T_Statements_s159
type T_Statements_v157 = (T_Statements_vIn157) -> (T_Statements_vOut157)
data T_Statements_vIn157
T_Statements_vIn157 :: T_Statements_vIn157
data T_Statements_vOut157
T_Statements_vOut157 :: (Statements) -> T_Statements_vOut157
sem_Statements_Cons :: T_Statement -> T_Statements -> T_Statements
sem_Statements_Nil :: T_Statements
data Inh_Strings
Inh_Strings :: Inh_Strings
data Syn_Strings
Syn_Strings :: (Strings) -> Syn_Strings
self_Syn_Strings :: Syn_Strings -> (Strings)
wrap_Strings :: T_Strings -> Inh_Strings -> (Syn_Strings)
sem_Strings :: Strings -> T_Strings
newtype T_Strings
T_Strings :: Identity (T_Strings_s161) -> T_Strings
attach_T_Strings :: T_Strings -> Identity (T_Strings_s161)
newtype T_Strings_s161
C_Strings_s161 :: (T_Strings_v160) -> T_Strings_s161
inv_Strings_s161 :: T_Strings_s161 -> (T_Strings_v160)
data T_Strings_s162
C_Strings_s162 :: T_Strings_s162
type T_Strings_v160 = (T_Strings_vIn160) -> (T_Strings_vOut160)
data T_Strings_vIn160
T_Strings_vIn160 :: T_Strings_vIn160
data T_Strings_vOut160
T_Strings_vOut160 :: (Strings) -> T_Strings_vOut160
sem_Strings_Cons :: (String) -> T_Strings -> T_Strings
sem_Strings_Nil :: T_Strings
data Inh_Type
Inh_Type :: Inh_Type
data Syn_Type
Syn_Type :: (Type) -> Syn_Type
self_Syn_Type :: Syn_Type -> (Type)
wrap_Type :: T_Type -> Inh_Type -> (Syn_Type)
sem_Type :: Type -> T_Type
newtype T_Type
T_Type :: Identity (T_Type_s164) -> T_Type
attach_T_Type :: T_Type -> Identity (T_Type_s164)
newtype T_Type_s164
C_Type_s164 :: (T_Type_v163) -> T_Type_s164
inv_Type_s164 :: T_Type_s164 -> (T_Type_v163)
data T_Type_s165
C_Type_s165 :: T_Type_s165
type T_Type_v163 = (T_Type_vIn163) -> (T_Type_vOut163)
data T_Type_vIn163
T_Type_vIn163 :: T_Type_vIn163
data T_Type_vOut163
T_Type_vOut163 :: (Type) -> T_Type_vOut163
sem_Type_Application :: T_Range -> (Bool) -> T_Type -> T_Types -> T_Type
sem_Type_Variable :: T_Range -> T_Name -> T_Type
sem_Type_Constructor :: T_Range -> T_Name -> T_Type
sem_Type_Qualified :: T_Range -> T_ContextItems -> T_Type -> T_Type
sem_Type_Forall :: T_Range -> T_Names -> T_Type -> T_Type
sem_Type_Exists :: T_Range -> T_Names -> T_Type -> T_Type
sem_Type_Parenthesized :: T_Range -> T_Type -> T_Type
data Inh_Types
Inh_Types :: Inh_Types
data Syn_Types
Syn_Types :: (Types) -> Syn_Types
self_Syn_Types :: Syn_Types -> (Types)
wrap_Types :: T_Types -> Inh_Types -> (Syn_Types)
sem_Types :: Types -> T_Types
newtype T_Types
T_Types :: Identity (T_Types_s167) -> T_Types
attach_T_Types :: T_Types -> Identity (T_Types_s167)
newtype T_Types_s167
C_Types_s167 :: (T_Types_v166) -> T_Types_s167
inv_Types_s167 :: T_Types_s167 -> (T_Types_v166)
data T_Types_s168
C_Types_s168 :: T_Types_s168
type T_Types_v166 = (T_Types_vIn166) -> (T_Types_vOut166)
data T_Types_vIn166
T_Types_vIn166 :: T_Types_vIn166
data T_Types_vOut166
T_Types_vOut166 :: (Types) -> T_Types_vOut166
sem_Types_Cons :: T_Type -> T_Types -> T_Types
sem_Types_Nil :: T_Types

module Helium.Syntax.UHA_Pretty
intErr :: String -> String -> a
opt :: Maybe Doc -> Doc
parensIf :: Bool -> Doc -> Doc
backQuotesIf :: Bool -> Doc -> Doc
parensIfList :: [Bool] -> [Doc] -> [Doc]
tupled1 :: [Doc] -> Doc
tupled2 :: [Doc] -> Doc
tupledUnit :: [Doc] -> Doc
commas :: [Doc] -> Doc
utrechtList :: Doc -> Doc -> [Doc] -> Doc
data Inh_Alternative
Inh_Alternative :: Inh_Alternative
data Syn_Alternative
Syn_Alternative :: (Doc) -> Syn_Alternative
text_Syn_Alternative :: Syn_Alternative -> (Doc)
wrap_Alternative :: T_Alternative -> Inh_Alternative -> (Syn_Alternative)
sem_Alternative :: Alternative -> T_Alternative
newtype T_Alternative
T_Alternative :: Identity (T_Alternative_s2) -> T_Alternative
attach_T_Alternative :: T_Alternative -> Identity (T_Alternative_s2)
newtype T_Alternative_s2
C_Alternative_s2 :: (T_Alternative_v1) -> T_Alternative_s2
inv_Alternative_s2 :: T_Alternative_s2 -> (T_Alternative_v1)
data T_Alternative_s3
C_Alternative_s3 :: T_Alternative_s3
type T_Alternative_v1 = (T_Alternative_vIn1) -> (T_Alternative_vOut1)
data T_Alternative_vIn1
T_Alternative_vIn1 :: T_Alternative_vIn1
data T_Alternative_vOut1
T_Alternative_vOut1 :: (Doc) -> T_Alternative_vOut1
sem_Alternative_Hole :: T_Range -> (Integer) -> T_Alternative
sem_Alternative_Feedback :: T_Range -> (String) -> T_Alternative -> T_Alternative
sem_Alternative_Alternative :: T_Range -> T_Pattern -> T_RightHandSide -> T_Alternative
sem_Alternative_Empty :: T_Range -> T_Alternative
data Inh_Alternatives
Inh_Alternatives :: Inh_Alternatives
data Syn_Alternatives
Syn_Alternatives :: ([Doc]) -> Syn_Alternatives
text_Syn_Alternatives :: Syn_Alternatives -> ([Doc])
wrap_Alternatives :: T_Alternatives -> Inh_Alternatives -> (Syn_Alternatives)
sem_Alternatives :: Alternatives -> T_Alternatives
newtype T_Alternatives
T_Alternatives :: Identity (T_Alternatives_s5) -> T_Alternatives
attach_T_Alternatives :: T_Alternatives -> Identity (T_Alternatives_s5)
newtype T_Alternatives_s5
C_Alternatives_s5 :: (T_Alternatives_v4) -> T_Alternatives_s5
inv_Alternatives_s5 :: T_Alternatives_s5 -> (T_Alternatives_v4)
data T_Alternatives_s6
C_Alternatives_s6 :: T_Alternatives_s6
type T_Alternatives_v4 = (T_Alternatives_vIn4) -> (T_Alternatives_vOut4)
data T_Alternatives_vIn4
T_Alternatives_vIn4 :: T_Alternatives_vIn4
data T_Alternatives_vOut4
T_Alternatives_vOut4 :: ([Doc]) -> T_Alternatives_vOut4
sem_Alternatives_Cons :: T_Alternative -> T_Alternatives -> T_Alternatives
sem_Alternatives_Nil :: T_Alternatives
data Inh_AnnotatedType
Inh_AnnotatedType :: Inh_AnnotatedType
data Syn_AnnotatedType
Syn_AnnotatedType :: (Doc) -> Syn_AnnotatedType
text_Syn_AnnotatedType :: Syn_AnnotatedType -> (Doc)
wrap_AnnotatedType :: T_AnnotatedType -> Inh_AnnotatedType -> (Syn_AnnotatedType)
sem_AnnotatedType :: AnnotatedType -> T_AnnotatedType
newtype T_AnnotatedType
T_AnnotatedType :: Identity (T_AnnotatedType_s8) -> T_AnnotatedType
attach_T_AnnotatedType :: T_AnnotatedType -> Identity (T_AnnotatedType_s8)
newtype T_AnnotatedType_s8
C_AnnotatedType_s8 :: (T_AnnotatedType_v7) -> T_AnnotatedType_s8
inv_AnnotatedType_s8 :: T_AnnotatedType_s8 -> (T_AnnotatedType_v7)
data T_AnnotatedType_s9
C_AnnotatedType_s9 :: T_AnnotatedType_s9
type T_AnnotatedType_v7 = (T_AnnotatedType_vIn7) -> (T_AnnotatedType_vOut7)
data T_AnnotatedType_vIn7
T_AnnotatedType_vIn7 :: T_AnnotatedType_vIn7
data T_AnnotatedType_vOut7
T_AnnotatedType_vOut7 :: (Doc) -> T_AnnotatedType_vOut7
sem_AnnotatedType_AnnotatedType :: T_Range -> (Bool) -> T_Type -> T_AnnotatedType
data Inh_AnnotatedTypes
Inh_AnnotatedTypes :: Inh_AnnotatedTypes
data Syn_AnnotatedTypes
Syn_AnnotatedTypes :: ([Doc]) -> Syn_AnnotatedTypes
text_Syn_AnnotatedTypes :: Syn_AnnotatedTypes -> ([Doc])
wrap_AnnotatedTypes :: T_AnnotatedTypes -> Inh_AnnotatedTypes -> (Syn_AnnotatedTypes)
sem_AnnotatedTypes :: AnnotatedTypes -> T_AnnotatedTypes
newtype T_AnnotatedTypes
T_AnnotatedTypes :: Identity (T_AnnotatedTypes_s11) -> T_AnnotatedTypes
attach_T_AnnotatedTypes :: T_AnnotatedTypes -> Identity (T_AnnotatedTypes_s11)
newtype T_AnnotatedTypes_s11
C_AnnotatedTypes_s11 :: (T_AnnotatedTypes_v10) -> T_AnnotatedTypes_s11
inv_AnnotatedTypes_s11 :: T_AnnotatedTypes_s11 -> (T_AnnotatedTypes_v10)
data T_AnnotatedTypes_s12
C_AnnotatedTypes_s12 :: T_AnnotatedTypes_s12
type T_AnnotatedTypes_v10 = (T_AnnotatedTypes_vIn10) -> (T_AnnotatedTypes_vOut10)
data T_AnnotatedTypes_vIn10
T_AnnotatedTypes_vIn10 :: T_AnnotatedTypes_vIn10
data T_AnnotatedTypes_vOut10
T_AnnotatedTypes_vOut10 :: ([Doc]) -> T_AnnotatedTypes_vOut10
sem_AnnotatedTypes_Cons :: T_AnnotatedType -> T_AnnotatedTypes -> T_AnnotatedTypes
sem_AnnotatedTypes_Nil :: T_AnnotatedTypes
data Inh_Body
Inh_Body :: Inh_Body
data Syn_Body
Syn_Body :: (Doc) -> Syn_Body
text_Syn_Body :: Syn_Body -> (Doc)
wrap_Body :: T_Body -> Inh_Body -> (Syn_Body)
sem_Body :: Body -> T_Body
newtype T_Body
T_Body :: Identity (T_Body_s14) -> T_Body
attach_T_Body :: T_Body -> Identity (T_Body_s14)
newtype T_Body_s14
C_Body_s14 :: (T_Body_v13) -> T_Body_s14
inv_Body_s14 :: T_Body_s14 -> (T_Body_v13)
data T_Body_s15
C_Body_s15 :: T_Body_s15
type T_Body_v13 = (T_Body_vIn13) -> (T_Body_vOut13)
data T_Body_vIn13
T_Body_vIn13 :: T_Body_vIn13
data T_Body_vOut13
T_Body_vOut13 :: (Doc) -> T_Body_vOut13
sem_Body_Hole :: T_Range -> (Integer) -> T_Body
sem_Body_Body :: T_Range -> T_ImportDeclarations -> T_Declarations -> T_Body
data Inh_Constructor
Inh_Constructor :: Inh_Constructor
data Syn_Constructor
Syn_Constructor :: (Doc) -> Syn_Constructor
text_Syn_Constructor :: Syn_Constructor -> (Doc)
wrap_Constructor :: T_Constructor -> Inh_Constructor -> (Syn_Constructor)
sem_Constructor :: Constructor -> T_Constructor
newtype T_Constructor
T_Constructor :: Identity (T_Constructor_s17) -> T_Constructor
attach_T_Constructor :: T_Constructor -> Identity (T_Constructor_s17)
newtype T_Constructor_s17
C_Constructor_s17 :: (T_Constructor_v16) -> T_Constructor_s17
inv_Constructor_s17 :: T_Constructor_s17 -> (T_Constructor_v16)
data T_Constructor_s18
C_Constructor_s18 :: T_Constructor_s18
type T_Constructor_v16 = (T_Constructor_vIn16) -> (T_Constructor_vOut16)
data T_Constructor_vIn16
T_Constructor_vIn16 :: T_Constructor_vIn16
data T_Constructor_vOut16
T_Constructor_vOut16 :: (Doc) -> T_Constructor_vOut16
sem_Constructor_Constructor :: T_Range -> T_Name -> T_AnnotatedTypes -> T_Constructor
sem_Constructor_Infix :: T_Range -> T_AnnotatedType -> T_Name -> T_AnnotatedType -> T_Constructor
sem_Constructor_Record :: T_Range -> T_Name -> T_FieldDeclarations -> T_Constructor
data Inh_Constructors
Inh_Constructors :: Inh_Constructors
data Syn_Constructors
Syn_Constructors :: ([Doc]) -> Syn_Constructors
text_Syn_Constructors :: Syn_Constructors -> ([Doc])
wrap_Constructors :: T_Constructors -> Inh_Constructors -> (Syn_Constructors)
sem_Constructors :: Constructors -> T_Constructors
newtype T_Constructors
T_Constructors :: Identity (T_Constructors_s20) -> T_Constructors
attach_T_Constructors :: T_Constructors -> Identity (T_Constructors_s20)
newtype T_Constructors_s20
C_Constructors_s20 :: (T_Constructors_v19) -> T_Constructors_s20
inv_Constructors_s20 :: T_Constructors_s20 -> (T_Constructors_v19)
data T_Constructors_s21
C_Constructors_s21 :: T_Constructors_s21
type T_Constructors_v19 = (T_Constructors_vIn19) -> (T_Constructors_vOut19)
data T_Constructors_vIn19
T_Constructors_vIn19 :: T_Constructors_vIn19
data T_Constructors_vOut19
T_Constructors_vOut19 :: ([Doc]) -> T_Constructors_vOut19
sem_Constructors_Cons :: T_Constructor -> T_Constructors -> T_Constructors
sem_Constructors_Nil :: T_Constructors
data Inh_ContextItem
Inh_ContextItem :: Inh_ContextItem
data Syn_ContextItem
Syn_ContextItem :: (Doc) -> Syn_ContextItem
text_Syn_ContextItem :: Syn_ContextItem -> (Doc)
wrap_ContextItem :: T_ContextItem -> Inh_ContextItem -> (Syn_ContextItem)
sem_ContextItem :: ContextItem -> T_ContextItem
newtype T_ContextItem
T_ContextItem :: Identity (T_ContextItem_s23) -> T_ContextItem
attach_T_ContextItem :: T_ContextItem -> Identity (T_ContextItem_s23)
newtype T_ContextItem_s23
C_ContextItem_s23 :: (T_ContextItem_v22) -> T_ContextItem_s23
inv_ContextItem_s23 :: T_ContextItem_s23 -> (T_ContextItem_v22)
data T_ContextItem_s24
C_ContextItem_s24 :: T_ContextItem_s24
type T_ContextItem_v22 = (T_ContextItem_vIn22) -> (T_ContextItem_vOut22)
data T_ContextItem_vIn22
T_ContextItem_vIn22 :: T_ContextItem_vIn22
data T_ContextItem_vOut22
T_ContextItem_vOut22 :: (Doc) -> T_ContextItem_vOut22
sem_ContextItem_ContextItem :: T_Range -> T_Name -> T_Types -> T_ContextItem
data Inh_ContextItems
Inh_ContextItems :: Inh_ContextItems
data Syn_ContextItems
Syn_ContextItems :: ([Doc]) -> Syn_ContextItems
text_Syn_ContextItems :: Syn_ContextItems -> ([Doc])
wrap_ContextItems :: T_ContextItems -> Inh_ContextItems -> (Syn_ContextItems)
sem_ContextItems :: ContextItems -> T_ContextItems
newtype T_ContextItems
T_ContextItems :: Identity (T_ContextItems_s26) -> T_ContextItems
attach_T_ContextItems :: T_ContextItems -> Identity (T_ContextItems_s26)
newtype T_ContextItems_s26
C_ContextItems_s26 :: (T_ContextItems_v25) -> T_ContextItems_s26
inv_ContextItems_s26 :: T_ContextItems_s26 -> (T_ContextItems_v25)
data T_ContextItems_s27
C_ContextItems_s27 :: T_ContextItems_s27
type T_ContextItems_v25 = (T_ContextItems_vIn25) -> (T_ContextItems_vOut25)
data T_ContextItems_vIn25
T_ContextItems_vIn25 :: T_ContextItems_vIn25
data T_ContextItems_vOut25
T_ContextItems_vOut25 :: ([Doc]) -> T_ContextItems_vOut25
sem_ContextItems_Cons :: T_ContextItem -> T_ContextItems -> T_ContextItems
sem_ContextItems_Nil :: T_ContextItems
data Inh_Declaration
Inh_Declaration :: Inh_Declaration
data Syn_Declaration
Syn_Declaration :: (Doc) -> Syn_Declaration
text_Syn_Declaration :: Syn_Declaration -> (Doc)
wrap_Declaration :: T_Declaration -> Inh_Declaration -> (Syn_Declaration)
sem_Declaration :: Declaration -> T_Declaration
newtype T_Declaration
T_Declaration :: Identity (T_Declaration_s29) -> T_Declaration
attach_T_Declaration :: T_Declaration -> Identity (T_Declaration_s29)
newtype T_Declaration_s29
C_Declaration_s29 :: (T_Declaration_v28) -> T_Declaration_s29
inv_Declaration_s29 :: T_Declaration_s29 -> (T_Declaration_v28)
data T_Declaration_s30
C_Declaration_s30 :: T_Declaration_s30
type T_Declaration_v28 = (T_Declaration_vIn28) -> (T_Declaration_vOut28)
data T_Declaration_vIn28
T_Declaration_vIn28 :: T_Declaration_vIn28
data T_Declaration_vOut28
T_Declaration_vOut28 :: (Doc) -> T_Declaration_vOut28
sem_Declaration_Hole :: T_Range -> (Integer) -> T_Declaration
sem_Declaration_Type :: T_Range -> T_SimpleType -> T_Type -> T_Declaration
sem_Declaration_Data :: T_Range -> T_ContextItems -> T_SimpleType -> T_Constructors -> T_Names -> T_Declaration
sem_Declaration_Newtype :: T_Range -> T_ContextItems -> T_SimpleType -> T_Constructor -> T_Names -> T_Declaration
sem_Declaration_Class :: T_Range -> T_ContextItems -> T_SimpleType -> T_MaybeDeclarations -> T_Declaration
sem_Declaration_Instance :: T_Range -> T_ContextItems -> T_Name -> T_Types -> T_MaybeDeclarations -> T_Declaration
sem_Declaration_Default :: T_Range -> T_Types -> T_Declaration
sem_Declaration_FunctionBindings :: T_Range -> T_FunctionBindings -> T_Declaration
sem_Declaration_PatternBinding :: T_Range -> T_Pattern -> T_RightHandSide -> T_Declaration
sem_Declaration_TypeSignature :: T_Range -> T_Names -> T_Type -> T_Declaration
sem_Declaration_Fixity :: T_Range -> T_Fixity -> T_MaybeInt -> T_Names -> T_Declaration
sem_Declaration_Empty :: T_Range -> T_Declaration
data Inh_Declarations
Inh_Declarations :: Inh_Declarations
data Syn_Declarations
Syn_Declarations :: ([Doc]) -> Syn_Declarations
text_Syn_Declarations :: Syn_Declarations -> ([Doc])
wrap_Declarations :: T_Declarations -> Inh_Declarations -> (Syn_Declarations)
sem_Declarations :: Declarations -> T_Declarations
newtype T_Declarations
T_Declarations :: Identity (T_Declarations_s32) -> T_Declarations
attach_T_Declarations :: T_Declarations -> Identity (T_Declarations_s32)
newtype T_Declarations_s32
C_Declarations_s32 :: (T_Declarations_v31) -> T_Declarations_s32
inv_Declarations_s32 :: T_Declarations_s32 -> (T_Declarations_v31)
data T_Declarations_s33
C_Declarations_s33 :: T_Declarations_s33
type T_Declarations_v31 = (T_Declarations_vIn31) -> (T_Declarations_vOut31)
data T_Declarations_vIn31
T_Declarations_vIn31 :: T_Declarations_vIn31
data T_Declarations_vOut31
T_Declarations_vOut31 :: ([Doc]) -> T_Declarations_vOut31
sem_Declarations_Cons :: T_Declaration -> T_Declarations -> T_Declarations
sem_Declarations_Nil :: T_Declarations
data Inh_Export
Inh_Export :: Inh_Export
data Syn_Export
Syn_Export :: (Doc) -> Syn_Export
text_Syn_Export :: Syn_Export -> (Doc)
wrap_Export :: T_Export -> Inh_Export -> (Syn_Export)
sem_Export :: Export -> T_Export
newtype T_Export
T_Export :: Identity (T_Export_s35) -> T_Export
attach_T_Export :: T_Export -> Identity (T_Export_s35)
newtype T_Export_s35
C_Export_s35 :: (T_Export_v34) -> T_Export_s35
inv_Export_s35 :: T_Export_s35 -> (T_Export_v34)
data T_Export_s36
C_Export_s36 :: T_Export_s36
type T_Export_v34 = (T_Export_vIn34) -> (T_Export_vOut34)
data T_Export_vIn34
T_Export_vIn34 :: T_Export_vIn34
data T_Export_vOut34
T_Export_vOut34 :: (Doc) -> T_Export_vOut34
sem_Export_Variable :: T_Range -> T_Name -> T_Export
sem_Export_TypeOrClass :: T_Range -> T_Name -> T_MaybeNames -> T_Export
sem_Export_TypeOrClassComplete :: T_Range -> T_Name -> T_Export
sem_Export_Module :: T_Range -> T_Name -> T_Export
data Inh_Exports
Inh_Exports :: Inh_Exports
data Syn_Exports
Syn_Exports :: ([Doc]) -> Syn_Exports
text_Syn_Exports :: Syn_Exports -> ([Doc])
wrap_Exports :: T_Exports -> Inh_Exports -> (Syn_Exports)
sem_Exports :: Exports -> T_Exports
newtype T_Exports
T_Exports :: Identity (T_Exports_s38) -> T_Exports
attach_T_Exports :: T_Exports -> Identity (T_Exports_s38)
newtype T_Exports_s38
C_Exports_s38 :: (T_Exports_v37) -> T_Exports_s38
inv_Exports_s38 :: T_Exports_s38 -> (T_Exports_v37)
data T_Exports_s39
C_Exports_s39 :: T_Exports_s39
type T_Exports_v37 = (T_Exports_vIn37) -> (T_Exports_vOut37)
data T_Exports_vIn37
T_Exports_vIn37 :: T_Exports_vIn37
data T_Exports_vOut37
T_Exports_vOut37 :: ([Doc]) -> T_Exports_vOut37
sem_Exports_Cons :: T_Export -> T_Exports -> T_Exports
sem_Exports_Nil :: T_Exports
data Inh_Expression
Inh_Expression :: Inh_Expression
data Syn_Expression
Syn_Expression :: (Doc) -> Syn_Expression
text_Syn_Expression :: Syn_Expression -> (Doc)
wrap_Expression :: T_Expression -> Inh_Expression -> (Syn_Expression)
sem_Expression :: Expression -> T_Expression
newtype T_Expression
T_Expression :: Identity (T_Expression_s41) -> T_Expression
attach_T_Expression :: T_Expression -> Identity (T_Expression_s41)
newtype T_Expression_s41
C_Expression_s41 :: (T_Expression_v40) -> T_Expression_s41
inv_Expression_s41 :: T_Expression_s41 -> (T_Expression_v40)
data T_Expression_s42
C_Expression_s42 :: T_Expression_s42
type T_Expression_v40 = (T_Expression_vIn40) -> (T_Expression_vOut40)
data T_Expression_vIn40
T_Expression_vIn40 :: T_Expression_vIn40
data T_Expression_vOut40
T_Expression_vOut40 :: (Doc) -> T_Expression_vOut40
sem_Expression_Hole :: T_Range -> (Integer) -> T_Expression
sem_Expression_Feedback :: T_Range -> (String) -> T_Expression -> T_Expression
sem_Expression_MustUse :: T_Range -> T_Expression -> T_Expression
sem_Expression_Literal :: T_Range -> T_Literal -> T_Expression
sem_Expression_Variable :: T_Range -> T_Name -> T_Expression
sem_Expression_Constructor :: T_Range -> T_Name -> T_Expression
sem_Expression_Parenthesized :: T_Range -> T_Expression -> T_Expression
sem_Expression_NormalApplication :: T_Range -> T_Expression -> T_Expressions -> T_Expression
sem_Expression_InfixApplication :: T_Range -> T_MaybeExpression -> T_Expression -> T_MaybeExpression -> T_Expression
sem_Expression_If :: T_Range -> T_Expression -> T_Expression -> T_Expression -> T_Expression
sem_Expression_Lambda :: T_Range -> T_Patterns -> T_Expression -> T_Expression
sem_Expression_Case :: T_Range -> T_Expression -> T_Alternatives -> T_Expression
sem_Expression_Let :: T_Range -> T_Declarations -> T_Expression -> T_Expression
sem_Expression_Do :: T_Range -> T_Statements -> T_Expression
sem_Expression_List :: T_Range -> T_Expressions -> T_Expression
sem_Expression_Tuple :: T_Range -> T_Expressions -> T_Expression
sem_Expression_Comprehension :: T_Range -> T_Expression -> T_Qualifiers -> T_Expression
sem_Expression_Typed :: T_Range -> T_Expression -> T_Type -> T_Expression
sem_Expression_RecordConstruction :: T_Range -> T_Name -> T_RecordExpressionBindings -> T_Expression
sem_Expression_RecordUpdate :: T_Range -> T_Expression -> T_RecordExpressionBindings -> T_Expression
sem_Expression_Enum :: T_Range -> T_Expression -> T_MaybeExpression -> T_MaybeExpression -> T_Expression
sem_Expression_Negate :: T_Range -> T_Expression -> T_Expression
sem_Expression_NegateFloat :: T_Range -> T_Expression -> T_Expression
data Inh_Expressions
Inh_Expressions :: Inh_Expressions
data Syn_Expressions
Syn_Expressions :: ([Doc]) -> Syn_Expressions
text_Syn_Expressions :: Syn_Expressions -> ([Doc])
wrap_Expressions :: T_Expressions -> Inh_Expressions -> (Syn_Expressions)
sem_Expressions :: Expressions -> T_Expressions
newtype T_Expressions
T_Expressions :: Identity (T_Expressions_s44) -> T_Expressions
attach_T_Expressions :: T_Expressions -> Identity (T_Expressions_s44)
newtype T_Expressions_s44
C_Expressions_s44 :: (T_Expressions_v43) -> T_Expressions_s44
inv_Expressions_s44 :: T_Expressions_s44 -> (T_Expressions_v43)
data T_Expressions_s45
C_Expressions_s45 :: T_Expressions_s45
type T_Expressions_v43 = (T_Expressions_vIn43) -> (T_Expressions_vOut43)
data T_Expressions_vIn43
T_Expressions_vIn43 :: T_Expressions_vIn43
data T_Expressions_vOut43
T_Expressions_vOut43 :: ([Doc]) -> T_Expressions_vOut43
sem_Expressions_Cons :: T_Expression -> T_Expressions -> T_Expressions
sem_Expressions_Nil :: T_Expressions
data Inh_FieldDeclaration
Inh_FieldDeclaration :: Inh_FieldDeclaration
data Syn_FieldDeclaration
Syn_FieldDeclaration :: (Doc) -> Syn_FieldDeclaration
text_Syn_FieldDeclaration :: Syn_FieldDeclaration -> (Doc)
wrap_FieldDeclaration :: T_FieldDeclaration -> Inh_FieldDeclaration -> (Syn_FieldDeclaration)
sem_FieldDeclaration :: FieldDeclaration -> T_FieldDeclaration
newtype T_FieldDeclaration
T_FieldDeclaration :: Identity (T_FieldDeclaration_s47) -> T_FieldDeclaration
attach_T_FieldDeclaration :: T_FieldDeclaration -> Identity (T_FieldDeclaration_s47)
newtype T_FieldDeclaration_s47
C_FieldDeclaration_s47 :: (T_FieldDeclaration_v46) -> T_FieldDeclaration_s47
inv_FieldDeclaration_s47 :: T_FieldDeclaration_s47 -> (T_FieldDeclaration_v46)
data T_FieldDeclaration_s48
C_FieldDeclaration_s48 :: T_FieldDeclaration_s48
type T_FieldDeclaration_v46 = (T_FieldDeclaration_vIn46) -> (T_FieldDeclaration_vOut46)
data T_FieldDeclaration_vIn46
T_FieldDeclaration_vIn46 :: T_FieldDeclaration_vIn46
data T_FieldDeclaration_vOut46
T_FieldDeclaration_vOut46 :: (Doc) -> T_FieldDeclaration_vOut46
sem_FieldDeclaration_FieldDeclaration :: T_Range -> T_Names -> T_AnnotatedType -> T_FieldDeclaration
data Inh_FieldDeclarations
Inh_FieldDeclarations :: Inh_FieldDeclarations
data Syn_FieldDeclarations
Syn_FieldDeclarations :: ([Doc]) -> Syn_FieldDeclarations
text_Syn_FieldDeclarations :: Syn_FieldDeclarations -> ([Doc])
wrap_FieldDeclarations :: T_FieldDeclarations -> Inh_FieldDeclarations -> (Syn_FieldDeclarations)
sem_FieldDeclarations :: FieldDeclarations -> T_FieldDeclarations
newtype T_FieldDeclarations
T_FieldDeclarations :: Identity (T_FieldDeclarations_s50) -> T_FieldDeclarations
attach_T_FieldDeclarations :: T_FieldDeclarations -> Identity (T_FieldDeclarations_s50)
newtype T_FieldDeclarations_s50
C_FieldDeclarations_s50 :: (T_FieldDeclarations_v49) -> T_FieldDeclarations_s50
inv_FieldDeclarations_s50 :: T_FieldDeclarations_s50 -> (T_FieldDeclarations_v49)
data T_FieldDeclarations_s51
C_FieldDeclarations_s51 :: T_FieldDeclarations_s51
type T_FieldDeclarations_v49 = (T_FieldDeclarations_vIn49) -> (T_FieldDeclarations_vOut49)
data T_FieldDeclarations_vIn49
T_FieldDeclarations_vIn49 :: T_FieldDeclarations_vIn49
data T_FieldDeclarations_vOut49
T_FieldDeclarations_vOut49 :: ([Doc]) -> T_FieldDeclarations_vOut49
sem_FieldDeclarations_Cons :: T_FieldDeclaration -> T_FieldDeclarations -> T_FieldDeclarations
sem_FieldDeclarations_Nil :: T_FieldDeclarations
data Inh_Fixity
Inh_Fixity :: Inh_Fixity
data Syn_Fixity
Syn_Fixity :: (Doc) -> Syn_Fixity
text_Syn_Fixity :: Syn_Fixity -> (Doc)
wrap_Fixity :: T_Fixity -> Inh_Fixity -> (Syn_Fixity)
sem_Fixity :: Fixity -> T_Fixity
newtype T_Fixity
T_Fixity :: Identity (T_Fixity_s53) -> T_Fixity
attach_T_Fixity :: T_Fixity -> Identity (T_Fixity_s53)
newtype T_Fixity_s53
C_Fixity_s53 :: (T_Fixity_v52) -> T_Fixity_s53
inv_Fixity_s53 :: T_Fixity_s53 -> (T_Fixity_v52)
data T_Fixity_s54
C_Fixity_s54 :: T_Fixity_s54
type T_Fixity_v52 = (T_Fixity_vIn52) -> (T_Fixity_vOut52)
data T_Fixity_vIn52
T_Fixity_vIn52 :: T_Fixity_vIn52
data T_Fixity_vOut52
T_Fixity_vOut52 :: (Doc) -> T_Fixity_vOut52
sem_Fixity_Infixl :: T_Range -> T_Fixity
sem_Fixity_Infixr :: T_Range -> T_Fixity
sem_Fixity_Infix :: T_Range -> T_Fixity
data Inh_FunctionBinding
Inh_FunctionBinding :: Inh_FunctionBinding
data Syn_FunctionBinding
Syn_FunctionBinding :: (Doc) -> Syn_FunctionBinding
text_Syn_FunctionBinding :: Syn_FunctionBinding -> (Doc)
wrap_FunctionBinding :: T_FunctionBinding -> Inh_FunctionBinding -> (Syn_FunctionBinding)
sem_FunctionBinding :: FunctionBinding -> T_FunctionBinding
newtype T_FunctionBinding
T_FunctionBinding :: Identity (T_FunctionBinding_s56) -> T_FunctionBinding
attach_T_FunctionBinding :: T_FunctionBinding -> Identity (T_FunctionBinding_s56)
newtype T_FunctionBinding_s56
C_FunctionBinding_s56 :: (T_FunctionBinding_v55) -> T_FunctionBinding_s56
inv_FunctionBinding_s56 :: T_FunctionBinding_s56 -> (T_FunctionBinding_v55)
data T_FunctionBinding_s57
C_FunctionBinding_s57 :: T_FunctionBinding_s57
type T_FunctionBinding_v55 = (T_FunctionBinding_vIn55) -> (T_FunctionBinding_vOut55)
data T_FunctionBinding_vIn55
T_FunctionBinding_vIn55 :: T_FunctionBinding_vIn55
data T_FunctionBinding_vOut55
T_FunctionBinding_vOut55 :: (Doc) -> T_FunctionBinding_vOut55
sem_FunctionBinding_Hole :: T_Range -> (Integer) -> T_FunctionBinding
sem_FunctionBinding_Feedback :: T_Range -> (String) -> T_FunctionBinding -> T_FunctionBinding
sem_FunctionBinding_FunctionBinding :: T_Range -> T_LeftHandSide -> T_RightHandSide -> T_FunctionBinding
data Inh_FunctionBindings
Inh_FunctionBindings :: Inh_FunctionBindings
data Syn_FunctionBindings
Syn_FunctionBindings :: ([Doc]) -> Syn_FunctionBindings
text_Syn_FunctionBindings :: Syn_FunctionBindings -> ([Doc])
wrap_FunctionBindings :: T_FunctionBindings -> Inh_FunctionBindings -> (Syn_FunctionBindings)
sem_FunctionBindings :: FunctionBindings -> T_FunctionBindings
newtype T_FunctionBindings
T_FunctionBindings :: Identity (T_FunctionBindings_s59) -> T_FunctionBindings
attach_T_FunctionBindings :: T_FunctionBindings -> Identity (T_FunctionBindings_s59)
newtype T_FunctionBindings_s59
C_FunctionBindings_s59 :: (T_FunctionBindings_v58) -> T_FunctionBindings_s59
inv_FunctionBindings_s59 :: T_FunctionBindings_s59 -> (T_FunctionBindings_v58)
data T_FunctionBindings_s60
C_FunctionBindings_s60 :: T_FunctionBindings_s60
type T_FunctionBindings_v58 = (T_FunctionBindings_vIn58) -> (T_FunctionBindings_vOut58)
data T_FunctionBindings_vIn58
T_FunctionBindings_vIn58 :: T_FunctionBindings_vIn58
data T_FunctionBindings_vOut58
T_FunctionBindings_vOut58 :: ([Doc]) -> T_FunctionBindings_vOut58
sem_FunctionBindings_Cons :: T_FunctionBinding -> T_FunctionBindings -> T_FunctionBindings
sem_FunctionBindings_Nil :: T_FunctionBindings
data Inh_GuardedExpression
Inh_GuardedExpression :: Inh_GuardedExpression
data Syn_GuardedExpression
Syn_GuardedExpression :: (Doc -> Doc) -> Syn_GuardedExpression
text_Syn_GuardedExpression :: Syn_GuardedExpression -> (Doc -> Doc)
wrap_GuardedExpression :: T_GuardedExpression -> Inh_GuardedExpression -> (Syn_GuardedExpression)
sem_GuardedExpression :: GuardedExpression -> T_GuardedExpression
newtype T_GuardedExpression
T_GuardedExpression :: Identity (T_GuardedExpression_s62) -> T_GuardedExpression
attach_T_GuardedExpression :: T_GuardedExpression -> Identity (T_GuardedExpression_s62)
newtype T_GuardedExpression_s62
C_GuardedExpression_s62 :: (T_GuardedExpression_v61) -> T_GuardedExpression_s62
inv_GuardedExpression_s62 :: T_GuardedExpression_s62 -> (T_GuardedExpression_v61)
data T_GuardedExpression_s63
C_GuardedExpression_s63 :: T_GuardedExpression_s63
type T_GuardedExpression_v61 = (T_GuardedExpression_vIn61) -> (T_GuardedExpression_vOut61)
data T_GuardedExpression_vIn61
T_GuardedExpression_vIn61 :: T_GuardedExpression_vIn61
data T_GuardedExpression_vOut61
T_GuardedExpression_vOut61 :: (Doc -> Doc) -> T_GuardedExpression_vOut61
sem_GuardedExpression_GuardedExpression :: T_Range -> T_Expression -> T_Expression -> T_GuardedExpression
data Inh_GuardedExpressions
Inh_GuardedExpressions :: Inh_GuardedExpressions
data Syn_GuardedExpressions
Syn_GuardedExpressions :: ([Doc -> Doc]) -> Syn_GuardedExpressions
text_Syn_GuardedExpressions :: Syn_GuardedExpressions -> ([Doc -> Doc])
wrap_GuardedExpressions :: T_GuardedExpressions -> Inh_GuardedExpressions -> (Syn_GuardedExpressions)
sem_GuardedExpressions :: GuardedExpressions -> T_GuardedExpressions
newtype T_GuardedExpressions
T_GuardedExpressions :: Identity (T_GuardedExpressions_s65) -> T_GuardedExpressions
attach_T_GuardedExpressions :: T_GuardedExpressions -> Identity (T_GuardedExpressions_s65)
newtype T_GuardedExpressions_s65
C_GuardedExpressions_s65 :: (T_GuardedExpressions_v64) -> T_GuardedExpressions_s65
inv_GuardedExpressions_s65 :: T_GuardedExpressions_s65 -> (T_GuardedExpressions_v64)
data T_GuardedExpressions_s66
C_GuardedExpressions_s66 :: T_GuardedExpressions_s66
type T_GuardedExpressions_v64 = (T_GuardedExpressions_vIn64) -> (T_GuardedExpressions_vOut64)
data T_GuardedExpressions_vIn64
T_GuardedExpressions_vIn64 :: T_GuardedExpressions_vIn64
data T_GuardedExpressions_vOut64
T_GuardedExpressions_vOut64 :: ([Doc -> Doc]) -> T_GuardedExpressions_vOut64
sem_GuardedExpressions_Cons :: T_GuardedExpression -> T_GuardedExpressions -> T_GuardedExpressions
sem_GuardedExpressions_Nil :: T_GuardedExpressions
data Inh_Import
Inh_Import :: Inh_Import
data Syn_Import
Syn_Import :: (Doc) -> Syn_Import
text_Syn_Import :: Syn_Import -> (Doc)
wrap_Import :: T_Import -> Inh_Import -> (Syn_Import)
sem_Import :: Import -> T_Import
newtype T_Import
T_Import :: Identity (T_Import_s68) -> T_Import
attach_T_Import :: T_Import -> Identity (T_Import_s68)
newtype T_Import_s68
C_Import_s68 :: (T_Import_v67) -> T_Import_s68
inv_Import_s68 :: T_Import_s68 -> (T_Import_v67)
data T_Import_s69
C_Import_s69 :: T_Import_s69
type T_Import_v67 = (T_Import_vIn67) -> (T_Import_vOut67)
data T_Import_vIn67
T_Import_vIn67 :: T_Import_vIn67
data T_Import_vOut67
T_Import_vOut67 :: (Doc) -> T_Import_vOut67
sem_Import_Variable :: T_Range -> T_Name -> T_Import
sem_Import_TypeOrClass :: T_Range -> T_Name -> T_MaybeNames -> T_Import
sem_Import_TypeOrClassComplete :: T_Range -> T_Name -> T_Import
data Inh_ImportDeclaration
Inh_ImportDeclaration :: Inh_ImportDeclaration
data Syn_ImportDeclaration
Syn_ImportDeclaration :: (Doc) -> Syn_ImportDeclaration
text_Syn_ImportDeclaration :: Syn_ImportDeclaration -> (Doc)
wrap_ImportDeclaration :: T_ImportDeclaration -> Inh_ImportDeclaration -> (Syn_ImportDeclaration)
sem_ImportDeclaration :: ImportDeclaration -> T_ImportDeclaration
newtype T_ImportDeclaration
T_ImportDeclaration :: Identity (T_ImportDeclaration_s71) -> T_ImportDeclaration
attach_T_ImportDeclaration :: T_ImportDeclaration -> Identity (T_ImportDeclaration_s71)
newtype T_ImportDeclaration_s71
C_ImportDeclaration_s71 :: (T_ImportDeclaration_v70) -> T_ImportDeclaration_s71
inv_ImportDeclaration_s71 :: T_ImportDeclaration_s71 -> (T_ImportDeclaration_v70)
data T_ImportDeclaration_s72
C_ImportDeclaration_s72 :: T_ImportDeclaration_s72
type T_ImportDeclaration_v70 = (T_ImportDeclaration_vIn70) -> (T_ImportDeclaration_vOut70)
data T_ImportDeclaration_vIn70
T_ImportDeclaration_vIn70 :: T_ImportDeclaration_vIn70
data T_ImportDeclaration_vOut70
T_ImportDeclaration_vOut70 :: (Doc) -> T_ImportDeclaration_vOut70
sem_ImportDeclaration_Import :: T_Range -> (Bool) -> T_Name -> T_MaybeName -> T_MaybeImportSpecification -> T_ImportDeclaration
sem_ImportDeclaration_Empty :: T_Range -> T_ImportDeclaration
data Inh_ImportDeclarations
Inh_ImportDeclarations :: Inh_ImportDeclarations
data Syn_ImportDeclarations
Syn_ImportDeclarations :: ([Doc]) -> Syn_ImportDeclarations
text_Syn_ImportDeclarations :: Syn_ImportDeclarations -> ([Doc])
wrap_ImportDeclarations :: T_ImportDeclarations -> Inh_ImportDeclarations -> (Syn_ImportDeclarations)
sem_ImportDeclarations :: ImportDeclarations -> T_ImportDeclarations
newtype T_ImportDeclarations
T_ImportDeclarations :: Identity (T_ImportDeclarations_s74) -> T_ImportDeclarations
attach_T_ImportDeclarations :: T_ImportDeclarations -> Identity (T_ImportDeclarations_s74)
newtype T_ImportDeclarations_s74
C_ImportDeclarations_s74 :: (T_ImportDeclarations_v73) -> T_ImportDeclarations_s74
inv_ImportDeclarations_s74 :: T_ImportDeclarations_s74 -> (T_ImportDeclarations_v73)
data T_ImportDeclarations_s75
C_ImportDeclarations_s75 :: T_ImportDeclarations_s75
type T_ImportDeclarations_v73 = (T_ImportDeclarations_vIn73) -> (T_ImportDeclarations_vOut73)
data T_ImportDeclarations_vIn73
T_ImportDeclarations_vIn73 :: T_ImportDeclarations_vIn73
data T_ImportDeclarations_vOut73
T_ImportDeclarations_vOut73 :: ([Doc]) -> T_ImportDeclarations_vOut73
sem_ImportDeclarations_Cons :: T_ImportDeclaration -> T_ImportDeclarations -> T_ImportDeclarations
sem_ImportDeclarations_Nil :: T_ImportDeclarations
data Inh_ImportSpecification
Inh_ImportSpecification :: Inh_ImportSpecification
data Syn_ImportSpecification
Syn_ImportSpecification :: (Doc) -> Syn_ImportSpecification
text_Syn_ImportSpecification :: Syn_ImportSpecification -> (Doc)
wrap_ImportSpecification :: T_ImportSpecification -> Inh_ImportSpecification -> (Syn_ImportSpecification)
sem_ImportSpecification :: ImportSpecification -> T_ImportSpecification
newtype T_ImportSpecification
T_ImportSpecification :: Identity (T_ImportSpecification_s77) -> T_ImportSpecification
attach_T_ImportSpecification :: T_ImportSpecification -> Identity (T_ImportSpecification_s77)
newtype T_ImportSpecification_s77
C_ImportSpecification_s77 :: (T_ImportSpecification_v76) -> T_ImportSpecification_s77
inv_ImportSpecification_s77 :: T_ImportSpecification_s77 -> (T_ImportSpecification_v76)
data T_ImportSpecification_s78
C_ImportSpecification_s78 :: T_ImportSpecification_s78
type T_ImportSpecification_v76 = (T_ImportSpecification_vIn76) -> (T_ImportSpecification_vOut76)
data T_ImportSpecification_vIn76
T_ImportSpecification_vIn76 :: T_ImportSpecification_vIn76
data T_ImportSpecification_vOut76
T_ImportSpecification_vOut76 :: (Doc) -> T_ImportSpecification_vOut76
sem_ImportSpecification_Import :: T_Range -> (Bool) -> T_Imports -> T_ImportSpecification
data Inh_Imports
Inh_Imports :: Inh_Imports
data Syn_Imports
Syn_Imports :: ([Doc]) -> Syn_Imports
text_Syn_Imports :: Syn_Imports -> ([Doc])
wrap_Imports :: T_Imports -> Inh_Imports -> (Syn_Imports)
sem_Imports :: Imports -> T_Imports
newtype T_Imports
T_Imports :: Identity (T_Imports_s80) -> T_Imports
attach_T_Imports :: T_Imports -> Identity (T_Imports_s80)
newtype T_Imports_s80
C_Imports_s80 :: (T_Imports_v79) -> T_Imports_s80
inv_Imports_s80 :: T_Imports_s80 -> (T_Imports_v79)
data T_Imports_s81
C_Imports_s81 :: T_Imports_s81
type T_Imports_v79 = (T_Imports_vIn79) -> (T_Imports_vOut79)
data T_Imports_vIn79
T_Imports_vIn79 :: T_Imports_vIn79
data T_Imports_vOut79
T_Imports_vOut79 :: ([Doc]) -> T_Imports_vOut79
sem_Imports_Cons :: T_Import -> T_Imports -> T_Imports
sem_Imports_Nil :: T_Imports
data Inh_LeftHandSide
Inh_LeftHandSide :: Inh_LeftHandSide
data Syn_LeftHandSide
Syn_LeftHandSide :: (Doc) -> Syn_LeftHandSide
text_Syn_LeftHandSide :: Syn_LeftHandSide -> (Doc)
wrap_LeftHandSide :: T_LeftHandSide -> Inh_LeftHandSide -> (Syn_LeftHandSide)
sem_LeftHandSide :: LeftHandSide -> T_LeftHandSide
newtype T_LeftHandSide
T_LeftHandSide :: Identity (T_LeftHandSide_s83) -> T_LeftHandSide
attach_T_LeftHandSide :: T_LeftHandSide -> Identity (T_LeftHandSide_s83)
newtype T_LeftHandSide_s83
C_LeftHandSide_s83 :: (T_LeftHandSide_v82) -> T_LeftHandSide_s83
inv_LeftHandSide_s83 :: T_LeftHandSide_s83 -> (T_LeftHandSide_v82)
data T_LeftHandSide_s84
C_LeftHandSide_s84 :: T_LeftHandSide_s84
type T_LeftHandSide_v82 = (T_LeftHandSide_vIn82) -> (T_LeftHandSide_vOut82)
data T_LeftHandSide_vIn82
T_LeftHandSide_vIn82 :: T_LeftHandSide_vIn82
data T_LeftHandSide_vOut82
T_LeftHandSide_vOut82 :: (Doc) -> T_LeftHandSide_vOut82
sem_LeftHandSide_Function :: T_Range -> T_Name -> T_Patterns -> T_LeftHandSide
sem_LeftHandSide_Infix :: T_Range -> T_Pattern -> T_Name -> T_Pattern -> T_LeftHandSide
sem_LeftHandSide_Parenthesized :: T_Range -> T_LeftHandSide -> T_Patterns -> T_LeftHandSide
data Inh_Literal
Inh_Literal :: Inh_Literal
data Syn_Literal
Syn_Literal :: (Doc) -> Syn_Literal
text_Syn_Literal :: Syn_Literal -> (Doc)
wrap_Literal :: T_Literal -> Inh_Literal -> (Syn_Literal)
sem_Literal :: Literal -> T_Literal
newtype T_Literal
T_Literal :: Identity (T_Literal_s86) -> T_Literal
attach_T_Literal :: T_Literal -> Identity (T_Literal_s86)
newtype T_Literal_s86
C_Literal_s86 :: (T_Literal_v85) -> T_Literal_s86
inv_Literal_s86 :: T_Literal_s86 -> (T_Literal_v85)
data T_Literal_s87
C_Literal_s87 :: T_Literal_s87
type T_Literal_v85 = (T_Literal_vIn85) -> (T_Literal_vOut85)
data T_Literal_vIn85
T_Literal_vIn85 :: T_Literal_vIn85
data T_Literal_vOut85
T_Literal_vOut85 :: (Doc) -> T_Literal_vOut85
sem_Literal_Int :: T_Range -> (String) -> T_Literal
sem_Literal_Char :: T_Range -> (String) -> T_Literal
sem_Literal_Float :: T_Range -> (String) -> T_Literal
sem_Literal_String :: T_Range -> (String) -> T_Literal
data Inh_MaybeDeclarations
Inh_MaybeDeclarations :: Inh_MaybeDeclarations
data Syn_MaybeDeclarations
Syn_MaybeDeclarations :: (Maybe [Doc]) -> Syn_MaybeDeclarations
text_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> (Maybe [Doc])
wrap_MaybeDeclarations :: T_MaybeDeclarations -> Inh_MaybeDeclarations -> (Syn_MaybeDeclarations)
sem_MaybeDeclarations :: MaybeDeclarations -> T_MaybeDeclarations
newtype T_MaybeDeclarations
T_MaybeDeclarations :: Identity (T_MaybeDeclarations_s89) -> T_MaybeDeclarations
attach_T_MaybeDeclarations :: T_MaybeDeclarations -> Identity (T_MaybeDeclarations_s89)
newtype T_MaybeDeclarations_s89
C_MaybeDeclarations_s89 :: (T_MaybeDeclarations_v88) -> T_MaybeDeclarations_s89
inv_MaybeDeclarations_s89 :: T_MaybeDeclarations_s89 -> (T_MaybeDeclarations_v88)
data T_MaybeDeclarations_s90
C_MaybeDeclarations_s90 :: T_MaybeDeclarations_s90
type T_MaybeDeclarations_v88 = (T_MaybeDeclarations_vIn88) -> (T_MaybeDeclarations_vOut88)
data T_MaybeDeclarations_vIn88
T_MaybeDeclarations_vIn88 :: T_MaybeDeclarations_vIn88
data T_MaybeDeclarations_vOut88
T_MaybeDeclarations_vOut88 :: (Maybe [Doc]) -> T_MaybeDeclarations_vOut88
sem_MaybeDeclarations_Nothing :: T_MaybeDeclarations
sem_MaybeDeclarations_Just :: T_Declarations -> T_MaybeDeclarations
data Inh_MaybeExports
Inh_MaybeExports :: Inh_MaybeExports
data Syn_MaybeExports
Syn_MaybeExports :: (Maybe [Doc]) -> Syn_MaybeExports
text_Syn_MaybeExports :: Syn_MaybeExports -> (Maybe [Doc])
wrap_MaybeExports :: T_MaybeExports -> Inh_MaybeExports -> (Syn_MaybeExports)
sem_MaybeExports :: MaybeExports -> T_MaybeExports
newtype T_MaybeExports
T_MaybeExports :: Identity (T_MaybeExports_s92) -> T_MaybeExports
attach_T_MaybeExports :: T_MaybeExports -> Identity (T_MaybeExports_s92)
newtype T_MaybeExports_s92
C_MaybeExports_s92 :: (T_MaybeExports_v91) -> T_MaybeExports_s92
inv_MaybeExports_s92 :: T_MaybeExports_s92 -> (T_MaybeExports_v91)
data T_MaybeExports_s93
C_MaybeExports_s93 :: T_MaybeExports_s93
type T_MaybeExports_v91 = (T_MaybeExports_vIn91) -> (T_MaybeExports_vOut91)
data T_MaybeExports_vIn91
T_MaybeExports_vIn91 :: T_MaybeExports_vIn91
data T_MaybeExports_vOut91
T_MaybeExports_vOut91 :: (Maybe [Doc]) -> T_MaybeExports_vOut91
sem_MaybeExports_Nothing :: T_MaybeExports
sem_MaybeExports_Just :: T_Exports -> T_MaybeExports
data Inh_MaybeExpression
Inh_MaybeExpression :: Inh_MaybeExpression
data Syn_MaybeExpression
Syn_MaybeExpression :: (Maybe Doc) -> Syn_MaybeExpression
text_Syn_MaybeExpression :: Syn_MaybeExpression -> (Maybe Doc)
wrap_MaybeExpression :: T_MaybeExpression -> Inh_MaybeExpression -> (Syn_MaybeExpression)
sem_MaybeExpression :: MaybeExpression -> T_MaybeExpression
newtype T_MaybeExpression
T_MaybeExpression :: Identity (T_MaybeExpression_s95) -> T_MaybeExpression
attach_T_MaybeExpression :: T_MaybeExpression -> Identity (T_MaybeExpression_s95)
newtype T_MaybeExpression_s95
C_MaybeExpression_s95 :: (T_MaybeExpression_v94) -> T_MaybeExpression_s95
inv_MaybeExpression_s95 :: T_MaybeExpression_s95 -> (T_MaybeExpression_v94)
data T_MaybeExpression_s96
C_MaybeExpression_s96 :: T_MaybeExpression_s96
type T_MaybeExpression_v94 = (T_MaybeExpression_vIn94) -> (T_MaybeExpression_vOut94)
data T_MaybeExpression_vIn94
T_MaybeExpression_vIn94 :: T_MaybeExpression_vIn94
data T_MaybeExpression_vOut94
T_MaybeExpression_vOut94 :: (Maybe Doc) -> T_MaybeExpression_vOut94
sem_MaybeExpression_Nothing :: T_MaybeExpression
sem_MaybeExpression_Just :: T_Expression -> T_MaybeExpression
data Inh_MaybeImportSpecification
Inh_MaybeImportSpecification :: Inh_MaybeImportSpecification
data Syn_MaybeImportSpecification
Syn_MaybeImportSpecification :: (Maybe Doc) -> Syn_MaybeImportSpecification
text_Syn_MaybeImportSpecification :: Syn_MaybeImportSpecification -> (Maybe Doc)
wrap_MaybeImportSpecification :: T_MaybeImportSpecification -> Inh_MaybeImportSpecification -> (Syn_MaybeImportSpecification)
sem_MaybeImportSpecification :: MaybeImportSpecification -> T_MaybeImportSpecification
newtype T_MaybeImportSpecification
T_MaybeImportSpecification :: Identity (T_MaybeImportSpecification_s98) -> T_MaybeImportSpecification
attach_T_MaybeImportSpecification :: T_MaybeImportSpecification -> Identity (T_MaybeImportSpecification_s98)
newtype T_MaybeImportSpecification_s98
C_MaybeImportSpecification_s98 :: (T_MaybeImportSpecification_v97) -> T_MaybeImportSpecification_s98
inv_MaybeImportSpecification_s98 :: T_MaybeImportSpecification_s98 -> (T_MaybeImportSpecification_v97)
data T_MaybeImportSpecification_s99
C_MaybeImportSpecification_s99 :: T_MaybeImportSpecification_s99
type T_MaybeImportSpecification_v97 = (T_MaybeImportSpecification_vIn97) -> (T_MaybeImportSpecification_vOut97)
data T_MaybeImportSpecification_vIn97
T_MaybeImportSpecification_vIn97 :: T_MaybeImportSpecification_vIn97
data T_MaybeImportSpecification_vOut97
T_MaybeImportSpecification_vOut97 :: (Maybe Doc) -> T_MaybeImportSpecification_vOut97
sem_MaybeImportSpecification_Nothing :: T_MaybeImportSpecification
sem_MaybeImportSpecification_Just :: T_ImportSpecification -> T_MaybeImportSpecification
data Inh_MaybeInt
Inh_MaybeInt :: Inh_MaybeInt
data Syn_MaybeInt
Syn_MaybeInt :: (Maybe Doc) -> Syn_MaybeInt
text_Syn_MaybeInt :: Syn_MaybeInt -> (Maybe Doc)
wrap_MaybeInt :: T_MaybeInt -> Inh_MaybeInt -> (Syn_MaybeInt)
sem_MaybeInt :: MaybeInt -> T_MaybeInt
newtype T_MaybeInt
T_MaybeInt :: Identity (T_MaybeInt_s101) -> T_MaybeInt
attach_T_MaybeInt :: T_MaybeInt -> Identity (T_MaybeInt_s101)
newtype T_MaybeInt_s101
C_MaybeInt_s101 :: (T_MaybeInt_v100) -> T_MaybeInt_s101
inv_MaybeInt_s101 :: T_MaybeInt_s101 -> (T_MaybeInt_v100)
data T_MaybeInt_s102
C_MaybeInt_s102 :: T_MaybeInt_s102
type T_MaybeInt_v100 = (T_MaybeInt_vIn100) -> (T_MaybeInt_vOut100)
data T_MaybeInt_vIn100
T_MaybeInt_vIn100 :: T_MaybeInt_vIn100
data T_MaybeInt_vOut100
T_MaybeInt_vOut100 :: (Maybe Doc) -> T_MaybeInt_vOut100
sem_MaybeInt_Nothing :: T_MaybeInt
sem_MaybeInt_Just :: (Int) -> T_MaybeInt
data Inh_MaybeName
Inh_MaybeName :: Inh_MaybeName
data Syn_MaybeName
Syn_MaybeName :: (Maybe Doc) -> Syn_MaybeName
text_Syn_MaybeName :: Syn_MaybeName -> (Maybe Doc)
wrap_MaybeName :: T_MaybeName -> Inh_MaybeName -> (Syn_MaybeName)
sem_MaybeName :: MaybeName -> T_MaybeName
newtype T_MaybeName
T_MaybeName :: Identity (T_MaybeName_s104) -> T_MaybeName
attach_T_MaybeName :: T_MaybeName -> Identity (T_MaybeName_s104)
newtype T_MaybeName_s104
C_MaybeName_s104 :: (T_MaybeName_v103) -> T_MaybeName_s104
inv_MaybeName_s104 :: T_MaybeName_s104 -> (T_MaybeName_v103)
data T_MaybeName_s105
C_MaybeName_s105 :: T_MaybeName_s105
type T_MaybeName_v103 = (T_MaybeName_vIn103) -> (T_MaybeName_vOut103)
data T_MaybeName_vIn103
T_MaybeName_vIn103 :: T_MaybeName_vIn103
data T_MaybeName_vOut103
T_MaybeName_vOut103 :: (Maybe Doc) -> T_MaybeName_vOut103
sem_MaybeName_Nothing :: T_MaybeName
sem_MaybeName_Just :: T_Name -> T_MaybeName
data Inh_MaybeNames
Inh_MaybeNames :: Inh_MaybeNames
data Syn_MaybeNames
Syn_MaybeNames :: (Maybe [Doc]) -> Syn_MaybeNames
text_Syn_MaybeNames :: Syn_MaybeNames -> (Maybe [Doc])
wrap_MaybeNames :: T_MaybeNames -> Inh_MaybeNames -> (Syn_MaybeNames)
sem_MaybeNames :: MaybeNames -> T_MaybeNames
newtype T_MaybeNames
T_MaybeNames :: Identity (T_MaybeNames_s107) -> T_MaybeNames
attach_T_MaybeNames :: T_MaybeNames -> Identity (T_MaybeNames_s107)
newtype T_MaybeNames_s107
C_MaybeNames_s107 :: (T_MaybeNames_v106) -> T_MaybeNames_s107
inv_MaybeNames_s107 :: T_MaybeNames_s107 -> (T_MaybeNames_v106)
data T_MaybeNames_s108
C_MaybeNames_s108 :: T_MaybeNames_s108
type T_MaybeNames_v106 = (T_MaybeNames_vIn106) -> (T_MaybeNames_vOut106)
data T_MaybeNames_vIn106
T_MaybeNames_vIn106 :: T_MaybeNames_vIn106
data T_MaybeNames_vOut106
T_MaybeNames_vOut106 :: (Maybe [Doc]) -> T_MaybeNames_vOut106
sem_MaybeNames_Nothing :: T_MaybeNames
sem_MaybeNames_Just :: T_Names -> T_MaybeNames
data Inh_Module
Inh_Module :: Inh_Module
data Syn_Module
Syn_Module :: (Doc) -> Syn_Module
text_Syn_Module :: Syn_Module -> (Doc)
wrap_Module :: T_Module -> Inh_Module -> (Syn_Module)
sem_Module :: Module -> T_Module
newtype T_Module
T_Module :: Identity (T_Module_s110) -> T_Module
attach_T_Module :: T_Module -> Identity (T_Module_s110)
newtype T_Module_s110
C_Module_s110 :: (T_Module_v109) -> T_Module_s110
inv_Module_s110 :: T_Module_s110 -> (T_Module_v109)
data T_Module_s111
C_Module_s111 :: T_Module_s111
type T_Module_v109 = (T_Module_vIn109) -> (T_Module_vOut109)
data T_Module_vIn109
T_Module_vIn109 :: T_Module_vIn109
data T_Module_vOut109
T_Module_vOut109 :: (Doc) -> T_Module_vOut109
sem_Module_Module :: T_Range -> T_MaybeName -> T_MaybeExports -> T_Body -> T_Module
data Inh_Name
Inh_Name :: Inh_Name
data Syn_Name
Syn_Name :: (Bool) -> (Bool) -> (Bool) -> (Doc) -> Syn_Name
isIdentifier_Syn_Name :: Syn_Name -> (Bool)
isOperator_Syn_Name :: Syn_Name -> (Bool)
isSpecial_Syn_Name :: Syn_Name -> (Bool)
text_Syn_Name :: Syn_Name -> (Doc)
wrap_Name :: T_Name -> Inh_Name -> (Syn_Name)
sem_Name :: Name -> T_Name
newtype T_Name
T_Name :: Identity (T_Name_s113) -> T_Name
attach_T_Name :: T_Name -> Identity (T_Name_s113)
newtype T_Name_s113
C_Name_s113 :: (T_Name_v112) -> T_Name_s113
inv_Name_s113 :: T_Name_s113 -> (T_Name_v112)
data T_Name_s114
C_Name_s114 :: T_Name_s114
type T_Name_v112 = (T_Name_vIn112) -> (T_Name_vOut112)
data T_Name_vIn112
T_Name_vIn112 :: T_Name_vIn112
data T_Name_vOut112
T_Name_vOut112 :: (Bool) -> (Bool) -> (Bool) -> (Doc) -> T_Name_vOut112
sem_Name_Identifier :: T_Range -> T_Strings -> (String) -> T_Name
sem_Name_Operator :: T_Range -> T_Strings -> (String) -> T_Name
sem_Name_Special :: T_Range -> T_Strings -> (String) -> T_Name
data Inh_Names
Inh_Names :: Inh_Names
data Syn_Names
Syn_Names :: ([Bool]) -> ([Bool]) -> ([Bool]) -> ([Doc]) -> Syn_Names
isIdentifier_Syn_Names :: Syn_Names -> ([Bool])
isOperator_Syn_Names :: Syn_Names -> ([Bool])
isSpecial_Syn_Names :: Syn_Names -> ([Bool])
text_Syn_Names :: Syn_Names -> ([Doc])
wrap_Names :: T_Names -> Inh_Names -> (Syn_Names)
sem_Names :: Names -> T_Names
newtype T_Names
T_Names :: Identity (T_Names_s116) -> T_Names
attach_T_Names :: T_Names -> Identity (T_Names_s116)
newtype T_Names_s116
C_Names_s116 :: (T_Names_v115) -> T_Names_s116
inv_Names_s116 :: T_Names_s116 -> (T_Names_v115)
data T_Names_s117
C_Names_s117 :: T_Names_s117
type T_Names_v115 = (T_Names_vIn115) -> (T_Names_vOut115)
data T_Names_vIn115
T_Names_vIn115 :: T_Names_vIn115
data T_Names_vOut115
T_Names_vOut115 :: ([Bool]) -> ([Bool]) -> ([Bool]) -> ([Doc]) -> T_Names_vOut115
sem_Names_Cons :: T_Name -> T_Names -> T_Names
sem_Names_Nil :: T_Names
data Inh_Pattern
Inh_Pattern :: Inh_Pattern
data Syn_Pattern
Syn_Pattern :: (Doc) -> Syn_Pattern
text_Syn_Pattern :: Syn_Pattern -> (Doc)
wrap_Pattern :: T_Pattern -> Inh_Pattern -> (Syn_Pattern)
sem_Pattern :: Pattern -> T_Pattern
newtype T_Pattern
T_Pattern :: Identity (T_Pattern_s119) -> T_Pattern
attach_T_Pattern :: T_Pattern -> Identity (T_Pattern_s119)
newtype T_Pattern_s119
C_Pattern_s119 :: (T_Pattern_v118) -> T_Pattern_s119
inv_Pattern_s119 :: T_Pattern_s119 -> (T_Pattern_v118)
data T_Pattern_s120
C_Pattern_s120 :: T_Pattern_s120
type T_Pattern_v118 = (T_Pattern_vIn118) -> (T_Pattern_vOut118)
data T_Pattern_vIn118
T_Pattern_vIn118 :: T_Pattern_vIn118
data T_Pattern_vOut118
T_Pattern_vOut118 :: (Doc) -> T_Pattern_vOut118
sem_Pattern_Hole :: T_Range -> (Integer) -> T_Pattern
sem_Pattern_Literal :: T_Range -> T_Literal -> T_Pattern
sem_Pattern_Variable :: T_Range -> T_Name -> T_Pattern
sem_Pattern_Constructor :: T_Range -> T_Name -> T_Patterns -> T_Pattern
sem_Pattern_Parenthesized :: T_Range -> T_Pattern -> T_Pattern
sem_Pattern_InfixConstructor :: T_Range -> T_Pattern -> T_Name -> T_Pattern -> T_Pattern
sem_Pattern_List :: T_Range -> T_Patterns -> T_Pattern
sem_Pattern_Tuple :: T_Range -> T_Patterns -> T_Pattern
sem_Pattern_Record :: T_Range -> T_Name -> T_RecordPatternBindings -> T_Pattern
sem_Pattern_Negate :: T_Range -> T_Literal -> T_Pattern
sem_Pattern_As :: T_Range -> T_Name -> T_Pattern -> T_Pattern
sem_Pattern_Wildcard :: T_Range -> T_Pattern
sem_Pattern_Irrefutable :: T_Range -> T_Pattern -> T_Pattern
sem_Pattern_Successor :: T_Range -> T_Name -> T_Literal -> T_Pattern
sem_Pattern_NegateFloat :: T_Range -> T_Literal -> T_Pattern
data Inh_Patterns
Inh_Patterns :: Inh_Patterns
data Syn_Patterns
Syn_Patterns :: ([Doc]) -> Syn_Patterns
text_Syn_Patterns :: Syn_Patterns -> ([Doc])
wrap_Patterns :: T_Patterns -> Inh_Patterns -> (Syn_Patterns)
sem_Patterns :: Patterns -> T_Patterns
newtype T_Patterns
T_Patterns :: Identity (T_Patterns_s122) -> T_Patterns
attach_T_Patterns :: T_Patterns -> Identity (T_Patterns_s122)
newtype T_Patterns_s122
C_Patterns_s122 :: (T_Patterns_v121) -> T_Patterns_s122
inv_Patterns_s122 :: T_Patterns_s122 -> (T_Patterns_v121)
data T_Patterns_s123
C_Patterns_s123 :: T_Patterns_s123
type T_Patterns_v121 = (T_Patterns_vIn121) -> (T_Patterns_vOut121)
data T_Patterns_vIn121
T_Patterns_vIn121 :: T_Patterns_vIn121
data T_Patterns_vOut121
T_Patterns_vOut121 :: ([Doc]) -> T_Patterns_vOut121
sem_Patterns_Cons :: T_Pattern -> T_Patterns -> T_Patterns
sem_Patterns_Nil :: T_Patterns
data Inh_Position
Inh_Position :: Inh_Position
data Syn_Position
Syn_Position :: (Doc) -> Syn_Position
text_Syn_Position :: Syn_Position -> (Doc)
wrap_Position :: T_Position -> Inh_Position -> (Syn_Position)
sem_Position :: Position -> T_Position
newtype T_Position
T_Position :: Identity (T_Position_s125) -> T_Position
attach_T_Position :: T_Position -> Identity (T_Position_s125)
newtype T_Position_s125
C_Position_s125 :: (T_Position_v124) -> T_Position_s125
inv_Position_s125 :: T_Position_s125 -> (T_Position_v124)
data T_Position_s126
C_Position_s126 :: T_Position_s126
type T_Position_v124 = (T_Position_vIn124) -> (T_Position_vOut124)
data T_Position_vIn124
T_Position_vIn124 :: T_Position_vIn124
data T_Position_vOut124
T_Position_vOut124 :: (Doc) -> T_Position_vOut124
sem_Position_Position :: (String) -> (Int) -> (Int) -> T_Position
sem_Position_Unknown :: T_Position
data Inh_Qualifier
Inh_Qualifier :: Inh_Qualifier
data Syn_Qualifier
Syn_Qualifier :: (Doc) -> Syn_Qualifier
text_Syn_Qualifier :: Syn_Qualifier -> (Doc)
wrap_Qualifier :: T_Qualifier -> Inh_Qualifier -> (Syn_Qualifier)
sem_Qualifier :: Qualifier -> T_Qualifier
newtype T_Qualifier
T_Qualifier :: Identity (T_Qualifier_s128) -> T_Qualifier
attach_T_Qualifier :: T_Qualifier -> Identity (T_Qualifier_s128)
newtype T_Qualifier_s128
C_Qualifier_s128 :: (T_Qualifier_v127) -> T_Qualifier_s128
inv_Qualifier_s128 :: T_Qualifier_s128 -> (T_Qualifier_v127)
data T_Qualifier_s129
C_Qualifier_s129 :: T_Qualifier_s129
type T_Qualifier_v127 = (T_Qualifier_vIn127) -> (T_Qualifier_vOut127)
data T_Qualifier_vIn127
T_Qualifier_vIn127 :: T_Qualifier_vIn127
data T_Qualifier_vOut127
T_Qualifier_vOut127 :: (Doc) -> T_Qualifier_vOut127
sem_Qualifier_Guard :: T_Range -> T_Expression -> T_Qualifier
sem_Qualifier_Let :: T_Range -> T_Declarations -> T_Qualifier
sem_Qualifier_Generator :: T_Range -> T_Pattern -> T_Expression -> T_Qualifier
sem_Qualifier_Empty :: T_Range -> T_Qualifier
data Inh_Qualifiers
Inh_Qualifiers :: Inh_Qualifiers
data Syn_Qualifiers
Syn_Qualifiers :: ([Doc]) -> Syn_Qualifiers
text_Syn_Qualifiers :: Syn_Qualifiers -> ([Doc])
wrap_Qualifiers :: T_Qualifiers -> Inh_Qualifiers -> (Syn_Qualifiers)
sem_Qualifiers :: Qualifiers -> T_Qualifiers
newtype T_Qualifiers
T_Qualifiers :: Identity (T_Qualifiers_s131) -> T_Qualifiers
attach_T_Qualifiers :: T_Qualifiers -> Identity (T_Qualifiers_s131)
newtype T_Qualifiers_s131
C_Qualifiers_s131 :: (T_Qualifiers_v130) -> T_Qualifiers_s131
inv_Qualifiers_s131 :: T_Qualifiers_s131 -> (T_Qualifiers_v130)
data T_Qualifiers_s132
C_Qualifiers_s132 :: T_Qualifiers_s132
type T_Qualifiers_v130 = (T_Qualifiers_vIn130) -> (T_Qualifiers_vOut130)
data T_Qualifiers_vIn130
T_Qualifiers_vIn130 :: T_Qualifiers_vIn130
data T_Qualifiers_vOut130
T_Qualifiers_vOut130 :: ([Doc]) -> T_Qualifiers_vOut130
sem_Qualifiers_Cons :: T_Qualifier -> T_Qualifiers -> T_Qualifiers
sem_Qualifiers_Nil :: T_Qualifiers
data Inh_Range
Inh_Range :: Inh_Range
data Syn_Range
Syn_Range :: (Doc) -> Syn_Range
text_Syn_Range :: Syn_Range -> (Doc)
wrap_Range :: T_Range -> Inh_Range -> (Syn_Range)
sem_Range :: Range -> T_Range
newtype T_Range
T_Range :: Identity (T_Range_s134) -> T_Range
attach_T_Range :: T_Range -> Identity (T_Range_s134)
newtype T_Range_s134
C_Range_s134 :: (T_Range_v133) -> T_Range_s134
inv_Range_s134 :: T_Range_s134 -> (T_Range_v133)
data T_Range_s135
C_Range_s135 :: T_Range_s135
type T_Range_v133 = (T_Range_vIn133) -> (T_Range_vOut133)
data T_Range_vIn133
T_Range_vIn133 :: T_Range_vIn133
data T_Range_vOut133
T_Range_vOut133 :: (Doc) -> T_Range_vOut133
sem_Range_Range :: T_Position -> T_Position -> T_Range
data Inh_RecordExpressionBinding
Inh_RecordExpressionBinding :: Inh_RecordExpressionBinding
data Syn_RecordExpressionBinding
Syn_RecordExpressionBinding :: (Doc) -> Syn_RecordExpressionBinding
text_Syn_RecordExpressionBinding :: Syn_RecordExpressionBinding -> (Doc)
wrap_RecordExpressionBinding :: T_RecordExpressionBinding -> Inh_RecordExpressionBinding -> (Syn_RecordExpressionBinding)
sem_RecordExpressionBinding :: RecordExpressionBinding -> T_RecordExpressionBinding
newtype T_RecordExpressionBinding
T_RecordExpressionBinding :: Identity (T_RecordExpressionBinding_s137) -> T_RecordExpressionBinding
attach_T_RecordExpressionBinding :: T_RecordExpressionBinding -> Identity (T_RecordExpressionBinding_s137)
newtype T_RecordExpressionBinding_s137
C_RecordExpressionBinding_s137 :: (T_RecordExpressionBinding_v136) -> T_RecordExpressionBinding_s137
inv_RecordExpressionBinding_s137 :: T_RecordExpressionBinding_s137 -> (T_RecordExpressionBinding_v136)
data T_RecordExpressionBinding_s138
C_RecordExpressionBinding_s138 :: T_RecordExpressionBinding_s138
type T_RecordExpressionBinding_v136 = (T_RecordExpressionBinding_vIn136) -> (T_RecordExpressionBinding_vOut136)
data T_RecordExpressionBinding_vIn136
T_RecordExpressionBinding_vIn136 :: T_RecordExpressionBinding_vIn136
data T_RecordExpressionBinding_vOut136
T_RecordExpressionBinding_vOut136 :: (Doc) -> T_RecordExpressionBinding_vOut136
sem_RecordExpressionBinding_RecordExpressionBinding :: T_Range -> T_Name -> T_Expression -> T_RecordExpressionBinding
data Inh_RecordExpressionBindings
Inh_RecordExpressionBindings :: Inh_RecordExpressionBindings
data Syn_RecordExpressionBindings
Syn_RecordExpressionBindings :: ([Doc]) -> Syn_RecordExpressionBindings
text_Syn_RecordExpressionBindings :: Syn_RecordExpressionBindings -> ([Doc])
wrap_RecordExpressionBindings :: T_RecordExpressionBindings -> Inh_RecordExpressionBindings -> (Syn_RecordExpressionBindings)
sem_RecordExpressionBindings :: RecordExpressionBindings -> T_RecordExpressionBindings
newtype T_RecordExpressionBindings
T_RecordExpressionBindings :: Identity (T_RecordExpressionBindings_s140) -> T_RecordExpressionBindings
attach_T_RecordExpressionBindings :: T_RecordExpressionBindings -> Identity (T_RecordExpressionBindings_s140)
newtype T_RecordExpressionBindings_s140
C_RecordExpressionBindings_s140 :: (T_RecordExpressionBindings_v139) -> T_RecordExpressionBindings_s140
inv_RecordExpressionBindings_s140 :: T_RecordExpressionBindings_s140 -> (T_RecordExpressionBindings_v139)
data T_RecordExpressionBindings_s141
C_RecordExpressionBindings_s141 :: T_RecordExpressionBindings_s141
type T_RecordExpressionBindings_v139 = (T_RecordExpressionBindings_vIn139) -> (T_RecordExpressionBindings_vOut139)
data T_RecordExpressionBindings_vIn139
T_RecordExpressionBindings_vIn139 :: T_RecordExpressionBindings_vIn139
data T_RecordExpressionBindings_vOut139
T_RecordExpressionBindings_vOut139 :: ([Doc]) -> T_RecordExpressionBindings_vOut139
sem_RecordExpressionBindings_Cons :: T_RecordExpressionBinding -> T_RecordExpressionBindings -> T_RecordExpressionBindings
sem_RecordExpressionBindings_Nil :: T_RecordExpressionBindings
data Inh_RecordPatternBinding
Inh_RecordPatternBinding :: Inh_RecordPatternBinding
data Syn_RecordPatternBinding
Syn_RecordPatternBinding :: (Doc) -> Syn_RecordPatternBinding
text_Syn_RecordPatternBinding :: Syn_RecordPatternBinding -> (Doc)
wrap_RecordPatternBinding :: T_RecordPatternBinding -> Inh_RecordPatternBinding -> (Syn_RecordPatternBinding)
sem_RecordPatternBinding :: RecordPatternBinding -> T_RecordPatternBinding
newtype T_RecordPatternBinding
T_RecordPatternBinding :: Identity (T_RecordPatternBinding_s143) -> T_RecordPatternBinding
attach_T_RecordPatternBinding :: T_RecordPatternBinding -> Identity (T_RecordPatternBinding_s143)
newtype T_RecordPatternBinding_s143
C_RecordPatternBinding_s143 :: (T_RecordPatternBinding_v142) -> T_RecordPatternBinding_s143
inv_RecordPatternBinding_s143 :: T_RecordPatternBinding_s143 -> (T_RecordPatternBinding_v142)
data T_RecordPatternBinding_s144
C_RecordPatternBinding_s144 :: T_RecordPatternBinding_s144
type T_RecordPatternBinding_v142 = (T_RecordPatternBinding_vIn142) -> (T_RecordPatternBinding_vOut142)
data T_RecordPatternBinding_vIn142
T_RecordPatternBinding_vIn142 :: T_RecordPatternBinding_vIn142
data T_RecordPatternBinding_vOut142
T_RecordPatternBinding_vOut142 :: (Doc) -> T_RecordPatternBinding_vOut142
sem_RecordPatternBinding_RecordPatternBinding :: T_Range -> T_Name -> T_Pattern -> T_RecordPatternBinding
data Inh_RecordPatternBindings
Inh_RecordPatternBindings :: Inh_RecordPatternBindings
data Syn_RecordPatternBindings
Syn_RecordPatternBindings :: ([Doc]) -> Syn_RecordPatternBindings
text_Syn_RecordPatternBindings :: Syn_RecordPatternBindings -> ([Doc])
wrap_RecordPatternBindings :: T_RecordPatternBindings -> Inh_RecordPatternBindings -> (Syn_RecordPatternBindings)
sem_RecordPatternBindings :: RecordPatternBindings -> T_RecordPatternBindings
newtype T_RecordPatternBindings
T_RecordPatternBindings :: Identity (T_RecordPatternBindings_s146) -> T_RecordPatternBindings
attach_T_RecordPatternBindings :: T_RecordPatternBindings -> Identity (T_RecordPatternBindings_s146)
newtype T_RecordPatternBindings_s146
C_RecordPatternBindings_s146 :: (T_RecordPatternBindings_v145) -> T_RecordPatternBindings_s146
inv_RecordPatternBindings_s146 :: T_RecordPatternBindings_s146 -> (T_RecordPatternBindings_v145)
data T_RecordPatternBindings_s147
C_RecordPatternBindings_s147 :: T_RecordPatternBindings_s147
type T_RecordPatternBindings_v145 = (T_RecordPatternBindings_vIn145) -> (T_RecordPatternBindings_vOut145)
data T_RecordPatternBindings_vIn145
T_RecordPatternBindings_vIn145 :: T_RecordPatternBindings_vIn145
data T_RecordPatternBindings_vOut145
T_RecordPatternBindings_vOut145 :: ([Doc]) -> T_RecordPatternBindings_vOut145
sem_RecordPatternBindings_Cons :: T_RecordPatternBinding -> T_RecordPatternBindings -> T_RecordPatternBindings
sem_RecordPatternBindings_Nil :: T_RecordPatternBindings
data Inh_RightHandSide
Inh_RightHandSide :: Inh_RightHandSide
data Syn_RightHandSide
Syn_RightHandSide :: (Doc -> Doc) -> Syn_RightHandSide
text_Syn_RightHandSide :: Syn_RightHandSide -> (Doc -> Doc)
wrap_RightHandSide :: T_RightHandSide -> Inh_RightHandSide -> (Syn_RightHandSide)
sem_RightHandSide :: RightHandSide -> T_RightHandSide
newtype T_RightHandSide
T_RightHandSide :: Identity (T_RightHandSide_s149) -> T_RightHandSide
attach_T_RightHandSide :: T_RightHandSide -> Identity (T_RightHandSide_s149)
newtype T_RightHandSide_s149
C_RightHandSide_s149 :: (T_RightHandSide_v148) -> T_RightHandSide_s149
inv_RightHandSide_s149 :: T_RightHandSide_s149 -> (T_RightHandSide_v148)
data T_RightHandSide_s150
C_RightHandSide_s150 :: T_RightHandSide_s150
type T_RightHandSide_v148 = (T_RightHandSide_vIn148) -> (T_RightHandSide_vOut148)
data T_RightHandSide_vIn148
T_RightHandSide_vIn148 :: T_RightHandSide_vIn148
data T_RightHandSide_vOut148
T_RightHandSide_vOut148 :: (Doc -> Doc) -> T_RightHandSide_vOut148
sem_RightHandSide_Expression :: T_Range -> T_Expression -> T_MaybeDeclarations -> T_RightHandSide
sem_RightHandSide_Guarded :: T_Range -> T_GuardedExpressions -> T_MaybeDeclarations -> T_RightHandSide
data Inh_SimpleType
Inh_SimpleType :: Inh_SimpleType
data Syn_SimpleType
Syn_SimpleType :: (Doc) -> Syn_SimpleType
text_Syn_SimpleType :: Syn_SimpleType -> (Doc)
wrap_SimpleType :: T_SimpleType -> Inh_SimpleType -> (Syn_SimpleType)
sem_SimpleType :: SimpleType -> T_SimpleType
newtype T_SimpleType
T_SimpleType :: Identity (T_SimpleType_s152) -> T_SimpleType
attach_T_SimpleType :: T_SimpleType -> Identity (T_SimpleType_s152)
newtype T_SimpleType_s152
C_SimpleType_s152 :: (T_SimpleType_v151) -> T_SimpleType_s152
inv_SimpleType_s152 :: T_SimpleType_s152 -> (T_SimpleType_v151)
data T_SimpleType_s153
C_SimpleType_s153 :: T_SimpleType_s153
type T_SimpleType_v151 = (T_SimpleType_vIn151) -> (T_SimpleType_vOut151)
data T_SimpleType_vIn151
T_SimpleType_vIn151 :: T_SimpleType_vIn151
data T_SimpleType_vOut151
T_SimpleType_vOut151 :: (Doc) -> T_SimpleType_vOut151
sem_SimpleType_SimpleType :: T_Range -> T_Name -> T_Names -> T_SimpleType
data Inh_Statement
Inh_Statement :: Inh_Statement
data Syn_Statement
Syn_Statement :: (Doc) -> Syn_Statement
text_Syn_Statement :: Syn_Statement -> (Doc)
wrap_Statement :: T_Statement -> Inh_Statement -> (Syn_Statement)
sem_Statement :: Statement -> T_Statement
newtype T_Statement
T_Statement :: Identity (T_Statement_s155) -> T_Statement
attach_T_Statement :: T_Statement -> Identity (T_Statement_s155)
newtype T_Statement_s155
C_Statement_s155 :: (T_Statement_v154) -> T_Statement_s155
inv_Statement_s155 :: T_Statement_s155 -> (T_Statement_v154)
data T_Statement_s156
C_Statement_s156 :: T_Statement_s156
type T_Statement_v154 = (T_Statement_vIn154) -> (T_Statement_vOut154)
data T_Statement_vIn154
T_Statement_vIn154 :: T_Statement_vIn154
data T_Statement_vOut154
T_Statement_vOut154 :: (Doc) -> T_Statement_vOut154
sem_Statement_Expression :: T_Range -> T_Expression -> T_Statement
sem_Statement_Let :: T_Range -> T_Declarations -> T_Statement
sem_Statement_Generator :: T_Range -> T_Pattern -> T_Expression -> T_Statement
sem_Statement_Empty :: T_Range -> T_Statement
data Inh_Statements
Inh_Statements :: Inh_Statements
data Syn_Statements
Syn_Statements :: ([Doc]) -> Syn_Statements
text_Syn_Statements :: Syn_Statements -> ([Doc])
wrap_Statements :: T_Statements -> Inh_Statements -> (Syn_Statements)
sem_Statements :: Statements -> T_Statements
newtype T_Statements
T_Statements :: Identity (T_Statements_s158) -> T_Statements
attach_T_Statements :: T_Statements -> Identity (T_Statements_s158)
newtype T_Statements_s158
C_Statements_s158 :: (T_Statements_v157) -> T_Statements_s158
inv_Statements_s158 :: T_Statements_s158 -> (T_Statements_v157)
data T_Statements_s159
C_Statements_s159 :: T_Statements_s159
type T_Statements_v157 = (T_Statements_vIn157) -> (T_Statements_vOut157)
data T_Statements_vIn157
T_Statements_vIn157 :: T_Statements_vIn157
data T_Statements_vOut157
T_Statements_vOut157 :: ([Doc]) -> T_Statements_vOut157
sem_Statements_Cons :: T_Statement -> T_Statements -> T_Statements
sem_Statements_Nil :: T_Statements
data Inh_Strings
Inh_Strings :: Inh_Strings
data Syn_Strings
Syn_Strings :: ([Doc]) -> Syn_Strings
text_Syn_Strings :: Syn_Strings -> ([Doc])
wrap_Strings :: T_Strings -> Inh_Strings -> (Syn_Strings)
sem_Strings :: Strings -> T_Strings
newtype T_Strings
T_Strings :: Identity (T_Strings_s161) -> T_Strings
attach_T_Strings :: T_Strings -> Identity (T_Strings_s161)
newtype T_Strings_s161
C_Strings_s161 :: (T_Strings_v160) -> T_Strings_s161
inv_Strings_s161 :: T_Strings_s161 -> (T_Strings_v160)
data T_Strings_s162
C_Strings_s162 :: T_Strings_s162
type T_Strings_v160 = (T_Strings_vIn160) -> (T_Strings_vOut160)
data T_Strings_vIn160
T_Strings_vIn160 :: T_Strings_vIn160
data T_Strings_vOut160
T_Strings_vOut160 :: ([Doc]) -> T_Strings_vOut160
sem_Strings_Cons :: (String) -> T_Strings -> T_Strings
sem_Strings_Nil :: T_Strings
data Inh_Type
Inh_Type :: Inh_Type
data Syn_Type
Syn_Type :: (Doc) -> Syn_Type
text_Syn_Type :: Syn_Type -> (Doc)
wrap_Type :: T_Type -> Inh_Type -> (Syn_Type)
sem_Type :: Type -> T_Type
newtype T_Type
T_Type :: Identity (T_Type_s164) -> T_Type
attach_T_Type :: T_Type -> Identity (T_Type_s164)
newtype T_Type_s164
C_Type_s164 :: (T_Type_v163) -> T_Type_s164
inv_Type_s164 :: T_Type_s164 -> (T_Type_v163)
data T_Type_s165
C_Type_s165 :: T_Type_s165
type T_Type_v163 = (T_Type_vIn163) -> (T_Type_vOut163)
data T_Type_vIn163
T_Type_vIn163 :: T_Type_vIn163
data T_Type_vOut163
T_Type_vOut163 :: (Doc) -> T_Type_vOut163
sem_Type_Application :: T_Range -> (Bool) -> T_Type -> T_Types -> T_Type
sem_Type_Variable :: T_Range -> T_Name -> T_Type
sem_Type_Constructor :: T_Range -> T_Name -> T_Type
sem_Type_Qualified :: T_Range -> T_ContextItems -> T_Type -> T_Type
sem_Type_Forall :: T_Range -> T_Names -> T_Type -> T_Type
sem_Type_Exists :: T_Range -> T_Names -> T_Type -> T_Type
sem_Type_Parenthesized :: T_Range -> T_Type -> T_Type
data Inh_Types
Inh_Types :: Inh_Types
data Syn_Types
Syn_Types :: ([Doc]) -> Syn_Types
text_Syn_Types :: Syn_Types -> ([Doc])
wrap_Types :: T_Types -> Inh_Types -> (Syn_Types)
sem_Types :: Types -> T_Types
newtype T_Types
T_Types :: Identity (T_Types_s167) -> T_Types
attach_T_Types :: T_Types -> Identity (T_Types_s167)
newtype T_Types_s167
C_Types_s167 :: (T_Types_v166) -> T_Types_s167
inv_Types_s167 :: T_Types_s167 -> (T_Types_v166)
data T_Types_s168
C_Types_s168 :: T_Types_s168
type T_Types_v166 = (T_Types_vIn166) -> (T_Types_vOut166)
data T_Types_vIn166
T_Types_vIn166 :: T_Types_vIn166
data T_Types_vOut166
T_Types_vOut166 :: ([Doc]) -> T_Types_vOut166
sem_Types_Cons :: T_Type -> T_Types -> T_Types
sem_Types_Nil :: T_Types


module Helium.StaticAnalysis.Messages.KindErrors
type KindErrors = [KindError]
data KindError
MustBeStar :: Range -> String -> Doc -> Kind -> KindError
KindApplication :: Range -> Doc -> Doc -> Kind -> Kind -> KindError
mustBeStar :: Range -> String -> Type -> (Kind, Kind) -> KindError
kindApplication :: Range -> Type -> Type -> (Kind, Kind) -> KindError
instance Substitutable KindError
instance HasMessage KindError
instance Show KindError
instance PolyTypeConstraintInfo KindError
instance TypeConstraintInfo KindError


module Helium.StaticAnalysis.Messages.Warnings
type Warnings = [Warning]
data Warning
NoTypeDef :: Name -> TpScheme -> Bool -> Bool -> Warning
Shadow :: Name -> Name -> Warning
Unused :: Entity -> Name -> Warning
SimilarFunctionBindings :: Name -> Name -> Warning
SuspiciousTypeVariable :: Name -> Name -> Warning
ReduceContext :: Range -> Predicates -> Predicates -> Warning
MissingPatterns :: Range -> (Maybe Name) -> Tp -> [[Pattern]] -> String -> String -> Warning
UnreachablePatternCase :: Range -> Pattern -> Warning
UnreachablePatternLHS :: LeftHandSide -> Warning
UnreachableGuard :: Range -> Expression -> Warning
FallThrough :: Range -> Warning
SignatureTooSpecific :: Name -> TpScheme -> TpScheme -> Warning
showWarning :: Warning -> (MessageBlock, MessageBlocks)
plural :: [a] -> String -> String
semP :: Pattern -> Doc
instance HasMessage Warning


module Helium.Parser.OperatorTable
data Assoc
AssocNone :: Assoc
AssocLeft :: Assoc
AssocRight :: Assoc
type OperatorTable = Map Name (Int, Assoc)
assoc :: OperatorTable -> Name -> Assoc
prio :: OperatorTable -> Name -> Int
instance Show Assoc
instance Eq Assoc

module Helium.Parser.ResolveOperators
data ResolveError
Ambiguous :: Assoc -> Name -> Assoc -> Name -> ResolveError
resolveOperators :: OperatorTable -> Module -> (Module, [ResolveError])
expression :: OperatorTable -> Expression -> Expression
operatorsFromModule :: Module -> OperatorTable
collectInfixdecls :: Module -> [Declaration]
type State expr = ([Name], [expr], [ResolveError])
resolveExpression :: OperatorTable -> [Expression] -> (Expression, [ResolveError])
resolvePattern :: OperatorTable -> [Pattern] -> (Pattern, [ResolveError])
resolve :: OperatorTable -> [expr] -> (expr -> Maybe Name, Name -> expr -> expr, Name -> expr -> expr -> expr) -> State expr -> (expr, [ResolveError])
pushExpr :: expr -> State expr -> State expr
strongerOp :: OperatorTable -> Name -> Name -> Either Bool ResolveError
isUnary :: Name -> Bool
isBinary :: Name -> Bool
data Inh_Alternative
Inh_Alternative :: (OperatorTable) -> ([ResolveError]) -> Inh_Alternative
opTable_Inh_Alternative :: Inh_Alternative -> (OperatorTable)
resolveErrors_Inh_Alternative :: Inh_Alternative -> ([ResolveError])
data Syn_Alternative
Syn_Alternative :: ([ResolveError]) -> (Alternative) -> Syn_Alternative
resolveErrors_Syn_Alternative :: Syn_Alternative -> ([ResolveError])
self_Syn_Alternative :: Syn_Alternative -> (Alternative)
wrap_Alternative :: T_Alternative -> Inh_Alternative -> (Syn_Alternative)
sem_Alternative :: Alternative -> T_Alternative
newtype T_Alternative
T_Alternative :: Identity (T_Alternative_s2) -> T_Alternative
attach_T_Alternative :: T_Alternative -> Identity (T_Alternative_s2)
newtype T_Alternative_s2
C_Alternative_s2 :: (T_Alternative_v1) -> T_Alternative_s2
inv_Alternative_s2 :: T_Alternative_s2 -> (T_Alternative_v1)
data T_Alternative_s3
C_Alternative_s3 :: T_Alternative_s3
type T_Alternative_v1 = (T_Alternative_vIn1) -> (T_Alternative_vOut1)
data T_Alternative_vIn1
T_Alternative_vIn1 :: (OperatorTable) -> ([ResolveError]) -> T_Alternative_vIn1
data T_Alternative_vOut1
T_Alternative_vOut1 :: ([ResolveError]) -> (Alternative) -> T_Alternative_vOut1
sem_Alternative_Hole :: T_Range -> (Integer) -> T_Alternative
sem_Alternative_Feedback :: T_Range -> (String) -> T_Alternative -> T_Alternative
sem_Alternative_Alternative :: T_Range -> T_Pattern -> T_RightHandSide -> T_Alternative
sem_Alternative_Empty :: T_Range -> T_Alternative
data Inh_Alternatives
Inh_Alternatives :: (OperatorTable) -> ([ResolveError]) -> Inh_Alternatives
opTable_Inh_Alternatives :: Inh_Alternatives -> (OperatorTable)
resolveErrors_Inh_Alternatives :: Inh_Alternatives -> ([ResolveError])
data Syn_Alternatives
Syn_Alternatives :: ([ResolveError]) -> (Alternatives) -> Syn_Alternatives
resolveErrors_Syn_Alternatives :: Syn_Alternatives -> ([ResolveError])
self_Syn_Alternatives :: Syn_Alternatives -> (Alternatives)
wrap_Alternatives :: T_Alternatives -> Inh_Alternatives -> (Syn_Alternatives)
sem_Alternatives :: Alternatives -> T_Alternatives
newtype T_Alternatives
T_Alternatives :: Identity (T_Alternatives_s5) -> T_Alternatives
attach_T_Alternatives :: T_Alternatives -> Identity (T_Alternatives_s5)
newtype T_Alternatives_s5
C_Alternatives_s5 :: (T_Alternatives_v4) -> T_Alternatives_s5
inv_Alternatives_s5 :: T_Alternatives_s5 -> (T_Alternatives_v4)
data T_Alternatives_s6
C_Alternatives_s6 :: T_Alternatives_s6
type T_Alternatives_v4 = (T_Alternatives_vIn4) -> (T_Alternatives_vOut4)
data T_Alternatives_vIn4
T_Alternatives_vIn4 :: (OperatorTable) -> ([ResolveError]) -> T_Alternatives_vIn4
data T_Alternatives_vOut4
T_Alternatives_vOut4 :: ([ResolveError]) -> (Alternatives) -> T_Alternatives_vOut4
sem_Alternatives_Cons :: T_Alternative -> T_Alternatives -> T_Alternatives
sem_Alternatives_Nil :: T_Alternatives
data Inh_AnnotatedType
Inh_AnnotatedType :: Inh_AnnotatedType
data Syn_AnnotatedType
Syn_AnnotatedType :: (AnnotatedType) -> Syn_AnnotatedType
self_Syn_AnnotatedType :: Syn_AnnotatedType -> (AnnotatedType)
wrap_AnnotatedType :: T_AnnotatedType -> Inh_AnnotatedType -> (Syn_AnnotatedType)
sem_AnnotatedType :: AnnotatedType -> T_AnnotatedType
newtype T_AnnotatedType
T_AnnotatedType :: Identity (T_AnnotatedType_s8) -> T_AnnotatedType
attach_T_AnnotatedType :: T_AnnotatedType -> Identity (T_AnnotatedType_s8)
newtype T_AnnotatedType_s8
C_AnnotatedType_s8 :: (T_AnnotatedType_v7) -> T_AnnotatedType_s8
inv_AnnotatedType_s8 :: T_AnnotatedType_s8 -> (T_AnnotatedType_v7)
data T_AnnotatedType_s9
C_AnnotatedType_s9 :: T_AnnotatedType_s9
type T_AnnotatedType_v7 = (T_AnnotatedType_vIn7) -> (T_AnnotatedType_vOut7)
data T_AnnotatedType_vIn7
T_AnnotatedType_vIn7 :: T_AnnotatedType_vIn7
data T_AnnotatedType_vOut7
T_AnnotatedType_vOut7 :: (AnnotatedType) -> T_AnnotatedType_vOut7
sem_AnnotatedType_AnnotatedType :: T_Range -> (Bool) -> T_Type -> T_AnnotatedType
data Inh_AnnotatedTypes
Inh_AnnotatedTypes :: Inh_AnnotatedTypes
data Syn_AnnotatedTypes
Syn_AnnotatedTypes :: (AnnotatedTypes) -> Syn_AnnotatedTypes
self_Syn_AnnotatedTypes :: Syn_AnnotatedTypes -> (AnnotatedTypes)
wrap_AnnotatedTypes :: T_AnnotatedTypes -> Inh_AnnotatedTypes -> (Syn_AnnotatedTypes)
sem_AnnotatedTypes :: AnnotatedTypes -> T_AnnotatedTypes
newtype T_AnnotatedTypes
T_AnnotatedTypes :: Identity (T_AnnotatedTypes_s11) -> T_AnnotatedTypes
attach_T_AnnotatedTypes :: T_AnnotatedTypes -> Identity (T_AnnotatedTypes_s11)
newtype T_AnnotatedTypes_s11
C_AnnotatedTypes_s11 :: (T_AnnotatedTypes_v10) -> T_AnnotatedTypes_s11
inv_AnnotatedTypes_s11 :: T_AnnotatedTypes_s11 -> (T_AnnotatedTypes_v10)
data T_AnnotatedTypes_s12
C_AnnotatedTypes_s12 :: T_AnnotatedTypes_s12
type T_AnnotatedTypes_v10 = (T_AnnotatedTypes_vIn10) -> (T_AnnotatedTypes_vOut10)
data T_AnnotatedTypes_vIn10
T_AnnotatedTypes_vIn10 :: T_AnnotatedTypes_vIn10
data T_AnnotatedTypes_vOut10
T_AnnotatedTypes_vOut10 :: (AnnotatedTypes) -> T_AnnotatedTypes_vOut10
sem_AnnotatedTypes_Cons :: T_AnnotatedType -> T_AnnotatedTypes -> T_AnnotatedTypes
sem_AnnotatedTypes_Nil :: T_AnnotatedTypes
data Inh_Body
Inh_Body :: (OperatorTable) -> ([ResolveError]) -> Inh_Body
opTable_Inh_Body :: Inh_Body -> (OperatorTable)
resolveErrors_Inh_Body :: Inh_Body -> ([ResolveError])
data Syn_Body
Syn_Body :: ([ResolveError]) -> (Body) -> Syn_Body
resolveErrors_Syn_Body :: Syn_Body -> ([ResolveError])
self_Syn_Body :: Syn_Body -> (Body)
wrap_Body :: T_Body -> Inh_Body -> (Syn_Body)
sem_Body :: Body -> T_Body
newtype T_Body
T_Body :: Identity (T_Body_s14) -> T_Body
attach_T_Body :: T_Body -> Identity (T_Body_s14)
newtype T_Body_s14
C_Body_s14 :: (T_Body_v13) -> T_Body_s14
inv_Body_s14 :: T_Body_s14 -> (T_Body_v13)
data T_Body_s15
C_Body_s15 :: T_Body_s15
type T_Body_v13 = (T_Body_vIn13) -> (T_Body_vOut13)
data T_Body_vIn13
T_Body_vIn13 :: (OperatorTable) -> ([ResolveError]) -> T_Body_vIn13
data T_Body_vOut13
T_Body_vOut13 :: ([ResolveError]) -> (Body) -> T_Body_vOut13
sem_Body_Hole :: T_Range -> (Integer) -> T_Body
sem_Body_Body :: T_Range -> T_ImportDeclarations -> T_Declarations -> T_Body
data Inh_Constructor
Inh_Constructor :: Inh_Constructor
data Syn_Constructor
Syn_Constructor :: (Constructor) -> Syn_Constructor
self_Syn_Constructor :: Syn_Constructor -> (Constructor)
wrap_Constructor :: T_Constructor -> Inh_Constructor -> (Syn_Constructor)
sem_Constructor :: Constructor -> T_Constructor
newtype T_Constructor
T_Constructor :: Identity (T_Constructor_s17) -> T_Constructor
attach_T_Constructor :: T_Constructor -> Identity (T_Constructor_s17)
newtype T_Constructor_s17
C_Constructor_s17 :: (T_Constructor_v16) -> T_Constructor_s17
inv_Constructor_s17 :: T_Constructor_s17 -> (T_Constructor_v16)
data T_Constructor_s18
C_Constructor_s18 :: T_Constructor_s18
type T_Constructor_v16 = (T_Constructor_vIn16) -> (T_Constructor_vOut16)
data T_Constructor_vIn16
T_Constructor_vIn16 :: T_Constructor_vIn16
data T_Constructor_vOut16
T_Constructor_vOut16 :: (Constructor) -> T_Constructor_vOut16
sem_Constructor_Constructor :: T_Range -> T_Name -> T_AnnotatedTypes -> T_Constructor
sem_Constructor_Infix :: T_Range -> T_AnnotatedType -> T_Name -> T_AnnotatedType -> T_Constructor
sem_Constructor_Record :: T_Range -> T_Name -> T_FieldDeclarations -> T_Constructor
data Inh_Constructors
Inh_Constructors :: Inh_Constructors
data Syn_Constructors
Syn_Constructors :: (Constructors) -> Syn_Constructors
self_Syn_Constructors :: Syn_Constructors -> (Constructors)
wrap_Constructors :: T_Constructors -> Inh_Constructors -> (Syn_Constructors)
sem_Constructors :: Constructors -> T_Constructors
newtype T_Constructors
T_Constructors :: Identity (T_Constructors_s20) -> T_Constructors
attach_T_Constructors :: T_Constructors -> Identity (T_Constructors_s20)
newtype T_Constructors_s20
C_Constructors_s20 :: (T_Constructors_v19) -> T_Constructors_s20
inv_Constructors_s20 :: T_Constructors_s20 -> (T_Constructors_v19)
data T_Constructors_s21
C_Constructors_s21 :: T_Constructors_s21
type T_Constructors_v19 = (T_Constructors_vIn19) -> (T_Constructors_vOut19)
data T_Constructors_vIn19
T_Constructors_vIn19 :: T_Constructors_vIn19
data T_Constructors_vOut19
T_Constructors_vOut19 :: (Constructors) -> T_Constructors_vOut19
sem_Constructors_Cons :: T_Constructor -> T_Constructors -> T_Constructors
sem_Constructors_Nil :: T_Constructors
data Inh_ContextItem
Inh_ContextItem :: Inh_ContextItem
data Syn_ContextItem
Syn_ContextItem :: (ContextItem) -> Syn_ContextItem
self_Syn_ContextItem :: Syn_ContextItem -> (ContextItem)
wrap_ContextItem :: T_ContextItem -> Inh_ContextItem -> (Syn_ContextItem)
sem_ContextItem :: ContextItem -> T_ContextItem
newtype T_ContextItem
T_ContextItem :: Identity (T_ContextItem_s23) -> T_ContextItem
attach_T_ContextItem :: T_ContextItem -> Identity (T_ContextItem_s23)
newtype T_ContextItem_s23
C_ContextItem_s23 :: (T_ContextItem_v22) -> T_ContextItem_s23
inv_ContextItem_s23 :: T_ContextItem_s23 -> (T_ContextItem_v22)
data T_ContextItem_s24
C_ContextItem_s24 :: T_ContextItem_s24
type T_ContextItem_v22 = (T_ContextItem_vIn22) -> (T_ContextItem_vOut22)
data T_ContextItem_vIn22
T_ContextItem_vIn22 :: T_ContextItem_vIn22
data T_ContextItem_vOut22
T_ContextItem_vOut22 :: (ContextItem) -> T_ContextItem_vOut22
sem_ContextItem_ContextItem :: T_Range -> T_Name -> T_Types -> T_ContextItem
data Inh_ContextItems
Inh_ContextItems :: Inh_ContextItems
data Syn_ContextItems
Syn_ContextItems :: (ContextItems) -> Syn_ContextItems
self_Syn_ContextItems :: Syn_ContextItems -> (ContextItems)
wrap_ContextItems :: T_ContextItems -> Inh_ContextItems -> (Syn_ContextItems)
sem_ContextItems :: ContextItems -> T_ContextItems
newtype T_ContextItems
T_ContextItems :: Identity (T_ContextItems_s26) -> T_ContextItems
attach_T_ContextItems :: T_ContextItems -> Identity (T_ContextItems_s26)
newtype T_ContextItems_s26
C_ContextItems_s26 :: (T_ContextItems_v25) -> T_ContextItems_s26
inv_ContextItems_s26 :: T_ContextItems_s26 -> (T_ContextItems_v25)
data T_ContextItems_s27
C_ContextItems_s27 :: T_ContextItems_s27
type T_ContextItems_v25 = (T_ContextItems_vIn25) -> (T_ContextItems_vOut25)
data T_ContextItems_vIn25
T_ContextItems_vIn25 :: T_ContextItems_vIn25
data T_ContextItems_vOut25
T_ContextItems_vOut25 :: (ContextItems) -> T_ContextItems_vOut25
sem_ContextItems_Cons :: T_ContextItem -> T_ContextItems -> T_ContextItems
sem_ContextItems_Nil :: T_ContextItems
data Inh_Declaration
Inh_Declaration :: (OperatorTable) -> ([ResolveError]) -> Inh_Declaration
opTable_Inh_Declaration :: Inh_Declaration -> (OperatorTable)
resolveErrors_Inh_Declaration :: Inh_Declaration -> ([ResolveError])
data Syn_Declaration
Syn_Declaration :: ([ResolveError]) -> (Declaration) -> Syn_Declaration
resolveErrors_Syn_Declaration :: Syn_Declaration -> ([ResolveError])
self_Syn_Declaration :: Syn_Declaration -> (Declaration)
wrap_Declaration :: T_Declaration -> Inh_Declaration -> (Syn_Declaration)
sem_Declaration :: Declaration -> T_Declaration
newtype T_Declaration
T_Declaration :: Identity (T_Declaration_s29) -> T_Declaration
attach_T_Declaration :: T_Declaration -> Identity (T_Declaration_s29)
newtype T_Declaration_s29
C_Declaration_s29 :: (T_Declaration_v28) -> T_Declaration_s29
inv_Declaration_s29 :: T_Declaration_s29 -> (T_Declaration_v28)
data T_Declaration_s30
C_Declaration_s30 :: T_Declaration_s30
type T_Declaration_v28 = (T_Declaration_vIn28) -> (T_Declaration_vOut28)
data T_Declaration_vIn28
T_Declaration_vIn28 :: (OperatorTable) -> ([ResolveError]) -> T_Declaration_vIn28
data T_Declaration_vOut28
T_Declaration_vOut28 :: ([ResolveError]) -> (Declaration) -> T_Declaration_vOut28
sem_Declaration_Hole :: T_Range -> (Integer) -> T_Declaration
sem_Declaration_Type :: T_Range -> T_SimpleType -> T_Type -> T_Declaration
sem_Declaration_Data :: T_Range -> T_ContextItems -> T_SimpleType -> T_Constructors -> T_Names -> T_Declaration
sem_Declaration_Newtype :: T_Range -> T_ContextItems -> T_SimpleType -> T_Constructor -> T_Names -> T_Declaration
sem_Declaration_Class :: T_Range -> T_ContextItems -> T_SimpleType -> T_MaybeDeclarations -> T_Declaration
sem_Declaration_Instance :: T_Range -> T_ContextItems -> T_Name -> T_Types -> T_MaybeDeclarations -> T_Declaration
sem_Declaration_Default :: T_Range -> T_Types -> T_Declaration
sem_Declaration_FunctionBindings :: T_Range -> T_FunctionBindings -> T_Declaration
sem_Declaration_PatternBinding :: T_Range -> T_Pattern -> T_RightHandSide -> T_Declaration
sem_Declaration_TypeSignature :: T_Range -> T_Names -> T_Type -> T_Declaration
sem_Declaration_Fixity :: T_Range -> T_Fixity -> T_MaybeInt -> T_Names -> T_Declaration
sem_Declaration_Empty :: T_Range -> T_Declaration
data Inh_Declarations
Inh_Declarations :: (OperatorTable) -> ([ResolveError]) -> Inh_Declarations
opTable_Inh_Declarations :: Inh_Declarations -> (OperatorTable)
resolveErrors_Inh_Declarations :: Inh_Declarations -> ([ResolveError])
data Syn_Declarations
Syn_Declarations :: ([ResolveError]) -> (Declarations) -> Syn_Declarations
resolveErrors_Syn_Declarations :: Syn_Declarations -> ([ResolveError])
self_Syn_Declarations :: Syn_Declarations -> (Declarations)
wrap_Declarations :: T_Declarations -> Inh_Declarations -> (Syn_Declarations)
sem_Declarations :: Declarations -> T_Declarations
newtype T_Declarations
T_Declarations :: Identity (T_Declarations_s32) -> T_Declarations
attach_T_Declarations :: T_Declarations -> Identity (T_Declarations_s32)
newtype T_Declarations_s32
C_Declarations_s32 :: (T_Declarations_v31) -> T_Declarations_s32
inv_Declarations_s32 :: T_Declarations_s32 -> (T_Declarations_v31)
data T_Declarations_s33
C_Declarations_s33 :: T_Declarations_s33
type T_Declarations_v31 = (T_Declarations_vIn31) -> (T_Declarations_vOut31)
data T_Declarations_vIn31
T_Declarations_vIn31 :: (OperatorTable) -> ([ResolveError]) -> T_Declarations_vIn31
data T_Declarations_vOut31
T_Declarations_vOut31 :: ([ResolveError]) -> (Declarations) -> T_Declarations_vOut31
sem_Declarations_Cons :: T_Declaration -> T_Declarations -> T_Declarations
sem_Declarations_Nil :: T_Declarations
data Inh_Export
Inh_Export :: Inh_Export
data Syn_Export
Syn_Export :: (Export) -> Syn_Export
self_Syn_Export :: Syn_Export -> (Export)
wrap_Export :: T_Export -> Inh_Export -> (Syn_Export)
sem_Export :: Export -> T_Export
newtype T_Export
T_Export :: Identity (T_Export_s35) -> T_Export
attach_T_Export :: T_Export -> Identity (T_Export_s35)
newtype T_Export_s35
C_Export_s35 :: (T_Export_v34) -> T_Export_s35
inv_Export_s35 :: T_Export_s35 -> (T_Export_v34)
data T_Export_s36
C_Export_s36 :: T_Export_s36
type T_Export_v34 = (T_Export_vIn34) -> (T_Export_vOut34)
data T_Export_vIn34
T_Export_vIn34 :: T_Export_vIn34
data T_Export_vOut34
T_Export_vOut34 :: (Export) -> T_Export_vOut34
sem_Export_Variable :: T_Range -> T_Name -> T_Export
sem_Export_TypeOrClass :: T_Range -> T_Name -> T_MaybeNames -> T_Export
sem_Export_TypeOrClassComplete :: T_Range -> T_Name -> T_Export
sem_Export_Module :: T_Range -> T_Name -> T_Export
data Inh_Exports
Inh_Exports :: Inh_Exports
data Syn_Exports
Syn_Exports :: (Exports) -> Syn_Exports
self_Syn_Exports :: Syn_Exports -> (Exports)
wrap_Exports :: T_Exports -> Inh_Exports -> (Syn_Exports)
sem_Exports :: Exports -> T_Exports
newtype T_Exports
T_Exports :: Identity (T_Exports_s38) -> T_Exports
attach_T_Exports :: T_Exports -> Identity (T_Exports_s38)
newtype T_Exports_s38
C_Exports_s38 :: (T_Exports_v37) -> T_Exports_s38
inv_Exports_s38 :: T_Exports_s38 -> (T_Exports_v37)
data T_Exports_s39
C_Exports_s39 :: T_Exports_s39
type T_Exports_v37 = (T_Exports_vIn37) -> (T_Exports_vOut37)
data T_Exports_vIn37
T_Exports_vIn37 :: T_Exports_vIn37
data T_Exports_vOut37
T_Exports_vOut37 :: (Exports) -> T_Exports_vOut37
sem_Exports_Cons :: T_Export -> T_Exports -> T_Exports
sem_Exports_Nil :: T_Exports
data Inh_Expression
Inh_Expression :: (OperatorTable) -> ([ResolveError]) -> Inh_Expression
opTable_Inh_Expression :: Inh_Expression -> (OperatorTable)
resolveErrors_Inh_Expression :: Inh_Expression -> ([ResolveError])
data Syn_Expression
Syn_Expression :: ([ResolveError]) -> (Expression) -> Syn_Expression
resolveErrors_Syn_Expression :: Syn_Expression -> ([ResolveError])
self_Syn_Expression :: Syn_Expression -> (Expression)
wrap_Expression :: T_Expression -> Inh_Expression -> (Syn_Expression)
sem_Expression :: Expression -> T_Expression
newtype T_Expression
T_Expression :: Identity (T_Expression_s41) -> T_Expression
attach_T_Expression :: T_Expression -> Identity (T_Expression_s41)
newtype T_Expression_s41
C_Expression_s41 :: (T_Expression_v40) -> T_Expression_s41
inv_Expression_s41 :: T_Expression_s41 -> (T_Expression_v40)
data T_Expression_s42
C_Expression_s42 :: T_Expression_s42
type T_Expression_v40 = (T_Expression_vIn40) -> (T_Expression_vOut40)
data T_Expression_vIn40
T_Expression_vIn40 :: (OperatorTable) -> ([ResolveError]) -> T_Expression_vIn40
data T_Expression_vOut40
T_Expression_vOut40 :: ([ResolveError]) -> (Expression) -> T_Expression_vOut40
sem_Expression_Hole :: T_Range -> (Integer) -> T_Expression
sem_Expression_Feedback :: T_Range -> (String) -> T_Expression -> T_Expression
sem_Expression_MustUse :: T_Range -> T_Expression -> T_Expression
sem_Expression_Literal :: T_Range -> T_Literal -> T_Expression
sem_Expression_Variable :: T_Range -> T_Name -> T_Expression
sem_Expression_Constructor :: T_Range -> T_Name -> T_Expression
sem_Expression_Parenthesized :: T_Range -> T_Expression -> T_Expression
sem_Expression_NormalApplication :: T_Range -> T_Expression -> T_Expressions -> T_Expression
sem_Expression_InfixApplication :: T_Range -> T_MaybeExpression -> T_Expression -> T_MaybeExpression -> T_Expression
sem_Expression_If :: T_Range -> T_Expression -> T_Expression -> T_Expression -> T_Expression
sem_Expression_Lambda :: T_Range -> T_Patterns -> T_Expression -> T_Expression
sem_Expression_Case :: T_Range -> T_Expression -> T_Alternatives -> T_Expression
sem_Expression_Let :: T_Range -> T_Declarations -> T_Expression -> T_Expression
sem_Expression_Do :: T_Range -> T_Statements -> T_Expression
sem_Expression_List :: T_Range -> T_Expressions -> T_Expression
sem_Expression_Tuple :: T_Range -> T_Expressions -> T_Expression
sem_Expression_Comprehension :: T_Range -> T_Expression -> T_Qualifiers -> T_Expression
sem_Expression_Typed :: T_Range -> T_Expression -> T_Type -> T_Expression
sem_Expression_RecordConstruction :: T_Range -> T_Name -> T_RecordExpressionBindings -> T_Expression
sem_Expression_RecordUpdate :: T_Range -> T_Expression -> T_RecordExpressionBindings -> T_Expression
sem_Expression_Enum :: T_Range -> T_Expression -> T_MaybeExpression -> T_MaybeExpression -> T_Expression
sem_Expression_Negate :: T_Range -> T_Expression -> T_Expression
sem_Expression_NegateFloat :: T_Range -> T_Expression -> T_Expression
data Inh_Expressions
Inh_Expressions :: (OperatorTable) -> ([ResolveError]) -> Inh_Expressions
opTable_Inh_Expressions :: Inh_Expressions -> (OperatorTable)
resolveErrors_Inh_Expressions :: Inh_Expressions -> ([ResolveError])
data Syn_Expressions
Syn_Expressions :: ([ResolveError]) -> (Expressions) -> Syn_Expressions
resolveErrors_Syn_Expressions :: Syn_Expressions -> ([ResolveError])
self_Syn_Expressions :: Syn_Expressions -> (Expressions)
wrap_Expressions :: T_Expressions -> Inh_Expressions -> (Syn_Expressions)
sem_Expressions :: Expressions -> T_Expressions
newtype T_Expressions
T_Expressions :: Identity (T_Expressions_s44) -> T_Expressions
attach_T_Expressions :: T_Expressions -> Identity (T_Expressions_s44)
newtype T_Expressions_s44
C_Expressions_s44 :: (T_Expressions_v43) -> T_Expressions_s44
inv_Expressions_s44 :: T_Expressions_s44 -> (T_Expressions_v43)
data T_Expressions_s45
C_Expressions_s45 :: T_Expressions_s45
type T_Expressions_v43 = (T_Expressions_vIn43) -> (T_Expressions_vOut43)
data T_Expressions_vIn43
T_Expressions_vIn43 :: (OperatorTable) -> ([ResolveError]) -> T_Expressions_vIn43
data T_Expressions_vOut43
T_Expressions_vOut43 :: ([ResolveError]) -> (Expressions) -> T_Expressions_vOut43
sem_Expressions_Cons :: T_Expression -> T_Expressions -> T_Expressions
sem_Expressions_Nil :: T_Expressions
data Inh_FieldDeclaration
Inh_FieldDeclaration :: Inh_FieldDeclaration
data Syn_FieldDeclaration
Syn_FieldDeclaration :: (FieldDeclaration) -> Syn_FieldDeclaration
self_Syn_FieldDeclaration :: Syn_FieldDeclaration -> (FieldDeclaration)
wrap_FieldDeclaration :: T_FieldDeclaration -> Inh_FieldDeclaration -> (Syn_FieldDeclaration)
sem_FieldDeclaration :: FieldDeclaration -> T_FieldDeclaration
newtype T_FieldDeclaration
T_FieldDeclaration :: Identity (T_FieldDeclaration_s47) -> T_FieldDeclaration
attach_T_FieldDeclaration :: T_FieldDeclaration -> Identity (T_FieldDeclaration_s47)
newtype T_FieldDeclaration_s47
C_FieldDeclaration_s47 :: (T_FieldDeclaration_v46) -> T_FieldDeclaration_s47
inv_FieldDeclaration_s47 :: T_FieldDeclaration_s47 -> (T_FieldDeclaration_v46)
data T_FieldDeclaration_s48
C_FieldDeclaration_s48 :: T_FieldDeclaration_s48
type T_FieldDeclaration_v46 = (T_FieldDeclaration_vIn46) -> (T_FieldDeclaration_vOut46)
data T_FieldDeclaration_vIn46
T_FieldDeclaration_vIn46 :: T_FieldDeclaration_vIn46
data T_FieldDeclaration_vOut46
T_FieldDeclaration_vOut46 :: (FieldDeclaration) -> T_FieldDeclaration_vOut46
sem_FieldDeclaration_FieldDeclaration :: T_Range -> T_Names -> T_AnnotatedType -> T_FieldDeclaration
data Inh_FieldDeclarations
Inh_FieldDeclarations :: Inh_FieldDeclarations
data Syn_FieldDeclarations
Syn_FieldDeclarations :: (FieldDeclarations) -> Syn_FieldDeclarations
self_Syn_FieldDeclarations :: Syn_FieldDeclarations -> (FieldDeclarations)
wrap_FieldDeclarations :: T_FieldDeclarations -> Inh_FieldDeclarations -> (Syn_FieldDeclarations)
sem_FieldDeclarations :: FieldDeclarations -> T_FieldDeclarations
newtype T_FieldDeclarations
T_FieldDeclarations :: Identity (T_FieldDeclarations_s50) -> T_FieldDeclarations
attach_T_FieldDeclarations :: T_FieldDeclarations -> Identity (T_FieldDeclarations_s50)
newtype T_FieldDeclarations_s50
C_FieldDeclarations_s50 :: (T_FieldDeclarations_v49) -> T_FieldDeclarations_s50
inv_FieldDeclarations_s50 :: T_FieldDeclarations_s50 -> (T_FieldDeclarations_v49)
data T_FieldDeclarations_s51
C_FieldDeclarations_s51 :: T_FieldDeclarations_s51
type T_FieldDeclarations_v49 = (T_FieldDeclarations_vIn49) -> (T_FieldDeclarations_vOut49)
data T_FieldDeclarations_vIn49
T_FieldDeclarations_vIn49 :: T_FieldDeclarations_vIn49
data T_FieldDeclarations_vOut49
T_FieldDeclarations_vOut49 :: (FieldDeclarations) -> T_FieldDeclarations_vOut49
sem_FieldDeclarations_Cons :: T_FieldDeclaration -> T_FieldDeclarations -> T_FieldDeclarations
sem_FieldDeclarations_Nil :: T_FieldDeclarations
data Inh_Fixity
Inh_Fixity :: Inh_Fixity
data Syn_Fixity
Syn_Fixity :: (Fixity) -> Syn_Fixity
self_Syn_Fixity :: Syn_Fixity -> (Fixity)
wrap_Fixity :: T_Fixity -> Inh_Fixity -> (Syn_Fixity)
sem_Fixity :: Fixity -> T_Fixity
newtype T_Fixity
T_Fixity :: Identity (T_Fixity_s53) -> T_Fixity
attach_T_Fixity :: T_Fixity -> Identity (T_Fixity_s53)
newtype T_Fixity_s53
C_Fixity_s53 :: (T_Fixity_v52) -> T_Fixity_s53
inv_Fixity_s53 :: T_Fixity_s53 -> (T_Fixity_v52)
data T_Fixity_s54
C_Fixity_s54 :: T_Fixity_s54
type T_Fixity_v52 = (T_Fixity_vIn52) -> (T_Fixity_vOut52)
data T_Fixity_vIn52
T_Fixity_vIn52 :: T_Fixity_vIn52
data T_Fixity_vOut52
T_Fixity_vOut52 :: (Fixity) -> T_Fixity_vOut52
sem_Fixity_Infixl :: T_Range -> T_Fixity
sem_Fixity_Infixr :: T_Range -> T_Fixity
sem_Fixity_Infix :: T_Range -> T_Fixity
data Inh_FunctionBinding
Inh_FunctionBinding :: (OperatorTable) -> ([ResolveError]) -> Inh_FunctionBinding
opTable_Inh_FunctionBinding :: Inh_FunctionBinding -> (OperatorTable)
resolveErrors_Inh_FunctionBinding :: Inh_FunctionBinding -> ([ResolveError])
data Syn_FunctionBinding
Syn_FunctionBinding :: ([ResolveError]) -> (FunctionBinding) -> Syn_FunctionBinding
resolveErrors_Syn_FunctionBinding :: Syn_FunctionBinding -> ([ResolveError])
self_Syn_FunctionBinding :: Syn_FunctionBinding -> (FunctionBinding)
wrap_FunctionBinding :: T_FunctionBinding -> Inh_FunctionBinding -> (Syn_FunctionBinding)
sem_FunctionBinding :: FunctionBinding -> T_FunctionBinding
newtype T_FunctionBinding
T_FunctionBinding :: Identity (T_FunctionBinding_s56) -> T_FunctionBinding
attach_T_FunctionBinding :: T_FunctionBinding -> Identity (T_FunctionBinding_s56)
newtype T_FunctionBinding_s56
C_FunctionBinding_s56 :: (T_FunctionBinding_v55) -> T_FunctionBinding_s56
inv_FunctionBinding_s56 :: T_FunctionBinding_s56 -> (T_FunctionBinding_v55)
data T_FunctionBinding_s57
C_FunctionBinding_s57 :: T_FunctionBinding_s57
type T_FunctionBinding_v55 = (T_FunctionBinding_vIn55) -> (T_FunctionBinding_vOut55)
data T_FunctionBinding_vIn55
T_FunctionBinding_vIn55 :: (OperatorTable) -> ([ResolveError]) -> T_FunctionBinding_vIn55
data T_FunctionBinding_vOut55
T_FunctionBinding_vOut55 :: ([ResolveError]) -> (FunctionBinding) -> T_FunctionBinding_vOut55
sem_FunctionBinding_Hole :: T_Range -> (Integer) -> T_FunctionBinding
sem_FunctionBinding_Feedback :: T_Range -> (String) -> T_FunctionBinding -> T_FunctionBinding
sem_FunctionBinding_FunctionBinding :: T_Range -> T_LeftHandSide -> T_RightHandSide -> T_FunctionBinding
data Inh_FunctionBindings
Inh_FunctionBindings :: (OperatorTable) -> ([ResolveError]) -> Inh_FunctionBindings
opTable_Inh_FunctionBindings :: Inh_FunctionBindings -> (OperatorTable)
resolveErrors_Inh_FunctionBindings :: Inh_FunctionBindings -> ([ResolveError])
data Syn_FunctionBindings
Syn_FunctionBindings :: ([ResolveError]) -> (FunctionBindings) -> Syn_FunctionBindings
resolveErrors_Syn_FunctionBindings :: Syn_FunctionBindings -> ([ResolveError])
self_Syn_FunctionBindings :: Syn_FunctionBindings -> (FunctionBindings)
wrap_FunctionBindings :: T_FunctionBindings -> Inh_FunctionBindings -> (Syn_FunctionBindings)
sem_FunctionBindings :: FunctionBindings -> T_FunctionBindings
newtype T_FunctionBindings
T_FunctionBindings :: Identity (T_FunctionBindings_s59) -> T_FunctionBindings
attach_T_FunctionBindings :: T_FunctionBindings -> Identity (T_FunctionBindings_s59)
newtype T_FunctionBindings_s59
C_FunctionBindings_s59 :: (T_FunctionBindings_v58) -> T_FunctionBindings_s59
inv_FunctionBindings_s59 :: T_FunctionBindings_s59 -> (T_FunctionBindings_v58)
data T_FunctionBindings_s60
C_FunctionBindings_s60 :: T_FunctionBindings_s60
type T_FunctionBindings_v58 = (T_FunctionBindings_vIn58) -> (T_FunctionBindings_vOut58)
data T_FunctionBindings_vIn58
T_FunctionBindings_vIn58 :: (OperatorTable) -> ([ResolveError]) -> T_FunctionBindings_vIn58
data T_FunctionBindings_vOut58
T_FunctionBindings_vOut58 :: ([ResolveError]) -> (FunctionBindings) -> T_FunctionBindings_vOut58
sem_FunctionBindings_Cons :: T_FunctionBinding -> T_FunctionBindings -> T_FunctionBindings
sem_FunctionBindings_Nil :: T_FunctionBindings
data Inh_GuardedExpression
Inh_GuardedExpression :: (OperatorTable) -> ([ResolveError]) -> Inh_GuardedExpression
opTable_Inh_GuardedExpression :: Inh_GuardedExpression -> (OperatorTable)
resolveErrors_Inh_GuardedExpression :: Inh_GuardedExpression -> ([ResolveError])
data Syn_GuardedExpression
Syn_GuardedExpression :: ([ResolveError]) -> (GuardedExpression) -> Syn_GuardedExpression
resolveErrors_Syn_GuardedExpression :: Syn_GuardedExpression -> ([ResolveError])
self_Syn_GuardedExpression :: Syn_GuardedExpression -> (GuardedExpression)
wrap_GuardedExpression :: T_GuardedExpression -> Inh_GuardedExpression -> (Syn_GuardedExpression)
sem_GuardedExpression :: GuardedExpression -> T_GuardedExpression
newtype T_GuardedExpression
T_GuardedExpression :: Identity (T_GuardedExpression_s62) -> T_GuardedExpression
attach_T_GuardedExpression :: T_GuardedExpression -> Identity (T_GuardedExpression_s62)
newtype T_GuardedExpression_s62
C_GuardedExpression_s62 :: (T_GuardedExpression_v61) -> T_GuardedExpression_s62
inv_GuardedExpression_s62 :: T_GuardedExpression_s62 -> (T_GuardedExpression_v61)
data T_GuardedExpression_s63
C_GuardedExpression_s63 :: T_GuardedExpression_s63
type T_GuardedExpression_v61 = (T_GuardedExpression_vIn61) -> (T_GuardedExpression_vOut61)
data T_GuardedExpression_vIn61
T_GuardedExpression_vIn61 :: (OperatorTable) -> ([ResolveError]) -> T_GuardedExpression_vIn61
data T_GuardedExpression_vOut61
T_GuardedExpression_vOut61 :: ([ResolveError]) -> (GuardedExpression) -> T_GuardedExpression_vOut61
sem_GuardedExpression_GuardedExpression :: T_Range -> T_Expression -> T_Expression -> T_GuardedExpression
data Inh_GuardedExpressions
Inh_GuardedExpressions :: (OperatorTable) -> ([ResolveError]) -> Inh_GuardedExpressions
opTable_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (OperatorTable)
resolveErrors_Inh_GuardedExpressions :: Inh_GuardedExpressions -> ([ResolveError])
data Syn_GuardedExpressions
Syn_GuardedExpressions :: ([ResolveError]) -> (GuardedExpressions) -> Syn_GuardedExpressions
resolveErrors_Syn_GuardedExpressions :: Syn_GuardedExpressions -> ([ResolveError])
self_Syn_GuardedExpressions :: Syn_GuardedExpressions -> (GuardedExpressions)
wrap_GuardedExpressions :: T_GuardedExpressions -> Inh_GuardedExpressions -> (Syn_GuardedExpressions)
sem_GuardedExpressions :: GuardedExpressions -> T_GuardedExpressions
newtype T_GuardedExpressions
T_GuardedExpressions :: Identity (T_GuardedExpressions_s65) -> T_GuardedExpressions
attach_T_GuardedExpressions :: T_GuardedExpressions -> Identity (T_GuardedExpressions_s65)
newtype T_GuardedExpressions_s65
C_GuardedExpressions_s65 :: (T_GuardedExpressions_v64) -> T_GuardedExpressions_s65
inv_GuardedExpressions_s65 :: T_GuardedExpressions_s65 -> (T_GuardedExpressions_v64)
data T_GuardedExpressions_s66
C_GuardedExpressions_s66 :: T_GuardedExpressions_s66
type T_GuardedExpressions_v64 = (T_GuardedExpressions_vIn64) -> (T_GuardedExpressions_vOut64)
data T_GuardedExpressions_vIn64
T_GuardedExpressions_vIn64 :: (OperatorTable) -> ([ResolveError]) -> T_GuardedExpressions_vIn64
data T_GuardedExpressions_vOut64
T_GuardedExpressions_vOut64 :: ([ResolveError]) -> (GuardedExpressions) -> T_GuardedExpressions_vOut64
sem_GuardedExpressions_Cons :: T_GuardedExpression -> T_GuardedExpressions -> T_GuardedExpressions
sem_GuardedExpressions_Nil :: T_GuardedExpressions
data Inh_Import
Inh_Import :: Inh_Import
data Syn_Import
Syn_Import :: (Import) -> Syn_Import
self_Syn_Import :: Syn_Import -> (Import)
wrap_Import :: T_Import -> Inh_Import -> (Syn_Import)
sem_Import :: Import -> T_Import
newtype T_Import
T_Import :: Identity (T_Import_s68) -> T_Import
attach_T_Import :: T_Import -> Identity (T_Import_s68)
newtype T_Import_s68
C_Import_s68 :: (T_Import_v67) -> T_Import_s68
inv_Import_s68 :: T_Import_s68 -> (T_Import_v67)
data T_Import_s69
C_Import_s69 :: T_Import_s69
type T_Import_v67 = (T_Import_vIn67) -> (T_Import_vOut67)
data T_Import_vIn67
T_Import_vIn67 :: T_Import_vIn67
data T_Import_vOut67
T_Import_vOut67 :: (Import) -> T_Import_vOut67
sem_Import_Variable :: T_Range -> T_Name -> T_Import
sem_Import_TypeOrClass :: T_Range -> T_Name -> T_MaybeNames -> T_Import
sem_Import_TypeOrClassComplete :: T_Range -> T_Name -> T_Import
data Inh_ImportDeclaration
Inh_ImportDeclaration :: Inh_ImportDeclaration
data Syn_ImportDeclaration
Syn_ImportDeclaration :: (ImportDeclaration) -> Syn_ImportDeclaration
self_Syn_ImportDeclaration :: Syn_ImportDeclaration -> (ImportDeclaration)
wrap_ImportDeclaration :: T_ImportDeclaration -> Inh_ImportDeclaration -> (Syn_ImportDeclaration)
sem_ImportDeclaration :: ImportDeclaration -> T_ImportDeclaration
newtype T_ImportDeclaration
T_ImportDeclaration :: Identity (T_ImportDeclaration_s71) -> T_ImportDeclaration
attach_T_ImportDeclaration :: T_ImportDeclaration -> Identity (T_ImportDeclaration_s71)
newtype T_ImportDeclaration_s71
C_ImportDeclaration_s71 :: (T_ImportDeclaration_v70) -> T_ImportDeclaration_s71
inv_ImportDeclaration_s71 :: T_ImportDeclaration_s71 -> (T_ImportDeclaration_v70)
data T_ImportDeclaration_s72
C_ImportDeclaration_s72 :: T_ImportDeclaration_s72
type T_ImportDeclaration_v70 = (T_ImportDeclaration_vIn70) -> (T_ImportDeclaration_vOut70)
data T_ImportDeclaration_vIn70
T_ImportDeclaration_vIn70 :: T_ImportDeclaration_vIn70
data T_ImportDeclaration_vOut70
T_ImportDeclaration_vOut70 :: (ImportDeclaration) -> T_ImportDeclaration_vOut70
sem_ImportDeclaration_Import :: T_Range -> (Bool) -> T_Name -> T_MaybeName -> T_MaybeImportSpecification -> T_ImportDeclaration
sem_ImportDeclaration_Empty :: T_Range -> T_ImportDeclaration
data Inh_ImportDeclarations
Inh_ImportDeclarations :: Inh_ImportDeclarations
data Syn_ImportDeclarations
Syn_ImportDeclarations :: (ImportDeclarations) -> Syn_ImportDeclarations
self_Syn_ImportDeclarations :: Syn_ImportDeclarations -> (ImportDeclarations)
wrap_ImportDeclarations :: T_ImportDeclarations -> Inh_ImportDeclarations -> (Syn_ImportDeclarations)
sem_ImportDeclarations :: ImportDeclarations -> T_ImportDeclarations
newtype T_ImportDeclarations
T_ImportDeclarations :: Identity (T_ImportDeclarations_s74) -> T_ImportDeclarations
attach_T_ImportDeclarations :: T_ImportDeclarations -> Identity (T_ImportDeclarations_s74)
newtype T_ImportDeclarations_s74
C_ImportDeclarations_s74 :: (T_ImportDeclarations_v73) -> T_ImportDeclarations_s74
inv_ImportDeclarations_s74 :: T_ImportDeclarations_s74 -> (T_ImportDeclarations_v73)
data T_ImportDeclarations_s75
C_ImportDeclarations_s75 :: T_ImportDeclarations_s75
type T_ImportDeclarations_v73 = (T_ImportDeclarations_vIn73) -> (T_ImportDeclarations_vOut73)
data T_ImportDeclarations_vIn73
T_ImportDeclarations_vIn73 :: T_ImportDeclarations_vIn73
data T_ImportDeclarations_vOut73
T_ImportDeclarations_vOut73 :: (ImportDeclarations) -> T_ImportDeclarations_vOut73
sem_ImportDeclarations_Cons :: T_ImportDeclaration -> T_ImportDeclarations -> T_ImportDeclarations
sem_ImportDeclarations_Nil :: T_ImportDeclarations
data Inh_ImportSpecification
Inh_ImportSpecification :: Inh_ImportSpecification
data Syn_ImportSpecification
Syn_ImportSpecification :: (ImportSpecification) -> Syn_ImportSpecification
self_Syn_ImportSpecification :: Syn_ImportSpecification -> (ImportSpecification)
wrap_ImportSpecification :: T_ImportSpecification -> Inh_ImportSpecification -> (Syn_ImportSpecification)
sem_ImportSpecification :: ImportSpecification -> T_ImportSpecification
newtype T_ImportSpecification
T_ImportSpecification :: Identity (T_ImportSpecification_s77) -> T_ImportSpecification
attach_T_ImportSpecification :: T_ImportSpecification -> Identity (T_ImportSpecification_s77)
newtype T_ImportSpecification_s77
C_ImportSpecification_s77 :: (T_ImportSpecification_v76) -> T_ImportSpecification_s77
inv_ImportSpecification_s77 :: T_ImportSpecification_s77 -> (T_ImportSpecification_v76)
data T_ImportSpecification_s78
C_ImportSpecification_s78 :: T_ImportSpecification_s78
type T_ImportSpecification_v76 = (T_ImportSpecification_vIn76) -> (T_ImportSpecification_vOut76)
data T_ImportSpecification_vIn76
T_ImportSpecification_vIn76 :: T_ImportSpecification_vIn76
data T_ImportSpecification_vOut76
T_ImportSpecification_vOut76 :: (ImportSpecification) -> T_ImportSpecification_vOut76
sem_ImportSpecification_Import :: T_Range -> (Bool) -> T_Imports -> T_ImportSpecification
data Inh_Imports
Inh_Imports :: Inh_Imports
data Syn_Imports
Syn_Imports :: (Imports) -> Syn_Imports
self_Syn_Imports :: Syn_Imports -> (Imports)
wrap_Imports :: T_Imports -> Inh_Imports -> (Syn_Imports)
sem_Imports :: Imports -> T_Imports
newtype T_Imports
T_Imports :: Identity (T_Imports_s80) -> T_Imports
attach_T_Imports :: T_Imports -> Identity (T_Imports_s80)
newtype T_Imports_s80
C_Imports_s80 :: (T_Imports_v79) -> T_Imports_s80
inv_Imports_s80 :: T_Imports_s80 -> (T_Imports_v79)
data T_Imports_s81
C_Imports_s81 :: T_Imports_s81
type T_Imports_v79 = (T_Imports_vIn79) -> (T_Imports_vOut79)
data T_Imports_vIn79
T_Imports_vIn79 :: T_Imports_vIn79
data T_Imports_vOut79
T_Imports_vOut79 :: (Imports) -> T_Imports_vOut79
sem_Imports_Cons :: T_Import -> T_Imports -> T_Imports
sem_Imports_Nil :: T_Imports
data Inh_LeftHandSide
Inh_LeftHandSide :: (OperatorTable) -> ([ResolveError]) -> Inh_LeftHandSide
opTable_Inh_LeftHandSide :: Inh_LeftHandSide -> (OperatorTable)
resolveErrors_Inh_LeftHandSide :: Inh_LeftHandSide -> ([ResolveError])
data Syn_LeftHandSide
Syn_LeftHandSide :: ([ResolveError]) -> (LeftHandSide) -> Syn_LeftHandSide
resolveErrors_Syn_LeftHandSide :: Syn_LeftHandSide -> ([ResolveError])
self_Syn_LeftHandSide :: Syn_LeftHandSide -> (LeftHandSide)
wrap_LeftHandSide :: T_LeftHandSide -> Inh_LeftHandSide -> (Syn_LeftHandSide)
sem_LeftHandSide :: LeftHandSide -> T_LeftHandSide
newtype T_LeftHandSide
T_LeftHandSide :: Identity (T_LeftHandSide_s83) -> T_LeftHandSide
attach_T_LeftHandSide :: T_LeftHandSide -> Identity (T_LeftHandSide_s83)
newtype T_LeftHandSide_s83
C_LeftHandSide_s83 :: (T_LeftHandSide_v82) -> T_LeftHandSide_s83
inv_LeftHandSide_s83 :: T_LeftHandSide_s83 -> (T_LeftHandSide_v82)
data T_LeftHandSide_s84
C_LeftHandSide_s84 :: T_LeftHandSide_s84
type T_LeftHandSide_v82 = (T_LeftHandSide_vIn82) -> (T_LeftHandSide_vOut82)
data T_LeftHandSide_vIn82
T_LeftHandSide_vIn82 :: (OperatorTable) -> ([ResolveError]) -> T_LeftHandSide_vIn82
data T_LeftHandSide_vOut82
T_LeftHandSide_vOut82 :: ([ResolveError]) -> (LeftHandSide) -> T_LeftHandSide_vOut82
sem_LeftHandSide_Function :: T_Range -> T_Name -> T_Patterns -> T_LeftHandSide
sem_LeftHandSide_Infix :: T_Range -> T_Pattern -> T_Name -> T_Pattern -> T_LeftHandSide
sem_LeftHandSide_Parenthesized :: T_Range -> T_LeftHandSide -> T_Patterns -> T_LeftHandSide
data Inh_Literal
Inh_Literal :: Inh_Literal
data Syn_Literal
Syn_Literal :: (Literal) -> Syn_Literal
self_Syn_Literal :: Syn_Literal -> (Literal)
wrap_Literal :: T_Literal -> Inh_Literal -> (Syn_Literal)
sem_Literal :: Literal -> T_Literal
newtype T_Literal
T_Literal :: Identity (T_Literal_s86) -> T_Literal
attach_T_Literal :: T_Literal -> Identity (T_Literal_s86)
newtype T_Literal_s86
C_Literal_s86 :: (T_Literal_v85) -> T_Literal_s86
inv_Literal_s86 :: T_Literal_s86 -> (T_Literal_v85)
data T_Literal_s87
C_Literal_s87 :: T_Literal_s87
type T_Literal_v85 = (T_Literal_vIn85) -> (T_Literal_vOut85)
data T_Literal_vIn85
T_Literal_vIn85 :: T_Literal_vIn85
data T_Literal_vOut85
T_Literal_vOut85 :: (Literal) -> T_Literal_vOut85
sem_Literal_Int :: T_Range -> (String) -> T_Literal
sem_Literal_Char :: T_Range -> (String) -> T_Literal
sem_Literal_Float :: T_Range -> (String) -> T_Literal
sem_Literal_String :: T_Range -> (String) -> T_Literal
data Inh_MaybeDeclarations
Inh_MaybeDeclarations :: (OperatorTable) -> ([ResolveError]) -> Inh_MaybeDeclarations
opTable_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (OperatorTable)
resolveErrors_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> ([ResolveError])
data Syn_MaybeDeclarations
Syn_MaybeDeclarations :: ([ResolveError]) -> (MaybeDeclarations) -> Syn_MaybeDeclarations
resolveErrors_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> ([ResolveError])
self_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> (MaybeDeclarations)
wrap_MaybeDeclarations :: T_MaybeDeclarations -> Inh_MaybeDeclarations -> (Syn_MaybeDeclarations)
sem_MaybeDeclarations :: MaybeDeclarations -> T_MaybeDeclarations
newtype T_MaybeDeclarations
T_MaybeDeclarations :: Identity (T_MaybeDeclarations_s89) -> T_MaybeDeclarations
attach_T_MaybeDeclarations :: T_MaybeDeclarations -> Identity (T_MaybeDeclarations_s89)
newtype T_MaybeDeclarations_s89
C_MaybeDeclarations_s89 :: (T_MaybeDeclarations_v88) -> T_MaybeDeclarations_s89
inv_MaybeDeclarations_s89 :: T_MaybeDeclarations_s89 -> (T_MaybeDeclarations_v88)
data T_MaybeDeclarations_s90
C_MaybeDeclarations_s90 :: T_MaybeDeclarations_s90
type T_MaybeDeclarations_v88 = (T_MaybeDeclarations_vIn88) -> (T_MaybeDeclarations_vOut88)
data T_MaybeDeclarations_vIn88
T_MaybeDeclarations_vIn88 :: (OperatorTable) -> ([ResolveError]) -> T_MaybeDeclarations_vIn88
data T_MaybeDeclarations_vOut88
T_MaybeDeclarations_vOut88 :: ([ResolveError]) -> (MaybeDeclarations) -> T_MaybeDeclarations_vOut88
sem_MaybeDeclarations_Nothing :: T_MaybeDeclarations
sem_MaybeDeclarations_Just :: T_Declarations -> T_MaybeDeclarations
data Inh_MaybeExports
Inh_MaybeExports :: Inh_MaybeExports
data Syn_MaybeExports
Syn_MaybeExports :: (MaybeExports) -> Syn_MaybeExports
self_Syn_MaybeExports :: Syn_MaybeExports -> (MaybeExports)
wrap_MaybeExports :: T_MaybeExports -> Inh_MaybeExports -> (Syn_MaybeExports)
sem_MaybeExports :: MaybeExports -> T_MaybeExports
newtype T_MaybeExports
T_MaybeExports :: Identity (T_MaybeExports_s92) -> T_MaybeExports
attach_T_MaybeExports :: T_MaybeExports -> Identity (T_MaybeExports_s92)
newtype T_MaybeExports_s92
C_MaybeExports_s92 :: (T_MaybeExports_v91) -> T_MaybeExports_s92
inv_MaybeExports_s92 :: T_MaybeExports_s92 -> (T_MaybeExports_v91)
data T_MaybeExports_s93
C_MaybeExports_s93 :: T_MaybeExports_s93
type T_MaybeExports_v91 = (T_MaybeExports_vIn91) -> (T_MaybeExports_vOut91)
data T_MaybeExports_vIn91
T_MaybeExports_vIn91 :: T_MaybeExports_vIn91
data T_MaybeExports_vOut91
T_MaybeExports_vOut91 :: (MaybeExports) -> T_MaybeExports_vOut91
sem_MaybeExports_Nothing :: T_MaybeExports
sem_MaybeExports_Just :: T_Exports -> T_MaybeExports
data Inh_MaybeExpression
Inh_MaybeExpression :: (OperatorTable) -> ([ResolveError]) -> Inh_MaybeExpression
opTable_Inh_MaybeExpression :: Inh_MaybeExpression -> (OperatorTable)
resolveErrors_Inh_MaybeExpression :: Inh_MaybeExpression -> ([ResolveError])
data Syn_MaybeExpression
Syn_MaybeExpression :: ([ResolveError]) -> (MaybeExpression) -> Syn_MaybeExpression
resolveErrors_Syn_MaybeExpression :: Syn_MaybeExpression -> ([ResolveError])
self_Syn_MaybeExpression :: Syn_MaybeExpression -> (MaybeExpression)
wrap_MaybeExpression :: T_MaybeExpression -> Inh_MaybeExpression -> (Syn_MaybeExpression)
sem_MaybeExpression :: MaybeExpression -> T_MaybeExpression
newtype T_MaybeExpression
T_MaybeExpression :: Identity (T_MaybeExpression_s95) -> T_MaybeExpression
attach_T_MaybeExpression :: T_MaybeExpression -> Identity (T_MaybeExpression_s95)
newtype T_MaybeExpression_s95
C_MaybeExpression_s95 :: (T_MaybeExpression_v94) -> T_MaybeExpression_s95
inv_MaybeExpression_s95 :: T_MaybeExpression_s95 -> (T_MaybeExpression_v94)
data T_MaybeExpression_s96
C_MaybeExpression_s96 :: T_MaybeExpression_s96
type T_MaybeExpression_v94 = (T_MaybeExpression_vIn94) -> (T_MaybeExpression_vOut94)
data T_MaybeExpression_vIn94
T_MaybeExpression_vIn94 :: (OperatorTable) -> ([ResolveError]) -> T_MaybeExpression_vIn94
data T_MaybeExpression_vOut94
T_MaybeExpression_vOut94 :: ([ResolveError]) -> (MaybeExpression) -> T_MaybeExpression_vOut94
sem_MaybeExpression_Nothing :: T_MaybeExpression
sem_MaybeExpression_Just :: T_Expression -> T_MaybeExpression
data Inh_MaybeImportSpecification
Inh_MaybeImportSpecification :: Inh_MaybeImportSpecification
data Syn_MaybeImportSpecification
Syn_MaybeImportSpecification :: (MaybeImportSpecification) -> Syn_MaybeImportSpecification
self_Syn_MaybeImportSpecification :: Syn_MaybeImportSpecification -> (MaybeImportSpecification)
wrap_MaybeImportSpecification :: T_MaybeImportSpecification -> Inh_MaybeImportSpecification -> (Syn_MaybeImportSpecification)
sem_MaybeImportSpecification :: MaybeImportSpecification -> T_MaybeImportSpecification
newtype T_MaybeImportSpecification
T_MaybeImportSpecification :: Identity (T_MaybeImportSpecification_s98) -> T_MaybeImportSpecification
attach_T_MaybeImportSpecification :: T_MaybeImportSpecification -> Identity (T_MaybeImportSpecification_s98)
newtype T_MaybeImportSpecification_s98
C_MaybeImportSpecification_s98 :: (T_MaybeImportSpecification_v97) -> T_MaybeImportSpecification_s98
inv_MaybeImportSpecification_s98 :: T_MaybeImportSpecification_s98 -> (T_MaybeImportSpecification_v97)
data T_MaybeImportSpecification_s99
C_MaybeImportSpecification_s99 :: T_MaybeImportSpecification_s99
type T_MaybeImportSpecification_v97 = (T_MaybeImportSpecification_vIn97) -> (T_MaybeImportSpecification_vOut97)
data T_MaybeImportSpecification_vIn97
T_MaybeImportSpecification_vIn97 :: T_MaybeImportSpecification_vIn97
data T_MaybeImportSpecification_vOut97
T_MaybeImportSpecification_vOut97 :: (MaybeImportSpecification) -> T_MaybeImportSpecification_vOut97
sem_MaybeImportSpecification_Nothing :: T_MaybeImportSpecification
sem_MaybeImportSpecification_Just :: T_ImportSpecification -> T_MaybeImportSpecification
data Inh_MaybeInt
Inh_MaybeInt :: Inh_MaybeInt
data Syn_MaybeInt
Syn_MaybeInt :: (MaybeInt) -> Syn_MaybeInt
self_Syn_MaybeInt :: Syn_MaybeInt -> (MaybeInt)
wrap_MaybeInt :: T_MaybeInt -> Inh_MaybeInt -> (Syn_MaybeInt)
sem_MaybeInt :: MaybeInt -> T_MaybeInt
newtype T_MaybeInt
T_MaybeInt :: Identity (T_MaybeInt_s101) -> T_MaybeInt
attach_T_MaybeInt :: T_MaybeInt -> Identity (T_MaybeInt_s101)
newtype T_MaybeInt_s101
C_MaybeInt_s101 :: (T_MaybeInt_v100) -> T_MaybeInt_s101
inv_MaybeInt_s101 :: T_MaybeInt_s101 -> (T_MaybeInt_v100)
data T_MaybeInt_s102
C_MaybeInt_s102 :: T_MaybeInt_s102
type T_MaybeInt_v100 = (T_MaybeInt_vIn100) -> (T_MaybeInt_vOut100)
data T_MaybeInt_vIn100
T_MaybeInt_vIn100 :: T_MaybeInt_vIn100
data T_MaybeInt_vOut100
T_MaybeInt_vOut100 :: (MaybeInt) -> T_MaybeInt_vOut100
sem_MaybeInt_Nothing :: T_MaybeInt
sem_MaybeInt_Just :: (Int) -> T_MaybeInt
data Inh_MaybeName
Inh_MaybeName :: Inh_MaybeName
data Syn_MaybeName
Syn_MaybeName :: (MaybeName) -> Syn_MaybeName
self_Syn_MaybeName :: Syn_MaybeName -> (MaybeName)
wrap_MaybeName :: T_MaybeName -> Inh_MaybeName -> (Syn_MaybeName)
sem_MaybeName :: MaybeName -> T_MaybeName
newtype T_MaybeName
T_MaybeName :: Identity (T_MaybeName_s104) -> T_MaybeName
attach_T_MaybeName :: T_MaybeName -> Identity (T_MaybeName_s104)
newtype T_MaybeName_s104
C_MaybeName_s104 :: (T_MaybeName_v103) -> T_MaybeName_s104
inv_MaybeName_s104 :: T_MaybeName_s104 -> (T_MaybeName_v103)
data T_MaybeName_s105
C_MaybeName_s105 :: T_MaybeName_s105
type T_MaybeName_v103 = (T_MaybeName_vIn103) -> (T_MaybeName_vOut103)
data T_MaybeName_vIn103
T_MaybeName_vIn103 :: T_MaybeName_vIn103
data T_MaybeName_vOut103
T_MaybeName_vOut103 :: (MaybeName) -> T_MaybeName_vOut103
sem_MaybeName_Nothing :: T_MaybeName
sem_MaybeName_Just :: T_Name -> T_MaybeName
data Inh_MaybeNames
Inh_MaybeNames :: Inh_MaybeNames
data Syn_MaybeNames
Syn_MaybeNames :: (MaybeNames) -> Syn_MaybeNames
self_Syn_MaybeNames :: Syn_MaybeNames -> (MaybeNames)
wrap_MaybeNames :: T_MaybeNames -> Inh_MaybeNames -> (Syn_MaybeNames)
sem_MaybeNames :: MaybeNames -> T_MaybeNames
newtype T_MaybeNames
T_MaybeNames :: Identity (T_MaybeNames_s107) -> T_MaybeNames
attach_T_MaybeNames :: T_MaybeNames -> Identity (T_MaybeNames_s107)
newtype T_MaybeNames_s107
C_MaybeNames_s107 :: (T_MaybeNames_v106) -> T_MaybeNames_s107
inv_MaybeNames_s107 :: T_MaybeNames_s107 -> (T_MaybeNames_v106)
data T_MaybeNames_s108
C_MaybeNames_s108 :: T_MaybeNames_s108
type T_MaybeNames_v106 = (T_MaybeNames_vIn106) -> (T_MaybeNames_vOut106)
data T_MaybeNames_vIn106
T_MaybeNames_vIn106 :: T_MaybeNames_vIn106
data T_MaybeNames_vOut106
T_MaybeNames_vOut106 :: (MaybeNames) -> T_MaybeNames_vOut106
sem_MaybeNames_Nothing :: T_MaybeNames
sem_MaybeNames_Just :: T_Names -> T_MaybeNames
data Inh_Module
Inh_Module :: (OperatorTable) -> ([ResolveError]) -> Inh_Module
opTable_Inh_Module :: Inh_Module -> (OperatorTable)
resolveErrors_Inh_Module :: Inh_Module -> ([ResolveError])
data Syn_Module
Syn_Module :: ([ResolveError]) -> (Module) -> Syn_Module
resolveErrors_Syn_Module :: Syn_Module -> ([ResolveError])
self_Syn_Module :: Syn_Module -> (Module)
wrap_Module :: T_Module -> Inh_Module -> (Syn_Module)
sem_Module :: Module -> T_Module
newtype T_Module
T_Module :: Identity (T_Module_s110) -> T_Module
attach_T_Module :: T_Module -> Identity (T_Module_s110)
newtype T_Module_s110
C_Module_s110 :: (T_Module_v109) -> T_Module_s110
inv_Module_s110 :: T_Module_s110 -> (T_Module_v109)
data T_Module_s111
C_Module_s111 :: T_Module_s111
type T_Module_v109 = (T_Module_vIn109) -> (T_Module_vOut109)
data T_Module_vIn109
T_Module_vIn109 :: (OperatorTable) -> ([ResolveError]) -> T_Module_vIn109
data T_Module_vOut109
T_Module_vOut109 :: ([ResolveError]) -> (Module) -> T_Module_vOut109
sem_Module_Module :: T_Range -> T_MaybeName -> T_MaybeExports -> T_Body -> T_Module
data Inh_Name
Inh_Name :: Inh_Name
data Syn_Name
Syn_Name :: (Name) -> Syn_Name
self_Syn_Name :: Syn_Name -> (Name)
wrap_Name :: T_Name -> Inh_Name -> (Syn_Name)
sem_Name :: Name -> T_Name
newtype T_Name
T_Name :: Identity (T_Name_s113) -> T_Name
attach_T_Name :: T_Name -> Identity (T_Name_s113)
newtype T_Name_s113
C_Name_s113 :: (T_Name_v112) -> T_Name_s113
inv_Name_s113 :: T_Name_s113 -> (T_Name_v112)
data T_Name_s114
C_Name_s114 :: T_Name_s114
type T_Name_v112 = (T_Name_vIn112) -> (T_Name_vOut112)
data T_Name_vIn112
T_Name_vIn112 :: T_Name_vIn112
data T_Name_vOut112
T_Name_vOut112 :: (Name) -> T_Name_vOut112
sem_Name_Identifier :: T_Range -> T_Strings -> (String) -> T_Name
sem_Name_Operator :: T_Range -> T_Strings -> (String) -> T_Name
sem_Name_Special :: T_Range -> T_Strings -> (String) -> T_Name
data Inh_Names
Inh_Names :: Inh_Names
data Syn_Names
Syn_Names :: (Names) -> Syn_Names
self_Syn_Names :: Syn_Names -> (Names)
wrap_Names :: T_Names -> Inh_Names -> (Syn_Names)
sem_Names :: Names -> T_Names
newtype T_Names
T_Names :: Identity (T_Names_s116) -> T_Names
attach_T_Names :: T_Names -> Identity (T_Names_s116)
newtype T_Names_s116
C_Names_s116 :: (T_Names_v115) -> T_Names_s116
inv_Names_s116 :: T_Names_s116 -> (T_Names_v115)
data T_Names_s117
C_Names_s117 :: T_Names_s117
type T_Names_v115 = (T_Names_vIn115) -> (T_Names_vOut115)
data T_Names_vIn115
T_Names_vIn115 :: T_Names_vIn115
data T_Names_vOut115
T_Names_vOut115 :: (Names) -> T_Names_vOut115
sem_Names_Cons :: T_Name -> T_Names -> T_Names
sem_Names_Nil :: T_Names
data Inh_Pattern
Inh_Pattern :: (OperatorTable) -> ([ResolveError]) -> Inh_Pattern
opTable_Inh_Pattern :: Inh_Pattern -> (OperatorTable)
resolveErrors_Inh_Pattern :: Inh_Pattern -> ([ResolveError])
data Syn_Pattern
Syn_Pattern :: ([ResolveError]) -> (Pattern) -> Syn_Pattern
resolveErrors_Syn_Pattern :: Syn_Pattern -> ([ResolveError])
self_Syn_Pattern :: Syn_Pattern -> (Pattern)
wrap_Pattern :: T_Pattern -> Inh_Pattern -> (Syn_Pattern)
sem_Pattern :: Pattern -> T_Pattern
newtype T_Pattern
T_Pattern :: Identity (T_Pattern_s119) -> T_Pattern
attach_T_Pattern :: T_Pattern -> Identity (T_Pattern_s119)
newtype T_Pattern_s119
C_Pattern_s119 :: (T_Pattern_v118) -> T_Pattern_s119
inv_Pattern_s119 :: T_Pattern_s119 -> (T_Pattern_v118)
data T_Pattern_s120
C_Pattern_s120 :: T_Pattern_s120
type T_Pattern_v118 = (T_Pattern_vIn118) -> (T_Pattern_vOut118)
data T_Pattern_vIn118
T_Pattern_vIn118 :: (OperatorTable) -> ([ResolveError]) -> T_Pattern_vIn118
data T_Pattern_vOut118
T_Pattern_vOut118 :: ([ResolveError]) -> (Pattern) -> T_Pattern_vOut118
sem_Pattern_Hole :: T_Range -> (Integer) -> T_Pattern
sem_Pattern_Literal :: T_Range -> T_Literal -> T_Pattern
sem_Pattern_Variable :: T_Range -> T_Name -> T_Pattern
sem_Pattern_Constructor :: T_Range -> T_Name -> T_Patterns -> T_Pattern
sem_Pattern_Parenthesized :: T_Range -> T_Pattern -> T_Pattern
sem_Pattern_InfixConstructor :: T_Range -> T_Pattern -> T_Name -> T_Pattern -> T_Pattern
sem_Pattern_List :: T_Range -> T_Patterns -> T_Pattern
sem_Pattern_Tuple :: T_Range -> T_Patterns -> T_Pattern
sem_Pattern_Record :: T_Range -> T_Name -> T_RecordPatternBindings -> T_Pattern
sem_Pattern_Negate :: T_Range -> T_Literal -> T_Pattern
sem_Pattern_As :: T_Range -> T_Name -> T_Pattern -> T_Pattern
sem_Pattern_Wildcard :: T_Range -> T_Pattern
sem_Pattern_Irrefutable :: T_Range -> T_Pattern -> T_Pattern
sem_Pattern_Successor :: T_Range -> T_Name -> T_Literal -> T_Pattern
sem_Pattern_NegateFloat :: T_Range -> T_Literal -> T_Pattern
data Inh_Patterns
Inh_Patterns :: (OperatorTable) -> ([ResolveError]) -> Inh_Patterns
opTable_Inh_Patterns :: Inh_Patterns -> (OperatorTable)
resolveErrors_Inh_Patterns :: Inh_Patterns -> ([ResolveError])
data Syn_Patterns
Syn_Patterns :: ([ResolveError]) -> (Patterns) -> Syn_Patterns
resolveErrors_Syn_Patterns :: Syn_Patterns -> ([ResolveError])
self_Syn_Patterns :: Syn_Patterns -> (Patterns)
wrap_Patterns :: T_Patterns -> Inh_Patterns -> (Syn_Patterns)
sem_Patterns :: Patterns -> T_Patterns
newtype T_Patterns
T_Patterns :: Identity (T_Patterns_s122) -> T_Patterns
attach_T_Patterns :: T_Patterns -> Identity (T_Patterns_s122)
newtype T_Patterns_s122
C_Patterns_s122 :: (T_Patterns_v121) -> T_Patterns_s122
inv_Patterns_s122 :: T_Patterns_s122 -> (T_Patterns_v121)
data T_Patterns_s123
C_Patterns_s123 :: T_Patterns_s123
type T_Patterns_v121 = (T_Patterns_vIn121) -> (T_Patterns_vOut121)
data T_Patterns_vIn121
T_Patterns_vIn121 :: (OperatorTable) -> ([ResolveError]) -> T_Patterns_vIn121
data T_Patterns_vOut121
T_Patterns_vOut121 :: ([ResolveError]) -> (Patterns) -> T_Patterns_vOut121
sem_Patterns_Cons :: T_Pattern -> T_Patterns -> T_Patterns
sem_Patterns_Nil :: T_Patterns
data Inh_Position
Inh_Position :: Inh_Position
data Syn_Position
Syn_Position :: (Position) -> Syn_Position
self_Syn_Position :: Syn_Position -> (Position)
wrap_Position :: T_Position -> Inh_Position -> (Syn_Position)
sem_Position :: Position -> T_Position
newtype T_Position
T_Position :: Identity (T_Position_s125) -> T_Position
attach_T_Position :: T_Position -> Identity (T_Position_s125)
newtype T_Position_s125
C_Position_s125 :: (T_Position_v124) -> T_Position_s125
inv_Position_s125 :: T_Position_s125 -> (T_Position_v124)
data T_Position_s126
C_Position_s126 :: T_Position_s126
type T_Position_v124 = (T_Position_vIn124) -> (T_Position_vOut124)
data T_Position_vIn124
T_Position_vIn124 :: T_Position_vIn124
data T_Position_vOut124
T_Position_vOut124 :: (Position) -> T_Position_vOut124
sem_Position_Position :: (String) -> (Int) -> (Int) -> T_Position
sem_Position_Unknown :: T_Position
data Inh_Qualifier
Inh_Qualifier :: (OperatorTable) -> ([ResolveError]) -> Inh_Qualifier
opTable_Inh_Qualifier :: Inh_Qualifier -> (OperatorTable)
resolveErrors_Inh_Qualifier :: Inh_Qualifier -> ([ResolveError])
data Syn_Qualifier
Syn_Qualifier :: ([ResolveError]) -> (Qualifier) -> Syn_Qualifier
resolveErrors_Syn_Qualifier :: Syn_Qualifier -> ([ResolveError])
self_Syn_Qualifier :: Syn_Qualifier -> (Qualifier)
wrap_Qualifier :: T_Qualifier -> Inh_Qualifier -> (Syn_Qualifier)
sem_Qualifier :: Qualifier -> T_Qualifier
newtype T_Qualifier
T_Qualifier :: Identity (T_Qualifier_s128) -> T_Qualifier
attach_T_Qualifier :: T_Qualifier -> Identity (T_Qualifier_s128)
newtype T_Qualifier_s128
C_Qualifier_s128 :: (T_Qualifier_v127) -> T_Qualifier_s128
inv_Qualifier_s128 :: T_Qualifier_s128 -> (T_Qualifier_v127)
data T_Qualifier_s129
C_Qualifier_s129 :: T_Qualifier_s129
type T_Qualifier_v127 = (T_Qualifier_vIn127) -> (T_Qualifier_vOut127)
data T_Qualifier_vIn127
T_Qualifier_vIn127 :: (OperatorTable) -> ([ResolveError]) -> T_Qualifier_vIn127
data T_Qualifier_vOut127
T_Qualifier_vOut127 :: ([ResolveError]) -> (Qualifier) -> T_Qualifier_vOut127
sem_Qualifier_Guard :: T_Range -> T_Expression -> T_Qualifier
sem_Qualifier_Let :: T_Range -> T_Declarations -> T_Qualifier
sem_Qualifier_Generator :: T_Range -> T_Pattern -> T_Expression -> T_Qualifier
sem_Qualifier_Empty :: T_Range -> T_Qualifier
data Inh_Qualifiers
Inh_Qualifiers :: (OperatorTable) -> ([ResolveError]) -> Inh_Qualifiers
opTable_Inh_Qualifiers :: Inh_Qualifiers -> (OperatorTable)
resolveErrors_Inh_Qualifiers :: Inh_Qualifiers -> ([ResolveError])
data Syn_Qualifiers
Syn_Qualifiers :: ([ResolveError]) -> (Qualifiers) -> Syn_Qualifiers
resolveErrors_Syn_Qualifiers :: Syn_Qualifiers -> ([ResolveError])
self_Syn_Qualifiers :: Syn_Qualifiers -> (Qualifiers)
wrap_Qualifiers :: T_Qualifiers -> Inh_Qualifiers -> (Syn_Qualifiers)
sem_Qualifiers :: Qualifiers -> T_Qualifiers
newtype T_Qualifiers
T_Qualifiers :: Identity (T_Qualifiers_s131) -> T_Qualifiers
attach_T_Qualifiers :: T_Qualifiers -> Identity (T_Qualifiers_s131)
newtype T_Qualifiers_s131
C_Qualifiers_s131 :: (T_Qualifiers_v130) -> T_Qualifiers_s131
inv_Qualifiers_s131 :: T_Qualifiers_s131 -> (T_Qualifiers_v130)
data T_Qualifiers_s132
C_Qualifiers_s132 :: T_Qualifiers_s132
type T_Qualifiers_v130 = (T_Qualifiers_vIn130) -> (T_Qualifiers_vOut130)
data T_Qualifiers_vIn130
T_Qualifiers_vIn130 :: (OperatorTable) -> ([ResolveError]) -> T_Qualifiers_vIn130
data T_Qualifiers_vOut130
T_Qualifiers_vOut130 :: ([ResolveError]) -> (Qualifiers) -> T_Qualifiers_vOut130
sem_Qualifiers_Cons :: T_Qualifier -> T_Qualifiers -> T_Qualifiers
sem_Qualifiers_Nil :: T_Qualifiers
data Inh_Range
Inh_Range :: Inh_Range
data Syn_Range
Syn_Range :: (Range) -> Syn_Range
self_Syn_Range :: Syn_Range -> (Range)
wrap_Range :: T_Range -> Inh_Range -> (Syn_Range)
sem_Range :: Range -> T_Range
newtype T_Range
T_Range :: Identity (T_Range_s134) -> T_Range
attach_T_Range :: T_Range -> Identity (T_Range_s134)
newtype T_Range_s134
C_Range_s134 :: (T_Range_v133) -> T_Range_s134
inv_Range_s134 :: T_Range_s134 -> (T_Range_v133)
data T_Range_s135
C_Range_s135 :: T_Range_s135
type T_Range_v133 = (T_Range_vIn133) -> (T_Range_vOut133)
data T_Range_vIn133
T_Range_vIn133 :: T_Range_vIn133
data T_Range_vOut133
T_Range_vOut133 :: (Range) -> T_Range_vOut133
sem_Range_Range :: T_Position -> T_Position -> T_Range
data Inh_RecordExpressionBinding
Inh_RecordExpressionBinding :: (OperatorTable) -> ([ResolveError]) -> Inh_RecordExpressionBinding
opTable_Inh_RecordExpressionBinding :: Inh_RecordExpressionBinding -> (OperatorTable)
resolveErrors_Inh_RecordExpressionBinding :: Inh_RecordExpressionBinding -> ([ResolveError])
data Syn_RecordExpressionBinding
Syn_RecordExpressionBinding :: ([ResolveError]) -> (RecordExpressionBinding) -> Syn_RecordExpressionBinding
resolveErrors_Syn_RecordExpressionBinding :: Syn_RecordExpressionBinding -> ([ResolveError])
self_Syn_RecordExpressionBinding :: Syn_RecordExpressionBinding -> (RecordExpressionBinding)
wrap_RecordExpressionBinding :: T_RecordExpressionBinding -> Inh_RecordExpressionBinding -> (Syn_RecordExpressionBinding)
sem_RecordExpressionBinding :: RecordExpressionBinding -> T_RecordExpressionBinding
newtype T_RecordExpressionBinding
T_RecordExpressionBinding :: Identity (T_RecordExpressionBinding_s137) -> T_RecordExpressionBinding
attach_T_RecordExpressionBinding :: T_RecordExpressionBinding -> Identity (T_RecordExpressionBinding_s137)
newtype T_RecordExpressionBinding_s137
C_RecordExpressionBinding_s137 :: (T_RecordExpressionBinding_v136) -> T_RecordExpressionBinding_s137
inv_RecordExpressionBinding_s137 :: T_RecordExpressionBinding_s137 -> (T_RecordExpressionBinding_v136)
data T_RecordExpressionBinding_s138
C_RecordExpressionBinding_s138 :: T_RecordExpressionBinding_s138
type T_RecordExpressionBinding_v136 = (T_RecordExpressionBinding_vIn136) -> (T_RecordExpressionBinding_vOut136)
data T_RecordExpressionBinding_vIn136
T_RecordExpressionBinding_vIn136 :: (OperatorTable) -> ([ResolveError]) -> T_RecordExpressionBinding_vIn136
data T_RecordExpressionBinding_vOut136
T_RecordExpressionBinding_vOut136 :: ([ResolveError]) -> (RecordExpressionBinding) -> T_RecordExpressionBinding_vOut136
sem_RecordExpressionBinding_RecordExpressionBinding :: T_Range -> T_Name -> T_Expression -> T_RecordExpressionBinding
data Inh_RecordExpressionBindings
Inh_RecordExpressionBindings :: (OperatorTable) -> ([ResolveError]) -> Inh_RecordExpressionBindings
opTable_Inh_RecordExpressionBindings :: Inh_RecordExpressionBindings -> (OperatorTable)
resolveErrors_Inh_RecordExpressionBindings :: Inh_RecordExpressionBindings -> ([ResolveError])
data Syn_RecordExpressionBindings
Syn_RecordExpressionBindings :: ([ResolveError]) -> (RecordExpressionBindings) -> Syn_RecordExpressionBindings
resolveErrors_Syn_RecordExpressionBindings :: Syn_RecordExpressionBindings -> ([ResolveError])
self_Syn_RecordExpressionBindings :: Syn_RecordExpressionBindings -> (RecordExpressionBindings)
wrap_RecordExpressionBindings :: T_RecordExpressionBindings -> Inh_RecordExpressionBindings -> (Syn_RecordExpressionBindings)
sem_RecordExpressionBindings :: RecordExpressionBindings -> T_RecordExpressionBindings
newtype T_RecordExpressionBindings
T_RecordExpressionBindings :: Identity (T_RecordExpressionBindings_s140) -> T_RecordExpressionBindings
attach_T_RecordExpressionBindings :: T_RecordExpressionBindings -> Identity (T_RecordExpressionBindings_s140)
newtype T_RecordExpressionBindings_s140
C_RecordExpressionBindings_s140 :: (T_RecordExpressionBindings_v139) -> T_RecordExpressionBindings_s140
inv_RecordExpressionBindings_s140 :: T_RecordExpressionBindings_s140 -> (T_RecordExpressionBindings_v139)
data T_RecordExpressionBindings_s141
C_RecordExpressionBindings_s141 :: T_RecordExpressionBindings_s141
type T_RecordExpressionBindings_v139 = (T_RecordExpressionBindings_vIn139) -> (T_RecordExpressionBindings_vOut139)
data T_RecordExpressionBindings_vIn139
T_RecordExpressionBindings_vIn139 :: (OperatorTable) -> ([ResolveError]) -> T_RecordExpressionBindings_vIn139
data T_RecordExpressionBindings_vOut139
T_RecordExpressionBindings_vOut139 :: ([ResolveError]) -> (RecordExpressionBindings) -> T_RecordExpressionBindings_vOut139
sem_RecordExpressionBindings_Cons :: T_RecordExpressionBinding -> T_RecordExpressionBindings -> T_RecordExpressionBindings
sem_RecordExpressionBindings_Nil :: T_RecordExpressionBindings
data Inh_RecordPatternBinding
Inh_RecordPatternBinding :: (OperatorTable) -> ([ResolveError]) -> Inh_RecordPatternBinding
opTable_Inh_RecordPatternBinding :: Inh_RecordPatternBinding -> (OperatorTable)
resolveErrors_Inh_RecordPatternBinding :: Inh_RecordPatternBinding -> ([ResolveError])
data Syn_RecordPatternBinding
Syn_RecordPatternBinding :: ([ResolveError]) -> (RecordPatternBinding) -> Syn_RecordPatternBinding
resolveErrors_Syn_RecordPatternBinding :: Syn_RecordPatternBinding -> ([ResolveError])
self_Syn_RecordPatternBinding :: Syn_RecordPatternBinding -> (RecordPatternBinding)
wrap_RecordPatternBinding :: T_RecordPatternBinding -> Inh_RecordPatternBinding -> (Syn_RecordPatternBinding)
sem_RecordPatternBinding :: RecordPatternBinding -> T_RecordPatternBinding
newtype T_RecordPatternBinding
T_RecordPatternBinding :: Identity (T_RecordPatternBinding_s143) -> T_RecordPatternBinding
attach_T_RecordPatternBinding :: T_RecordPatternBinding -> Identity (T_RecordPatternBinding_s143)
newtype T_RecordPatternBinding_s143
C_RecordPatternBinding_s143 :: (T_RecordPatternBinding_v142) -> T_RecordPatternBinding_s143
inv_RecordPatternBinding_s143 :: T_RecordPatternBinding_s143 -> (T_RecordPatternBinding_v142)
data T_RecordPatternBinding_s144
C_RecordPatternBinding_s144 :: T_RecordPatternBinding_s144
type T_RecordPatternBinding_v142 = (T_RecordPatternBinding_vIn142) -> (T_RecordPatternBinding_vOut142)
data T_RecordPatternBinding_vIn142
T_RecordPatternBinding_vIn142 :: (OperatorTable) -> ([ResolveError]) -> T_RecordPatternBinding_vIn142
data T_RecordPatternBinding_vOut142
T_RecordPatternBinding_vOut142 :: ([ResolveError]) -> (RecordPatternBinding) -> T_RecordPatternBinding_vOut142
sem_RecordPatternBinding_RecordPatternBinding :: T_Range -> T_Name -> T_Pattern -> T_RecordPatternBinding
data Inh_RecordPatternBindings
Inh_RecordPatternBindings :: (OperatorTable) -> ([ResolveError]) -> Inh_RecordPatternBindings
opTable_Inh_RecordPatternBindings :: Inh_RecordPatternBindings -> (OperatorTable)
resolveErrors_Inh_RecordPatternBindings :: Inh_RecordPatternBindings -> ([ResolveError])
data Syn_RecordPatternBindings
Syn_RecordPatternBindings :: ([ResolveError]) -> (RecordPatternBindings) -> Syn_RecordPatternBindings
resolveErrors_Syn_RecordPatternBindings :: Syn_RecordPatternBindings -> ([ResolveError])
self_Syn_RecordPatternBindings :: Syn_RecordPatternBindings -> (RecordPatternBindings)
wrap_RecordPatternBindings :: T_RecordPatternBindings -> Inh_RecordPatternBindings -> (Syn_RecordPatternBindings)
sem_RecordPatternBindings :: RecordPatternBindings -> T_RecordPatternBindings
newtype T_RecordPatternBindings
T_RecordPatternBindings :: Identity (T_RecordPatternBindings_s146) -> T_RecordPatternBindings
attach_T_RecordPatternBindings :: T_RecordPatternBindings -> Identity (T_RecordPatternBindings_s146)
newtype T_RecordPatternBindings_s146
C_RecordPatternBindings_s146 :: (T_RecordPatternBindings_v145) -> T_RecordPatternBindings_s146
inv_RecordPatternBindings_s146 :: T_RecordPatternBindings_s146 -> (T_RecordPatternBindings_v145)
data T_RecordPatternBindings_s147
C_RecordPatternBindings_s147 :: T_RecordPatternBindings_s147
type T_RecordPatternBindings_v145 = (T_RecordPatternBindings_vIn145) -> (T_RecordPatternBindings_vOut145)
data T_RecordPatternBindings_vIn145
T_RecordPatternBindings_vIn145 :: (OperatorTable) -> ([ResolveError]) -> T_RecordPatternBindings_vIn145
data T_RecordPatternBindings_vOut145
T_RecordPatternBindings_vOut145 :: ([ResolveError]) -> (RecordPatternBindings) -> T_RecordPatternBindings_vOut145
sem_RecordPatternBindings_Cons :: T_RecordPatternBinding -> T_RecordPatternBindings -> T_RecordPatternBindings
sem_RecordPatternBindings_Nil :: T_RecordPatternBindings
data Inh_RightHandSide
Inh_RightHandSide :: (OperatorTable) -> ([ResolveError]) -> Inh_RightHandSide
opTable_Inh_RightHandSide :: Inh_RightHandSide -> (OperatorTable)
resolveErrors_Inh_RightHandSide :: Inh_RightHandSide -> ([ResolveError])
data Syn_RightHandSide
Syn_RightHandSide :: ([ResolveError]) -> (RightHandSide) -> Syn_RightHandSide
resolveErrors_Syn_RightHandSide :: Syn_RightHandSide -> ([ResolveError])
self_Syn_RightHandSide :: Syn_RightHandSide -> (RightHandSide)
wrap_RightHandSide :: T_RightHandSide -> Inh_RightHandSide -> (Syn_RightHandSide)
sem_RightHandSide :: RightHandSide -> T_RightHandSide
newtype T_RightHandSide
T_RightHandSide :: Identity (T_RightHandSide_s149) -> T_RightHandSide
attach_T_RightHandSide :: T_RightHandSide -> Identity (T_RightHandSide_s149)
newtype T_RightHandSide_s149
C_RightHandSide_s149 :: (T_RightHandSide_v148) -> T_RightHandSide_s149
inv_RightHandSide_s149 :: T_RightHandSide_s149 -> (T_RightHandSide_v148)
data T_RightHandSide_s150
C_RightHandSide_s150 :: T_RightHandSide_s150
type T_RightHandSide_v148 = (T_RightHandSide_vIn148) -> (T_RightHandSide_vOut148)
data T_RightHandSide_vIn148
T_RightHandSide_vIn148 :: (OperatorTable) -> ([ResolveError]) -> T_RightHandSide_vIn148
data T_RightHandSide_vOut148
T_RightHandSide_vOut148 :: ([ResolveError]) -> (RightHandSide) -> T_RightHandSide_vOut148
sem_RightHandSide_Expression :: T_Range -> T_Expression -> T_MaybeDeclarations -> T_RightHandSide
sem_RightHandSide_Guarded :: T_Range -> T_GuardedExpressions -> T_MaybeDeclarations -> T_RightHandSide
data Inh_SimpleType
Inh_SimpleType :: Inh_SimpleType
data Syn_SimpleType
Syn_SimpleType :: (SimpleType) -> Syn_SimpleType
self_Syn_SimpleType :: Syn_SimpleType -> (SimpleType)
wrap_SimpleType :: T_SimpleType -> Inh_SimpleType -> (Syn_SimpleType)
sem_SimpleType :: SimpleType -> T_SimpleType
newtype T_SimpleType
T_SimpleType :: Identity (T_SimpleType_s152) -> T_SimpleType
attach_T_SimpleType :: T_SimpleType -> Identity (T_SimpleType_s152)
newtype T_SimpleType_s152
C_SimpleType_s152 :: (T_SimpleType_v151) -> T_SimpleType_s152
inv_SimpleType_s152 :: T_SimpleType_s152 -> (T_SimpleType_v151)
data T_SimpleType_s153
C_SimpleType_s153 :: T_SimpleType_s153
type T_SimpleType_v151 = (T_SimpleType_vIn151) -> (T_SimpleType_vOut151)
data T_SimpleType_vIn151
T_SimpleType_vIn151 :: T_SimpleType_vIn151
data T_SimpleType_vOut151
T_SimpleType_vOut151 :: (SimpleType) -> T_SimpleType_vOut151
sem_SimpleType_SimpleType :: T_Range -> T_Name -> T_Names -> T_SimpleType
data Inh_Statement
Inh_Statement :: (OperatorTable) -> ([ResolveError]) -> Inh_Statement
opTable_Inh_Statement :: Inh_Statement -> (OperatorTable)
resolveErrors_Inh_Statement :: Inh_Statement -> ([ResolveError])
data Syn_Statement
Syn_Statement :: ([ResolveError]) -> (Statement) -> Syn_Statement
resolveErrors_Syn_Statement :: Syn_Statement -> ([ResolveError])
self_Syn_Statement :: Syn_Statement -> (Statement)
wrap_Statement :: T_Statement -> Inh_Statement -> (Syn_Statement)
sem_Statement :: Statement -> T_Statement
newtype T_Statement
T_Statement :: Identity (T_Statement_s155) -> T_Statement
attach_T_Statement :: T_Statement -> Identity (T_Statement_s155)
newtype T_Statement_s155
C_Statement_s155 :: (T_Statement_v154) -> T_Statement_s155
inv_Statement_s155 :: T_Statement_s155 -> (T_Statement_v154)
data T_Statement_s156
C_Statement_s156 :: T_Statement_s156
type T_Statement_v154 = (T_Statement_vIn154) -> (T_Statement_vOut154)
data T_Statement_vIn154
T_Statement_vIn154 :: (OperatorTable) -> ([ResolveError]) -> T_Statement_vIn154
data T_Statement_vOut154
T_Statement_vOut154 :: ([ResolveError]) -> (Statement) -> T_Statement_vOut154
sem_Statement_Expression :: T_Range -> T_Expression -> T_Statement
sem_Statement_Let :: T_Range -> T_Declarations -> T_Statement
sem_Statement_Generator :: T_Range -> T_Pattern -> T_Expression -> T_Statement
sem_Statement_Empty :: T_Range -> T_Statement
data Inh_Statements
Inh_Statements :: (OperatorTable) -> ([ResolveError]) -> Inh_Statements
opTable_Inh_Statements :: Inh_Statements -> (OperatorTable)
resolveErrors_Inh_Statements :: Inh_Statements -> ([ResolveError])
data Syn_Statements
Syn_Statements :: ([ResolveError]) -> (Statements) -> Syn_Statements
resolveErrors_Syn_Statements :: Syn_Statements -> ([ResolveError])
self_Syn_Statements :: Syn_Statements -> (Statements)
wrap_Statements :: T_Statements -> Inh_Statements -> (Syn_Statements)
sem_Statements :: Statements -> T_Statements
newtype T_Statements
T_Statements :: Identity (T_Statements_s158) -> T_Statements
attach_T_Statements :: T_Statements -> Identity (T_Statements_s158)
newtype T_Statements_s158
C_Statements_s158 :: (T_Statements_v157) -> T_Statements_s158
inv_Statements_s158 :: T_Statements_s158 -> (T_Statements_v157)
data T_Statements_s159
C_Statements_s159 :: T_Statements_s159
type T_Statements_v157 = (T_Statements_vIn157) -> (T_Statements_vOut157)
data T_Statements_vIn157
T_Statements_vIn157 :: (OperatorTable) -> ([ResolveError]) -> T_Statements_vIn157
data T_Statements_vOut157
T_Statements_vOut157 :: ([ResolveError]) -> (Statements) -> T_Statements_vOut157
sem_Statements_Cons :: T_Statement -> T_Statements -> T_Statements
sem_Statements_Nil :: T_Statements
data Inh_Strings
Inh_Strings :: Inh_Strings
data Syn_Strings
Syn_Strings :: (Strings) -> Syn_Strings
self_Syn_Strings :: Syn_Strings -> (Strings)
wrap_Strings :: T_Strings -> Inh_Strings -> (Syn_Strings)
sem_Strings :: Strings -> T_Strings
newtype T_Strings
T_Strings :: Identity (T_Strings_s161) -> T_Strings
attach_T_Strings :: T_Strings -> Identity (T_Strings_s161)
newtype T_Strings_s161
C_Strings_s161 :: (T_Strings_v160) -> T_Strings_s161
inv_Strings_s161 :: T_Strings_s161 -> (T_Strings_v160)
data T_Strings_s162
C_Strings_s162 :: T_Strings_s162
type T_Strings_v160 = (T_Strings_vIn160) -> (T_Strings_vOut160)
data T_Strings_vIn160
T_Strings_vIn160 :: T_Strings_vIn160
data T_Strings_vOut160
T_Strings_vOut160 :: (Strings) -> T_Strings_vOut160
sem_Strings_Cons :: (String) -> T_Strings -> T_Strings
sem_Strings_Nil :: T_Strings
data Inh_Type
Inh_Type :: Inh_Type
data Syn_Type
Syn_Type :: (Type) -> Syn_Type
self_Syn_Type :: Syn_Type -> (Type)
wrap_Type :: T_Type -> Inh_Type -> (Syn_Type)
sem_Type :: Type -> T_Type
newtype T_Type
T_Type :: Identity (T_Type_s164) -> T_Type
attach_T_Type :: T_Type -> Identity (T_Type_s164)
newtype T_Type_s164
C_Type_s164 :: (T_Type_v163) -> T_Type_s164
inv_Type_s164 :: T_Type_s164 -> (T_Type_v163)
data T_Type_s165
C_Type_s165 :: T_Type_s165
type T_Type_v163 = (T_Type_vIn163) -> (T_Type_vOut163)
data T_Type_vIn163
T_Type_vIn163 :: T_Type_vIn163
data T_Type_vOut163
T_Type_vOut163 :: (Type) -> T_Type_vOut163
sem_Type_Application :: T_Range -> (Bool) -> T_Type -> T_Types -> T_Type
sem_Type_Variable :: T_Range -> T_Name -> T_Type
sem_Type_Constructor :: T_Range -> T_Name -> T_Type
sem_Type_Qualified :: T_Range -> T_ContextItems -> T_Type -> T_Type
sem_Type_Forall :: T_Range -> T_Names -> T_Type -> T_Type
sem_Type_Exists :: T_Range -> T_Names -> T_Type -> T_Type
sem_Type_Parenthesized :: T_Range -> T_Type -> T_Type
data Inh_Types
Inh_Types :: Inh_Types
data Syn_Types
Syn_Types :: (Types) -> Syn_Types
self_Syn_Types :: Syn_Types -> (Types)
wrap_Types :: T_Types -> Inh_Types -> (Syn_Types)
sem_Types :: Types -> T_Types
newtype T_Types
T_Types :: Identity (T_Types_s167) -> T_Types
attach_T_Types :: T_Types -> Identity (T_Types_s167)
newtype T_Types_s167
C_Types_s167 :: (T_Types_v166) -> T_Types_s167
inv_Types_s167 :: T_Types_s167 -> (T_Types_v166)
data T_Types_s168
C_Types_s168 :: T_Types_s168
type T_Types_v166 = (T_Types_vIn166) -> (T_Types_vOut166)
data T_Types_vIn166
T_Types_vIn166 :: T_Types_vIn166
data T_Types_vOut166
T_Types_vOut166 :: (Types) -> T_Types_vOut166
sem_Types_Cons :: T_Type -> T_Types -> T_Types
sem_Types_Nil :: T_Types
instance HasMessage ResolveError


module Helium.Parser.CollectFunctionBindings
decls :: Declarations -> Declarations
mergeFeedback :: Declarations -> Declarations
decls' :: Declarations -> Declarations
functionBindingOfDeclaration :: Declaration -> FunctionBinding
rangeOfFunctionBinding :: FunctionBinding -> Range
nameOfDeclaration :: Declaration -> Maybe Name
nameOfLeftHandSide :: LeftHandSide -> Name
mergeCaseFeedback :: Alternatives -> Alternatives


module Helium.Parser.LexerMessage
data LexerError
LexerError :: SourcePos -> LexerErrorInfo -> LexerError
data LexerErrorInfo
UnterminatedComment :: LexerErrorInfo
MissingExponentDigits :: LexerErrorInfo
UnexpectedChar :: Char -> LexerErrorInfo
IllegalEscapeInChar :: LexerErrorInfo
EmptyChar :: LexerErrorInfo
IllegalCharInChar :: LexerErrorInfo
NonTerminatedChar :: (Maybe String) -> LexerErrorInfo
EOFInChar :: LexerErrorInfo
EOFInString :: LexerErrorInfo
IllegalEscapeInString :: LexerErrorInfo
NewLineInString :: LexerErrorInfo
IllegalCharInString :: LexerErrorInfo
TooManyClose :: Char -> LexerErrorInfo
UnexpectedClose :: Char -> SourcePos -> Char -> LexerErrorInfo
StillOpenAtEOF :: [(SourcePos, Char)] -> LexerErrorInfo
data LexerWarning
LexerWarning :: SourcePos -> LexerWarningInfo -> LexerWarning
data LexerWarningInfo
TabCharacter :: LexerWarningInfo
LooksLikeFloatNoFraction :: String -> LexerWarningInfo
LooksLikeFloatNoDigits :: String -> LexerWarningInfo
NestedComment :: SourcePos -> LexerWarningInfo
CommentOperator :: LexerWarningInfo
keepOneTabWarning :: [LexerWarning] -> [LexerWarning]
isLooksLikeFloatWarningInfo :: LexerWarningInfo -> Bool
instance HasMessage LexerWarning
instance HasMessage LexerError


module Helium.Parser.LexerMonad
data LexerMonad a
getPos :: LexerMonad SourcePos
incPos :: Int -> LexerMonad ()
nextPos :: Char -> LexerMonad ()
addPos :: Int -> SourcePos -> SourcePos
openBracket :: Char -> LexerMonad ()
closeBracket :: Char -> LexerMonad ()
checkBracketsAtEOF :: LexerMonad ()
lexerError :: LexerErrorInfo -> SourcePos -> LexerMonad a
lexerWarning :: LexerWarningInfo -> SourcePos -> LexerMonad ()
runLexerMonad :: [Option] -> String -> LexerMonad a -> Either LexerError (a, [LexerWarning])
getOpts :: LexerMonad [Option]
instance Monad LexerMonad


module Helium.Parser.Lexer
lexer :: [Option] -> String -> [Char] -> Either LexerError ([Token], [LexerWarning])
strategiesLexer :: [Option] -> String -> [Char] -> Either LexerError ([Token], [LexerWarning])
type Token = (SourcePos, Lexeme)
data Lexeme
LexChar :: String -> Lexeme
LexString :: String -> Lexeme
LexInt :: String -> Lexeme
LexFloat :: String -> Lexeme
LexVar :: String -> Lexeme
LexVarSym :: String -> Lexeme
LexCon :: String -> Lexeme
LexConSym :: String -> Lexeme
LexKeyword :: String -> Lexeme
LexResVarSym :: String -> Lexeme
LexResConSym :: String -> Lexeme
LexSpecial :: Char -> Lexeme
LexFeedback :: String -> Lexeme
LexCaseFeedback :: String -> Lexeme
LexMustUse :: Lexeme
LexHole :: Lexeme
LexInsertedOpenBrace :: Lexeme
LexInsertedCloseBrace :: Lexeme
LexInsertedSemicolon :: Lexeme
LexEOF :: Lexeme
lexemeLength :: Lexeme -> Int


module Helium.Parser.ParseLibrary
type HParser a = GenParser Token SourcePos a
runHParser :: HParser a -> FilePath -> [Token] -> Bool -> Either ParseError a
waitForEOF :: ParsecT [Token] SourcePos Identity b -> ParsecT [Token] SourcePos Identity b
tycls :: ParsecT [Token] SourcePos Identity Name
varsym :: ParsecT [Token] SourcePos Identity Name
consym :: ParsecT [Token] SourcePos Identity Name
conid :: ParsecT [Token] SourcePos Identity Name
varid :: ParsecT [Token] SourcePos Identity Name
modid :: ParsecT [Token] SourcePos Identity Name
tyvar :: ParsecT [Token] SourcePos Identity Name
tycon :: ParsecT [Token] SourcePos Identity Name
var :: ParsecT [Token] SourcePos Identity Name
con :: ParsecT [Token] SourcePos Identity Name
op :: ParsecT [Token] SourcePos Identity Name
varop :: ParsecT [Token] SourcePos Identity Name
conop :: ParsecT [Token] SourcePos Identity Name
name :: HParser String -> HParser Name
opName :: HParser String -> HParser Name
addRange :: HParser (Range -> a) -> HParser a
withRange :: HParser a -> HParser (a, Range)
sourcePosToPosition :: SourcePos -> Position
lexBACKQUOTEs :: ParsecT [Token] SourcePos Identity a -> ParsecT [Token] SourcePos Identity a
brackets :: ParsecT [Token] SourcePos Identity a -> ParsecT [Token] SourcePos Identity a
commas :: ParsecT [Token] SourcePos Identity a -> ParsecT [Token] SourcePos Identity [a]
commas1 :: ParsecT [Token] SourcePos Identity a -> ParsecT [Token] SourcePos Identity [a]
lexINSERTED_SEMI :: HParser ()
lexINSERTED_RBRACE :: HParser ()
lexINSERTED_LBRACE :: HParser ()
lexLBRACE :: HParser ()
lexBACKQUOTE :: HParser ()
lexSEMI :: HParser ()
lexCOMMA :: HParser ()
lexRBRACKET :: HParser ()
lexLBRACKET :: HParser ()
lexRPAREN :: HParser ()
lexLPAREN :: HParser ()
lexRBRACE :: HParser ()
lexHOLE :: HParser ()
lexASG :: HParser ()
lexTILDE :: HParser ()
lexDOTDOT :: HParser ()
lexAT :: HParser ()
lexBSLASH :: HParser ()
lexMINDOT :: HParser ()
lexMIN :: HParser ()
lexBAR :: HParser ()
lexDARROW :: HParser ()
lexRARROW :: HParser ()
lexLARROW :: HParser ()
lexCOLCOL :: HParser ()
lexCLASS :: HParser ()
lexUNDERSCORE :: HParser ()
lexINFIXR :: HParser ()
lexINFIXL :: HParser ()
lexINFIX :: HParser ()
lexHIDING :: HParser ()
lexIMPORT :: HParser ()
lexWHERE :: HParser ()
lexMODULE :: HParser ()
lexOF :: HParser ()
lexCASE :: HParser ()
lexELSE :: HParser ()
lexTHEN :: HParser ()
lexIF :: HParser ()
lexDO :: HParser ()
lexIN :: HParser ()
lexLET :: HParser ()
lexTYPE :: HParser ()
lexDERIVING :: HParser ()
lexDATA :: HParser ()
lexPHASE :: HParser ()
lexASGASG :: HParser ()
lexCOL :: HParser ()
lexSIBLINGS :: HParser ()
lexCONSTRAINTS :: HParser ()
withLayout :: ParsecT [Token] SourcePos Identity a -> ParsecT [Token] SourcePos Identity [a]
withLayout1 :: ParsecT [Token] SourcePos Identity a -> ParsecT [Token] SourcePos Identity [a]
withBraces' :: (Bool -> ParsecT [Token] SourcePos Identity a) -> ParsecT [Token] SourcePos Identity a
withBraces :: ParsecT [Token] SourcePos Identity a -> ParsecT [Token] SourcePos Identity a -> ParsecT [Token] SourcePos Identity a
semiSepTerm1 :: ParsecT [Token] SourcePos Identity a -> ParsecT [Token] SourcePos Identity [a]
semiOrInsertedSemiSepTerm :: ParsecT [Token] SourcePos Identity a -> ParsecT [Token] SourcePos Identity [a]
semiOrInsertedSemiSepTerm1 :: ParsecT [Token] SourcePos Identity a -> ParsecT [Token] SourcePos Identity [a]
semiSepTerm :: ParsecT [Token] SourcePos Identity a -> ParsecT [Token] SourcePos Identity [a]
parens :: ParsecT [Token] SourcePos Identity a -> ParsecT [Token] SourcePos Identity a
braces :: ParsecT [Token] SourcePos Identity a -> ParsecT [Token] SourcePos Identity a
lexeme :: Lexeme -> HParser ()
lexChar :: HParser String
lexString :: HParser String
lexDouble :: HParser String
lexInt :: HParser String
lexVar :: HParser String
lexCon :: HParser String
lexVarSym :: HParser String
lexConSym :: HParser String
lexFeedback :: HParser String
lexCaseFeedback :: HParser String
satisfy :: (Lexeme -> Maybe a) -> HParser a
getLastPosition :: HParser SourcePos


module Helium.Parser.Parser
module_ :: HParser Module
exp_ :: ParsecT [Token] SourcePos Identity Expression
exp0 :: HParser Expression
type_ :: HParser Type
atype :: HParser Type
contextAndType :: HParser Type
parseOnlyImports :: String -> IO [String]


module Helium.Parser.ParseMessage
instance HasMessage ParseError


-- | Matching expressions
--   
--   (directives based on "Scripting the Type Inference Process", ICFP
--   2003)
module Helium.StaticAnalysis.Directives.Matchers
match_Expression_Literal :: Literal -> Expression -> Maybe ()
match_Expression_Variable :: Name -> Expression -> Maybe ()
match_Expression_Constructor :: Name -> Expression -> Maybe ()
match_Expression_NormalApplication :: Expression -> Maybe (Expression, Expressions)
match_Expression_InfixApplication :: Expression -> Maybe (MaybeExpression, Expression, MaybeExpression)
match_Expression_If :: Expression -> Maybe (Expression, Expression, Expression)
match_Expression_Lambda :: Expression -> Maybe (Patterns, Expression)
match_Expression_Case :: Expression -> Maybe (Expression, Alternatives)
match_Expression_Let :: Expression -> Maybe (Declarations, Expression)
match_Expression_Do :: Expression -> Maybe Statements
match_Expression_List :: Expression -> Maybe Expressions
match_Expression_Tuple :: Expression -> Maybe Expressions
match_Expression_Comprehension :: Expression -> Maybe (Expression, Qualifiers)
match_Expression_Typed :: Expression -> Maybe (Expression, Type)
match_Expression_Enum :: Expression -> Maybe (Expression, MaybeExpression, MaybeExpression)
match_Expression_Negate :: Expression -> Maybe Expression
match_Expression_NegateFloat :: Expression -> Maybe Expression
match_Expressions_Cons :: Expressions -> Maybe (Expression, Expressions)
match_Expressions_Nil :: Expressions -> Maybe ()
match_MaybeExpression_Just :: MaybeExpression -> Maybe Expression
match_MaybeExpression_Nothing :: MaybeExpression -> Maybe ()
eqLiteral :: Literal -> Literal -> Bool

module Helium.StaticAnalysis.Directives.TS_Syntax
data Judgement
Judgement_Judgement :: (Expression) -> (Type) -> Judgement
data SimpleJudgement
SimpleJudgement_SimpleJudgement :: (Name) -> (Type) -> SimpleJudgement
type SimpleJudgements = [SimpleJudgement]
data TypeRule
TypeRule_TypeRule :: (SimpleJudgements) -> (Judgement) -> TypeRule
type TypingStrategies = [TypingStrategy]
data TypingStrategy
TypingStrategy_Siblings :: (Names) -> TypingStrategy
TypingStrategy_TypingStrategy :: (TypeRule) -> (UserStatements) -> TypingStrategy
data UserStatement
UserStatement_Equal :: (Type) -> (Type) -> (String) -> UserStatement
UserStatement_Pred :: (Name) -> (Type) -> (String) -> UserStatement
UserStatement_MetaVariableConstraints :: (Name) -> UserStatement
UserStatement_Phase :: (Int) -> UserStatement
type UserStatements = [UserStatement]


-- | (directives based on "Scripting the Type Inference Process", ICFP
--   2003)
module Helium.StaticAnalysis.Directives.TS_Parser
parseTypingStrategies :: OperatorTable -> String -> [Token] -> Either ParseError TypingStrategies
special :: GenParser (SourcePos, Lexeme) SourcePos Name
judgementToSimpleJudgement :: Judgement -> SimpleJudgement
showExpression :: Expression -> String

module Helium.Syntax.UHA_OneLine
encloseSep :: String -> String -> String -> [OneLineTree] -> OneLineTree
punctuate :: String -> [OneLineTree] -> OneLineTree
parens :: OneLineTree -> OneLineTree
sepBy :: OneLineTree -> [OneLineTree] -> [OneLineTree]
intErr :: String -> String -> a
oneLineTreeAsOperator :: OneLineTree -> OneLineTree
data Inh_Alternative
Inh_Alternative :: Inh_Alternative
data Syn_Alternative
Syn_Alternative :: (OneLineTree) -> (Alternative) -> Syn_Alternative
oneLineTree_Syn_Alternative :: Syn_Alternative -> (OneLineTree)
self_Syn_Alternative :: Syn_Alternative -> (Alternative)
wrap_Alternative :: T_Alternative -> Inh_Alternative -> (Syn_Alternative)
sem_Alternative :: Alternative -> T_Alternative
newtype T_Alternative
T_Alternative :: Identity (T_Alternative_s2) -> T_Alternative
attach_T_Alternative :: T_Alternative -> Identity (T_Alternative_s2)
newtype T_Alternative_s2
C_Alternative_s2 :: (T_Alternative_v1) -> T_Alternative_s2
inv_Alternative_s2 :: T_Alternative_s2 -> (T_Alternative_v1)
data T_Alternative_s3
C_Alternative_s3 :: T_Alternative_s3
type T_Alternative_v1 = (T_Alternative_vIn1) -> (T_Alternative_vOut1)
data T_Alternative_vIn1
T_Alternative_vIn1 :: T_Alternative_vIn1
data T_Alternative_vOut1
T_Alternative_vOut1 :: (OneLineTree) -> (Alternative) -> T_Alternative_vOut1
sem_Alternative_Hole :: T_Range -> (Integer) -> T_Alternative
sem_Alternative_Feedback :: T_Range -> (String) -> T_Alternative -> T_Alternative
sem_Alternative_Alternative :: T_Range -> T_Pattern -> T_RightHandSide -> T_Alternative
sem_Alternative_Empty :: T_Range -> T_Alternative
data Inh_Alternatives
Inh_Alternatives :: Inh_Alternatives
data Syn_Alternatives
Syn_Alternatives :: ([OneLineTree]) -> (Alternatives) -> Syn_Alternatives
oneLineTree_Syn_Alternatives :: Syn_Alternatives -> ([OneLineTree])
self_Syn_Alternatives :: Syn_Alternatives -> (Alternatives)
wrap_Alternatives :: T_Alternatives -> Inh_Alternatives -> (Syn_Alternatives)
sem_Alternatives :: Alternatives -> T_Alternatives
newtype T_Alternatives
T_Alternatives :: Identity (T_Alternatives_s5) -> T_Alternatives
attach_T_Alternatives :: T_Alternatives -> Identity (T_Alternatives_s5)
newtype T_Alternatives_s5
C_Alternatives_s5 :: (T_Alternatives_v4) -> T_Alternatives_s5
inv_Alternatives_s5 :: T_Alternatives_s5 -> (T_Alternatives_v4)
data T_Alternatives_s6
C_Alternatives_s6 :: T_Alternatives_s6
type T_Alternatives_v4 = (T_Alternatives_vIn4) -> (T_Alternatives_vOut4)
data T_Alternatives_vIn4
T_Alternatives_vIn4 :: T_Alternatives_vIn4
data T_Alternatives_vOut4
T_Alternatives_vOut4 :: ([OneLineTree]) -> (Alternatives) -> T_Alternatives_vOut4
sem_Alternatives_Cons :: T_Alternative -> T_Alternatives -> T_Alternatives
sem_Alternatives_Nil :: T_Alternatives
data Inh_AnnotatedType
Inh_AnnotatedType :: Inh_AnnotatedType
data Syn_AnnotatedType
Syn_AnnotatedType :: (AnnotatedType) -> Syn_AnnotatedType
self_Syn_AnnotatedType :: Syn_AnnotatedType -> (AnnotatedType)
wrap_AnnotatedType :: T_AnnotatedType -> Inh_AnnotatedType -> (Syn_AnnotatedType)
sem_AnnotatedType :: AnnotatedType -> T_AnnotatedType
newtype T_AnnotatedType
T_AnnotatedType :: Identity (T_AnnotatedType_s8) -> T_AnnotatedType
attach_T_AnnotatedType :: T_AnnotatedType -> Identity (T_AnnotatedType_s8)
newtype T_AnnotatedType_s8
C_AnnotatedType_s8 :: (T_AnnotatedType_v7) -> T_AnnotatedType_s8
inv_AnnotatedType_s8 :: T_AnnotatedType_s8 -> (T_AnnotatedType_v7)
data T_AnnotatedType_s9
C_AnnotatedType_s9 :: T_AnnotatedType_s9
type T_AnnotatedType_v7 = (T_AnnotatedType_vIn7) -> (T_AnnotatedType_vOut7)
data T_AnnotatedType_vIn7
T_AnnotatedType_vIn7 :: T_AnnotatedType_vIn7
data T_AnnotatedType_vOut7
T_AnnotatedType_vOut7 :: (AnnotatedType) -> T_AnnotatedType_vOut7
sem_AnnotatedType_AnnotatedType :: T_Range -> (Bool) -> T_Type -> T_AnnotatedType
data Inh_AnnotatedTypes
Inh_AnnotatedTypes :: Inh_AnnotatedTypes
data Syn_AnnotatedTypes
Syn_AnnotatedTypes :: (AnnotatedTypes) -> Syn_AnnotatedTypes
self_Syn_AnnotatedTypes :: Syn_AnnotatedTypes -> (AnnotatedTypes)
wrap_AnnotatedTypes :: T_AnnotatedTypes -> Inh_AnnotatedTypes -> (Syn_AnnotatedTypes)
sem_AnnotatedTypes :: AnnotatedTypes -> T_AnnotatedTypes
newtype T_AnnotatedTypes
T_AnnotatedTypes :: Identity (T_AnnotatedTypes_s11) -> T_AnnotatedTypes
attach_T_AnnotatedTypes :: T_AnnotatedTypes -> Identity (T_AnnotatedTypes_s11)
newtype T_AnnotatedTypes_s11
C_AnnotatedTypes_s11 :: (T_AnnotatedTypes_v10) -> T_AnnotatedTypes_s11
inv_AnnotatedTypes_s11 :: T_AnnotatedTypes_s11 -> (T_AnnotatedTypes_v10)
data T_AnnotatedTypes_s12
C_AnnotatedTypes_s12 :: T_AnnotatedTypes_s12
type T_AnnotatedTypes_v10 = (T_AnnotatedTypes_vIn10) -> (T_AnnotatedTypes_vOut10)
data T_AnnotatedTypes_vIn10
T_AnnotatedTypes_vIn10 :: T_AnnotatedTypes_vIn10
data T_AnnotatedTypes_vOut10
T_AnnotatedTypes_vOut10 :: (AnnotatedTypes) -> T_AnnotatedTypes_vOut10
sem_AnnotatedTypes_Cons :: T_AnnotatedType -> T_AnnotatedTypes -> T_AnnotatedTypes
sem_AnnotatedTypes_Nil :: T_AnnotatedTypes
data Inh_Body
Inh_Body :: Inh_Body
data Syn_Body
Syn_Body :: (Body) -> Syn_Body
self_Syn_Body :: Syn_Body -> (Body)
wrap_Body :: T_Body -> Inh_Body -> (Syn_Body)
sem_Body :: Body -> T_Body
newtype T_Body
T_Body :: Identity (T_Body_s14) -> T_Body
attach_T_Body :: T_Body -> Identity (T_Body_s14)
newtype T_Body_s14
C_Body_s14 :: (T_Body_v13) -> T_Body_s14
inv_Body_s14 :: T_Body_s14 -> (T_Body_v13)
data T_Body_s15
C_Body_s15 :: T_Body_s15
type T_Body_v13 = (T_Body_vIn13) -> (T_Body_vOut13)
data T_Body_vIn13
T_Body_vIn13 :: T_Body_vIn13
data T_Body_vOut13
T_Body_vOut13 :: (Body) -> T_Body_vOut13
sem_Body_Hole :: T_Range -> (Integer) -> T_Body
sem_Body_Body :: T_Range -> T_ImportDeclarations -> T_Declarations -> T_Body
data Inh_Constructor
Inh_Constructor :: Inh_Constructor
data Syn_Constructor
Syn_Constructor :: (Constructor) -> Syn_Constructor
self_Syn_Constructor :: Syn_Constructor -> (Constructor)
wrap_Constructor :: T_Constructor -> Inh_Constructor -> (Syn_Constructor)
sem_Constructor :: Constructor -> T_Constructor
newtype T_Constructor
T_Constructor :: Identity (T_Constructor_s17) -> T_Constructor
attach_T_Constructor :: T_Constructor -> Identity (T_Constructor_s17)
newtype T_Constructor_s17
C_Constructor_s17 :: (T_Constructor_v16) -> T_Constructor_s17
inv_Constructor_s17 :: T_Constructor_s17 -> (T_Constructor_v16)
data T_Constructor_s18
C_Constructor_s18 :: T_Constructor_s18
type T_Constructor_v16 = (T_Constructor_vIn16) -> (T_Constructor_vOut16)
data T_Constructor_vIn16
T_Constructor_vIn16 :: T_Constructor_vIn16
data T_Constructor_vOut16
T_Constructor_vOut16 :: (Constructor) -> T_Constructor_vOut16
sem_Constructor_Constructor :: T_Range -> T_Name -> T_AnnotatedTypes -> T_Constructor
sem_Constructor_Infix :: T_Range -> T_AnnotatedType -> T_Name -> T_AnnotatedType -> T_Constructor
sem_Constructor_Record :: T_Range -> T_Name -> T_FieldDeclarations -> T_Constructor
data Inh_Constructors
Inh_Constructors :: Inh_Constructors
data Syn_Constructors
Syn_Constructors :: (Constructors) -> Syn_Constructors
self_Syn_Constructors :: Syn_Constructors -> (Constructors)
wrap_Constructors :: T_Constructors -> Inh_Constructors -> (Syn_Constructors)
sem_Constructors :: Constructors -> T_Constructors
newtype T_Constructors
T_Constructors :: Identity (T_Constructors_s20) -> T_Constructors
attach_T_Constructors :: T_Constructors -> Identity (T_Constructors_s20)
newtype T_Constructors_s20
C_Constructors_s20 :: (T_Constructors_v19) -> T_Constructors_s20
inv_Constructors_s20 :: T_Constructors_s20 -> (T_Constructors_v19)
data T_Constructors_s21
C_Constructors_s21 :: T_Constructors_s21
type T_Constructors_v19 = (T_Constructors_vIn19) -> (T_Constructors_vOut19)
data T_Constructors_vIn19
T_Constructors_vIn19 :: T_Constructors_vIn19
data T_Constructors_vOut19
T_Constructors_vOut19 :: (Constructors) -> T_Constructors_vOut19
sem_Constructors_Cons :: T_Constructor -> T_Constructors -> T_Constructors
sem_Constructors_Nil :: T_Constructors
data Inh_ContextItem
Inh_ContextItem :: Inh_ContextItem
data Syn_ContextItem
Syn_ContextItem :: (ContextItem) -> Syn_ContextItem
self_Syn_ContextItem :: Syn_ContextItem -> (ContextItem)
wrap_ContextItem :: T_ContextItem -> Inh_ContextItem -> (Syn_ContextItem)
sem_ContextItem :: ContextItem -> T_ContextItem
newtype T_ContextItem
T_ContextItem :: Identity (T_ContextItem_s23) -> T_ContextItem
attach_T_ContextItem :: T_ContextItem -> Identity (T_ContextItem_s23)
newtype T_ContextItem_s23
C_ContextItem_s23 :: (T_ContextItem_v22) -> T_ContextItem_s23
inv_ContextItem_s23 :: T_ContextItem_s23 -> (T_ContextItem_v22)
data T_ContextItem_s24
C_ContextItem_s24 :: T_ContextItem_s24
type T_ContextItem_v22 = (T_ContextItem_vIn22) -> (T_ContextItem_vOut22)
data T_ContextItem_vIn22
T_ContextItem_vIn22 :: T_ContextItem_vIn22
data T_ContextItem_vOut22
T_ContextItem_vOut22 :: (ContextItem) -> T_ContextItem_vOut22
sem_ContextItem_ContextItem :: T_Range -> T_Name -> T_Types -> T_ContextItem
data Inh_ContextItems
Inh_ContextItems :: Inh_ContextItems
data Syn_ContextItems
Syn_ContextItems :: (ContextItems) -> Syn_ContextItems
self_Syn_ContextItems :: Syn_ContextItems -> (ContextItems)
wrap_ContextItems :: T_ContextItems -> Inh_ContextItems -> (Syn_ContextItems)
sem_ContextItems :: ContextItems -> T_ContextItems
newtype T_ContextItems
T_ContextItems :: Identity (T_ContextItems_s26) -> T_ContextItems
attach_T_ContextItems :: T_ContextItems -> Identity (T_ContextItems_s26)
newtype T_ContextItems_s26
C_ContextItems_s26 :: (T_ContextItems_v25) -> T_ContextItems_s26
inv_ContextItems_s26 :: T_ContextItems_s26 -> (T_ContextItems_v25)
data T_ContextItems_s27
C_ContextItems_s27 :: T_ContextItems_s27
type T_ContextItems_v25 = (T_ContextItems_vIn25) -> (T_ContextItems_vOut25)
data T_ContextItems_vIn25
T_ContextItems_vIn25 :: T_ContextItems_vIn25
data T_ContextItems_vOut25
T_ContextItems_vOut25 :: (ContextItems) -> T_ContextItems_vOut25
sem_ContextItems_Cons :: T_ContextItem -> T_ContextItems -> T_ContextItems
sem_ContextItems_Nil :: T_ContextItems
data Inh_Declaration
Inh_Declaration :: Inh_Declaration
data Syn_Declaration
Syn_Declaration :: (OneLineTree) -> (Declaration) -> Syn_Declaration
oneLineTree_Syn_Declaration :: Syn_Declaration -> (OneLineTree)
self_Syn_Declaration :: Syn_Declaration -> (Declaration)
wrap_Declaration :: T_Declaration -> Inh_Declaration -> (Syn_Declaration)
sem_Declaration :: Declaration -> T_Declaration
newtype T_Declaration
T_Declaration :: Identity (T_Declaration_s29) -> T_Declaration
attach_T_Declaration :: T_Declaration -> Identity (T_Declaration_s29)
newtype T_Declaration_s29
C_Declaration_s29 :: (T_Declaration_v28) -> T_Declaration_s29
inv_Declaration_s29 :: T_Declaration_s29 -> (T_Declaration_v28)
data T_Declaration_s30
C_Declaration_s30 :: T_Declaration_s30
type T_Declaration_v28 = (T_Declaration_vIn28) -> (T_Declaration_vOut28)
data T_Declaration_vIn28
T_Declaration_vIn28 :: T_Declaration_vIn28
data T_Declaration_vOut28
T_Declaration_vOut28 :: (OneLineTree) -> (Declaration) -> T_Declaration_vOut28
sem_Declaration_Hole :: T_Range -> (Integer) -> T_Declaration
sem_Declaration_Type :: T_Range -> T_SimpleType -> T_Type -> T_Declaration
sem_Declaration_Data :: T_Range -> T_ContextItems -> T_SimpleType -> T_Constructors -> T_Names -> T_Declaration
sem_Declaration_Newtype :: T_Range -> T_ContextItems -> T_SimpleType -> T_Constructor -> T_Names -> T_Declaration
sem_Declaration_Class :: T_Range -> T_ContextItems -> T_SimpleType -> T_MaybeDeclarations -> T_Declaration
sem_Declaration_Instance :: T_Range -> T_ContextItems -> T_Name -> T_Types -> T_MaybeDeclarations -> T_Declaration
sem_Declaration_Default :: T_Range -> T_Types -> T_Declaration
sem_Declaration_FunctionBindings :: T_Range -> T_FunctionBindings -> T_Declaration
sem_Declaration_PatternBinding :: T_Range -> T_Pattern -> T_RightHandSide -> T_Declaration
sem_Declaration_TypeSignature :: T_Range -> T_Names -> T_Type -> T_Declaration
sem_Declaration_Fixity :: T_Range -> T_Fixity -> T_MaybeInt -> T_Names -> T_Declaration
sem_Declaration_Empty :: T_Range -> T_Declaration
data Inh_Declarations
Inh_Declarations :: Inh_Declarations
data Syn_Declarations
Syn_Declarations :: ([OneLineTree]) -> (Declarations) -> Syn_Declarations
oneLineTree_Syn_Declarations :: Syn_Declarations -> ([OneLineTree])
self_Syn_Declarations :: Syn_Declarations -> (Declarations)
wrap_Declarations :: T_Declarations -> Inh_Declarations -> (Syn_Declarations)
sem_Declarations :: Declarations -> T_Declarations
newtype T_Declarations
T_Declarations :: Identity (T_Declarations_s32) -> T_Declarations
attach_T_Declarations :: T_Declarations -> Identity (T_Declarations_s32)
newtype T_Declarations_s32
C_Declarations_s32 :: (T_Declarations_v31) -> T_Declarations_s32
inv_Declarations_s32 :: T_Declarations_s32 -> (T_Declarations_v31)
data T_Declarations_s33
C_Declarations_s33 :: T_Declarations_s33
type T_Declarations_v31 = (T_Declarations_vIn31) -> (T_Declarations_vOut31)
data T_Declarations_vIn31
T_Declarations_vIn31 :: T_Declarations_vIn31
data T_Declarations_vOut31
T_Declarations_vOut31 :: ([OneLineTree]) -> (Declarations) -> T_Declarations_vOut31
sem_Declarations_Cons :: T_Declaration -> T_Declarations -> T_Declarations
sem_Declarations_Nil :: T_Declarations
data Inh_Export
Inh_Export :: Inh_Export
data Syn_Export
Syn_Export :: (Export) -> Syn_Export
self_Syn_Export :: Syn_Export -> (Export)
wrap_Export :: T_Export -> Inh_Export -> (Syn_Export)
sem_Export :: Export -> T_Export
newtype T_Export
T_Export :: Identity (T_Export_s35) -> T_Export
attach_T_Export :: T_Export -> Identity (T_Export_s35)
newtype T_Export_s35
C_Export_s35 :: (T_Export_v34) -> T_Export_s35
inv_Export_s35 :: T_Export_s35 -> (T_Export_v34)
data T_Export_s36
C_Export_s36 :: T_Export_s36
type T_Export_v34 = (T_Export_vIn34) -> (T_Export_vOut34)
data T_Export_vIn34
T_Export_vIn34 :: T_Export_vIn34
data T_Export_vOut34
T_Export_vOut34 :: (Export) -> T_Export_vOut34
sem_Export_Variable :: T_Range -> T_Name -> T_Export
sem_Export_TypeOrClass :: T_Range -> T_Name -> T_MaybeNames -> T_Export
sem_Export_TypeOrClassComplete :: T_Range -> T_Name -> T_Export
sem_Export_Module :: T_Range -> T_Name -> T_Export
data Inh_Exports
Inh_Exports :: Inh_Exports
data Syn_Exports
Syn_Exports :: (Exports) -> Syn_Exports
self_Syn_Exports :: Syn_Exports -> (Exports)
wrap_Exports :: T_Exports -> Inh_Exports -> (Syn_Exports)
sem_Exports :: Exports -> T_Exports
newtype T_Exports
T_Exports :: Identity (T_Exports_s38) -> T_Exports
attach_T_Exports :: T_Exports -> Identity (T_Exports_s38)
newtype T_Exports_s38
C_Exports_s38 :: (T_Exports_v37) -> T_Exports_s38
inv_Exports_s38 :: T_Exports_s38 -> (T_Exports_v37)
data T_Exports_s39
C_Exports_s39 :: T_Exports_s39
type T_Exports_v37 = (T_Exports_vIn37) -> (T_Exports_vOut37)
data T_Exports_vIn37
T_Exports_vIn37 :: T_Exports_vIn37
data T_Exports_vOut37
T_Exports_vOut37 :: (Exports) -> T_Exports_vOut37
sem_Exports_Cons :: T_Export -> T_Exports -> T_Exports
sem_Exports_Nil :: T_Exports
data Inh_Expression
Inh_Expression :: Inh_Expression
data Syn_Expression
Syn_Expression :: (OneLineTree) -> (Expression) -> Syn_Expression
oneLineTree_Syn_Expression :: Syn_Expression -> (OneLineTree)
self_Syn_Expression :: Syn_Expression -> (Expression)
wrap_Expression :: T_Expression -> Inh_Expression -> (Syn_Expression)
sem_Expression :: Expression -> T_Expression
newtype T_Expression
T_Expression :: Identity (T_Expression_s41) -> T_Expression
attach_T_Expression :: T_Expression -> Identity (T_Expression_s41)
newtype T_Expression_s41
C_Expression_s41 :: (T_Expression_v40) -> T_Expression_s41
inv_Expression_s41 :: T_Expression_s41 -> (T_Expression_v40)
data T_Expression_s42
C_Expression_s42 :: T_Expression_s42
type T_Expression_v40 = (T_Expression_vIn40) -> (T_Expression_vOut40)
data T_Expression_vIn40
T_Expression_vIn40 :: T_Expression_vIn40
data T_Expression_vOut40
T_Expression_vOut40 :: (OneLineTree) -> (Expression) -> T_Expression_vOut40
sem_Expression_Hole :: T_Range -> (Integer) -> T_Expression
sem_Expression_Feedback :: T_Range -> (String) -> T_Expression -> T_Expression
sem_Expression_MustUse :: T_Range -> T_Expression -> T_Expression
sem_Expression_Literal :: T_Range -> T_Literal -> T_Expression
sem_Expression_Variable :: T_Range -> T_Name -> T_Expression
sem_Expression_Constructor :: T_Range -> T_Name -> T_Expression
sem_Expression_Parenthesized :: T_Range -> T_Expression -> T_Expression
sem_Expression_NormalApplication :: T_Range -> T_Expression -> T_Expressions -> T_Expression
sem_Expression_InfixApplication :: T_Range -> T_MaybeExpression -> T_Expression -> T_MaybeExpression -> T_Expression
sem_Expression_If :: T_Range -> T_Expression -> T_Expression -> T_Expression -> T_Expression
sem_Expression_Lambda :: T_Range -> T_Patterns -> T_Expression -> T_Expression
sem_Expression_Case :: T_Range -> T_Expression -> T_Alternatives -> T_Expression
sem_Expression_Let :: T_Range -> T_Declarations -> T_Expression -> T_Expression
sem_Expression_Do :: T_Range -> T_Statements -> T_Expression
sem_Expression_List :: T_Range -> T_Expressions -> T_Expression
sem_Expression_Tuple :: T_Range -> T_Expressions -> T_Expression
sem_Expression_Comprehension :: T_Range -> T_Expression -> T_Qualifiers -> T_Expression
sem_Expression_Typed :: T_Range -> T_Expression -> T_Type -> T_Expression
sem_Expression_RecordConstruction :: T_Range -> T_Name -> T_RecordExpressionBindings -> T_Expression
sem_Expression_RecordUpdate :: T_Range -> T_Expression -> T_RecordExpressionBindings -> T_Expression
sem_Expression_Enum :: T_Range -> T_Expression -> T_MaybeExpression -> T_MaybeExpression -> T_Expression
sem_Expression_Negate :: T_Range -> T_Expression -> T_Expression
sem_Expression_NegateFloat :: T_Range -> T_Expression -> T_Expression
data Inh_Expressions
Inh_Expressions :: Inh_Expressions
data Syn_Expressions
Syn_Expressions :: ([OneLineTree]) -> (Expressions) -> Syn_Expressions
oneLineTree_Syn_Expressions :: Syn_Expressions -> ([OneLineTree])
self_Syn_Expressions :: Syn_Expressions -> (Expressions)
wrap_Expressions :: T_Expressions -> Inh_Expressions -> (Syn_Expressions)
sem_Expressions :: Expressions -> T_Expressions
newtype T_Expressions
T_Expressions :: Identity (T_Expressions_s44) -> T_Expressions
attach_T_Expressions :: T_Expressions -> Identity (T_Expressions_s44)
newtype T_Expressions_s44
C_Expressions_s44 :: (T_Expressions_v43) -> T_Expressions_s44
inv_Expressions_s44 :: T_Expressions_s44 -> (T_Expressions_v43)
data T_Expressions_s45
C_Expressions_s45 :: T_Expressions_s45
type T_Expressions_v43 = (T_Expressions_vIn43) -> (T_Expressions_vOut43)
data T_Expressions_vIn43
T_Expressions_vIn43 :: T_Expressions_vIn43
data T_Expressions_vOut43
T_Expressions_vOut43 :: ([OneLineTree]) -> (Expressions) -> T_Expressions_vOut43
sem_Expressions_Cons :: T_Expression -> T_Expressions -> T_Expressions
sem_Expressions_Nil :: T_Expressions
data Inh_FieldDeclaration
Inh_FieldDeclaration :: Inh_FieldDeclaration
data Syn_FieldDeclaration
Syn_FieldDeclaration :: (FieldDeclaration) -> Syn_FieldDeclaration
self_Syn_FieldDeclaration :: Syn_FieldDeclaration -> (FieldDeclaration)
wrap_FieldDeclaration :: T_FieldDeclaration -> Inh_FieldDeclaration -> (Syn_FieldDeclaration)
sem_FieldDeclaration :: FieldDeclaration -> T_FieldDeclaration
newtype T_FieldDeclaration
T_FieldDeclaration :: Identity (T_FieldDeclaration_s47) -> T_FieldDeclaration
attach_T_FieldDeclaration :: T_FieldDeclaration -> Identity (T_FieldDeclaration_s47)
newtype T_FieldDeclaration_s47
C_FieldDeclaration_s47 :: (T_FieldDeclaration_v46) -> T_FieldDeclaration_s47
inv_FieldDeclaration_s47 :: T_FieldDeclaration_s47 -> (T_FieldDeclaration_v46)
data T_FieldDeclaration_s48
C_FieldDeclaration_s48 :: T_FieldDeclaration_s48
type T_FieldDeclaration_v46 = (T_FieldDeclaration_vIn46) -> (T_FieldDeclaration_vOut46)
data T_FieldDeclaration_vIn46
T_FieldDeclaration_vIn46 :: T_FieldDeclaration_vIn46
data T_FieldDeclaration_vOut46
T_FieldDeclaration_vOut46 :: (FieldDeclaration) -> T_FieldDeclaration_vOut46
sem_FieldDeclaration_FieldDeclaration :: T_Range -> T_Names -> T_AnnotatedType -> T_FieldDeclaration
data Inh_FieldDeclarations
Inh_FieldDeclarations :: Inh_FieldDeclarations
data Syn_FieldDeclarations
Syn_FieldDeclarations :: (FieldDeclarations) -> Syn_FieldDeclarations
self_Syn_FieldDeclarations :: Syn_FieldDeclarations -> (FieldDeclarations)
wrap_FieldDeclarations :: T_FieldDeclarations -> Inh_FieldDeclarations -> (Syn_FieldDeclarations)
sem_FieldDeclarations :: FieldDeclarations -> T_FieldDeclarations
newtype T_FieldDeclarations
T_FieldDeclarations :: Identity (T_FieldDeclarations_s50) -> T_FieldDeclarations
attach_T_FieldDeclarations :: T_FieldDeclarations -> Identity (T_FieldDeclarations_s50)
newtype T_FieldDeclarations_s50
C_FieldDeclarations_s50 :: (T_FieldDeclarations_v49) -> T_FieldDeclarations_s50
inv_FieldDeclarations_s50 :: T_FieldDeclarations_s50 -> (T_FieldDeclarations_v49)
data T_FieldDeclarations_s51
C_FieldDeclarations_s51 :: T_FieldDeclarations_s51
type T_FieldDeclarations_v49 = (T_FieldDeclarations_vIn49) -> (T_FieldDeclarations_vOut49)
data T_FieldDeclarations_vIn49
T_FieldDeclarations_vIn49 :: T_FieldDeclarations_vIn49
data T_FieldDeclarations_vOut49
T_FieldDeclarations_vOut49 :: (FieldDeclarations) -> T_FieldDeclarations_vOut49
sem_FieldDeclarations_Cons :: T_FieldDeclaration -> T_FieldDeclarations -> T_FieldDeclarations
sem_FieldDeclarations_Nil :: T_FieldDeclarations
data Inh_Fixity
Inh_Fixity :: Inh_Fixity
data Syn_Fixity
Syn_Fixity :: (Fixity) -> Syn_Fixity
self_Syn_Fixity :: Syn_Fixity -> (Fixity)
wrap_Fixity :: T_Fixity -> Inh_Fixity -> (Syn_Fixity)
sem_Fixity :: Fixity -> T_Fixity
newtype T_Fixity
T_Fixity :: Identity (T_Fixity_s53) -> T_Fixity
attach_T_Fixity :: T_Fixity -> Identity (T_Fixity_s53)
newtype T_Fixity_s53
C_Fixity_s53 :: (T_Fixity_v52) -> T_Fixity_s53
inv_Fixity_s53 :: T_Fixity_s53 -> (T_Fixity_v52)
data T_Fixity_s54
C_Fixity_s54 :: T_Fixity_s54
type T_Fixity_v52 = (T_Fixity_vIn52) -> (T_Fixity_vOut52)
data T_Fixity_vIn52
T_Fixity_vIn52 :: T_Fixity_vIn52
data T_Fixity_vOut52
T_Fixity_vOut52 :: (Fixity) -> T_Fixity_vOut52
sem_Fixity_Infixl :: T_Range -> T_Fixity
sem_Fixity_Infixr :: T_Range -> T_Fixity
sem_Fixity_Infix :: T_Range -> T_Fixity
data Inh_FunctionBinding
Inh_FunctionBinding :: Inh_FunctionBinding
data Syn_FunctionBinding
Syn_FunctionBinding :: (OneLineTree) -> (FunctionBinding) -> Syn_FunctionBinding
oneLineTree_Syn_FunctionBinding :: Syn_FunctionBinding -> (OneLineTree)
self_Syn_FunctionBinding :: Syn_FunctionBinding -> (FunctionBinding)
wrap_FunctionBinding :: T_FunctionBinding -> Inh_FunctionBinding -> (Syn_FunctionBinding)
sem_FunctionBinding :: FunctionBinding -> T_FunctionBinding
newtype T_FunctionBinding
T_FunctionBinding :: Identity (T_FunctionBinding_s56) -> T_FunctionBinding
attach_T_FunctionBinding :: T_FunctionBinding -> Identity (T_FunctionBinding_s56)
newtype T_FunctionBinding_s56
C_FunctionBinding_s56 :: (T_FunctionBinding_v55) -> T_FunctionBinding_s56
inv_FunctionBinding_s56 :: T_FunctionBinding_s56 -> (T_FunctionBinding_v55)
data T_FunctionBinding_s57
C_FunctionBinding_s57 :: T_FunctionBinding_s57
type T_FunctionBinding_v55 = (T_FunctionBinding_vIn55) -> (T_FunctionBinding_vOut55)
data T_FunctionBinding_vIn55
T_FunctionBinding_vIn55 :: T_FunctionBinding_vIn55
data T_FunctionBinding_vOut55
T_FunctionBinding_vOut55 :: (OneLineTree) -> (FunctionBinding) -> T_FunctionBinding_vOut55
sem_FunctionBinding_Hole :: T_Range -> (Integer) -> T_FunctionBinding
sem_FunctionBinding_Feedback :: T_Range -> (String) -> T_FunctionBinding -> T_FunctionBinding
sem_FunctionBinding_FunctionBinding :: T_Range -> T_LeftHandSide -> T_RightHandSide -> T_FunctionBinding
data Inh_FunctionBindings
Inh_FunctionBindings :: Inh_FunctionBindings
data Syn_FunctionBindings
Syn_FunctionBindings :: ([OneLineTree]) -> (FunctionBindings) -> Syn_FunctionBindings
oneLineTree_Syn_FunctionBindings :: Syn_FunctionBindings -> ([OneLineTree])
self_Syn_FunctionBindings :: Syn_FunctionBindings -> (FunctionBindings)
wrap_FunctionBindings :: T_FunctionBindings -> Inh_FunctionBindings -> (Syn_FunctionBindings)
sem_FunctionBindings :: FunctionBindings -> T_FunctionBindings
newtype T_FunctionBindings
T_FunctionBindings :: Identity (T_FunctionBindings_s59) -> T_FunctionBindings
attach_T_FunctionBindings :: T_FunctionBindings -> Identity (T_FunctionBindings_s59)
newtype T_FunctionBindings_s59
C_FunctionBindings_s59 :: (T_FunctionBindings_v58) -> T_FunctionBindings_s59
inv_FunctionBindings_s59 :: T_FunctionBindings_s59 -> (T_FunctionBindings_v58)
data T_FunctionBindings_s60
C_FunctionBindings_s60 :: T_FunctionBindings_s60
type T_FunctionBindings_v58 = (T_FunctionBindings_vIn58) -> (T_FunctionBindings_vOut58)
data T_FunctionBindings_vIn58
T_FunctionBindings_vIn58 :: T_FunctionBindings_vIn58
data T_FunctionBindings_vOut58
T_FunctionBindings_vOut58 :: ([OneLineTree]) -> (FunctionBindings) -> T_FunctionBindings_vOut58
sem_FunctionBindings_Cons :: T_FunctionBinding -> T_FunctionBindings -> T_FunctionBindings
sem_FunctionBindings_Nil :: T_FunctionBindings
data Inh_GuardedExpression
Inh_GuardedExpression :: Inh_GuardedExpression
data Syn_GuardedExpression
Syn_GuardedExpression :: (String -> OneLineTree) -> (GuardedExpression) -> Syn_GuardedExpression
oneLineTree_Syn_GuardedExpression :: Syn_GuardedExpression -> (String -> OneLineTree)
self_Syn_GuardedExpression :: Syn_GuardedExpression -> (GuardedExpression)
wrap_GuardedExpression :: T_GuardedExpression -> Inh_GuardedExpression -> (Syn_GuardedExpression)
sem_GuardedExpression :: GuardedExpression -> T_GuardedExpression
newtype T_GuardedExpression
T_GuardedExpression :: Identity (T_GuardedExpression_s62) -> T_GuardedExpression
attach_T_GuardedExpression :: T_GuardedExpression -> Identity (T_GuardedExpression_s62)
newtype T_GuardedExpression_s62
C_GuardedExpression_s62 :: (T_GuardedExpression_v61) -> T_GuardedExpression_s62
inv_GuardedExpression_s62 :: T_GuardedExpression_s62 -> (T_GuardedExpression_v61)
data T_GuardedExpression_s63
C_GuardedExpression_s63 :: T_GuardedExpression_s63
type T_GuardedExpression_v61 = (T_GuardedExpression_vIn61) -> (T_GuardedExpression_vOut61)
data T_GuardedExpression_vIn61
T_GuardedExpression_vIn61 :: T_GuardedExpression_vIn61
data T_GuardedExpression_vOut61
T_GuardedExpression_vOut61 :: (String -> OneLineTree) -> (GuardedExpression) -> T_GuardedExpression_vOut61
sem_GuardedExpression_GuardedExpression :: T_Range -> T_Expression -> T_Expression -> T_GuardedExpression
data Inh_GuardedExpressions
Inh_GuardedExpressions :: Inh_GuardedExpressions
data Syn_GuardedExpressions
Syn_GuardedExpressions :: ([String -> OneLineTree]) -> (GuardedExpressions) -> Syn_GuardedExpressions
oneLineTree_Syn_GuardedExpressions :: Syn_GuardedExpressions -> ([String -> OneLineTree])
self_Syn_GuardedExpressions :: Syn_GuardedExpressions -> (GuardedExpressions)
wrap_GuardedExpressions :: T_GuardedExpressions -> Inh_GuardedExpressions -> (Syn_GuardedExpressions)
sem_GuardedExpressions :: GuardedExpressions -> T_GuardedExpressions
newtype T_GuardedExpressions
T_GuardedExpressions :: Identity (T_GuardedExpressions_s65) -> T_GuardedExpressions
attach_T_GuardedExpressions :: T_GuardedExpressions -> Identity (T_GuardedExpressions_s65)
newtype T_GuardedExpressions_s65
C_GuardedExpressions_s65 :: (T_GuardedExpressions_v64) -> T_GuardedExpressions_s65
inv_GuardedExpressions_s65 :: T_GuardedExpressions_s65 -> (T_GuardedExpressions_v64)
data T_GuardedExpressions_s66
C_GuardedExpressions_s66 :: T_GuardedExpressions_s66
type T_GuardedExpressions_v64 = (T_GuardedExpressions_vIn64) -> (T_GuardedExpressions_vOut64)
data T_GuardedExpressions_vIn64
T_GuardedExpressions_vIn64 :: T_GuardedExpressions_vIn64
data T_GuardedExpressions_vOut64
T_GuardedExpressions_vOut64 :: ([String -> OneLineTree]) -> (GuardedExpressions) -> T_GuardedExpressions_vOut64
sem_GuardedExpressions_Cons :: T_GuardedExpression -> T_GuardedExpressions -> T_GuardedExpressions
sem_GuardedExpressions_Nil :: T_GuardedExpressions
data Inh_Import
Inh_Import :: Inh_Import
data Syn_Import
Syn_Import :: (Import) -> Syn_Import
self_Syn_Import :: Syn_Import -> (Import)
wrap_Import :: T_Import -> Inh_Import -> (Syn_Import)
sem_Import :: Import -> T_Import
newtype T_Import
T_Import :: Identity (T_Import_s68) -> T_Import
attach_T_Import :: T_Import -> Identity (T_Import_s68)
newtype T_Import_s68
C_Import_s68 :: (T_Import_v67) -> T_Import_s68
inv_Import_s68 :: T_Import_s68 -> (T_Import_v67)
data T_Import_s69
C_Import_s69 :: T_Import_s69
type T_Import_v67 = (T_Import_vIn67) -> (T_Import_vOut67)
data T_Import_vIn67
T_Import_vIn67 :: T_Import_vIn67
data T_Import_vOut67
T_Import_vOut67 :: (Import) -> T_Import_vOut67
sem_Import_Variable :: T_Range -> T_Name -> T_Import
sem_Import_TypeOrClass :: T_Range -> T_Name -> T_MaybeNames -> T_Import
sem_Import_TypeOrClassComplete :: T_Range -> T_Name -> T_Import
data Inh_ImportDeclaration
Inh_ImportDeclaration :: Inh_ImportDeclaration
data Syn_ImportDeclaration
Syn_ImportDeclaration :: (ImportDeclaration) -> Syn_ImportDeclaration
self_Syn_ImportDeclaration :: Syn_ImportDeclaration -> (ImportDeclaration)
wrap_ImportDeclaration :: T_ImportDeclaration -> Inh_ImportDeclaration -> (Syn_ImportDeclaration)
sem_ImportDeclaration :: ImportDeclaration -> T_ImportDeclaration
newtype T_ImportDeclaration
T_ImportDeclaration :: Identity (T_ImportDeclaration_s71) -> T_ImportDeclaration
attach_T_ImportDeclaration :: T_ImportDeclaration -> Identity (T_ImportDeclaration_s71)
newtype T_ImportDeclaration_s71
C_ImportDeclaration_s71 :: (T_ImportDeclaration_v70) -> T_ImportDeclaration_s71
inv_ImportDeclaration_s71 :: T_ImportDeclaration_s71 -> (T_ImportDeclaration_v70)
data T_ImportDeclaration_s72
C_ImportDeclaration_s72 :: T_ImportDeclaration_s72
type T_ImportDeclaration_v70 = (T_ImportDeclaration_vIn70) -> (T_ImportDeclaration_vOut70)
data T_ImportDeclaration_vIn70
T_ImportDeclaration_vIn70 :: T_ImportDeclaration_vIn70
data T_ImportDeclaration_vOut70
T_ImportDeclaration_vOut70 :: (ImportDeclaration) -> T_ImportDeclaration_vOut70
sem_ImportDeclaration_Import :: T_Range -> (Bool) -> T_Name -> T_MaybeName -> T_MaybeImportSpecification -> T_ImportDeclaration
sem_ImportDeclaration_Empty :: T_Range -> T_ImportDeclaration
data Inh_ImportDeclarations
Inh_ImportDeclarations :: Inh_ImportDeclarations
data Syn_ImportDeclarations
Syn_ImportDeclarations :: (ImportDeclarations) -> Syn_ImportDeclarations
self_Syn_ImportDeclarations :: Syn_ImportDeclarations -> (ImportDeclarations)
wrap_ImportDeclarations :: T_ImportDeclarations -> Inh_ImportDeclarations -> (Syn_ImportDeclarations)
sem_ImportDeclarations :: ImportDeclarations -> T_ImportDeclarations
newtype T_ImportDeclarations
T_ImportDeclarations :: Identity (T_ImportDeclarations_s74) -> T_ImportDeclarations
attach_T_ImportDeclarations :: T_ImportDeclarations -> Identity (T_ImportDeclarations_s74)
newtype T_ImportDeclarations_s74
C_ImportDeclarations_s74 :: (T_ImportDeclarations_v73) -> T_ImportDeclarations_s74
inv_ImportDeclarations_s74 :: T_ImportDeclarations_s74 -> (T_ImportDeclarations_v73)
data T_ImportDeclarations_s75
C_ImportDeclarations_s75 :: T_ImportDeclarations_s75
type T_ImportDeclarations_v73 = (T_ImportDeclarations_vIn73) -> (T_ImportDeclarations_vOut73)
data T_ImportDeclarations_vIn73
T_ImportDeclarations_vIn73 :: T_ImportDeclarations_vIn73
data T_ImportDeclarations_vOut73
T_ImportDeclarations_vOut73 :: (ImportDeclarations) -> T_ImportDeclarations_vOut73
sem_ImportDeclarations_Cons :: T_ImportDeclaration -> T_ImportDeclarations -> T_ImportDeclarations
sem_ImportDeclarations_Nil :: T_ImportDeclarations
data Inh_ImportSpecification
Inh_ImportSpecification :: Inh_ImportSpecification
data Syn_ImportSpecification
Syn_ImportSpecification :: (ImportSpecification) -> Syn_ImportSpecification
self_Syn_ImportSpecification :: Syn_ImportSpecification -> (ImportSpecification)
wrap_ImportSpecification :: T_ImportSpecification -> Inh_ImportSpecification -> (Syn_ImportSpecification)
sem_ImportSpecification :: ImportSpecification -> T_ImportSpecification
newtype T_ImportSpecification
T_ImportSpecification :: Identity (T_ImportSpecification_s77) -> T_ImportSpecification
attach_T_ImportSpecification :: T_ImportSpecification -> Identity (T_ImportSpecification_s77)
newtype T_ImportSpecification_s77
C_ImportSpecification_s77 :: (T_ImportSpecification_v76) -> T_ImportSpecification_s77
inv_ImportSpecification_s77 :: T_ImportSpecification_s77 -> (T_ImportSpecification_v76)
data T_ImportSpecification_s78
C_ImportSpecification_s78 :: T_ImportSpecification_s78
type T_ImportSpecification_v76 = (T_ImportSpecification_vIn76) -> (T_ImportSpecification_vOut76)
data T_ImportSpecification_vIn76
T_ImportSpecification_vIn76 :: T_ImportSpecification_vIn76
data T_ImportSpecification_vOut76
T_ImportSpecification_vOut76 :: (ImportSpecification) -> T_ImportSpecification_vOut76
sem_ImportSpecification_Import :: T_Range -> (Bool) -> T_Imports -> T_ImportSpecification
data Inh_Imports
Inh_Imports :: Inh_Imports
data Syn_Imports
Syn_Imports :: (Imports) -> Syn_Imports
self_Syn_Imports :: Syn_Imports -> (Imports)
wrap_Imports :: T_Imports -> Inh_Imports -> (Syn_Imports)
sem_Imports :: Imports -> T_Imports
newtype T_Imports
T_Imports :: Identity (T_Imports_s80) -> T_Imports
attach_T_Imports :: T_Imports -> Identity (T_Imports_s80)
newtype T_Imports_s80
C_Imports_s80 :: (T_Imports_v79) -> T_Imports_s80
inv_Imports_s80 :: T_Imports_s80 -> (T_Imports_v79)
data T_Imports_s81
C_Imports_s81 :: T_Imports_s81
type T_Imports_v79 = (T_Imports_vIn79) -> (T_Imports_vOut79)
data T_Imports_vIn79
T_Imports_vIn79 :: T_Imports_vIn79
data T_Imports_vOut79
T_Imports_vOut79 :: (Imports) -> T_Imports_vOut79
sem_Imports_Cons :: T_Import -> T_Imports -> T_Imports
sem_Imports_Nil :: T_Imports
data Inh_LeftHandSide
Inh_LeftHandSide :: Inh_LeftHandSide
data Syn_LeftHandSide
Syn_LeftHandSide :: (OneLineTree) -> (LeftHandSide) -> Syn_LeftHandSide
oneLineTree_Syn_LeftHandSide :: Syn_LeftHandSide -> (OneLineTree)
self_Syn_LeftHandSide :: Syn_LeftHandSide -> (LeftHandSide)
wrap_LeftHandSide :: T_LeftHandSide -> Inh_LeftHandSide -> (Syn_LeftHandSide)
sem_LeftHandSide :: LeftHandSide -> T_LeftHandSide
newtype T_LeftHandSide
T_LeftHandSide :: Identity (T_LeftHandSide_s83) -> T_LeftHandSide
attach_T_LeftHandSide :: T_LeftHandSide -> Identity (T_LeftHandSide_s83)
newtype T_LeftHandSide_s83
C_LeftHandSide_s83 :: (T_LeftHandSide_v82) -> T_LeftHandSide_s83
inv_LeftHandSide_s83 :: T_LeftHandSide_s83 -> (T_LeftHandSide_v82)
data T_LeftHandSide_s84
C_LeftHandSide_s84 :: T_LeftHandSide_s84
type T_LeftHandSide_v82 = (T_LeftHandSide_vIn82) -> (T_LeftHandSide_vOut82)
data T_LeftHandSide_vIn82
T_LeftHandSide_vIn82 :: T_LeftHandSide_vIn82
data T_LeftHandSide_vOut82
T_LeftHandSide_vOut82 :: (OneLineTree) -> (LeftHandSide) -> T_LeftHandSide_vOut82
sem_LeftHandSide_Function :: T_Range -> T_Name -> T_Patterns -> T_LeftHandSide
sem_LeftHandSide_Infix :: T_Range -> T_Pattern -> T_Name -> T_Pattern -> T_LeftHandSide
sem_LeftHandSide_Parenthesized :: T_Range -> T_LeftHandSide -> T_Patterns -> T_LeftHandSide
data Inh_Literal
Inh_Literal :: Inh_Literal
data Syn_Literal
Syn_Literal :: (OneLineTree) -> (Literal) -> Syn_Literal
oneLineTree_Syn_Literal :: Syn_Literal -> (OneLineTree)
self_Syn_Literal :: Syn_Literal -> (Literal)
wrap_Literal :: T_Literal -> Inh_Literal -> (Syn_Literal)
sem_Literal :: Literal -> T_Literal
newtype T_Literal
T_Literal :: Identity (T_Literal_s86) -> T_Literal
attach_T_Literal :: T_Literal -> Identity (T_Literal_s86)
newtype T_Literal_s86
C_Literal_s86 :: (T_Literal_v85) -> T_Literal_s86
inv_Literal_s86 :: T_Literal_s86 -> (T_Literal_v85)
data T_Literal_s87
C_Literal_s87 :: T_Literal_s87
type T_Literal_v85 = (T_Literal_vIn85) -> (T_Literal_vOut85)
data T_Literal_vIn85
T_Literal_vIn85 :: T_Literal_vIn85
data T_Literal_vOut85
T_Literal_vOut85 :: (OneLineTree) -> (Literal) -> T_Literal_vOut85
sem_Literal_Int :: T_Range -> (String) -> T_Literal
sem_Literal_Char :: T_Range -> (String) -> T_Literal
sem_Literal_Float :: T_Range -> (String) -> T_Literal
sem_Literal_String :: T_Range -> (String) -> T_Literal
data Inh_MaybeDeclarations
Inh_MaybeDeclarations :: Inh_MaybeDeclarations
data Syn_MaybeDeclarations
Syn_MaybeDeclarations :: (Maybe [OneLineTree]) -> (MaybeDeclarations) -> Syn_MaybeDeclarations
oneLineTree_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> (Maybe [OneLineTree])
self_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> (MaybeDeclarations)
wrap_MaybeDeclarations :: T_MaybeDeclarations -> Inh_MaybeDeclarations -> (Syn_MaybeDeclarations)
sem_MaybeDeclarations :: MaybeDeclarations -> T_MaybeDeclarations
newtype T_MaybeDeclarations
T_MaybeDeclarations :: Identity (T_MaybeDeclarations_s89) -> T_MaybeDeclarations
attach_T_MaybeDeclarations :: T_MaybeDeclarations -> Identity (T_MaybeDeclarations_s89)
newtype T_MaybeDeclarations_s89
C_MaybeDeclarations_s89 :: (T_MaybeDeclarations_v88) -> T_MaybeDeclarations_s89
inv_MaybeDeclarations_s89 :: T_MaybeDeclarations_s89 -> (T_MaybeDeclarations_v88)
data T_MaybeDeclarations_s90
C_MaybeDeclarations_s90 :: T_MaybeDeclarations_s90
type T_MaybeDeclarations_v88 = (T_MaybeDeclarations_vIn88) -> (T_MaybeDeclarations_vOut88)
data T_MaybeDeclarations_vIn88
T_MaybeDeclarations_vIn88 :: T_MaybeDeclarations_vIn88
data T_MaybeDeclarations_vOut88
T_MaybeDeclarations_vOut88 :: (Maybe [OneLineTree]) -> (MaybeDeclarations) -> T_MaybeDeclarations_vOut88
sem_MaybeDeclarations_Nothing :: T_MaybeDeclarations
sem_MaybeDeclarations_Just :: T_Declarations -> T_MaybeDeclarations
data Inh_MaybeExports
Inh_MaybeExports :: Inh_MaybeExports
data Syn_MaybeExports
Syn_MaybeExports :: (MaybeExports) -> Syn_MaybeExports
self_Syn_MaybeExports :: Syn_MaybeExports -> (MaybeExports)
wrap_MaybeExports :: T_MaybeExports -> Inh_MaybeExports -> (Syn_MaybeExports)
sem_MaybeExports :: MaybeExports -> T_MaybeExports
newtype T_MaybeExports
T_MaybeExports :: Identity (T_MaybeExports_s92) -> T_MaybeExports
attach_T_MaybeExports :: T_MaybeExports -> Identity (T_MaybeExports_s92)
newtype T_MaybeExports_s92
C_MaybeExports_s92 :: (T_MaybeExports_v91) -> T_MaybeExports_s92
inv_MaybeExports_s92 :: T_MaybeExports_s92 -> (T_MaybeExports_v91)
data T_MaybeExports_s93
C_MaybeExports_s93 :: T_MaybeExports_s93
type T_MaybeExports_v91 = (T_MaybeExports_vIn91) -> (T_MaybeExports_vOut91)
data T_MaybeExports_vIn91
T_MaybeExports_vIn91 :: T_MaybeExports_vIn91
data T_MaybeExports_vOut91
T_MaybeExports_vOut91 :: (MaybeExports) -> T_MaybeExports_vOut91
sem_MaybeExports_Nothing :: T_MaybeExports
sem_MaybeExports_Just :: T_Exports -> T_MaybeExports
data Inh_MaybeExpression
Inh_MaybeExpression :: Inh_MaybeExpression
data Syn_MaybeExpression
Syn_MaybeExpression :: (Maybe OneLineTree) -> (MaybeExpression) -> Syn_MaybeExpression
oneLineTree_Syn_MaybeExpression :: Syn_MaybeExpression -> (Maybe OneLineTree)
self_Syn_MaybeExpression :: Syn_MaybeExpression -> (MaybeExpression)
wrap_MaybeExpression :: T_MaybeExpression -> Inh_MaybeExpression -> (Syn_MaybeExpression)
sem_MaybeExpression :: MaybeExpression -> T_MaybeExpression
newtype T_MaybeExpression
T_MaybeExpression :: Identity (T_MaybeExpression_s95) -> T_MaybeExpression
attach_T_MaybeExpression :: T_MaybeExpression -> Identity (T_MaybeExpression_s95)
newtype T_MaybeExpression_s95
C_MaybeExpression_s95 :: (T_MaybeExpression_v94) -> T_MaybeExpression_s95
inv_MaybeExpression_s95 :: T_MaybeExpression_s95 -> (T_MaybeExpression_v94)
data T_MaybeExpression_s96
C_MaybeExpression_s96 :: T_MaybeExpression_s96
type T_MaybeExpression_v94 = (T_MaybeExpression_vIn94) -> (T_MaybeExpression_vOut94)
data T_MaybeExpression_vIn94
T_MaybeExpression_vIn94 :: T_MaybeExpression_vIn94
data T_MaybeExpression_vOut94
T_MaybeExpression_vOut94 :: (Maybe OneLineTree) -> (MaybeExpression) -> T_MaybeExpression_vOut94
sem_MaybeExpression_Nothing :: T_MaybeExpression
sem_MaybeExpression_Just :: T_Expression -> T_MaybeExpression
data Inh_MaybeImportSpecification
Inh_MaybeImportSpecification :: Inh_MaybeImportSpecification
data Syn_MaybeImportSpecification
Syn_MaybeImportSpecification :: (MaybeImportSpecification) -> Syn_MaybeImportSpecification
self_Syn_MaybeImportSpecification :: Syn_MaybeImportSpecification -> (MaybeImportSpecification)
wrap_MaybeImportSpecification :: T_MaybeImportSpecification -> Inh_MaybeImportSpecification -> (Syn_MaybeImportSpecification)
sem_MaybeImportSpecification :: MaybeImportSpecification -> T_MaybeImportSpecification
newtype T_MaybeImportSpecification
T_MaybeImportSpecification :: Identity (T_MaybeImportSpecification_s98) -> T_MaybeImportSpecification
attach_T_MaybeImportSpecification :: T_MaybeImportSpecification -> Identity (T_MaybeImportSpecification_s98)
newtype T_MaybeImportSpecification_s98
C_MaybeImportSpecification_s98 :: (T_MaybeImportSpecification_v97) -> T_MaybeImportSpecification_s98
inv_MaybeImportSpecification_s98 :: T_MaybeImportSpecification_s98 -> (T_MaybeImportSpecification_v97)
data T_MaybeImportSpecification_s99
C_MaybeImportSpecification_s99 :: T_MaybeImportSpecification_s99
type T_MaybeImportSpecification_v97 = (T_MaybeImportSpecification_vIn97) -> (T_MaybeImportSpecification_vOut97)
data T_MaybeImportSpecification_vIn97
T_MaybeImportSpecification_vIn97 :: T_MaybeImportSpecification_vIn97
data T_MaybeImportSpecification_vOut97
T_MaybeImportSpecification_vOut97 :: (MaybeImportSpecification) -> T_MaybeImportSpecification_vOut97
sem_MaybeImportSpecification_Nothing :: T_MaybeImportSpecification
sem_MaybeImportSpecification_Just :: T_ImportSpecification -> T_MaybeImportSpecification
data Inh_MaybeInt
Inh_MaybeInt :: Inh_MaybeInt
data Syn_MaybeInt
Syn_MaybeInt :: (MaybeInt) -> Syn_MaybeInt
self_Syn_MaybeInt :: Syn_MaybeInt -> (MaybeInt)
wrap_MaybeInt :: T_MaybeInt -> Inh_MaybeInt -> (Syn_MaybeInt)
sem_MaybeInt :: MaybeInt -> T_MaybeInt
newtype T_MaybeInt
T_MaybeInt :: Identity (T_MaybeInt_s101) -> T_MaybeInt
attach_T_MaybeInt :: T_MaybeInt -> Identity (T_MaybeInt_s101)
newtype T_MaybeInt_s101
C_MaybeInt_s101 :: (T_MaybeInt_v100) -> T_MaybeInt_s101
inv_MaybeInt_s101 :: T_MaybeInt_s101 -> (T_MaybeInt_v100)
data T_MaybeInt_s102
C_MaybeInt_s102 :: T_MaybeInt_s102
type T_MaybeInt_v100 = (T_MaybeInt_vIn100) -> (T_MaybeInt_vOut100)
data T_MaybeInt_vIn100
T_MaybeInt_vIn100 :: T_MaybeInt_vIn100
data T_MaybeInt_vOut100
T_MaybeInt_vOut100 :: (MaybeInt) -> T_MaybeInt_vOut100
sem_MaybeInt_Nothing :: T_MaybeInt
sem_MaybeInt_Just :: (Int) -> T_MaybeInt
data Inh_MaybeName
Inh_MaybeName :: Inh_MaybeName
data Syn_MaybeName
Syn_MaybeName :: (MaybeName) -> Syn_MaybeName
self_Syn_MaybeName :: Syn_MaybeName -> (MaybeName)
wrap_MaybeName :: T_MaybeName -> Inh_MaybeName -> (Syn_MaybeName)
sem_MaybeName :: MaybeName -> T_MaybeName
newtype T_MaybeName
T_MaybeName :: Identity (T_MaybeName_s104) -> T_MaybeName
attach_T_MaybeName :: T_MaybeName -> Identity (T_MaybeName_s104)
newtype T_MaybeName_s104
C_MaybeName_s104 :: (T_MaybeName_v103) -> T_MaybeName_s104
inv_MaybeName_s104 :: T_MaybeName_s104 -> (T_MaybeName_v103)
data T_MaybeName_s105
C_MaybeName_s105 :: T_MaybeName_s105
type T_MaybeName_v103 = (T_MaybeName_vIn103) -> (T_MaybeName_vOut103)
data T_MaybeName_vIn103
T_MaybeName_vIn103 :: T_MaybeName_vIn103
data T_MaybeName_vOut103
T_MaybeName_vOut103 :: (MaybeName) -> T_MaybeName_vOut103
sem_MaybeName_Nothing :: T_MaybeName
sem_MaybeName_Just :: T_Name -> T_MaybeName
data Inh_MaybeNames
Inh_MaybeNames :: Inh_MaybeNames
data Syn_MaybeNames
Syn_MaybeNames :: (MaybeNames) -> Syn_MaybeNames
self_Syn_MaybeNames :: Syn_MaybeNames -> (MaybeNames)
wrap_MaybeNames :: T_MaybeNames -> Inh_MaybeNames -> (Syn_MaybeNames)
sem_MaybeNames :: MaybeNames -> T_MaybeNames
newtype T_MaybeNames
T_MaybeNames :: Identity (T_MaybeNames_s107) -> T_MaybeNames
attach_T_MaybeNames :: T_MaybeNames -> Identity (T_MaybeNames_s107)
newtype T_MaybeNames_s107
C_MaybeNames_s107 :: (T_MaybeNames_v106) -> T_MaybeNames_s107
inv_MaybeNames_s107 :: T_MaybeNames_s107 -> (T_MaybeNames_v106)
data T_MaybeNames_s108
C_MaybeNames_s108 :: T_MaybeNames_s108
type T_MaybeNames_v106 = (T_MaybeNames_vIn106) -> (T_MaybeNames_vOut106)
data T_MaybeNames_vIn106
T_MaybeNames_vIn106 :: T_MaybeNames_vIn106
data T_MaybeNames_vOut106
T_MaybeNames_vOut106 :: (MaybeNames) -> T_MaybeNames_vOut106
sem_MaybeNames_Nothing :: T_MaybeNames
sem_MaybeNames_Just :: T_Names -> T_MaybeNames
data Inh_Module
Inh_Module :: Inh_Module
data Syn_Module
Syn_Module :: (Module) -> Syn_Module
self_Syn_Module :: Syn_Module -> (Module)
wrap_Module :: T_Module -> Inh_Module -> (Syn_Module)
sem_Module :: Module -> T_Module
newtype T_Module
T_Module :: Identity (T_Module_s110) -> T_Module
attach_T_Module :: T_Module -> Identity (T_Module_s110)
newtype T_Module_s110
C_Module_s110 :: (T_Module_v109) -> T_Module_s110
inv_Module_s110 :: T_Module_s110 -> (T_Module_v109)
data T_Module_s111
C_Module_s111 :: T_Module_s111
type T_Module_v109 = (T_Module_vIn109) -> (T_Module_vOut109)
data T_Module_vIn109
T_Module_vIn109 :: T_Module_vIn109
data T_Module_vOut109
T_Module_vOut109 :: (Module) -> T_Module_vOut109
sem_Module_Module :: T_Range -> T_MaybeName -> T_MaybeExports -> T_Body -> T_Module
data Inh_Name
Inh_Name :: Inh_Name
data Syn_Name
Syn_Name :: (Bool) -> (Bool) -> (Bool) -> (OneLineTree) -> (Name) -> Syn_Name
isIdentifier_Syn_Name :: Syn_Name -> (Bool)
isOperator_Syn_Name :: Syn_Name -> (Bool)
isSpecial_Syn_Name :: Syn_Name -> (Bool)
oneLineTree_Syn_Name :: Syn_Name -> (OneLineTree)
self_Syn_Name :: Syn_Name -> (Name)
wrap_Name :: T_Name -> Inh_Name -> (Syn_Name)
sem_Name :: Name -> T_Name
newtype T_Name
T_Name :: Identity (T_Name_s113) -> T_Name
attach_T_Name :: T_Name -> Identity (T_Name_s113)
newtype T_Name_s113
C_Name_s113 :: (T_Name_v112) -> T_Name_s113
inv_Name_s113 :: T_Name_s113 -> (T_Name_v112)
data T_Name_s114
C_Name_s114 :: T_Name_s114
type T_Name_v112 = (T_Name_vIn112) -> (T_Name_vOut112)
data T_Name_vIn112
T_Name_vIn112 :: T_Name_vIn112
data T_Name_vOut112
T_Name_vOut112 :: (Bool) -> (Bool) -> (Bool) -> (OneLineTree) -> (Name) -> T_Name_vOut112
sem_Name_Identifier :: T_Range -> T_Strings -> (String) -> T_Name
sem_Name_Operator :: T_Range -> T_Strings -> (String) -> T_Name
sem_Name_Special :: T_Range -> T_Strings -> (String) -> T_Name
data Inh_Names
Inh_Names :: Inh_Names
data Syn_Names
Syn_Names :: ([Bool]) -> ([Bool]) -> ([Bool]) -> ([OneLineTree]) -> (Names) -> Syn_Names
isIdentifier_Syn_Names :: Syn_Names -> ([Bool])
isOperator_Syn_Names :: Syn_Names -> ([Bool])
isSpecial_Syn_Names :: Syn_Names -> ([Bool])
oneLineTree_Syn_Names :: Syn_Names -> ([OneLineTree])
self_Syn_Names :: Syn_Names -> (Names)
wrap_Names :: T_Names -> Inh_Names -> (Syn_Names)
sem_Names :: Names -> T_Names
newtype T_Names
T_Names :: Identity (T_Names_s116) -> T_Names
attach_T_Names :: T_Names -> Identity (T_Names_s116)
newtype T_Names_s116
C_Names_s116 :: (T_Names_v115) -> T_Names_s116
inv_Names_s116 :: T_Names_s116 -> (T_Names_v115)
data T_Names_s117
C_Names_s117 :: T_Names_s117
type T_Names_v115 = (T_Names_vIn115) -> (T_Names_vOut115)
data T_Names_vIn115
T_Names_vIn115 :: T_Names_vIn115
data T_Names_vOut115
T_Names_vOut115 :: ([Bool]) -> ([Bool]) -> ([Bool]) -> ([OneLineTree]) -> (Names) -> T_Names_vOut115
sem_Names_Cons :: T_Name -> T_Names -> T_Names
sem_Names_Nil :: T_Names
data Inh_Pattern
Inh_Pattern :: Inh_Pattern
data Syn_Pattern
Syn_Pattern :: (OneLineTree) -> (Pattern) -> Syn_Pattern
oneLineTree_Syn_Pattern :: Syn_Pattern -> (OneLineTree)
self_Syn_Pattern :: Syn_Pattern -> (Pattern)
wrap_Pattern :: T_Pattern -> Inh_Pattern -> (Syn_Pattern)
sem_Pattern :: Pattern -> T_Pattern
newtype T_Pattern
T_Pattern :: Identity (T_Pattern_s119) -> T_Pattern
attach_T_Pattern :: T_Pattern -> Identity (T_Pattern_s119)
newtype T_Pattern_s119
C_Pattern_s119 :: (T_Pattern_v118) -> T_Pattern_s119
inv_Pattern_s119 :: T_Pattern_s119 -> (T_Pattern_v118)
data T_Pattern_s120
C_Pattern_s120 :: T_Pattern_s120
type T_Pattern_v118 = (T_Pattern_vIn118) -> (T_Pattern_vOut118)
data T_Pattern_vIn118
T_Pattern_vIn118 :: T_Pattern_vIn118
data T_Pattern_vOut118
T_Pattern_vOut118 :: (OneLineTree) -> (Pattern) -> T_Pattern_vOut118
sem_Pattern_Hole :: T_Range -> (Integer) -> T_Pattern
sem_Pattern_Literal :: T_Range -> T_Literal -> T_Pattern
sem_Pattern_Variable :: T_Range -> T_Name -> T_Pattern
sem_Pattern_Constructor :: T_Range -> T_Name -> T_Patterns -> T_Pattern
sem_Pattern_Parenthesized :: T_Range -> T_Pattern -> T_Pattern
sem_Pattern_InfixConstructor :: T_Range -> T_Pattern -> T_Name -> T_Pattern -> T_Pattern
sem_Pattern_List :: T_Range -> T_Patterns -> T_Pattern
sem_Pattern_Tuple :: T_Range -> T_Patterns -> T_Pattern
sem_Pattern_Record :: T_Range -> T_Name -> T_RecordPatternBindings -> T_Pattern
sem_Pattern_Negate :: T_Range -> T_Literal -> T_Pattern
sem_Pattern_As :: T_Range -> T_Name -> T_Pattern -> T_Pattern
sem_Pattern_Wildcard :: T_Range -> T_Pattern
sem_Pattern_Irrefutable :: T_Range -> T_Pattern -> T_Pattern
sem_Pattern_Successor :: T_Range -> T_Name -> T_Literal -> T_Pattern
sem_Pattern_NegateFloat :: T_Range -> T_Literal -> T_Pattern
data Inh_Patterns
Inh_Patterns :: Inh_Patterns
data Syn_Patterns
Syn_Patterns :: ([OneLineTree]) -> (Patterns) -> Syn_Patterns
oneLineTree_Syn_Patterns :: Syn_Patterns -> ([OneLineTree])
self_Syn_Patterns :: Syn_Patterns -> (Patterns)
wrap_Patterns :: T_Patterns -> Inh_Patterns -> (Syn_Patterns)
sem_Patterns :: Patterns -> T_Patterns
newtype T_Patterns
T_Patterns :: Identity (T_Patterns_s122) -> T_Patterns
attach_T_Patterns :: T_Patterns -> Identity (T_Patterns_s122)
newtype T_Patterns_s122
C_Patterns_s122 :: (T_Patterns_v121) -> T_Patterns_s122
inv_Patterns_s122 :: T_Patterns_s122 -> (T_Patterns_v121)
data T_Patterns_s123
C_Patterns_s123 :: T_Patterns_s123
type T_Patterns_v121 = (T_Patterns_vIn121) -> (T_Patterns_vOut121)
data T_Patterns_vIn121
T_Patterns_vIn121 :: T_Patterns_vIn121
data T_Patterns_vOut121
T_Patterns_vOut121 :: ([OneLineTree]) -> (Patterns) -> T_Patterns_vOut121
sem_Patterns_Cons :: T_Pattern -> T_Patterns -> T_Patterns
sem_Patterns_Nil :: T_Patterns
data Inh_Position
Inh_Position :: Inh_Position
data Syn_Position
Syn_Position :: (Position) -> Syn_Position
self_Syn_Position :: Syn_Position -> (Position)
wrap_Position :: T_Position -> Inh_Position -> (Syn_Position)
sem_Position :: Position -> T_Position
newtype T_Position
T_Position :: Identity (T_Position_s125) -> T_Position
attach_T_Position :: T_Position -> Identity (T_Position_s125)
newtype T_Position_s125
C_Position_s125 :: (T_Position_v124) -> T_Position_s125
inv_Position_s125 :: T_Position_s125 -> (T_Position_v124)
data T_Position_s126
C_Position_s126 :: T_Position_s126
type T_Position_v124 = (T_Position_vIn124) -> (T_Position_vOut124)
data T_Position_vIn124
T_Position_vIn124 :: T_Position_vIn124
data T_Position_vOut124
T_Position_vOut124 :: (Position) -> T_Position_vOut124
sem_Position_Position :: (String) -> (Int) -> (Int) -> T_Position
sem_Position_Unknown :: T_Position
data Inh_Qualifier
Inh_Qualifier :: Inh_Qualifier
data Syn_Qualifier
Syn_Qualifier :: (OneLineTree) -> (Qualifier) -> Syn_Qualifier
oneLineTree_Syn_Qualifier :: Syn_Qualifier -> (OneLineTree)
self_Syn_Qualifier :: Syn_Qualifier -> (Qualifier)
wrap_Qualifier :: T_Qualifier -> Inh_Qualifier -> (Syn_Qualifier)
sem_Qualifier :: Qualifier -> T_Qualifier
newtype T_Qualifier
T_Qualifier :: Identity (T_Qualifier_s128) -> T_Qualifier
attach_T_Qualifier :: T_Qualifier -> Identity (T_Qualifier_s128)
newtype T_Qualifier_s128
C_Qualifier_s128 :: (T_Qualifier_v127) -> T_Qualifier_s128
inv_Qualifier_s128 :: T_Qualifier_s128 -> (T_Qualifier_v127)
data T_Qualifier_s129
C_Qualifier_s129 :: T_Qualifier_s129
type T_Qualifier_v127 = (T_Qualifier_vIn127) -> (T_Qualifier_vOut127)
data T_Qualifier_vIn127
T_Qualifier_vIn127 :: T_Qualifier_vIn127
data T_Qualifier_vOut127
T_Qualifier_vOut127 :: (OneLineTree) -> (Qualifier) -> T_Qualifier_vOut127
sem_Qualifier_Guard :: T_Range -> T_Expression -> T_Qualifier
sem_Qualifier_Let :: T_Range -> T_Declarations -> T_Qualifier
sem_Qualifier_Generator :: T_Range -> T_Pattern -> T_Expression -> T_Qualifier
sem_Qualifier_Empty :: T_Range -> T_Qualifier
data Inh_Qualifiers
Inh_Qualifiers :: Inh_Qualifiers
data Syn_Qualifiers
Syn_Qualifiers :: ([OneLineTree]) -> (Qualifiers) -> Syn_Qualifiers
oneLineTree_Syn_Qualifiers :: Syn_Qualifiers -> ([OneLineTree])
self_Syn_Qualifiers :: Syn_Qualifiers -> (Qualifiers)
wrap_Qualifiers :: T_Qualifiers -> Inh_Qualifiers -> (Syn_Qualifiers)
sem_Qualifiers :: Qualifiers -> T_Qualifiers
newtype T_Qualifiers
T_Qualifiers :: Identity (T_Qualifiers_s131) -> T_Qualifiers
attach_T_Qualifiers :: T_Qualifiers -> Identity (T_Qualifiers_s131)
newtype T_Qualifiers_s131
C_Qualifiers_s131 :: (T_Qualifiers_v130) -> T_Qualifiers_s131
inv_Qualifiers_s131 :: T_Qualifiers_s131 -> (T_Qualifiers_v130)
data T_Qualifiers_s132
C_Qualifiers_s132 :: T_Qualifiers_s132
type T_Qualifiers_v130 = (T_Qualifiers_vIn130) -> (T_Qualifiers_vOut130)
data T_Qualifiers_vIn130
T_Qualifiers_vIn130 :: T_Qualifiers_vIn130
data T_Qualifiers_vOut130
T_Qualifiers_vOut130 :: ([OneLineTree]) -> (Qualifiers) -> T_Qualifiers_vOut130
sem_Qualifiers_Cons :: T_Qualifier -> T_Qualifiers -> T_Qualifiers
sem_Qualifiers_Nil :: T_Qualifiers
data Inh_Range
Inh_Range :: Inh_Range
data Syn_Range
Syn_Range :: (Range) -> Syn_Range
self_Syn_Range :: Syn_Range -> (Range)
wrap_Range :: T_Range -> Inh_Range -> (Syn_Range)
sem_Range :: Range -> T_Range
newtype T_Range
T_Range :: Identity (T_Range_s134) -> T_Range
attach_T_Range :: T_Range -> Identity (T_Range_s134)
newtype T_Range_s134
C_Range_s134 :: (T_Range_v133) -> T_Range_s134
inv_Range_s134 :: T_Range_s134 -> (T_Range_v133)
data T_Range_s135
C_Range_s135 :: T_Range_s135
type T_Range_v133 = (T_Range_vIn133) -> (T_Range_vOut133)
data T_Range_vIn133
T_Range_vIn133 :: T_Range_vIn133
data T_Range_vOut133
T_Range_vOut133 :: (Range) -> T_Range_vOut133
sem_Range_Range :: T_Position -> T_Position -> T_Range
data Inh_RecordExpressionBinding
Inh_RecordExpressionBinding :: Inh_RecordExpressionBinding
data Syn_RecordExpressionBinding
Syn_RecordExpressionBinding :: (RecordExpressionBinding) -> Syn_RecordExpressionBinding
self_Syn_RecordExpressionBinding :: Syn_RecordExpressionBinding -> (RecordExpressionBinding)
wrap_RecordExpressionBinding :: T_RecordExpressionBinding -> Inh_RecordExpressionBinding -> (Syn_RecordExpressionBinding)
sem_RecordExpressionBinding :: RecordExpressionBinding -> T_RecordExpressionBinding
newtype T_RecordExpressionBinding
T_RecordExpressionBinding :: Identity (T_RecordExpressionBinding_s137) -> T_RecordExpressionBinding
attach_T_RecordExpressionBinding :: T_RecordExpressionBinding -> Identity (T_RecordExpressionBinding_s137)
newtype T_RecordExpressionBinding_s137
C_RecordExpressionBinding_s137 :: (T_RecordExpressionBinding_v136) -> T_RecordExpressionBinding_s137
inv_RecordExpressionBinding_s137 :: T_RecordExpressionBinding_s137 -> (T_RecordExpressionBinding_v136)
data T_RecordExpressionBinding_s138
C_RecordExpressionBinding_s138 :: T_RecordExpressionBinding_s138
type T_RecordExpressionBinding_v136 = (T_RecordExpressionBinding_vIn136) -> (T_RecordExpressionBinding_vOut136)
data T_RecordExpressionBinding_vIn136
T_RecordExpressionBinding_vIn136 :: T_RecordExpressionBinding_vIn136
data T_RecordExpressionBinding_vOut136
T_RecordExpressionBinding_vOut136 :: (RecordExpressionBinding) -> T_RecordExpressionBinding_vOut136
sem_RecordExpressionBinding_RecordExpressionBinding :: T_Range -> T_Name -> T_Expression -> T_RecordExpressionBinding
data Inh_RecordExpressionBindings
Inh_RecordExpressionBindings :: Inh_RecordExpressionBindings
data Syn_RecordExpressionBindings
Syn_RecordExpressionBindings :: (RecordExpressionBindings) -> Syn_RecordExpressionBindings
self_Syn_RecordExpressionBindings :: Syn_RecordExpressionBindings -> (RecordExpressionBindings)
wrap_RecordExpressionBindings :: T_RecordExpressionBindings -> Inh_RecordExpressionBindings -> (Syn_RecordExpressionBindings)
sem_RecordExpressionBindings :: RecordExpressionBindings -> T_RecordExpressionBindings
newtype T_RecordExpressionBindings
T_RecordExpressionBindings :: Identity (T_RecordExpressionBindings_s140) -> T_RecordExpressionBindings
attach_T_RecordExpressionBindings :: T_RecordExpressionBindings -> Identity (T_RecordExpressionBindings_s140)
newtype T_RecordExpressionBindings_s140
C_RecordExpressionBindings_s140 :: (T_RecordExpressionBindings_v139) -> T_RecordExpressionBindings_s140
inv_RecordExpressionBindings_s140 :: T_RecordExpressionBindings_s140 -> (T_RecordExpressionBindings_v139)
data T_RecordExpressionBindings_s141
C_RecordExpressionBindings_s141 :: T_RecordExpressionBindings_s141
type T_RecordExpressionBindings_v139 = (T_RecordExpressionBindings_vIn139) -> (T_RecordExpressionBindings_vOut139)
data T_RecordExpressionBindings_vIn139
T_RecordExpressionBindings_vIn139 :: T_RecordExpressionBindings_vIn139
data T_RecordExpressionBindings_vOut139
T_RecordExpressionBindings_vOut139 :: (RecordExpressionBindings) -> T_RecordExpressionBindings_vOut139
sem_RecordExpressionBindings_Cons :: T_RecordExpressionBinding -> T_RecordExpressionBindings -> T_RecordExpressionBindings
sem_RecordExpressionBindings_Nil :: T_RecordExpressionBindings
data Inh_RecordPatternBinding
Inh_RecordPatternBinding :: Inh_RecordPatternBinding
data Syn_RecordPatternBinding
Syn_RecordPatternBinding :: (RecordPatternBinding) -> Syn_RecordPatternBinding
self_Syn_RecordPatternBinding :: Syn_RecordPatternBinding -> (RecordPatternBinding)
wrap_RecordPatternBinding :: T_RecordPatternBinding -> Inh_RecordPatternBinding -> (Syn_RecordPatternBinding)
sem_RecordPatternBinding :: RecordPatternBinding -> T_RecordPatternBinding
newtype T_RecordPatternBinding
T_RecordPatternBinding :: Identity (T_RecordPatternBinding_s143) -> T_RecordPatternBinding
attach_T_RecordPatternBinding :: T_RecordPatternBinding -> Identity (T_RecordPatternBinding_s143)
newtype T_RecordPatternBinding_s143
C_RecordPatternBinding_s143 :: (T_RecordPatternBinding_v142) -> T_RecordPatternBinding_s143
inv_RecordPatternBinding_s143 :: T_RecordPatternBinding_s143 -> (T_RecordPatternBinding_v142)
data T_RecordPatternBinding_s144
C_RecordPatternBinding_s144 :: T_RecordPatternBinding_s144
type T_RecordPatternBinding_v142 = (T_RecordPatternBinding_vIn142) -> (T_RecordPatternBinding_vOut142)
data T_RecordPatternBinding_vIn142
T_RecordPatternBinding_vIn142 :: T_RecordPatternBinding_vIn142
data T_RecordPatternBinding_vOut142
T_RecordPatternBinding_vOut142 :: (RecordPatternBinding) -> T_RecordPatternBinding_vOut142
sem_RecordPatternBinding_RecordPatternBinding :: T_Range -> T_Name -> T_Pattern -> T_RecordPatternBinding
data Inh_RecordPatternBindings
Inh_RecordPatternBindings :: Inh_RecordPatternBindings
data Syn_RecordPatternBindings
Syn_RecordPatternBindings :: (RecordPatternBindings) -> Syn_RecordPatternBindings
self_Syn_RecordPatternBindings :: Syn_RecordPatternBindings -> (RecordPatternBindings)
wrap_RecordPatternBindings :: T_RecordPatternBindings -> Inh_RecordPatternBindings -> (Syn_RecordPatternBindings)
sem_RecordPatternBindings :: RecordPatternBindings -> T_RecordPatternBindings
newtype T_RecordPatternBindings
T_RecordPatternBindings :: Identity (T_RecordPatternBindings_s146) -> T_RecordPatternBindings
attach_T_RecordPatternBindings :: T_RecordPatternBindings -> Identity (T_RecordPatternBindings_s146)
newtype T_RecordPatternBindings_s146
C_RecordPatternBindings_s146 :: (T_RecordPatternBindings_v145) -> T_RecordPatternBindings_s146
inv_RecordPatternBindings_s146 :: T_RecordPatternBindings_s146 -> (T_RecordPatternBindings_v145)
data T_RecordPatternBindings_s147
C_RecordPatternBindings_s147 :: T_RecordPatternBindings_s147
type T_RecordPatternBindings_v145 = (T_RecordPatternBindings_vIn145) -> (T_RecordPatternBindings_vOut145)
data T_RecordPatternBindings_vIn145
T_RecordPatternBindings_vIn145 :: T_RecordPatternBindings_vIn145
data T_RecordPatternBindings_vOut145
T_RecordPatternBindings_vOut145 :: (RecordPatternBindings) -> T_RecordPatternBindings_vOut145
sem_RecordPatternBindings_Cons :: T_RecordPatternBinding -> T_RecordPatternBindings -> T_RecordPatternBindings
sem_RecordPatternBindings_Nil :: T_RecordPatternBindings
data Inh_RightHandSide
Inh_RightHandSide :: Inh_RightHandSide
data Syn_RightHandSide
Syn_RightHandSide :: (String -> OneLineTree) -> (RightHandSide) -> Syn_RightHandSide
oneLineTree_Syn_RightHandSide :: Syn_RightHandSide -> (String -> OneLineTree)
self_Syn_RightHandSide :: Syn_RightHandSide -> (RightHandSide)
wrap_RightHandSide :: T_RightHandSide -> Inh_RightHandSide -> (Syn_RightHandSide)
sem_RightHandSide :: RightHandSide -> T_RightHandSide
newtype T_RightHandSide
T_RightHandSide :: Identity (T_RightHandSide_s149) -> T_RightHandSide
attach_T_RightHandSide :: T_RightHandSide -> Identity (T_RightHandSide_s149)
newtype T_RightHandSide_s149
C_RightHandSide_s149 :: (T_RightHandSide_v148) -> T_RightHandSide_s149
inv_RightHandSide_s149 :: T_RightHandSide_s149 -> (T_RightHandSide_v148)
data T_RightHandSide_s150
C_RightHandSide_s150 :: T_RightHandSide_s150
type T_RightHandSide_v148 = (T_RightHandSide_vIn148) -> (T_RightHandSide_vOut148)
data T_RightHandSide_vIn148
T_RightHandSide_vIn148 :: T_RightHandSide_vIn148
data T_RightHandSide_vOut148
T_RightHandSide_vOut148 :: (String -> OneLineTree) -> (RightHandSide) -> T_RightHandSide_vOut148
sem_RightHandSide_Expression :: T_Range -> T_Expression -> T_MaybeDeclarations -> T_RightHandSide
sem_RightHandSide_Guarded :: T_Range -> T_GuardedExpressions -> T_MaybeDeclarations -> T_RightHandSide
data Inh_SimpleType
Inh_SimpleType :: Inh_SimpleType
data Syn_SimpleType
Syn_SimpleType :: (SimpleType) -> Syn_SimpleType
self_Syn_SimpleType :: Syn_SimpleType -> (SimpleType)
wrap_SimpleType :: T_SimpleType -> Inh_SimpleType -> (Syn_SimpleType)
sem_SimpleType :: SimpleType -> T_SimpleType
newtype T_SimpleType
T_SimpleType :: Identity (T_SimpleType_s152) -> T_SimpleType
attach_T_SimpleType :: T_SimpleType -> Identity (T_SimpleType_s152)
newtype T_SimpleType_s152
C_SimpleType_s152 :: (T_SimpleType_v151) -> T_SimpleType_s152
inv_SimpleType_s152 :: T_SimpleType_s152 -> (T_SimpleType_v151)
data T_SimpleType_s153
C_SimpleType_s153 :: T_SimpleType_s153
type T_SimpleType_v151 = (T_SimpleType_vIn151) -> (T_SimpleType_vOut151)
data T_SimpleType_vIn151
T_SimpleType_vIn151 :: T_SimpleType_vIn151
data T_SimpleType_vOut151
T_SimpleType_vOut151 :: (SimpleType) -> T_SimpleType_vOut151
sem_SimpleType_SimpleType :: T_Range -> T_Name -> T_Names -> T_SimpleType
data Inh_Statement
Inh_Statement :: Inh_Statement
data Syn_Statement
Syn_Statement :: (OneLineTree) -> (Statement) -> Syn_Statement
oneLineTree_Syn_Statement :: Syn_Statement -> (OneLineTree)
self_Syn_Statement :: Syn_Statement -> (Statement)
wrap_Statement :: T_Statement -> Inh_Statement -> (Syn_Statement)
sem_Statement :: Statement -> T_Statement
newtype T_Statement
T_Statement :: Identity (T_Statement_s155) -> T_Statement
attach_T_Statement :: T_Statement -> Identity (T_Statement_s155)
newtype T_Statement_s155
C_Statement_s155 :: (T_Statement_v154) -> T_Statement_s155
inv_Statement_s155 :: T_Statement_s155 -> (T_Statement_v154)
data T_Statement_s156
C_Statement_s156 :: T_Statement_s156
type T_Statement_v154 = (T_Statement_vIn154) -> (T_Statement_vOut154)
data T_Statement_vIn154
T_Statement_vIn154 :: T_Statement_vIn154
data T_Statement_vOut154
T_Statement_vOut154 :: (OneLineTree) -> (Statement) -> T_Statement_vOut154
sem_Statement_Expression :: T_Range -> T_Expression -> T_Statement
sem_Statement_Let :: T_Range -> T_Declarations -> T_Statement
sem_Statement_Generator :: T_Range -> T_Pattern -> T_Expression -> T_Statement
sem_Statement_Empty :: T_Range -> T_Statement
data Inh_Statements
Inh_Statements :: Inh_Statements
data Syn_Statements
Syn_Statements :: ([OneLineTree]) -> (Statements) -> Syn_Statements
oneLineTree_Syn_Statements :: Syn_Statements -> ([OneLineTree])
self_Syn_Statements :: Syn_Statements -> (Statements)
wrap_Statements :: T_Statements -> Inh_Statements -> (Syn_Statements)
sem_Statements :: Statements -> T_Statements
newtype T_Statements
T_Statements :: Identity (T_Statements_s158) -> T_Statements
attach_T_Statements :: T_Statements -> Identity (T_Statements_s158)
newtype T_Statements_s158
C_Statements_s158 :: (T_Statements_v157) -> T_Statements_s158
inv_Statements_s158 :: T_Statements_s158 -> (T_Statements_v157)
data T_Statements_s159
C_Statements_s159 :: T_Statements_s159
type T_Statements_v157 = (T_Statements_vIn157) -> (T_Statements_vOut157)
data T_Statements_vIn157
T_Statements_vIn157 :: T_Statements_vIn157
data T_Statements_vOut157
T_Statements_vOut157 :: ([OneLineTree]) -> (Statements) -> T_Statements_vOut157
sem_Statements_Cons :: T_Statement -> T_Statements -> T_Statements
sem_Statements_Nil :: T_Statements
data Inh_Strings
Inh_Strings :: Inh_Strings
data Syn_Strings
Syn_Strings :: ([OneLineTree]) -> (Strings) -> Syn_Strings
oneLineTree_Syn_Strings :: Syn_Strings -> ([OneLineTree])
self_Syn_Strings :: Syn_Strings -> (Strings)
wrap_Strings :: T_Strings -> Inh_Strings -> (Syn_Strings)
sem_Strings :: Strings -> T_Strings
newtype T_Strings
T_Strings :: Identity (T_Strings_s161) -> T_Strings
attach_T_Strings :: T_Strings -> Identity (T_Strings_s161)
newtype T_Strings_s161
C_Strings_s161 :: (T_Strings_v160) -> T_Strings_s161
inv_Strings_s161 :: T_Strings_s161 -> (T_Strings_v160)
data T_Strings_s162
C_Strings_s162 :: T_Strings_s162
type T_Strings_v160 = (T_Strings_vIn160) -> (T_Strings_vOut160)
data T_Strings_vIn160
T_Strings_vIn160 :: T_Strings_vIn160
data T_Strings_vOut160
T_Strings_vOut160 :: ([OneLineTree]) -> (Strings) -> T_Strings_vOut160
sem_Strings_Cons :: (String) -> T_Strings -> T_Strings
sem_Strings_Nil :: T_Strings
data Inh_Type
Inh_Type :: Inh_Type
data Syn_Type
Syn_Type :: (Type) -> Syn_Type
self_Syn_Type :: Syn_Type -> (Type)
wrap_Type :: T_Type -> Inh_Type -> (Syn_Type)
sem_Type :: Type -> T_Type
newtype T_Type
T_Type :: Identity (T_Type_s164) -> T_Type
attach_T_Type :: T_Type -> Identity (T_Type_s164)
newtype T_Type_s164
C_Type_s164 :: (T_Type_v163) -> T_Type_s164
inv_Type_s164 :: T_Type_s164 -> (T_Type_v163)
data T_Type_s165
C_Type_s165 :: T_Type_s165
type T_Type_v163 = (T_Type_vIn163) -> (T_Type_vOut163)
data T_Type_vIn163
T_Type_vIn163 :: T_Type_vIn163
data T_Type_vOut163
T_Type_vOut163 :: (Type) -> T_Type_vOut163
sem_Type_Application :: T_Range -> (Bool) -> T_Type -> T_Types -> T_Type
sem_Type_Variable :: T_Range -> T_Name -> T_Type
sem_Type_Constructor :: T_Range -> T_Name -> T_Type
sem_Type_Qualified :: T_Range -> T_ContextItems -> T_Type -> T_Type
sem_Type_Forall :: T_Range -> T_Names -> T_Type -> T_Type
sem_Type_Exists :: T_Range -> T_Names -> T_Type -> T_Type
sem_Type_Parenthesized :: T_Range -> T_Type -> T_Type
data Inh_Types
Inh_Types :: Inh_Types
data Syn_Types
Syn_Types :: (Types) -> Syn_Types
self_Syn_Types :: Syn_Types -> (Types)
wrap_Types :: T_Types -> Inh_Types -> (Syn_Types)
sem_Types :: Types -> T_Types
newtype T_Types
T_Types :: Identity (T_Types_s167) -> T_Types
attach_T_Types :: T_Types -> Identity (T_Types_s167)
newtype T_Types_s167
C_Types_s167 :: (T_Types_v166) -> T_Types_s167
inv_Types_s167 :: T_Types_s167 -> (T_Types_v166)
data T_Types_s168
C_Types_s168 :: T_Types_s168
type T_Types_v166 = (T_Types_vIn166) -> (T_Types_vOut166)
data T_Types_vIn166
T_Types_vIn166 :: T_Types_vIn166
data T_Types_vOut166
T_Types_vOut166 :: (Types) -> T_Types_vOut166
sem_Types_Cons :: T_Type -> T_Types -> T_Types
sem_Types_Nil :: T_Types


module Helium.StaticAnalysis.Miscellaneous.UHA_Source
data UHA_Source
UHA_Expr :: Expression -> UHA_Source
UHA_Pat :: Pattern -> UHA_Source
UHA_Stat :: Statement -> UHA_Source
UHA_Qual :: Qualifier -> UHA_Source
UHA_FB :: FunctionBinding -> UHA_Source
UHA_RHS :: RightHandSide -> UHA_Source
UHA_Decl :: Declaration -> UHA_Source
UHA_Decls :: Declarations -> UHA_Source
UHA_Def :: Name -> UHA_Source
rangeOfSource :: UHA_Source -> Range
oneLinerSource :: UHA_Source -> OneLineTree
descriptionOfSource :: UHA_Source -> String
nameToUHA_Expr :: Name -> UHA_Source
nameToUHA_Pat :: Name -> UHA_Source
nameToUHA_Def :: Name -> UHA_Source
convertSources :: (UHA_Source, Maybe UHA_Source) -> [(String, UHA_Source)]
instance Show UHA_Source


module Helium.StaticAnalysis.Messages.TypeErrors
type TypeErrors = [TypeError]
data TypeError
TypeError :: [Range] -> [MessageLine] -> [(Bool, MessageBlock, MessageBlock)] -> [TypeErrorHint] -> TypeError
type TypeErrorHint = (String, MessageBlock)
makeNotGeneralEnoughTypeError :: Bool -> Range -> UHA_Source -> TpScheme -> TpScheme -> TypeError
makeMissingConstraintTypeError :: Range -> Maybe UHA_Source -> TpScheme -> (Bool, Predicate) -> UHA_Source -> TypeError
makeUnresolvedOverloadingError :: UHA_Source -> String -> (TpScheme, TpScheme) -> TypeError
makeReductionError :: UHA_Source -> Either (TpScheme, Tp) (String, Maybe Tp) -> ClassEnvironment -> Predicate -> TypeError
makeRestrictedButOverloadedError :: Name -> TpScheme -> TypeError
instance Substitutable TypeError
instance HasMessage TypeError


-- | during type inference.
module Helium.StaticAnalysis.Miscellaneous.ConstraintInfo
data ConstraintInfo
CInfo_ :: String -> (UHA_Source, Maybe UHA_Source) -> InfoTree -> Properties -> Maybe TypeError -> ConstraintInfo
location :: ConstraintInfo -> String
sources :: ConstraintInfo -> (UHA_Source, Maybe UHA_Source)
localInfo :: ConstraintInfo -> InfoTree
properties :: ConstraintInfo -> Properties
errorMessage :: ConstraintInfo -> Maybe TypeError
type Properties = [Property]
data Property
FolkloreConstraint :: Property
ConstraintPhaseNumber :: Int -> Property
HasTrustFactor :: Float -> Property
FuntionBindingEdge :: Int -> Property
InstantiatedTypeScheme :: TpScheme -> Property
SkolemizedTypeScheme :: (Tps, TpScheme) -> Property
IsUserConstraint :: Int -> Int -> Property
WithHint :: (String, MessageBlock) -> Property
ReductionErrorInfo :: Predicate -> Property
FromBindingGroup :: Property
IsImported :: Name -> Property
ApplicationEdge :: Bool -> [LocalInfo] -> Property
ExplicitTypedBinding :: Property
ExplicitTypedDefinition :: Tps -> Name -> Property
Unifier :: Int -> (String, LocalInfo, String) -> Property
EscapedSkolems :: [Int] -> Property
PredicateArisingFrom :: (Predicate, ConstraintInfo) -> Property
TypeSignatureLocation :: Range -> Property
TypePair :: (Tp, Tp) -> Property
class HasProperties a where addProperty = addProperties . (: []) addProperties = flip (foldr addProperty)
getProperties :: HasProperties a => a -> Properties
addProperty :: HasProperties a => Property -> a -> a
addProperties :: HasProperties a => Properties -> a -> a
maybeHead :: [a] -> Maybe a
headWithDefault :: a -> [a] -> a
maybeReductionErrorPredicate :: HasProperties a => a -> Maybe Predicate
isFolkloreConstraint :: HasProperties a => a -> Bool

-- | Returns only type schemes with at least one quantifier
maybeInstantiatedTypeScheme :: HasProperties a => a -> Maybe TpScheme
maybeSkolemizedTypeScheme :: HasProperties a => a -> Maybe (Tps, TpScheme)
maybeUserConstraint :: HasProperties a => a -> Maybe (Int, Int)
phaseOfConstraint :: HasProperties a => a -> Int
isExplicitTypedBinding :: HasProperties a => a -> Bool
maybeExplicitTypedDefinition :: HasProperties a => a -> Maybe (Tps, Name)
maybeTypeSignatureLocation :: HasProperties a => a -> Maybe Range
maybePredicateArisingFrom :: HasProperties a => a -> Maybe (Predicate, ConstraintInfo)
getEscapedSkolems :: HasProperties a => a -> [Int]
childConstraint :: Int -> String -> InfoTree -> Properties -> ConstraintInfo
specialConstraint :: String -> InfoTree -> (UHA_Source, Maybe UHA_Source) -> Properties -> ConstraintInfo
orphanConstraint :: Int -> String -> InfoTree -> Properties -> ConstraintInfo
resultConstraint :: String -> InfoTree -> Properties -> ConstraintInfo
variableConstraint :: String -> UHA_Source -> Properties -> ConstraintInfo
cinfoBindingGroupExplicitTypedBinding :: Tps -> Name -> Name -> ConstraintInfo
cinfoSameBindingGroup :: Name -> ConstraintInfo
cinfoBindingGroupImplicit :: Name -> ConstraintInfo
cinfoBindingGroupExplicit :: Tps -> Names -> Name -> ConstraintInfo
cinfoGeneralize :: Name -> ConstraintInfo
type InfoTrees = [InfoTree]
type InfoTree = DoublyLinkedTree LocalInfo
data LocalInfo
LocalInfo :: UHA_Source -> Maybe Tp -> Tps -> LocalInfo
self :: LocalInfo -> UHA_Source
assignedType :: LocalInfo -> Maybe Tp
monos :: LocalInfo -> Tps
typeSchemesInInfoTree :: FixpointSubstitution -> Predicates -> InfoTree -> [(Range, TpScheme)]
type ConstraintSet = Tree (TypeConstraint ConstraintInfo)
type ConstraintSets = Trees (TypeConstraint ConstraintInfo)
highlyTrustedFactor :: Float
highlyTrusted :: Property
isHighlyTrusted :: ConstraintInfo -> Bool
setTypePair :: (Tp, Tp) -> ConstraintInfo -> ConstraintInfo
typepair :: ConstraintInfo -> (Tp, Tp)
isExprTyped :: ConstraintInfo -> Bool
tooGeneralLabels :: [ErrorLabel]
makeTypeErrors :: Substitution sub => [Option] -> ClassEnvironment -> OrderedTypeSynonyms -> sub -> [(ConstraintInfo, ErrorLabel)] -> TypeErrors
makeUnificationTypeError :: ConstraintInfo -> TypeError
emptyConstraintInfo :: ConstraintInfo
defaultConstraintInfo :: (UHA_Source, Maybe UHA_Source) -> ConstraintInfo
standardConstraintInfo :: ConstraintInfo
maybeSpecialTypeError :: ConstraintInfo -> Maybe TypeError
setTypeError :: TypeError -> ConstraintInfo -> ConstraintInfo
instance PolyTypeConstraintInfo ConstraintInfo
instance TypeConstraintInfo ConstraintInfo
instance HasProperties ConstraintInfo
instance HasProperties Properties
instance Show ConstraintInfo


-- | compiled.
--   
--   (directives based on "Scripting the Type Inference Process", ICFP
--   2003)
module Helium.StaticAnalysis.Directives.TS_Messages
type TS_Errors = [TS_Error]
data TS_Error
InconsistentConstraint :: String -> ConstraintInfo -> TS_Error
UndefinedTS :: String -> Name -> Entity -> TS_Error
UnusedMetaVariable :: String -> String -> TS_Error
DuplicatedMetaVariablesPremise :: String -> String -> TS_Error
DuplicatedMetaVariablesConclusion :: String -> String -> TS_Error
DuplicatedMetaVariableConstraints :: String -> String -> TS_Error
TypeErrorTS :: String -> TypeError -> TS_Error
Soundness :: String -> TpScheme -> TpScheme -> TS_Error
type TS_Warnings = [TS_Warning]
data TS_Warning
MetaVariableConstraintsNotExplicit :: String -> [String] -> TS_Warning
showTS_Error :: TS_Error -> String
showTS_Warning :: TS_Warning -> String
instance HasMessage TS_Warning
instance HasMessage TS_Error


module Helium.StaticAnalysis.Inferencers.BindingGroupAnalysis
type Assumptions = Map Name [(Name, Tp)]
type PatternAssumptions = Map Name Tp
type Monos = Tps
noAssumptions :: Map Name a
listToAssumptions :: [(Name, Tp)] -> Assumptions
combine :: Assumptions -> Assumptions -> Assumptions
single :: Name -> Tp -> Assumptions
type BindingGroups = [BindingGroup]
type BindingGroup = (PatternAssumptions, Assumptions, ConstraintSets)
type InheritedBDG = [(Names, (Monos, Int))]
emptyBindingGroup :: BindingGroup
combineBindingGroup :: BindingGroup -> BindingGroup -> BindingGroup
concatBindingGroups :: BindingGroups -> BindingGroup

-- | Input for binding group analysis
type InputBDG = (Bool, Int, Int, Monos, Map Name TpScheme, Maybe (Assumptions, ConstraintSets), Int)
type OutputBDG = (Assumptions, ConstraintSet, InheritedBDG, Int, Int, Map Name (Sigma Predicates))
performBindingGroup :: InputBDG -> BindingGroups -> OutputBDG
findMono :: Name -> InheritedBDG -> Monos
getMonos :: TypeConstraints info -> Monos
findCurrentChunk :: Name -> InheritedBDG -> Int
topSort :: Vertex -> [Edge] -> [[Vertex]]


-- | (directives based on "Scripting the Type Inference Process", ICFP
--   2003)
module Helium.StaticAnalysis.Directives.TS_Attributes
type MetaVariableTable = [(String, MetaVariableInfo)]
data MetaVariableInfo
MetaVarInfo :: ConstraintSet -> Assumptions -> LocalInfo -> MetaVariableInfo
getConstraintSet :: MetaVariableInfo -> ConstraintSet
getAssumptions :: MetaVariableInfo -> Assumptions
getLocalInfo :: MetaVariableInfo -> LocalInfo
metaVarInfo :: ConstraintSet -> Assumptions -> LocalInfo -> MetaVariableInfo
getMaybeType :: MetaVariableInfo -> Maybe Tp
getType :: MetaVariableInfo -> Tp
getRange :: MetaVariableInfo -> Range
getOneLineTree :: MetaVariableInfo -> OneLineTree
type AttributeTable = [(String, MetaVariableInfo -> MessageBlock)]
data Attribute
LocalAttribute :: String -> Attribute
MetaVarAttribute :: String -> String -> Attribute
parseWithAttributes :: String -> [Either Attribute String]
findAttributes :: String -> [Attribute]
changeAttributes :: (Attribute -> Attribute) -> String -> String
substituteAttributes :: (Attribute -> MessageBlock) -> String -> MessageBlock
toMessageBlock :: [(String, MessageBlock)] -> MetaVariableInfo -> MetaVariableTable -> Attribute -> MessageBlock
findAttributeField :: String -> String -> MetaVariableInfo -> MessageBlock
attributeFieldTable :: [(String, MetaVariableInfo -> MessageBlock)]
instance Eq Attribute
instance Show Attribute


-- | Two (filter) heuristics that prevent an application or a negation to
--   be reported as incorrect if only the result type is reponsible for
--   non-unifiability.
module Helium.StaticAnalysis.Heuristics.OnlyResultHeuristics
class MaybeApplication a
maybeNumberOfArguments :: MaybeApplication a => a -> Maybe Int
maybeApplicationEdge :: MaybeApplication a => a -> Maybe (Bool, [(UHA_Source, Tp)])
class IsPattern a
isPattern :: IsPattern a => a -> Bool
avoidApplicationConstraints :: (HasTwoTypes info, MaybeApplication info) => Heuristic info
class MaybeNegation a
maybeNegation :: MaybeNegation a => a -> Maybe Bool
avoidNegationConstraints :: (HasTwoTypes info, MaybeNegation info) => Heuristic info


module Helium.StaticAnalysis.Heuristics.RepairHeuristics
type Siblings = [[(String, TpScheme)]]
class MaybeImported a
maybeImportedName :: MaybeImported a => a -> Maybe String
siblingFunctions :: (MaybeImported info, HasTwoTypes info, WithHints info, HasTypeGraph m info) => Siblings -> Selector m info
class MaybeLiteral a
maybeLiteral :: MaybeLiteral a => a -> Maybe String
siblingLiterals :: (HasTypeGraph m info, MaybeLiteral info, HasTwoTypes info, WithHints info) => Selector m info
similarNegation :: (HasTypeGraph m info, MaybeNegation info, HasTwoTypes info, WithHints info) => Selector m info
applicationHeuristic :: (HasTypeGraph m info, MaybeApplication info, IsPattern info, HasTwoTypes info, WithHints info) => Selector m info
class IsTupleEdge a
isTupleEdge :: IsTupleEdge a => a -> Bool
tupleHeuristic :: (HasTypeGraph m info, IsTupleEdge info, HasTwoTypes info, WithHints info) => Selector m info
class IsFunctionBinding a
isExplicitlyTyped :: IsFunctionBinding a => a -> Bool
maybeFunctionBinding :: IsFunctionBinding a => a -> Maybe Int
fbHasTooManyArguments :: (HasTypeGraph m info, IsFunctionBinding info, HasTwoTypes info, WithHints info) => Selector m info
class IsExprVariable a
isExprVariable :: IsExprVariable a => a -> Bool
isEmptyInfixApplication :: IsExprVariable a => a -> Bool
variableFunction :: (HasTypeGraph m info, IsExprVariable info, MaybeApplication info, HasTwoTypes info, WithHints info) => Selector m info
class MaybeUnaryMinus a
maybeUnaryMinus :: MaybeUnaryMinus a => a -> Maybe (Either Int Float)
unaryMinus :: (HasTypeGraph m info, MaybeApplication info, MaybeUnaryMinus info, HasTwoTypes info, WithHints info) => Bool -> Selector m info
heuristicsMAX :: Int
zipWithHoles :: [a] -> [b] -> [([Int], [(a, b)])]
type Permutation = [Int]
permutationsForLength :: Int -> [Permutation]
deleteIndex :: Int -> [a] -> [a]
permute :: Permutation -> [a] -> [a]
class WithHints a
addHint :: WithHints a => String -> String -> a -> a
typeErrorForTerm :: WithHints a => (Bool, Bool) -> Int -> OneLineTree -> (Tp, Tp) -> Range -> a -> a
fixHint :: WithHints a => String -> a -> a
possibleHint :: WithHints a => String -> a -> a
becauseHint :: WithHints a => String -> a -> a
unifiableInContext :: ClassEnvironment -> OrderedTypeSynonyms -> [Maybe Predicate] -> Tp -> Tp -> Bool
allSubstPredicates :: HasTypeGraph m info => m [Maybe Predicate]
predicatesFit :: HasTypeGraph m info => Predicates -> m Bool
predicateFits :: HasTypeGraph m info => Predicate -> m Bool


module Helium.ModuleSystem.ImportEnvironment
type TypeEnvironment = Map Name TpScheme
type ValueConstructorEnvironment = Map Name TpScheme
type TypeConstructorEnvironment = Map Name Int
type TypeSynonymEnvironment = Map Name (Int, Tps -> Tp)
type ImportEnvironments = [ImportEnvironment]
data ImportEnvironment
ImportEnvironment :: TypeConstructorEnvironment -> TypeSynonymEnvironment -> TypeEnvironment -> ValueConstructorEnvironment -> OperatorTable -> Core_TypingStrategies -> ImportEnvironment
typeConstructors :: ImportEnvironment -> TypeConstructorEnvironment
typeSynonyms :: ImportEnvironment -> TypeSynonymEnvironment
typeEnvironment :: ImportEnvironment -> TypeEnvironment
valueConstructors :: ImportEnvironment -> ValueConstructorEnvironment
operatorTable :: ImportEnvironment -> OperatorTable
typingStrategies :: ImportEnvironment -> Core_TypingStrategies
emptyEnvironment :: ImportEnvironment
addTypeConstructor :: Name -> Int -> ImportEnvironment -> ImportEnvironment
addTypeSynonym :: Name -> (Int, Tps -> Tp) -> ImportEnvironment -> ImportEnvironment
addType :: Name -> TpScheme -> ImportEnvironment -> ImportEnvironment
addToTypeEnvironment :: TypeEnvironment -> ImportEnvironment -> ImportEnvironment
addValueConstructor :: Name -> TpScheme -> ImportEnvironment -> ImportEnvironment
addOperator :: Name -> (Int, Assoc) -> ImportEnvironment -> ImportEnvironment
setValueConstructors :: Map Name TpScheme -> ImportEnvironment -> ImportEnvironment
setTypeConstructors :: Map Name Int -> ImportEnvironment -> ImportEnvironment
setTypeSynonyms :: Map Name (Int, Tps -> Tp) -> ImportEnvironment -> ImportEnvironment
setTypeEnvironment :: Map Name TpScheme -> ImportEnvironment -> ImportEnvironment
setOperatorTable :: OperatorTable -> ImportEnvironment -> ImportEnvironment
getOrderedTypeSynonyms :: ImportEnvironment -> OrderedTypeSynonyms
addTypingStrategies :: Core_TypingStrategies -> ImportEnvironment -> ImportEnvironment
removeTypingStrategies :: ImportEnvironment -> ImportEnvironment
getSiblingGroups :: ImportEnvironment -> [[String]]
getSiblings :: ImportEnvironment -> Siblings
combineImportEnvironments :: ImportEnvironment -> ImportEnvironment -> ImportEnvironment
exclusiveUnion :: Ord key => Map key a -> Map key a -> Map key a
createClassEnvironment :: ImportEnvironment -> ClassEnvironment
superClassRelation :: ClassEnvironment
makeInstance :: String -> Int -> String -> Instance
holmesShowImpEnv :: Module -> ImportEnvironment -> String
instance Ord Assoc
instance Show ImportEnvironment


module Helium.Main.CompileUtils
type Phase err a = IO (Either [err] a)
type CompileOptions = ([Option], String, [String])
(===>) :: Phase err1 a -> (a -> Phase err2 b) -> Phase (Either err1 err2) b
doPhaseWithExit :: HasMessage err => Int -> ([err] -> String) -> CompileOptions -> Phase err a -> IO a
sendLog :: String -> String -> [String] -> [Option] -> IO ()
enterNewPhase :: String -> [Option] -> IO ()
showErrorsAndExit :: HasMessage a => [a] -> Int -> IO b
showMessages :: HasMessage a => [a] -> IO ()
makeCoreLib :: String -> String -> IO ()
sys :: String -> IO ()
checkExistence :: [String] -> String -> IO ()
resolve :: [String] -> String -> IO (Maybe String)
data Option
BuildOne :: Option
BuildAll :: Option
DumpInformationForThisModule :: Option
DumpInformationForAllModules :: Option
DisableLogging :: Option
EnableLogging :: Option
Alert :: String -> Option
Overloading :: Option
NoOverloading :: Option
LvmPath :: String -> Option
Verbose :: Option
NoWarnings :: Option
MoreOptions :: Option
Information :: String -> Option
StopAfterParser :: Option
StopAfterStaticAnalysis :: Option
StopAfterTypeInferencing :: Option
StopAfterDesugar :: Option
DumpTokens :: Option
DumpUHA :: Option
DumpCore :: Option
DumpCoreToFile :: Option
DebugLogger :: Option
Host :: String -> Option
Port :: Int -> Option
DumpTypeDebug :: Option
AlgorithmW :: Option
AlgorithmM :: Option
DisableDirectives :: Option
NoRepairHeuristics :: Option
HFullQualification :: Option
ExperimentalOptions :: Option
KindInferencing :: Option
SignatureWarnings :: Option
RightToLeft :: Option
NoSpreading :: Option
TreeWalkTopDown :: Option
TreeWalkBottomUp :: Option
TreeWalkInorderTopFirstPre :: Option
TreeWalkInorderTopLastPre :: Option
TreeWalkInorderTopFirstPost :: Option
TreeWalkInorderTopLastPost :: Option
SolverSimple :: Option
SolverGreedy :: Option
SolverTypeGraph :: Option
SolverCombination :: Option
SolverChunks :: Option
UnifierHeuristics :: Option
SelectConstraintNumber :: Int -> Option
NoOverloadingTypeCheck :: Option
NoPrelude :: Option
UseTutor :: Option
splitFilePath :: String -> (String, String, String)
combinePathAndFile :: String -> String -> String

-- | Conditional execution of monadic expressions. For example,
--   
--   <pre>
--   when debug (putStr "Debugging\n")
--   </pre>
--   
--   will output the string <tt>Debugging\n</tt> if the Boolean value
--   <tt>debug</tt> is <a>True</a>, and otherwise do nothing.
when :: Monad m => Bool -> m () -> m ()

-- | The reverse of <a>when</a>.
unless :: Monad m => Bool -> m () -> m ()

-- | Computation <a>exitWith</a> <tt>code</tt> throws <a>ExitCode</a>
--   <tt>code</tt>. Normally this terminates the program, returning
--   <tt>code</tt> to the program's caller.
--   
--   On program termination, the standard <tt>Handle</tt>s <tt>stdout</tt>
--   and <tt>stderr</tt> are flushed automatically; any other buffered
--   <tt>Handle</tt>s need to be flushed manually, otherwise the buffered
--   data will be discarded.
--   
--   A program that fails in any other way is treated as if it had called
--   <a>exitFailure</a>. A program that terminates successfully without
--   calling <a>exitWith</a> explicitly is treated as it it had called
--   <a>exitWith</a> <a>ExitSuccess</a>.
--   
--   As an <a>ExitCode</a> is not an <a>IOError</a>, <a>exitWith</a>
--   bypasses the error handling in the <a>IO</a> monad and cannot be
--   intercepted by <tt>catch</tt> from the <a>Prelude</a>. However it is a
--   <tt>SomeException</tt>, and can be caught using the functions of
--   <a>Control.Exception</a>. This means that cleanup computations added
--   with <a>bracket</a> (from <a>Control.Exception</a>) are also executed
--   properly on <a>exitWith</a>.
--   
--   Note: in GHC, <a>exitWith</a> should be called from the main program
--   thread in order to exit the process. When called from another thread,
--   <a>exitWith</a> will throw an <tt>ExitException</tt> as normal, but
--   the exception will not cause the process itself to exit.
exitWith :: ExitCode -> IO a

-- | Defines the exit codes that a program can return.
data ExitCode :: *

-- | indicates successful termination;
ExitSuccess :: ExitCode

-- | indicates program failure with an exit code. The exact interpretation
--   of the code is operating-system dependent. In particular, some values
--   may be prohibited (e.g. 0 on a POSIX-compliant system).
ExitFailure :: Int -> ExitCode

-- | The computation <a>exitSuccess</a> is equivalent to <a>exitWith</a>
--   <a>ExitSuccess</a>, It terminates the program successfully.
exitSuccess :: IO a

-- | Computation <a>getArgs</a> returns a list of the program's command
--   line arguments (not including the program name).
getArgs :: IO [String]
data Module
Module_Module :: (Range) -> (MaybeName) -> (MaybeExports) -> (Body) -> Module


module Helium.Main.PhaseLexer
phaseLexer :: String -> String -> [Option] -> Phase LexerError ([LexerWarning], [Token])


module Helium.Main.PhaseParser
phaseParser :: String -> [Token] -> [Option] -> Phase ParseError Module


module Helium.Main.PhaseResolveOperators
phaseResolveOperators :: Module -> [ImportEnvironment] -> [Option] -> Phase ResolveError Module


module Helium.Main.PhaseCodeGenerator
phaseCodeGenerator :: String -> CoreModule -> [Option] -> IO ()

module Helium.StaticAnalysis.Messages.Information
type Fixity = (Int, Assoc)
data InfoItem
Function :: Name -> TpScheme -> (Maybe Fixity) -> InfoItem
ValueConstructor :: Name -> TpScheme -> (Maybe Fixity) -> InfoItem
TypeSynonym :: Name -> Int -> (Tps -> Tp) -> InfoItem
DataTypeConstructor :: Name -> Int -> [(Name, TpScheme)] -> InfoItem
TypeClass :: String -> Class -> InfoItem
NotDefined :: String -> InfoItem
showInformation :: Bool -> [Option] -> ImportEnvironment -> IO ()
itemDescription :: InfoItem -> [String]
definedOrImported :: Range -> String
showMaybeFixity :: Name -> Maybe Fixity -> MessageBlocks
findValueConstructors :: Name -> ImportEnvironment -> [(Name, TpScheme)]
lookupWithKey :: Ord key => key -> Map key a -> Maybe (key, a)
instance HasMessage InfoItem


module Helium.ModuleSystem.CoreToImportEnv
getImportEnvironment :: String -> [CoreDecl] -> ImportEnvironment


module Helium.Main.PhaseImport
phaseImport :: String -> Module -> [String] -> [Option] -> IO ([CoreDecl], [ImportEnvironment])

module Helium.StaticAnalysis.Inferencers.KindInferencing
type KindEnvironment = Map Name TpScheme
type KindConstraint = TypeConstraint KindError
type KindConstraints = TypeConstraints KindError
type BindingGroups = [BindingGroup]
type BindingGroup = (PatternAssumptions, Assumptions, KindConstraints)
combineBindingGroup :: BindingGroup -> BindingGroup -> BindingGroup
concatBindingGroups :: BindingGroups -> BindingGroup
emptyBindingGroup :: BindingGroup
performBindingGroup :: BindingGroups -> (PatternAssumptions, Assumptions, KindConstraints)
getKindsFromImportEnvironment :: ImportEnvironment -> KindEnvironment
getTypeVariables :: Assumptions -> Names
unexpected :: String -> KindError
(<==>) :: Kind -> Kind -> ((Kind, Kind) -> KindError) -> KindConstraint
data Inh_Alternative
Inh_Alternative :: (BindingGroups) -> (Int) -> Inh_Alternative
bindingGroups_Inh_Alternative :: Inh_Alternative -> (BindingGroups)
kappaUnique_Inh_Alternative :: Inh_Alternative -> (Int)
data Syn_Alternative
Syn_Alternative :: (BindingGroups) -> (Int) -> (Alternative) -> Syn_Alternative
bindingGroups_Syn_Alternative :: Syn_Alternative -> (BindingGroups)
kappaUnique_Syn_Alternative :: Syn_Alternative -> (Int)
self_Syn_Alternative :: Syn_Alternative -> (Alternative)
wrap_Alternative :: T_Alternative -> Inh_Alternative -> (Syn_Alternative)
sem_Alternative :: Alternative -> T_Alternative
newtype T_Alternative
T_Alternative :: Identity (T_Alternative_s2) -> T_Alternative
attach_T_Alternative :: T_Alternative -> Identity (T_Alternative_s2)
newtype T_Alternative_s2
C_Alternative_s2 :: (T_Alternative_v1) -> T_Alternative_s2
inv_Alternative_s2 :: T_Alternative_s2 -> (T_Alternative_v1)
data T_Alternative_s3
C_Alternative_s3 :: T_Alternative_s3
type T_Alternative_v1 = (T_Alternative_vIn1) -> (T_Alternative_vOut1)
data T_Alternative_vIn1
T_Alternative_vIn1 :: (BindingGroups) -> (Int) -> T_Alternative_vIn1
data T_Alternative_vOut1
T_Alternative_vOut1 :: (BindingGroups) -> (Int) -> (Alternative) -> T_Alternative_vOut1
sem_Alternative_Hole :: T_Range -> (Integer) -> T_Alternative
sem_Alternative_Feedback :: T_Range -> (String) -> T_Alternative -> T_Alternative
sem_Alternative_Alternative :: T_Range -> T_Pattern -> T_RightHandSide -> T_Alternative
sem_Alternative_Empty :: T_Range -> T_Alternative
data Inh_Alternatives
Inh_Alternatives :: (BindingGroups) -> (Int) -> Inh_Alternatives
bindingGroups_Inh_Alternatives :: Inh_Alternatives -> (BindingGroups)
kappaUnique_Inh_Alternatives :: Inh_Alternatives -> (Int)
data Syn_Alternatives
Syn_Alternatives :: (BindingGroups) -> (Int) -> (Alternatives) -> Syn_Alternatives
bindingGroups_Syn_Alternatives :: Syn_Alternatives -> (BindingGroups)
kappaUnique_Syn_Alternatives :: Syn_Alternatives -> (Int)
self_Syn_Alternatives :: Syn_Alternatives -> (Alternatives)
wrap_Alternatives :: T_Alternatives -> Inh_Alternatives -> (Syn_Alternatives)
sem_Alternatives :: Alternatives -> T_Alternatives
newtype T_Alternatives
T_Alternatives :: Identity (T_Alternatives_s5) -> T_Alternatives
attach_T_Alternatives :: T_Alternatives -> Identity (T_Alternatives_s5)
newtype T_Alternatives_s5
C_Alternatives_s5 :: (T_Alternatives_v4) -> T_Alternatives_s5
inv_Alternatives_s5 :: T_Alternatives_s5 -> (T_Alternatives_v4)
data T_Alternatives_s6
C_Alternatives_s6 :: T_Alternatives_s6
type T_Alternatives_v4 = (T_Alternatives_vIn4) -> (T_Alternatives_vOut4)
data T_Alternatives_vIn4
T_Alternatives_vIn4 :: (BindingGroups) -> (Int) -> T_Alternatives_vIn4
data T_Alternatives_vOut4
T_Alternatives_vOut4 :: (BindingGroups) -> (Int) -> (Alternatives) -> T_Alternatives_vOut4
sem_Alternatives_Cons :: T_Alternative -> T_Alternatives -> T_Alternatives
sem_Alternatives_Nil :: T_Alternatives
data Inh_AnnotatedType
Inh_AnnotatedType :: (KindConstraints) -> (Int) -> Inh_AnnotatedType
constraints_Inh_AnnotatedType :: Inh_AnnotatedType -> (KindConstraints)
kappaUnique_Inh_AnnotatedType :: Inh_AnnotatedType -> (Int)
data Syn_AnnotatedType
Syn_AnnotatedType :: (Assumptions) -> (KindConstraints) -> (Kind) -> (Int) -> (AnnotatedType) -> Syn_AnnotatedType
assumptions_Syn_AnnotatedType :: Syn_AnnotatedType -> (Assumptions)
constraints_Syn_AnnotatedType :: Syn_AnnotatedType -> (KindConstraints)
kappa_Syn_AnnotatedType :: Syn_AnnotatedType -> (Kind)
kappaUnique_Syn_AnnotatedType :: Syn_AnnotatedType -> (Int)
self_Syn_AnnotatedType :: Syn_AnnotatedType -> (AnnotatedType)
wrap_AnnotatedType :: T_AnnotatedType -> Inh_AnnotatedType -> (Syn_AnnotatedType)
sem_AnnotatedType :: AnnotatedType -> T_AnnotatedType
newtype T_AnnotatedType
T_AnnotatedType :: Identity (T_AnnotatedType_s8) -> T_AnnotatedType
attach_T_AnnotatedType :: T_AnnotatedType -> Identity (T_AnnotatedType_s8)
newtype T_AnnotatedType_s8
C_AnnotatedType_s8 :: (T_AnnotatedType_v7) -> T_AnnotatedType_s8
inv_AnnotatedType_s8 :: T_AnnotatedType_s8 -> (T_AnnotatedType_v7)
data T_AnnotatedType_s9
C_AnnotatedType_s9 :: T_AnnotatedType_s9
type T_AnnotatedType_v7 = (T_AnnotatedType_vIn7) -> (T_AnnotatedType_vOut7)
data T_AnnotatedType_vIn7
T_AnnotatedType_vIn7 :: (KindConstraints) -> (Int) -> T_AnnotatedType_vIn7
data T_AnnotatedType_vOut7
T_AnnotatedType_vOut7 :: (Assumptions) -> (KindConstraints) -> (Kind) -> (Int) -> (AnnotatedType) -> T_AnnotatedType_vOut7
sem_AnnotatedType_AnnotatedType :: T_Range -> (Bool) -> T_Type -> T_AnnotatedType
data Inh_AnnotatedTypes
Inh_AnnotatedTypes :: (KindConstraints) -> (Int) -> Inh_AnnotatedTypes
constraints_Inh_AnnotatedTypes :: Inh_AnnotatedTypes -> (KindConstraints)
kappaUnique_Inh_AnnotatedTypes :: Inh_AnnotatedTypes -> (Int)
data Syn_AnnotatedTypes
Syn_AnnotatedTypes :: (Assumptions) -> (KindConstraints) -> (Int) -> (Kinds) -> (AnnotatedTypes) -> Syn_AnnotatedTypes
assumptions_Syn_AnnotatedTypes :: Syn_AnnotatedTypes -> (Assumptions)
constraints_Syn_AnnotatedTypes :: Syn_AnnotatedTypes -> (KindConstraints)
kappaUnique_Syn_AnnotatedTypes :: Syn_AnnotatedTypes -> (Int)
kappas_Syn_AnnotatedTypes :: Syn_AnnotatedTypes -> (Kinds)
self_Syn_AnnotatedTypes :: Syn_AnnotatedTypes -> (AnnotatedTypes)
wrap_AnnotatedTypes :: T_AnnotatedTypes -> Inh_AnnotatedTypes -> (Syn_AnnotatedTypes)
sem_AnnotatedTypes :: AnnotatedTypes -> T_AnnotatedTypes
newtype T_AnnotatedTypes
T_AnnotatedTypes :: Identity (T_AnnotatedTypes_s11) -> T_AnnotatedTypes
attach_T_AnnotatedTypes :: T_AnnotatedTypes -> Identity (T_AnnotatedTypes_s11)
newtype T_AnnotatedTypes_s11
C_AnnotatedTypes_s11 :: (T_AnnotatedTypes_v10) -> T_AnnotatedTypes_s11
inv_AnnotatedTypes_s11 :: T_AnnotatedTypes_s11 -> (T_AnnotatedTypes_v10)
data T_AnnotatedTypes_s12
C_AnnotatedTypes_s12 :: T_AnnotatedTypes_s12
type T_AnnotatedTypes_v10 = (T_AnnotatedTypes_vIn10) -> (T_AnnotatedTypes_vOut10)
data T_AnnotatedTypes_vIn10
T_AnnotatedTypes_vIn10 :: (KindConstraints) -> (Int) -> T_AnnotatedTypes_vIn10
data T_AnnotatedTypes_vOut10
T_AnnotatedTypes_vOut10 :: (Assumptions) -> (KindConstraints) -> (Int) -> (Kinds) -> (AnnotatedTypes) -> T_AnnotatedTypes_vOut10
sem_AnnotatedTypes_Cons :: T_AnnotatedType -> T_AnnotatedTypes -> T_AnnotatedTypes
sem_AnnotatedTypes_Nil :: T_AnnotatedTypes
data Inh_Body
Inh_Body :: (ImportEnvironment) -> (Int) -> Inh_Body
importEnvironment_Inh_Body :: Inh_Body -> (ImportEnvironment)
kappaUnique_Inh_Body :: Inh_Body -> (Int)
data Syn_Body
Syn_Body :: (KindConstraints) -> (PatternAssumptions) -> (Int) -> (Body) -> Syn_Body
constraints_Syn_Body :: Syn_Body -> (KindConstraints)
environment_Syn_Body :: Syn_Body -> (PatternAssumptions)
kappaUnique_Syn_Body :: Syn_Body -> (Int)
self_Syn_Body :: Syn_Body -> (Body)
wrap_Body :: T_Body -> Inh_Body -> (Syn_Body)
sem_Body :: Body -> T_Body
newtype T_Body
T_Body :: Identity (T_Body_s14) -> T_Body
attach_T_Body :: T_Body -> Identity (T_Body_s14)
newtype T_Body_s14
C_Body_s14 :: (T_Body_v13) -> T_Body_s14
inv_Body_s14 :: T_Body_s14 -> (T_Body_v13)
data T_Body_s15
C_Body_s15 :: T_Body_s15
type T_Body_v13 = (T_Body_vIn13) -> (T_Body_vOut13)
data T_Body_vIn13
T_Body_vIn13 :: (ImportEnvironment) -> (Int) -> T_Body_vIn13
data T_Body_vOut13
T_Body_vOut13 :: (KindConstraints) -> (PatternAssumptions) -> (Int) -> (Body) -> T_Body_vOut13
sem_Body_Hole :: T_Range -> (Integer) -> T_Body
sem_Body_Body :: T_Range -> T_ImportDeclarations -> T_Declarations -> T_Body
data Inh_Constructor
Inh_Constructor :: (KindConstraints) -> (Int) -> Inh_Constructor
constraints_Inh_Constructor :: Inh_Constructor -> (KindConstraints)
kappaUnique_Inh_Constructor :: Inh_Constructor -> (Int)
data Syn_Constructor
Syn_Constructor :: (Assumptions) -> (KindConstraints) -> (Int) -> (Constructor) -> Syn_Constructor
assumptions_Syn_Constructor :: Syn_Constructor -> (Assumptions)
constraints_Syn_Constructor :: Syn_Constructor -> (KindConstraints)
kappaUnique_Syn_Constructor :: Syn_Constructor -> (Int)
self_Syn_Constructor :: Syn_Constructor -> (Constructor)
wrap_Constructor :: T_Constructor -> Inh_Constructor -> (Syn_Constructor)
sem_Constructor :: Constructor -> T_Constructor
newtype T_Constructor
T_Constructor :: Identity (T_Constructor_s17) -> T_Constructor
attach_T_Constructor :: T_Constructor -> Identity (T_Constructor_s17)
newtype T_Constructor_s17
C_Constructor_s17 :: (T_Constructor_v16) -> T_Constructor_s17
inv_Constructor_s17 :: T_Constructor_s17 -> (T_Constructor_v16)
data T_Constructor_s18
C_Constructor_s18 :: T_Constructor_s18
type T_Constructor_v16 = (T_Constructor_vIn16) -> (T_Constructor_vOut16)
data T_Constructor_vIn16
T_Constructor_vIn16 :: (KindConstraints) -> (Int) -> T_Constructor_vIn16
data T_Constructor_vOut16
T_Constructor_vOut16 :: (Assumptions) -> (KindConstraints) -> (Int) -> (Constructor) -> T_Constructor_vOut16
sem_Constructor_Constructor :: T_Range -> T_Name -> T_AnnotatedTypes -> T_Constructor
sem_Constructor_Infix :: T_Range -> T_AnnotatedType -> T_Name -> T_AnnotatedType -> T_Constructor
sem_Constructor_Record :: T_Range -> T_Name -> T_FieldDeclarations -> T_Constructor
data Inh_Constructors
Inh_Constructors :: (KindConstraints) -> (Int) -> Inh_Constructors
constraints_Inh_Constructors :: Inh_Constructors -> (KindConstraints)
kappaUnique_Inh_Constructors :: Inh_Constructors -> (Int)
data Syn_Constructors
Syn_Constructors :: (Assumptions) -> (KindConstraints) -> (Int) -> (Constructors) -> Syn_Constructors
assumptions_Syn_Constructors :: Syn_Constructors -> (Assumptions)
constraints_Syn_Constructors :: Syn_Constructors -> (KindConstraints)
kappaUnique_Syn_Constructors :: Syn_Constructors -> (Int)
self_Syn_Constructors :: Syn_Constructors -> (Constructors)
wrap_Constructors :: T_Constructors -> Inh_Constructors -> (Syn_Constructors)
sem_Constructors :: Constructors -> T_Constructors
newtype T_Constructors
T_Constructors :: Identity (T_Constructors_s20) -> T_Constructors
attach_T_Constructors :: T_Constructors -> Identity (T_Constructors_s20)
newtype T_Constructors_s20
C_Constructors_s20 :: (T_Constructors_v19) -> T_Constructors_s20
inv_Constructors_s20 :: T_Constructors_s20 -> (T_Constructors_v19)
data T_Constructors_s21
C_Constructors_s21 :: T_Constructors_s21
type T_Constructors_v19 = (T_Constructors_vIn19) -> (T_Constructors_vOut19)
data T_Constructors_vIn19
T_Constructors_vIn19 :: (KindConstraints) -> (Int) -> T_Constructors_vIn19
data T_Constructors_vOut19
T_Constructors_vOut19 :: (Assumptions) -> (KindConstraints) -> (Int) -> (Constructors) -> T_Constructors_vOut19
sem_Constructors_Cons :: T_Constructor -> T_Constructors -> T_Constructors
sem_Constructors_Nil :: T_Constructors
data Inh_ContextItem
Inh_ContextItem :: (Int) -> Inh_ContextItem
kappaUnique_Inh_ContextItem :: Inh_ContextItem -> (Int)
data Syn_ContextItem
Syn_ContextItem :: (Int) -> (ContextItem) -> Syn_ContextItem
kappaUnique_Syn_ContextItem :: Syn_ContextItem -> (Int)
self_Syn_ContextItem :: Syn_ContextItem -> (ContextItem)
wrap_ContextItem :: T_ContextItem -> Inh_ContextItem -> (Syn_ContextItem)
sem_ContextItem :: ContextItem -> T_ContextItem
newtype T_ContextItem
T_ContextItem :: Identity (T_ContextItem_s23) -> T_ContextItem
attach_T_ContextItem :: T_ContextItem -> Identity (T_ContextItem_s23)
newtype T_ContextItem_s23
C_ContextItem_s23 :: (T_ContextItem_v22) -> T_ContextItem_s23
inv_ContextItem_s23 :: T_ContextItem_s23 -> (T_ContextItem_v22)
data T_ContextItem_s24
C_ContextItem_s24 :: T_ContextItem_s24
type T_ContextItem_v22 = (T_ContextItem_vIn22) -> (T_ContextItem_vOut22)
data T_ContextItem_vIn22
T_ContextItem_vIn22 :: (Int) -> T_ContextItem_vIn22
data T_ContextItem_vOut22
T_ContextItem_vOut22 :: (Int) -> (ContextItem) -> T_ContextItem_vOut22
sem_ContextItem_ContextItem :: T_Range -> T_Name -> T_Types -> T_ContextItem
data Inh_ContextItems
Inh_ContextItems :: (Int) -> Inh_ContextItems
kappaUnique_Inh_ContextItems :: Inh_ContextItems -> (Int)
data Syn_ContextItems
Syn_ContextItems :: (Int) -> (ContextItems) -> Syn_ContextItems
kappaUnique_Syn_ContextItems :: Syn_ContextItems -> (Int)
self_Syn_ContextItems :: Syn_ContextItems -> (ContextItems)
wrap_ContextItems :: T_ContextItems -> Inh_ContextItems -> (Syn_ContextItems)
sem_ContextItems :: ContextItems -> T_ContextItems
newtype T_ContextItems
T_ContextItems :: Identity (T_ContextItems_s26) -> T_ContextItems
attach_T_ContextItems :: T_ContextItems -> Identity (T_ContextItems_s26)
newtype T_ContextItems_s26
C_ContextItems_s26 :: (T_ContextItems_v25) -> T_ContextItems_s26
inv_ContextItems_s26 :: T_ContextItems_s26 -> (T_ContextItems_v25)
data T_ContextItems_s27
C_ContextItems_s27 :: T_ContextItems_s27
type T_ContextItems_v25 = (T_ContextItems_vIn25) -> (T_ContextItems_vOut25)
data T_ContextItems_vIn25
T_ContextItems_vIn25 :: (Int) -> T_ContextItems_vIn25
data T_ContextItems_vOut25
T_ContextItems_vOut25 :: (Int) -> (ContextItems) -> T_ContextItems_vOut25
sem_ContextItems_Cons :: T_ContextItem -> T_ContextItems -> T_ContextItems
sem_ContextItems_Nil :: T_ContextItems
data Inh_Declaration
Inh_Declaration :: (BindingGroups) -> (Int) -> Inh_Declaration
bindingGroups_Inh_Declaration :: Inh_Declaration -> (BindingGroups)
kappaUnique_Inh_Declaration :: Inh_Declaration -> (Int)
data Syn_Declaration
Syn_Declaration :: (BindingGroups) -> (Int) -> (Declaration) -> Syn_Declaration
bindingGroups_Syn_Declaration :: Syn_Declaration -> (BindingGroups)
kappaUnique_Syn_Declaration :: Syn_Declaration -> (Int)
self_Syn_Declaration :: Syn_Declaration -> (Declaration)
wrap_Declaration :: T_Declaration -> Inh_Declaration -> (Syn_Declaration)
sem_Declaration :: Declaration -> T_Declaration
newtype T_Declaration
T_Declaration :: Identity (T_Declaration_s29) -> T_Declaration
attach_T_Declaration :: T_Declaration -> Identity (T_Declaration_s29)
newtype T_Declaration_s29
C_Declaration_s29 :: (T_Declaration_v28) -> T_Declaration_s29
inv_Declaration_s29 :: T_Declaration_s29 -> (T_Declaration_v28)
data T_Declaration_s30
C_Declaration_s30 :: T_Declaration_s30
type T_Declaration_v28 = (T_Declaration_vIn28) -> (T_Declaration_vOut28)
data T_Declaration_vIn28
T_Declaration_vIn28 :: (BindingGroups) -> (Int) -> T_Declaration_vIn28
data T_Declaration_vOut28
T_Declaration_vOut28 :: (BindingGroups) -> (Int) -> (Declaration) -> T_Declaration_vOut28
sem_Declaration_Hole :: T_Range -> (Integer) -> T_Declaration
sem_Declaration_Type :: T_Range -> T_SimpleType -> T_Type -> T_Declaration
sem_Declaration_Data :: T_Range -> T_ContextItems -> T_SimpleType -> T_Constructors -> T_Names -> T_Declaration
sem_Declaration_Newtype :: T_Range -> T_ContextItems -> T_SimpleType -> T_Constructor -> T_Names -> T_Declaration
sem_Declaration_Class :: T_Range -> T_ContextItems -> T_SimpleType -> T_MaybeDeclarations -> T_Declaration
sem_Declaration_Instance :: T_Range -> T_ContextItems -> T_Name -> T_Types -> T_MaybeDeclarations -> T_Declaration
sem_Declaration_Default :: T_Range -> T_Types -> T_Declaration
sem_Declaration_FunctionBindings :: T_Range -> T_FunctionBindings -> T_Declaration
sem_Declaration_PatternBinding :: T_Range -> T_Pattern -> T_RightHandSide -> T_Declaration
sem_Declaration_TypeSignature :: T_Range -> T_Names -> T_Type -> T_Declaration
sem_Declaration_Fixity :: T_Range -> T_Fixity -> T_MaybeInt -> T_Names -> T_Declaration
sem_Declaration_Empty :: T_Range -> T_Declaration
data Inh_Declarations
Inh_Declarations :: (BindingGroups) -> (Int) -> Inh_Declarations
bindingGroups_Inh_Declarations :: Inh_Declarations -> (BindingGroups)
kappaUnique_Inh_Declarations :: Inh_Declarations -> (Int)
data Syn_Declarations
Syn_Declarations :: (BindingGroups) -> (Int) -> (Declarations) -> Syn_Declarations
bindingGroups_Syn_Declarations :: Syn_Declarations -> (BindingGroups)
kappaUnique_Syn_Declarations :: Syn_Declarations -> (Int)
self_Syn_Declarations :: Syn_Declarations -> (Declarations)
wrap_Declarations :: T_Declarations -> Inh_Declarations -> (Syn_Declarations)
sem_Declarations :: Declarations -> T_Declarations
newtype T_Declarations
T_Declarations :: Identity (T_Declarations_s32) -> T_Declarations
attach_T_Declarations :: T_Declarations -> Identity (T_Declarations_s32)
newtype T_Declarations_s32
C_Declarations_s32 :: (T_Declarations_v31) -> T_Declarations_s32
inv_Declarations_s32 :: T_Declarations_s32 -> (T_Declarations_v31)
data T_Declarations_s33
C_Declarations_s33 :: T_Declarations_s33
type T_Declarations_v31 = (T_Declarations_vIn31) -> (T_Declarations_vOut31)
data T_Declarations_vIn31
T_Declarations_vIn31 :: (BindingGroups) -> (Int) -> T_Declarations_vIn31
data T_Declarations_vOut31
T_Declarations_vOut31 :: (BindingGroups) -> (Int) -> (Declarations) -> T_Declarations_vOut31
sem_Declarations_Cons :: T_Declaration -> T_Declarations -> T_Declarations
sem_Declarations_Nil :: T_Declarations
data Inh_Export
Inh_Export :: Inh_Export
data Syn_Export
Syn_Export :: (Export) -> Syn_Export
self_Syn_Export :: Syn_Export -> (Export)
wrap_Export :: T_Export -> Inh_Export -> (Syn_Export)
sem_Export :: Export -> T_Export
newtype T_Export
T_Export :: Identity (T_Export_s35) -> T_Export
attach_T_Export :: T_Export -> Identity (T_Export_s35)
newtype T_Export_s35
C_Export_s35 :: (T_Export_v34) -> T_Export_s35
inv_Export_s35 :: T_Export_s35 -> (T_Export_v34)
data T_Export_s36
C_Export_s36 :: T_Export_s36
type T_Export_v34 = (T_Export_vIn34) -> (T_Export_vOut34)
data T_Export_vIn34
T_Export_vIn34 :: T_Export_vIn34
data T_Export_vOut34
T_Export_vOut34 :: (Export) -> T_Export_vOut34
sem_Export_Variable :: T_Range -> T_Name -> T_Export
sem_Export_TypeOrClass :: T_Range -> T_Name -> T_MaybeNames -> T_Export
sem_Export_TypeOrClassComplete :: T_Range -> T_Name -> T_Export
sem_Export_Module :: T_Range -> T_Name -> T_Export
data Inh_Exports
Inh_Exports :: Inh_Exports
data Syn_Exports
Syn_Exports :: (Exports) -> Syn_Exports
self_Syn_Exports :: Syn_Exports -> (Exports)
wrap_Exports :: T_Exports -> Inh_Exports -> (Syn_Exports)
sem_Exports :: Exports -> T_Exports
newtype T_Exports
T_Exports :: Identity (T_Exports_s38) -> T_Exports
attach_T_Exports :: T_Exports -> Identity (T_Exports_s38)
newtype T_Exports_s38
C_Exports_s38 :: (T_Exports_v37) -> T_Exports_s38
inv_Exports_s38 :: T_Exports_s38 -> (T_Exports_v37)
data T_Exports_s39
C_Exports_s39 :: T_Exports_s39
type T_Exports_v37 = (T_Exports_vIn37) -> (T_Exports_vOut37)
data T_Exports_vIn37
T_Exports_vIn37 :: T_Exports_vIn37
data T_Exports_vOut37
T_Exports_vOut37 :: (Exports) -> T_Exports_vOut37
sem_Exports_Cons :: T_Export -> T_Exports -> T_Exports
sem_Exports_Nil :: T_Exports
data Inh_Expression
Inh_Expression :: (BindingGroups) -> (Int) -> Inh_Expression
bindingGroups_Inh_Expression :: Inh_Expression -> (BindingGroups)
kappaUnique_Inh_Expression :: Inh_Expression -> (Int)
data Syn_Expression
Syn_Expression :: (BindingGroups) -> (Int) -> (Expression) -> Syn_Expression
bindingGroups_Syn_Expression :: Syn_Expression -> (BindingGroups)
kappaUnique_Syn_Expression :: Syn_Expression -> (Int)
self_Syn_Expression :: Syn_Expression -> (Expression)
wrap_Expression :: T_Expression -> Inh_Expression -> (Syn_Expression)
sem_Expression :: Expression -> T_Expression
newtype T_Expression
T_Expression :: Identity (T_Expression_s41) -> T_Expression
attach_T_Expression :: T_Expression -> Identity (T_Expression_s41)
newtype T_Expression_s41
C_Expression_s41 :: (T_Expression_v40) -> T_Expression_s41
inv_Expression_s41 :: T_Expression_s41 -> (T_Expression_v40)
data T_Expression_s42
C_Expression_s42 :: T_Expression_s42
type T_Expression_v40 = (T_Expression_vIn40) -> (T_Expression_vOut40)
data T_Expression_vIn40
T_Expression_vIn40 :: (BindingGroups) -> (Int) -> T_Expression_vIn40
data T_Expression_vOut40
T_Expression_vOut40 :: (BindingGroups) -> (Int) -> (Expression) -> T_Expression_vOut40
sem_Expression_Hole :: T_Range -> (Integer) -> T_Expression
sem_Expression_Feedback :: T_Range -> (String) -> T_Expression -> T_Expression
sem_Expression_MustUse :: T_Range -> T_Expression -> T_Expression
sem_Expression_Literal :: T_Range -> T_Literal -> T_Expression
sem_Expression_Variable :: T_Range -> T_Name -> T_Expression
sem_Expression_Constructor :: T_Range -> T_Name -> T_Expression
sem_Expression_Parenthesized :: T_Range -> T_Expression -> T_Expression
sem_Expression_NormalApplication :: T_Range -> T_Expression -> T_Expressions -> T_Expression
sem_Expression_InfixApplication :: T_Range -> T_MaybeExpression -> T_Expression -> T_MaybeExpression -> T_Expression
sem_Expression_If :: T_Range -> T_Expression -> T_Expression -> T_Expression -> T_Expression
sem_Expression_Lambda :: T_Range -> T_Patterns -> T_Expression -> T_Expression
sem_Expression_Case :: T_Range -> T_Expression -> T_Alternatives -> T_Expression
sem_Expression_Let :: T_Range -> T_Declarations -> T_Expression -> T_Expression
sem_Expression_Do :: T_Range -> T_Statements -> T_Expression
sem_Expression_List :: T_Range -> T_Expressions -> T_Expression
sem_Expression_Tuple :: T_Range -> T_Expressions -> T_Expression
sem_Expression_Comprehension :: T_Range -> T_Expression -> T_Qualifiers -> T_Expression
sem_Expression_Typed :: T_Range -> T_Expression -> T_Type -> T_Expression
sem_Expression_RecordConstruction :: T_Range -> T_Name -> T_RecordExpressionBindings -> T_Expression
sem_Expression_RecordUpdate :: T_Range -> T_Expression -> T_RecordExpressionBindings -> T_Expression
sem_Expression_Enum :: T_Range -> T_Expression -> T_MaybeExpression -> T_MaybeExpression -> T_Expression
sem_Expression_Negate :: T_Range -> T_Expression -> T_Expression
sem_Expression_NegateFloat :: T_Range -> T_Expression -> T_Expression
data Inh_Expressions
Inh_Expressions :: (BindingGroups) -> (Int) -> Inh_Expressions
bindingGroups_Inh_Expressions :: Inh_Expressions -> (BindingGroups)
kappaUnique_Inh_Expressions :: Inh_Expressions -> (Int)
data Syn_Expressions
Syn_Expressions :: (BindingGroups) -> (Int) -> (Expressions) -> Syn_Expressions
bindingGroups_Syn_Expressions :: Syn_Expressions -> (BindingGroups)
kappaUnique_Syn_Expressions :: Syn_Expressions -> (Int)
self_Syn_Expressions :: Syn_Expressions -> (Expressions)
wrap_Expressions :: T_Expressions -> Inh_Expressions -> (Syn_Expressions)
sem_Expressions :: Expressions -> T_Expressions
newtype T_Expressions
T_Expressions :: Identity (T_Expressions_s44) -> T_Expressions
attach_T_Expressions :: T_Expressions -> Identity (T_Expressions_s44)
newtype T_Expressions_s44
C_Expressions_s44 :: (T_Expressions_v43) -> T_Expressions_s44
inv_Expressions_s44 :: T_Expressions_s44 -> (T_Expressions_v43)
data T_Expressions_s45
C_Expressions_s45 :: T_Expressions_s45
type T_Expressions_v43 = (T_Expressions_vIn43) -> (T_Expressions_vOut43)
data T_Expressions_vIn43
T_Expressions_vIn43 :: (BindingGroups) -> (Int) -> T_Expressions_vIn43
data T_Expressions_vOut43
T_Expressions_vOut43 :: (BindingGroups) -> (Int) -> (Expressions) -> T_Expressions_vOut43
sem_Expressions_Cons :: T_Expression -> T_Expressions -> T_Expressions
sem_Expressions_Nil :: T_Expressions
data Inh_FieldDeclaration
Inh_FieldDeclaration :: (Int) -> Inh_FieldDeclaration
kappaUnique_Inh_FieldDeclaration :: Inh_FieldDeclaration -> (Int)
data Syn_FieldDeclaration
Syn_FieldDeclaration :: (Int) -> (FieldDeclaration) -> Syn_FieldDeclaration
kappaUnique_Syn_FieldDeclaration :: Syn_FieldDeclaration -> (Int)
self_Syn_FieldDeclaration :: Syn_FieldDeclaration -> (FieldDeclaration)
wrap_FieldDeclaration :: T_FieldDeclaration -> Inh_FieldDeclaration -> (Syn_FieldDeclaration)
sem_FieldDeclaration :: FieldDeclaration -> T_FieldDeclaration
newtype T_FieldDeclaration
T_FieldDeclaration :: Identity (T_FieldDeclaration_s47) -> T_FieldDeclaration
attach_T_FieldDeclaration :: T_FieldDeclaration -> Identity (T_FieldDeclaration_s47)
newtype T_FieldDeclaration_s47
C_FieldDeclaration_s47 :: (T_FieldDeclaration_v46) -> T_FieldDeclaration_s47
inv_FieldDeclaration_s47 :: T_FieldDeclaration_s47 -> (T_FieldDeclaration_v46)
data T_FieldDeclaration_s48
C_FieldDeclaration_s48 :: T_FieldDeclaration_s48
type T_FieldDeclaration_v46 = (T_FieldDeclaration_vIn46) -> (T_FieldDeclaration_vOut46)
data T_FieldDeclaration_vIn46
T_FieldDeclaration_vIn46 :: (Int) -> T_FieldDeclaration_vIn46
data T_FieldDeclaration_vOut46
T_FieldDeclaration_vOut46 :: (Int) -> (FieldDeclaration) -> T_FieldDeclaration_vOut46
sem_FieldDeclaration_FieldDeclaration :: T_Range -> T_Names -> T_AnnotatedType -> T_FieldDeclaration
data Inh_FieldDeclarations
Inh_FieldDeclarations :: (Int) -> Inh_FieldDeclarations
kappaUnique_Inh_FieldDeclarations :: Inh_FieldDeclarations -> (Int)
data Syn_FieldDeclarations
Syn_FieldDeclarations :: (Int) -> (FieldDeclarations) -> Syn_FieldDeclarations
kappaUnique_Syn_FieldDeclarations :: Syn_FieldDeclarations -> (Int)
self_Syn_FieldDeclarations :: Syn_FieldDeclarations -> (FieldDeclarations)
wrap_FieldDeclarations :: T_FieldDeclarations -> Inh_FieldDeclarations -> (Syn_FieldDeclarations)
sem_FieldDeclarations :: FieldDeclarations -> T_FieldDeclarations
newtype T_FieldDeclarations
T_FieldDeclarations :: Identity (T_FieldDeclarations_s50) -> T_FieldDeclarations
attach_T_FieldDeclarations :: T_FieldDeclarations -> Identity (T_FieldDeclarations_s50)
newtype T_FieldDeclarations_s50
C_FieldDeclarations_s50 :: (T_FieldDeclarations_v49) -> T_FieldDeclarations_s50
inv_FieldDeclarations_s50 :: T_FieldDeclarations_s50 -> (T_FieldDeclarations_v49)
data T_FieldDeclarations_s51
C_FieldDeclarations_s51 :: T_FieldDeclarations_s51
type T_FieldDeclarations_v49 = (T_FieldDeclarations_vIn49) -> (T_FieldDeclarations_vOut49)
data T_FieldDeclarations_vIn49
T_FieldDeclarations_vIn49 :: (Int) -> T_FieldDeclarations_vIn49
data T_FieldDeclarations_vOut49
T_FieldDeclarations_vOut49 :: (Int) -> (FieldDeclarations) -> T_FieldDeclarations_vOut49
sem_FieldDeclarations_Cons :: T_FieldDeclaration -> T_FieldDeclarations -> T_FieldDeclarations
sem_FieldDeclarations_Nil :: T_FieldDeclarations
data Inh_Fixity
Inh_Fixity :: Inh_Fixity
data Syn_Fixity
Syn_Fixity :: (Fixity) -> Syn_Fixity
self_Syn_Fixity :: Syn_Fixity -> (Fixity)
wrap_Fixity :: T_Fixity -> Inh_Fixity -> (Syn_Fixity)
sem_Fixity :: Fixity -> T_Fixity
newtype T_Fixity
T_Fixity :: Identity (T_Fixity_s53) -> T_Fixity
attach_T_Fixity :: T_Fixity -> Identity (T_Fixity_s53)
newtype T_Fixity_s53
C_Fixity_s53 :: (T_Fixity_v52) -> T_Fixity_s53
inv_Fixity_s53 :: T_Fixity_s53 -> (T_Fixity_v52)
data T_Fixity_s54
C_Fixity_s54 :: T_Fixity_s54
type T_Fixity_v52 = (T_Fixity_vIn52) -> (T_Fixity_vOut52)
data T_Fixity_vIn52
T_Fixity_vIn52 :: T_Fixity_vIn52
data T_Fixity_vOut52
T_Fixity_vOut52 :: (Fixity) -> T_Fixity_vOut52
sem_Fixity_Infixl :: T_Range -> T_Fixity
sem_Fixity_Infixr :: T_Range -> T_Fixity
sem_Fixity_Infix :: T_Range -> T_Fixity
data Inh_FunctionBinding
Inh_FunctionBinding :: (BindingGroups) -> (Int) -> Inh_FunctionBinding
bindingGroups_Inh_FunctionBinding :: Inh_FunctionBinding -> (BindingGroups)
kappaUnique_Inh_FunctionBinding :: Inh_FunctionBinding -> (Int)
data Syn_FunctionBinding
Syn_FunctionBinding :: (BindingGroups) -> (Int) -> (FunctionBinding) -> Syn_FunctionBinding
bindingGroups_Syn_FunctionBinding :: Syn_FunctionBinding -> (BindingGroups)
kappaUnique_Syn_FunctionBinding :: Syn_FunctionBinding -> (Int)
self_Syn_FunctionBinding :: Syn_FunctionBinding -> (FunctionBinding)
wrap_FunctionBinding :: T_FunctionBinding -> Inh_FunctionBinding -> (Syn_FunctionBinding)
sem_FunctionBinding :: FunctionBinding -> T_FunctionBinding
newtype T_FunctionBinding
T_FunctionBinding :: Identity (T_FunctionBinding_s56) -> T_FunctionBinding
attach_T_FunctionBinding :: T_FunctionBinding -> Identity (T_FunctionBinding_s56)
newtype T_FunctionBinding_s56
C_FunctionBinding_s56 :: (T_FunctionBinding_v55) -> T_FunctionBinding_s56
inv_FunctionBinding_s56 :: T_FunctionBinding_s56 -> (T_FunctionBinding_v55)
data T_FunctionBinding_s57
C_FunctionBinding_s57 :: T_FunctionBinding_s57
type T_FunctionBinding_v55 = (T_FunctionBinding_vIn55) -> (T_FunctionBinding_vOut55)
data T_FunctionBinding_vIn55
T_FunctionBinding_vIn55 :: (BindingGroups) -> (Int) -> T_FunctionBinding_vIn55
data T_FunctionBinding_vOut55
T_FunctionBinding_vOut55 :: (BindingGroups) -> (Int) -> (FunctionBinding) -> T_FunctionBinding_vOut55
sem_FunctionBinding_Hole :: T_Range -> (Integer) -> T_FunctionBinding
sem_FunctionBinding_Feedback :: T_Range -> (String) -> T_FunctionBinding -> T_FunctionBinding
sem_FunctionBinding_FunctionBinding :: T_Range -> T_LeftHandSide -> T_RightHandSide -> T_FunctionBinding
data Inh_FunctionBindings
Inh_FunctionBindings :: (BindingGroups) -> (Int) -> Inh_FunctionBindings
bindingGroups_Inh_FunctionBindings :: Inh_FunctionBindings -> (BindingGroups)
kappaUnique_Inh_FunctionBindings :: Inh_FunctionBindings -> (Int)
data Syn_FunctionBindings
Syn_FunctionBindings :: (BindingGroups) -> (Int) -> (FunctionBindings) -> Syn_FunctionBindings
bindingGroups_Syn_FunctionBindings :: Syn_FunctionBindings -> (BindingGroups)
kappaUnique_Syn_FunctionBindings :: Syn_FunctionBindings -> (Int)
self_Syn_FunctionBindings :: Syn_FunctionBindings -> (FunctionBindings)
wrap_FunctionBindings :: T_FunctionBindings -> Inh_FunctionBindings -> (Syn_FunctionBindings)
sem_FunctionBindings :: FunctionBindings -> T_FunctionBindings
newtype T_FunctionBindings
T_FunctionBindings :: Identity (T_FunctionBindings_s59) -> T_FunctionBindings
attach_T_FunctionBindings :: T_FunctionBindings -> Identity (T_FunctionBindings_s59)
newtype T_FunctionBindings_s59
C_FunctionBindings_s59 :: (T_FunctionBindings_v58) -> T_FunctionBindings_s59
inv_FunctionBindings_s59 :: T_FunctionBindings_s59 -> (T_FunctionBindings_v58)
data T_FunctionBindings_s60
C_FunctionBindings_s60 :: T_FunctionBindings_s60
type T_FunctionBindings_v58 = (T_FunctionBindings_vIn58) -> (T_FunctionBindings_vOut58)
data T_FunctionBindings_vIn58
T_FunctionBindings_vIn58 :: (BindingGroups) -> (Int) -> T_FunctionBindings_vIn58
data T_FunctionBindings_vOut58
T_FunctionBindings_vOut58 :: (BindingGroups) -> (Int) -> (FunctionBindings) -> T_FunctionBindings_vOut58
sem_FunctionBindings_Cons :: T_FunctionBinding -> T_FunctionBindings -> T_FunctionBindings
sem_FunctionBindings_Nil :: T_FunctionBindings
data Inh_GuardedExpression
Inh_GuardedExpression :: (BindingGroups) -> (Int) -> Inh_GuardedExpression
bindingGroups_Inh_GuardedExpression :: Inh_GuardedExpression -> (BindingGroups)
kappaUnique_Inh_GuardedExpression :: Inh_GuardedExpression -> (Int)
data Syn_GuardedExpression
Syn_GuardedExpression :: (BindingGroups) -> (Int) -> (GuardedExpression) -> Syn_GuardedExpression
bindingGroups_Syn_GuardedExpression :: Syn_GuardedExpression -> (BindingGroups)
kappaUnique_Syn_GuardedExpression :: Syn_GuardedExpression -> (Int)
self_Syn_GuardedExpression :: Syn_GuardedExpression -> (GuardedExpression)
wrap_GuardedExpression :: T_GuardedExpression -> Inh_GuardedExpression -> (Syn_GuardedExpression)
sem_GuardedExpression :: GuardedExpression -> T_GuardedExpression
newtype T_GuardedExpression
T_GuardedExpression :: Identity (T_GuardedExpression_s62) -> T_GuardedExpression
attach_T_GuardedExpression :: T_GuardedExpression -> Identity (T_GuardedExpression_s62)
newtype T_GuardedExpression_s62
C_GuardedExpression_s62 :: (T_GuardedExpression_v61) -> T_GuardedExpression_s62
inv_GuardedExpression_s62 :: T_GuardedExpression_s62 -> (T_GuardedExpression_v61)
data T_GuardedExpression_s63
C_GuardedExpression_s63 :: T_GuardedExpression_s63
type T_GuardedExpression_v61 = (T_GuardedExpression_vIn61) -> (T_GuardedExpression_vOut61)
data T_GuardedExpression_vIn61
T_GuardedExpression_vIn61 :: (BindingGroups) -> (Int) -> T_GuardedExpression_vIn61
data T_GuardedExpression_vOut61
T_GuardedExpression_vOut61 :: (BindingGroups) -> (Int) -> (GuardedExpression) -> T_GuardedExpression_vOut61
sem_GuardedExpression_GuardedExpression :: T_Range -> T_Expression -> T_Expression -> T_GuardedExpression
data Inh_GuardedExpressions
Inh_GuardedExpressions :: (BindingGroups) -> (Int) -> Inh_GuardedExpressions
bindingGroups_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (BindingGroups)
kappaUnique_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (Int)
data Syn_GuardedExpressions
Syn_GuardedExpressions :: (BindingGroups) -> (Int) -> (GuardedExpressions) -> Syn_GuardedExpressions
bindingGroups_Syn_GuardedExpressions :: Syn_GuardedExpressions -> (BindingGroups)
kappaUnique_Syn_GuardedExpressions :: Syn_GuardedExpressions -> (Int)
self_Syn_GuardedExpressions :: Syn_GuardedExpressions -> (GuardedExpressions)
wrap_GuardedExpressions :: T_GuardedExpressions -> Inh_GuardedExpressions -> (Syn_GuardedExpressions)
sem_GuardedExpressions :: GuardedExpressions -> T_GuardedExpressions
newtype T_GuardedExpressions
T_GuardedExpressions :: Identity (T_GuardedExpressions_s65) -> T_GuardedExpressions
attach_T_GuardedExpressions :: T_GuardedExpressions -> Identity (T_GuardedExpressions_s65)
newtype T_GuardedExpressions_s65
C_GuardedExpressions_s65 :: (T_GuardedExpressions_v64) -> T_GuardedExpressions_s65
inv_GuardedExpressions_s65 :: T_GuardedExpressions_s65 -> (T_GuardedExpressions_v64)
data T_GuardedExpressions_s66
C_GuardedExpressions_s66 :: T_GuardedExpressions_s66
type T_GuardedExpressions_v64 = (T_GuardedExpressions_vIn64) -> (T_GuardedExpressions_vOut64)
data T_GuardedExpressions_vIn64
T_GuardedExpressions_vIn64 :: (BindingGroups) -> (Int) -> T_GuardedExpressions_vIn64
data T_GuardedExpressions_vOut64
T_GuardedExpressions_vOut64 :: (BindingGroups) -> (Int) -> (GuardedExpressions) -> T_GuardedExpressions_vOut64
sem_GuardedExpressions_Cons :: T_GuardedExpression -> T_GuardedExpressions -> T_GuardedExpressions
sem_GuardedExpressions_Nil :: T_GuardedExpressions
data Inh_Import
Inh_Import :: Inh_Import
data Syn_Import
Syn_Import :: (Import) -> Syn_Import
self_Syn_Import :: Syn_Import -> (Import)
wrap_Import :: T_Import -> Inh_Import -> (Syn_Import)
sem_Import :: Import -> T_Import
newtype T_Import
T_Import :: Identity (T_Import_s68) -> T_Import
attach_T_Import :: T_Import -> Identity (T_Import_s68)
newtype T_Import_s68
C_Import_s68 :: (T_Import_v67) -> T_Import_s68
inv_Import_s68 :: T_Import_s68 -> (T_Import_v67)
data T_Import_s69
C_Import_s69 :: T_Import_s69
type T_Import_v67 = (T_Import_vIn67) -> (T_Import_vOut67)
data T_Import_vIn67
T_Import_vIn67 :: T_Import_vIn67
data T_Import_vOut67
T_Import_vOut67 :: (Import) -> T_Import_vOut67
sem_Import_Variable :: T_Range -> T_Name -> T_Import
sem_Import_TypeOrClass :: T_Range -> T_Name -> T_MaybeNames -> T_Import
sem_Import_TypeOrClassComplete :: T_Range -> T_Name -> T_Import
data Inh_ImportDeclaration
Inh_ImportDeclaration :: Inh_ImportDeclaration
data Syn_ImportDeclaration
Syn_ImportDeclaration :: (ImportDeclaration) -> Syn_ImportDeclaration
self_Syn_ImportDeclaration :: Syn_ImportDeclaration -> (ImportDeclaration)
wrap_ImportDeclaration :: T_ImportDeclaration -> Inh_ImportDeclaration -> (Syn_ImportDeclaration)
sem_ImportDeclaration :: ImportDeclaration -> T_ImportDeclaration
newtype T_ImportDeclaration
T_ImportDeclaration :: Identity (T_ImportDeclaration_s71) -> T_ImportDeclaration
attach_T_ImportDeclaration :: T_ImportDeclaration -> Identity (T_ImportDeclaration_s71)
newtype T_ImportDeclaration_s71
C_ImportDeclaration_s71 :: (T_ImportDeclaration_v70) -> T_ImportDeclaration_s71
inv_ImportDeclaration_s71 :: T_ImportDeclaration_s71 -> (T_ImportDeclaration_v70)
data T_ImportDeclaration_s72
C_ImportDeclaration_s72 :: T_ImportDeclaration_s72
type T_ImportDeclaration_v70 = (T_ImportDeclaration_vIn70) -> (T_ImportDeclaration_vOut70)
data T_ImportDeclaration_vIn70
T_ImportDeclaration_vIn70 :: T_ImportDeclaration_vIn70
data T_ImportDeclaration_vOut70
T_ImportDeclaration_vOut70 :: (ImportDeclaration) -> T_ImportDeclaration_vOut70
sem_ImportDeclaration_Import :: T_Range -> (Bool) -> T_Name -> T_MaybeName -> T_MaybeImportSpecification -> T_ImportDeclaration
sem_ImportDeclaration_Empty :: T_Range -> T_ImportDeclaration
data Inh_ImportDeclarations
Inh_ImportDeclarations :: Inh_ImportDeclarations
data Syn_ImportDeclarations
Syn_ImportDeclarations :: (ImportDeclarations) -> Syn_ImportDeclarations
self_Syn_ImportDeclarations :: Syn_ImportDeclarations -> (ImportDeclarations)
wrap_ImportDeclarations :: T_ImportDeclarations -> Inh_ImportDeclarations -> (Syn_ImportDeclarations)
sem_ImportDeclarations :: ImportDeclarations -> T_ImportDeclarations
newtype T_ImportDeclarations
T_ImportDeclarations :: Identity (T_ImportDeclarations_s74) -> T_ImportDeclarations
attach_T_ImportDeclarations :: T_ImportDeclarations -> Identity (T_ImportDeclarations_s74)
newtype T_ImportDeclarations_s74
C_ImportDeclarations_s74 :: (T_ImportDeclarations_v73) -> T_ImportDeclarations_s74
inv_ImportDeclarations_s74 :: T_ImportDeclarations_s74 -> (T_ImportDeclarations_v73)
data T_ImportDeclarations_s75
C_ImportDeclarations_s75 :: T_ImportDeclarations_s75
type T_ImportDeclarations_v73 = (T_ImportDeclarations_vIn73) -> (T_ImportDeclarations_vOut73)
data T_ImportDeclarations_vIn73
T_ImportDeclarations_vIn73 :: T_ImportDeclarations_vIn73
data T_ImportDeclarations_vOut73
T_ImportDeclarations_vOut73 :: (ImportDeclarations) -> T_ImportDeclarations_vOut73
sem_ImportDeclarations_Cons :: T_ImportDeclaration -> T_ImportDeclarations -> T_ImportDeclarations
sem_ImportDeclarations_Nil :: T_ImportDeclarations
data Inh_ImportSpecification
Inh_ImportSpecification :: Inh_ImportSpecification
data Syn_ImportSpecification
Syn_ImportSpecification :: (ImportSpecification) -> Syn_ImportSpecification
self_Syn_ImportSpecification :: Syn_ImportSpecification -> (ImportSpecification)
wrap_ImportSpecification :: T_ImportSpecification -> Inh_ImportSpecification -> (Syn_ImportSpecification)
sem_ImportSpecification :: ImportSpecification -> T_ImportSpecification
newtype T_ImportSpecification
T_ImportSpecification :: Identity (T_ImportSpecification_s77) -> T_ImportSpecification
attach_T_ImportSpecification :: T_ImportSpecification -> Identity (T_ImportSpecification_s77)
newtype T_ImportSpecification_s77
C_ImportSpecification_s77 :: (T_ImportSpecification_v76) -> T_ImportSpecification_s77
inv_ImportSpecification_s77 :: T_ImportSpecification_s77 -> (T_ImportSpecification_v76)
data T_ImportSpecification_s78
C_ImportSpecification_s78 :: T_ImportSpecification_s78
type T_ImportSpecification_v76 = (T_ImportSpecification_vIn76) -> (T_ImportSpecification_vOut76)
data T_ImportSpecification_vIn76
T_ImportSpecification_vIn76 :: T_ImportSpecification_vIn76
data T_ImportSpecification_vOut76
T_ImportSpecification_vOut76 :: (ImportSpecification) -> T_ImportSpecification_vOut76
sem_ImportSpecification_Import :: T_Range -> (Bool) -> T_Imports -> T_ImportSpecification
data Inh_Imports
Inh_Imports :: Inh_Imports
data Syn_Imports
Syn_Imports :: (Imports) -> Syn_Imports
self_Syn_Imports :: Syn_Imports -> (Imports)
wrap_Imports :: T_Imports -> Inh_Imports -> (Syn_Imports)
sem_Imports :: Imports -> T_Imports
newtype T_Imports
T_Imports :: Identity (T_Imports_s80) -> T_Imports
attach_T_Imports :: T_Imports -> Identity (T_Imports_s80)
newtype T_Imports_s80
C_Imports_s80 :: (T_Imports_v79) -> T_Imports_s80
inv_Imports_s80 :: T_Imports_s80 -> (T_Imports_v79)
data T_Imports_s81
C_Imports_s81 :: T_Imports_s81
type T_Imports_v79 = (T_Imports_vIn79) -> (T_Imports_vOut79)
data T_Imports_vIn79
T_Imports_vIn79 :: T_Imports_vIn79
data T_Imports_vOut79
T_Imports_vOut79 :: (Imports) -> T_Imports_vOut79
sem_Imports_Cons :: T_Import -> T_Imports -> T_Imports
sem_Imports_Nil :: T_Imports
data Inh_LeftHandSide
Inh_LeftHandSide :: Inh_LeftHandSide
data Syn_LeftHandSide
Syn_LeftHandSide :: (LeftHandSide) -> Syn_LeftHandSide
self_Syn_LeftHandSide :: Syn_LeftHandSide -> (LeftHandSide)
wrap_LeftHandSide :: T_LeftHandSide -> Inh_LeftHandSide -> (Syn_LeftHandSide)
sem_LeftHandSide :: LeftHandSide -> T_LeftHandSide
newtype T_LeftHandSide
T_LeftHandSide :: Identity (T_LeftHandSide_s83) -> T_LeftHandSide
attach_T_LeftHandSide :: T_LeftHandSide -> Identity (T_LeftHandSide_s83)
newtype T_LeftHandSide_s83
C_LeftHandSide_s83 :: (T_LeftHandSide_v82) -> T_LeftHandSide_s83
inv_LeftHandSide_s83 :: T_LeftHandSide_s83 -> (T_LeftHandSide_v82)
data T_LeftHandSide_s84
C_LeftHandSide_s84 :: T_LeftHandSide_s84
type T_LeftHandSide_v82 = (T_LeftHandSide_vIn82) -> (T_LeftHandSide_vOut82)
data T_LeftHandSide_vIn82
T_LeftHandSide_vIn82 :: T_LeftHandSide_vIn82
data T_LeftHandSide_vOut82
T_LeftHandSide_vOut82 :: (LeftHandSide) -> T_LeftHandSide_vOut82
sem_LeftHandSide_Function :: T_Range -> T_Name -> T_Patterns -> T_LeftHandSide
sem_LeftHandSide_Infix :: T_Range -> T_Pattern -> T_Name -> T_Pattern -> T_LeftHandSide
sem_LeftHandSide_Parenthesized :: T_Range -> T_LeftHandSide -> T_Patterns -> T_LeftHandSide
data Inh_Literal
Inh_Literal :: Inh_Literal
data Syn_Literal
Syn_Literal :: (Literal) -> Syn_Literal
self_Syn_Literal :: Syn_Literal -> (Literal)
wrap_Literal :: T_Literal -> Inh_Literal -> (Syn_Literal)
sem_Literal :: Literal -> T_Literal
newtype T_Literal
T_Literal :: Identity (T_Literal_s86) -> T_Literal
attach_T_Literal :: T_Literal -> Identity (T_Literal_s86)
newtype T_Literal_s86
C_Literal_s86 :: (T_Literal_v85) -> T_Literal_s86
inv_Literal_s86 :: T_Literal_s86 -> (T_Literal_v85)
data T_Literal_s87
C_Literal_s87 :: T_Literal_s87
type T_Literal_v85 = (T_Literal_vIn85) -> (T_Literal_vOut85)
data T_Literal_vIn85
T_Literal_vIn85 :: T_Literal_vIn85
data T_Literal_vOut85
T_Literal_vOut85 :: (Literal) -> T_Literal_vOut85
sem_Literal_Int :: T_Range -> (String) -> T_Literal
sem_Literal_Char :: T_Range -> (String) -> T_Literal
sem_Literal_Float :: T_Range -> (String) -> T_Literal
sem_Literal_String :: T_Range -> (String) -> T_Literal
data Inh_MaybeDeclarations
Inh_MaybeDeclarations :: (BindingGroups) -> (Int) -> Inh_MaybeDeclarations
bindingGroups_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (BindingGroups)
kappaUnique_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (Int)
data Syn_MaybeDeclarations
Syn_MaybeDeclarations :: (BindingGroups) -> (Int) -> (MaybeDeclarations) -> Syn_MaybeDeclarations
bindingGroups_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> (BindingGroups)
kappaUnique_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> (Int)
self_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> (MaybeDeclarations)
wrap_MaybeDeclarations :: T_MaybeDeclarations -> Inh_MaybeDeclarations -> (Syn_MaybeDeclarations)
sem_MaybeDeclarations :: MaybeDeclarations -> T_MaybeDeclarations
newtype T_MaybeDeclarations
T_MaybeDeclarations :: Identity (T_MaybeDeclarations_s89) -> T_MaybeDeclarations
attach_T_MaybeDeclarations :: T_MaybeDeclarations -> Identity (T_MaybeDeclarations_s89)
newtype T_MaybeDeclarations_s89
C_MaybeDeclarations_s89 :: (T_MaybeDeclarations_v88) -> T_MaybeDeclarations_s89
inv_MaybeDeclarations_s89 :: T_MaybeDeclarations_s89 -> (T_MaybeDeclarations_v88)
data T_MaybeDeclarations_s90
C_MaybeDeclarations_s90 :: T_MaybeDeclarations_s90
type T_MaybeDeclarations_v88 = (T_MaybeDeclarations_vIn88) -> (T_MaybeDeclarations_vOut88)
data T_MaybeDeclarations_vIn88
T_MaybeDeclarations_vIn88 :: (BindingGroups) -> (Int) -> T_MaybeDeclarations_vIn88
data T_MaybeDeclarations_vOut88
T_MaybeDeclarations_vOut88 :: (BindingGroups) -> (Int) -> (MaybeDeclarations) -> T_MaybeDeclarations_vOut88
sem_MaybeDeclarations_Nothing :: T_MaybeDeclarations
sem_MaybeDeclarations_Just :: T_Declarations -> T_MaybeDeclarations
data Inh_MaybeExports
Inh_MaybeExports :: Inh_MaybeExports
data Syn_MaybeExports
Syn_MaybeExports :: (MaybeExports) -> Syn_MaybeExports
self_Syn_MaybeExports :: Syn_MaybeExports -> (MaybeExports)
wrap_MaybeExports :: T_MaybeExports -> Inh_MaybeExports -> (Syn_MaybeExports)
sem_MaybeExports :: MaybeExports -> T_MaybeExports
newtype T_MaybeExports
T_MaybeExports :: Identity (T_MaybeExports_s92) -> T_MaybeExports
attach_T_MaybeExports :: T_MaybeExports -> Identity (T_MaybeExports_s92)
newtype T_MaybeExports_s92
C_MaybeExports_s92 :: (T_MaybeExports_v91) -> T_MaybeExports_s92
inv_MaybeExports_s92 :: T_MaybeExports_s92 -> (T_MaybeExports_v91)
data T_MaybeExports_s93
C_MaybeExports_s93 :: T_MaybeExports_s93
type T_MaybeExports_v91 = (T_MaybeExports_vIn91) -> (T_MaybeExports_vOut91)
data T_MaybeExports_vIn91
T_MaybeExports_vIn91 :: T_MaybeExports_vIn91
data T_MaybeExports_vOut91
T_MaybeExports_vOut91 :: (MaybeExports) -> T_MaybeExports_vOut91
sem_MaybeExports_Nothing :: T_MaybeExports
sem_MaybeExports_Just :: T_Exports -> T_MaybeExports
data Inh_MaybeExpression
Inh_MaybeExpression :: (BindingGroups) -> (Int) -> Inh_MaybeExpression
bindingGroups_Inh_MaybeExpression :: Inh_MaybeExpression -> (BindingGroups)
kappaUnique_Inh_MaybeExpression :: Inh_MaybeExpression -> (Int)
data Syn_MaybeExpression
Syn_MaybeExpression :: (BindingGroups) -> (Int) -> (MaybeExpression) -> Syn_MaybeExpression
bindingGroups_Syn_MaybeExpression :: Syn_MaybeExpression -> (BindingGroups)
kappaUnique_Syn_MaybeExpression :: Syn_MaybeExpression -> (Int)
self_Syn_MaybeExpression :: Syn_MaybeExpression -> (MaybeExpression)
wrap_MaybeExpression :: T_MaybeExpression -> Inh_MaybeExpression -> (Syn_MaybeExpression)
sem_MaybeExpression :: MaybeExpression -> T_MaybeExpression
newtype T_MaybeExpression
T_MaybeExpression :: Identity (T_MaybeExpression_s95) -> T_MaybeExpression
attach_T_MaybeExpression :: T_MaybeExpression -> Identity (T_MaybeExpression_s95)
newtype T_MaybeExpression_s95
C_MaybeExpression_s95 :: (T_MaybeExpression_v94) -> T_MaybeExpression_s95
inv_MaybeExpression_s95 :: T_MaybeExpression_s95 -> (T_MaybeExpression_v94)
data T_MaybeExpression_s96
C_MaybeExpression_s96 :: T_MaybeExpression_s96
type T_MaybeExpression_v94 = (T_MaybeExpression_vIn94) -> (T_MaybeExpression_vOut94)
data T_MaybeExpression_vIn94
T_MaybeExpression_vIn94 :: (BindingGroups) -> (Int) -> T_MaybeExpression_vIn94
data T_MaybeExpression_vOut94
T_MaybeExpression_vOut94 :: (BindingGroups) -> (Int) -> (MaybeExpression) -> T_MaybeExpression_vOut94
sem_MaybeExpression_Nothing :: T_MaybeExpression
sem_MaybeExpression_Just :: T_Expression -> T_MaybeExpression
data Inh_MaybeImportSpecification
Inh_MaybeImportSpecification :: Inh_MaybeImportSpecification
data Syn_MaybeImportSpecification
Syn_MaybeImportSpecification :: (MaybeImportSpecification) -> Syn_MaybeImportSpecification
self_Syn_MaybeImportSpecification :: Syn_MaybeImportSpecification -> (MaybeImportSpecification)
wrap_MaybeImportSpecification :: T_MaybeImportSpecification -> Inh_MaybeImportSpecification -> (Syn_MaybeImportSpecification)
sem_MaybeImportSpecification :: MaybeImportSpecification -> T_MaybeImportSpecification
newtype T_MaybeImportSpecification
T_MaybeImportSpecification :: Identity (T_MaybeImportSpecification_s98) -> T_MaybeImportSpecification
attach_T_MaybeImportSpecification :: T_MaybeImportSpecification -> Identity (T_MaybeImportSpecification_s98)
newtype T_MaybeImportSpecification_s98
C_MaybeImportSpecification_s98 :: (T_MaybeImportSpecification_v97) -> T_MaybeImportSpecification_s98
inv_MaybeImportSpecification_s98 :: T_MaybeImportSpecification_s98 -> (T_MaybeImportSpecification_v97)
data T_MaybeImportSpecification_s99
C_MaybeImportSpecification_s99 :: T_MaybeImportSpecification_s99
type T_MaybeImportSpecification_v97 = (T_MaybeImportSpecification_vIn97) -> (T_MaybeImportSpecification_vOut97)
data T_MaybeImportSpecification_vIn97
T_MaybeImportSpecification_vIn97 :: T_MaybeImportSpecification_vIn97
data T_MaybeImportSpecification_vOut97
T_MaybeImportSpecification_vOut97 :: (MaybeImportSpecification) -> T_MaybeImportSpecification_vOut97
sem_MaybeImportSpecification_Nothing :: T_MaybeImportSpecification
sem_MaybeImportSpecification_Just :: T_ImportSpecification -> T_MaybeImportSpecification
data Inh_MaybeInt
Inh_MaybeInt :: Inh_MaybeInt
data Syn_MaybeInt
Syn_MaybeInt :: (MaybeInt) -> Syn_MaybeInt
self_Syn_MaybeInt :: Syn_MaybeInt -> (MaybeInt)
wrap_MaybeInt :: T_MaybeInt -> Inh_MaybeInt -> (Syn_MaybeInt)
sem_MaybeInt :: MaybeInt -> T_MaybeInt
newtype T_MaybeInt
T_MaybeInt :: Identity (T_MaybeInt_s101) -> T_MaybeInt
attach_T_MaybeInt :: T_MaybeInt -> Identity (T_MaybeInt_s101)
newtype T_MaybeInt_s101
C_MaybeInt_s101 :: (T_MaybeInt_v100) -> T_MaybeInt_s101
inv_MaybeInt_s101 :: T_MaybeInt_s101 -> (T_MaybeInt_v100)
data T_MaybeInt_s102
C_MaybeInt_s102 :: T_MaybeInt_s102
type T_MaybeInt_v100 = (T_MaybeInt_vIn100) -> (T_MaybeInt_vOut100)
data T_MaybeInt_vIn100
T_MaybeInt_vIn100 :: T_MaybeInt_vIn100
data T_MaybeInt_vOut100
T_MaybeInt_vOut100 :: (MaybeInt) -> T_MaybeInt_vOut100
sem_MaybeInt_Nothing :: T_MaybeInt
sem_MaybeInt_Just :: (Int) -> T_MaybeInt
data Inh_MaybeName
Inh_MaybeName :: Inh_MaybeName
data Syn_MaybeName
Syn_MaybeName :: (MaybeName) -> Syn_MaybeName
self_Syn_MaybeName :: Syn_MaybeName -> (MaybeName)
wrap_MaybeName :: T_MaybeName -> Inh_MaybeName -> (Syn_MaybeName)
sem_MaybeName :: MaybeName -> T_MaybeName
newtype T_MaybeName
T_MaybeName :: Identity (T_MaybeName_s104) -> T_MaybeName
attach_T_MaybeName :: T_MaybeName -> Identity (T_MaybeName_s104)
newtype T_MaybeName_s104
C_MaybeName_s104 :: (T_MaybeName_v103) -> T_MaybeName_s104
inv_MaybeName_s104 :: T_MaybeName_s104 -> (T_MaybeName_v103)
data T_MaybeName_s105
C_MaybeName_s105 :: T_MaybeName_s105
type T_MaybeName_v103 = (T_MaybeName_vIn103) -> (T_MaybeName_vOut103)
data T_MaybeName_vIn103
T_MaybeName_vIn103 :: T_MaybeName_vIn103
data T_MaybeName_vOut103
T_MaybeName_vOut103 :: (MaybeName) -> T_MaybeName_vOut103
sem_MaybeName_Nothing :: T_MaybeName
sem_MaybeName_Just :: T_Name -> T_MaybeName
data Inh_MaybeNames
Inh_MaybeNames :: Inh_MaybeNames
data Syn_MaybeNames
Syn_MaybeNames :: (MaybeNames) -> Syn_MaybeNames
self_Syn_MaybeNames :: Syn_MaybeNames -> (MaybeNames)
wrap_MaybeNames :: T_MaybeNames -> Inh_MaybeNames -> (Syn_MaybeNames)
sem_MaybeNames :: MaybeNames -> T_MaybeNames
newtype T_MaybeNames
T_MaybeNames :: Identity (T_MaybeNames_s107) -> T_MaybeNames
attach_T_MaybeNames :: T_MaybeNames -> Identity (T_MaybeNames_s107)
newtype T_MaybeNames_s107
C_MaybeNames_s107 :: (T_MaybeNames_v106) -> T_MaybeNames_s107
inv_MaybeNames_s107 :: T_MaybeNames_s107 -> (T_MaybeNames_v106)
data T_MaybeNames_s108
C_MaybeNames_s108 :: T_MaybeNames_s108
type T_MaybeNames_v106 = (T_MaybeNames_vIn106) -> (T_MaybeNames_vOut106)
data T_MaybeNames_vIn106
T_MaybeNames_vIn106 :: T_MaybeNames_vIn106
data T_MaybeNames_vOut106
T_MaybeNames_vOut106 :: (MaybeNames) -> T_MaybeNames_vOut106
sem_MaybeNames_Nothing :: T_MaybeNames
sem_MaybeNames_Just :: T_Names -> T_MaybeNames
data Inh_Module
Inh_Module :: (ImportEnvironment) -> ([Option]) -> Inh_Module
importEnvironment_Inh_Module :: Inh_Module -> (ImportEnvironment)
options_Inh_Module :: Inh_Module -> ([Option])
data Syn_Module
Syn_Module :: (IO ()) -> (KindEnvironment) -> (KindErrors) -> (Module) -> Syn_Module
debugIO_Syn_Module :: Syn_Module -> (IO ())
kindEnvironment_Syn_Module :: Syn_Module -> (KindEnvironment)
kindErrors_Syn_Module :: Syn_Module -> (KindErrors)
self_Syn_Module :: Syn_Module -> (Module)
wrap_Module :: T_Module -> Inh_Module -> (Syn_Module)
sem_Module :: Module -> T_Module
newtype T_Module
T_Module :: Identity (T_Module_s110) -> T_Module
attach_T_Module :: T_Module -> Identity (T_Module_s110)
newtype T_Module_s110
C_Module_s110 :: (T_Module_v109) -> T_Module_s110
inv_Module_s110 :: T_Module_s110 -> (T_Module_v109)
data T_Module_s111
C_Module_s111 :: T_Module_s111
type T_Module_v109 = (T_Module_vIn109) -> (T_Module_vOut109)
data T_Module_vIn109
T_Module_vIn109 :: (ImportEnvironment) -> ([Option]) -> T_Module_vIn109
data T_Module_vOut109
T_Module_vOut109 :: (IO ()) -> (KindEnvironment) -> (KindErrors) -> (Module) -> T_Module_vOut109
sem_Module_Module :: T_Range -> T_MaybeName -> T_MaybeExports -> T_Body -> T_Module
data Inh_Name
Inh_Name :: Inh_Name
data Syn_Name
Syn_Name :: (Name) -> Syn_Name
self_Syn_Name :: Syn_Name -> (Name)
wrap_Name :: T_Name -> Inh_Name -> (Syn_Name)
sem_Name :: Name -> T_Name
newtype T_Name
T_Name :: Identity (T_Name_s113) -> T_Name
attach_T_Name :: T_Name -> Identity (T_Name_s113)
newtype T_Name_s113
C_Name_s113 :: (T_Name_v112) -> T_Name_s113
inv_Name_s113 :: T_Name_s113 -> (T_Name_v112)
data T_Name_s114
C_Name_s114 :: T_Name_s114
type T_Name_v112 = (T_Name_vIn112) -> (T_Name_vOut112)
data T_Name_vIn112
T_Name_vIn112 :: T_Name_vIn112
data T_Name_vOut112
T_Name_vOut112 :: (Name) -> T_Name_vOut112
sem_Name_Identifier :: T_Range -> T_Strings -> (String) -> T_Name
sem_Name_Operator :: T_Range -> T_Strings -> (String) -> T_Name
sem_Name_Special :: T_Range -> T_Strings -> (String) -> T_Name
data Inh_Names
Inh_Names :: Inh_Names
data Syn_Names
Syn_Names :: (Names) -> Syn_Names
self_Syn_Names :: Syn_Names -> (Names)
wrap_Names :: T_Names -> Inh_Names -> (Syn_Names)
sem_Names :: Names -> T_Names
newtype T_Names
T_Names :: Identity (T_Names_s116) -> T_Names
attach_T_Names :: T_Names -> Identity (T_Names_s116)
newtype T_Names_s116
C_Names_s116 :: (T_Names_v115) -> T_Names_s116
inv_Names_s116 :: T_Names_s116 -> (T_Names_v115)
data T_Names_s117
C_Names_s117 :: T_Names_s117
type T_Names_v115 = (T_Names_vIn115) -> (T_Names_vOut115)
data T_Names_vIn115
T_Names_vIn115 :: T_Names_vIn115
data T_Names_vOut115
T_Names_vOut115 :: (Names) -> T_Names_vOut115
sem_Names_Cons :: T_Name -> T_Names -> T_Names
sem_Names_Nil :: T_Names
data Inh_Pattern
Inh_Pattern :: Inh_Pattern
data Syn_Pattern
Syn_Pattern :: (Pattern) -> Syn_Pattern
self_Syn_Pattern :: Syn_Pattern -> (Pattern)
wrap_Pattern :: T_Pattern -> Inh_Pattern -> (Syn_Pattern)
sem_Pattern :: Pattern -> T_Pattern
newtype T_Pattern
T_Pattern :: Identity (T_Pattern_s119) -> T_Pattern
attach_T_Pattern :: T_Pattern -> Identity (T_Pattern_s119)
newtype T_Pattern_s119
C_Pattern_s119 :: (T_Pattern_v118) -> T_Pattern_s119
inv_Pattern_s119 :: T_Pattern_s119 -> (T_Pattern_v118)
data T_Pattern_s120
C_Pattern_s120 :: T_Pattern_s120
type T_Pattern_v118 = (T_Pattern_vIn118) -> (T_Pattern_vOut118)
data T_Pattern_vIn118
T_Pattern_vIn118 :: T_Pattern_vIn118
data T_Pattern_vOut118
T_Pattern_vOut118 :: (Pattern) -> T_Pattern_vOut118
sem_Pattern_Hole :: T_Range -> (Integer) -> T_Pattern
sem_Pattern_Literal :: T_Range -> T_Literal -> T_Pattern
sem_Pattern_Variable :: T_Range -> T_Name -> T_Pattern
sem_Pattern_Constructor :: T_Range -> T_Name -> T_Patterns -> T_Pattern
sem_Pattern_Parenthesized :: T_Range -> T_Pattern -> T_Pattern
sem_Pattern_InfixConstructor :: T_Range -> T_Pattern -> T_Name -> T_Pattern -> T_Pattern
sem_Pattern_List :: T_Range -> T_Patterns -> T_Pattern
sem_Pattern_Tuple :: T_Range -> T_Patterns -> T_Pattern
sem_Pattern_Record :: T_Range -> T_Name -> T_RecordPatternBindings -> T_Pattern
sem_Pattern_Negate :: T_Range -> T_Literal -> T_Pattern
sem_Pattern_As :: T_Range -> T_Name -> T_Pattern -> T_Pattern
sem_Pattern_Wildcard :: T_Range -> T_Pattern
sem_Pattern_Irrefutable :: T_Range -> T_Pattern -> T_Pattern
sem_Pattern_Successor :: T_Range -> T_Name -> T_Literal -> T_Pattern
sem_Pattern_NegateFloat :: T_Range -> T_Literal -> T_Pattern
data Inh_Patterns
Inh_Patterns :: Inh_Patterns
data Syn_Patterns
Syn_Patterns :: (Patterns) -> Syn_Patterns
self_Syn_Patterns :: Syn_Patterns -> (Patterns)
wrap_Patterns :: T_Patterns -> Inh_Patterns -> (Syn_Patterns)
sem_Patterns :: Patterns -> T_Patterns
newtype T_Patterns
T_Patterns :: Identity (T_Patterns_s122) -> T_Patterns
attach_T_Patterns :: T_Patterns -> Identity (T_Patterns_s122)
newtype T_Patterns_s122
C_Patterns_s122 :: (T_Patterns_v121) -> T_Patterns_s122
inv_Patterns_s122 :: T_Patterns_s122 -> (T_Patterns_v121)
data T_Patterns_s123
C_Patterns_s123 :: T_Patterns_s123
type T_Patterns_v121 = (T_Patterns_vIn121) -> (T_Patterns_vOut121)
data T_Patterns_vIn121
T_Patterns_vIn121 :: T_Patterns_vIn121
data T_Patterns_vOut121
T_Patterns_vOut121 :: (Patterns) -> T_Patterns_vOut121
sem_Patterns_Cons :: T_Pattern -> T_Patterns -> T_Patterns
sem_Patterns_Nil :: T_Patterns
data Inh_Position
Inh_Position :: Inh_Position
data Syn_Position
Syn_Position :: (Position) -> Syn_Position
self_Syn_Position :: Syn_Position -> (Position)
wrap_Position :: T_Position -> Inh_Position -> (Syn_Position)
sem_Position :: Position -> T_Position
newtype T_Position
T_Position :: Identity (T_Position_s125) -> T_Position
attach_T_Position :: T_Position -> Identity (T_Position_s125)
newtype T_Position_s125
C_Position_s125 :: (T_Position_v124) -> T_Position_s125
inv_Position_s125 :: T_Position_s125 -> (T_Position_v124)
data T_Position_s126
C_Position_s126 :: T_Position_s126
type T_Position_v124 = (T_Position_vIn124) -> (T_Position_vOut124)
data T_Position_vIn124
T_Position_vIn124 :: T_Position_vIn124
data T_Position_vOut124
T_Position_vOut124 :: (Position) -> T_Position_vOut124
sem_Position_Position :: (String) -> (Int) -> (Int) -> T_Position
sem_Position_Unknown :: T_Position
data Inh_Qualifier
Inh_Qualifier :: (BindingGroups) -> (Int) -> Inh_Qualifier
bindingGroups_Inh_Qualifier :: Inh_Qualifier -> (BindingGroups)
kappaUnique_Inh_Qualifier :: Inh_Qualifier -> (Int)
data Syn_Qualifier
Syn_Qualifier :: (BindingGroups) -> (Int) -> (Qualifier) -> Syn_Qualifier
bindingGroups_Syn_Qualifier :: Syn_Qualifier -> (BindingGroups)
kappaUnique_Syn_Qualifier :: Syn_Qualifier -> (Int)
self_Syn_Qualifier :: Syn_Qualifier -> (Qualifier)
wrap_Qualifier :: T_Qualifier -> Inh_Qualifier -> (Syn_Qualifier)
sem_Qualifier :: Qualifier -> T_Qualifier
newtype T_Qualifier
T_Qualifier :: Identity (T_Qualifier_s128) -> T_Qualifier
attach_T_Qualifier :: T_Qualifier -> Identity (T_Qualifier_s128)
newtype T_Qualifier_s128
C_Qualifier_s128 :: (T_Qualifier_v127) -> T_Qualifier_s128
inv_Qualifier_s128 :: T_Qualifier_s128 -> (T_Qualifier_v127)
data T_Qualifier_s129
C_Qualifier_s129 :: T_Qualifier_s129
type T_Qualifier_v127 = (T_Qualifier_vIn127) -> (T_Qualifier_vOut127)
data T_Qualifier_vIn127
T_Qualifier_vIn127 :: (BindingGroups) -> (Int) -> T_Qualifier_vIn127
data T_Qualifier_vOut127
T_Qualifier_vOut127 :: (BindingGroups) -> (Int) -> (Qualifier) -> T_Qualifier_vOut127
sem_Qualifier_Guard :: T_Range -> T_Expression -> T_Qualifier
sem_Qualifier_Let :: T_Range -> T_Declarations -> T_Qualifier
sem_Qualifier_Generator :: T_Range -> T_Pattern -> T_Expression -> T_Qualifier
sem_Qualifier_Empty :: T_Range -> T_Qualifier
data Inh_Qualifiers
Inh_Qualifiers :: (BindingGroups) -> (Int) -> Inh_Qualifiers
bindingGroups_Inh_Qualifiers :: Inh_Qualifiers -> (BindingGroups)
kappaUnique_Inh_Qualifiers :: Inh_Qualifiers -> (Int)
data Syn_Qualifiers
Syn_Qualifiers :: (BindingGroups) -> (Int) -> (Qualifiers) -> Syn_Qualifiers
bindingGroups_Syn_Qualifiers :: Syn_Qualifiers -> (BindingGroups)
kappaUnique_Syn_Qualifiers :: Syn_Qualifiers -> (Int)
self_Syn_Qualifiers :: Syn_Qualifiers -> (Qualifiers)
wrap_Qualifiers :: T_Qualifiers -> Inh_Qualifiers -> (Syn_Qualifiers)
sem_Qualifiers :: Qualifiers -> T_Qualifiers
newtype T_Qualifiers
T_Qualifiers :: Identity (T_Qualifiers_s131) -> T_Qualifiers
attach_T_Qualifiers :: T_Qualifiers -> Identity (T_Qualifiers_s131)
newtype T_Qualifiers_s131
C_Qualifiers_s131 :: (T_Qualifiers_v130) -> T_Qualifiers_s131
inv_Qualifiers_s131 :: T_Qualifiers_s131 -> (T_Qualifiers_v130)
data T_Qualifiers_s132
C_Qualifiers_s132 :: T_Qualifiers_s132
type T_Qualifiers_v130 = (T_Qualifiers_vIn130) -> (T_Qualifiers_vOut130)
data T_Qualifiers_vIn130
T_Qualifiers_vIn130 :: (BindingGroups) -> (Int) -> T_Qualifiers_vIn130
data T_Qualifiers_vOut130
T_Qualifiers_vOut130 :: (BindingGroups) -> (Int) -> (Qualifiers) -> T_Qualifiers_vOut130
sem_Qualifiers_Cons :: T_Qualifier -> T_Qualifiers -> T_Qualifiers
sem_Qualifiers_Nil :: T_Qualifiers
data Inh_Range
Inh_Range :: Inh_Range
data Syn_Range
Syn_Range :: (Range) -> Syn_Range
self_Syn_Range :: Syn_Range -> (Range)
wrap_Range :: T_Range -> Inh_Range -> (Syn_Range)
sem_Range :: Range -> T_Range
newtype T_Range
T_Range :: Identity (T_Range_s134) -> T_Range
attach_T_Range :: T_Range -> Identity (T_Range_s134)
newtype T_Range_s134
C_Range_s134 :: (T_Range_v133) -> T_Range_s134
inv_Range_s134 :: T_Range_s134 -> (T_Range_v133)
data T_Range_s135
C_Range_s135 :: T_Range_s135
type T_Range_v133 = (T_Range_vIn133) -> (T_Range_vOut133)
data T_Range_vIn133
T_Range_vIn133 :: T_Range_vIn133
data T_Range_vOut133
T_Range_vOut133 :: (Range) -> T_Range_vOut133
sem_Range_Range :: T_Position -> T_Position -> T_Range
data Inh_RecordExpressionBinding
Inh_RecordExpressionBinding :: (BindingGroups) -> (Int) -> Inh_RecordExpressionBinding
bindingGroups_Inh_RecordExpressionBinding :: Inh_RecordExpressionBinding -> (BindingGroups)
kappaUnique_Inh_RecordExpressionBinding :: Inh_RecordExpressionBinding -> (Int)
data Syn_RecordExpressionBinding
Syn_RecordExpressionBinding :: (BindingGroups) -> (Int) -> (RecordExpressionBinding) -> Syn_RecordExpressionBinding
bindingGroups_Syn_RecordExpressionBinding :: Syn_RecordExpressionBinding -> (BindingGroups)
kappaUnique_Syn_RecordExpressionBinding :: Syn_RecordExpressionBinding -> (Int)
self_Syn_RecordExpressionBinding :: Syn_RecordExpressionBinding -> (RecordExpressionBinding)
wrap_RecordExpressionBinding :: T_RecordExpressionBinding -> Inh_RecordExpressionBinding -> (Syn_RecordExpressionBinding)
sem_RecordExpressionBinding :: RecordExpressionBinding -> T_RecordExpressionBinding
newtype T_RecordExpressionBinding
T_RecordExpressionBinding :: Identity (T_RecordExpressionBinding_s137) -> T_RecordExpressionBinding
attach_T_RecordExpressionBinding :: T_RecordExpressionBinding -> Identity (T_RecordExpressionBinding_s137)
newtype T_RecordExpressionBinding_s137
C_RecordExpressionBinding_s137 :: (T_RecordExpressionBinding_v136) -> T_RecordExpressionBinding_s137
inv_RecordExpressionBinding_s137 :: T_RecordExpressionBinding_s137 -> (T_RecordExpressionBinding_v136)
data T_RecordExpressionBinding_s138
C_RecordExpressionBinding_s138 :: T_RecordExpressionBinding_s138
type T_RecordExpressionBinding_v136 = (T_RecordExpressionBinding_vIn136) -> (T_RecordExpressionBinding_vOut136)
data T_RecordExpressionBinding_vIn136
T_RecordExpressionBinding_vIn136 :: (BindingGroups) -> (Int) -> T_RecordExpressionBinding_vIn136
data T_RecordExpressionBinding_vOut136
T_RecordExpressionBinding_vOut136 :: (BindingGroups) -> (Int) -> (RecordExpressionBinding) -> T_RecordExpressionBinding_vOut136
sem_RecordExpressionBinding_RecordExpressionBinding :: T_Range -> T_Name -> T_Expression -> T_RecordExpressionBinding
data Inh_RecordExpressionBindings
Inh_RecordExpressionBindings :: (BindingGroups) -> (Int) -> Inh_RecordExpressionBindings
bindingGroups_Inh_RecordExpressionBindings :: Inh_RecordExpressionBindings -> (BindingGroups)
kappaUnique_Inh_RecordExpressionBindings :: Inh_RecordExpressionBindings -> (Int)
data Syn_RecordExpressionBindings
Syn_RecordExpressionBindings :: (BindingGroups) -> (Int) -> (RecordExpressionBindings) -> Syn_RecordExpressionBindings
bindingGroups_Syn_RecordExpressionBindings :: Syn_RecordExpressionBindings -> (BindingGroups)
kappaUnique_Syn_RecordExpressionBindings :: Syn_RecordExpressionBindings -> (Int)
self_Syn_RecordExpressionBindings :: Syn_RecordExpressionBindings -> (RecordExpressionBindings)
wrap_RecordExpressionBindings :: T_RecordExpressionBindings -> Inh_RecordExpressionBindings -> (Syn_RecordExpressionBindings)
sem_RecordExpressionBindings :: RecordExpressionBindings -> T_RecordExpressionBindings
newtype T_RecordExpressionBindings
T_RecordExpressionBindings :: Identity (T_RecordExpressionBindings_s140) -> T_RecordExpressionBindings
attach_T_RecordExpressionBindings :: T_RecordExpressionBindings -> Identity (T_RecordExpressionBindings_s140)
newtype T_RecordExpressionBindings_s140
C_RecordExpressionBindings_s140 :: (T_RecordExpressionBindings_v139) -> T_RecordExpressionBindings_s140
inv_RecordExpressionBindings_s140 :: T_RecordExpressionBindings_s140 -> (T_RecordExpressionBindings_v139)
data T_RecordExpressionBindings_s141
C_RecordExpressionBindings_s141 :: T_RecordExpressionBindings_s141
type T_RecordExpressionBindings_v139 = (T_RecordExpressionBindings_vIn139) -> (T_RecordExpressionBindings_vOut139)
data T_RecordExpressionBindings_vIn139
T_RecordExpressionBindings_vIn139 :: (BindingGroups) -> (Int) -> T_RecordExpressionBindings_vIn139
data T_RecordExpressionBindings_vOut139
T_RecordExpressionBindings_vOut139 :: (BindingGroups) -> (Int) -> (RecordExpressionBindings) -> T_RecordExpressionBindings_vOut139
sem_RecordExpressionBindings_Cons :: T_RecordExpressionBinding -> T_RecordExpressionBindings -> T_RecordExpressionBindings
sem_RecordExpressionBindings_Nil :: T_RecordExpressionBindings
data Inh_RecordPatternBinding
Inh_RecordPatternBinding :: Inh_RecordPatternBinding
data Syn_RecordPatternBinding
Syn_RecordPatternBinding :: (RecordPatternBinding) -> Syn_RecordPatternBinding
self_Syn_RecordPatternBinding :: Syn_RecordPatternBinding -> (RecordPatternBinding)
wrap_RecordPatternBinding :: T_RecordPatternBinding -> Inh_RecordPatternBinding -> (Syn_RecordPatternBinding)
sem_RecordPatternBinding :: RecordPatternBinding -> T_RecordPatternBinding
newtype T_RecordPatternBinding
T_RecordPatternBinding :: Identity (T_RecordPatternBinding_s143) -> T_RecordPatternBinding
attach_T_RecordPatternBinding :: T_RecordPatternBinding -> Identity (T_RecordPatternBinding_s143)
newtype T_RecordPatternBinding_s143
C_RecordPatternBinding_s143 :: (T_RecordPatternBinding_v142) -> T_RecordPatternBinding_s143
inv_RecordPatternBinding_s143 :: T_RecordPatternBinding_s143 -> (T_RecordPatternBinding_v142)
data T_RecordPatternBinding_s144
C_RecordPatternBinding_s144 :: T_RecordPatternBinding_s144
type T_RecordPatternBinding_v142 = (T_RecordPatternBinding_vIn142) -> (T_RecordPatternBinding_vOut142)
data T_RecordPatternBinding_vIn142
T_RecordPatternBinding_vIn142 :: T_RecordPatternBinding_vIn142
data T_RecordPatternBinding_vOut142
T_RecordPatternBinding_vOut142 :: (RecordPatternBinding) -> T_RecordPatternBinding_vOut142
sem_RecordPatternBinding_RecordPatternBinding :: T_Range -> T_Name -> T_Pattern -> T_RecordPatternBinding
data Inh_RecordPatternBindings
Inh_RecordPatternBindings :: Inh_RecordPatternBindings
data Syn_RecordPatternBindings
Syn_RecordPatternBindings :: (RecordPatternBindings) -> Syn_RecordPatternBindings
self_Syn_RecordPatternBindings :: Syn_RecordPatternBindings -> (RecordPatternBindings)
wrap_RecordPatternBindings :: T_RecordPatternBindings -> Inh_RecordPatternBindings -> (Syn_RecordPatternBindings)
sem_RecordPatternBindings :: RecordPatternBindings -> T_RecordPatternBindings
newtype T_RecordPatternBindings
T_RecordPatternBindings :: Identity (T_RecordPatternBindings_s146) -> T_RecordPatternBindings
attach_T_RecordPatternBindings :: T_RecordPatternBindings -> Identity (T_RecordPatternBindings_s146)
newtype T_RecordPatternBindings_s146
C_RecordPatternBindings_s146 :: (T_RecordPatternBindings_v145) -> T_RecordPatternBindings_s146
inv_RecordPatternBindings_s146 :: T_RecordPatternBindings_s146 -> (T_RecordPatternBindings_v145)
data T_RecordPatternBindings_s147
C_RecordPatternBindings_s147 :: T_RecordPatternBindings_s147
type T_RecordPatternBindings_v145 = (T_RecordPatternBindings_vIn145) -> (T_RecordPatternBindings_vOut145)
data T_RecordPatternBindings_vIn145
T_RecordPatternBindings_vIn145 :: T_RecordPatternBindings_vIn145
data T_RecordPatternBindings_vOut145
T_RecordPatternBindings_vOut145 :: (RecordPatternBindings) -> T_RecordPatternBindings_vOut145
sem_RecordPatternBindings_Cons :: T_RecordPatternBinding -> T_RecordPatternBindings -> T_RecordPatternBindings
sem_RecordPatternBindings_Nil :: T_RecordPatternBindings
data Inh_RightHandSide
Inh_RightHandSide :: (BindingGroups) -> (Int) -> Inh_RightHandSide
bindingGroups_Inh_RightHandSide :: Inh_RightHandSide -> (BindingGroups)
kappaUnique_Inh_RightHandSide :: Inh_RightHandSide -> (Int)
data Syn_RightHandSide
Syn_RightHandSide :: (BindingGroups) -> (Int) -> (RightHandSide) -> Syn_RightHandSide
bindingGroups_Syn_RightHandSide :: Syn_RightHandSide -> (BindingGroups)
kappaUnique_Syn_RightHandSide :: Syn_RightHandSide -> (Int)
self_Syn_RightHandSide :: Syn_RightHandSide -> (RightHandSide)
wrap_RightHandSide :: T_RightHandSide -> Inh_RightHandSide -> (Syn_RightHandSide)
sem_RightHandSide :: RightHandSide -> T_RightHandSide
newtype T_RightHandSide
T_RightHandSide :: Identity (T_RightHandSide_s149) -> T_RightHandSide
attach_T_RightHandSide :: T_RightHandSide -> Identity (T_RightHandSide_s149)
newtype T_RightHandSide_s149
C_RightHandSide_s149 :: (T_RightHandSide_v148) -> T_RightHandSide_s149
inv_RightHandSide_s149 :: T_RightHandSide_s149 -> (T_RightHandSide_v148)
data T_RightHandSide_s150
C_RightHandSide_s150 :: T_RightHandSide_s150
type T_RightHandSide_v148 = (T_RightHandSide_vIn148) -> (T_RightHandSide_vOut148)
data T_RightHandSide_vIn148
T_RightHandSide_vIn148 :: (BindingGroups) -> (Int) -> T_RightHandSide_vIn148
data T_RightHandSide_vOut148
T_RightHandSide_vOut148 :: (BindingGroups) -> (Int) -> (RightHandSide) -> T_RightHandSide_vOut148
sem_RightHandSide_Expression :: T_Range -> T_Expression -> T_MaybeDeclarations -> T_RightHandSide
sem_RightHandSide_Guarded :: T_Range -> T_GuardedExpressions -> T_MaybeDeclarations -> T_RightHandSide
data Inh_SimpleType
Inh_SimpleType :: (KindConstraints) -> (Kind) -> (Int) -> Inh_SimpleType
constraints_Inh_SimpleType :: Inh_SimpleType -> (KindConstraints)
kappaOfRHS_Inh_SimpleType :: Inh_SimpleType -> (Kind)
kappaUnique_Inh_SimpleType :: Inh_SimpleType -> (Int)
data Syn_SimpleType
Syn_SimpleType :: (KindConstraints) -> (PatternAssumptions) -> (PatternAssumptions) -> (Int) -> (SimpleType) -> Syn_SimpleType
constraints_Syn_SimpleType :: Syn_SimpleType -> (KindConstraints)
declared_Syn_SimpleType :: Syn_SimpleType -> (PatternAssumptions)
environment_Syn_SimpleType :: Syn_SimpleType -> (PatternAssumptions)
kappaUnique_Syn_SimpleType :: Syn_SimpleType -> (Int)
self_Syn_SimpleType :: Syn_SimpleType -> (SimpleType)
wrap_SimpleType :: T_SimpleType -> Inh_SimpleType -> (Syn_SimpleType)
sem_SimpleType :: SimpleType -> T_SimpleType
newtype T_SimpleType
T_SimpleType :: Identity (T_SimpleType_s152) -> T_SimpleType
attach_T_SimpleType :: T_SimpleType -> Identity (T_SimpleType_s152)
newtype T_SimpleType_s152
C_SimpleType_s152 :: (T_SimpleType_v151) -> T_SimpleType_s152
inv_SimpleType_s152 :: T_SimpleType_s152 -> (T_SimpleType_v151)
data T_SimpleType_s153
C_SimpleType_s153 :: T_SimpleType_s153
type T_SimpleType_v151 = (T_SimpleType_vIn151) -> (T_SimpleType_vOut151)
data T_SimpleType_vIn151
T_SimpleType_vIn151 :: (KindConstraints) -> (Kind) -> (Int) -> T_SimpleType_vIn151
data T_SimpleType_vOut151
T_SimpleType_vOut151 :: (KindConstraints) -> (PatternAssumptions) -> (PatternAssumptions) -> (Int) -> (SimpleType) -> T_SimpleType_vOut151
sem_SimpleType_SimpleType :: T_Range -> T_Name -> T_Names -> T_SimpleType
data Inh_Statement
Inh_Statement :: (BindingGroups) -> (Int) -> Inh_Statement
bindingGroups_Inh_Statement :: Inh_Statement -> (BindingGroups)
kappaUnique_Inh_Statement :: Inh_Statement -> (Int)
data Syn_Statement
Syn_Statement :: (BindingGroups) -> (Int) -> (Statement) -> Syn_Statement
bindingGroups_Syn_Statement :: Syn_Statement -> (BindingGroups)
kappaUnique_Syn_Statement :: Syn_Statement -> (Int)
self_Syn_Statement :: Syn_Statement -> (Statement)
wrap_Statement :: T_Statement -> Inh_Statement -> (Syn_Statement)
sem_Statement :: Statement -> T_Statement
newtype T_Statement
T_Statement :: Identity (T_Statement_s155) -> T_Statement
attach_T_Statement :: T_Statement -> Identity (T_Statement_s155)
newtype T_Statement_s155
C_Statement_s155 :: (T_Statement_v154) -> T_Statement_s155
inv_Statement_s155 :: T_Statement_s155 -> (T_Statement_v154)
data T_Statement_s156
C_Statement_s156 :: T_Statement_s156
type T_Statement_v154 = (T_Statement_vIn154) -> (T_Statement_vOut154)
data T_Statement_vIn154
T_Statement_vIn154 :: (BindingGroups) -> (Int) -> T_Statement_vIn154
data T_Statement_vOut154
T_Statement_vOut154 :: (BindingGroups) -> (Int) -> (Statement) -> T_Statement_vOut154
sem_Statement_Expression :: T_Range -> T_Expression -> T_Statement
sem_Statement_Let :: T_Range -> T_Declarations -> T_Statement
sem_Statement_Generator :: T_Range -> T_Pattern -> T_Expression -> T_Statement
sem_Statement_Empty :: T_Range -> T_Statement
data Inh_Statements
Inh_Statements :: (BindingGroups) -> (Int) -> Inh_Statements
bindingGroups_Inh_Statements :: Inh_Statements -> (BindingGroups)
kappaUnique_Inh_Statements :: Inh_Statements -> (Int)
data Syn_Statements
Syn_Statements :: (BindingGroups) -> (Int) -> (Statements) -> Syn_Statements
bindingGroups_Syn_Statements :: Syn_Statements -> (BindingGroups)
kappaUnique_Syn_Statements :: Syn_Statements -> (Int)
self_Syn_Statements :: Syn_Statements -> (Statements)
wrap_Statements :: T_Statements -> Inh_Statements -> (Syn_Statements)
sem_Statements :: Statements -> T_Statements
newtype T_Statements
T_Statements :: Identity (T_Statements_s158) -> T_Statements
attach_T_Statements :: T_Statements -> Identity (T_Statements_s158)
newtype T_Statements_s158
C_Statements_s158 :: (T_Statements_v157) -> T_Statements_s158
inv_Statements_s158 :: T_Statements_s158 -> (T_Statements_v157)
data T_Statements_s159
C_Statements_s159 :: T_Statements_s159
type T_Statements_v157 = (T_Statements_vIn157) -> (T_Statements_vOut157)
data T_Statements_vIn157
T_Statements_vIn157 :: (BindingGroups) -> (Int) -> T_Statements_vIn157
data T_Statements_vOut157
T_Statements_vOut157 :: (BindingGroups) -> (Int) -> (Statements) -> T_Statements_vOut157
sem_Statements_Cons :: T_Statement -> T_Statements -> T_Statements
sem_Statements_Nil :: T_Statements
data Inh_Strings
Inh_Strings :: Inh_Strings
data Syn_Strings
Syn_Strings :: (Strings) -> Syn_Strings
self_Syn_Strings :: Syn_Strings -> (Strings)
wrap_Strings :: T_Strings -> Inh_Strings -> (Syn_Strings)
sem_Strings :: Strings -> T_Strings
newtype T_Strings
T_Strings :: Identity (T_Strings_s161) -> T_Strings
attach_T_Strings :: T_Strings -> Identity (T_Strings_s161)
newtype T_Strings_s161
C_Strings_s161 :: (T_Strings_v160) -> T_Strings_s161
inv_Strings_s161 :: T_Strings_s161 -> (T_Strings_v160)
data T_Strings_s162
C_Strings_s162 :: T_Strings_s162
type T_Strings_v160 = (T_Strings_vIn160) -> (T_Strings_vOut160)
data T_Strings_vIn160
T_Strings_vIn160 :: T_Strings_vIn160
data T_Strings_vOut160
T_Strings_vOut160 :: (Strings) -> T_Strings_vOut160
sem_Strings_Cons :: (String) -> T_Strings -> T_Strings
sem_Strings_Nil :: T_Strings
data Inh_Type
Inh_Type :: (KindConstraints) -> (Int) -> Inh_Type
constraints_Inh_Type :: Inh_Type -> (KindConstraints)
kappaUnique_Inh_Type :: Inh_Type -> (Int)
data Syn_Type
Syn_Type :: (Assumptions) -> (KindConstraints) -> (Kind) -> (Int) -> (Type) -> Syn_Type
assumptions_Syn_Type :: Syn_Type -> (Assumptions)
constraints_Syn_Type :: Syn_Type -> (KindConstraints)
kappa_Syn_Type :: Syn_Type -> (Kind)
kappaUnique_Syn_Type :: Syn_Type -> (Int)
self_Syn_Type :: Syn_Type -> (Type)
wrap_Type :: T_Type -> Inh_Type -> (Syn_Type)
sem_Type :: Type -> T_Type
newtype T_Type
T_Type :: Identity (T_Type_s164) -> T_Type
attach_T_Type :: T_Type -> Identity (T_Type_s164)
newtype T_Type_s164
C_Type_s164 :: (T_Type_v163) -> T_Type_s164
inv_Type_s164 :: T_Type_s164 -> (T_Type_v163)
data T_Type_s165
C_Type_s165 :: T_Type_s165
type T_Type_v163 = (T_Type_vIn163) -> (T_Type_vOut163)
data T_Type_vIn163
T_Type_vIn163 :: (KindConstraints) -> (Int) -> T_Type_vIn163
data T_Type_vOut163
T_Type_vOut163 :: (Assumptions) -> (KindConstraints) -> (Kind) -> (Int) -> (Type) -> T_Type_vOut163
sem_Type_Application :: T_Range -> (Bool) -> T_Type -> T_Types -> T_Type
sem_Type_Variable :: T_Range -> T_Name -> T_Type
sem_Type_Constructor :: T_Range -> T_Name -> T_Type
sem_Type_Qualified :: T_Range -> T_ContextItems -> T_Type -> T_Type
sem_Type_Forall :: T_Range -> T_Names -> T_Type -> T_Type
sem_Type_Exists :: T_Range -> T_Names -> T_Type -> T_Type
sem_Type_Parenthesized :: T_Range -> T_Type -> T_Type
data Inh_Types
Inh_Types :: (KindConstraints) -> (Int) -> Inh_Types
constraints_Inh_Types :: Inh_Types -> (KindConstraints)
kappaUnique_Inh_Types :: Inh_Types -> (Int)
data Syn_Types
Syn_Types :: (Assumptions) -> (KindConstraints) -> (Int) -> (Kinds) -> (Types) -> Syn_Types
assumptions_Syn_Types :: Syn_Types -> (Assumptions)
constraints_Syn_Types :: Syn_Types -> (KindConstraints)
kappaUnique_Syn_Types :: Syn_Types -> (Int)
kappas_Syn_Types :: Syn_Types -> (Kinds)
self_Syn_Types :: Syn_Types -> (Types)
wrap_Types :: T_Types -> Inh_Types -> (Syn_Types)
sem_Types :: Types -> T_Types
newtype T_Types
T_Types :: Identity (T_Types_s167) -> T_Types
attach_T_Types :: T_Types -> Identity (T_Types_s167)
newtype T_Types_s167
C_Types_s167 :: (T_Types_v166) -> T_Types_s167
inv_Types_s167 :: T_Types_s167 -> (T_Types_v166)
data T_Types_s168
C_Types_s168 :: T_Types_s168
type T_Types_v166 = (T_Types_vIn166) -> (T_Types_vOut166)
data T_Types_vIn166
T_Types_vIn166 :: (KindConstraints) -> (Int) -> T_Types_vIn166
data T_Types_vOut166
T_Types_vOut166 :: (Assumptions) -> (KindConstraints) -> (Int) -> (Kinds) -> (Types) -> T_Types_vOut166
sem_Types_Cons :: T_Type -> T_Types -> T_Types
sem_Types_Nil :: T_Types


module Helium.Main.PhaseKindInferencer
phaseKindInferencer :: ImportEnvironment -> Module -> [Option] -> Phase KindError ()

module Helium.StaticAnalysis.StaticChecks.StaticChecks
filterRemovedNames :: [(Name, Entity)] -> Error -> Bool
filterDerivedNames :: [Range] -> Error -> Bool
uniqueKeys :: Ord key => [(key, a)] -> ([(key, a)], [[key]])
type ScopeInfo = ([Names], [Name], [(Name, Name)])
changeOfScope :: Names -> Names -> Names -> (Names, Names, ScopeInfo)
uniqueAppearance :: Ord a => [a] -> ([a], [[a]])
nextUnique :: Num a => a -> (a, a)
checkType :: Map Name Int -> Names -> Type -> [Error]
walkSpine :: Type -> (Type, [Type])
checkKind :: Name -> Map Name Int -> Int -> Names -> [Error]
findSimilarFunctionBindings :: [(Name, TpScheme)] -> [(Name, Name)] -> [Warning]
xor :: Bool -> Bool -> Bool
simplifyContext :: OrderedTypeSynonyms -> Range -> [(Int, Name)] -> TpScheme -> Warnings
mode :: Ord a => [a] -> Maybe a
frequencies :: Ord a => [a] -> [(a, Int)]
patternConstructorErrors :: Maybe TpScheme -> Name -> Names -> Int -> Bool -> Names -> [Error]
simplePattern :: Pattern -> Bool
checkTypeSignatures :: Names -> Names -> [(Name, TpScheme)] -> Errors
isSimplePattern :: Pattern -> Bool
checkExport :: Entity -> Name -> [Name] -> [Error]
equalName :: Name -> Name -> Bool
topLevelScopeInfo :: ScopeInfo -> ScopeInfo
makeErrors :: [(ScopeInfo, Entity)] -> Errors
makeWarnings :: [(ScopeInfo, Entity)] -> Warnings
data Inh_Alternative
Inh_Alternative :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> Inh_Alternative
allTypeConstructors_Inh_Alternative :: Inh_Alternative -> (Names)
allValueConstructors_Inh_Alternative :: Inh_Alternative -> (Names)
classEnvironment_Inh_Alternative :: Inh_Alternative -> (ClassEnvironment)
collectScopeInfos_Inh_Alternative :: Inh_Alternative -> ([(ScopeInfo, Entity)])
counter_Inh_Alternative :: Inh_Alternative -> (Int)
kindErrors_Inh_Alternative :: Inh_Alternative -> ([Error])
miscerrors_Inh_Alternative :: Inh_Alternative -> ([Error])
namesInScope_Inh_Alternative :: Inh_Alternative -> (Names)
options_Inh_Alternative :: Inh_Alternative -> ([Option])
orderedTypeSynonyms_Inh_Alternative :: Inh_Alternative -> (OrderedTypeSynonyms)
typeConstructors_Inh_Alternative :: Inh_Alternative -> (Map Name Int)
valueConstructors_Inh_Alternative :: Inh_Alternative -> (Map Name TpScheme)
warnings_Inh_Alternative :: Inh_Alternative -> ([Warning])
data Syn_Alternative
Syn_Alternative :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Alternative) -> (Names) -> ([Warning]) -> Syn_Alternative
collectInstances_Syn_Alternative :: Syn_Alternative -> ([(Name, Instance)])
collectScopeInfos_Syn_Alternative :: Syn_Alternative -> ([(ScopeInfo, Entity)])
counter_Syn_Alternative :: Syn_Alternative -> (Int)
kindErrors_Syn_Alternative :: Syn_Alternative -> ([Error])
miscerrors_Syn_Alternative :: Syn_Alternative -> ([Error])
self_Syn_Alternative :: Syn_Alternative -> (Alternative)
unboundNames_Syn_Alternative :: Syn_Alternative -> (Names)
warnings_Syn_Alternative :: Syn_Alternative -> ([Warning])
wrap_Alternative :: T_Alternative -> Inh_Alternative -> (Syn_Alternative)
sem_Alternative :: Alternative -> T_Alternative
newtype T_Alternative
T_Alternative :: Identity (T_Alternative_s2) -> T_Alternative
attach_T_Alternative :: T_Alternative -> Identity (T_Alternative_s2)
newtype T_Alternative_s2
C_Alternative_s2 :: (T_Alternative_v1) -> T_Alternative_s2
inv_Alternative_s2 :: T_Alternative_s2 -> (T_Alternative_v1)
data T_Alternative_s3
C_Alternative_s3 :: T_Alternative_s3
type T_Alternative_v1 = (T_Alternative_vIn1) -> (T_Alternative_vOut1)
data T_Alternative_vIn1
T_Alternative_vIn1 :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> T_Alternative_vIn1
data T_Alternative_vOut1
T_Alternative_vOut1 :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Alternative) -> (Names) -> ([Warning]) -> T_Alternative_vOut1
sem_Alternative_Hole :: T_Range -> (Integer) -> T_Alternative
sem_Alternative_Feedback :: T_Range -> (String) -> T_Alternative -> T_Alternative
sem_Alternative_Alternative :: T_Range -> T_Pattern -> T_RightHandSide -> T_Alternative
sem_Alternative_Empty :: T_Range -> T_Alternative
data Inh_Alternatives
Inh_Alternatives :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> Inh_Alternatives
allTypeConstructors_Inh_Alternatives :: Inh_Alternatives -> (Names)
allValueConstructors_Inh_Alternatives :: Inh_Alternatives -> (Names)
classEnvironment_Inh_Alternatives :: Inh_Alternatives -> (ClassEnvironment)
collectScopeInfos_Inh_Alternatives :: Inh_Alternatives -> ([(ScopeInfo, Entity)])
counter_Inh_Alternatives :: Inh_Alternatives -> (Int)
kindErrors_Inh_Alternatives :: Inh_Alternatives -> ([Error])
miscerrors_Inh_Alternatives :: Inh_Alternatives -> ([Error])
namesInScope_Inh_Alternatives :: Inh_Alternatives -> (Names)
options_Inh_Alternatives :: Inh_Alternatives -> ([Option])
orderedTypeSynonyms_Inh_Alternatives :: Inh_Alternatives -> (OrderedTypeSynonyms)
typeConstructors_Inh_Alternatives :: Inh_Alternatives -> (Map Name Int)
valueConstructors_Inh_Alternatives :: Inh_Alternatives -> (Map Name TpScheme)
warnings_Inh_Alternatives :: Inh_Alternatives -> ([Warning])
data Syn_Alternatives
Syn_Alternatives :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Alternatives) -> (Names) -> ([Warning]) -> Syn_Alternatives
collectInstances_Syn_Alternatives :: Syn_Alternatives -> ([(Name, Instance)])
collectScopeInfos_Syn_Alternatives :: Syn_Alternatives -> ([(ScopeInfo, Entity)])
counter_Syn_Alternatives :: Syn_Alternatives -> (Int)
kindErrors_Syn_Alternatives :: Syn_Alternatives -> ([Error])
miscerrors_Syn_Alternatives :: Syn_Alternatives -> ([Error])
self_Syn_Alternatives :: Syn_Alternatives -> (Alternatives)
unboundNames_Syn_Alternatives :: Syn_Alternatives -> (Names)
warnings_Syn_Alternatives :: Syn_Alternatives -> ([Warning])
wrap_Alternatives :: T_Alternatives -> Inh_Alternatives -> (Syn_Alternatives)
sem_Alternatives :: Alternatives -> T_Alternatives
newtype T_Alternatives
T_Alternatives :: Identity (T_Alternatives_s5) -> T_Alternatives
attach_T_Alternatives :: T_Alternatives -> Identity (T_Alternatives_s5)
newtype T_Alternatives_s5
C_Alternatives_s5 :: (T_Alternatives_v4) -> T_Alternatives_s5
inv_Alternatives_s5 :: T_Alternatives_s5 -> (T_Alternatives_v4)
data T_Alternatives_s6
C_Alternatives_s6 :: T_Alternatives_s6
type T_Alternatives_v4 = (T_Alternatives_vIn4) -> (T_Alternatives_vOut4)
data T_Alternatives_vIn4
T_Alternatives_vIn4 :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> T_Alternatives_vIn4
data T_Alternatives_vOut4
T_Alternatives_vOut4 :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Alternatives) -> (Names) -> ([Warning]) -> T_Alternatives_vOut4
sem_Alternatives_Cons :: T_Alternative -> T_Alternatives -> T_Alternatives
sem_Alternatives_Nil :: T_Alternatives
data Inh_AnnotatedType
Inh_AnnotatedType :: (Names) -> (Names) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> Inh_AnnotatedType
allTypeConstructors_Inh_AnnotatedType :: Inh_AnnotatedType -> (Names)
allValueConstructors_Inh_AnnotatedType :: Inh_AnnotatedType -> (Names)
counter_Inh_AnnotatedType :: Inh_AnnotatedType -> (Int)
kindErrors_Inh_AnnotatedType :: Inh_AnnotatedType -> ([Error])
miscerrors_Inh_AnnotatedType :: Inh_AnnotatedType -> ([Error])
namesInScope_Inh_AnnotatedType :: Inh_AnnotatedType -> (Names)
options_Inh_AnnotatedType :: Inh_AnnotatedType -> ([Option])
typeConstructors_Inh_AnnotatedType :: Inh_AnnotatedType -> (Map Name Int)
valueConstructors_Inh_AnnotatedType :: Inh_AnnotatedType -> (Map Name TpScheme)
warnings_Inh_AnnotatedType :: Inh_AnnotatedType -> ([Warning])
data Syn_AnnotatedType
Syn_AnnotatedType :: (Int) -> ([Error]) -> ([Error]) -> (AnnotatedType) -> (Type) -> (Names) -> (Names) -> ([Warning]) -> Syn_AnnotatedType
counter_Syn_AnnotatedType :: Syn_AnnotatedType -> (Int)
kindErrors_Syn_AnnotatedType :: Syn_AnnotatedType -> ([Error])
miscerrors_Syn_AnnotatedType :: Syn_AnnotatedType -> ([Error])
self_Syn_AnnotatedType :: Syn_AnnotatedType -> (AnnotatedType)
type_Syn_AnnotatedType :: Syn_AnnotatedType -> (Type)
typevariables_Syn_AnnotatedType :: Syn_AnnotatedType -> (Names)
unboundNames_Syn_AnnotatedType :: Syn_AnnotatedType -> (Names)
warnings_Syn_AnnotatedType :: Syn_AnnotatedType -> ([Warning])
wrap_AnnotatedType :: T_AnnotatedType -> Inh_AnnotatedType -> (Syn_AnnotatedType)
sem_AnnotatedType :: AnnotatedType -> T_AnnotatedType
newtype T_AnnotatedType
T_AnnotatedType :: Identity (T_AnnotatedType_s8) -> T_AnnotatedType
attach_T_AnnotatedType :: T_AnnotatedType -> Identity (T_AnnotatedType_s8)
newtype T_AnnotatedType_s8
C_AnnotatedType_s8 :: (T_AnnotatedType_v7) -> T_AnnotatedType_s8
inv_AnnotatedType_s8 :: T_AnnotatedType_s8 -> (T_AnnotatedType_v7)
data T_AnnotatedType_s9
C_AnnotatedType_s9 :: T_AnnotatedType_s9
type T_AnnotatedType_v7 = (T_AnnotatedType_vIn7) -> (T_AnnotatedType_vOut7)
data T_AnnotatedType_vIn7
T_AnnotatedType_vIn7 :: (Names) -> (Names) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> T_AnnotatedType_vIn7
data T_AnnotatedType_vOut7
T_AnnotatedType_vOut7 :: (Int) -> ([Error]) -> ([Error]) -> (AnnotatedType) -> (Type) -> (Names) -> (Names) -> ([Warning]) -> T_AnnotatedType_vOut7
sem_AnnotatedType_AnnotatedType :: T_Range -> (Bool) -> T_Type -> T_AnnotatedType
data Inh_AnnotatedTypes
Inh_AnnotatedTypes :: (Names) -> (Names) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> Inh_AnnotatedTypes
allTypeConstructors_Inh_AnnotatedTypes :: Inh_AnnotatedTypes -> (Names)
allValueConstructors_Inh_AnnotatedTypes :: Inh_AnnotatedTypes -> (Names)
counter_Inh_AnnotatedTypes :: Inh_AnnotatedTypes -> (Int)
kindErrors_Inh_AnnotatedTypes :: Inh_AnnotatedTypes -> ([Error])
miscerrors_Inh_AnnotatedTypes :: Inh_AnnotatedTypes -> ([Error])
namesInScope_Inh_AnnotatedTypes :: Inh_AnnotatedTypes -> (Names)
options_Inh_AnnotatedTypes :: Inh_AnnotatedTypes -> ([Option])
typeConstructors_Inh_AnnotatedTypes :: Inh_AnnotatedTypes -> (Map Name Int)
valueConstructors_Inh_AnnotatedTypes :: Inh_AnnotatedTypes -> (Map Name TpScheme)
warnings_Inh_AnnotatedTypes :: Inh_AnnotatedTypes -> ([Warning])
data Syn_AnnotatedTypes
Syn_AnnotatedTypes :: (Int) -> ([Error]) -> ([Error]) -> (AnnotatedTypes) -> (Types) -> (Names) -> (Names) -> ([Warning]) -> Syn_AnnotatedTypes
counter_Syn_AnnotatedTypes :: Syn_AnnotatedTypes -> (Int)
kindErrors_Syn_AnnotatedTypes :: Syn_AnnotatedTypes -> ([Error])
miscerrors_Syn_AnnotatedTypes :: Syn_AnnotatedTypes -> ([Error])
self_Syn_AnnotatedTypes :: Syn_AnnotatedTypes -> (AnnotatedTypes)
types_Syn_AnnotatedTypes :: Syn_AnnotatedTypes -> (Types)
typevariables_Syn_AnnotatedTypes :: Syn_AnnotatedTypes -> (Names)
unboundNames_Syn_AnnotatedTypes :: Syn_AnnotatedTypes -> (Names)
warnings_Syn_AnnotatedTypes :: Syn_AnnotatedTypes -> ([Warning])
wrap_AnnotatedTypes :: T_AnnotatedTypes -> Inh_AnnotatedTypes -> (Syn_AnnotatedTypes)
sem_AnnotatedTypes :: AnnotatedTypes -> T_AnnotatedTypes
newtype T_AnnotatedTypes
T_AnnotatedTypes :: Identity (T_AnnotatedTypes_s11) -> T_AnnotatedTypes
attach_T_AnnotatedTypes :: T_AnnotatedTypes -> Identity (T_AnnotatedTypes_s11)
newtype T_AnnotatedTypes_s11
C_AnnotatedTypes_s11 :: (T_AnnotatedTypes_v10) -> T_AnnotatedTypes_s11
inv_AnnotatedTypes_s11 :: T_AnnotatedTypes_s11 -> (T_AnnotatedTypes_v10)
data T_AnnotatedTypes_s12
C_AnnotatedTypes_s12 :: T_AnnotatedTypes_s12
type T_AnnotatedTypes_v10 = (T_AnnotatedTypes_vIn10) -> (T_AnnotatedTypes_vOut10)
data T_AnnotatedTypes_vIn10
T_AnnotatedTypes_vIn10 :: (Names) -> (Names) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> T_AnnotatedTypes_vIn10
data T_AnnotatedTypes_vOut10
T_AnnotatedTypes_vOut10 :: (Int) -> ([Error]) -> ([Error]) -> (AnnotatedTypes) -> (Types) -> (Names) -> (Names) -> ([Warning]) -> T_AnnotatedTypes_vOut10
sem_AnnotatedTypes_Cons :: T_AnnotatedType -> T_AnnotatedTypes -> T_AnnotatedTypes
sem_AnnotatedTypes_Nil :: T_AnnotatedTypes
data Inh_Body
Inh_Body :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> ([(Name, Int)]) -> ([(Name, (Int, Tps -> Tp))]) -> ([(Name, TpScheme)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([(Name, (Int, Assoc))]) -> ([Option]) -> (OrderedTypeSynonyms) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> Inh_Body
allTypeConstructors_Inh_Body :: Inh_Body -> (Names)
allValueConstructors_Inh_Body :: Inh_Body -> (Names)
classEnvironment_Inh_Body :: Inh_Body -> (ClassEnvironment)
collectScopeInfos_Inh_Body :: Inh_Body -> ([(ScopeInfo, Entity)])
collectTypeConstructors_Inh_Body :: Inh_Body -> ([(Name, Int)])
collectTypeSynonyms_Inh_Body :: Inh_Body -> ([(Name, (Int, Tps -> Tp))])
collectValueConstructors_Inh_Body :: Inh_Body -> ([(Name, TpScheme)])
counter_Inh_Body :: Inh_Body -> (Int)
kindErrors_Inh_Body :: Inh_Body -> ([Error])
miscerrors_Inh_Body :: Inh_Body -> ([Error])
namesInScope_Inh_Body :: Inh_Body -> (Names)
operatorFixities_Inh_Body :: Inh_Body -> ([(Name, (Int, Assoc))])
options_Inh_Body :: Inh_Body -> ([Option])
orderedTypeSynonyms_Inh_Body :: Inh_Body -> (OrderedTypeSynonyms)
typeConstructors_Inh_Body :: Inh_Body -> (Map Name Int)
valueConstructors_Inh_Body :: Inh_Body -> (Map Name TpScheme)
warnings_Inh_Body :: Inh_Body -> ([Warning])
data Syn_Body
Syn_Body :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> ([(Name, Int)]) -> ([(Name, (Int, Tps -> Tp))]) -> ([(Name, TpScheme)]) -> (Int) -> (Names) -> (Names) -> ([Error]) -> ([Error]) -> ([(Name, (Int, Assoc))]) -> (Body) -> ([(Name, TpScheme)]) -> (Names) -> ([Warning]) -> Syn_Body
collectInstances_Syn_Body :: Syn_Body -> ([(Name, Instance)])
collectScopeInfos_Syn_Body :: Syn_Body -> ([(ScopeInfo, Entity)])
collectTypeConstructors_Syn_Body :: Syn_Body -> ([(Name, Int)])
collectTypeSynonyms_Syn_Body :: Syn_Body -> ([(Name, (Int, Tps -> Tp))])
collectValueConstructors_Syn_Body :: Syn_Body -> ([(Name, TpScheme)])
counter_Syn_Body :: Syn_Body -> (Int)
declVarNames_Syn_Body :: Syn_Body -> (Names)
importedModules_Syn_Body :: Syn_Body -> (Names)
kindErrors_Syn_Body :: Syn_Body -> ([Error])
miscerrors_Syn_Body :: Syn_Body -> ([Error])
operatorFixities_Syn_Body :: Syn_Body -> ([(Name, (Int, Assoc))])
self_Syn_Body :: Syn_Body -> (Body)
typeSignatures_Syn_Body :: Syn_Body -> ([(Name, TpScheme)])
unboundNames_Syn_Body :: Syn_Body -> (Names)
warnings_Syn_Body :: Syn_Body -> ([Warning])
wrap_Body :: T_Body -> Inh_Body -> (Syn_Body)
sem_Body :: Body -> T_Body
newtype T_Body
T_Body :: Identity (T_Body_s14) -> T_Body
attach_T_Body :: T_Body -> Identity (T_Body_s14)
newtype T_Body_s14
C_Body_s14 :: (T_Body_v13) -> T_Body_s14
inv_Body_s14 :: T_Body_s14 -> (T_Body_v13)
data T_Body_s15
C_Body_s15 :: T_Body_s15
type T_Body_v13 = (T_Body_vIn13) -> (T_Body_vOut13)
data T_Body_vIn13
T_Body_vIn13 :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> ([(Name, Int)]) -> ([(Name, (Int, Tps -> Tp))]) -> ([(Name, TpScheme)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([(Name, (Int, Assoc))]) -> ([Option]) -> (OrderedTypeSynonyms) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> T_Body_vIn13
data T_Body_vOut13
T_Body_vOut13 :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> ([(Name, Int)]) -> ([(Name, (Int, Tps -> Tp))]) -> ([(Name, TpScheme)]) -> (Int) -> (Names) -> (Names) -> ([Error]) -> ([Error]) -> ([(Name, (Int, Assoc))]) -> (Body) -> ([(Name, TpScheme)]) -> (Names) -> ([Warning]) -> T_Body_vOut13
sem_Body_Hole :: T_Range -> (Integer) -> T_Body
sem_Body_Body :: T_Range -> T_ImportDeclarations -> T_Declarations -> T_Body
data Inh_Constructor
Inh_Constructor :: (Names) -> (Names) -> ([(Name, TpScheme)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (SimpleType) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> Inh_Constructor
allTypeConstructors_Inh_Constructor :: Inh_Constructor -> (Names)
allValueConstructors_Inh_Constructor :: Inh_Constructor -> (Names)
collectValueConstructors_Inh_Constructor :: Inh_Constructor -> ([(Name, TpScheme)])
counter_Inh_Constructor :: Inh_Constructor -> (Int)
kindErrors_Inh_Constructor :: Inh_Constructor -> ([Error])
miscerrors_Inh_Constructor :: Inh_Constructor -> ([Error])
namesInScope_Inh_Constructor :: Inh_Constructor -> (Names)
options_Inh_Constructor :: Inh_Constructor -> ([Option])
simpletype_Inh_Constructor :: Inh_Constructor -> (SimpleType)
typeConstructors_Inh_Constructor :: Inh_Constructor -> (Map Name Int)
valueConstructors_Inh_Constructor :: Inh_Constructor -> (Map Name TpScheme)
warnings_Inh_Constructor :: Inh_Constructor -> ([Warning])
data Syn_Constructor
Syn_Constructor :: ([(Name, TpScheme)]) -> (Int) -> ([Error]) -> ([Error]) -> (Tps) -> (Constructor) -> (Names) -> (Names) -> ([Warning]) -> Syn_Constructor
collectValueConstructors_Syn_Constructor :: Syn_Constructor -> ([(Name, TpScheme)])
counter_Syn_Constructor :: Syn_Constructor -> (Int)
kindErrors_Syn_Constructor :: Syn_Constructor -> ([Error])
miscerrors_Syn_Constructor :: Syn_Constructor -> ([Error])
parameterTypes_Syn_Constructor :: Syn_Constructor -> (Tps)
self_Syn_Constructor :: Syn_Constructor -> (Constructor)
typevariables_Syn_Constructor :: Syn_Constructor -> (Names)
unboundNames_Syn_Constructor :: Syn_Constructor -> (Names)
warnings_Syn_Constructor :: Syn_Constructor -> ([Warning])
wrap_Constructor :: T_Constructor -> Inh_Constructor -> (Syn_Constructor)
sem_Constructor :: Constructor -> T_Constructor
newtype T_Constructor
T_Constructor :: Identity (T_Constructor_s17) -> T_Constructor
attach_T_Constructor :: T_Constructor -> Identity (T_Constructor_s17)
newtype T_Constructor_s17
C_Constructor_s17 :: (T_Constructor_v16) -> T_Constructor_s17
inv_Constructor_s17 :: T_Constructor_s17 -> (T_Constructor_v16)
data T_Constructor_s18
C_Constructor_s18 :: T_Constructor_s18
type T_Constructor_v16 = (T_Constructor_vIn16) -> (T_Constructor_vOut16)
data T_Constructor_vIn16
T_Constructor_vIn16 :: (Names) -> (Names) -> ([(Name, TpScheme)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (SimpleType) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> T_Constructor_vIn16
data T_Constructor_vOut16
T_Constructor_vOut16 :: ([(Name, TpScheme)]) -> (Int) -> ([Error]) -> ([Error]) -> (Tps) -> (Constructor) -> (Names) -> (Names) -> ([Warning]) -> T_Constructor_vOut16
sem_Constructor_Constructor :: T_Range -> T_Name -> T_AnnotatedTypes -> T_Constructor
sem_Constructor_Infix :: T_Range -> T_AnnotatedType -> T_Name -> T_AnnotatedType -> T_Constructor
sem_Constructor_Record :: T_Range -> T_Name -> T_FieldDeclarations -> T_Constructor
data Inh_Constructors
Inh_Constructors :: (Names) -> (Names) -> ([(Name, TpScheme)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (SimpleType) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> Inh_Constructors
allTypeConstructors_Inh_Constructors :: Inh_Constructors -> (Names)
allValueConstructors_Inh_Constructors :: Inh_Constructors -> (Names)
collectValueConstructors_Inh_Constructors :: Inh_Constructors -> ([(Name, TpScheme)])
counter_Inh_Constructors :: Inh_Constructors -> (Int)
kindErrors_Inh_Constructors :: Inh_Constructors -> ([Error])
miscerrors_Inh_Constructors :: Inh_Constructors -> ([Error])
namesInScope_Inh_Constructors :: Inh_Constructors -> (Names)
options_Inh_Constructors :: Inh_Constructors -> ([Option])
simpletype_Inh_Constructors :: Inh_Constructors -> (SimpleType)
typeConstructors_Inh_Constructors :: Inh_Constructors -> (Map Name Int)
valueConstructors_Inh_Constructors :: Inh_Constructors -> (Map Name TpScheme)
warnings_Inh_Constructors :: Inh_Constructors -> ([Warning])
data Syn_Constructors
Syn_Constructors :: ([(Name, TpScheme)]) -> (Int) -> ([Error]) -> ([Error]) -> (Tps) -> (Constructors) -> (Names) -> (Names) -> ([Warning]) -> Syn_Constructors
collectValueConstructors_Syn_Constructors :: Syn_Constructors -> ([(Name, TpScheme)])
counter_Syn_Constructors :: Syn_Constructors -> (Int)
kindErrors_Syn_Constructors :: Syn_Constructors -> ([Error])
miscerrors_Syn_Constructors :: Syn_Constructors -> ([Error])
parameterTypes_Syn_Constructors :: Syn_Constructors -> (Tps)
self_Syn_Constructors :: Syn_Constructors -> (Constructors)
typevariables_Syn_Constructors :: Syn_Constructors -> (Names)
unboundNames_Syn_Constructors :: Syn_Constructors -> (Names)
warnings_Syn_Constructors :: Syn_Constructors -> ([Warning])
wrap_Constructors :: T_Constructors -> Inh_Constructors -> (Syn_Constructors)
sem_Constructors :: Constructors -> T_Constructors
newtype T_Constructors
T_Constructors :: Identity (T_Constructors_s20) -> T_Constructors
attach_T_Constructors :: T_Constructors -> Identity (T_Constructors_s20)
newtype T_Constructors_s20
C_Constructors_s20 :: (T_Constructors_v19) -> T_Constructors_s20
inv_Constructors_s20 :: T_Constructors_s20 -> (T_Constructors_v19)
data T_Constructors_s21
C_Constructors_s21 :: T_Constructors_s21
type T_Constructors_v19 = (T_Constructors_vIn19) -> (T_Constructors_vOut19)
data T_Constructors_vIn19
T_Constructors_vIn19 :: (Names) -> (Names) -> ([(Name, TpScheme)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (SimpleType) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> T_Constructors_vIn19
data T_Constructors_vOut19
T_Constructors_vOut19 :: ([(Name, TpScheme)]) -> (Int) -> ([Error]) -> ([Error]) -> (Tps) -> (Constructors) -> (Names) -> (Names) -> ([Warning]) -> T_Constructors_vOut19
sem_Constructors_Cons :: T_Constructor -> T_Constructors -> T_Constructors
sem_Constructors_Nil :: T_Constructors
data Inh_ContextItem
Inh_ContextItem :: (Names) -> ([Error]) -> ([Option]) -> (Map Name Int) -> ([Warning]) -> Inh_ContextItem
allTypeConstructors_Inh_ContextItem :: Inh_ContextItem -> (Names)
miscerrors_Inh_ContextItem :: Inh_ContextItem -> ([Error])
options_Inh_ContextItem :: Inh_ContextItem -> ([Option])
typeConstructors_Inh_ContextItem :: Inh_ContextItem -> (Map Name Int)
warnings_Inh_ContextItem :: Inh_ContextItem -> ([Warning])
data Syn_ContextItem
Syn_ContextItem :: ([Range]) -> ([Name]) -> ([Error]) -> (ContextItem) -> ([Warning]) -> Syn_ContextItem
contextRanges_Syn_ContextItem :: Syn_ContextItem -> ([Range])
contextVars_Syn_ContextItem :: Syn_ContextItem -> ([Name])
miscerrors_Syn_ContextItem :: Syn_ContextItem -> ([Error])
self_Syn_ContextItem :: Syn_ContextItem -> (ContextItem)
warnings_Syn_ContextItem :: Syn_ContextItem -> ([Warning])
wrap_ContextItem :: T_ContextItem -> Inh_ContextItem -> (Syn_ContextItem)
sem_ContextItem :: ContextItem -> T_ContextItem
newtype T_ContextItem
T_ContextItem :: Identity (T_ContextItem_s23) -> T_ContextItem
attach_T_ContextItem :: T_ContextItem -> Identity (T_ContextItem_s23)
newtype T_ContextItem_s23
C_ContextItem_s23 :: (T_ContextItem_v22) -> T_ContextItem_s23
inv_ContextItem_s23 :: T_ContextItem_s23 -> (T_ContextItem_v22)
data T_ContextItem_s24
C_ContextItem_s24 :: T_ContextItem_s24
type T_ContextItem_v22 = (T_ContextItem_vIn22) -> (T_ContextItem_vOut22)
data T_ContextItem_vIn22
T_ContextItem_vIn22 :: (Names) -> ([Error]) -> ([Option]) -> (Map Name Int) -> ([Warning]) -> T_ContextItem_vIn22
data T_ContextItem_vOut22
T_ContextItem_vOut22 :: ([Range]) -> ([Name]) -> ([Error]) -> (ContextItem) -> ([Warning]) -> T_ContextItem_vOut22
sem_ContextItem_ContextItem :: T_Range -> T_Name -> T_Types -> T_ContextItem
data Inh_ContextItems
Inh_ContextItems :: (Names) -> ([Error]) -> ([Option]) -> (Map Name Int) -> ([Warning]) -> Inh_ContextItems
allTypeConstructors_Inh_ContextItems :: Inh_ContextItems -> (Names)
miscerrors_Inh_ContextItems :: Inh_ContextItems -> ([Error])
options_Inh_ContextItems :: Inh_ContextItems -> ([Option])
typeConstructors_Inh_ContextItems :: Inh_ContextItems -> (Map Name Int)
warnings_Inh_ContextItems :: Inh_ContextItems -> ([Warning])
data Syn_ContextItems
Syn_ContextItems :: ([Range]) -> ([Name]) -> ([Error]) -> (ContextItems) -> ([Warning]) -> Syn_ContextItems
contextRanges_Syn_ContextItems :: Syn_ContextItems -> ([Range])
contextVars_Syn_ContextItems :: Syn_ContextItems -> ([Name])
miscerrors_Syn_ContextItems :: Syn_ContextItems -> ([Error])
self_Syn_ContextItems :: Syn_ContextItems -> (ContextItems)
warnings_Syn_ContextItems :: Syn_ContextItems -> ([Warning])
wrap_ContextItems :: T_ContextItems -> Inh_ContextItems -> (Syn_ContextItems)
sem_ContextItems :: ContextItems -> T_ContextItems
newtype T_ContextItems
T_ContextItems :: Identity (T_ContextItems_s26) -> T_ContextItems
attach_T_ContextItems :: T_ContextItems -> Identity (T_ContextItems_s26)
newtype T_ContextItems_s26
C_ContextItems_s26 :: (T_ContextItems_v25) -> T_ContextItems_s26
inv_ContextItems_s26 :: T_ContextItems_s26 -> (T_ContextItems_v25)
data T_ContextItems_s27
C_ContextItems_s27 :: T_ContextItems_s27
type T_ContextItems_v25 = (T_ContextItems_vIn25) -> (T_ContextItems_vOut25)
data T_ContextItems_vIn25
T_ContextItems_vIn25 :: (Names) -> ([Error]) -> ([Option]) -> (Map Name Int) -> ([Warning]) -> T_ContextItems_vIn25
data T_ContextItems_vOut25
T_ContextItems_vOut25 :: ([Range]) -> ([Name]) -> ([Error]) -> (ContextItems) -> ([Warning]) -> T_ContextItems_vOut25
sem_ContextItems_Cons :: T_ContextItem -> T_ContextItems -> T_ContextItems
sem_ContextItems_Nil :: T_ContextItems
data Inh_Declaration
Inh_Declaration :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> ([(Name, Int)]) -> ([(Name, (Int, Tps -> Tp))]) -> ([(Name, TpScheme)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([(Name, (Int, Assoc))]) -> ([Option]) -> (OrderedTypeSynonyms) -> (Maybe Name) -> ([(Name, Name)]) -> (Map Name Int) -> ([(Name, TpScheme)]) -> (Map Name TpScheme) -> ([Warning]) -> Inh_Declaration
allTypeConstructors_Inh_Declaration :: Inh_Declaration -> (Names)
allValueConstructors_Inh_Declaration :: Inh_Declaration -> (Names)
classEnvironment_Inh_Declaration :: Inh_Declaration -> (ClassEnvironment)
collectScopeInfos_Inh_Declaration :: Inh_Declaration -> ([(ScopeInfo, Entity)])
collectTypeConstructors_Inh_Declaration :: Inh_Declaration -> ([(Name, Int)])
collectTypeSynonyms_Inh_Declaration :: Inh_Declaration -> ([(Name, (Int, Tps -> Tp))])
collectValueConstructors_Inh_Declaration :: Inh_Declaration -> ([(Name, TpScheme)])
counter_Inh_Declaration :: Inh_Declaration -> (Int)
kindErrors_Inh_Declaration :: Inh_Declaration -> ([Error])
miscerrors_Inh_Declaration :: Inh_Declaration -> ([Error])
namesInScope_Inh_Declaration :: Inh_Declaration -> (Names)
operatorFixities_Inh_Declaration :: Inh_Declaration -> ([(Name, (Int, Assoc))])
options_Inh_Declaration :: Inh_Declaration -> ([Option])
orderedTypeSynonyms_Inh_Declaration :: Inh_Declaration -> (OrderedTypeSynonyms)
previousWasAlsoFB_Inh_Declaration :: Inh_Declaration -> (Maybe Name)
suspiciousFBs_Inh_Declaration :: Inh_Declaration -> ([(Name, Name)])
typeConstructors_Inh_Declaration :: Inh_Declaration -> (Map Name Int)
typeSignatures_Inh_Declaration :: Inh_Declaration -> ([(Name, TpScheme)])
valueConstructors_Inh_Declaration :: Inh_Declaration -> (Map Name TpScheme)
warnings_Inh_Declaration :: Inh_Declaration -> ([Warning])
data Syn_Declaration
Syn_Declaration :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> ([(Name, Int)]) -> ([(Name, (Int, Tps -> Tp))]) -> ([(Name, TpScheme)]) -> (Int) -> (Names) -> ([Error]) -> ([Error]) -> ([(Name, (Int, Assoc))]) -> (Maybe Name) -> (Names) -> (Declaration) -> ([(Name, Name)]) -> ([(Name, TpScheme)]) -> (Names) -> ([Warning]) -> Syn_Declaration
collectInstances_Syn_Declaration :: Syn_Declaration -> ([(Name, Instance)])
collectScopeInfos_Syn_Declaration :: Syn_Declaration -> ([(ScopeInfo, Entity)])
collectTypeConstructors_Syn_Declaration :: Syn_Declaration -> ([(Name, Int)])
collectTypeSynonyms_Syn_Declaration :: Syn_Declaration -> ([(Name, (Int, Tps -> Tp))])
collectValueConstructors_Syn_Declaration :: Syn_Declaration -> ([(Name, TpScheme)])
counter_Syn_Declaration :: Syn_Declaration -> (Int)
declVarNames_Syn_Declaration :: Syn_Declaration -> (Names)
kindErrors_Syn_Declaration :: Syn_Declaration -> ([Error])
miscerrors_Syn_Declaration :: Syn_Declaration -> ([Error])
operatorFixities_Syn_Declaration :: Syn_Declaration -> ([(Name, (Int, Assoc))])
previousWasAlsoFB_Syn_Declaration :: Syn_Declaration -> (Maybe Name)
restrictedNames_Syn_Declaration :: Syn_Declaration -> (Names)
self_Syn_Declaration :: Syn_Declaration -> (Declaration)
suspiciousFBs_Syn_Declaration :: Syn_Declaration -> ([(Name, Name)])
typeSignatures_Syn_Declaration :: Syn_Declaration -> ([(Name, TpScheme)])
unboundNames_Syn_Declaration :: Syn_Declaration -> (Names)
warnings_Syn_Declaration :: Syn_Declaration -> ([Warning])
wrap_Declaration :: T_Declaration -> Inh_Declaration -> (Syn_Declaration)
sem_Declaration :: Declaration -> T_Declaration
newtype T_Declaration
T_Declaration :: Identity (T_Declaration_s29) -> T_Declaration
attach_T_Declaration :: T_Declaration -> Identity (T_Declaration_s29)
newtype T_Declaration_s29
C_Declaration_s29 :: (T_Declaration_v28) -> T_Declaration_s29
inv_Declaration_s29 :: T_Declaration_s29 -> (T_Declaration_v28)
data T_Declaration_s30
C_Declaration_s30 :: T_Declaration_s30
type T_Declaration_v28 = (T_Declaration_vIn28) -> (T_Declaration_vOut28)
data T_Declaration_vIn28
T_Declaration_vIn28 :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> ([(Name, Int)]) -> ([(Name, (Int, Tps -> Tp))]) -> ([(Name, TpScheme)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([(Name, (Int, Assoc))]) -> ([Option]) -> (OrderedTypeSynonyms) -> (Maybe Name) -> ([(Name, Name)]) -> (Map Name Int) -> ([(Name, TpScheme)]) -> (Map Name TpScheme) -> ([Warning]) -> T_Declaration_vIn28
data T_Declaration_vOut28
T_Declaration_vOut28 :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> ([(Name, Int)]) -> ([(Name, (Int, Tps -> Tp))]) -> ([(Name, TpScheme)]) -> (Int) -> (Names) -> ([Error]) -> ([Error]) -> ([(Name, (Int, Assoc))]) -> (Maybe Name) -> (Names) -> (Declaration) -> ([(Name, Name)]) -> ([(Name, TpScheme)]) -> (Names) -> ([Warning]) -> T_Declaration_vOut28
sem_Declaration_Hole :: T_Range -> (Integer) -> T_Declaration
sem_Declaration_Type :: T_Range -> T_SimpleType -> T_Type -> T_Declaration
sem_Declaration_Data :: T_Range -> T_ContextItems -> T_SimpleType -> T_Constructors -> T_Names -> T_Declaration
sem_Declaration_Newtype :: T_Range -> T_ContextItems -> T_SimpleType -> T_Constructor -> T_Names -> T_Declaration
sem_Declaration_Class :: T_Range -> T_ContextItems -> T_SimpleType -> T_MaybeDeclarations -> T_Declaration
sem_Declaration_Instance :: T_Range -> T_ContextItems -> T_Name -> T_Types -> T_MaybeDeclarations -> T_Declaration
sem_Declaration_Default :: T_Range -> T_Types -> T_Declaration
sem_Declaration_FunctionBindings :: T_Range -> T_FunctionBindings -> T_Declaration
sem_Declaration_PatternBinding :: T_Range -> T_Pattern -> T_RightHandSide -> T_Declaration
sem_Declaration_TypeSignature :: T_Range -> T_Names -> T_Type -> T_Declaration
sem_Declaration_Fixity :: T_Range -> T_Fixity -> T_MaybeInt -> T_Names -> T_Declaration
sem_Declaration_Empty :: T_Range -> T_Declaration
data Inh_Declarations
Inh_Declarations :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> ([(Name, Int)]) -> ([(Name, (Int, Tps -> Tp))]) -> ([(Name, TpScheme)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([(Name, (Int, Assoc))]) -> ([Option]) -> (OrderedTypeSynonyms) -> (Maybe Name) -> ([(Name, Name)]) -> (Map Name Int) -> ([(Name, TpScheme)]) -> (Map Name TpScheme) -> ([Warning]) -> Inh_Declarations
allTypeConstructors_Inh_Declarations :: Inh_Declarations -> (Names)
allValueConstructors_Inh_Declarations :: Inh_Declarations -> (Names)
classEnvironment_Inh_Declarations :: Inh_Declarations -> (ClassEnvironment)
collectScopeInfos_Inh_Declarations :: Inh_Declarations -> ([(ScopeInfo, Entity)])
collectTypeConstructors_Inh_Declarations :: Inh_Declarations -> ([(Name, Int)])
collectTypeSynonyms_Inh_Declarations :: Inh_Declarations -> ([(Name, (Int, Tps -> Tp))])
collectValueConstructors_Inh_Declarations :: Inh_Declarations -> ([(Name, TpScheme)])
counter_Inh_Declarations :: Inh_Declarations -> (Int)
kindErrors_Inh_Declarations :: Inh_Declarations -> ([Error])
miscerrors_Inh_Declarations :: Inh_Declarations -> ([Error])
namesInScope_Inh_Declarations :: Inh_Declarations -> (Names)
operatorFixities_Inh_Declarations :: Inh_Declarations -> ([(Name, (Int, Assoc))])
options_Inh_Declarations :: Inh_Declarations -> ([Option])
orderedTypeSynonyms_Inh_Declarations :: Inh_Declarations -> (OrderedTypeSynonyms)
previousWasAlsoFB_Inh_Declarations :: Inh_Declarations -> (Maybe Name)
suspiciousFBs_Inh_Declarations :: Inh_Declarations -> ([(Name, Name)])
typeConstructors_Inh_Declarations :: Inh_Declarations -> (Map Name Int)
typeSignatures_Inh_Declarations :: Inh_Declarations -> ([(Name, TpScheme)])
valueConstructors_Inh_Declarations :: Inh_Declarations -> (Map Name TpScheme)
warnings_Inh_Declarations :: Inh_Declarations -> ([Warning])
data Syn_Declarations
Syn_Declarations :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> ([(Name, Int)]) -> ([(Name, (Int, Tps -> Tp))]) -> ([(Name, TpScheme)]) -> (Int) -> (Names) -> ([Error]) -> ([Error]) -> ([(Name, (Int, Assoc))]) -> (Maybe Name) -> (Names) -> (Declarations) -> ([(Name, Name)]) -> ([(Name, TpScheme)]) -> (Names) -> ([Warning]) -> Syn_Declarations
collectInstances_Syn_Declarations :: Syn_Declarations -> ([(Name, Instance)])
collectScopeInfos_Syn_Declarations :: Syn_Declarations -> ([(ScopeInfo, Entity)])
collectTypeConstructors_Syn_Declarations :: Syn_Declarations -> ([(Name, Int)])
collectTypeSynonyms_Syn_Declarations :: Syn_Declarations -> ([(Name, (Int, Tps -> Tp))])
collectValueConstructors_Syn_Declarations :: Syn_Declarations -> ([(Name, TpScheme)])
counter_Syn_Declarations :: Syn_Declarations -> (Int)
declVarNames_Syn_Declarations :: Syn_Declarations -> (Names)
kindErrors_Syn_Declarations :: Syn_Declarations -> ([Error])
miscerrors_Syn_Declarations :: Syn_Declarations -> ([Error])
operatorFixities_Syn_Declarations :: Syn_Declarations -> ([(Name, (Int, Assoc))])
previousWasAlsoFB_Syn_Declarations :: Syn_Declarations -> (Maybe Name)
restrictedNames_Syn_Declarations :: Syn_Declarations -> (Names)
self_Syn_Declarations :: Syn_Declarations -> (Declarations)
suspiciousFBs_Syn_Declarations :: Syn_Declarations -> ([(Name, Name)])
typeSignatures_Syn_Declarations :: Syn_Declarations -> ([(Name, TpScheme)])
unboundNames_Syn_Declarations :: Syn_Declarations -> (Names)
warnings_Syn_Declarations :: Syn_Declarations -> ([Warning])
wrap_Declarations :: T_Declarations -> Inh_Declarations -> (Syn_Declarations)
sem_Declarations :: Declarations -> T_Declarations
newtype T_Declarations
T_Declarations :: Identity (T_Declarations_s32) -> T_Declarations
attach_T_Declarations :: T_Declarations -> Identity (T_Declarations_s32)
newtype T_Declarations_s32
C_Declarations_s32 :: (T_Declarations_v31) -> T_Declarations_s32
inv_Declarations_s32 :: T_Declarations_s32 -> (T_Declarations_v31)
data T_Declarations_s33
C_Declarations_s33 :: T_Declarations_s33
type T_Declarations_v31 = (T_Declarations_vIn31) -> (T_Declarations_vOut31)
data T_Declarations_vIn31
T_Declarations_vIn31 :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> ([(Name, Int)]) -> ([(Name, (Int, Tps -> Tp))]) -> ([(Name, TpScheme)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([(Name, (Int, Assoc))]) -> ([Option]) -> (OrderedTypeSynonyms) -> (Maybe Name) -> ([(Name, Name)]) -> (Map Name Int) -> ([(Name, TpScheme)]) -> (Map Name TpScheme) -> ([Warning]) -> T_Declarations_vIn31
data T_Declarations_vOut31
T_Declarations_vOut31 :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> ([(Name, Int)]) -> ([(Name, (Int, Tps -> Tp))]) -> ([(Name, TpScheme)]) -> (Int) -> (Names) -> ([Error]) -> ([Error]) -> ([(Name, (Int, Assoc))]) -> (Maybe Name) -> (Names) -> (Declarations) -> ([(Name, Name)]) -> ([(Name, TpScheme)]) -> (Names) -> ([Warning]) -> T_Declarations_vOut31
sem_Declarations_Cons :: T_Declaration -> T_Declarations -> T_Declarations
sem_Declarations_Nil :: T_Declarations
data Inh_Export
Inh_Export :: (Names) -> (Names) -> (Names) -> (Names) -> Inh_Export
consInScope_Inh_Export :: Inh_Export -> (Names)
modulesInScope_Inh_Export :: Inh_Export -> (Names)
namesInScop_Inh_Export :: Inh_Export -> (Names)
tyconsInScope_Inh_Export :: Inh_Export -> (Names)
data Syn_Export
Syn_Export :: ([Error]) -> (Export) -> Syn_Export
exportErrors_Syn_Export :: Syn_Export -> ([Error])
self_Syn_Export :: Syn_Export -> (Export)
wrap_Export :: T_Export -> Inh_Export -> (Syn_Export)
sem_Export :: Export -> T_Export
newtype T_Export
T_Export :: Identity (T_Export_s35) -> T_Export
attach_T_Export :: T_Export -> Identity (T_Export_s35)
newtype T_Export_s35
C_Export_s35 :: (T_Export_v34) -> T_Export_s35
inv_Export_s35 :: T_Export_s35 -> (T_Export_v34)
data T_Export_s36
C_Export_s36 :: T_Export_s36
type T_Export_v34 = (T_Export_vIn34) -> (T_Export_vOut34)
data T_Export_vIn34
T_Export_vIn34 :: (Names) -> (Names) -> (Names) -> (Names) -> T_Export_vIn34
data T_Export_vOut34
T_Export_vOut34 :: ([Error]) -> (Export) -> T_Export_vOut34
sem_Export_Variable :: T_Range -> T_Name -> T_Export
sem_Export_TypeOrClass :: T_Range -> T_Name -> T_MaybeNames -> T_Export
sem_Export_TypeOrClassComplete :: T_Range -> T_Name -> T_Export
sem_Export_Module :: T_Range -> T_Name -> T_Export
data Inh_Exports
Inh_Exports :: (Names) -> (Names) -> (Names) -> (Names) -> Inh_Exports
consInScope_Inh_Exports :: Inh_Exports -> (Names)
modulesInScope_Inh_Exports :: Inh_Exports -> (Names)
namesInScop_Inh_Exports :: Inh_Exports -> (Names)
tyconsInScope_Inh_Exports :: Inh_Exports -> (Names)
data Syn_Exports
Syn_Exports :: ([Error]) -> (Exports) -> Syn_Exports
exportErrors_Syn_Exports :: Syn_Exports -> ([Error])
self_Syn_Exports :: Syn_Exports -> (Exports)
wrap_Exports :: T_Exports -> Inh_Exports -> (Syn_Exports)
sem_Exports :: Exports -> T_Exports
newtype T_Exports
T_Exports :: Identity (T_Exports_s38) -> T_Exports
attach_T_Exports :: T_Exports -> Identity (T_Exports_s38)
newtype T_Exports_s38
C_Exports_s38 :: (T_Exports_v37) -> T_Exports_s38
inv_Exports_s38 :: T_Exports_s38 -> (T_Exports_v37)
data T_Exports_s39
C_Exports_s39 :: T_Exports_s39
type T_Exports_v37 = (T_Exports_vIn37) -> (T_Exports_vOut37)
data T_Exports_vIn37
T_Exports_vIn37 :: (Names) -> (Names) -> (Names) -> (Names) -> T_Exports_vIn37
data T_Exports_vOut37
T_Exports_vOut37 :: ([Error]) -> (Exports) -> T_Exports_vOut37
sem_Exports_Cons :: T_Export -> T_Exports -> T_Exports
sem_Exports_Nil :: T_Exports
data Inh_Expression
Inh_Expression :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> Inh_Expression
allTypeConstructors_Inh_Expression :: Inh_Expression -> (Names)
allValueConstructors_Inh_Expression :: Inh_Expression -> (Names)
classEnvironment_Inh_Expression :: Inh_Expression -> (ClassEnvironment)
collectScopeInfos_Inh_Expression :: Inh_Expression -> ([(ScopeInfo, Entity)])
counter_Inh_Expression :: Inh_Expression -> (Int)
kindErrors_Inh_Expression :: Inh_Expression -> ([Error])
miscerrors_Inh_Expression :: Inh_Expression -> ([Error])
namesInScope_Inh_Expression :: Inh_Expression -> (Names)
options_Inh_Expression :: Inh_Expression -> ([Option])
orderedTypeSynonyms_Inh_Expression :: Inh_Expression -> (OrderedTypeSynonyms)
typeConstructors_Inh_Expression :: Inh_Expression -> (Map Name Int)
valueConstructors_Inh_Expression :: Inh_Expression -> (Map Name TpScheme)
warnings_Inh_Expression :: Inh_Expression -> ([Warning])
data Syn_Expression
Syn_Expression :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Expression) -> (Names) -> ([Warning]) -> Syn_Expression
collectInstances_Syn_Expression :: Syn_Expression -> ([(Name, Instance)])
collectScopeInfos_Syn_Expression :: Syn_Expression -> ([(ScopeInfo, Entity)])
counter_Syn_Expression :: Syn_Expression -> (Int)
kindErrors_Syn_Expression :: Syn_Expression -> ([Error])
miscerrors_Syn_Expression :: Syn_Expression -> ([Error])
self_Syn_Expression :: Syn_Expression -> (Expression)
unboundNames_Syn_Expression :: Syn_Expression -> (Names)
warnings_Syn_Expression :: Syn_Expression -> ([Warning])
wrap_Expression :: T_Expression -> Inh_Expression -> (Syn_Expression)
sem_Expression :: Expression -> T_Expression
newtype T_Expression
T_Expression :: Identity (T_Expression_s41) -> T_Expression
attach_T_Expression :: T_Expression -> Identity (T_Expression_s41)
newtype T_Expression_s41
C_Expression_s41 :: (T_Expression_v40) -> T_Expression_s41
inv_Expression_s41 :: T_Expression_s41 -> (T_Expression_v40)
data T_Expression_s42
C_Expression_s42 :: T_Expression_s42
type T_Expression_v40 = (T_Expression_vIn40) -> (T_Expression_vOut40)
data T_Expression_vIn40
T_Expression_vIn40 :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> T_Expression_vIn40
data T_Expression_vOut40
T_Expression_vOut40 :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Expression) -> (Names) -> ([Warning]) -> T_Expression_vOut40
sem_Expression_Hole :: T_Range -> (Integer) -> T_Expression
sem_Expression_Feedback :: T_Range -> (String) -> T_Expression -> T_Expression
sem_Expression_MustUse :: T_Range -> T_Expression -> T_Expression
sem_Expression_Literal :: T_Range -> T_Literal -> T_Expression
sem_Expression_Variable :: T_Range -> T_Name -> T_Expression
sem_Expression_Constructor :: T_Range -> T_Name -> T_Expression
sem_Expression_Parenthesized :: T_Range -> T_Expression -> T_Expression
sem_Expression_NormalApplication :: T_Range -> T_Expression -> T_Expressions -> T_Expression
sem_Expression_InfixApplication :: T_Range -> T_MaybeExpression -> T_Expression -> T_MaybeExpression -> T_Expression
sem_Expression_If :: T_Range -> T_Expression -> T_Expression -> T_Expression -> T_Expression
sem_Expression_Lambda :: T_Range -> T_Patterns -> T_Expression -> T_Expression
sem_Expression_Case :: T_Range -> T_Expression -> T_Alternatives -> T_Expression
sem_Expression_Let :: T_Range -> T_Declarations -> T_Expression -> T_Expression
sem_Expression_Do :: T_Range -> T_Statements -> T_Expression
sem_Expression_List :: T_Range -> T_Expressions -> T_Expression
sem_Expression_Tuple :: T_Range -> T_Expressions -> T_Expression
sem_Expression_Comprehension :: T_Range -> T_Expression -> T_Qualifiers -> T_Expression
sem_Expression_Typed :: T_Range -> T_Expression -> T_Type -> T_Expression
sem_Expression_RecordConstruction :: T_Range -> T_Name -> T_RecordExpressionBindings -> T_Expression
sem_Expression_RecordUpdate :: T_Range -> T_Expression -> T_RecordExpressionBindings -> T_Expression
sem_Expression_Enum :: T_Range -> T_Expression -> T_MaybeExpression -> T_MaybeExpression -> T_Expression
sem_Expression_Negate :: T_Range -> T_Expression -> T_Expression
sem_Expression_NegateFloat :: T_Range -> T_Expression -> T_Expression
data Inh_Expressions
Inh_Expressions :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> Inh_Expressions
allTypeConstructors_Inh_Expressions :: Inh_Expressions -> (Names)
allValueConstructors_Inh_Expressions :: Inh_Expressions -> (Names)
classEnvironment_Inh_Expressions :: Inh_Expressions -> (ClassEnvironment)
collectScopeInfos_Inh_Expressions :: Inh_Expressions -> ([(ScopeInfo, Entity)])
counter_Inh_Expressions :: Inh_Expressions -> (Int)
kindErrors_Inh_Expressions :: Inh_Expressions -> ([Error])
miscerrors_Inh_Expressions :: Inh_Expressions -> ([Error])
namesInScope_Inh_Expressions :: Inh_Expressions -> (Names)
options_Inh_Expressions :: Inh_Expressions -> ([Option])
orderedTypeSynonyms_Inh_Expressions :: Inh_Expressions -> (OrderedTypeSynonyms)
typeConstructors_Inh_Expressions :: Inh_Expressions -> (Map Name Int)
valueConstructors_Inh_Expressions :: Inh_Expressions -> (Map Name TpScheme)
warnings_Inh_Expressions :: Inh_Expressions -> ([Warning])
data Syn_Expressions
Syn_Expressions :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Expressions) -> (Names) -> ([Warning]) -> Syn_Expressions
collectInstances_Syn_Expressions :: Syn_Expressions -> ([(Name, Instance)])
collectScopeInfos_Syn_Expressions :: Syn_Expressions -> ([(ScopeInfo, Entity)])
counter_Syn_Expressions :: Syn_Expressions -> (Int)
kindErrors_Syn_Expressions :: Syn_Expressions -> ([Error])
miscerrors_Syn_Expressions :: Syn_Expressions -> ([Error])
self_Syn_Expressions :: Syn_Expressions -> (Expressions)
unboundNames_Syn_Expressions :: Syn_Expressions -> (Names)
warnings_Syn_Expressions :: Syn_Expressions -> ([Warning])
wrap_Expressions :: T_Expressions -> Inh_Expressions -> (Syn_Expressions)
sem_Expressions :: Expressions -> T_Expressions
newtype T_Expressions
T_Expressions :: Identity (T_Expressions_s44) -> T_Expressions
attach_T_Expressions :: T_Expressions -> Identity (T_Expressions_s44)
newtype T_Expressions_s44
C_Expressions_s44 :: (T_Expressions_v43) -> T_Expressions_s44
inv_Expressions_s44 :: T_Expressions_s44 -> (T_Expressions_v43)
data T_Expressions_s45
C_Expressions_s45 :: T_Expressions_s45
type T_Expressions_v43 = (T_Expressions_vIn43) -> (T_Expressions_vOut43)
data T_Expressions_vIn43
T_Expressions_vIn43 :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> T_Expressions_vIn43
data T_Expressions_vOut43
T_Expressions_vOut43 :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Expressions) -> (Names) -> ([Warning]) -> T_Expressions_vOut43
sem_Expressions_Cons :: T_Expression -> T_Expressions -> T_Expressions
sem_Expressions_Nil :: T_Expressions
data Inh_FieldDeclaration
Inh_FieldDeclaration :: (Int) -> ([Error]) -> (Names) -> ([Option]) -> Inh_FieldDeclaration
counter_Inh_FieldDeclaration :: Inh_FieldDeclaration -> (Int)
miscerrors_Inh_FieldDeclaration :: Inh_FieldDeclaration -> ([Error])
namesInScope_Inh_FieldDeclaration :: Inh_FieldDeclaration -> (Names)
options_Inh_FieldDeclaration :: Inh_FieldDeclaration -> ([Option])
data Syn_FieldDeclaration
Syn_FieldDeclaration :: (Int) -> ([Error]) -> (FieldDeclaration) -> (Names) -> Syn_FieldDeclaration
counter_Syn_FieldDeclaration :: Syn_FieldDeclaration -> (Int)
miscerrors_Syn_FieldDeclaration :: Syn_FieldDeclaration -> ([Error])
self_Syn_FieldDeclaration :: Syn_FieldDeclaration -> (FieldDeclaration)
unboundNames_Syn_FieldDeclaration :: Syn_FieldDeclaration -> (Names)
wrap_FieldDeclaration :: T_FieldDeclaration -> Inh_FieldDeclaration -> (Syn_FieldDeclaration)
sem_FieldDeclaration :: FieldDeclaration -> T_FieldDeclaration
newtype T_FieldDeclaration
T_FieldDeclaration :: Identity (T_FieldDeclaration_s47) -> T_FieldDeclaration
attach_T_FieldDeclaration :: T_FieldDeclaration -> Identity (T_FieldDeclaration_s47)
newtype T_FieldDeclaration_s47
C_FieldDeclaration_s47 :: (T_FieldDeclaration_v46) -> T_FieldDeclaration_s47
inv_FieldDeclaration_s47 :: T_FieldDeclaration_s47 -> (T_FieldDeclaration_v46)
data T_FieldDeclaration_s48
C_FieldDeclaration_s48 :: T_FieldDeclaration_s48
type T_FieldDeclaration_v46 = (T_FieldDeclaration_vIn46) -> (T_FieldDeclaration_vOut46)
data T_FieldDeclaration_vIn46
T_FieldDeclaration_vIn46 :: (Int) -> ([Error]) -> (Names) -> ([Option]) -> T_FieldDeclaration_vIn46
data T_FieldDeclaration_vOut46
T_FieldDeclaration_vOut46 :: (Int) -> ([Error]) -> (FieldDeclaration) -> (Names) -> T_FieldDeclaration_vOut46
sem_FieldDeclaration_FieldDeclaration :: T_Range -> T_Names -> T_AnnotatedType -> T_FieldDeclaration
data Inh_FieldDeclarations
Inh_FieldDeclarations :: (Int) -> ([Error]) -> (Names) -> ([Option]) -> Inh_FieldDeclarations
counter_Inh_FieldDeclarations :: Inh_FieldDeclarations -> (Int)
miscerrors_Inh_FieldDeclarations :: Inh_FieldDeclarations -> ([Error])
namesInScope_Inh_FieldDeclarations :: Inh_FieldDeclarations -> (Names)
options_Inh_FieldDeclarations :: Inh_FieldDeclarations -> ([Option])
data Syn_FieldDeclarations
Syn_FieldDeclarations :: (Int) -> ([Error]) -> (FieldDeclarations) -> (Names) -> Syn_FieldDeclarations
counter_Syn_FieldDeclarations :: Syn_FieldDeclarations -> (Int)
miscerrors_Syn_FieldDeclarations :: Syn_FieldDeclarations -> ([Error])
self_Syn_FieldDeclarations :: Syn_FieldDeclarations -> (FieldDeclarations)
unboundNames_Syn_FieldDeclarations :: Syn_FieldDeclarations -> (Names)
wrap_FieldDeclarations :: T_FieldDeclarations -> Inh_FieldDeclarations -> (Syn_FieldDeclarations)
sem_FieldDeclarations :: FieldDeclarations -> T_FieldDeclarations
newtype T_FieldDeclarations
T_FieldDeclarations :: Identity (T_FieldDeclarations_s50) -> T_FieldDeclarations
attach_T_FieldDeclarations :: T_FieldDeclarations -> Identity (T_FieldDeclarations_s50)
newtype T_FieldDeclarations_s50
C_FieldDeclarations_s50 :: (T_FieldDeclarations_v49) -> T_FieldDeclarations_s50
inv_FieldDeclarations_s50 :: T_FieldDeclarations_s50 -> (T_FieldDeclarations_v49)
data T_FieldDeclarations_s51
C_FieldDeclarations_s51 :: T_FieldDeclarations_s51
type T_FieldDeclarations_v49 = (T_FieldDeclarations_vIn49) -> (T_FieldDeclarations_vOut49)
data T_FieldDeclarations_vIn49
T_FieldDeclarations_vIn49 :: (Int) -> ([Error]) -> (Names) -> ([Option]) -> T_FieldDeclarations_vIn49
data T_FieldDeclarations_vOut49
T_FieldDeclarations_vOut49 :: (Int) -> ([Error]) -> (FieldDeclarations) -> (Names) -> T_FieldDeclarations_vOut49
sem_FieldDeclarations_Cons :: T_FieldDeclaration -> T_FieldDeclarations -> T_FieldDeclarations
sem_FieldDeclarations_Nil :: T_FieldDeclarations
data Inh_Fixity
Inh_Fixity :: Inh_Fixity
data Syn_Fixity
Syn_Fixity :: (Fixity) -> Syn_Fixity
self_Syn_Fixity :: Syn_Fixity -> (Fixity)
wrap_Fixity :: T_Fixity -> Inh_Fixity -> (Syn_Fixity)
sem_Fixity :: Fixity -> T_Fixity
newtype T_Fixity
T_Fixity :: Identity (T_Fixity_s53) -> T_Fixity
attach_T_Fixity :: T_Fixity -> Identity (T_Fixity_s53)
newtype T_Fixity_s53
C_Fixity_s53 :: (T_Fixity_v52) -> T_Fixity_s53
inv_Fixity_s53 :: T_Fixity_s53 -> (T_Fixity_v52)
data T_Fixity_s54
C_Fixity_s54 :: T_Fixity_s54
type T_Fixity_v52 = (T_Fixity_vIn52) -> (T_Fixity_vOut52)
data T_Fixity_vIn52
T_Fixity_vIn52 :: T_Fixity_vIn52
data T_Fixity_vOut52
T_Fixity_vOut52 :: (Fixity) -> T_Fixity_vOut52
sem_Fixity_Infixl :: T_Range -> T_Fixity
sem_Fixity_Infixr :: T_Range -> T_Fixity
sem_Fixity_Infix :: T_Range -> T_Fixity
data Inh_FunctionBinding
Inh_FunctionBinding :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> Inh_FunctionBinding
allTypeConstructors_Inh_FunctionBinding :: Inh_FunctionBinding -> (Names)
allValueConstructors_Inh_FunctionBinding :: Inh_FunctionBinding -> (Names)
classEnvironment_Inh_FunctionBinding :: Inh_FunctionBinding -> (ClassEnvironment)
collectScopeInfos_Inh_FunctionBinding :: Inh_FunctionBinding -> ([(ScopeInfo, Entity)])
counter_Inh_FunctionBinding :: Inh_FunctionBinding -> (Int)
kindErrors_Inh_FunctionBinding :: Inh_FunctionBinding -> ([Error])
miscerrors_Inh_FunctionBinding :: Inh_FunctionBinding -> ([Error])
namesInScope_Inh_FunctionBinding :: Inh_FunctionBinding -> (Names)
options_Inh_FunctionBinding :: Inh_FunctionBinding -> ([Option])
orderedTypeSynonyms_Inh_FunctionBinding :: Inh_FunctionBinding -> (OrderedTypeSynonyms)
typeConstructors_Inh_FunctionBinding :: Inh_FunctionBinding -> (Map Name Int)
valueConstructors_Inh_FunctionBinding :: Inh_FunctionBinding -> (Map Name TpScheme)
warnings_Inh_FunctionBinding :: Inh_FunctionBinding -> ([Warning])
data Syn_FunctionBinding
Syn_FunctionBinding :: (Int) -> ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Name) -> (FunctionBinding) -> (Names) -> ([Warning]) -> Syn_FunctionBinding
arity_Syn_FunctionBinding :: Syn_FunctionBinding -> (Int)
collectInstances_Syn_FunctionBinding :: Syn_FunctionBinding -> ([(Name, Instance)])
collectScopeInfos_Syn_FunctionBinding :: Syn_FunctionBinding -> ([(ScopeInfo, Entity)])
counter_Syn_FunctionBinding :: Syn_FunctionBinding -> (Int)
kindErrors_Syn_FunctionBinding :: Syn_FunctionBinding -> ([Error])
miscerrors_Syn_FunctionBinding :: Syn_FunctionBinding -> ([Error])
name_Syn_FunctionBinding :: Syn_FunctionBinding -> (Name)
self_Syn_FunctionBinding :: Syn_FunctionBinding -> (FunctionBinding)
unboundNames_Syn_FunctionBinding :: Syn_FunctionBinding -> (Names)
warnings_Syn_FunctionBinding :: Syn_FunctionBinding -> ([Warning])
wrap_FunctionBinding :: T_FunctionBinding -> Inh_FunctionBinding -> (Syn_FunctionBinding)
sem_FunctionBinding :: FunctionBinding -> T_FunctionBinding
newtype T_FunctionBinding
T_FunctionBinding :: Identity (T_FunctionBinding_s56) -> T_FunctionBinding
attach_T_FunctionBinding :: T_FunctionBinding -> Identity (T_FunctionBinding_s56)
newtype T_FunctionBinding_s56
C_FunctionBinding_s56 :: (T_FunctionBinding_v55) -> T_FunctionBinding_s56
inv_FunctionBinding_s56 :: T_FunctionBinding_s56 -> (T_FunctionBinding_v55)
data T_FunctionBinding_s57
C_FunctionBinding_s57 :: T_FunctionBinding_s57
type T_FunctionBinding_v55 = (T_FunctionBinding_vIn55) -> (T_FunctionBinding_vOut55)
data T_FunctionBinding_vIn55
T_FunctionBinding_vIn55 :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> T_FunctionBinding_vIn55
data T_FunctionBinding_vOut55
T_FunctionBinding_vOut55 :: (Int) -> ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Name) -> (FunctionBinding) -> (Names) -> ([Warning]) -> T_FunctionBinding_vOut55
sem_FunctionBinding_Hole :: T_Range -> (Integer) -> T_FunctionBinding
sem_FunctionBinding_Feedback :: T_Range -> (String) -> T_FunctionBinding -> T_FunctionBinding
sem_FunctionBinding_FunctionBinding :: T_Range -> T_LeftHandSide -> T_RightHandSide -> T_FunctionBinding
data Inh_FunctionBindings
Inh_FunctionBindings :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> Inh_FunctionBindings
allTypeConstructors_Inh_FunctionBindings :: Inh_FunctionBindings -> (Names)
allValueConstructors_Inh_FunctionBindings :: Inh_FunctionBindings -> (Names)
classEnvironment_Inh_FunctionBindings :: Inh_FunctionBindings -> (ClassEnvironment)
collectScopeInfos_Inh_FunctionBindings :: Inh_FunctionBindings -> ([(ScopeInfo, Entity)])
counter_Inh_FunctionBindings :: Inh_FunctionBindings -> (Int)
kindErrors_Inh_FunctionBindings :: Inh_FunctionBindings -> ([Error])
miscerrors_Inh_FunctionBindings :: Inh_FunctionBindings -> ([Error])
namesInScope_Inh_FunctionBindings :: Inh_FunctionBindings -> (Names)
options_Inh_FunctionBindings :: Inh_FunctionBindings -> ([Option])
orderedTypeSynonyms_Inh_FunctionBindings :: Inh_FunctionBindings -> (OrderedTypeSynonyms)
typeConstructors_Inh_FunctionBindings :: Inh_FunctionBindings -> (Map Name Int)
valueConstructors_Inh_FunctionBindings :: Inh_FunctionBindings -> (Map Name TpScheme)
warnings_Inh_FunctionBindings :: Inh_FunctionBindings -> ([Warning])
data Syn_FunctionBindings
Syn_FunctionBindings :: ([Int]) -> ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Name) -> (FunctionBindings) -> (Names) -> ([Warning]) -> Syn_FunctionBindings
arities_Syn_FunctionBindings :: Syn_FunctionBindings -> ([Int])
collectInstances_Syn_FunctionBindings :: Syn_FunctionBindings -> ([(Name, Instance)])
collectScopeInfos_Syn_FunctionBindings :: Syn_FunctionBindings -> ([(ScopeInfo, Entity)])
counter_Syn_FunctionBindings :: Syn_FunctionBindings -> (Int)
kindErrors_Syn_FunctionBindings :: Syn_FunctionBindings -> ([Error])
miscerrors_Syn_FunctionBindings :: Syn_FunctionBindings -> ([Error])
name_Syn_FunctionBindings :: Syn_FunctionBindings -> (Name)
self_Syn_FunctionBindings :: Syn_FunctionBindings -> (FunctionBindings)
unboundNames_Syn_FunctionBindings :: Syn_FunctionBindings -> (Names)
warnings_Syn_FunctionBindings :: Syn_FunctionBindings -> ([Warning])
wrap_FunctionBindings :: T_FunctionBindings -> Inh_FunctionBindings -> (Syn_FunctionBindings)
sem_FunctionBindings :: FunctionBindings -> T_FunctionBindings
newtype T_FunctionBindings
T_FunctionBindings :: Identity (T_FunctionBindings_s59) -> T_FunctionBindings
attach_T_FunctionBindings :: T_FunctionBindings -> Identity (T_FunctionBindings_s59)
newtype T_FunctionBindings_s59
C_FunctionBindings_s59 :: (T_FunctionBindings_v58) -> T_FunctionBindings_s59
inv_FunctionBindings_s59 :: T_FunctionBindings_s59 -> (T_FunctionBindings_v58)
data T_FunctionBindings_s60
C_FunctionBindings_s60 :: T_FunctionBindings_s60
type T_FunctionBindings_v58 = (T_FunctionBindings_vIn58) -> (T_FunctionBindings_vOut58)
data T_FunctionBindings_vIn58
T_FunctionBindings_vIn58 :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> T_FunctionBindings_vIn58
data T_FunctionBindings_vOut58
T_FunctionBindings_vOut58 :: ([Int]) -> ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Name) -> (FunctionBindings) -> (Names) -> ([Warning]) -> T_FunctionBindings_vOut58
sem_FunctionBindings_Cons :: T_FunctionBinding -> T_FunctionBindings -> T_FunctionBindings
sem_FunctionBindings_Nil :: T_FunctionBindings
data Inh_GuardedExpression
Inh_GuardedExpression :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> Inh_GuardedExpression
allTypeConstructors_Inh_GuardedExpression :: Inh_GuardedExpression -> (Names)
allValueConstructors_Inh_GuardedExpression :: Inh_GuardedExpression -> (Names)
classEnvironment_Inh_GuardedExpression :: Inh_GuardedExpression -> (ClassEnvironment)
collectScopeInfos_Inh_GuardedExpression :: Inh_GuardedExpression -> ([(ScopeInfo, Entity)])
counter_Inh_GuardedExpression :: Inh_GuardedExpression -> (Int)
kindErrors_Inh_GuardedExpression :: Inh_GuardedExpression -> ([Error])
miscerrors_Inh_GuardedExpression :: Inh_GuardedExpression -> ([Error])
namesInScope_Inh_GuardedExpression :: Inh_GuardedExpression -> (Names)
options_Inh_GuardedExpression :: Inh_GuardedExpression -> ([Option])
orderedTypeSynonyms_Inh_GuardedExpression :: Inh_GuardedExpression -> (OrderedTypeSynonyms)
typeConstructors_Inh_GuardedExpression :: Inh_GuardedExpression -> (Map Name Int)
valueConstructors_Inh_GuardedExpression :: Inh_GuardedExpression -> (Map Name TpScheme)
warnings_Inh_GuardedExpression :: Inh_GuardedExpression -> ([Warning])
data Syn_GuardedExpression
Syn_GuardedExpression :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (GuardedExpression) -> (Names) -> ([Warning]) -> Syn_GuardedExpression
collectInstances_Syn_GuardedExpression :: Syn_GuardedExpression -> ([(Name, Instance)])
collectScopeInfos_Syn_GuardedExpression :: Syn_GuardedExpression -> ([(ScopeInfo, Entity)])
counter_Syn_GuardedExpression :: Syn_GuardedExpression -> (Int)
kindErrors_Syn_GuardedExpression :: Syn_GuardedExpression -> ([Error])
miscerrors_Syn_GuardedExpression :: Syn_GuardedExpression -> ([Error])
self_Syn_GuardedExpression :: Syn_GuardedExpression -> (GuardedExpression)
unboundNames_Syn_GuardedExpression :: Syn_GuardedExpression -> (Names)
warnings_Syn_GuardedExpression :: Syn_GuardedExpression -> ([Warning])
wrap_GuardedExpression :: T_GuardedExpression -> Inh_GuardedExpression -> (Syn_GuardedExpression)
sem_GuardedExpression :: GuardedExpression -> T_GuardedExpression
newtype T_GuardedExpression
T_GuardedExpression :: Identity (T_GuardedExpression_s62) -> T_GuardedExpression
attach_T_GuardedExpression :: T_GuardedExpression -> Identity (T_GuardedExpression_s62)
newtype T_GuardedExpression_s62
C_GuardedExpression_s62 :: (T_GuardedExpression_v61) -> T_GuardedExpression_s62
inv_GuardedExpression_s62 :: T_GuardedExpression_s62 -> (T_GuardedExpression_v61)
data T_GuardedExpression_s63
C_GuardedExpression_s63 :: T_GuardedExpression_s63
type T_GuardedExpression_v61 = (T_GuardedExpression_vIn61) -> (T_GuardedExpression_vOut61)
data T_GuardedExpression_vIn61
T_GuardedExpression_vIn61 :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> T_GuardedExpression_vIn61
data T_GuardedExpression_vOut61
T_GuardedExpression_vOut61 :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (GuardedExpression) -> (Names) -> ([Warning]) -> T_GuardedExpression_vOut61
sem_GuardedExpression_GuardedExpression :: T_Range -> T_Expression -> T_Expression -> T_GuardedExpression
data Inh_GuardedExpressions
Inh_GuardedExpressions :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> Inh_GuardedExpressions
allTypeConstructors_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (Names)
allValueConstructors_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (Names)
classEnvironment_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (ClassEnvironment)
collectScopeInfos_Inh_GuardedExpressions :: Inh_GuardedExpressions -> ([(ScopeInfo, Entity)])
counter_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (Int)
kindErrors_Inh_GuardedExpressions :: Inh_GuardedExpressions -> ([Error])
miscerrors_Inh_GuardedExpressions :: Inh_GuardedExpressions -> ([Error])
namesInScope_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (Names)
options_Inh_GuardedExpressions :: Inh_GuardedExpressions -> ([Option])
orderedTypeSynonyms_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (OrderedTypeSynonyms)
typeConstructors_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (Map Name Int)
valueConstructors_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (Map Name TpScheme)
warnings_Inh_GuardedExpressions :: Inh_GuardedExpressions -> ([Warning])
data Syn_GuardedExpressions
Syn_GuardedExpressions :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (GuardedExpressions) -> (Names) -> ([Warning]) -> Syn_GuardedExpressions
collectInstances_Syn_GuardedExpressions :: Syn_GuardedExpressions -> ([(Name, Instance)])
collectScopeInfos_Syn_GuardedExpressions :: Syn_GuardedExpressions -> ([(ScopeInfo, Entity)])
counter_Syn_GuardedExpressions :: Syn_GuardedExpressions -> (Int)
kindErrors_Syn_GuardedExpressions :: Syn_GuardedExpressions -> ([Error])
miscerrors_Syn_GuardedExpressions :: Syn_GuardedExpressions -> ([Error])
self_Syn_GuardedExpressions :: Syn_GuardedExpressions -> (GuardedExpressions)
unboundNames_Syn_GuardedExpressions :: Syn_GuardedExpressions -> (Names)
warnings_Syn_GuardedExpressions :: Syn_GuardedExpressions -> ([Warning])
wrap_GuardedExpressions :: T_GuardedExpressions -> Inh_GuardedExpressions -> (Syn_GuardedExpressions)
sem_GuardedExpressions :: GuardedExpressions -> T_GuardedExpressions
newtype T_GuardedExpressions
T_GuardedExpressions :: Identity (T_GuardedExpressions_s65) -> T_GuardedExpressions
attach_T_GuardedExpressions :: T_GuardedExpressions -> Identity (T_GuardedExpressions_s65)
newtype T_GuardedExpressions_s65
C_GuardedExpressions_s65 :: (T_GuardedExpressions_v64) -> T_GuardedExpressions_s65
inv_GuardedExpressions_s65 :: T_GuardedExpressions_s65 -> (T_GuardedExpressions_v64)
data T_GuardedExpressions_s66
C_GuardedExpressions_s66 :: T_GuardedExpressions_s66
type T_GuardedExpressions_v64 = (T_GuardedExpressions_vIn64) -> (T_GuardedExpressions_vOut64)
data T_GuardedExpressions_vIn64
T_GuardedExpressions_vIn64 :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> T_GuardedExpressions_vIn64
data T_GuardedExpressions_vOut64
T_GuardedExpressions_vOut64 :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (GuardedExpressions) -> (Names) -> ([Warning]) -> T_GuardedExpressions_vOut64
sem_GuardedExpressions_Cons :: T_GuardedExpression -> T_GuardedExpressions -> T_GuardedExpressions
sem_GuardedExpressions_Nil :: T_GuardedExpressions
data Inh_Import
Inh_Import :: Inh_Import
data Syn_Import
Syn_Import :: (Import) -> Syn_Import
self_Syn_Import :: Syn_Import -> (Import)
wrap_Import :: T_Import -> Inh_Import -> (Syn_Import)
sem_Import :: Import -> T_Import
newtype T_Import
T_Import :: Identity (T_Import_s68) -> T_Import
attach_T_Import :: T_Import -> Identity (T_Import_s68)
newtype T_Import_s68
C_Import_s68 :: (T_Import_v67) -> T_Import_s68
inv_Import_s68 :: T_Import_s68 -> (T_Import_v67)
data T_Import_s69
C_Import_s69 :: T_Import_s69
type T_Import_v67 = (T_Import_vIn67) -> (T_Import_vOut67)
data T_Import_vIn67
T_Import_vIn67 :: T_Import_vIn67
data T_Import_vOut67
T_Import_vOut67 :: (Import) -> T_Import_vOut67
sem_Import_Variable :: T_Range -> T_Name -> T_Import
sem_Import_TypeOrClass :: T_Range -> T_Name -> T_MaybeNames -> T_Import
sem_Import_TypeOrClassComplete :: T_Range -> T_Name -> T_Import
data Inh_ImportDeclaration
Inh_ImportDeclaration :: (Names) -> Inh_ImportDeclaration
importedModules_Inh_ImportDeclaration :: Inh_ImportDeclaration -> (Names)
data Syn_ImportDeclaration
Syn_ImportDeclaration :: (Names) -> (ImportDeclaration) -> Syn_ImportDeclaration
importedModules_Syn_ImportDeclaration :: Syn_ImportDeclaration -> (Names)
self_Syn_ImportDeclaration :: Syn_ImportDeclaration -> (ImportDeclaration)
wrap_ImportDeclaration :: T_ImportDeclaration -> Inh_ImportDeclaration -> (Syn_ImportDeclaration)
sem_ImportDeclaration :: ImportDeclaration -> T_ImportDeclaration
newtype T_ImportDeclaration
T_ImportDeclaration :: Identity (T_ImportDeclaration_s71) -> T_ImportDeclaration
attach_T_ImportDeclaration :: T_ImportDeclaration -> Identity (T_ImportDeclaration_s71)
newtype T_ImportDeclaration_s71
C_ImportDeclaration_s71 :: (T_ImportDeclaration_v70) -> T_ImportDeclaration_s71
inv_ImportDeclaration_s71 :: T_ImportDeclaration_s71 -> (T_ImportDeclaration_v70)
data T_ImportDeclaration_s72
C_ImportDeclaration_s72 :: T_ImportDeclaration_s72
type T_ImportDeclaration_v70 = (T_ImportDeclaration_vIn70) -> (T_ImportDeclaration_vOut70)
data T_ImportDeclaration_vIn70
T_ImportDeclaration_vIn70 :: (Names) -> T_ImportDeclaration_vIn70
data T_ImportDeclaration_vOut70
T_ImportDeclaration_vOut70 :: (Names) -> (ImportDeclaration) -> T_ImportDeclaration_vOut70
sem_ImportDeclaration_Import :: T_Range -> (Bool) -> T_Name -> T_MaybeName -> T_MaybeImportSpecification -> T_ImportDeclaration
sem_ImportDeclaration_Empty :: T_Range -> T_ImportDeclaration
data Inh_ImportDeclarations
Inh_ImportDeclarations :: (Names) -> Inh_ImportDeclarations
importedModules_Inh_ImportDeclarations :: Inh_ImportDeclarations -> (Names)
data Syn_ImportDeclarations
Syn_ImportDeclarations :: (Names) -> (ImportDeclarations) -> Syn_ImportDeclarations
importedModules_Syn_ImportDeclarations :: Syn_ImportDeclarations -> (Names)
self_Syn_ImportDeclarations :: Syn_ImportDeclarations -> (ImportDeclarations)
wrap_ImportDeclarations :: T_ImportDeclarations -> Inh_ImportDeclarations -> (Syn_ImportDeclarations)
sem_ImportDeclarations :: ImportDeclarations -> T_ImportDeclarations
newtype T_ImportDeclarations
T_ImportDeclarations :: Identity (T_ImportDeclarations_s74) -> T_ImportDeclarations
attach_T_ImportDeclarations :: T_ImportDeclarations -> Identity (T_ImportDeclarations_s74)
newtype T_ImportDeclarations_s74
C_ImportDeclarations_s74 :: (T_ImportDeclarations_v73) -> T_ImportDeclarations_s74
inv_ImportDeclarations_s74 :: T_ImportDeclarations_s74 -> (T_ImportDeclarations_v73)
data T_ImportDeclarations_s75
C_ImportDeclarations_s75 :: T_ImportDeclarations_s75
type T_ImportDeclarations_v73 = (T_ImportDeclarations_vIn73) -> (T_ImportDeclarations_vOut73)
data T_ImportDeclarations_vIn73
T_ImportDeclarations_vIn73 :: (Names) -> T_ImportDeclarations_vIn73
data T_ImportDeclarations_vOut73
T_ImportDeclarations_vOut73 :: (Names) -> (ImportDeclarations) -> T_ImportDeclarations_vOut73
sem_ImportDeclarations_Cons :: T_ImportDeclaration -> T_ImportDeclarations -> T_ImportDeclarations
sem_ImportDeclarations_Nil :: T_ImportDeclarations
data Inh_ImportSpecification
Inh_ImportSpecification :: Inh_ImportSpecification
data Syn_ImportSpecification
Syn_ImportSpecification :: (ImportSpecification) -> Syn_ImportSpecification
self_Syn_ImportSpecification :: Syn_ImportSpecification -> (ImportSpecification)
wrap_ImportSpecification :: T_ImportSpecification -> Inh_ImportSpecification -> (Syn_ImportSpecification)
sem_ImportSpecification :: ImportSpecification -> T_ImportSpecification
newtype T_ImportSpecification
T_ImportSpecification :: Identity (T_ImportSpecification_s77) -> T_ImportSpecification
attach_T_ImportSpecification :: T_ImportSpecification -> Identity (T_ImportSpecification_s77)
newtype T_ImportSpecification_s77
C_ImportSpecification_s77 :: (T_ImportSpecification_v76) -> T_ImportSpecification_s77
inv_ImportSpecification_s77 :: T_ImportSpecification_s77 -> (T_ImportSpecification_v76)
data T_ImportSpecification_s78
C_ImportSpecification_s78 :: T_ImportSpecification_s78
type T_ImportSpecification_v76 = (T_ImportSpecification_vIn76) -> (T_ImportSpecification_vOut76)
data T_ImportSpecification_vIn76
T_ImportSpecification_vIn76 :: T_ImportSpecification_vIn76
data T_ImportSpecification_vOut76
T_ImportSpecification_vOut76 :: (ImportSpecification) -> T_ImportSpecification_vOut76
sem_ImportSpecification_Import :: T_Range -> (Bool) -> T_Imports -> T_ImportSpecification
data Inh_Imports
Inh_Imports :: Inh_Imports
data Syn_Imports
Syn_Imports :: (Imports) -> Syn_Imports
self_Syn_Imports :: Syn_Imports -> (Imports)
wrap_Imports :: T_Imports -> Inh_Imports -> (Syn_Imports)
sem_Imports :: Imports -> T_Imports
newtype T_Imports
T_Imports :: Identity (T_Imports_s80) -> T_Imports
attach_T_Imports :: T_Imports -> Identity (T_Imports_s80)
newtype T_Imports_s80
C_Imports_s80 :: (T_Imports_v79) -> T_Imports_s80
inv_Imports_s80 :: T_Imports_s80 -> (T_Imports_v79)
data T_Imports_s81
C_Imports_s81 :: T_Imports_s81
type T_Imports_v79 = (T_Imports_vIn79) -> (T_Imports_vOut79)
data T_Imports_vIn79
T_Imports_vIn79 :: T_Imports_vIn79
data T_Imports_vOut79
T_Imports_vOut79 :: (Imports) -> T_Imports_vOut79
sem_Imports_Cons :: T_Import -> T_Imports -> T_Imports
sem_Imports_Nil :: T_Imports
data Inh_LeftHandSide
Inh_LeftHandSide :: (Names) -> (Names) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> (Names) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> Inh_LeftHandSide
allTypeConstructors_Inh_LeftHandSide :: Inh_LeftHandSide -> (Names)
allValueConstructors_Inh_LeftHandSide :: Inh_LeftHandSide -> (Names)
collectScopeInfos_Inh_LeftHandSide :: Inh_LeftHandSide -> ([(ScopeInfo, Entity)])
counter_Inh_LeftHandSide :: Inh_LeftHandSide -> (Int)
miscerrors_Inh_LeftHandSide :: Inh_LeftHandSide -> ([Error])
namesInScope_Inh_LeftHandSide :: Inh_LeftHandSide -> (Names)
typeConstructors_Inh_LeftHandSide :: Inh_LeftHandSide -> (Map Name Int)
valueConstructors_Inh_LeftHandSide :: Inh_LeftHandSide -> (Map Name TpScheme)
warnings_Inh_LeftHandSide :: Inh_LeftHandSide -> ([Warning])
data Syn_LeftHandSide
Syn_LeftHandSide :: ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> (Name) -> (Int) -> (Names) -> (LeftHandSide) -> (Names) -> ([Warning]) -> Syn_LeftHandSide
collectScopeInfos_Syn_LeftHandSide :: Syn_LeftHandSide -> ([(ScopeInfo, Entity)])
counter_Syn_LeftHandSide :: Syn_LeftHandSide -> (Int)
miscerrors_Syn_LeftHandSide :: Syn_LeftHandSide -> ([Error])
name_Syn_LeftHandSide :: Syn_LeftHandSide -> (Name)
numberOfPatterns_Syn_LeftHandSide :: Syn_LeftHandSide -> (Int)
patVarNames_Syn_LeftHandSide :: Syn_LeftHandSide -> (Names)
self_Syn_LeftHandSide :: Syn_LeftHandSide -> (LeftHandSide)
unboundNames_Syn_LeftHandSide :: Syn_LeftHandSide -> (Names)
warnings_Syn_LeftHandSide :: Syn_LeftHandSide -> ([Warning])
wrap_LeftHandSide :: T_LeftHandSide -> Inh_LeftHandSide -> (Syn_LeftHandSide)
sem_LeftHandSide :: LeftHandSide -> T_LeftHandSide
newtype T_LeftHandSide
T_LeftHandSide :: Identity (T_LeftHandSide_s83) -> T_LeftHandSide
attach_T_LeftHandSide :: T_LeftHandSide -> Identity (T_LeftHandSide_s83)
newtype T_LeftHandSide_s83
C_LeftHandSide_s83 :: (T_LeftHandSide_v82) -> T_LeftHandSide_s83
inv_LeftHandSide_s83 :: T_LeftHandSide_s83 -> (T_LeftHandSide_v82)
data T_LeftHandSide_s84
C_LeftHandSide_s84 :: T_LeftHandSide_s84
type T_LeftHandSide_v82 = (T_LeftHandSide_vIn82) -> (T_LeftHandSide_vOut82)
data T_LeftHandSide_vIn82
T_LeftHandSide_vIn82 :: (Names) -> (Names) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> (Names) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> T_LeftHandSide_vIn82
data T_LeftHandSide_vOut82
T_LeftHandSide_vOut82 :: ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> (Name) -> (Int) -> (Names) -> (LeftHandSide) -> (Names) -> ([Warning]) -> T_LeftHandSide_vOut82
sem_LeftHandSide_Function :: T_Range -> T_Name -> T_Patterns -> T_LeftHandSide
sem_LeftHandSide_Infix :: T_Range -> T_Pattern -> T_Name -> T_Pattern -> T_LeftHandSide
sem_LeftHandSide_Parenthesized :: T_Range -> T_LeftHandSide -> T_Patterns -> T_LeftHandSide
data Inh_Literal
Inh_Literal :: ([(ScopeInfo, Entity)]) -> ([Error]) -> Inh_Literal
collectScopeInfos_Inh_Literal :: Inh_Literal -> ([(ScopeInfo, Entity)])
miscerrors_Inh_Literal :: Inh_Literal -> ([Error])
data Syn_Literal
Syn_Literal :: ([(ScopeInfo, Entity)]) -> ([Error]) -> (Literal) -> Syn_Literal
collectScopeInfos_Syn_Literal :: Syn_Literal -> ([(ScopeInfo, Entity)])
miscerrors_Syn_Literal :: Syn_Literal -> ([Error])
self_Syn_Literal :: Syn_Literal -> (Literal)
wrap_Literal :: T_Literal -> Inh_Literal -> (Syn_Literal)
sem_Literal :: Literal -> T_Literal
newtype T_Literal
T_Literal :: Identity (T_Literal_s86) -> T_Literal
attach_T_Literal :: T_Literal -> Identity (T_Literal_s86)
newtype T_Literal_s86
C_Literal_s86 :: (T_Literal_v85) -> T_Literal_s86
inv_Literal_s86 :: T_Literal_s86 -> (T_Literal_v85)
data T_Literal_s87
C_Literal_s87 :: T_Literal_s87
type T_Literal_v85 = (T_Literal_vIn85) -> (T_Literal_vOut85)
data T_Literal_vIn85
T_Literal_vIn85 :: ([(ScopeInfo, Entity)]) -> ([Error]) -> T_Literal_vIn85
data T_Literal_vOut85
T_Literal_vOut85 :: ([(ScopeInfo, Entity)]) -> ([Error]) -> (Literal) -> T_Literal_vOut85
sem_Literal_Int :: T_Range -> (String) -> T_Literal
sem_Literal_Char :: T_Range -> (String) -> T_Literal
sem_Literal_Float :: T_Range -> (String) -> T_Literal
sem_Literal_String :: T_Range -> (String) -> T_Literal
data Inh_MaybeDeclarations
Inh_MaybeDeclarations :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> (Map Name Int) -> (Names) -> (Map Name TpScheme) -> ([Warning]) -> Inh_MaybeDeclarations
allTypeConstructors_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (Names)
allValueConstructors_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (Names)
classEnvironment_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (ClassEnvironment)
collectScopeInfos_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> ([(ScopeInfo, Entity)])
counter_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (Int)
kindErrors_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> ([Error])
miscerrors_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> ([Error])
namesInScope_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (Names)
options_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> ([Option])
orderedTypeSynonyms_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (OrderedTypeSynonyms)
typeConstructors_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (Map Name Int)
unboundNames_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (Names)
valueConstructors_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (Map Name TpScheme)
warnings_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> ([Warning])
data Syn_MaybeDeclarations
Syn_MaybeDeclarations :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> (MaybeDeclarations) -> (Names) -> ([Warning]) -> Syn_MaybeDeclarations
collectInstances_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> ([(Name, Instance)])
collectScopeInfos_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> ([(ScopeInfo, Entity)])
counter_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> (Int)
kindErrors_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> ([Error])
miscerrors_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> ([Error])
namesInScope_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> (Names)
self_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> (MaybeDeclarations)
unboundNames_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> (Names)
warnings_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> ([Warning])
wrap_MaybeDeclarations :: T_MaybeDeclarations -> Inh_MaybeDeclarations -> (Syn_MaybeDeclarations)
sem_MaybeDeclarations :: MaybeDeclarations -> T_MaybeDeclarations
newtype T_MaybeDeclarations
T_MaybeDeclarations :: Identity (T_MaybeDeclarations_s89) -> T_MaybeDeclarations
attach_T_MaybeDeclarations :: T_MaybeDeclarations -> Identity (T_MaybeDeclarations_s89)
newtype T_MaybeDeclarations_s89
C_MaybeDeclarations_s89 :: (T_MaybeDeclarations_v88) -> T_MaybeDeclarations_s89
inv_MaybeDeclarations_s89 :: T_MaybeDeclarations_s89 -> (T_MaybeDeclarations_v88)
data T_MaybeDeclarations_s90
C_MaybeDeclarations_s90 :: T_MaybeDeclarations_s90
type T_MaybeDeclarations_v88 = (T_MaybeDeclarations_vIn88) -> (T_MaybeDeclarations_vOut88)
data T_MaybeDeclarations_vIn88
T_MaybeDeclarations_vIn88 :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> (Map Name Int) -> (Names) -> (Map Name TpScheme) -> ([Warning]) -> T_MaybeDeclarations_vIn88
data T_MaybeDeclarations_vOut88
T_MaybeDeclarations_vOut88 :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> (MaybeDeclarations) -> (Names) -> ([Warning]) -> T_MaybeDeclarations_vOut88
sem_MaybeDeclarations_Nothing :: T_MaybeDeclarations
sem_MaybeDeclarations_Just :: T_Declarations -> T_MaybeDeclarations
data Inh_MaybeExports
Inh_MaybeExports :: (Names) -> (Names) -> (Names) -> (Names) -> Inh_MaybeExports
consInScope_Inh_MaybeExports :: Inh_MaybeExports -> (Names)
modulesInScope_Inh_MaybeExports :: Inh_MaybeExports -> (Names)
namesInScop_Inh_MaybeExports :: Inh_MaybeExports -> (Names)
tyconsInScope_Inh_MaybeExports :: Inh_MaybeExports -> (Names)
data Syn_MaybeExports
Syn_MaybeExports :: ([Error]) -> (MaybeExports) -> Syn_MaybeExports
exportErrors_Syn_MaybeExports :: Syn_MaybeExports -> ([Error])
self_Syn_MaybeExports :: Syn_MaybeExports -> (MaybeExports)
wrap_MaybeExports :: T_MaybeExports -> Inh_MaybeExports -> (Syn_MaybeExports)
sem_MaybeExports :: MaybeExports -> T_MaybeExports
newtype T_MaybeExports
T_MaybeExports :: Identity (T_MaybeExports_s92) -> T_MaybeExports
attach_T_MaybeExports :: T_MaybeExports -> Identity (T_MaybeExports_s92)
newtype T_MaybeExports_s92
C_MaybeExports_s92 :: (T_MaybeExports_v91) -> T_MaybeExports_s92
inv_MaybeExports_s92 :: T_MaybeExports_s92 -> (T_MaybeExports_v91)
data T_MaybeExports_s93
C_MaybeExports_s93 :: T_MaybeExports_s93
type T_MaybeExports_v91 = (T_MaybeExports_vIn91) -> (T_MaybeExports_vOut91)
data T_MaybeExports_vIn91
T_MaybeExports_vIn91 :: (Names) -> (Names) -> (Names) -> (Names) -> T_MaybeExports_vIn91
data T_MaybeExports_vOut91
T_MaybeExports_vOut91 :: ([Error]) -> (MaybeExports) -> T_MaybeExports_vOut91
sem_MaybeExports_Nothing :: T_MaybeExports
sem_MaybeExports_Just :: T_Exports -> T_MaybeExports
data Inh_MaybeExpression
Inh_MaybeExpression :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> Inh_MaybeExpression
allTypeConstructors_Inh_MaybeExpression :: Inh_MaybeExpression -> (Names)
allValueConstructors_Inh_MaybeExpression :: Inh_MaybeExpression -> (Names)
classEnvironment_Inh_MaybeExpression :: Inh_MaybeExpression -> (ClassEnvironment)
collectScopeInfos_Inh_MaybeExpression :: Inh_MaybeExpression -> ([(ScopeInfo, Entity)])
counter_Inh_MaybeExpression :: Inh_MaybeExpression -> (Int)
kindErrors_Inh_MaybeExpression :: Inh_MaybeExpression -> ([Error])
miscerrors_Inh_MaybeExpression :: Inh_MaybeExpression -> ([Error])
namesInScope_Inh_MaybeExpression :: Inh_MaybeExpression -> (Names)
options_Inh_MaybeExpression :: Inh_MaybeExpression -> ([Option])
orderedTypeSynonyms_Inh_MaybeExpression :: Inh_MaybeExpression -> (OrderedTypeSynonyms)
typeConstructors_Inh_MaybeExpression :: Inh_MaybeExpression -> (Map Name Int)
valueConstructors_Inh_MaybeExpression :: Inh_MaybeExpression -> (Map Name TpScheme)
warnings_Inh_MaybeExpression :: Inh_MaybeExpression -> ([Warning])
data Syn_MaybeExpression
Syn_MaybeExpression :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (MaybeExpression) -> (Names) -> ([Warning]) -> Syn_MaybeExpression
collectInstances_Syn_MaybeExpression :: Syn_MaybeExpression -> ([(Name, Instance)])
collectScopeInfos_Syn_MaybeExpression :: Syn_MaybeExpression -> ([(ScopeInfo, Entity)])
counter_Syn_MaybeExpression :: Syn_MaybeExpression -> (Int)
kindErrors_Syn_MaybeExpression :: Syn_MaybeExpression -> ([Error])
miscerrors_Syn_MaybeExpression :: Syn_MaybeExpression -> ([Error])
self_Syn_MaybeExpression :: Syn_MaybeExpression -> (MaybeExpression)
unboundNames_Syn_MaybeExpression :: Syn_MaybeExpression -> (Names)
warnings_Syn_MaybeExpression :: Syn_MaybeExpression -> ([Warning])
wrap_MaybeExpression :: T_MaybeExpression -> Inh_MaybeExpression -> (Syn_MaybeExpression)
sem_MaybeExpression :: MaybeExpression -> T_MaybeExpression
newtype T_MaybeExpression
T_MaybeExpression :: Identity (T_MaybeExpression_s95) -> T_MaybeExpression
attach_T_MaybeExpression :: T_MaybeExpression -> Identity (T_MaybeExpression_s95)
newtype T_MaybeExpression_s95
C_MaybeExpression_s95 :: (T_MaybeExpression_v94) -> T_MaybeExpression_s95
inv_MaybeExpression_s95 :: T_MaybeExpression_s95 -> (T_MaybeExpression_v94)
data T_MaybeExpression_s96
C_MaybeExpression_s96 :: T_MaybeExpression_s96
type T_MaybeExpression_v94 = (T_MaybeExpression_vIn94) -> (T_MaybeExpression_vOut94)
data T_MaybeExpression_vIn94
T_MaybeExpression_vIn94 :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> T_MaybeExpression_vIn94
data T_MaybeExpression_vOut94
T_MaybeExpression_vOut94 :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (MaybeExpression) -> (Names) -> ([Warning]) -> T_MaybeExpression_vOut94
sem_MaybeExpression_Nothing :: T_MaybeExpression
sem_MaybeExpression_Just :: T_Expression -> T_MaybeExpression
data Inh_MaybeImportSpecification
Inh_MaybeImportSpecification :: Inh_MaybeImportSpecification
data Syn_MaybeImportSpecification
Syn_MaybeImportSpecification :: (MaybeImportSpecification) -> Syn_MaybeImportSpecification
self_Syn_MaybeImportSpecification :: Syn_MaybeImportSpecification -> (MaybeImportSpecification)
wrap_MaybeImportSpecification :: T_MaybeImportSpecification -> Inh_MaybeImportSpecification -> (Syn_MaybeImportSpecification)
sem_MaybeImportSpecification :: MaybeImportSpecification -> T_MaybeImportSpecification
newtype T_MaybeImportSpecification
T_MaybeImportSpecification :: Identity (T_MaybeImportSpecification_s98) -> T_MaybeImportSpecification
attach_T_MaybeImportSpecification :: T_MaybeImportSpecification -> Identity (T_MaybeImportSpecification_s98)
newtype T_MaybeImportSpecification_s98
C_MaybeImportSpecification_s98 :: (T_MaybeImportSpecification_v97) -> T_MaybeImportSpecification_s98
inv_MaybeImportSpecification_s98 :: T_MaybeImportSpecification_s98 -> (T_MaybeImportSpecification_v97)
data T_MaybeImportSpecification_s99
C_MaybeImportSpecification_s99 :: T_MaybeImportSpecification_s99
type T_MaybeImportSpecification_v97 = (T_MaybeImportSpecification_vIn97) -> (T_MaybeImportSpecification_vOut97)
data T_MaybeImportSpecification_vIn97
T_MaybeImportSpecification_vIn97 :: T_MaybeImportSpecification_vIn97
data T_MaybeImportSpecification_vOut97
T_MaybeImportSpecification_vOut97 :: (MaybeImportSpecification) -> T_MaybeImportSpecification_vOut97
sem_MaybeImportSpecification_Nothing :: T_MaybeImportSpecification
sem_MaybeImportSpecification_Just :: T_ImportSpecification -> T_MaybeImportSpecification
data Inh_MaybeInt
Inh_MaybeInt :: Inh_MaybeInt
data Syn_MaybeInt
Syn_MaybeInt :: (MaybeInt) -> Syn_MaybeInt
self_Syn_MaybeInt :: Syn_MaybeInt -> (MaybeInt)
wrap_MaybeInt :: T_MaybeInt -> Inh_MaybeInt -> (Syn_MaybeInt)
sem_MaybeInt :: MaybeInt -> T_MaybeInt
newtype T_MaybeInt
T_MaybeInt :: Identity (T_MaybeInt_s101) -> T_MaybeInt
attach_T_MaybeInt :: T_MaybeInt -> Identity (T_MaybeInt_s101)
newtype T_MaybeInt_s101
C_MaybeInt_s101 :: (T_MaybeInt_v100) -> T_MaybeInt_s101
inv_MaybeInt_s101 :: T_MaybeInt_s101 -> (T_MaybeInt_v100)
data T_MaybeInt_s102
C_MaybeInt_s102 :: T_MaybeInt_s102
type T_MaybeInt_v100 = (T_MaybeInt_vIn100) -> (T_MaybeInt_vOut100)
data T_MaybeInt_vIn100
T_MaybeInt_vIn100 :: T_MaybeInt_vIn100
data T_MaybeInt_vOut100
T_MaybeInt_vOut100 :: (MaybeInt) -> T_MaybeInt_vOut100
sem_MaybeInt_Nothing :: T_MaybeInt
sem_MaybeInt_Just :: (Int) -> T_MaybeInt
data Inh_MaybeName
Inh_MaybeName :: Inh_MaybeName
data Syn_MaybeName
Syn_MaybeName :: (MaybeName) -> Syn_MaybeName
self_Syn_MaybeName :: Syn_MaybeName -> (MaybeName)
wrap_MaybeName :: T_MaybeName -> Inh_MaybeName -> (Syn_MaybeName)
sem_MaybeName :: MaybeName -> T_MaybeName
newtype T_MaybeName
T_MaybeName :: Identity (T_MaybeName_s104) -> T_MaybeName
attach_T_MaybeName :: T_MaybeName -> Identity (T_MaybeName_s104)
newtype T_MaybeName_s104
C_MaybeName_s104 :: (T_MaybeName_v103) -> T_MaybeName_s104
inv_MaybeName_s104 :: T_MaybeName_s104 -> (T_MaybeName_v103)
data T_MaybeName_s105
C_MaybeName_s105 :: T_MaybeName_s105
type T_MaybeName_v103 = (T_MaybeName_vIn103) -> (T_MaybeName_vOut103)
data T_MaybeName_vIn103
T_MaybeName_vIn103 :: T_MaybeName_vIn103
data T_MaybeName_vOut103
T_MaybeName_vOut103 :: (MaybeName) -> T_MaybeName_vOut103
sem_MaybeName_Nothing :: T_MaybeName
sem_MaybeName_Just :: T_Name -> T_MaybeName
data Inh_MaybeNames
Inh_MaybeNames :: Inh_MaybeNames
data Syn_MaybeNames
Syn_MaybeNames :: (MaybeNames) -> Syn_MaybeNames
self_Syn_MaybeNames :: Syn_MaybeNames -> (MaybeNames)
wrap_MaybeNames :: T_MaybeNames -> Inh_MaybeNames -> (Syn_MaybeNames)
sem_MaybeNames :: MaybeNames -> T_MaybeNames
newtype T_MaybeNames
T_MaybeNames :: Identity (T_MaybeNames_s107) -> T_MaybeNames
attach_T_MaybeNames :: T_MaybeNames -> Identity (T_MaybeNames_s107)
newtype T_MaybeNames_s107
C_MaybeNames_s107 :: (T_MaybeNames_v106) -> T_MaybeNames_s107
inv_MaybeNames_s107 :: T_MaybeNames_s107 -> (T_MaybeNames_v106)
data T_MaybeNames_s108
C_MaybeNames_s108 :: T_MaybeNames_s108
type T_MaybeNames_v106 = (T_MaybeNames_vIn106) -> (T_MaybeNames_vOut106)
data T_MaybeNames_vIn106
T_MaybeNames_vIn106 :: T_MaybeNames_vIn106
data T_MaybeNames_vOut106
T_MaybeNames_vOut106 :: (MaybeNames) -> T_MaybeNames_vOut106
sem_MaybeNames_Nothing :: T_MaybeNames
sem_MaybeNames_Just :: T_Names -> T_MaybeNames
data Inh_Module
Inh_Module :: (String) -> (ImportEnvironments) -> ([Option]) -> Inh_Module
baseName_Inh_Module :: Inh_Module -> (String)
importEnvironments_Inh_Module :: Inh_Module -> (ImportEnvironments)
options_Inh_Module :: Inh_Module -> ([Option])
data Syn_Module
Syn_Module :: (ImportEnvironment) -> (Errors) -> (Module) -> ([(Name, TpScheme)]) -> (Warnings) -> Syn_Module
collectEnvironment_Syn_Module :: Syn_Module -> (ImportEnvironment)
errors_Syn_Module :: Syn_Module -> (Errors)
self_Syn_Module :: Syn_Module -> (Module)
typeSignatures_Syn_Module :: Syn_Module -> ([(Name, TpScheme)])
warnings_Syn_Module :: Syn_Module -> (Warnings)
wrap_Module :: T_Module -> Inh_Module -> (Syn_Module)
sem_Module :: Module -> T_Module
newtype T_Module
T_Module :: Identity (T_Module_s110) -> T_Module
attach_T_Module :: T_Module -> Identity (T_Module_s110)
newtype T_Module_s110
C_Module_s110 :: (T_Module_v109) -> T_Module_s110
inv_Module_s110 :: T_Module_s110 -> (T_Module_v109)
data T_Module_s111
C_Module_s111 :: T_Module_s111
type T_Module_v109 = (T_Module_vIn109) -> (T_Module_vOut109)
data T_Module_vIn109
T_Module_vIn109 :: (String) -> (ImportEnvironments) -> ([Option]) -> T_Module_vIn109
data T_Module_vOut109
T_Module_vOut109 :: (ImportEnvironment) -> (Errors) -> (Module) -> ([(Name, TpScheme)]) -> (Warnings) -> T_Module_vOut109
sem_Module_Module :: T_Range -> T_MaybeName -> T_MaybeExports -> T_Body -> T_Module
data Inh_Name
Inh_Name :: Inh_Name
data Syn_Name
Syn_Name :: (Name) -> Syn_Name
self_Syn_Name :: Syn_Name -> (Name)
wrap_Name :: T_Name -> Inh_Name -> (Syn_Name)
sem_Name :: Name -> T_Name
newtype T_Name
T_Name :: Identity (T_Name_s113) -> T_Name
attach_T_Name :: T_Name -> Identity (T_Name_s113)
newtype T_Name_s113
C_Name_s113 :: (T_Name_v112) -> T_Name_s113
inv_Name_s113 :: T_Name_s113 -> (T_Name_v112)
data T_Name_s114
C_Name_s114 :: T_Name_s114
type T_Name_v112 = (T_Name_vIn112) -> (T_Name_vOut112)
data T_Name_vIn112
T_Name_vIn112 :: T_Name_vIn112
data T_Name_vOut112
T_Name_vOut112 :: (Name) -> T_Name_vOut112
sem_Name_Identifier :: T_Range -> T_Strings -> (String) -> T_Name
sem_Name_Operator :: T_Range -> T_Strings -> (String) -> T_Name
sem_Name_Special :: T_Range -> T_Strings -> (String) -> T_Name
data Inh_Names
Inh_Names :: Inh_Names
data Syn_Names
Syn_Names :: (Names) -> Syn_Names
self_Syn_Names :: Syn_Names -> (Names)
wrap_Names :: T_Names -> Inh_Names -> (Syn_Names)
sem_Names :: Names -> T_Names
newtype T_Names
T_Names :: Identity (T_Names_s116) -> T_Names
attach_T_Names :: T_Names -> Identity (T_Names_s116)
newtype T_Names_s116
C_Names_s116 :: (T_Names_v115) -> T_Names_s116
inv_Names_s116 :: T_Names_s116 -> (T_Names_v115)
data T_Names_s117
C_Names_s117 :: T_Names_s117
type T_Names_v115 = (T_Names_vIn115) -> (T_Names_vOut115)
data T_Names_vIn115
T_Names_vIn115 :: T_Names_vIn115
data T_Names_vOut115
T_Names_vOut115 :: (Names) -> T_Names_vOut115
sem_Names_Cons :: T_Name -> T_Names -> T_Names
sem_Names_Nil :: T_Names
data Inh_Pattern
Inh_Pattern :: (Names) -> (Names) -> ([(ScopeInfo, Entity)]) -> (Int) -> (Bool) -> ([Error]) -> (Names) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> Inh_Pattern
allTypeConstructors_Inh_Pattern :: Inh_Pattern -> (Names)
allValueConstructors_Inh_Pattern :: Inh_Pattern -> (Names)
collectScopeInfos_Inh_Pattern :: Inh_Pattern -> ([(ScopeInfo, Entity)])
counter_Inh_Pattern :: Inh_Pattern -> (Int)
lhsPattern_Inh_Pattern :: Inh_Pattern -> (Bool)
miscerrors_Inh_Pattern :: Inh_Pattern -> ([Error])
namesInScope_Inh_Pattern :: Inh_Pattern -> (Names)
typeConstructors_Inh_Pattern :: Inh_Pattern -> (Map Name Int)
valueConstructors_Inh_Pattern :: Inh_Pattern -> (Map Name TpScheme)
warnings_Inh_Pattern :: Inh_Pattern -> ([Warning])
data Syn_Pattern
Syn_Pattern :: ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> (Names) -> (Pattern) -> (Names) -> ([Warning]) -> Syn_Pattern
collectScopeInfos_Syn_Pattern :: Syn_Pattern -> ([(ScopeInfo, Entity)])
counter_Syn_Pattern :: Syn_Pattern -> (Int)
miscerrors_Syn_Pattern :: Syn_Pattern -> ([Error])
patVarNames_Syn_Pattern :: Syn_Pattern -> (Names)
self_Syn_Pattern :: Syn_Pattern -> (Pattern)
unboundNames_Syn_Pattern :: Syn_Pattern -> (Names)
warnings_Syn_Pattern :: Syn_Pattern -> ([Warning])
wrap_Pattern :: T_Pattern -> Inh_Pattern -> (Syn_Pattern)
sem_Pattern :: Pattern -> T_Pattern
newtype T_Pattern
T_Pattern :: Identity (T_Pattern_s119) -> T_Pattern
attach_T_Pattern :: T_Pattern -> Identity (T_Pattern_s119)
newtype T_Pattern_s119
C_Pattern_s119 :: (T_Pattern_v118) -> T_Pattern_s119
inv_Pattern_s119 :: T_Pattern_s119 -> (T_Pattern_v118)
data T_Pattern_s120
C_Pattern_s120 :: T_Pattern_s120
type T_Pattern_v118 = (T_Pattern_vIn118) -> (T_Pattern_vOut118)
data T_Pattern_vIn118
T_Pattern_vIn118 :: (Names) -> (Names) -> ([(ScopeInfo, Entity)]) -> (Int) -> (Bool) -> ([Error]) -> (Names) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> T_Pattern_vIn118
data T_Pattern_vOut118
T_Pattern_vOut118 :: ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> (Names) -> (Pattern) -> (Names) -> ([Warning]) -> T_Pattern_vOut118
sem_Pattern_Hole :: T_Range -> (Integer) -> T_Pattern
sem_Pattern_Literal :: T_Range -> T_Literal -> T_Pattern
sem_Pattern_Variable :: T_Range -> T_Name -> T_Pattern
sem_Pattern_Constructor :: T_Range -> T_Name -> T_Patterns -> T_Pattern
sem_Pattern_Parenthesized :: T_Range -> T_Pattern -> T_Pattern
sem_Pattern_InfixConstructor :: T_Range -> T_Pattern -> T_Name -> T_Pattern -> T_Pattern
sem_Pattern_List :: T_Range -> T_Patterns -> T_Pattern
sem_Pattern_Tuple :: T_Range -> T_Patterns -> T_Pattern
sem_Pattern_Record :: T_Range -> T_Name -> T_RecordPatternBindings -> T_Pattern
sem_Pattern_Negate :: T_Range -> T_Literal -> T_Pattern
sem_Pattern_As :: T_Range -> T_Name -> T_Pattern -> T_Pattern
sem_Pattern_Wildcard :: T_Range -> T_Pattern
sem_Pattern_Irrefutable :: T_Range -> T_Pattern -> T_Pattern
sem_Pattern_Successor :: T_Range -> T_Name -> T_Literal -> T_Pattern
sem_Pattern_NegateFloat :: T_Range -> T_Literal -> T_Pattern
data Inh_Patterns
Inh_Patterns :: (Names) -> (Names) -> ([(ScopeInfo, Entity)]) -> (Int) -> (Bool) -> ([Error]) -> (Names) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> Inh_Patterns
allTypeConstructors_Inh_Patterns :: Inh_Patterns -> (Names)
allValueConstructors_Inh_Patterns :: Inh_Patterns -> (Names)
collectScopeInfos_Inh_Patterns :: Inh_Patterns -> ([(ScopeInfo, Entity)])
counter_Inh_Patterns :: Inh_Patterns -> (Int)
lhsPattern_Inh_Patterns :: Inh_Patterns -> (Bool)
miscerrors_Inh_Patterns :: Inh_Patterns -> ([Error])
namesInScope_Inh_Patterns :: Inh_Patterns -> (Names)
typeConstructors_Inh_Patterns :: Inh_Patterns -> (Map Name Int)
valueConstructors_Inh_Patterns :: Inh_Patterns -> (Map Name TpScheme)
warnings_Inh_Patterns :: Inh_Patterns -> ([Warning])
data Syn_Patterns
Syn_Patterns :: ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> (Int) -> (Names) -> (Patterns) -> (Names) -> ([Warning]) -> Syn_Patterns
collectScopeInfos_Syn_Patterns :: Syn_Patterns -> ([(ScopeInfo, Entity)])
counter_Syn_Patterns :: Syn_Patterns -> (Int)
miscerrors_Syn_Patterns :: Syn_Patterns -> ([Error])
numberOfPatterns_Syn_Patterns :: Syn_Patterns -> (Int)
patVarNames_Syn_Patterns :: Syn_Patterns -> (Names)
self_Syn_Patterns :: Syn_Patterns -> (Patterns)
unboundNames_Syn_Patterns :: Syn_Patterns -> (Names)
warnings_Syn_Patterns :: Syn_Patterns -> ([Warning])
wrap_Patterns :: T_Patterns -> Inh_Patterns -> (Syn_Patterns)
sem_Patterns :: Patterns -> T_Patterns
newtype T_Patterns
T_Patterns :: Identity (T_Patterns_s122) -> T_Patterns
attach_T_Patterns :: T_Patterns -> Identity (T_Patterns_s122)
newtype T_Patterns_s122
C_Patterns_s122 :: (T_Patterns_v121) -> T_Patterns_s122
inv_Patterns_s122 :: T_Patterns_s122 -> (T_Patterns_v121)
data T_Patterns_s123
C_Patterns_s123 :: T_Patterns_s123
type T_Patterns_v121 = (T_Patterns_vIn121) -> (T_Patterns_vOut121)
data T_Patterns_vIn121
T_Patterns_vIn121 :: (Names) -> (Names) -> ([(ScopeInfo, Entity)]) -> (Int) -> (Bool) -> ([Error]) -> (Names) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> T_Patterns_vIn121
data T_Patterns_vOut121
T_Patterns_vOut121 :: ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> (Int) -> (Names) -> (Patterns) -> (Names) -> ([Warning]) -> T_Patterns_vOut121
sem_Patterns_Cons :: T_Pattern -> T_Patterns -> T_Patterns
sem_Patterns_Nil :: T_Patterns
data Inh_Position
Inh_Position :: Inh_Position
data Syn_Position
Syn_Position :: (Position) -> Syn_Position
self_Syn_Position :: Syn_Position -> (Position)
wrap_Position :: T_Position -> Inh_Position -> (Syn_Position)
sem_Position :: Position -> T_Position
newtype T_Position
T_Position :: Identity (T_Position_s125) -> T_Position
attach_T_Position :: T_Position -> Identity (T_Position_s125)
newtype T_Position_s125
C_Position_s125 :: (T_Position_v124) -> T_Position_s125
inv_Position_s125 :: T_Position_s125 -> (T_Position_v124)
data T_Position_s126
C_Position_s126 :: T_Position_s126
type T_Position_v124 = (T_Position_vIn124) -> (T_Position_vOut124)
data T_Position_vIn124
T_Position_vIn124 :: T_Position_vIn124
data T_Position_vOut124
T_Position_vOut124 :: (Position) -> T_Position_vOut124
sem_Position_Position :: (String) -> (Int) -> (Int) -> T_Position
sem_Position_Unknown :: T_Position
data Inh_Qualifier
Inh_Qualifier :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> (Map Name Int) -> (Names) -> (Map Name TpScheme) -> ([Warning]) -> Inh_Qualifier
allTypeConstructors_Inh_Qualifier :: Inh_Qualifier -> (Names)
allValueConstructors_Inh_Qualifier :: Inh_Qualifier -> (Names)
classEnvironment_Inh_Qualifier :: Inh_Qualifier -> (ClassEnvironment)
collectScopeInfos_Inh_Qualifier :: Inh_Qualifier -> ([(ScopeInfo, Entity)])
counter_Inh_Qualifier :: Inh_Qualifier -> (Int)
kindErrors_Inh_Qualifier :: Inh_Qualifier -> ([Error])
miscerrors_Inh_Qualifier :: Inh_Qualifier -> ([Error])
namesInScope_Inh_Qualifier :: Inh_Qualifier -> (Names)
options_Inh_Qualifier :: Inh_Qualifier -> ([Option])
orderedTypeSynonyms_Inh_Qualifier :: Inh_Qualifier -> (OrderedTypeSynonyms)
typeConstructors_Inh_Qualifier :: Inh_Qualifier -> (Map Name Int)
unboundNames_Inh_Qualifier :: Inh_Qualifier -> (Names)
valueConstructors_Inh_Qualifier :: Inh_Qualifier -> (Map Name TpScheme)
warnings_Inh_Qualifier :: Inh_Qualifier -> ([Warning])
data Syn_Qualifier
Syn_Qualifier :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> (Qualifier) -> (Names) -> ([Warning]) -> Syn_Qualifier
collectInstances_Syn_Qualifier :: Syn_Qualifier -> ([(Name, Instance)])
collectScopeInfos_Syn_Qualifier :: Syn_Qualifier -> ([(ScopeInfo, Entity)])
counter_Syn_Qualifier :: Syn_Qualifier -> (Int)
kindErrors_Syn_Qualifier :: Syn_Qualifier -> ([Error])
miscerrors_Syn_Qualifier :: Syn_Qualifier -> ([Error])
namesInScope_Syn_Qualifier :: Syn_Qualifier -> (Names)
self_Syn_Qualifier :: Syn_Qualifier -> (Qualifier)
unboundNames_Syn_Qualifier :: Syn_Qualifier -> (Names)
warnings_Syn_Qualifier :: Syn_Qualifier -> ([Warning])
wrap_Qualifier :: T_Qualifier -> Inh_Qualifier -> (Syn_Qualifier)
sem_Qualifier :: Qualifier -> T_Qualifier
newtype T_Qualifier
T_Qualifier :: Identity (T_Qualifier_s128) -> T_Qualifier
attach_T_Qualifier :: T_Qualifier -> Identity (T_Qualifier_s128)
newtype T_Qualifier_s128
C_Qualifier_s128 :: (T_Qualifier_v127) -> T_Qualifier_s128
inv_Qualifier_s128 :: T_Qualifier_s128 -> (T_Qualifier_v127)
data T_Qualifier_s129
C_Qualifier_s129 :: T_Qualifier_s129
type T_Qualifier_v127 = (T_Qualifier_vIn127) -> (T_Qualifier_vOut127)
data T_Qualifier_vIn127
T_Qualifier_vIn127 :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> (Map Name Int) -> (Names) -> (Map Name TpScheme) -> ([Warning]) -> T_Qualifier_vIn127
data T_Qualifier_vOut127
T_Qualifier_vOut127 :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> (Qualifier) -> (Names) -> ([Warning]) -> T_Qualifier_vOut127
sem_Qualifier_Guard :: T_Range -> T_Expression -> T_Qualifier
sem_Qualifier_Let :: T_Range -> T_Declarations -> T_Qualifier
sem_Qualifier_Generator :: T_Range -> T_Pattern -> T_Expression -> T_Qualifier
sem_Qualifier_Empty :: T_Range -> T_Qualifier
data Inh_Qualifiers
Inh_Qualifiers :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> (Map Name Int) -> (Names) -> (Map Name TpScheme) -> ([Warning]) -> Inh_Qualifiers
allTypeConstructors_Inh_Qualifiers :: Inh_Qualifiers -> (Names)
allValueConstructors_Inh_Qualifiers :: Inh_Qualifiers -> (Names)
classEnvironment_Inh_Qualifiers :: Inh_Qualifiers -> (ClassEnvironment)
collectScopeInfos_Inh_Qualifiers :: Inh_Qualifiers -> ([(ScopeInfo, Entity)])
counter_Inh_Qualifiers :: Inh_Qualifiers -> (Int)
kindErrors_Inh_Qualifiers :: Inh_Qualifiers -> ([Error])
miscerrors_Inh_Qualifiers :: Inh_Qualifiers -> ([Error])
namesInScope_Inh_Qualifiers :: Inh_Qualifiers -> (Names)
options_Inh_Qualifiers :: Inh_Qualifiers -> ([Option])
orderedTypeSynonyms_Inh_Qualifiers :: Inh_Qualifiers -> (OrderedTypeSynonyms)
typeConstructors_Inh_Qualifiers :: Inh_Qualifiers -> (Map Name Int)
unboundNames_Inh_Qualifiers :: Inh_Qualifiers -> (Names)
valueConstructors_Inh_Qualifiers :: Inh_Qualifiers -> (Map Name TpScheme)
warnings_Inh_Qualifiers :: Inh_Qualifiers -> ([Warning])
data Syn_Qualifiers
Syn_Qualifiers :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> (Qualifiers) -> (Names) -> ([Warning]) -> Syn_Qualifiers
collectInstances_Syn_Qualifiers :: Syn_Qualifiers -> ([(Name, Instance)])
collectScopeInfos_Syn_Qualifiers :: Syn_Qualifiers -> ([(ScopeInfo, Entity)])
counter_Syn_Qualifiers :: Syn_Qualifiers -> (Int)
kindErrors_Syn_Qualifiers :: Syn_Qualifiers -> ([Error])
miscerrors_Syn_Qualifiers :: Syn_Qualifiers -> ([Error])
namesInScope_Syn_Qualifiers :: Syn_Qualifiers -> (Names)
self_Syn_Qualifiers :: Syn_Qualifiers -> (Qualifiers)
unboundNames_Syn_Qualifiers :: Syn_Qualifiers -> (Names)
warnings_Syn_Qualifiers :: Syn_Qualifiers -> ([Warning])
wrap_Qualifiers :: T_Qualifiers -> Inh_Qualifiers -> (Syn_Qualifiers)
sem_Qualifiers :: Qualifiers -> T_Qualifiers
newtype T_Qualifiers
T_Qualifiers :: Identity (T_Qualifiers_s131) -> T_Qualifiers
attach_T_Qualifiers :: T_Qualifiers -> Identity (T_Qualifiers_s131)
newtype T_Qualifiers_s131
C_Qualifiers_s131 :: (T_Qualifiers_v130) -> T_Qualifiers_s131
inv_Qualifiers_s131 :: T_Qualifiers_s131 -> (T_Qualifiers_v130)
data T_Qualifiers_s132
C_Qualifiers_s132 :: T_Qualifiers_s132
type T_Qualifiers_v130 = (T_Qualifiers_vIn130) -> (T_Qualifiers_vOut130)
data T_Qualifiers_vIn130
T_Qualifiers_vIn130 :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> (Map Name Int) -> (Names) -> (Map Name TpScheme) -> ([Warning]) -> T_Qualifiers_vIn130
data T_Qualifiers_vOut130
T_Qualifiers_vOut130 :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> (Qualifiers) -> (Names) -> ([Warning]) -> T_Qualifiers_vOut130
sem_Qualifiers_Cons :: T_Qualifier -> T_Qualifiers -> T_Qualifiers
sem_Qualifiers_Nil :: T_Qualifiers
data Inh_Range
Inh_Range :: Inh_Range
data Syn_Range
Syn_Range :: (Range) -> Syn_Range
self_Syn_Range :: Syn_Range -> (Range)
wrap_Range :: T_Range -> Inh_Range -> (Syn_Range)
sem_Range :: Range -> T_Range
newtype T_Range
T_Range :: Identity (T_Range_s134) -> T_Range
attach_T_Range :: T_Range -> Identity (T_Range_s134)
newtype T_Range_s134
C_Range_s134 :: (T_Range_v133) -> T_Range_s134
inv_Range_s134 :: T_Range_s134 -> (T_Range_v133)
data T_Range_s135
C_Range_s135 :: T_Range_s135
type T_Range_v133 = (T_Range_vIn133) -> (T_Range_vOut133)
data T_Range_vIn133
T_Range_vIn133 :: T_Range_vIn133
data T_Range_vOut133
T_Range_vOut133 :: (Range) -> T_Range_vOut133
sem_Range_Range :: T_Position -> T_Position -> T_Range
data Inh_RecordExpressionBinding
Inh_RecordExpressionBinding :: (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> Inh_RecordExpressionBinding
classEnvironment_Inh_RecordExpressionBinding :: Inh_RecordExpressionBinding -> (ClassEnvironment)
collectScopeInfos_Inh_RecordExpressionBinding :: Inh_RecordExpressionBinding -> ([(ScopeInfo, Entity)])
counter_Inh_RecordExpressionBinding :: Inh_RecordExpressionBinding -> (Int)
namesInScope_Inh_RecordExpressionBinding :: Inh_RecordExpressionBinding -> (Names)
options_Inh_RecordExpressionBinding :: Inh_RecordExpressionBinding -> ([Option])
orderedTypeSynonyms_Inh_RecordExpressionBinding :: Inh_RecordExpressionBinding -> (OrderedTypeSynonyms)
data Syn_RecordExpressionBinding
Syn_RecordExpressionBinding :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> (RecordExpressionBinding) -> (Names) -> Syn_RecordExpressionBinding
collectInstances_Syn_RecordExpressionBinding :: Syn_RecordExpressionBinding -> ([(Name, Instance)])
collectScopeInfos_Syn_RecordExpressionBinding :: Syn_RecordExpressionBinding -> ([(ScopeInfo, Entity)])
counter_Syn_RecordExpressionBinding :: Syn_RecordExpressionBinding -> (Int)
self_Syn_RecordExpressionBinding :: Syn_RecordExpressionBinding -> (RecordExpressionBinding)
unboundNames_Syn_RecordExpressionBinding :: Syn_RecordExpressionBinding -> (Names)
wrap_RecordExpressionBinding :: T_RecordExpressionBinding -> Inh_RecordExpressionBinding -> (Syn_RecordExpressionBinding)
sem_RecordExpressionBinding :: RecordExpressionBinding -> T_RecordExpressionBinding
newtype T_RecordExpressionBinding
T_RecordExpressionBinding :: Identity (T_RecordExpressionBinding_s137) -> T_RecordExpressionBinding
attach_T_RecordExpressionBinding :: T_RecordExpressionBinding -> Identity (T_RecordExpressionBinding_s137)
newtype T_RecordExpressionBinding_s137
C_RecordExpressionBinding_s137 :: (T_RecordExpressionBinding_v136) -> T_RecordExpressionBinding_s137
inv_RecordExpressionBinding_s137 :: T_RecordExpressionBinding_s137 -> (T_RecordExpressionBinding_v136)
data T_RecordExpressionBinding_s138
C_RecordExpressionBinding_s138 :: T_RecordExpressionBinding_s138
type T_RecordExpressionBinding_v136 = (T_RecordExpressionBinding_vIn136) -> (T_RecordExpressionBinding_vOut136)
data T_RecordExpressionBinding_vIn136
T_RecordExpressionBinding_vIn136 :: (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> T_RecordExpressionBinding_vIn136
data T_RecordExpressionBinding_vOut136
T_RecordExpressionBinding_vOut136 :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> (RecordExpressionBinding) -> (Names) -> T_RecordExpressionBinding_vOut136
sem_RecordExpressionBinding_RecordExpressionBinding :: T_Range -> T_Name -> T_Expression -> T_RecordExpressionBinding
data Inh_RecordExpressionBindings
Inh_RecordExpressionBindings :: (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> Inh_RecordExpressionBindings
classEnvironment_Inh_RecordExpressionBindings :: Inh_RecordExpressionBindings -> (ClassEnvironment)
collectScopeInfos_Inh_RecordExpressionBindings :: Inh_RecordExpressionBindings -> ([(ScopeInfo, Entity)])
counter_Inh_RecordExpressionBindings :: Inh_RecordExpressionBindings -> (Int)
namesInScope_Inh_RecordExpressionBindings :: Inh_RecordExpressionBindings -> (Names)
options_Inh_RecordExpressionBindings :: Inh_RecordExpressionBindings -> ([Option])
orderedTypeSynonyms_Inh_RecordExpressionBindings :: Inh_RecordExpressionBindings -> (OrderedTypeSynonyms)
data Syn_RecordExpressionBindings
Syn_RecordExpressionBindings :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> (RecordExpressionBindings) -> (Names) -> Syn_RecordExpressionBindings
collectInstances_Syn_RecordExpressionBindings :: Syn_RecordExpressionBindings -> ([(Name, Instance)])
collectScopeInfos_Syn_RecordExpressionBindings :: Syn_RecordExpressionBindings -> ([(ScopeInfo, Entity)])
counter_Syn_RecordExpressionBindings :: Syn_RecordExpressionBindings -> (Int)
self_Syn_RecordExpressionBindings :: Syn_RecordExpressionBindings -> (RecordExpressionBindings)
unboundNames_Syn_RecordExpressionBindings :: Syn_RecordExpressionBindings -> (Names)
wrap_RecordExpressionBindings :: T_RecordExpressionBindings -> Inh_RecordExpressionBindings -> (Syn_RecordExpressionBindings)
sem_RecordExpressionBindings :: RecordExpressionBindings -> T_RecordExpressionBindings
newtype T_RecordExpressionBindings
T_RecordExpressionBindings :: Identity (T_RecordExpressionBindings_s140) -> T_RecordExpressionBindings
attach_T_RecordExpressionBindings :: T_RecordExpressionBindings -> Identity (T_RecordExpressionBindings_s140)
newtype T_RecordExpressionBindings_s140
C_RecordExpressionBindings_s140 :: (T_RecordExpressionBindings_v139) -> T_RecordExpressionBindings_s140
inv_RecordExpressionBindings_s140 :: T_RecordExpressionBindings_s140 -> (T_RecordExpressionBindings_v139)
data T_RecordExpressionBindings_s141
C_RecordExpressionBindings_s141 :: T_RecordExpressionBindings_s141
type T_RecordExpressionBindings_v139 = (T_RecordExpressionBindings_vIn139) -> (T_RecordExpressionBindings_vOut139)
data T_RecordExpressionBindings_vIn139
T_RecordExpressionBindings_vIn139 :: (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> T_RecordExpressionBindings_vIn139
data T_RecordExpressionBindings_vOut139
T_RecordExpressionBindings_vOut139 :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> (RecordExpressionBindings) -> (Names) -> T_RecordExpressionBindings_vOut139
sem_RecordExpressionBindings_Cons :: T_RecordExpressionBinding -> T_RecordExpressionBindings -> T_RecordExpressionBindings
sem_RecordExpressionBindings_Nil :: T_RecordExpressionBindings
data Inh_RecordPatternBinding
Inh_RecordPatternBinding :: ([(ScopeInfo, Entity)]) -> (Int) -> (Names) -> Inh_RecordPatternBinding
collectScopeInfos_Inh_RecordPatternBinding :: Inh_RecordPatternBinding -> ([(ScopeInfo, Entity)])
counter_Inh_RecordPatternBinding :: Inh_RecordPatternBinding -> (Int)
namesInScope_Inh_RecordPatternBinding :: Inh_RecordPatternBinding -> (Names)
data Syn_RecordPatternBinding
Syn_RecordPatternBinding :: ([(ScopeInfo, Entity)]) -> (Int) -> (RecordPatternBinding) -> (Names) -> Syn_RecordPatternBinding
collectScopeInfos_Syn_RecordPatternBinding :: Syn_RecordPatternBinding -> ([(ScopeInfo, Entity)])
counter_Syn_RecordPatternBinding :: Syn_RecordPatternBinding -> (Int)
self_Syn_RecordPatternBinding :: Syn_RecordPatternBinding -> (RecordPatternBinding)
unboundNames_Syn_RecordPatternBinding :: Syn_RecordPatternBinding -> (Names)
wrap_RecordPatternBinding :: T_RecordPatternBinding -> Inh_RecordPatternBinding -> (Syn_RecordPatternBinding)
sem_RecordPatternBinding :: RecordPatternBinding -> T_RecordPatternBinding
newtype T_RecordPatternBinding
T_RecordPatternBinding :: Identity (T_RecordPatternBinding_s143) -> T_RecordPatternBinding
attach_T_RecordPatternBinding :: T_RecordPatternBinding -> Identity (T_RecordPatternBinding_s143)
newtype T_RecordPatternBinding_s143
C_RecordPatternBinding_s143 :: (T_RecordPatternBinding_v142) -> T_RecordPatternBinding_s143
inv_RecordPatternBinding_s143 :: T_RecordPatternBinding_s143 -> (T_RecordPatternBinding_v142)
data T_RecordPatternBinding_s144
C_RecordPatternBinding_s144 :: T_RecordPatternBinding_s144
type T_RecordPatternBinding_v142 = (T_RecordPatternBinding_vIn142) -> (T_RecordPatternBinding_vOut142)
data T_RecordPatternBinding_vIn142
T_RecordPatternBinding_vIn142 :: ([(ScopeInfo, Entity)]) -> (Int) -> (Names) -> T_RecordPatternBinding_vIn142
data T_RecordPatternBinding_vOut142
T_RecordPatternBinding_vOut142 :: ([(ScopeInfo, Entity)]) -> (Int) -> (RecordPatternBinding) -> (Names) -> T_RecordPatternBinding_vOut142
sem_RecordPatternBinding_RecordPatternBinding :: T_Range -> T_Name -> T_Pattern -> T_RecordPatternBinding
data Inh_RecordPatternBindings
Inh_RecordPatternBindings :: ([(ScopeInfo, Entity)]) -> (Int) -> (Names) -> Inh_RecordPatternBindings
collectScopeInfos_Inh_RecordPatternBindings :: Inh_RecordPatternBindings -> ([(ScopeInfo, Entity)])
counter_Inh_RecordPatternBindings :: Inh_RecordPatternBindings -> (Int)
namesInScope_Inh_RecordPatternBindings :: Inh_RecordPatternBindings -> (Names)
data Syn_RecordPatternBindings
Syn_RecordPatternBindings :: ([(ScopeInfo, Entity)]) -> (Int) -> (RecordPatternBindings) -> (Names) -> Syn_RecordPatternBindings
collectScopeInfos_Syn_RecordPatternBindings :: Syn_RecordPatternBindings -> ([(ScopeInfo, Entity)])
counter_Syn_RecordPatternBindings :: Syn_RecordPatternBindings -> (Int)
self_Syn_RecordPatternBindings :: Syn_RecordPatternBindings -> (RecordPatternBindings)
unboundNames_Syn_RecordPatternBindings :: Syn_RecordPatternBindings -> (Names)
wrap_RecordPatternBindings :: T_RecordPatternBindings -> Inh_RecordPatternBindings -> (Syn_RecordPatternBindings)
sem_RecordPatternBindings :: RecordPatternBindings -> T_RecordPatternBindings
newtype T_RecordPatternBindings
T_RecordPatternBindings :: Identity (T_RecordPatternBindings_s146) -> T_RecordPatternBindings
attach_T_RecordPatternBindings :: T_RecordPatternBindings -> Identity (T_RecordPatternBindings_s146)
newtype T_RecordPatternBindings_s146
C_RecordPatternBindings_s146 :: (T_RecordPatternBindings_v145) -> T_RecordPatternBindings_s146
inv_RecordPatternBindings_s146 :: T_RecordPatternBindings_s146 -> (T_RecordPatternBindings_v145)
data T_RecordPatternBindings_s147
C_RecordPatternBindings_s147 :: T_RecordPatternBindings_s147
type T_RecordPatternBindings_v145 = (T_RecordPatternBindings_vIn145) -> (T_RecordPatternBindings_vOut145)
data T_RecordPatternBindings_vIn145
T_RecordPatternBindings_vIn145 :: ([(ScopeInfo, Entity)]) -> (Int) -> (Names) -> T_RecordPatternBindings_vIn145
data T_RecordPatternBindings_vOut145
T_RecordPatternBindings_vOut145 :: ([(ScopeInfo, Entity)]) -> (Int) -> (RecordPatternBindings) -> (Names) -> T_RecordPatternBindings_vOut145
sem_RecordPatternBindings_Cons :: T_RecordPatternBinding -> T_RecordPatternBindings -> T_RecordPatternBindings
sem_RecordPatternBindings_Nil :: T_RecordPatternBindings
data Inh_RightHandSide
Inh_RightHandSide :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> Inh_RightHandSide
allTypeConstructors_Inh_RightHandSide :: Inh_RightHandSide -> (Names)
allValueConstructors_Inh_RightHandSide :: Inh_RightHandSide -> (Names)
classEnvironment_Inh_RightHandSide :: Inh_RightHandSide -> (ClassEnvironment)
collectScopeInfos_Inh_RightHandSide :: Inh_RightHandSide -> ([(ScopeInfo, Entity)])
counter_Inh_RightHandSide :: Inh_RightHandSide -> (Int)
kindErrors_Inh_RightHandSide :: Inh_RightHandSide -> ([Error])
miscerrors_Inh_RightHandSide :: Inh_RightHandSide -> ([Error])
namesInScope_Inh_RightHandSide :: Inh_RightHandSide -> (Names)
options_Inh_RightHandSide :: Inh_RightHandSide -> ([Option])
orderedTypeSynonyms_Inh_RightHandSide :: Inh_RightHandSide -> (OrderedTypeSynonyms)
typeConstructors_Inh_RightHandSide :: Inh_RightHandSide -> (Map Name Int)
valueConstructors_Inh_RightHandSide :: Inh_RightHandSide -> (Map Name TpScheme)
warnings_Inh_RightHandSide :: Inh_RightHandSide -> ([Warning])
data Syn_RightHandSide
Syn_RightHandSide :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (RightHandSide) -> (Names) -> ([Warning]) -> Syn_RightHandSide
collectInstances_Syn_RightHandSide :: Syn_RightHandSide -> ([(Name, Instance)])
collectScopeInfos_Syn_RightHandSide :: Syn_RightHandSide -> ([(ScopeInfo, Entity)])
counter_Syn_RightHandSide :: Syn_RightHandSide -> (Int)
kindErrors_Syn_RightHandSide :: Syn_RightHandSide -> ([Error])
miscerrors_Syn_RightHandSide :: Syn_RightHandSide -> ([Error])
self_Syn_RightHandSide :: Syn_RightHandSide -> (RightHandSide)
unboundNames_Syn_RightHandSide :: Syn_RightHandSide -> (Names)
warnings_Syn_RightHandSide :: Syn_RightHandSide -> ([Warning])
wrap_RightHandSide :: T_RightHandSide -> Inh_RightHandSide -> (Syn_RightHandSide)
sem_RightHandSide :: RightHandSide -> T_RightHandSide
newtype T_RightHandSide
T_RightHandSide :: Identity (T_RightHandSide_s149) -> T_RightHandSide
attach_T_RightHandSide :: T_RightHandSide -> Identity (T_RightHandSide_s149)
newtype T_RightHandSide_s149
C_RightHandSide_s149 :: (T_RightHandSide_v148) -> T_RightHandSide_s149
inv_RightHandSide_s149 :: T_RightHandSide_s149 -> (T_RightHandSide_v148)
data T_RightHandSide_s150
C_RightHandSide_s150 :: T_RightHandSide_s150
type T_RightHandSide_v148 = (T_RightHandSide_vIn148) -> (T_RightHandSide_vOut148)
data T_RightHandSide_vIn148
T_RightHandSide_vIn148 :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> (Map Name Int) -> (Map Name TpScheme) -> ([Warning]) -> T_RightHandSide_vIn148
data T_RightHandSide_vOut148
T_RightHandSide_vOut148 :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> ([Error]) -> (RightHandSide) -> (Names) -> ([Warning]) -> T_RightHandSide_vOut148
sem_RightHandSide_Expression :: T_Range -> T_Expression -> T_MaybeDeclarations -> T_RightHandSide
sem_RightHandSide_Guarded :: T_Range -> T_GuardedExpressions -> T_MaybeDeclarations -> T_RightHandSide
data Inh_SimpleType
Inh_SimpleType :: Inh_SimpleType
data Syn_SimpleType
Syn_SimpleType :: (Name) -> (SimpleType) -> (Names) -> Syn_SimpleType
name_Syn_SimpleType :: Syn_SimpleType -> (Name)
self_Syn_SimpleType :: Syn_SimpleType -> (SimpleType)
typevariables_Syn_SimpleType :: Syn_SimpleType -> (Names)
wrap_SimpleType :: T_SimpleType -> Inh_SimpleType -> (Syn_SimpleType)
sem_SimpleType :: SimpleType -> T_SimpleType
newtype T_SimpleType
T_SimpleType :: Identity (T_SimpleType_s152) -> T_SimpleType
attach_T_SimpleType :: T_SimpleType -> Identity (T_SimpleType_s152)
newtype T_SimpleType_s152
C_SimpleType_s152 :: (T_SimpleType_v151) -> T_SimpleType_s152
inv_SimpleType_s152 :: T_SimpleType_s152 -> (T_SimpleType_v151)
data T_SimpleType_s153
C_SimpleType_s153 :: T_SimpleType_s153
type T_SimpleType_v151 = (T_SimpleType_vIn151) -> (T_SimpleType_vOut151)
data T_SimpleType_vIn151
T_SimpleType_vIn151 :: T_SimpleType_vIn151
data T_SimpleType_vOut151
T_SimpleType_vOut151 :: (Name) -> (SimpleType) -> (Names) -> T_SimpleType_vOut151
sem_SimpleType_SimpleType :: T_Range -> T_Name -> T_Names -> T_SimpleType
data Inh_Statement
Inh_Statement :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> (Bool) -> ([Error]) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> (Map Name Int) -> (Names) -> (Map Name TpScheme) -> ([Warning]) -> Inh_Statement
allTypeConstructors_Inh_Statement :: Inh_Statement -> (Names)
allValueConstructors_Inh_Statement :: Inh_Statement -> (Names)
classEnvironment_Inh_Statement :: Inh_Statement -> (ClassEnvironment)
collectScopeInfos_Inh_Statement :: Inh_Statement -> ([(ScopeInfo, Entity)])
counter_Inh_Statement :: Inh_Statement -> (Int)
kindErrors_Inh_Statement :: Inh_Statement -> ([Error])
lastStatementIsExpr_Inh_Statement :: Inh_Statement -> (Bool)
miscerrors_Inh_Statement :: Inh_Statement -> ([Error])
namesInScope_Inh_Statement :: Inh_Statement -> (Names)
options_Inh_Statement :: Inh_Statement -> ([Option])
orderedTypeSynonyms_Inh_Statement :: Inh_Statement -> (OrderedTypeSynonyms)
typeConstructors_Inh_Statement :: Inh_Statement -> (Map Name Int)
unboundNames_Inh_Statement :: Inh_Statement -> (Names)
valueConstructors_Inh_Statement :: Inh_Statement -> (Map Name TpScheme)
warnings_Inh_Statement :: Inh_Statement -> ([Warning])
data Syn_Statement
Syn_Statement :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> (Bool) -> ([Error]) -> (Names) -> (Statement) -> (Names) -> ([Warning]) -> Syn_Statement
collectInstances_Syn_Statement :: Syn_Statement -> ([(Name, Instance)])
collectScopeInfos_Syn_Statement :: Syn_Statement -> ([(ScopeInfo, Entity)])
counter_Syn_Statement :: Syn_Statement -> (Int)
kindErrors_Syn_Statement :: Syn_Statement -> ([Error])
lastStatementIsExpr_Syn_Statement :: Syn_Statement -> (Bool)
miscerrors_Syn_Statement :: Syn_Statement -> ([Error])
namesInScope_Syn_Statement :: Syn_Statement -> (Names)
self_Syn_Statement :: Syn_Statement -> (Statement)
unboundNames_Syn_Statement :: Syn_Statement -> (Names)
warnings_Syn_Statement :: Syn_Statement -> ([Warning])
wrap_Statement :: T_Statement -> Inh_Statement -> (Syn_Statement)
sem_Statement :: Statement -> T_Statement
newtype T_Statement
T_Statement :: Identity (T_Statement_s155) -> T_Statement
attach_T_Statement :: T_Statement -> Identity (T_Statement_s155)
newtype T_Statement_s155
C_Statement_s155 :: (T_Statement_v154) -> T_Statement_s155
inv_Statement_s155 :: T_Statement_s155 -> (T_Statement_v154)
data T_Statement_s156
C_Statement_s156 :: T_Statement_s156
type T_Statement_v154 = (T_Statement_vIn154) -> (T_Statement_vOut154)
data T_Statement_vIn154
T_Statement_vIn154 :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> (Bool) -> ([Error]) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> (Map Name Int) -> (Names) -> (Map Name TpScheme) -> ([Warning]) -> T_Statement_vIn154
data T_Statement_vOut154
T_Statement_vOut154 :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> (Bool) -> ([Error]) -> (Names) -> (Statement) -> (Names) -> ([Warning]) -> T_Statement_vOut154
sem_Statement_Expression :: T_Range -> T_Expression -> T_Statement
sem_Statement_Let :: T_Range -> T_Declarations -> T_Statement
sem_Statement_Generator :: T_Range -> T_Pattern -> T_Expression -> T_Statement
sem_Statement_Empty :: T_Range -> T_Statement
data Inh_Statements
Inh_Statements :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> (Bool) -> ([Error]) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> (Map Name Int) -> (Names) -> (Map Name TpScheme) -> ([Warning]) -> Inh_Statements
allTypeConstructors_Inh_Statements :: Inh_Statements -> (Names)
allValueConstructors_Inh_Statements :: Inh_Statements -> (Names)
classEnvironment_Inh_Statements :: Inh_Statements -> (ClassEnvironment)
collectScopeInfos_Inh_Statements :: Inh_Statements -> ([(ScopeInfo, Entity)])
counter_Inh_Statements :: Inh_Statements -> (Int)
kindErrors_Inh_Statements :: Inh_Statements -> ([Error])
lastStatementIsExpr_Inh_Statements :: Inh_Statements -> (Bool)
miscerrors_Inh_Statements :: Inh_Statements -> ([Error])
namesInScope_Inh_Statements :: Inh_Statements -> (Names)
options_Inh_Statements :: Inh_Statements -> ([Option])
orderedTypeSynonyms_Inh_Statements :: Inh_Statements -> (OrderedTypeSynonyms)
typeConstructors_Inh_Statements :: Inh_Statements -> (Map Name Int)
unboundNames_Inh_Statements :: Inh_Statements -> (Names)
valueConstructors_Inh_Statements :: Inh_Statements -> (Map Name TpScheme)
warnings_Inh_Statements :: Inh_Statements -> ([Warning])
data Syn_Statements
Syn_Statements :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> (Bool) -> ([Error]) -> (Names) -> (Statements) -> (Names) -> ([Warning]) -> Syn_Statements
collectInstances_Syn_Statements :: Syn_Statements -> ([(Name, Instance)])
collectScopeInfos_Syn_Statements :: Syn_Statements -> ([(ScopeInfo, Entity)])
counter_Syn_Statements :: Syn_Statements -> (Int)
kindErrors_Syn_Statements :: Syn_Statements -> ([Error])
lastStatementIsExpr_Syn_Statements :: Syn_Statements -> (Bool)
miscerrors_Syn_Statements :: Syn_Statements -> ([Error])
namesInScope_Syn_Statements :: Syn_Statements -> (Names)
self_Syn_Statements :: Syn_Statements -> (Statements)
unboundNames_Syn_Statements :: Syn_Statements -> (Names)
warnings_Syn_Statements :: Syn_Statements -> ([Warning])
wrap_Statements :: T_Statements -> Inh_Statements -> (Syn_Statements)
sem_Statements :: Statements -> T_Statements
newtype T_Statements
T_Statements :: Identity (T_Statements_s158) -> T_Statements
attach_T_Statements :: T_Statements -> Identity (T_Statements_s158)
newtype T_Statements_s158
C_Statements_s158 :: (T_Statements_v157) -> T_Statements_s158
inv_Statements_s158 :: T_Statements_s158 -> (T_Statements_v157)
data T_Statements_s159
C_Statements_s159 :: T_Statements_s159
type T_Statements_v157 = (T_Statements_vIn157) -> (T_Statements_vOut157)
data T_Statements_vIn157
T_Statements_vIn157 :: (Names) -> (Names) -> (ClassEnvironment) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> (Bool) -> ([Error]) -> (Names) -> ([Option]) -> (OrderedTypeSynonyms) -> (Map Name Int) -> (Names) -> (Map Name TpScheme) -> ([Warning]) -> T_Statements_vIn157
data T_Statements_vOut157
T_Statements_vOut157 :: ([(Name, Instance)]) -> ([(ScopeInfo, Entity)]) -> (Int) -> ([Error]) -> (Bool) -> ([Error]) -> (Names) -> (Statements) -> (Names) -> ([Warning]) -> T_Statements_vOut157
sem_Statements_Cons :: T_Statement -> T_Statements -> T_Statements
sem_Statements_Nil :: T_Statements
data Inh_Strings
Inh_Strings :: Inh_Strings
data Syn_Strings
Syn_Strings :: (Strings) -> Syn_Strings
self_Syn_Strings :: Syn_Strings -> (Strings)
wrap_Strings :: T_Strings -> Inh_Strings -> (Syn_Strings)
sem_Strings :: Strings -> T_Strings
newtype T_Strings
T_Strings :: Identity (T_Strings_s161) -> T_Strings
attach_T_Strings :: T_Strings -> Identity (T_Strings_s161)
newtype T_Strings_s161
C_Strings_s161 :: (T_Strings_v160) -> T_Strings_s161
inv_Strings_s161 :: T_Strings_s161 -> (T_Strings_v160)
data T_Strings_s162
C_Strings_s162 :: T_Strings_s162
type T_Strings_v160 = (T_Strings_vIn160) -> (T_Strings_vOut160)
data T_Strings_vIn160
T_Strings_vIn160 :: T_Strings_vIn160
data T_Strings_vOut160
T_Strings_vOut160 :: (Strings) -> T_Strings_vOut160
sem_Strings_Cons :: (String) -> T_Strings -> T_Strings
sem_Strings_Nil :: T_Strings
data Inh_Type
Inh_Type :: (Names) -> ([Error]) -> ([Option]) -> (Map Name Int) -> ([Warning]) -> Inh_Type
allTypeConstructors_Inh_Type :: Inh_Type -> (Names)
miscerrors_Inh_Type :: Inh_Type -> ([Error])
options_Inh_Type :: Inh_Type -> ([Option])
typeConstructors_Inh_Type :: Inh_Type -> (Map Name Int)
warnings_Inh_Type :: Inh_Type -> ([Warning])
data Syn_Type
Syn_Type :: (Range) -> ([Error]) -> (Type) -> (Names) -> ([Warning]) -> Syn_Type
contextRange_Syn_Type :: Syn_Type -> (Range)
miscerrors_Syn_Type :: Syn_Type -> ([Error])
self_Syn_Type :: Syn_Type -> (Type)
typevariables_Syn_Type :: Syn_Type -> (Names)
warnings_Syn_Type :: Syn_Type -> ([Warning])
wrap_Type :: T_Type -> Inh_Type -> (Syn_Type)
sem_Type :: Type -> T_Type
newtype T_Type
T_Type :: Identity (T_Type_s164) -> T_Type
attach_T_Type :: T_Type -> Identity (T_Type_s164)
newtype T_Type_s164
C_Type_s164 :: (T_Type_v163) -> T_Type_s164
inv_Type_s164 :: T_Type_s164 -> (T_Type_v163)
data T_Type_s165
C_Type_s165 :: T_Type_s165
type T_Type_v163 = (T_Type_vIn163) -> (T_Type_vOut163)
data T_Type_vIn163
T_Type_vIn163 :: (Names) -> ([Error]) -> ([Option]) -> (Map Name Int) -> ([Warning]) -> T_Type_vIn163
data T_Type_vOut163
T_Type_vOut163 :: (Range) -> ([Error]) -> (Type) -> (Names) -> ([Warning]) -> T_Type_vOut163
sem_Type_Application :: T_Range -> (Bool) -> T_Type -> T_Types -> T_Type
sem_Type_Variable :: T_Range -> T_Name -> T_Type
sem_Type_Constructor :: T_Range -> T_Name -> T_Type
sem_Type_Qualified :: T_Range -> T_ContextItems -> T_Type -> T_Type
sem_Type_Forall :: T_Range -> T_Names -> T_Type -> T_Type
sem_Type_Exists :: T_Range -> T_Names -> T_Type -> T_Type
sem_Type_Parenthesized :: T_Range -> T_Type -> T_Type
data Inh_Types
Inh_Types :: (Names) -> ([Error]) -> ([Option]) -> (Map Name Int) -> ([Warning]) -> Inh_Types
allTypeConstructors_Inh_Types :: Inh_Types -> (Names)
miscerrors_Inh_Types :: Inh_Types -> ([Error])
options_Inh_Types :: Inh_Types -> ([Option])
typeConstructors_Inh_Types :: Inh_Types -> (Map Name Int)
warnings_Inh_Types :: Inh_Types -> ([Warning])
data Syn_Types
Syn_Types :: ([Error]) -> (Types) -> (Names) -> ([Warning]) -> Syn_Types
miscerrors_Syn_Types :: Syn_Types -> ([Error])
self_Syn_Types :: Syn_Types -> (Types)
typevariables_Syn_Types :: Syn_Types -> (Names)
warnings_Syn_Types :: Syn_Types -> ([Warning])
wrap_Types :: T_Types -> Inh_Types -> (Syn_Types)
sem_Types :: Types -> T_Types
newtype T_Types
T_Types :: Identity (T_Types_s167) -> T_Types
attach_T_Types :: T_Types -> Identity (T_Types_s167)
newtype T_Types_s167
C_Types_s167 :: (T_Types_v166) -> T_Types_s167
inv_Types_s167 :: T_Types_s167 -> (T_Types_v166)
data T_Types_s168
C_Types_s168 :: T_Types_s168
type T_Types_v166 = (T_Types_vIn166) -> (T_Types_vOut166)
data T_Types_vIn166
T_Types_vIn166 :: (Names) -> ([Error]) -> ([Option]) -> (Map Name Int) -> ([Warning]) -> T_Types_vIn166
data T_Types_vOut166
T_Types_vOut166 :: ([Error]) -> (Types) -> (Names) -> ([Warning]) -> T_Types_vOut166
sem_Types_Cons :: T_Type -> T_Types -> T_Types
sem_Types_Nil :: T_Types


module Helium.Main.PhaseStaticChecks
phaseStaticChecks :: String -> Module -> [ImportEnvironment] -> [Option] -> Phase Error (ImportEnvironment, [(Name, TpScheme)], [Warning])

module Helium.StaticAnalysis.Directives.TS_Apply
applyTypingStrategy :: Core_TypingStrategy -> MetaVariableInfo -> MetaVariableTable -> Int -> (Assumptions, ConstraintSet, IO (), Int)
matchInformation :: ImportEnvironment -> Core_TypingStrategy -> [(Expression, [String])]
expressionParser :: OperatorTable -> String -> Expression
exactlyOnce :: Eq a => [a] -> [a]
type Core_TypingStrategies = [Core_TypingStrategy]
sem_Core_Judgement :: Core_Judgement -> T_Core_Judgement
type T_Core_Judgement = MetaVariableInfo -> MetaVariableTable -> MapSubstitution -> ([Int], [(String, Tp)])
data Inh_Core_Judgement
Inh_Core_Judgement :: MetaVariableInfo -> MetaVariableTable -> MapSubstitution -> Inh_Core_Judgement
infoTuple_Inh_Core_Judgement :: Inh_Core_Judgement -> MetaVariableInfo
metaVariableTable_Inh_Core_Judgement :: Inh_Core_Judgement -> MetaVariableTable
substitution_Inh_Core_Judgement :: Inh_Core_Judgement -> MapSubstitution
data Syn_Core_Judgement
Syn_Core_Judgement :: ([Int]) -> ([(String, Tp)]) -> Syn_Core_Judgement
ftv_Syn_Core_Judgement :: Syn_Core_Judgement -> ([Int])
judgements_Syn_Core_Judgement :: Syn_Core_Judgement -> ([(String, Tp)])
wrap_Core_Judgement :: T_Core_Judgement -> Inh_Core_Judgement -> Syn_Core_Judgement
sem_Core_Judgement_Judgement :: String -> Tp -> T_Core_Judgement
sem_Core_Judgements :: Core_Judgements -> T_Core_Judgements
type T_Core_Judgements = MetaVariableInfo -> MetaVariableTable -> MapSubstitution -> ([Int], [(String, Tp)])
data Inh_Core_Judgements
Inh_Core_Judgements :: MetaVariableInfo -> MetaVariableTable -> MapSubstitution -> Inh_Core_Judgements
infoTuple_Inh_Core_Judgements :: Inh_Core_Judgements -> MetaVariableInfo
metaVariableTable_Inh_Core_Judgements :: Inh_Core_Judgements -> MetaVariableTable
substitution_Inh_Core_Judgements :: Inh_Core_Judgements -> MapSubstitution
data Syn_Core_Judgements
Syn_Core_Judgements :: ([Int]) -> ([(String, Tp)]) -> Syn_Core_Judgements
ftv_Syn_Core_Judgements :: Syn_Core_Judgements -> ([Int])
judgements_Syn_Core_Judgements :: Syn_Core_Judgements -> ([(String, Tp)])
wrap_Core_Judgements :: T_Core_Judgements -> Inh_Core_Judgements -> Syn_Core_Judgements
sem_Core_Judgements_Cons :: T_Core_Judgement -> T_Core_Judgements -> T_Core_Judgements
sem_Core_Judgements_Nil :: T_Core_Judgements
sem_Core_TypeRule :: Core_TypeRule -> T_Core_TypeRule
type T_Core_TypeRule = MetaVariableInfo -> MetaVariableTable -> MapSubstitution -> (TypeConstraints ConstraintInfo, [Int], [(String, Tp)])
data Inh_Core_TypeRule
Inh_Core_TypeRule :: MetaVariableInfo -> MetaVariableTable -> MapSubstitution -> Inh_Core_TypeRule
infoTuple_Inh_Core_TypeRule :: Inh_Core_TypeRule -> MetaVariableInfo
metaVariableTable_Inh_Core_TypeRule :: Inh_Core_TypeRule -> MetaVariableTable
substitution_Inh_Core_TypeRule :: Inh_Core_TypeRule -> MapSubstitution
data Syn_Core_TypeRule
Syn_Core_TypeRule :: (TypeConstraints ConstraintInfo) -> ([Int]) -> ([(String, Tp)]) -> Syn_Core_TypeRule
constraints_Syn_Core_TypeRule :: Syn_Core_TypeRule -> (TypeConstraints ConstraintInfo)
ftv_Syn_Core_TypeRule :: Syn_Core_TypeRule -> ([Int])
judgements_Syn_Core_TypeRule :: Syn_Core_TypeRule -> ([(String, Tp)])
wrap_Core_TypeRule :: T_Core_TypeRule -> Inh_Core_TypeRule -> Syn_Core_TypeRule
sem_Core_TypeRule_TypeRule :: T_Core_Judgements -> T_Core_Judgement -> T_Core_TypeRule
sem_Core_TypingStrategy :: Core_TypingStrategy -> T_Core_TypingStrategy
type T_Core_TypingStrategy = MetaVariableInfo -> MetaVariableTable -> Int -> (Assumptions, ConstraintSet, IO (), Int)
data Inh_Core_TypingStrategy
Inh_Core_TypingStrategy :: MetaVariableInfo -> MetaVariableTable -> Int -> Inh_Core_TypingStrategy
infoTuple_Inh_Core_TypingStrategy :: Inh_Core_TypingStrategy -> MetaVariableInfo
metaVariableTable_Inh_Core_TypingStrategy :: Inh_Core_TypingStrategy -> MetaVariableTable
unique_Inh_Core_TypingStrategy :: Inh_Core_TypingStrategy -> Int
data Syn_Core_TypingStrategy
Syn_Core_TypingStrategy :: Assumptions -> ConstraintSet -> (IO ()) -> Int -> Syn_Core_TypingStrategy
assumptions_Syn_Core_TypingStrategy :: Syn_Core_TypingStrategy -> Assumptions
constraintSet_Syn_Core_TypingStrategy :: Syn_Core_TypingStrategy -> ConstraintSet
debugIO_Syn_Core_TypingStrategy :: Syn_Core_TypingStrategy -> (IO ())
unique_Syn_Core_TypingStrategy :: Syn_Core_TypingStrategy -> Int
wrap_Core_TypingStrategy :: T_Core_TypingStrategy -> Inh_Core_TypingStrategy -> Syn_Core_TypingStrategy
sem_Core_TypingStrategy_Siblings :: ([String]) -> T_Core_TypingStrategy
sem_Core_TypingStrategy_TypingStrategy :: ([(String, Tp)]) -> T_Core_TypeRule -> T_Core_UserStatements -> T_Core_TypingStrategy
sem_Core_UserStatement :: Core_UserStatement -> T_Core_UserStatement
type T_Core_UserStatement = (Trees (TypeConstraint ConstraintInfo)) -> (Maybe Int) -> ((Int, Int)) -> (Attribute -> MessageBlock) -> MetaVariableInfo -> MetaVariableTable -> ([(String, Tree (TypeConstraint ConstraintInfo))]) -> MapSubstitution -> (Trees (TypeConstraint ConstraintInfo), Maybe Int, (Int, Int), [Int], [(String, Tree (TypeConstraint ConstraintInfo))])
data Inh_Core_UserStatement
Inh_Core_UserStatement :: (Trees (TypeConstraint ConstraintInfo)) -> (Maybe Int) -> ((Int, Int)) -> (Attribute -> MessageBlock) -> MetaVariableInfo -> MetaVariableTable -> ([(String, Tree (TypeConstraint ConstraintInfo))]) -> MapSubstitution -> Inh_Core_UserStatement
collectConstraints_Inh_Core_UserStatement :: Inh_Core_UserStatement -> (Trees (TypeConstraint ConstraintInfo))
currentPhase_Inh_Core_UserStatement :: Inh_Core_UserStatement -> (Maybe Int)
currentPosition_Inh_Core_UserStatement :: Inh_Core_UserStatement -> ((Int, Int))
fromAttribute_Inh_Core_UserStatement :: Inh_Core_UserStatement -> (Attribute -> MessageBlock)
infoTuple_Inh_Core_UserStatement :: Inh_Core_UserStatement -> MetaVariableInfo
metaVariableTable_Inh_Core_UserStatement :: Inh_Core_UserStatement -> MetaVariableTable
metavarConstraints_Inh_Core_UserStatement :: Inh_Core_UserStatement -> ([(String, Tree (TypeConstraint ConstraintInfo))])
substitution_Inh_Core_UserStatement :: Inh_Core_UserStatement -> MapSubstitution
data Syn_Core_UserStatement
Syn_Core_UserStatement :: (Trees (TypeConstraint ConstraintInfo)) -> (Maybe Int) -> ((Int, Int)) -> ([Int]) -> ([(String, Tree (TypeConstraint ConstraintInfo))]) -> Syn_Core_UserStatement
collectConstraints_Syn_Core_UserStatement :: Syn_Core_UserStatement -> (Trees (TypeConstraint ConstraintInfo))
currentPhase_Syn_Core_UserStatement :: Syn_Core_UserStatement -> (Maybe Int)
currentPosition_Syn_Core_UserStatement :: Syn_Core_UserStatement -> ((Int, Int))
ftv_Syn_Core_UserStatement :: Syn_Core_UserStatement -> ([Int])
metavarConstraints_Syn_Core_UserStatement :: Syn_Core_UserStatement -> ([(String, Tree (TypeConstraint ConstraintInfo))])
wrap_Core_UserStatement :: T_Core_UserStatement -> Inh_Core_UserStatement -> Syn_Core_UserStatement
sem_Core_UserStatement_Equal :: Tp -> Tp -> String -> T_Core_UserStatement
sem_Core_UserStatement_Pred :: String -> Tp -> String -> T_Core_UserStatement
sem_Core_UserStatement_MetaVariableConstraints :: String -> T_Core_UserStatement
sem_Core_UserStatement_CorePhase :: Int -> T_Core_UserStatement
sem_Core_UserStatements :: Core_UserStatements -> T_Core_UserStatements
type T_Core_UserStatements = (Trees (TypeConstraint ConstraintInfo)) -> (Maybe Int) -> ((Int, Int)) -> (Attribute -> MessageBlock) -> MetaVariableInfo -> MetaVariableTable -> ([(String, Tree (TypeConstraint ConstraintInfo))]) -> MapSubstitution -> (Trees (TypeConstraint ConstraintInfo), Maybe Int, (Int, Int), [Int], [(String, Tree (TypeConstraint ConstraintInfo))])
data Inh_Core_UserStatements
Inh_Core_UserStatements :: (Trees (TypeConstraint ConstraintInfo)) -> (Maybe Int) -> ((Int, Int)) -> (Attribute -> MessageBlock) -> MetaVariableInfo -> MetaVariableTable -> ([(String, Tree (TypeConstraint ConstraintInfo))]) -> MapSubstitution -> Inh_Core_UserStatements
collectConstraints_Inh_Core_UserStatements :: Inh_Core_UserStatements -> (Trees (TypeConstraint ConstraintInfo))
currentPhase_Inh_Core_UserStatements :: Inh_Core_UserStatements -> (Maybe Int)
currentPosition_Inh_Core_UserStatements :: Inh_Core_UserStatements -> ((Int, Int))
fromAttribute_Inh_Core_UserStatements :: Inh_Core_UserStatements -> (Attribute -> MessageBlock)
infoTuple_Inh_Core_UserStatements :: Inh_Core_UserStatements -> MetaVariableInfo
metaVariableTable_Inh_Core_UserStatements :: Inh_Core_UserStatements -> MetaVariableTable
metavarConstraints_Inh_Core_UserStatements :: Inh_Core_UserStatements -> ([(String, Tree (TypeConstraint ConstraintInfo))])
substitution_Inh_Core_UserStatements :: Inh_Core_UserStatements -> MapSubstitution
data Syn_Core_UserStatements
Syn_Core_UserStatements :: (Trees (TypeConstraint ConstraintInfo)) -> (Maybe Int) -> ((Int, Int)) -> ([Int]) -> ([(String, Tree (TypeConstraint ConstraintInfo))]) -> Syn_Core_UserStatements
collectConstraints_Syn_Core_UserStatements :: Syn_Core_UserStatements -> (Trees (TypeConstraint ConstraintInfo))
currentPhase_Syn_Core_UserStatements :: Syn_Core_UserStatements -> (Maybe Int)
currentPosition_Syn_Core_UserStatements :: Syn_Core_UserStatements -> ((Int, Int))
ftv_Syn_Core_UserStatements :: Syn_Core_UserStatements -> ([Int])
metavarConstraints_Syn_Core_UserStatements :: Syn_Core_UserStatements -> ([(String, Tree (TypeConstraint ConstraintInfo))])
wrap_Core_UserStatements :: T_Core_UserStatements -> Inh_Core_UserStatements -> Syn_Core_UserStatements
sem_Core_UserStatements_Cons :: T_Core_UserStatement -> T_Core_UserStatements -> T_Core_UserStatements
sem_Core_UserStatements_Nil :: T_Core_UserStatements


-- | A heuristic that tries to blaim two program locations that both
--   contribute to the type error, instead of preferring (or choosing) one
--   location over the other. The type error messages will be more
--   "symmetric".
module Helium.StaticAnalysis.Heuristics.UnifierHeuristics
class IsUnifier a
typeErrorForUnifier :: IsUnifier a => (Tp, Tp) -> (a, a) -> a
isUnifier :: IsUnifier a => a -> Maybe (Int, (String, LocalInfo, String))
unifierVertex :: (HasTypeGraph m info, IsUnifier info) => Selector m info


-- | using the additional information that is stored by the Helium compiler
--   for each type constraint
module Helium.StaticAnalysis.Heuristics.HeuristicsInfo
makeUnifier :: Name -> String -> Map Name Tp -> InfoTree -> Property
specialApplicationTypeError :: (Bool, Bool) -> Int -> OneLineTree -> (Tp, Tp) -> Range -> ConstraintInfo -> ConstraintInfo
specialUnifierTypeError :: (Tp, Tp) -> (ConstraintInfo, ConstraintInfo) -> ConstraintInfo
skip_UHA_FB_RHS :: InfoTree -> InfoTree
findVariableInPat :: Name -> InfoTree -> InfoTree
hasVariable :: Name -> Pattern -> Bool
maybeAddLocation :: UHA_Source -> MessageBlock
instance IsUnifier ConstraintInfo
instance WithHints ConstraintInfo
instance IsTupleEdge ConstraintInfo
instance IsFunctionBinding ConstraintInfo
instance IsExprVariable ConstraintInfo
instance MaybeNegation ConstraintInfo
instance MaybeUnaryMinus ConstraintInfo
instance MaybeApplication ConstraintInfo
instance IsPattern ConstraintInfo
instance MaybeLiteral ConstraintInfo
instance HasTwoTypes ConstraintInfo
instance MaybeImported ConstraintInfo
instance HasDirection ConstraintInfo
instance HasTrustFactor ConstraintInfo


module Helium.StaticAnalysis.Heuristics.ListOfHeuristics
listOfHeuristics :: [Option] -> Siblings -> Path (EdgeId, ConstraintInfo) -> [Heuristic ConstraintInfo]


module Helium.StaticAnalysis.Inferencers.SelectConstraintSolver
selectConstraintSolver :: [Option] -> ImportEnvironment -> TreeSolver

module Helium.StaticAnalysis.Inferencers.TypeInferencing
typeInferencing :: [Option] -> ImportEnvironment -> Module -> (IO (), DictionaryEnvironment, TypeEnvironment, TypeErrors, Warnings)
proximaTypeInferencing :: [Option] -> ImportEnvironment -> Module -> (TypeErrors, Warnings, TypeEnvironment, [(Range, TpScheme)])
getRequiredDictionaries :: OrderedTypeSynonyms -> Tp -> TpScheme -> Predicates
matchTypeWithScheme :: OrderedTypeSynonyms -> Tp -> TpScheme -> Predicates
resolveOverloading :: ClassEnvironment -> Name -> Predicates -> Predicates -> DictionaryEnvironment -> DictionaryEnvironment
expandPredicates :: OrderedTypeSynonyms -> Predicates -> Predicates
expandPredicate :: OrderedTypeSynonyms -> Predicate -> Predicate
findInferredTypes :: Map Int (Scheme Predicates) -> Map Name (Sigma Predicates) -> TypeEnvironment
missingTypeSignature :: Bool -> Names -> TypeEnvironment -> Warnings
restrictedNameErrors :: TypeEnvironment -> Names -> TypeErrors
makeLocalTypeEnv :: TypeEnvironment -> BindingGroups -> Map NameWithRange TpScheme
isSimplePattern :: Pattern -> Bool
globalInfoError :: a
type ScopeInfo = ([Names], [Name], [(Name, Name)])
changeOfScope :: Names -> Names -> Names -> (Names, Names, ScopeInfo)
uniqueAppearance :: Ord a => [a] -> ([a], [[a]])
nextUnique :: Num a => a -> (a, a)
matchConverter0 :: [([String], ())] -> ()
matchConverter1 :: [([String], a)] -> [(a, [String])]
matchConverter2 :: [([String], (a, b))] -> ([(a, [String])], [(b, [String])])
matchConverter3 :: [([String], (a, b, c))] -> ([(a, [String])], [(b, [String])], [(c, [String])])
allMatch :: [Maybe [a]] -> Maybe [a]
data Match a
NoMatch :: Match a
NonTerminalMatch :: a -> Match a
MetaVariableMatch :: String -> Match a
expressionVariableMatcher :: Expression -> Maybe String
match0 :: MetaVariableInfo -> Int -> (Expression -> Maybe ()) -> [(Expression, [String])] -> [((Expression, [String]), Core_TypingStrategy)] -> [[Maybe MetaVariableTable]] -> ((), [Maybe MetaVariableTable], ConstraintSet, Assumptions, Int, IO ())
match1 :: MetaVariableInfo -> Int -> (Expression -> Maybe a) -> [(Expression, [String])] -> [((Expression, [String]), Core_TypingStrategy)] -> [[Maybe MetaVariableTable]] -> ([(a, [String])], [Maybe MetaVariableTable], ConstraintSet, Assumptions, Int, IO ())
match2 :: MetaVariableInfo -> Int -> (Expression -> Maybe (a, b)) -> [(Expression, [String])] -> [((Expression, [String]), Core_TypingStrategy)] -> [[Maybe MetaVariableTable]] -> (([(a, [String])], [(b, [String])]), [Maybe MetaVariableTable], ConstraintSet, Assumptions, Int, IO ())
match3 :: MetaVariableInfo -> Int -> (Expression -> Maybe (a, b, c)) -> [(Expression, [String])] -> [((Expression, [String]), Core_TypingStrategy)] -> [[Maybe MetaVariableTable]] -> (([(a, [String])], [(b, [String])], [(c, [String])]), [Maybe MetaVariableTable], ConstraintSet, Assumptions, Int, IO ())
match0' :: (a -> Maybe ()) -> [(a, [String])] -> [((a, [String]), Core_TypingStrategy)] -> [[Maybe MetaVariableTable]] -> ((), [Maybe MetaVariableTable], ConstraintSet, Assumptions, Int, IO ())
match1' :: (a -> Maybe b) -> [(a, [String])] -> [((a, [String]), Core_TypingStrategy)] -> [[Maybe MetaVariableTable]] -> ([(b, [String])], [Maybe MetaVariableTable], ConstraintSet, Assumptions, Int, IO ())
match2' :: (n -> Maybe (a, b)) -> [(n, [String])] -> [((n, [String]), Core_TypingStrategy)] -> [[Maybe MetaVariableTable]] -> (([(a, [String])], [(b, [String])]), [Maybe MetaVariableTable], ConstraintSet, Assumptions, Int, IO ())
matchOnlyVariable :: MetaVariableInfo -> [(Expression, [String])] -> [Maybe MetaVariableTable]
noMatch :: a -> Maybe b
noMetaVariableInfo :: a
generalMatch :: (nonTerminal -> Maybe String) -> ([([String], childrenTuple)] -> childrenResult) -> MetaVariableInfo -> Int -> (nonTerminal -> Maybe childrenTuple) -> [(nonTerminal, [String])] -> [((nonTerminal, [String]), Core_TypingStrategy)] -> [[Maybe MetaVariableTable]] -> (childrenResult, [Maybe MetaVariableTable], ConstraintSet, Assumptions, Int, IO ())
pmError :: String -> String -> a
expandTypeFromImportEnvironment :: ImportEnvironment -> Tp -> Tp
patternMatchWarnings :: Substitution substitution => ImportEnvironment -> substitution -> Tp -> (Tp -> Tps) -> [([PatternElement], Bool)] -> Range -> Maybe Name -> Bool -> [Warning] -> String -> String -> [Warning]
(|^|) :: (a -> Bool) -> (a -> Bool) -> a -> Bool
type Env = [(Tp, (Name, [Tp]))]
importEnvironmentToEnv :: ImportEnvironment -> [(Tp, (Name, [Tp]))]
nrOfArguments :: Env -> String -> Int
rearrange :: (Name, TpScheme) -> (Tp, (Name, [Tp]))
constructors :: ImportEnvironment -> Tp -> [(Name, [Tp])]
substitute :: Tp -> (Tp, (Name, [Tp])) -> [(Name, [Tp])]
data PatternElement
WildcardElement :: PatternElement
InfiniteElement :: String -> PatternElement
FiniteElement :: String -> PatternElement
isInfiniteElement :: PatternElement -> Bool
elementString :: PatternElement -> String
listPat :: [[PatternElement]] -> [PatternElement]
stringPat :: String -> [PatternElement]
data PatternsMissing
PatternsMissing :: [(PatternElement, PatternsMissing)] -> PatternsMissing
unMissing :: PatternsMissing -> [(PatternElement, PatternsMissing)]
wildMissing :: Int -> PatternsMissing
missingList :: PatternsMissing -> [[PatternElement]]
nicePattern :: Bool -> Env -> [PatternElement] -> [Pattern]
parensPattern :: Bool -> Pattern -> Pattern
complement :: ImportEnvironment -> [Tp] -> [[PatternElement]] -> PatternsMissing
unreachable :: ImportEnvironment -> [Tp] -> [([PatternElement], Int)] -> [Int]
reachable :: ImportEnvironment -> [Tp] -> [([PatternElement], Int)] -> [Int]
thin :: [PatternElement] -> [PatternElement]
data Inh_Alternative
Inh_Alternative :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Predicates) -> (Tp) -> (Tp) -> (Int) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (IO ()) -> (Monos) -> (Names) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> (Map Int (Scheme Predicates)) -> (Int) -> Inh_Alternative
allPatterns_Inh_Alternative :: Inh_Alternative -> ([((Expression, [String]), Core_TypingStrategy)])
allTypeSchemes_Inh_Alternative :: Inh_Alternative -> (Map NameWithRange TpScheme)
availablePredicates_Inh_Alternative :: Inh_Alternative -> (Predicates)
betaLeft_Inh_Alternative :: Inh_Alternative -> (Tp)
betaRight_Inh_Alternative :: Inh_Alternative -> (Tp)
betaUnique_Inh_Alternative :: Inh_Alternative -> (Int)
classEnvironment_Inh_Alternative :: Inh_Alternative -> (ClassEnvironment)
collectErrors_Inh_Alternative :: Inh_Alternative -> (TypeErrors)
collectWarnings_Inh_Alternative :: Inh_Alternative -> (Warnings)
counter_Inh_Alternative :: Inh_Alternative -> (Int)
currentChunk_Inh_Alternative :: Inh_Alternative -> (Int)
dictionaryEnvironment_Inh_Alternative :: Inh_Alternative -> (DictionaryEnvironment)
importEnvironment_Inh_Alternative :: Inh_Alternative -> (ImportEnvironment)
matchIO_Inh_Alternative :: Inh_Alternative -> (IO ())
monos_Inh_Alternative :: Inh_Alternative -> (Monos)
namesInScope_Inh_Alternative :: Inh_Alternative -> (Names)
orderedTypeSynonyms_Inh_Alternative :: Inh_Alternative -> (OrderedTypeSynonyms)
parentTree_Inh_Alternative :: Inh_Alternative -> (InfoTree)
patternMatchWarnings_Inh_Alternative :: Inh_Alternative -> ([Warning])
substitution_Inh_Alternative :: Inh_Alternative -> (FixpointSubstitution)
typeschemeMap_Inh_Alternative :: Inh_Alternative -> (Map Int (Scheme Predicates))
uniqueChunk_Inh_Alternative :: Inh_Alternative -> (Int)
data Syn_Alternative
Syn_Alternative :: (Assumptions) -> (Int) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (ConstraintSet) -> (Int) -> (DictionaryEnvironment) -> (([PatternElement], Bool)) -> (InfoTrees) -> (IO ()) -> ([Warning]) -> (Alternative) -> (Names) -> (Int) -> (Warning) -> Syn_Alternative
assumptions_Syn_Alternative :: Syn_Alternative -> (Assumptions)
betaUnique_Syn_Alternative :: Syn_Alternative -> (Int)
collectErrors_Syn_Alternative :: Syn_Alternative -> (TypeErrors)
collectInstances_Syn_Alternative :: Syn_Alternative -> ([(Name, Instance)])
collectWarnings_Syn_Alternative :: Syn_Alternative -> (Warnings)
constraints_Syn_Alternative :: Syn_Alternative -> (ConstraintSet)
counter_Syn_Alternative :: Syn_Alternative -> (Int)
dictionaryEnvironment_Syn_Alternative :: Syn_Alternative -> (DictionaryEnvironment)
elements_Syn_Alternative :: Syn_Alternative -> (([PatternElement], Bool))
infoTrees_Syn_Alternative :: Syn_Alternative -> (InfoTrees)
matchIO_Syn_Alternative :: Syn_Alternative -> (IO ())
patternMatchWarnings_Syn_Alternative :: Syn_Alternative -> ([Warning])
self_Syn_Alternative :: Syn_Alternative -> (Alternative)
unboundNames_Syn_Alternative :: Syn_Alternative -> (Names)
uniqueChunk_Syn_Alternative :: Syn_Alternative -> (Int)
unrwar_Syn_Alternative :: Syn_Alternative -> (Warning)
wrap_Alternative :: T_Alternative -> Inh_Alternative -> (Syn_Alternative)
sem_Alternative :: Alternative -> T_Alternative
newtype T_Alternative
T_Alternative :: Identity (T_Alternative_s2) -> T_Alternative
attach_T_Alternative :: T_Alternative -> Identity (T_Alternative_s2)
newtype T_Alternative_s2
C_Alternative_s2 :: (T_Alternative_v1) -> T_Alternative_s2
inv_Alternative_s2 :: T_Alternative_s2 -> (T_Alternative_v1)
data T_Alternative_s3
C_Alternative_s3 :: T_Alternative_s3
type T_Alternative_v1 = (T_Alternative_vIn1) -> (T_Alternative_vOut1)
data T_Alternative_vIn1
T_Alternative_vIn1 :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Predicates) -> (Tp) -> (Tp) -> (Int) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (IO ()) -> (Monos) -> (Names) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> (Map Int (Scheme Predicates)) -> (Int) -> T_Alternative_vIn1
data T_Alternative_vOut1
T_Alternative_vOut1 :: (Assumptions) -> (Int) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (ConstraintSet) -> (Int) -> (DictionaryEnvironment) -> (([PatternElement], Bool)) -> (InfoTrees) -> (IO ()) -> ([Warning]) -> (Alternative) -> (Names) -> (Int) -> (Warning) -> T_Alternative_vOut1
sem_Alternative_Hole :: T_Range -> (Integer) -> T_Alternative
sem_Alternative_Feedback :: T_Range -> (String) -> T_Alternative -> T_Alternative
sem_Alternative_Alternative :: T_Range -> T_Pattern -> T_RightHandSide -> T_Alternative
sem_Alternative_Empty :: T_Range -> T_Alternative
data Inh_Alternatives
Inh_Alternatives :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Predicates) -> (Tp) -> (Tp) -> (Int) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (IO ()) -> (Monos) -> (Names) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> (Map Int (Scheme Predicates)) -> (Int) -> Inh_Alternatives
allPatterns_Inh_Alternatives :: Inh_Alternatives -> ([((Expression, [String]), Core_TypingStrategy)])
allTypeSchemes_Inh_Alternatives :: Inh_Alternatives -> (Map NameWithRange TpScheme)
availablePredicates_Inh_Alternatives :: Inh_Alternatives -> (Predicates)
betaLeft_Inh_Alternatives :: Inh_Alternatives -> (Tp)
betaRight_Inh_Alternatives :: Inh_Alternatives -> (Tp)
betaUnique_Inh_Alternatives :: Inh_Alternatives -> (Int)
classEnvironment_Inh_Alternatives :: Inh_Alternatives -> (ClassEnvironment)
collectErrors_Inh_Alternatives :: Inh_Alternatives -> (TypeErrors)
collectWarnings_Inh_Alternatives :: Inh_Alternatives -> (Warnings)
counter_Inh_Alternatives :: Inh_Alternatives -> (Int)
currentChunk_Inh_Alternatives :: Inh_Alternatives -> (Int)
dictionaryEnvironment_Inh_Alternatives :: Inh_Alternatives -> (DictionaryEnvironment)
importEnvironment_Inh_Alternatives :: Inh_Alternatives -> (ImportEnvironment)
matchIO_Inh_Alternatives :: Inh_Alternatives -> (IO ())
monos_Inh_Alternatives :: Inh_Alternatives -> (Monos)
namesInScope_Inh_Alternatives :: Inh_Alternatives -> (Names)
orderedTypeSynonyms_Inh_Alternatives :: Inh_Alternatives -> (OrderedTypeSynonyms)
parentTree_Inh_Alternatives :: Inh_Alternatives -> (InfoTree)
patternMatchWarnings_Inh_Alternatives :: Inh_Alternatives -> ([Warning])
substitution_Inh_Alternatives :: Inh_Alternatives -> (FixpointSubstitution)
typeschemeMap_Inh_Alternatives :: Inh_Alternatives -> (Map Int (Scheme Predicates))
uniqueChunk_Inh_Alternatives :: Inh_Alternatives -> (Int)
data Syn_Alternatives
Syn_Alternatives :: (Assumptions) -> (Int) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (ConstraintSets) -> (Int) -> (DictionaryEnvironment) -> ([([PatternElement], Bool)]) -> (InfoTrees) -> (IO ()) -> ([Warning]) -> (Alternatives) -> (Names) -> (Int) -> ([Warning]) -> Syn_Alternatives
assumptions_Syn_Alternatives :: Syn_Alternatives -> (Assumptions)
betaUnique_Syn_Alternatives :: Syn_Alternatives -> (Int)
collectErrors_Syn_Alternatives :: Syn_Alternatives -> (TypeErrors)
collectInstances_Syn_Alternatives :: Syn_Alternatives -> ([(Name, Instance)])
collectWarnings_Syn_Alternatives :: Syn_Alternatives -> (Warnings)
constraintslist_Syn_Alternatives :: Syn_Alternatives -> (ConstraintSets)
counter_Syn_Alternatives :: Syn_Alternatives -> (Int)
dictionaryEnvironment_Syn_Alternatives :: Syn_Alternatives -> (DictionaryEnvironment)
elementss_Syn_Alternatives :: Syn_Alternatives -> ([([PatternElement], Bool)])
infoTrees_Syn_Alternatives :: Syn_Alternatives -> (InfoTrees)
matchIO_Syn_Alternatives :: Syn_Alternatives -> (IO ())
patternMatchWarnings_Syn_Alternatives :: Syn_Alternatives -> ([Warning])
self_Syn_Alternatives :: Syn_Alternatives -> (Alternatives)
unboundNames_Syn_Alternatives :: Syn_Alternatives -> (Names)
uniqueChunk_Syn_Alternatives :: Syn_Alternatives -> (Int)
unrwars_Syn_Alternatives :: Syn_Alternatives -> ([Warning])
wrap_Alternatives :: T_Alternatives -> Inh_Alternatives -> (Syn_Alternatives)
sem_Alternatives :: Alternatives -> T_Alternatives
newtype T_Alternatives
T_Alternatives :: Identity (T_Alternatives_s5) -> T_Alternatives
attach_T_Alternatives :: T_Alternatives -> Identity (T_Alternatives_s5)
newtype T_Alternatives_s5
C_Alternatives_s5 :: (T_Alternatives_v4) -> T_Alternatives_s5
inv_Alternatives_s5 :: T_Alternatives_s5 -> (T_Alternatives_v4)
data T_Alternatives_s6
C_Alternatives_s6 :: T_Alternatives_s6
type T_Alternatives_v4 = (T_Alternatives_vIn4) -> (T_Alternatives_vOut4)
data T_Alternatives_vIn4
T_Alternatives_vIn4 :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Predicates) -> (Tp) -> (Tp) -> (Int) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (IO ()) -> (Monos) -> (Names) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> (Map Int (Scheme Predicates)) -> (Int) -> T_Alternatives_vIn4
data T_Alternatives_vOut4
T_Alternatives_vOut4 :: (Assumptions) -> (Int) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (ConstraintSets) -> (Int) -> (DictionaryEnvironment) -> ([([PatternElement], Bool)]) -> (InfoTrees) -> (IO ()) -> ([Warning]) -> (Alternatives) -> (Names) -> (Int) -> ([Warning]) -> T_Alternatives_vOut4
sem_Alternatives_Cons :: T_Alternative -> T_Alternatives -> T_Alternatives
sem_Alternatives_Nil :: T_Alternatives
data Inh_AnnotatedType
Inh_AnnotatedType :: (Int) -> (Names) -> Inh_AnnotatedType
counter_Inh_AnnotatedType :: Inh_AnnotatedType -> (Int)
namesInScope_Inh_AnnotatedType :: Inh_AnnotatedType -> (Names)
data Syn_AnnotatedType
Syn_AnnotatedType :: (Int) -> (AnnotatedType) -> (Names) -> Syn_AnnotatedType
counter_Syn_AnnotatedType :: Syn_AnnotatedType -> (Int)
self_Syn_AnnotatedType :: Syn_AnnotatedType -> (AnnotatedType)
unboundNames_Syn_AnnotatedType :: Syn_AnnotatedType -> (Names)
wrap_AnnotatedType :: T_AnnotatedType -> Inh_AnnotatedType -> (Syn_AnnotatedType)
sem_AnnotatedType :: AnnotatedType -> T_AnnotatedType
newtype T_AnnotatedType
T_AnnotatedType :: Identity (T_AnnotatedType_s8) -> T_AnnotatedType
attach_T_AnnotatedType :: T_AnnotatedType -> Identity (T_AnnotatedType_s8)
newtype T_AnnotatedType_s8
C_AnnotatedType_s8 :: (T_AnnotatedType_v7) -> T_AnnotatedType_s8
inv_AnnotatedType_s8 :: T_AnnotatedType_s8 -> (T_AnnotatedType_v7)
data T_AnnotatedType_s9
C_AnnotatedType_s9 :: T_AnnotatedType_s9
type T_AnnotatedType_v7 = (T_AnnotatedType_vIn7) -> (T_AnnotatedType_vOut7)
data T_AnnotatedType_vIn7
T_AnnotatedType_vIn7 :: (Int) -> (Names) -> T_AnnotatedType_vIn7
data T_AnnotatedType_vOut7
T_AnnotatedType_vOut7 :: (Int) -> (AnnotatedType) -> (Names) -> T_AnnotatedType_vOut7
sem_AnnotatedType_AnnotatedType :: T_Range -> (Bool) -> T_Type -> T_AnnotatedType
data Inh_AnnotatedTypes
Inh_AnnotatedTypes :: (Int) -> (Names) -> Inh_AnnotatedTypes
counter_Inh_AnnotatedTypes :: Inh_AnnotatedTypes -> (Int)
namesInScope_Inh_AnnotatedTypes :: Inh_AnnotatedTypes -> (Names)
data Syn_AnnotatedTypes
Syn_AnnotatedTypes :: (Int) -> (AnnotatedTypes) -> (Names) -> Syn_AnnotatedTypes
counter_Syn_AnnotatedTypes :: Syn_AnnotatedTypes -> (Int)
self_Syn_AnnotatedTypes :: Syn_AnnotatedTypes -> (AnnotatedTypes)
unboundNames_Syn_AnnotatedTypes :: Syn_AnnotatedTypes -> (Names)
wrap_AnnotatedTypes :: T_AnnotatedTypes -> Inh_AnnotatedTypes -> (Syn_AnnotatedTypes)
sem_AnnotatedTypes :: AnnotatedTypes -> T_AnnotatedTypes
newtype T_AnnotatedTypes
T_AnnotatedTypes :: Identity (T_AnnotatedTypes_s11) -> T_AnnotatedTypes
attach_T_AnnotatedTypes :: T_AnnotatedTypes -> Identity (T_AnnotatedTypes_s11)
newtype T_AnnotatedTypes_s11
C_AnnotatedTypes_s11 :: (T_AnnotatedTypes_v10) -> T_AnnotatedTypes_s11
inv_AnnotatedTypes_s11 :: T_AnnotatedTypes_s11 -> (T_AnnotatedTypes_v10)
data T_AnnotatedTypes_s12
C_AnnotatedTypes_s12 :: T_AnnotatedTypes_s12
type T_AnnotatedTypes_v10 = (T_AnnotatedTypes_vIn10) -> (T_AnnotatedTypes_vOut10)
data T_AnnotatedTypes_vIn10
T_AnnotatedTypes_vIn10 :: (Int) -> (Names) -> T_AnnotatedTypes_vIn10
data T_AnnotatedTypes_vOut10
T_AnnotatedTypes_vOut10 :: (Int) -> (AnnotatedTypes) -> (Names) -> T_AnnotatedTypes_vOut10
sem_AnnotatedTypes_Cons :: T_AnnotatedType -> T_AnnotatedTypes -> T_AnnotatedTypes
sem_AnnotatedTypes_Nil :: T_AnnotatedTypes
data Inh_Body
Inh_Body :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Predicates) -> (Int) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (IO ()) -> (Monos) -> (Names) -> (OrderedTypeSynonyms) -> ([Warning]) -> (FixpointSubstitution) -> (Map Int (Scheme Predicates)) -> (Int) -> Inh_Body
allPatterns_Inh_Body :: Inh_Body -> ([((Expression, [String]), Core_TypingStrategy)])
allTypeSchemes_Inh_Body :: Inh_Body -> (Map NameWithRange TpScheme)
availablePredicates_Inh_Body :: Inh_Body -> (Predicates)
betaUnique_Inh_Body :: Inh_Body -> (Int)
classEnvironment_Inh_Body :: Inh_Body -> (ClassEnvironment)
collectErrors_Inh_Body :: Inh_Body -> (TypeErrors)
collectWarnings_Inh_Body :: Inh_Body -> (Warnings)
counter_Inh_Body :: Inh_Body -> (Int)
currentChunk_Inh_Body :: Inh_Body -> (Int)
dictionaryEnvironment_Inh_Body :: Inh_Body -> (DictionaryEnvironment)
importEnvironment_Inh_Body :: Inh_Body -> (ImportEnvironment)
matchIO_Inh_Body :: Inh_Body -> (IO ())
monos_Inh_Body :: Inh_Body -> (Monos)
namesInScope_Inh_Body :: Inh_Body -> (Names)
orderedTypeSynonyms_Inh_Body :: Inh_Body -> (OrderedTypeSynonyms)
patternMatchWarnings_Inh_Body :: Inh_Body -> ([Warning])
substitution_Inh_Body :: Inh_Body -> (FixpointSubstitution)
typeschemeMap_Inh_Body :: Inh_Body -> (Map Int (Scheme Predicates))
uniqueChunk_Inh_Body :: Inh_Body -> (Int)
data Syn_Body
Syn_Body :: (Assumptions) -> (Int) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (ConstraintSet) -> (Int) -> (Names) -> (DictionaryEnvironment) -> (InfoTree) -> (IO ()) -> ([Warning]) -> (Body) -> (TypeEnvironment) -> (Names) -> (Int) -> Syn_Body
assumptions_Syn_Body :: Syn_Body -> (Assumptions)
betaUnique_Syn_Body :: Syn_Body -> (Int)
collectErrors_Syn_Body :: Syn_Body -> (TypeErrors)
collectInstances_Syn_Body :: Syn_Body -> ([(Name, Instance)])
collectWarnings_Syn_Body :: Syn_Body -> (Warnings)
constraints_Syn_Body :: Syn_Body -> (ConstraintSet)
counter_Syn_Body :: Syn_Body -> (Int)
declVarNames_Syn_Body :: Syn_Body -> (Names)
dictionaryEnvironment_Syn_Body :: Syn_Body -> (DictionaryEnvironment)
infoTree_Syn_Body :: Syn_Body -> (InfoTree)
matchIO_Syn_Body :: Syn_Body -> (IO ())
patternMatchWarnings_Syn_Body :: Syn_Body -> ([Warning])
self_Syn_Body :: Syn_Body -> (Body)
toplevelTypes_Syn_Body :: Syn_Body -> (TypeEnvironment)
unboundNames_Syn_Body :: Syn_Body -> (Names)
uniqueChunk_Syn_Body :: Syn_Body -> (Int)
wrap_Body :: T_Body -> Inh_Body -> (Syn_Body)
sem_Body :: Body -> T_Body
newtype T_Body
T_Body :: Identity (T_Body_s14) -> T_Body
attach_T_Body :: T_Body -> Identity (T_Body_s14)
newtype T_Body_s14
C_Body_s14 :: (T_Body_v13) -> T_Body_s14
inv_Body_s14 :: T_Body_s14 -> (T_Body_v13)
data T_Body_s15
C_Body_s15 :: T_Body_s15
type T_Body_v13 = (T_Body_vIn13) -> (T_Body_vOut13)
data T_Body_vIn13
T_Body_vIn13 :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Predicates) -> (Int) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (IO ()) -> (Monos) -> (Names) -> (OrderedTypeSynonyms) -> ([Warning]) -> (FixpointSubstitution) -> (Map Int (Scheme Predicates)) -> (Int) -> T_Body_vIn13
data T_Body_vOut13
T_Body_vOut13 :: (Assumptions) -> (Int) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (ConstraintSet) -> (Int) -> (Names) -> (DictionaryEnvironment) -> (InfoTree) -> (IO ()) -> ([Warning]) -> (Body) -> (TypeEnvironment) -> (Names) -> (Int) -> T_Body_vOut13
sem_Body_Hole :: T_Range -> (Integer) -> T_Body
sem_Body_Body :: T_Range -> T_ImportDeclarations -> T_Declarations -> T_Body
data Inh_Constructor
Inh_Constructor :: (Int) -> (Names) -> Inh_Constructor
counter_Inh_Constructor :: Inh_Constructor -> (Int)
namesInScope_Inh_Constructor :: Inh_Constructor -> (Names)
data Syn_Constructor
Syn_Constructor :: (Int) -> (Constructor) -> (Names) -> Syn_Constructor
counter_Syn_Constructor :: Syn_Constructor -> (Int)
self_Syn_Constructor :: Syn_Constructor -> (Constructor)
unboundNames_Syn_Constructor :: Syn_Constructor -> (Names)
wrap_Constructor :: T_Constructor -> Inh_Constructor -> (Syn_Constructor)
sem_Constructor :: Constructor -> T_Constructor
newtype T_Constructor
T_Constructor :: Identity (T_Constructor_s17) -> T_Constructor
attach_T_Constructor :: T_Constructor -> Identity (T_Constructor_s17)
newtype T_Constructor_s17
C_Constructor_s17 :: (T_Constructor_v16) -> T_Constructor_s17
inv_Constructor_s17 :: T_Constructor_s17 -> (T_Constructor_v16)
data T_Constructor_s18
C_Constructor_s18 :: T_Constructor_s18
type T_Constructor_v16 = (T_Constructor_vIn16) -> (T_Constructor_vOut16)
data T_Constructor_vIn16
T_Constructor_vIn16 :: (Int) -> (Names) -> T_Constructor_vIn16
data T_Constructor_vOut16
T_Constructor_vOut16 :: (Int) -> (Constructor) -> (Names) -> T_Constructor_vOut16
sem_Constructor_Constructor :: T_Range -> T_Name -> T_AnnotatedTypes -> T_Constructor
sem_Constructor_Infix :: T_Range -> T_AnnotatedType -> T_Name -> T_AnnotatedType -> T_Constructor
sem_Constructor_Record :: T_Range -> T_Name -> T_FieldDeclarations -> T_Constructor
data Inh_Constructors
Inh_Constructors :: (Int) -> (Names) -> Inh_Constructors
counter_Inh_Constructors :: Inh_Constructors -> (Int)
namesInScope_Inh_Constructors :: Inh_Constructors -> (Names)
data Syn_Constructors
Syn_Constructors :: (Int) -> (Constructors) -> (Names) -> Syn_Constructors
counter_Syn_Constructors :: Syn_Constructors -> (Int)
self_Syn_Constructors :: Syn_Constructors -> (Constructors)
unboundNames_Syn_Constructors :: Syn_Constructors -> (Names)
wrap_Constructors :: T_Constructors -> Inh_Constructors -> (Syn_Constructors)
sem_Constructors :: Constructors -> T_Constructors
newtype T_Constructors
T_Constructors :: Identity (T_Constructors_s20) -> T_Constructors
attach_T_Constructors :: T_Constructors -> Identity (T_Constructors_s20)
newtype T_Constructors_s20
C_Constructors_s20 :: (T_Constructors_v19) -> T_Constructors_s20
inv_Constructors_s20 :: T_Constructors_s20 -> (T_Constructors_v19)
data T_Constructors_s21
C_Constructors_s21 :: T_Constructors_s21
type T_Constructors_v19 = (T_Constructors_vIn19) -> (T_Constructors_vOut19)
data T_Constructors_vIn19
T_Constructors_vIn19 :: (Int) -> (Names) -> T_Constructors_vIn19
data T_Constructors_vOut19
T_Constructors_vOut19 :: (Int) -> (Constructors) -> (Names) -> T_Constructors_vOut19
sem_Constructors_Cons :: T_Constructor -> T_Constructors -> T_Constructors
sem_Constructors_Nil :: T_Constructors
data Inh_ContextItem
Inh_ContextItem :: Inh_ContextItem
data Syn_ContextItem
Syn_ContextItem :: (ContextItem) -> Syn_ContextItem
self_Syn_ContextItem :: Syn_ContextItem -> (ContextItem)
wrap_ContextItem :: T_ContextItem -> Inh_ContextItem -> (Syn_ContextItem)
sem_ContextItem :: ContextItem -> T_ContextItem
newtype T_ContextItem
T_ContextItem :: Identity (T_ContextItem_s23) -> T_ContextItem
attach_T_ContextItem :: T_ContextItem -> Identity (T_ContextItem_s23)
newtype T_ContextItem_s23
C_ContextItem_s23 :: (T_ContextItem_v22) -> T_ContextItem_s23
inv_ContextItem_s23 :: T_ContextItem_s23 -> (T_ContextItem_v22)
data T_ContextItem_s24
C_ContextItem_s24 :: T_ContextItem_s24
type T_ContextItem_v22 = (T_ContextItem_vIn22) -> (T_ContextItem_vOut22)
data T_ContextItem_vIn22
T_ContextItem_vIn22 :: T_ContextItem_vIn22
data T_ContextItem_vOut22
T_ContextItem_vOut22 :: (ContextItem) -> T_ContextItem_vOut22
sem_ContextItem_ContextItem :: T_Range -> T_Name -> T_Types -> T_ContextItem
data Inh_ContextItems
Inh_ContextItems :: Inh_ContextItems
data Syn_ContextItems
Syn_ContextItems :: (ContextItems) -> Syn_ContextItems
self_Syn_ContextItems :: Syn_ContextItems -> (ContextItems)
wrap_ContextItems :: T_ContextItems -> Inh_ContextItems -> (Syn_ContextItems)
sem_ContextItems :: ContextItems -> T_ContextItems
newtype T_ContextItems
T_ContextItems :: Identity (T_ContextItems_s26) -> T_ContextItems
attach_T_ContextItems :: T_ContextItems -> Identity (T_ContextItems_s26)
newtype T_ContextItems_s26
C_ContextItems_s26 :: (T_ContextItems_v25) -> T_ContextItems_s26
inv_ContextItems_s26 :: T_ContextItems_s26 -> (T_ContextItems_v25)
data T_ContextItems_s27
C_ContextItems_s27 :: T_ContextItems_s27
type T_ContextItems_v25 = (T_ContextItems_vIn25) -> (T_ContextItems_vOut25)
data T_ContextItems_vIn25
T_ContextItems_vIn25 :: T_ContextItems_vIn25
data T_ContextItems_vOut25
T_ContextItems_vOut25 :: (ContextItems) -> T_ContextItems_vOut25
sem_ContextItems_Cons :: T_ContextItem -> T_ContextItems -> T_ContextItems
sem_ContextItems_Nil :: T_ContextItems
data Inh_Declaration
Inh_Declaration :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Predicates) -> (Int) -> (BindingGroups) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (InheritedBDG) -> (IO ()) -> (Monos) -> (Names) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> (TypeEnvironment) -> (Map Int (Scheme Predicates)) -> (Int) -> Inh_Declaration
allPatterns_Inh_Declaration :: Inh_Declaration -> ([((Expression, [String]), Core_TypingStrategy)])
allTypeSchemes_Inh_Declaration :: Inh_Declaration -> (Map NameWithRange TpScheme)
availablePredicates_Inh_Declaration :: Inh_Declaration -> (Predicates)
betaUnique_Inh_Declaration :: Inh_Declaration -> (Int)
bindingGroups_Inh_Declaration :: Inh_Declaration -> (BindingGroups)
classEnvironment_Inh_Declaration :: Inh_Declaration -> (ClassEnvironment)
collectErrors_Inh_Declaration :: Inh_Declaration -> (TypeErrors)
collectWarnings_Inh_Declaration :: Inh_Declaration -> (Warnings)
counter_Inh_Declaration :: Inh_Declaration -> (Int)
currentChunk_Inh_Declaration :: Inh_Declaration -> (Int)
dictionaryEnvironment_Inh_Declaration :: Inh_Declaration -> (DictionaryEnvironment)
importEnvironment_Inh_Declaration :: Inh_Declaration -> (ImportEnvironment)
inheritedBDG_Inh_Declaration :: Inh_Declaration -> (InheritedBDG)
matchIO_Inh_Declaration :: Inh_Declaration -> (IO ())
monos_Inh_Declaration :: Inh_Declaration -> (Monos)
namesInScope_Inh_Declaration :: Inh_Declaration -> (Names)
orderedTypeSynonyms_Inh_Declaration :: Inh_Declaration -> (OrderedTypeSynonyms)
parentTree_Inh_Declaration :: Inh_Declaration -> (InfoTree)
patternMatchWarnings_Inh_Declaration :: Inh_Declaration -> ([Warning])
substitution_Inh_Declaration :: Inh_Declaration -> (FixpointSubstitution)
typeSignatures_Inh_Declaration :: Inh_Declaration -> (TypeEnvironment)
typeschemeMap_Inh_Declaration :: Inh_Declaration -> (Map Int (Scheme Predicates))
uniqueChunk_Inh_Declaration :: Inh_Declaration -> (Int)
data Syn_Declaration
Syn_Declaration :: (Int) -> (BindingGroups) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (Int) -> (Names) -> (DictionaryEnvironment) -> (InfoTrees) -> (IO ()) -> ([Warning]) -> (Names) -> (Declaration) -> (Names) -> (TypeEnvironment) -> (Names) -> (Int) -> Syn_Declaration
betaUnique_Syn_Declaration :: Syn_Declaration -> (Int)
bindingGroups_Syn_Declaration :: Syn_Declaration -> (BindingGroups)
collectErrors_Syn_Declaration :: Syn_Declaration -> (TypeErrors)
collectInstances_Syn_Declaration :: Syn_Declaration -> ([(Name, Instance)])
collectWarnings_Syn_Declaration :: Syn_Declaration -> (Warnings)
counter_Syn_Declaration :: Syn_Declaration -> (Int)
declVarNames_Syn_Declaration :: Syn_Declaration -> (Names)
dictionaryEnvironment_Syn_Declaration :: Syn_Declaration -> (DictionaryEnvironment)
infoTrees_Syn_Declaration :: Syn_Declaration -> (InfoTrees)
matchIO_Syn_Declaration :: Syn_Declaration -> (IO ())
patternMatchWarnings_Syn_Declaration :: Syn_Declaration -> ([Warning])
restrictedNames_Syn_Declaration :: Syn_Declaration -> (Names)
self_Syn_Declaration :: Syn_Declaration -> (Declaration)
simplePatNames_Syn_Declaration :: Syn_Declaration -> (Names)
typeSignatures_Syn_Declaration :: Syn_Declaration -> (TypeEnvironment)
unboundNames_Syn_Declaration :: Syn_Declaration -> (Names)
uniqueChunk_Syn_Declaration :: Syn_Declaration -> (Int)
wrap_Declaration :: T_Declaration -> Inh_Declaration -> (Syn_Declaration)
sem_Declaration :: Declaration -> T_Declaration
newtype T_Declaration
T_Declaration :: Identity (T_Declaration_s29) -> T_Declaration
attach_T_Declaration :: T_Declaration -> Identity (T_Declaration_s29)
newtype T_Declaration_s29
C_Declaration_s29 :: (T_Declaration_v28) -> T_Declaration_s29
inv_Declaration_s29 :: T_Declaration_s29 -> (T_Declaration_v28)
data T_Declaration_s30
C_Declaration_s30 :: T_Declaration_s30
type T_Declaration_v28 = (T_Declaration_vIn28) -> (T_Declaration_vOut28)
data T_Declaration_vIn28
T_Declaration_vIn28 :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Predicates) -> (Int) -> (BindingGroups) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (InheritedBDG) -> (IO ()) -> (Monos) -> (Names) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> (TypeEnvironment) -> (Map Int (Scheme Predicates)) -> (Int) -> T_Declaration_vIn28
data T_Declaration_vOut28
T_Declaration_vOut28 :: (Int) -> (BindingGroups) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (Int) -> (Names) -> (DictionaryEnvironment) -> (InfoTrees) -> (IO ()) -> ([Warning]) -> (Names) -> (Declaration) -> (Names) -> (TypeEnvironment) -> (Names) -> (Int) -> T_Declaration_vOut28
sem_Declaration_Hole :: T_Range -> (Integer) -> T_Declaration
sem_Declaration_Type :: T_Range -> T_SimpleType -> T_Type -> T_Declaration
sem_Declaration_Data :: T_Range -> T_ContextItems -> T_SimpleType -> T_Constructors -> T_Names -> T_Declaration
sem_Declaration_Newtype :: T_Range -> T_ContextItems -> T_SimpleType -> T_Constructor -> T_Names -> T_Declaration
sem_Declaration_Class :: T_Range -> T_ContextItems -> T_SimpleType -> T_MaybeDeclarations -> T_Declaration
sem_Declaration_Instance :: T_Range -> T_ContextItems -> T_Name -> T_Types -> T_MaybeDeclarations -> T_Declaration
sem_Declaration_Default :: T_Range -> T_Types -> T_Declaration
sem_Declaration_FunctionBindings :: T_Range -> T_FunctionBindings -> T_Declaration
sem_Declaration_PatternBinding :: T_Range -> T_Pattern -> T_RightHandSide -> T_Declaration
sem_Declaration_TypeSignature :: T_Range -> T_Names -> T_Type -> T_Declaration
sem_Declaration_Fixity :: T_Range -> T_Fixity -> T_MaybeInt -> T_Names -> T_Declaration
sem_Declaration_Empty :: T_Range -> T_Declaration
data Inh_Declarations
Inh_Declarations :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Predicates) -> (Int) -> (BindingGroups) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (InheritedBDG) -> (IO ()) -> (Monos) -> (Names) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> (TypeEnvironment) -> (Map Int (Scheme Predicates)) -> (Int) -> Inh_Declarations
allPatterns_Inh_Declarations :: Inh_Declarations -> ([((Expression, [String]), Core_TypingStrategy)])
allTypeSchemes_Inh_Declarations :: Inh_Declarations -> (Map NameWithRange TpScheme)
availablePredicates_Inh_Declarations :: Inh_Declarations -> (Predicates)
betaUnique_Inh_Declarations :: Inh_Declarations -> (Int)
bindingGroups_Inh_Declarations :: Inh_Declarations -> (BindingGroups)
classEnvironment_Inh_Declarations :: Inh_Declarations -> (ClassEnvironment)
collectErrors_Inh_Declarations :: Inh_Declarations -> (TypeErrors)
collectWarnings_Inh_Declarations :: Inh_Declarations -> (Warnings)
counter_Inh_Declarations :: Inh_Declarations -> (Int)
currentChunk_Inh_Declarations :: Inh_Declarations -> (Int)
dictionaryEnvironment_Inh_Declarations :: Inh_Declarations -> (DictionaryEnvironment)
importEnvironment_Inh_Declarations :: Inh_Declarations -> (ImportEnvironment)
inheritedBDG_Inh_Declarations :: Inh_Declarations -> (InheritedBDG)
matchIO_Inh_Declarations :: Inh_Declarations -> (IO ())
monos_Inh_Declarations :: Inh_Declarations -> (Monos)
namesInScope_Inh_Declarations :: Inh_Declarations -> (Names)
orderedTypeSynonyms_Inh_Declarations :: Inh_Declarations -> (OrderedTypeSynonyms)
parentTree_Inh_Declarations :: Inh_Declarations -> (InfoTree)
patternMatchWarnings_Inh_Declarations :: Inh_Declarations -> ([Warning])
substitution_Inh_Declarations :: Inh_Declarations -> (FixpointSubstitution)
typeSignatures_Inh_Declarations :: Inh_Declarations -> (TypeEnvironment)
typeschemeMap_Inh_Declarations :: Inh_Declarations -> (Map Int (Scheme Predicates))
uniqueChunk_Inh_Declarations :: Inh_Declarations -> (Int)
data Syn_Declarations
Syn_Declarations :: (Int) -> (BindingGroups) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (Int) -> (Names) -> (DictionaryEnvironment) -> (InfoTrees) -> (IO ()) -> ([Warning]) -> (Names) -> (Declarations) -> (Names) -> (TypeEnvironment) -> (Names) -> (Int) -> Syn_Declarations
betaUnique_Syn_Declarations :: Syn_Declarations -> (Int)
bindingGroups_Syn_Declarations :: Syn_Declarations -> (BindingGroups)
collectErrors_Syn_Declarations :: Syn_Declarations -> (TypeErrors)
collectInstances_Syn_Declarations :: Syn_Declarations -> ([(Name, Instance)])
collectWarnings_Syn_Declarations :: Syn_Declarations -> (Warnings)
counter_Syn_Declarations :: Syn_Declarations -> (Int)
declVarNames_Syn_Declarations :: Syn_Declarations -> (Names)
dictionaryEnvironment_Syn_Declarations :: Syn_Declarations -> (DictionaryEnvironment)
infoTrees_Syn_Declarations :: Syn_Declarations -> (InfoTrees)
matchIO_Syn_Declarations :: Syn_Declarations -> (IO ())
patternMatchWarnings_Syn_Declarations :: Syn_Declarations -> ([Warning])
restrictedNames_Syn_Declarations :: Syn_Declarations -> (Names)
self_Syn_Declarations :: Syn_Declarations -> (Declarations)
simplePatNames_Syn_Declarations :: Syn_Declarations -> (Names)
typeSignatures_Syn_Declarations :: Syn_Declarations -> (TypeEnvironment)
unboundNames_Syn_Declarations :: Syn_Declarations -> (Names)
uniqueChunk_Syn_Declarations :: Syn_Declarations -> (Int)
wrap_Declarations :: T_Declarations -> Inh_Declarations -> (Syn_Declarations)
sem_Declarations :: Declarations -> T_Declarations
newtype T_Declarations
T_Declarations :: Identity (T_Declarations_s32) -> T_Declarations
attach_T_Declarations :: T_Declarations -> Identity (T_Declarations_s32)
newtype T_Declarations_s32
C_Declarations_s32 :: (T_Declarations_v31) -> T_Declarations_s32
inv_Declarations_s32 :: T_Declarations_s32 -> (T_Declarations_v31)
data T_Declarations_s33
C_Declarations_s33 :: T_Declarations_s33
type T_Declarations_v31 = (T_Declarations_vIn31) -> (T_Declarations_vOut31)
data T_Declarations_vIn31
T_Declarations_vIn31 :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Predicates) -> (Int) -> (BindingGroups) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (InheritedBDG) -> (IO ()) -> (Monos) -> (Names) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> (TypeEnvironment) -> (Map Int (Scheme Predicates)) -> (Int) -> T_Declarations_vIn31
data T_Declarations_vOut31
T_Declarations_vOut31 :: (Int) -> (BindingGroups) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (Int) -> (Names) -> (DictionaryEnvironment) -> (InfoTrees) -> (IO ()) -> ([Warning]) -> (Names) -> (Declarations) -> (Names) -> (TypeEnvironment) -> (Names) -> (Int) -> T_Declarations_vOut31
sem_Declarations_Cons :: T_Declaration -> T_Declarations -> T_Declarations
sem_Declarations_Nil :: T_Declarations
data Inh_Export
Inh_Export :: Inh_Export
data Syn_Export
Syn_Export :: (Export) -> Syn_Export
self_Syn_Export :: Syn_Export -> (Export)
wrap_Export :: T_Export -> Inh_Export -> (Syn_Export)
sem_Export :: Export -> T_Export
newtype T_Export
T_Export :: Identity (T_Export_s35) -> T_Export
attach_T_Export :: T_Export -> Identity (T_Export_s35)
newtype T_Export_s35
C_Export_s35 :: (T_Export_v34) -> T_Export_s35
inv_Export_s35 :: T_Export_s35 -> (T_Export_v34)
data T_Export_s36
C_Export_s36 :: T_Export_s36
type T_Export_v34 = (T_Export_vIn34) -> (T_Export_vOut34)
data T_Export_vIn34
T_Export_vIn34 :: T_Export_vIn34
data T_Export_vOut34
T_Export_vOut34 :: (Export) -> T_Export_vOut34
sem_Export_Variable :: T_Range -> T_Name -> T_Export
sem_Export_TypeOrClass :: T_Range -> T_Name -> T_MaybeNames -> T_Export
sem_Export_TypeOrClassComplete :: T_Range -> T_Name -> T_Export
sem_Export_Module :: T_Range -> T_Name -> T_Export
data Inh_Exports
Inh_Exports :: Inh_Exports
data Syn_Exports
Syn_Exports :: (Exports) -> Syn_Exports
self_Syn_Exports :: Syn_Exports -> (Exports)
wrap_Exports :: T_Exports -> Inh_Exports -> (Syn_Exports)
sem_Exports :: Exports -> T_Exports
newtype T_Exports
T_Exports :: Identity (T_Exports_s38) -> T_Exports
attach_T_Exports :: T_Exports -> Identity (T_Exports_s38)
newtype T_Exports_s38
C_Exports_s38 :: (T_Exports_v37) -> T_Exports_s38
inv_Exports_s38 :: T_Exports_s38 -> (T_Exports_v37)
data T_Exports_s39
C_Exports_s39 :: T_Exports_s39
type T_Exports_v37 = (T_Exports_vIn37) -> (T_Exports_vOut37)
data T_Exports_vIn37
T_Exports_vIn37 :: T_Exports_vIn37
data T_Exports_vOut37
T_Exports_vOut37 :: (Exports) -> T_Exports_vOut37
sem_Exports_Cons :: T_Export -> T_Exports -> T_Exports
sem_Exports_Nil :: T_Exports
data Inh_Expression
Inh_Expression :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Predicates) -> (Int) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (IO ()) -> (Monos) -> (Names) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> ([(Expression, [String])]) -> (Map Int (Scheme Predicates)) -> (Int) -> (Int) -> Inh_Expression
allPatterns_Inh_Expression :: Inh_Expression -> ([((Expression, [String]), Core_TypingStrategy)])
allTypeSchemes_Inh_Expression :: Inh_Expression -> (Map NameWithRange TpScheme)
availablePredicates_Inh_Expression :: Inh_Expression -> (Predicates)
betaUnique_Inh_Expression :: Inh_Expression -> (Int)
classEnvironment_Inh_Expression :: Inh_Expression -> (ClassEnvironment)
collectErrors_Inh_Expression :: Inh_Expression -> (TypeErrors)
collectWarnings_Inh_Expression :: Inh_Expression -> (Warnings)
counter_Inh_Expression :: Inh_Expression -> (Int)
currentChunk_Inh_Expression :: Inh_Expression -> (Int)
dictionaryEnvironment_Inh_Expression :: Inh_Expression -> (DictionaryEnvironment)
importEnvironment_Inh_Expression :: Inh_Expression -> (ImportEnvironment)
matchIO_Inh_Expression :: Inh_Expression -> (IO ())
monos_Inh_Expression :: Inh_Expression -> (Monos)
namesInScope_Inh_Expression :: Inh_Expression -> (Names)
orderedTypeSynonyms_Inh_Expression :: Inh_Expression -> (OrderedTypeSynonyms)
parentTree_Inh_Expression :: Inh_Expression -> (InfoTree)
patternMatchWarnings_Inh_Expression :: Inh_Expression -> ([Warning])
substitution_Inh_Expression :: Inh_Expression -> (FixpointSubstitution)
tryPatterns_Inh_Expression :: Inh_Expression -> ([(Expression, [String])])
typeschemeMap_Inh_Expression :: Inh_Expression -> (Map Int (Scheme Predicates))
uniqueChunk_Inh_Expression :: Inh_Expression -> (Int)
uniqueSecondRound_Inh_Expression :: Inh_Expression -> (Int)
data Syn_Expression
Syn_Expression :: (Assumptions) -> (Tp) -> (Int) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (ConstraintSet) -> (Int) -> (DictionaryEnvironment) -> (InfoTree) -> (IO ()) -> ([Maybe MetaVariableTable]) -> ([Warning]) -> (Expression) -> (Names) -> (Int) -> (Int) -> Syn_Expression
assumptions_Syn_Expression :: Syn_Expression -> (Assumptions)
beta_Syn_Expression :: Syn_Expression -> (Tp)
betaUnique_Syn_Expression :: Syn_Expression -> (Int)
collectErrors_Syn_Expression :: Syn_Expression -> (TypeErrors)
collectInstances_Syn_Expression :: Syn_Expression -> ([(Name, Instance)])
collectWarnings_Syn_Expression :: Syn_Expression -> (Warnings)
constraints_Syn_Expression :: Syn_Expression -> (ConstraintSet)
counter_Syn_Expression :: Syn_Expression -> (Int)
dictionaryEnvironment_Syn_Expression :: Syn_Expression -> (DictionaryEnvironment)
infoTree_Syn_Expression :: Syn_Expression -> (InfoTree)
matchIO_Syn_Expression :: Syn_Expression -> (IO ())
matches_Syn_Expression :: Syn_Expression -> ([Maybe MetaVariableTable])
patternMatchWarnings_Syn_Expression :: Syn_Expression -> ([Warning])
self_Syn_Expression :: Syn_Expression -> (Expression)
unboundNames_Syn_Expression :: Syn_Expression -> (Names)
uniqueChunk_Syn_Expression :: Syn_Expression -> (Int)
uniqueSecondRound_Syn_Expression :: Syn_Expression -> (Int)
wrap_Expression :: T_Expression -> Inh_Expression -> (Syn_Expression)
sem_Expression :: Expression -> T_Expression
newtype T_Expression
T_Expression :: Identity (T_Expression_s41) -> T_Expression
attach_T_Expression :: T_Expression -> Identity (T_Expression_s41)
newtype T_Expression_s41
C_Expression_s41 :: (T_Expression_v40) -> T_Expression_s41
inv_Expression_s41 :: T_Expression_s41 -> (T_Expression_v40)
data T_Expression_s42
C_Expression_s42 :: T_Expression_s42
type T_Expression_v40 = (T_Expression_vIn40) -> (T_Expression_vOut40)
data T_Expression_vIn40
T_Expression_vIn40 :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Predicates) -> (Int) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (IO ()) -> (Monos) -> (Names) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> ([(Expression, [String])]) -> (Map Int (Scheme Predicates)) -> (Int) -> (Int) -> T_Expression_vIn40
data T_Expression_vOut40
T_Expression_vOut40 :: (Assumptions) -> (Tp) -> (Int) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (ConstraintSet) -> (Int) -> (DictionaryEnvironment) -> (InfoTree) -> (IO ()) -> ([Maybe MetaVariableTable]) -> ([Warning]) -> (Expression) -> (Names) -> (Int) -> (Int) -> T_Expression_vOut40
sem_Expression_Hole :: T_Range -> (Integer) -> T_Expression
sem_Expression_Feedback :: T_Range -> (String) -> T_Expression -> T_Expression
sem_Expression_MustUse :: T_Range -> T_Expression -> T_Expression
sem_Expression_Literal :: T_Range -> T_Literal -> T_Expression
sem_Expression_Variable :: T_Range -> T_Name -> T_Expression
sem_Expression_Constructor :: T_Range -> T_Name -> T_Expression
sem_Expression_Parenthesized :: T_Range -> T_Expression -> T_Expression
sem_Expression_NormalApplication :: T_Range -> T_Expression -> T_Expressions -> T_Expression
sem_Expression_InfixApplication :: T_Range -> T_MaybeExpression -> T_Expression -> T_MaybeExpression -> T_Expression
sem_Expression_If :: T_Range -> T_Expression -> T_Expression -> T_Expression -> T_Expression
sem_Expression_Lambda :: T_Range -> T_Patterns -> T_Expression -> T_Expression
sem_Expression_Case :: T_Range -> T_Expression -> T_Alternatives -> T_Expression
sem_Expression_Let :: T_Range -> T_Declarations -> T_Expression -> T_Expression
sem_Expression_Do :: T_Range -> T_Statements -> T_Expression
sem_Expression_List :: T_Range -> T_Expressions -> T_Expression
sem_Expression_Tuple :: T_Range -> T_Expressions -> T_Expression
sem_Expression_Comprehension :: T_Range -> T_Expression -> T_Qualifiers -> T_Expression
sem_Expression_Typed :: T_Range -> T_Expression -> T_Type -> T_Expression
sem_Expression_RecordConstruction :: T_Range -> T_Name -> T_RecordExpressionBindings -> T_Expression
sem_Expression_RecordUpdate :: T_Range -> T_Expression -> T_RecordExpressionBindings -> T_Expression
sem_Expression_Enum :: T_Range -> T_Expression -> T_MaybeExpression -> T_MaybeExpression -> T_Expression
sem_Expression_Negate :: T_Range -> T_Expression -> T_Expression
sem_Expression_NegateFloat :: T_Range -> T_Expression -> T_Expression
data Inh_Expressions
Inh_Expressions :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Predicates) -> (Int) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (IO ()) -> (Monos) -> (Names) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> ([(Expressions, [String])]) -> (Map Int (Scheme Predicates)) -> (Int) -> (Int) -> Inh_Expressions
allPatterns_Inh_Expressions :: Inh_Expressions -> ([((Expression, [String]), Core_TypingStrategy)])
allTypeSchemes_Inh_Expressions :: Inh_Expressions -> (Map NameWithRange TpScheme)
availablePredicates_Inh_Expressions :: Inh_Expressions -> (Predicates)
betaUnique_Inh_Expressions :: Inh_Expressions -> (Int)
classEnvironment_Inh_Expressions :: Inh_Expressions -> (ClassEnvironment)
collectErrors_Inh_Expressions :: Inh_Expressions -> (TypeErrors)
collectWarnings_Inh_Expressions :: Inh_Expressions -> (Warnings)
counter_Inh_Expressions :: Inh_Expressions -> (Int)
currentChunk_Inh_Expressions :: Inh_Expressions -> (Int)
dictionaryEnvironment_Inh_Expressions :: Inh_Expressions -> (DictionaryEnvironment)
importEnvironment_Inh_Expressions :: Inh_Expressions -> (ImportEnvironment)
matchIO_Inh_Expressions :: Inh_Expressions -> (IO ())
monos_Inh_Expressions :: Inh_Expressions -> (Monos)
namesInScope_Inh_Expressions :: Inh_Expressions -> (Names)
orderedTypeSynonyms_Inh_Expressions :: Inh_Expressions -> (OrderedTypeSynonyms)
parentTree_Inh_Expressions :: Inh_Expressions -> (InfoTree)
patternMatchWarnings_Inh_Expressions :: Inh_Expressions -> ([Warning])
substitution_Inh_Expressions :: Inh_Expressions -> (FixpointSubstitution)
tryPatterns_Inh_Expressions :: Inh_Expressions -> ([(Expressions, [String])])
typeschemeMap_Inh_Expressions :: Inh_Expressions -> (Map Int (Scheme Predicates))
uniqueChunk_Inh_Expressions :: Inh_Expressions -> (Int)
uniqueSecondRound_Inh_Expressions :: Inh_Expressions -> (Int)
data Syn_Expressions
Syn_Expressions :: (Assumptions) -> (Int) -> (Tps) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (ConstraintSets) -> (Int) -> (DictionaryEnvironment) -> (InfoTrees) -> (IO ()) -> ([Maybe MetaVariableTable]) -> ([Warning]) -> (Expressions) -> (Names) -> (Int) -> (Int) -> Syn_Expressions
assumptions_Syn_Expressions :: Syn_Expressions -> (Assumptions)
betaUnique_Syn_Expressions :: Syn_Expressions -> (Int)
betas_Syn_Expressions :: Syn_Expressions -> (Tps)
collectErrors_Syn_Expressions :: Syn_Expressions -> (TypeErrors)
collectInstances_Syn_Expressions :: Syn_Expressions -> ([(Name, Instance)])
collectWarnings_Syn_Expressions :: Syn_Expressions -> (Warnings)
constraintslist_Syn_Expressions :: Syn_Expressions -> (ConstraintSets)
counter_Syn_Expressions :: Syn_Expressions -> (Int)
dictionaryEnvironment_Syn_Expressions :: Syn_Expressions -> (DictionaryEnvironment)
infoTrees_Syn_Expressions :: Syn_Expressions -> (InfoTrees)
matchIO_Syn_Expressions :: Syn_Expressions -> (IO ())
matches_Syn_Expressions :: Syn_Expressions -> ([Maybe MetaVariableTable])
patternMatchWarnings_Syn_Expressions :: Syn_Expressions -> ([Warning])
self_Syn_Expressions :: Syn_Expressions -> (Expressions)
unboundNames_Syn_Expressions :: Syn_Expressions -> (Names)
uniqueChunk_Syn_Expressions :: Syn_Expressions -> (Int)
uniqueSecondRound_Syn_Expressions :: Syn_Expressions -> (Int)
wrap_Expressions :: T_Expressions -> Inh_Expressions -> (Syn_Expressions)
sem_Expressions :: Expressions -> T_Expressions
newtype T_Expressions
T_Expressions :: Identity (T_Expressions_s44) -> T_Expressions
attach_T_Expressions :: T_Expressions -> Identity (T_Expressions_s44)
newtype T_Expressions_s44
C_Expressions_s44 :: (T_Expressions_v43) -> T_Expressions_s44
inv_Expressions_s44 :: T_Expressions_s44 -> (T_Expressions_v43)
data T_Expressions_s45
C_Expressions_s45 :: T_Expressions_s45
type T_Expressions_v43 = (T_Expressions_vIn43) -> (T_Expressions_vOut43)
data T_Expressions_vIn43
T_Expressions_vIn43 :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Predicates) -> (Int) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (IO ()) -> (Monos) -> (Names) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> ([(Expressions, [String])]) -> (Map Int (Scheme Predicates)) -> (Int) -> (Int) -> T_Expressions_vIn43
data T_Expressions_vOut43
T_Expressions_vOut43 :: (Assumptions) -> (Int) -> (Tps) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (ConstraintSets) -> (Int) -> (DictionaryEnvironment) -> (InfoTrees) -> (IO ()) -> ([Maybe MetaVariableTable]) -> ([Warning]) -> (Expressions) -> (Names) -> (Int) -> (Int) -> T_Expressions_vOut43
sem_Expressions_Cons :: T_Expression -> T_Expressions -> T_Expressions
sem_Expressions_Nil :: T_Expressions
data Inh_FieldDeclaration
Inh_FieldDeclaration :: (Int) -> (Names) -> Inh_FieldDeclaration
counter_Inh_FieldDeclaration :: Inh_FieldDeclaration -> (Int)
namesInScope_Inh_FieldDeclaration :: Inh_FieldDeclaration -> (Names)
data Syn_FieldDeclaration
Syn_FieldDeclaration :: (Int) -> (FieldDeclaration) -> (Names) -> Syn_FieldDeclaration
counter_Syn_FieldDeclaration :: Syn_FieldDeclaration -> (Int)
self_Syn_FieldDeclaration :: Syn_FieldDeclaration -> (FieldDeclaration)
unboundNames_Syn_FieldDeclaration :: Syn_FieldDeclaration -> (Names)
wrap_FieldDeclaration :: T_FieldDeclaration -> Inh_FieldDeclaration -> (Syn_FieldDeclaration)
sem_FieldDeclaration :: FieldDeclaration -> T_FieldDeclaration
newtype T_FieldDeclaration
T_FieldDeclaration :: Identity (T_FieldDeclaration_s47) -> T_FieldDeclaration
attach_T_FieldDeclaration :: T_FieldDeclaration -> Identity (T_FieldDeclaration_s47)
newtype T_FieldDeclaration_s47
C_FieldDeclaration_s47 :: (T_FieldDeclaration_v46) -> T_FieldDeclaration_s47
inv_FieldDeclaration_s47 :: T_FieldDeclaration_s47 -> (T_FieldDeclaration_v46)
data T_FieldDeclaration_s48
C_FieldDeclaration_s48 :: T_FieldDeclaration_s48
type T_FieldDeclaration_v46 = (T_FieldDeclaration_vIn46) -> (T_FieldDeclaration_vOut46)
data T_FieldDeclaration_vIn46
T_FieldDeclaration_vIn46 :: (Int) -> (Names) -> T_FieldDeclaration_vIn46
data T_FieldDeclaration_vOut46
T_FieldDeclaration_vOut46 :: (Int) -> (FieldDeclaration) -> (Names) -> T_FieldDeclaration_vOut46
sem_FieldDeclaration_FieldDeclaration :: T_Range -> T_Names -> T_AnnotatedType -> T_FieldDeclaration
data Inh_FieldDeclarations
Inh_FieldDeclarations :: (Int) -> (Names) -> Inh_FieldDeclarations
counter_Inh_FieldDeclarations :: Inh_FieldDeclarations -> (Int)
namesInScope_Inh_FieldDeclarations :: Inh_FieldDeclarations -> (Names)
data Syn_FieldDeclarations
Syn_FieldDeclarations :: (Int) -> (FieldDeclarations) -> (Names) -> Syn_FieldDeclarations
counter_Syn_FieldDeclarations :: Syn_FieldDeclarations -> (Int)
self_Syn_FieldDeclarations :: Syn_FieldDeclarations -> (FieldDeclarations)
unboundNames_Syn_FieldDeclarations :: Syn_FieldDeclarations -> (Names)
wrap_FieldDeclarations :: T_FieldDeclarations -> Inh_FieldDeclarations -> (Syn_FieldDeclarations)
sem_FieldDeclarations :: FieldDeclarations -> T_FieldDeclarations
newtype T_FieldDeclarations
T_FieldDeclarations :: Identity (T_FieldDeclarations_s50) -> T_FieldDeclarations
attach_T_FieldDeclarations :: T_FieldDeclarations -> Identity (T_FieldDeclarations_s50)
newtype T_FieldDeclarations_s50
C_FieldDeclarations_s50 :: (T_FieldDeclarations_v49) -> T_FieldDeclarations_s50
inv_FieldDeclarations_s50 :: T_FieldDeclarations_s50 -> (T_FieldDeclarations_v49)
data T_FieldDeclarations_s51
C_FieldDeclarations_s51 :: T_FieldDeclarations_s51
type T_FieldDeclarations_v49 = (T_FieldDeclarations_vIn49) -> (T_FieldDeclarations_vOut49)
data T_FieldDeclarations_vIn49
T_FieldDeclarations_vIn49 :: (Int) -> (Names) -> T_FieldDeclarations_vIn49
data T_FieldDeclarations_vOut49
T_FieldDeclarations_vOut49 :: (Int) -> (FieldDeclarations) -> (Names) -> T_FieldDeclarations_vOut49
sem_FieldDeclarations_Cons :: T_FieldDeclaration -> T_FieldDeclarations -> T_FieldDeclarations
sem_FieldDeclarations_Nil :: T_FieldDeclarations
data Inh_Fixity
Inh_Fixity :: Inh_Fixity
data Syn_Fixity
Syn_Fixity :: (Fixity) -> Syn_Fixity
self_Syn_Fixity :: Syn_Fixity -> (Fixity)
wrap_Fixity :: T_Fixity -> Inh_Fixity -> (Syn_Fixity)
sem_Fixity :: Fixity -> T_Fixity
newtype T_Fixity
T_Fixity :: Identity (T_Fixity_s53) -> T_Fixity
attach_T_Fixity :: T_Fixity -> Identity (T_Fixity_s53)
newtype T_Fixity_s53
C_Fixity_s53 :: (T_Fixity_v52) -> T_Fixity_s53
inv_Fixity_s53 :: T_Fixity_s53 -> (T_Fixity_v52)
data T_Fixity_s54
C_Fixity_s54 :: T_Fixity_s54
type T_Fixity_v52 = (T_Fixity_vIn52) -> (T_Fixity_vOut52)
data T_Fixity_vIn52
T_Fixity_vIn52 :: T_Fixity_vIn52
data T_Fixity_vOut52
T_Fixity_vOut52 :: (Fixity) -> T_Fixity_vOut52
sem_Fixity_Infixl :: T_Range -> T_Fixity
sem_Fixity_Infixr :: T_Range -> T_Fixity
sem_Fixity_Infix :: T_Range -> T_Fixity
data Inh_FunctionBinding
Inh_FunctionBinding :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Predicates) -> (Tp) -> (Int) -> (Tps) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (IO ()) -> (Monos) -> (Names) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> (Map Int (Scheme Predicates)) -> (Int) -> Inh_FunctionBinding
allPatterns_Inh_FunctionBinding :: Inh_FunctionBinding -> ([((Expression, [String]), Core_TypingStrategy)])
allTypeSchemes_Inh_FunctionBinding :: Inh_FunctionBinding -> (Map NameWithRange TpScheme)
availablePredicates_Inh_FunctionBinding :: Inh_FunctionBinding -> (Predicates)
betaRight_Inh_FunctionBinding :: Inh_FunctionBinding -> (Tp)
betaUnique_Inh_FunctionBinding :: Inh_FunctionBinding -> (Int)
betasLeft_Inh_FunctionBinding :: Inh_FunctionBinding -> (Tps)
classEnvironment_Inh_FunctionBinding :: Inh_FunctionBinding -> (ClassEnvironment)
collectErrors_Inh_FunctionBinding :: Inh_FunctionBinding -> (TypeErrors)
collectWarnings_Inh_FunctionBinding :: Inh_FunctionBinding -> (Warnings)
counter_Inh_FunctionBinding :: Inh_FunctionBinding -> (Int)
currentChunk_Inh_FunctionBinding :: Inh_FunctionBinding -> (Int)
dictionaryEnvironment_Inh_FunctionBinding :: Inh_FunctionBinding -> (DictionaryEnvironment)
importEnvironment_Inh_FunctionBinding :: Inh_FunctionBinding -> (ImportEnvironment)
matchIO_Inh_FunctionBinding :: Inh_FunctionBinding -> (IO ())
monos_Inh_FunctionBinding :: Inh_FunctionBinding -> (Monos)
namesInScope_Inh_FunctionBinding :: Inh_FunctionBinding -> (Names)
orderedTypeSynonyms_Inh_FunctionBinding :: Inh_FunctionBinding -> (OrderedTypeSynonyms)
parentTree_Inh_FunctionBinding :: Inh_FunctionBinding -> (InfoTree)
patternMatchWarnings_Inh_FunctionBinding :: Inh_FunctionBinding -> ([Warning])
substitution_Inh_FunctionBinding :: Inh_FunctionBinding -> (FixpointSubstitution)
typeschemeMap_Inh_FunctionBinding :: Inh_FunctionBinding -> (Map Int (Scheme Predicates))
uniqueChunk_Inh_FunctionBinding :: Inh_FunctionBinding -> (Int)
data Syn_FunctionBinding
Syn_FunctionBinding :: (Int) -> (Assumptions) -> (Int) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (ConstraintSet) -> (Int) -> (DictionaryEnvironment) -> (([PatternElement], Bool)) -> (InfoTree) -> (IO ()) -> (Name) -> (Int) -> ([Warning]) -> (FunctionBinding) -> (Names) -> (Int) -> (Warning) -> Syn_FunctionBinding
argcount_Syn_FunctionBinding :: Syn_FunctionBinding -> (Int)
assumptions_Syn_FunctionBinding :: Syn_FunctionBinding -> (Assumptions)
betaUnique_Syn_FunctionBinding :: Syn_FunctionBinding -> (Int)
collectErrors_Syn_FunctionBinding :: Syn_FunctionBinding -> (TypeErrors)
collectInstances_Syn_FunctionBinding :: Syn_FunctionBinding -> ([(Name, Instance)])
collectWarnings_Syn_FunctionBinding :: Syn_FunctionBinding -> (Warnings)
constraints_Syn_FunctionBinding :: Syn_FunctionBinding -> (ConstraintSet)
counter_Syn_FunctionBinding :: Syn_FunctionBinding -> (Int)
dictionaryEnvironment_Syn_FunctionBinding :: Syn_FunctionBinding -> (DictionaryEnvironment)
elements_Syn_FunctionBinding :: Syn_FunctionBinding -> (([PatternElement], Bool))
infoTree_Syn_FunctionBinding :: Syn_FunctionBinding -> (InfoTree)
matchIO_Syn_FunctionBinding :: Syn_FunctionBinding -> (IO ())
name_Syn_FunctionBinding :: Syn_FunctionBinding -> (Name)
numberOfPatterns_Syn_FunctionBinding :: Syn_FunctionBinding -> (Int)
patternMatchWarnings_Syn_FunctionBinding :: Syn_FunctionBinding -> ([Warning])
self_Syn_FunctionBinding :: Syn_FunctionBinding -> (FunctionBinding)
unboundNames_Syn_FunctionBinding :: Syn_FunctionBinding -> (Names)
uniqueChunk_Syn_FunctionBinding :: Syn_FunctionBinding -> (Int)
unrwar_Syn_FunctionBinding :: Syn_FunctionBinding -> (Warning)
wrap_FunctionBinding :: T_FunctionBinding -> Inh_FunctionBinding -> (Syn_FunctionBinding)
sem_FunctionBinding :: FunctionBinding -> T_FunctionBinding
newtype T_FunctionBinding
T_FunctionBinding :: Identity (T_FunctionBinding_s56) -> T_FunctionBinding
attach_T_FunctionBinding :: T_FunctionBinding -> Identity (T_FunctionBinding_s56)
newtype T_FunctionBinding_s56
C_FunctionBinding_s56 :: (T_FunctionBinding_v55) -> T_FunctionBinding_s56
inv_FunctionBinding_s56 :: T_FunctionBinding_s56 -> (T_FunctionBinding_v55)
data T_FunctionBinding_s57
C_FunctionBinding_s57 :: T_FunctionBinding_s57
type T_FunctionBinding_v55 = (T_FunctionBinding_vIn55) -> (T_FunctionBinding_vOut55)
data T_FunctionBinding_vIn55
T_FunctionBinding_vIn55 :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Predicates) -> (Tp) -> (Int) -> (Tps) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (IO ()) -> (Monos) -> (Names) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> (Map Int (Scheme Predicates)) -> (Int) -> T_FunctionBinding_vIn55
data T_FunctionBinding_vOut55
T_FunctionBinding_vOut55 :: (Int) -> (Assumptions) -> (Int) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (ConstraintSet) -> (Int) -> (DictionaryEnvironment) -> (([PatternElement], Bool)) -> (InfoTree) -> (IO ()) -> (Name) -> (Int) -> ([Warning]) -> (FunctionBinding) -> (Names) -> (Int) -> (Warning) -> T_FunctionBinding_vOut55
sem_FunctionBinding_Hole :: T_Range -> (Integer) -> T_FunctionBinding
sem_FunctionBinding_Feedback :: T_Range -> (String) -> T_FunctionBinding -> T_FunctionBinding
sem_FunctionBinding_FunctionBinding :: T_Range -> T_LeftHandSide -> T_RightHandSide -> T_FunctionBinding
data Inh_FunctionBindings
Inh_FunctionBindings :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Predicates) -> (Tp) -> (Int) -> (Tps) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (IO ()) -> (Monos) -> (Names) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> (Map Int (Scheme Predicates)) -> (Int) -> Inh_FunctionBindings
allPatterns_Inh_FunctionBindings :: Inh_FunctionBindings -> ([((Expression, [String]), Core_TypingStrategy)])
allTypeSchemes_Inh_FunctionBindings :: Inh_FunctionBindings -> (Map NameWithRange TpScheme)
availablePredicates_Inh_FunctionBindings :: Inh_FunctionBindings -> (Predicates)
betaRight_Inh_FunctionBindings :: Inh_FunctionBindings -> (Tp)
betaUnique_Inh_FunctionBindings :: Inh_FunctionBindings -> (Int)
betasLeft_Inh_FunctionBindings :: Inh_FunctionBindings -> (Tps)
classEnvironment_Inh_FunctionBindings :: Inh_FunctionBindings -> (ClassEnvironment)
collectErrors_Inh_FunctionBindings :: Inh_FunctionBindings -> (TypeErrors)
collectWarnings_Inh_FunctionBindings :: Inh_FunctionBindings -> (Warnings)
counter_Inh_FunctionBindings :: Inh_FunctionBindings -> (Int)
currentChunk_Inh_FunctionBindings :: Inh_FunctionBindings -> (Int)
dictionaryEnvironment_Inh_FunctionBindings :: Inh_FunctionBindings -> (DictionaryEnvironment)
importEnvironment_Inh_FunctionBindings :: Inh_FunctionBindings -> (ImportEnvironment)
matchIO_Inh_FunctionBindings :: Inh_FunctionBindings -> (IO ())
monos_Inh_FunctionBindings :: Inh_FunctionBindings -> (Monos)
namesInScope_Inh_FunctionBindings :: Inh_FunctionBindings -> (Names)
orderedTypeSynonyms_Inh_FunctionBindings :: Inh_FunctionBindings -> (OrderedTypeSynonyms)
parentTree_Inh_FunctionBindings :: Inh_FunctionBindings -> (InfoTree)
patternMatchWarnings_Inh_FunctionBindings :: Inh_FunctionBindings -> ([Warning])
substitution_Inh_FunctionBindings :: Inh_FunctionBindings -> (FixpointSubstitution)
typeschemeMap_Inh_FunctionBindings :: Inh_FunctionBindings -> (Map Int (Scheme Predicates))
uniqueChunk_Inh_FunctionBindings :: Inh_FunctionBindings -> (Int)
data Syn_FunctionBindings
Syn_FunctionBindings :: (Int) -> (Assumptions) -> (Int) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (ConstraintSets) -> (Int) -> (DictionaryEnvironment) -> ([([PatternElement], Bool)]) -> (InfoTrees) -> (IO ()) -> (Name) -> (Int) -> ([Warning]) -> (FunctionBindings) -> (Names) -> (Int) -> ([Warning]) -> Syn_FunctionBindings
argcount_Syn_FunctionBindings :: Syn_FunctionBindings -> (Int)
assumptions_Syn_FunctionBindings :: Syn_FunctionBindings -> (Assumptions)
betaUnique_Syn_FunctionBindings :: Syn_FunctionBindings -> (Int)
collectErrors_Syn_FunctionBindings :: Syn_FunctionBindings -> (TypeErrors)
collectInstances_Syn_FunctionBindings :: Syn_FunctionBindings -> ([(Name, Instance)])
collectWarnings_Syn_FunctionBindings :: Syn_FunctionBindings -> (Warnings)
constraintslist_Syn_FunctionBindings :: Syn_FunctionBindings -> (ConstraintSets)
counter_Syn_FunctionBindings :: Syn_FunctionBindings -> (Int)
dictionaryEnvironment_Syn_FunctionBindings :: Syn_FunctionBindings -> (DictionaryEnvironment)
elementss_Syn_FunctionBindings :: Syn_FunctionBindings -> ([([PatternElement], Bool)])
infoTrees_Syn_FunctionBindings :: Syn_FunctionBindings -> (InfoTrees)
matchIO_Syn_FunctionBindings :: Syn_FunctionBindings -> (IO ())
name_Syn_FunctionBindings :: Syn_FunctionBindings -> (Name)
numberOfPatterns_Syn_FunctionBindings :: Syn_FunctionBindings -> (Int)
patternMatchWarnings_Syn_FunctionBindings :: Syn_FunctionBindings -> ([Warning])
self_Syn_FunctionBindings :: Syn_FunctionBindings -> (FunctionBindings)
unboundNames_Syn_FunctionBindings :: Syn_FunctionBindings -> (Names)
uniqueChunk_Syn_FunctionBindings :: Syn_FunctionBindings -> (Int)
unrwars_Syn_FunctionBindings :: Syn_FunctionBindings -> ([Warning])
wrap_FunctionBindings :: T_FunctionBindings -> Inh_FunctionBindings -> (Syn_FunctionBindings)
sem_FunctionBindings :: FunctionBindings -> T_FunctionBindings
newtype T_FunctionBindings
T_FunctionBindings :: Identity (T_FunctionBindings_s59) -> T_FunctionBindings
attach_T_FunctionBindings :: T_FunctionBindings -> Identity (T_FunctionBindings_s59)
newtype T_FunctionBindings_s59
C_FunctionBindings_s59 :: (T_FunctionBindings_v58) -> T_FunctionBindings_s59
inv_FunctionBindings_s59 :: T_FunctionBindings_s59 -> (T_FunctionBindings_v58)
data T_FunctionBindings_s60
C_FunctionBindings_s60 :: T_FunctionBindings_s60
type T_FunctionBindings_v58 = (T_FunctionBindings_vIn58) -> (T_FunctionBindings_vOut58)
data T_FunctionBindings_vIn58
T_FunctionBindings_vIn58 :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Predicates) -> (Tp) -> (Int) -> (Tps) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (IO ()) -> (Monos) -> (Names) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> (Map Int (Scheme Predicates)) -> (Int) -> T_FunctionBindings_vIn58
data T_FunctionBindings_vOut58
T_FunctionBindings_vOut58 :: (Int) -> (Assumptions) -> (Int) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (ConstraintSets) -> (Int) -> (DictionaryEnvironment) -> ([([PatternElement], Bool)]) -> (InfoTrees) -> (IO ()) -> (Name) -> (Int) -> ([Warning]) -> (FunctionBindings) -> (Names) -> (Int) -> ([Warning]) -> T_FunctionBindings_vOut58
sem_FunctionBindings_Cons :: T_FunctionBinding -> T_FunctionBindings -> T_FunctionBindings
sem_FunctionBindings_Nil :: T_FunctionBindings
data Inh_GuardedExpression
Inh_GuardedExpression :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Predicates) -> (Tp) -> (Int) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (IO ()) -> (Monos) -> (Names) -> (Int) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> (Map Int (Scheme Predicates)) -> (Int) -> (Int) -> Inh_GuardedExpression
allPatterns_Inh_GuardedExpression :: Inh_GuardedExpression -> ([((Expression, [String]), Core_TypingStrategy)])
allTypeSchemes_Inh_GuardedExpression :: Inh_GuardedExpression -> (Map NameWithRange TpScheme)
availablePredicates_Inh_GuardedExpression :: Inh_GuardedExpression -> (Predicates)
betaRight_Inh_GuardedExpression :: Inh_GuardedExpression -> (Tp)
betaUnique_Inh_GuardedExpression :: Inh_GuardedExpression -> (Int)
classEnvironment_Inh_GuardedExpression :: Inh_GuardedExpression -> (ClassEnvironment)
collectErrors_Inh_GuardedExpression :: Inh_GuardedExpression -> (TypeErrors)
collectWarnings_Inh_GuardedExpression :: Inh_GuardedExpression -> (Warnings)
counter_Inh_GuardedExpression :: Inh_GuardedExpression -> (Int)
currentChunk_Inh_GuardedExpression :: Inh_GuardedExpression -> (Int)
dictionaryEnvironment_Inh_GuardedExpression :: Inh_GuardedExpression -> (DictionaryEnvironment)
importEnvironment_Inh_GuardedExpression :: Inh_GuardedExpression -> (ImportEnvironment)
matchIO_Inh_GuardedExpression :: Inh_GuardedExpression -> (IO ())
monos_Inh_GuardedExpression :: Inh_GuardedExpression -> (Monos)
namesInScope_Inh_GuardedExpression :: Inh_GuardedExpression -> (Names)
numberOfGuards_Inh_GuardedExpression :: Inh_GuardedExpression -> (Int)
orderedTypeSynonyms_Inh_GuardedExpression :: Inh_GuardedExpression -> (OrderedTypeSynonyms)
parentTree_Inh_GuardedExpression :: Inh_GuardedExpression -> (InfoTree)
patternMatchWarnings_Inh_GuardedExpression :: Inh_GuardedExpression -> ([Warning])
substitution_Inh_GuardedExpression :: Inh_GuardedExpression -> (FixpointSubstitution)
typeschemeMap_Inh_GuardedExpression :: Inh_GuardedExpression -> (Map Int (Scheme Predicates))
uniqueChunk_Inh_GuardedExpression :: Inh_GuardedExpression -> (Int)
uniqueSecondRound_Inh_GuardedExpression :: Inh_GuardedExpression -> (Int)
data Syn_GuardedExpression
Syn_GuardedExpression :: (Assumptions) -> (Int) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (ConstraintSet) -> (Int) -> (DictionaryEnvironment) -> (Bool) -> (InfoTrees) -> (IO ()) -> ([Warning]) -> (Range) -> (GuardedExpression) -> (Names) -> (Int) -> (Int) -> (Warning) -> Syn_GuardedExpression
assumptions_Syn_GuardedExpression :: Syn_GuardedExpression -> (Assumptions)
betaUnique_Syn_GuardedExpression :: Syn_GuardedExpression -> (Int)
collectErrors_Syn_GuardedExpression :: Syn_GuardedExpression -> (TypeErrors)
collectInstances_Syn_GuardedExpression :: Syn_GuardedExpression -> ([(Name, Instance)])
collectWarnings_Syn_GuardedExpression :: Syn_GuardedExpression -> (Warnings)
constraints_Syn_GuardedExpression :: Syn_GuardedExpression -> (ConstraintSet)
counter_Syn_GuardedExpression :: Syn_GuardedExpression -> (Int)
dictionaryEnvironment_Syn_GuardedExpression :: Syn_GuardedExpression -> (DictionaryEnvironment)
fallthrough_Syn_GuardedExpression :: Syn_GuardedExpression -> (Bool)
infoTrees_Syn_GuardedExpression :: Syn_GuardedExpression -> (InfoTrees)
matchIO_Syn_GuardedExpression :: Syn_GuardedExpression -> (IO ())
patternMatchWarnings_Syn_GuardedExpression :: Syn_GuardedExpression -> ([Warning])
range_Syn_GuardedExpression :: Syn_GuardedExpression -> (Range)
self_Syn_GuardedExpression :: Syn_GuardedExpression -> (GuardedExpression)
unboundNames_Syn_GuardedExpression :: Syn_GuardedExpression -> (Names)
uniqueChunk_Syn_GuardedExpression :: Syn_GuardedExpression -> (Int)
uniqueSecondRound_Syn_GuardedExpression :: Syn_GuardedExpression -> (Int)
unrwar_Syn_GuardedExpression :: Syn_GuardedExpression -> (Warning)
wrap_GuardedExpression :: T_GuardedExpression -> Inh_GuardedExpression -> (Syn_GuardedExpression)
sem_GuardedExpression :: GuardedExpression -> T_GuardedExpression
newtype T_GuardedExpression
T_GuardedExpression :: Identity (T_GuardedExpression_s62) -> T_GuardedExpression
attach_T_GuardedExpression :: T_GuardedExpression -> Identity (T_GuardedExpression_s62)
newtype T_GuardedExpression_s62
C_GuardedExpression_s62 :: (T_GuardedExpression_v61) -> T_GuardedExpression_s62
inv_GuardedExpression_s62 :: T_GuardedExpression_s62 -> (T_GuardedExpression_v61)
data T_GuardedExpression_s63
C_GuardedExpression_s63 :: T_GuardedExpression_s63
type T_GuardedExpression_v61 = (T_GuardedExpression_vIn61) -> (T_GuardedExpression_vOut61)
data T_GuardedExpression_vIn61
T_GuardedExpression_vIn61 :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Predicates) -> (Tp) -> (Int) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (IO ()) -> (Monos) -> (Names) -> (Int) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> (Map Int (Scheme Predicates)) -> (Int) -> (Int) -> T_GuardedExpression_vIn61
data T_GuardedExpression_vOut61
T_GuardedExpression_vOut61 :: (Assumptions) -> (Int) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (ConstraintSet) -> (Int) -> (DictionaryEnvironment) -> (Bool) -> (InfoTrees) -> (IO ()) -> ([Warning]) -> (Range) -> (GuardedExpression) -> (Names) -> (Int) -> (Int) -> (Warning) -> T_GuardedExpression_vOut61
sem_GuardedExpression_GuardedExpression :: T_Range -> T_Expression -> T_Expression -> T_GuardedExpression
data Inh_GuardedExpressions
Inh_GuardedExpressions :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Predicates) -> (Tp) -> (Int) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (IO ()) -> (Monos) -> (Names) -> (Int) -> (Bool) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> (Map Int (Scheme Predicates)) -> (Int) -> (Int) -> Inh_GuardedExpressions
allPatterns_Inh_GuardedExpressions :: Inh_GuardedExpressions -> ([((Expression, [String]), Core_TypingStrategy)])
allTypeSchemes_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (Map NameWithRange TpScheme)
availablePredicates_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (Predicates)
betaRight_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (Tp)
betaUnique_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (Int)
classEnvironment_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (ClassEnvironment)
collectErrors_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (TypeErrors)
collectWarnings_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (Warnings)
counter_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (Int)
currentChunk_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (Int)
dictionaryEnvironment_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (DictionaryEnvironment)
importEnvironment_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (ImportEnvironment)
matchIO_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (IO ())
monos_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (Monos)
namesInScope_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (Names)
numberOfGuards_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (Int)
open_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (Bool)
orderedTypeSynonyms_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (OrderedTypeSynonyms)
parentTree_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (InfoTree)
patternMatchWarnings_Inh_GuardedExpressions :: Inh_GuardedExpressions -> ([Warning])
substitution_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (FixpointSubstitution)
typeschemeMap_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (Map Int (Scheme Predicates))
uniqueChunk_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (Int)
uniqueSecondRound_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (Int)
data Syn_GuardedExpressions
Syn_GuardedExpressions :: (Assumptions) -> (Int) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (ConstraintSets) -> (Int) -> (DictionaryEnvironment) -> (Bool) -> (InfoTrees) -> (IO ()) -> ([Warning]) -> (GuardedExpressions) -> (Names) -> (Int) -> (Int) -> Syn_GuardedExpressions
assumptions_Syn_GuardedExpressions :: Syn_GuardedExpressions -> (Assumptions)
betaUnique_Syn_GuardedExpressions :: Syn_GuardedExpressions -> (Int)
collectErrors_Syn_GuardedExpressions :: Syn_GuardedExpressions -> (TypeErrors)
collectInstances_Syn_GuardedExpressions :: Syn_GuardedExpressions -> ([(Name, Instance)])
collectWarnings_Syn_GuardedExpressions :: Syn_GuardedExpressions -> (Warnings)
constraintslist_Syn_GuardedExpressions :: Syn_GuardedExpressions -> (ConstraintSets)
counter_Syn_GuardedExpressions :: Syn_GuardedExpressions -> (Int)
dictionaryEnvironment_Syn_GuardedExpressions :: Syn_GuardedExpressions -> (DictionaryEnvironment)
fallthrough_Syn_GuardedExpressions :: Syn_GuardedExpressions -> (Bool)
infoTrees_Syn_GuardedExpressions :: Syn_GuardedExpressions -> (InfoTrees)
matchIO_Syn_GuardedExpressions :: Syn_GuardedExpressions -> (IO ())
patternMatchWarnings_Syn_GuardedExpressions :: Syn_GuardedExpressions -> ([Warning])
self_Syn_GuardedExpressions :: Syn_GuardedExpressions -> (GuardedExpressions)
unboundNames_Syn_GuardedExpressions :: Syn_GuardedExpressions -> (Names)
uniqueChunk_Syn_GuardedExpressions :: Syn_GuardedExpressions -> (Int)
uniqueSecondRound_Syn_GuardedExpressions :: Syn_GuardedExpressions -> (Int)
wrap_GuardedExpressions :: T_GuardedExpressions -> Inh_GuardedExpressions -> (Syn_GuardedExpressions)
sem_GuardedExpressions :: GuardedExpressions -> T_GuardedExpressions
newtype T_GuardedExpressions
T_GuardedExpressions :: Identity (T_GuardedExpressions_s65) -> T_GuardedExpressions
attach_T_GuardedExpressions :: T_GuardedExpressions -> Identity (T_GuardedExpressions_s65)
newtype T_GuardedExpressions_s65
C_GuardedExpressions_s65 :: (T_GuardedExpressions_v64) -> T_GuardedExpressions_s65
inv_GuardedExpressions_s65 :: T_GuardedExpressions_s65 -> (T_GuardedExpressions_v64)
data T_GuardedExpressions_s66
C_GuardedExpressions_s66 :: T_GuardedExpressions_s66
type T_GuardedExpressions_v64 = (T_GuardedExpressions_vIn64) -> (T_GuardedExpressions_vOut64)
data T_GuardedExpressions_vIn64
T_GuardedExpressions_vIn64 :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Predicates) -> (Tp) -> (Int) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (IO ()) -> (Monos) -> (Names) -> (Int) -> (Bool) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> (Map Int (Scheme Predicates)) -> (Int) -> (Int) -> T_GuardedExpressions_vIn64
data T_GuardedExpressions_vOut64
T_GuardedExpressions_vOut64 :: (Assumptions) -> (Int) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (ConstraintSets) -> (Int) -> (DictionaryEnvironment) -> (Bool) -> (InfoTrees) -> (IO ()) -> ([Warning]) -> (GuardedExpressions) -> (Names) -> (Int) -> (Int) -> T_GuardedExpressions_vOut64
sem_GuardedExpressions_Cons :: T_GuardedExpression -> T_GuardedExpressions -> T_GuardedExpressions
sem_GuardedExpressions_Nil :: T_GuardedExpressions
data Inh_Import
Inh_Import :: Inh_Import
data Syn_Import
Syn_Import :: (Import) -> Syn_Import
self_Syn_Import :: Syn_Import -> (Import)
wrap_Import :: T_Import -> Inh_Import -> (Syn_Import)
sem_Import :: Import -> T_Import
newtype T_Import
T_Import :: Identity (T_Import_s68) -> T_Import
attach_T_Import :: T_Import -> Identity (T_Import_s68)
newtype T_Import_s68
C_Import_s68 :: (T_Import_v67) -> T_Import_s68
inv_Import_s68 :: T_Import_s68 -> (T_Import_v67)
data T_Import_s69
C_Import_s69 :: T_Import_s69
type T_Import_v67 = (T_Import_vIn67) -> (T_Import_vOut67)
data T_Import_vIn67
T_Import_vIn67 :: T_Import_vIn67
data T_Import_vOut67
T_Import_vOut67 :: (Import) -> T_Import_vOut67
sem_Import_Variable :: T_Range -> T_Name -> T_Import
sem_Import_TypeOrClass :: T_Range -> T_Name -> T_MaybeNames -> T_Import
sem_Import_TypeOrClassComplete :: T_Range -> T_Name -> T_Import
data Inh_ImportDeclaration
Inh_ImportDeclaration :: Inh_ImportDeclaration
data Syn_ImportDeclaration
Syn_ImportDeclaration :: (ImportDeclaration) -> Syn_ImportDeclaration
self_Syn_ImportDeclaration :: Syn_ImportDeclaration -> (ImportDeclaration)
wrap_ImportDeclaration :: T_ImportDeclaration -> Inh_ImportDeclaration -> (Syn_ImportDeclaration)
sem_ImportDeclaration :: ImportDeclaration -> T_ImportDeclaration
newtype T_ImportDeclaration
T_ImportDeclaration :: Identity (T_ImportDeclaration_s71) -> T_ImportDeclaration
attach_T_ImportDeclaration :: T_ImportDeclaration -> Identity (T_ImportDeclaration_s71)
newtype T_ImportDeclaration_s71
C_ImportDeclaration_s71 :: (T_ImportDeclaration_v70) -> T_ImportDeclaration_s71
inv_ImportDeclaration_s71 :: T_ImportDeclaration_s71 -> (T_ImportDeclaration_v70)
data T_ImportDeclaration_s72
C_ImportDeclaration_s72 :: T_ImportDeclaration_s72
type T_ImportDeclaration_v70 = (T_ImportDeclaration_vIn70) -> (T_ImportDeclaration_vOut70)
data T_ImportDeclaration_vIn70
T_ImportDeclaration_vIn70 :: T_ImportDeclaration_vIn70
data T_ImportDeclaration_vOut70
T_ImportDeclaration_vOut70 :: (ImportDeclaration) -> T_ImportDeclaration_vOut70
sem_ImportDeclaration_Import :: T_Range -> (Bool) -> T_Name -> T_MaybeName -> T_MaybeImportSpecification -> T_ImportDeclaration
sem_ImportDeclaration_Empty :: T_Range -> T_ImportDeclaration
data Inh_ImportDeclarations
Inh_ImportDeclarations :: Inh_ImportDeclarations
data Syn_ImportDeclarations
Syn_ImportDeclarations :: (ImportDeclarations) -> Syn_ImportDeclarations
self_Syn_ImportDeclarations :: Syn_ImportDeclarations -> (ImportDeclarations)
wrap_ImportDeclarations :: T_ImportDeclarations -> Inh_ImportDeclarations -> (Syn_ImportDeclarations)
sem_ImportDeclarations :: ImportDeclarations -> T_ImportDeclarations
newtype T_ImportDeclarations
T_ImportDeclarations :: Identity (T_ImportDeclarations_s74) -> T_ImportDeclarations
attach_T_ImportDeclarations :: T_ImportDeclarations -> Identity (T_ImportDeclarations_s74)
newtype T_ImportDeclarations_s74
C_ImportDeclarations_s74 :: (T_ImportDeclarations_v73) -> T_ImportDeclarations_s74
inv_ImportDeclarations_s74 :: T_ImportDeclarations_s74 -> (T_ImportDeclarations_v73)
data T_ImportDeclarations_s75
C_ImportDeclarations_s75 :: T_ImportDeclarations_s75
type T_ImportDeclarations_v73 = (T_ImportDeclarations_vIn73) -> (T_ImportDeclarations_vOut73)
data T_ImportDeclarations_vIn73
T_ImportDeclarations_vIn73 :: T_ImportDeclarations_vIn73
data T_ImportDeclarations_vOut73
T_ImportDeclarations_vOut73 :: (ImportDeclarations) -> T_ImportDeclarations_vOut73
sem_ImportDeclarations_Cons :: T_ImportDeclaration -> T_ImportDeclarations -> T_ImportDeclarations
sem_ImportDeclarations_Nil :: T_ImportDeclarations
data Inh_ImportSpecification
Inh_ImportSpecification :: Inh_ImportSpecification
data Syn_ImportSpecification
Syn_ImportSpecification :: (ImportSpecification) -> Syn_ImportSpecification
self_Syn_ImportSpecification :: Syn_ImportSpecification -> (ImportSpecification)
wrap_ImportSpecification :: T_ImportSpecification -> Inh_ImportSpecification -> (Syn_ImportSpecification)
sem_ImportSpecification :: ImportSpecification -> T_ImportSpecification
newtype T_ImportSpecification
T_ImportSpecification :: Identity (T_ImportSpecification_s77) -> T_ImportSpecification
attach_T_ImportSpecification :: T_ImportSpecification -> Identity (T_ImportSpecification_s77)
newtype T_ImportSpecification_s77
C_ImportSpecification_s77 :: (T_ImportSpecification_v76) -> T_ImportSpecification_s77
inv_ImportSpecification_s77 :: T_ImportSpecification_s77 -> (T_ImportSpecification_v76)
data T_ImportSpecification_s78
C_ImportSpecification_s78 :: T_ImportSpecification_s78
type T_ImportSpecification_v76 = (T_ImportSpecification_vIn76) -> (T_ImportSpecification_vOut76)
data T_ImportSpecification_vIn76
T_ImportSpecification_vIn76 :: T_ImportSpecification_vIn76
data T_ImportSpecification_vOut76
T_ImportSpecification_vOut76 :: (ImportSpecification) -> T_ImportSpecification_vOut76
sem_ImportSpecification_Import :: T_Range -> (Bool) -> T_Imports -> T_ImportSpecification
data Inh_Imports
Inh_Imports :: Inh_Imports
data Syn_Imports
Syn_Imports :: (Imports) -> Syn_Imports
self_Syn_Imports :: Syn_Imports -> (Imports)
wrap_Imports :: T_Imports -> Inh_Imports -> (Syn_Imports)
sem_Imports :: Imports -> T_Imports
newtype T_Imports
T_Imports :: Identity (T_Imports_s80) -> T_Imports
attach_T_Imports :: T_Imports -> Identity (T_Imports_s80)
newtype T_Imports_s80
C_Imports_s80 :: (T_Imports_v79) -> T_Imports_s80
inv_Imports_s80 :: T_Imports_s80 -> (T_Imports_v79)
data T_Imports_s81
C_Imports_s81 :: T_Imports_s81
type T_Imports_v79 = (T_Imports_vIn79) -> (T_Imports_vOut79)
data T_Imports_vIn79
T_Imports_vIn79 :: T_Imports_vIn79
data T_Imports_vOut79
T_Imports_vOut79 :: (Imports) -> T_Imports_vOut79
sem_Imports_Cons :: T_Import -> T_Imports -> T_Imports
sem_Imports_Nil :: T_Imports
data Inh_LeftHandSide
Inh_LeftHandSide :: (Int) -> (Int) -> (ImportEnvironment) -> (Monos) -> (Names) -> (InfoTree) -> ([Warning]) -> Inh_LeftHandSide
betaUnique_Inh_LeftHandSide :: Inh_LeftHandSide -> (Int)
counter_Inh_LeftHandSide :: Inh_LeftHandSide -> (Int)
importEnvironment_Inh_LeftHandSide :: Inh_LeftHandSide -> (ImportEnvironment)
monos_Inh_LeftHandSide :: Inh_LeftHandSide -> (Monos)
namesInScope_Inh_LeftHandSide :: Inh_LeftHandSide -> (Names)
parentTree_Inh_LeftHandSide :: Inh_LeftHandSide -> (InfoTree)
patternMatchWarnings_Inh_LeftHandSide :: Inh_LeftHandSide -> ([Warning])
data Syn_LeftHandSide
Syn_LeftHandSide :: (Int) -> (Int) -> (Tps) -> (ConstraintSet) -> (Int) -> ([PatternElement]) -> (PatternAssumptions) -> (InfoTrees) -> (Name) -> (Int) -> (Names) -> ([Warning]) -> (LeftHandSide) -> (Names) -> Syn_LeftHandSide
argcount_Syn_LeftHandSide :: Syn_LeftHandSide -> (Int)
betaUnique_Syn_LeftHandSide :: Syn_LeftHandSide -> (Int)
betas_Syn_LeftHandSide :: Syn_LeftHandSide -> (Tps)
constraints_Syn_LeftHandSide :: Syn_LeftHandSide -> (ConstraintSet)
counter_Syn_LeftHandSide :: Syn_LeftHandSide -> (Int)
elements_Syn_LeftHandSide :: Syn_LeftHandSide -> ([PatternElement])
environment_Syn_LeftHandSide :: Syn_LeftHandSide -> (PatternAssumptions)
infoTrees_Syn_LeftHandSide :: Syn_LeftHandSide -> (InfoTrees)
name_Syn_LeftHandSide :: Syn_LeftHandSide -> (Name)
numberOfPatterns_Syn_LeftHandSide :: Syn_LeftHandSide -> (Int)
patVarNames_Syn_LeftHandSide :: Syn_LeftHandSide -> (Names)
patternMatchWarnings_Syn_LeftHandSide :: Syn_LeftHandSide -> ([Warning])
self_Syn_LeftHandSide :: Syn_LeftHandSide -> (LeftHandSide)
unboundNames_Syn_LeftHandSide :: Syn_LeftHandSide -> (Names)
wrap_LeftHandSide :: T_LeftHandSide -> Inh_LeftHandSide -> (Syn_LeftHandSide)
sem_LeftHandSide :: LeftHandSide -> T_LeftHandSide
newtype T_LeftHandSide
T_LeftHandSide :: Identity (T_LeftHandSide_s83) -> T_LeftHandSide
attach_T_LeftHandSide :: T_LeftHandSide -> Identity (T_LeftHandSide_s83)
newtype T_LeftHandSide_s83
C_LeftHandSide_s83 :: (T_LeftHandSide_v82) -> T_LeftHandSide_s83
inv_LeftHandSide_s83 :: T_LeftHandSide_s83 -> (T_LeftHandSide_v82)
data T_LeftHandSide_s84
C_LeftHandSide_s84 :: T_LeftHandSide_s84
type T_LeftHandSide_v82 = (T_LeftHandSide_vIn82) -> (T_LeftHandSide_vOut82)
data T_LeftHandSide_vIn82
T_LeftHandSide_vIn82 :: (Int) -> (Int) -> (ImportEnvironment) -> (Monos) -> (Names) -> (InfoTree) -> ([Warning]) -> T_LeftHandSide_vIn82
data T_LeftHandSide_vOut82
T_LeftHandSide_vOut82 :: (Int) -> (Int) -> (Tps) -> (ConstraintSet) -> (Int) -> ([PatternElement]) -> (PatternAssumptions) -> (InfoTrees) -> (Name) -> (Int) -> (Names) -> ([Warning]) -> (LeftHandSide) -> (Names) -> T_LeftHandSide_vOut82
sem_LeftHandSide_Function :: T_Range -> T_Name -> T_Patterns -> T_LeftHandSide
sem_LeftHandSide_Infix :: T_Range -> T_Pattern -> T_Name -> T_Pattern -> T_LeftHandSide
sem_LeftHandSide_Parenthesized :: T_Range -> T_LeftHandSide -> T_Patterns -> T_LeftHandSide
data Inh_Literal
Inh_Literal :: Inh_Literal
data Syn_Literal
Syn_Literal :: ([PatternElement]) -> (Tp) -> (Literal) -> Syn_Literal
elements_Syn_Literal :: Syn_Literal -> ([PatternElement])
literalType_Syn_Literal :: Syn_Literal -> (Tp)
self_Syn_Literal :: Syn_Literal -> (Literal)
wrap_Literal :: T_Literal -> Inh_Literal -> (Syn_Literal)
sem_Literal :: Literal -> T_Literal
newtype T_Literal
T_Literal :: Identity (T_Literal_s86) -> T_Literal
attach_T_Literal :: T_Literal -> Identity (T_Literal_s86)
newtype T_Literal_s86
C_Literal_s86 :: (T_Literal_v85) -> T_Literal_s86
inv_Literal_s86 :: T_Literal_s86 -> (T_Literal_v85)
data T_Literal_s87
C_Literal_s87 :: T_Literal_s87
type T_Literal_v85 = (T_Literal_vIn85) -> (T_Literal_vOut85)
data T_Literal_vIn85
T_Literal_vIn85 :: T_Literal_vIn85
data T_Literal_vOut85
T_Literal_vOut85 :: ([PatternElement]) -> (Tp) -> (Literal) -> T_Literal_vOut85
sem_Literal_Int :: T_Range -> (String) -> T_Literal
sem_Literal_Char :: T_Range -> (String) -> T_Literal
sem_Literal_Float :: T_Range -> (String) -> T_Literal
sem_Literal_String :: T_Range -> (String) -> T_Literal
data Inh_MaybeDeclarations
Inh_MaybeDeclarations :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Assumptions) -> (Predicates) -> (Int) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (ConstraintSet) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (IO ()) -> (Monos) -> (Names) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> (Map Int (Scheme Predicates)) -> (Names) -> (Int) -> Inh_MaybeDeclarations
allPatterns_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> ([((Expression, [String]), Core_TypingStrategy)])
allTypeSchemes_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (Map NameWithRange TpScheme)
assumptions_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (Assumptions)
availablePredicates_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (Predicates)
betaUnique_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (Int)
classEnvironment_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (ClassEnvironment)
collectErrors_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (TypeErrors)
collectWarnings_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (Warnings)
constraints_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (ConstraintSet)
counter_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (Int)
currentChunk_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (Int)
dictionaryEnvironment_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (DictionaryEnvironment)
importEnvironment_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (ImportEnvironment)
matchIO_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (IO ())
monos_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (Monos)
namesInScope_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (Names)
orderedTypeSynonyms_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (OrderedTypeSynonyms)
parentTree_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (InfoTree)
patternMatchWarnings_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> ([Warning])
substitution_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (FixpointSubstitution)
typeschemeMap_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (Map Int (Scheme Predicates))
unboundNames_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (Names)
uniqueChunk_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (Int)
data Syn_MaybeDeclarations
Syn_MaybeDeclarations :: (Assumptions) -> (Int) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (ConstraintSet) -> (Int) -> (DictionaryEnvironment) -> (InfoTrees) -> (Map NameWithRange TpScheme) -> (IO ()) -> (Names) -> ([Warning]) -> (MaybeDeclarations) -> (Names) -> (Int) -> Syn_MaybeDeclarations
assumptions_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> (Assumptions)
betaUnique_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> (Int)
collectErrors_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> (TypeErrors)
collectInstances_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> ([(Name, Instance)])
collectWarnings_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> (Warnings)
constraints_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> (ConstraintSet)
counter_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> (Int)
dictionaryEnvironment_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> (DictionaryEnvironment)
infoTrees_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> (InfoTrees)
localTypes_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> (Map NameWithRange TpScheme)
matchIO_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> (IO ())
namesInScope_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> (Names)
patternMatchWarnings_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> ([Warning])
self_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> (MaybeDeclarations)
unboundNames_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> (Names)
uniqueChunk_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> (Int)
wrap_MaybeDeclarations :: T_MaybeDeclarations -> Inh_MaybeDeclarations -> (Syn_MaybeDeclarations)
sem_MaybeDeclarations :: MaybeDeclarations -> T_MaybeDeclarations
newtype T_MaybeDeclarations
T_MaybeDeclarations :: Identity (T_MaybeDeclarations_s89) -> T_MaybeDeclarations
attach_T_MaybeDeclarations :: T_MaybeDeclarations -> Identity (T_MaybeDeclarations_s89)
newtype T_MaybeDeclarations_s89
C_MaybeDeclarations_s89 :: (T_MaybeDeclarations_v88) -> T_MaybeDeclarations_s89
inv_MaybeDeclarations_s89 :: T_MaybeDeclarations_s89 -> (T_MaybeDeclarations_v88)
data T_MaybeDeclarations_s90
C_MaybeDeclarations_s90 :: T_MaybeDeclarations_s90
type T_MaybeDeclarations_v88 = (T_MaybeDeclarations_vIn88) -> (T_MaybeDeclarations_vOut88)
data T_MaybeDeclarations_vIn88
T_MaybeDeclarations_vIn88 :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Assumptions) -> (Predicates) -> (Int) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (ConstraintSet) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (IO ()) -> (Monos) -> (Names) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> (Map Int (Scheme Predicates)) -> (Names) -> (Int) -> T_MaybeDeclarations_vIn88
data T_MaybeDeclarations_vOut88
T_MaybeDeclarations_vOut88 :: (Assumptions) -> (Int) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (ConstraintSet) -> (Int) -> (DictionaryEnvironment) -> (InfoTrees) -> (Map NameWithRange TpScheme) -> (IO ()) -> (Names) -> ([Warning]) -> (MaybeDeclarations) -> (Names) -> (Int) -> T_MaybeDeclarations_vOut88
sem_MaybeDeclarations_Nothing :: T_MaybeDeclarations
sem_MaybeDeclarations_Just :: T_Declarations -> T_MaybeDeclarations
data Inh_MaybeExports
Inh_MaybeExports :: Inh_MaybeExports
data Syn_MaybeExports
Syn_MaybeExports :: (MaybeExports) -> Syn_MaybeExports
self_Syn_MaybeExports :: Syn_MaybeExports -> (MaybeExports)
wrap_MaybeExports :: T_MaybeExports -> Inh_MaybeExports -> (Syn_MaybeExports)
sem_MaybeExports :: MaybeExports -> T_MaybeExports
newtype T_MaybeExports
T_MaybeExports :: Identity (T_MaybeExports_s92) -> T_MaybeExports
attach_T_MaybeExports :: T_MaybeExports -> Identity (T_MaybeExports_s92)
newtype T_MaybeExports_s92
C_MaybeExports_s92 :: (T_MaybeExports_v91) -> T_MaybeExports_s92
inv_MaybeExports_s92 :: T_MaybeExports_s92 -> (T_MaybeExports_v91)
data T_MaybeExports_s93
C_MaybeExports_s93 :: T_MaybeExports_s93
type T_MaybeExports_v91 = (T_MaybeExports_vIn91) -> (T_MaybeExports_vOut91)
data T_MaybeExports_vIn91
T_MaybeExports_vIn91 :: T_MaybeExports_vIn91
data T_MaybeExports_vOut91
T_MaybeExports_vOut91 :: (MaybeExports) -> T_MaybeExports_vOut91
sem_MaybeExports_Nothing :: T_MaybeExports
sem_MaybeExports_Just :: T_Exports -> T_MaybeExports
data Inh_MaybeExpression
Inh_MaybeExpression :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Predicates) -> (Int) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (IO ()) -> (Monos) -> (Names) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> ([(MaybeExpression, [String])]) -> (Map Int (Scheme Predicates)) -> (Int) -> (Int) -> Inh_MaybeExpression
allPatterns_Inh_MaybeExpression :: Inh_MaybeExpression -> ([((Expression, [String]), Core_TypingStrategy)])
allTypeSchemes_Inh_MaybeExpression :: Inh_MaybeExpression -> (Map NameWithRange TpScheme)
availablePredicates_Inh_MaybeExpression :: Inh_MaybeExpression -> (Predicates)
betaUnique_Inh_MaybeExpression :: Inh_MaybeExpression -> (Int)
classEnvironment_Inh_MaybeExpression :: Inh_MaybeExpression -> (ClassEnvironment)
collectErrors_Inh_MaybeExpression :: Inh_MaybeExpression -> (TypeErrors)
collectWarnings_Inh_MaybeExpression :: Inh_MaybeExpression -> (Warnings)
counter_Inh_MaybeExpression :: Inh_MaybeExpression -> (Int)
currentChunk_Inh_MaybeExpression :: Inh_MaybeExpression -> (Int)
dictionaryEnvironment_Inh_MaybeExpression :: Inh_MaybeExpression -> (DictionaryEnvironment)
importEnvironment_Inh_MaybeExpression :: Inh_MaybeExpression -> (ImportEnvironment)
matchIO_Inh_MaybeExpression :: Inh_MaybeExpression -> (IO ())
monos_Inh_MaybeExpression :: Inh_MaybeExpression -> (Monos)
namesInScope_Inh_MaybeExpression :: Inh_MaybeExpression -> (Names)
orderedTypeSynonyms_Inh_MaybeExpression :: Inh_MaybeExpression -> (OrderedTypeSynonyms)
parentTree_Inh_MaybeExpression :: Inh_MaybeExpression -> (InfoTree)
patternMatchWarnings_Inh_MaybeExpression :: Inh_MaybeExpression -> ([Warning])
substitution_Inh_MaybeExpression :: Inh_MaybeExpression -> (FixpointSubstitution)
tryPatterns_Inh_MaybeExpression :: Inh_MaybeExpression -> ([(MaybeExpression, [String])])
typeschemeMap_Inh_MaybeExpression :: Inh_MaybeExpression -> (Map Int (Scheme Predicates))
uniqueChunk_Inh_MaybeExpression :: Inh_MaybeExpression -> (Int)
uniqueSecondRound_Inh_MaybeExpression :: Inh_MaybeExpression -> (Int)
data Syn_MaybeExpression
Syn_MaybeExpression :: (Assumptions) -> (Tp) -> (Int) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (ConstraintSet) -> (Int) -> (DictionaryEnvironment) -> (InfoTrees) -> (IO ()) -> ([Maybe MetaVariableTable]) -> ([Warning]) -> (Bool) -> (MaybeExpression) -> (Names) -> (Int) -> (Int) -> Syn_MaybeExpression
assumptions_Syn_MaybeExpression :: Syn_MaybeExpression -> (Assumptions)
beta_Syn_MaybeExpression :: Syn_MaybeExpression -> (Tp)
betaUnique_Syn_MaybeExpression :: Syn_MaybeExpression -> (Int)
collectErrors_Syn_MaybeExpression :: Syn_MaybeExpression -> (TypeErrors)
collectInstances_Syn_MaybeExpression :: Syn_MaybeExpression -> ([(Name, Instance)])
collectWarnings_Syn_MaybeExpression :: Syn_MaybeExpression -> (Warnings)
constraints_Syn_MaybeExpression :: Syn_MaybeExpression -> (ConstraintSet)
counter_Syn_MaybeExpression :: Syn_MaybeExpression -> (Int)
dictionaryEnvironment_Syn_MaybeExpression :: Syn_MaybeExpression -> (DictionaryEnvironment)
infoTrees_Syn_MaybeExpression :: Syn_MaybeExpression -> (InfoTrees)
matchIO_Syn_MaybeExpression :: Syn_MaybeExpression -> (IO ())
matches_Syn_MaybeExpression :: Syn_MaybeExpression -> ([Maybe MetaVariableTable])
patternMatchWarnings_Syn_MaybeExpression :: Syn_MaybeExpression -> ([Warning])
section_Syn_MaybeExpression :: Syn_MaybeExpression -> (Bool)
self_Syn_MaybeExpression :: Syn_MaybeExpression -> (MaybeExpression)
unboundNames_Syn_MaybeExpression :: Syn_MaybeExpression -> (Names)
uniqueChunk_Syn_MaybeExpression :: Syn_MaybeExpression -> (Int)
uniqueSecondRound_Syn_MaybeExpression :: Syn_MaybeExpression -> (Int)
wrap_MaybeExpression :: T_MaybeExpression -> Inh_MaybeExpression -> (Syn_MaybeExpression)
sem_MaybeExpression :: MaybeExpression -> T_MaybeExpression
newtype T_MaybeExpression
T_MaybeExpression :: Identity (T_MaybeExpression_s95) -> T_MaybeExpression
attach_T_MaybeExpression :: T_MaybeExpression -> Identity (T_MaybeExpression_s95)
newtype T_MaybeExpression_s95
C_MaybeExpression_s95 :: (T_MaybeExpression_v94) -> T_MaybeExpression_s95
inv_MaybeExpression_s95 :: T_MaybeExpression_s95 -> (T_MaybeExpression_v94)
data T_MaybeExpression_s96
C_MaybeExpression_s96 :: T_MaybeExpression_s96
type T_MaybeExpression_v94 = (T_MaybeExpression_vIn94) -> (T_MaybeExpression_vOut94)
data T_MaybeExpression_vIn94
T_MaybeExpression_vIn94 :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Predicates) -> (Int) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (IO ()) -> (Monos) -> (Names) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> ([(MaybeExpression, [String])]) -> (Map Int (Scheme Predicates)) -> (Int) -> (Int) -> T_MaybeExpression_vIn94
data T_MaybeExpression_vOut94
T_MaybeExpression_vOut94 :: (Assumptions) -> (Tp) -> (Int) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (ConstraintSet) -> (Int) -> (DictionaryEnvironment) -> (InfoTrees) -> (IO ()) -> ([Maybe MetaVariableTable]) -> ([Warning]) -> (Bool) -> (MaybeExpression) -> (Names) -> (Int) -> (Int) -> T_MaybeExpression_vOut94
sem_MaybeExpression_Nothing :: T_MaybeExpression
sem_MaybeExpression_Just :: T_Expression -> T_MaybeExpression
data Inh_MaybeImportSpecification
Inh_MaybeImportSpecification :: Inh_MaybeImportSpecification
data Syn_MaybeImportSpecification
Syn_MaybeImportSpecification :: (MaybeImportSpecification) -> Syn_MaybeImportSpecification
self_Syn_MaybeImportSpecification :: Syn_MaybeImportSpecification -> (MaybeImportSpecification)
wrap_MaybeImportSpecification :: T_MaybeImportSpecification -> Inh_MaybeImportSpecification -> (Syn_MaybeImportSpecification)
sem_MaybeImportSpecification :: MaybeImportSpecification -> T_MaybeImportSpecification
newtype T_MaybeImportSpecification
T_MaybeImportSpecification :: Identity (T_MaybeImportSpecification_s98) -> T_MaybeImportSpecification
attach_T_MaybeImportSpecification :: T_MaybeImportSpecification -> Identity (T_MaybeImportSpecification_s98)
newtype T_MaybeImportSpecification_s98
C_MaybeImportSpecification_s98 :: (T_MaybeImportSpecification_v97) -> T_MaybeImportSpecification_s98
inv_MaybeImportSpecification_s98 :: T_MaybeImportSpecification_s98 -> (T_MaybeImportSpecification_v97)
data T_MaybeImportSpecification_s99
C_MaybeImportSpecification_s99 :: T_MaybeImportSpecification_s99
type T_MaybeImportSpecification_v97 = (T_MaybeImportSpecification_vIn97) -> (T_MaybeImportSpecification_vOut97)
data T_MaybeImportSpecification_vIn97
T_MaybeImportSpecification_vIn97 :: T_MaybeImportSpecification_vIn97
data T_MaybeImportSpecification_vOut97
T_MaybeImportSpecification_vOut97 :: (MaybeImportSpecification) -> T_MaybeImportSpecification_vOut97
sem_MaybeImportSpecification_Nothing :: T_MaybeImportSpecification
sem_MaybeImportSpecification_Just :: T_ImportSpecification -> T_MaybeImportSpecification
data Inh_MaybeInt
Inh_MaybeInt :: Inh_MaybeInt
data Syn_MaybeInt
Syn_MaybeInt :: (MaybeInt) -> Syn_MaybeInt
self_Syn_MaybeInt :: Syn_MaybeInt -> (MaybeInt)
wrap_MaybeInt :: T_MaybeInt -> Inh_MaybeInt -> (Syn_MaybeInt)
sem_MaybeInt :: MaybeInt -> T_MaybeInt
newtype T_MaybeInt
T_MaybeInt :: Identity (T_MaybeInt_s101) -> T_MaybeInt
attach_T_MaybeInt :: T_MaybeInt -> Identity (T_MaybeInt_s101)
newtype T_MaybeInt_s101
C_MaybeInt_s101 :: (T_MaybeInt_v100) -> T_MaybeInt_s101
inv_MaybeInt_s101 :: T_MaybeInt_s101 -> (T_MaybeInt_v100)
data T_MaybeInt_s102
C_MaybeInt_s102 :: T_MaybeInt_s102
type T_MaybeInt_v100 = (T_MaybeInt_vIn100) -> (T_MaybeInt_vOut100)
data T_MaybeInt_vIn100
T_MaybeInt_vIn100 :: T_MaybeInt_vIn100
data T_MaybeInt_vOut100
T_MaybeInt_vOut100 :: (MaybeInt) -> T_MaybeInt_vOut100
sem_MaybeInt_Nothing :: T_MaybeInt
sem_MaybeInt_Just :: (Int) -> T_MaybeInt
data Inh_MaybeName
Inh_MaybeName :: Inh_MaybeName
data Syn_MaybeName
Syn_MaybeName :: (MaybeName) -> Syn_MaybeName
self_Syn_MaybeName :: Syn_MaybeName -> (MaybeName)
wrap_MaybeName :: T_MaybeName -> Inh_MaybeName -> (Syn_MaybeName)
sem_MaybeName :: MaybeName -> T_MaybeName
newtype T_MaybeName
T_MaybeName :: Identity (T_MaybeName_s104) -> T_MaybeName
attach_T_MaybeName :: T_MaybeName -> Identity (T_MaybeName_s104)
newtype T_MaybeName_s104
C_MaybeName_s104 :: (T_MaybeName_v103) -> T_MaybeName_s104
inv_MaybeName_s104 :: T_MaybeName_s104 -> (T_MaybeName_v103)
data T_MaybeName_s105
C_MaybeName_s105 :: T_MaybeName_s105
type T_MaybeName_v103 = (T_MaybeName_vIn103) -> (T_MaybeName_vOut103)
data T_MaybeName_vIn103
T_MaybeName_vIn103 :: T_MaybeName_vIn103
data T_MaybeName_vOut103
T_MaybeName_vOut103 :: (MaybeName) -> T_MaybeName_vOut103
sem_MaybeName_Nothing :: T_MaybeName
sem_MaybeName_Just :: T_Name -> T_MaybeName
data Inh_MaybeNames
Inh_MaybeNames :: Inh_MaybeNames
data Syn_MaybeNames
Syn_MaybeNames :: (MaybeNames) -> Syn_MaybeNames
self_Syn_MaybeNames :: Syn_MaybeNames -> (MaybeNames)
wrap_MaybeNames :: T_MaybeNames -> Inh_MaybeNames -> (Syn_MaybeNames)
sem_MaybeNames :: MaybeNames -> T_MaybeNames
newtype T_MaybeNames
T_MaybeNames :: Identity (T_MaybeNames_s107) -> T_MaybeNames
attach_T_MaybeNames :: T_MaybeNames -> Identity (T_MaybeNames_s107)
newtype T_MaybeNames_s107
C_MaybeNames_s107 :: (T_MaybeNames_v106) -> T_MaybeNames_s107
inv_MaybeNames_s107 :: T_MaybeNames_s107 -> (T_MaybeNames_v106)
data T_MaybeNames_s108
C_MaybeNames_s108 :: T_MaybeNames_s108
type T_MaybeNames_v106 = (T_MaybeNames_vIn106) -> (T_MaybeNames_vOut106)
data T_MaybeNames_vIn106
T_MaybeNames_vIn106 :: T_MaybeNames_vIn106
data T_MaybeNames_vOut106
T_MaybeNames_vOut106 :: (MaybeNames) -> T_MaybeNames_vOut106
sem_MaybeNames_Nothing :: T_MaybeNames
sem_MaybeNames_Just :: T_Names -> T_MaybeNames
data Inh_Module
Inh_Module :: (ImportEnvironment) -> ([Option]) -> Inh_Module
importEnvironment_Inh_Module :: Inh_Module -> (ImportEnvironment)
options_Inh_Module :: Inh_Module -> ([Option])
data Syn_Module
Syn_Module :: (Assumptions) -> (DictionaryEnvironment) -> (InfoTree) -> (LogEntries) -> (Module) -> (SolveResult ConstraintInfo) -> (TypeEnvironment) -> (TypeErrors) -> (Warnings) -> Syn_Module
assumptions_Syn_Module :: Syn_Module -> (Assumptions)
dictionaryEnvironment_Syn_Module :: Syn_Module -> (DictionaryEnvironment)
infoTree_Syn_Module :: Syn_Module -> (InfoTree)
logEntries_Syn_Module :: Syn_Module -> (LogEntries)
self_Syn_Module :: Syn_Module -> (Module)
solveResult_Syn_Module :: Syn_Module -> (SolveResult ConstraintInfo)
toplevelTypes_Syn_Module :: Syn_Module -> (TypeEnvironment)
typeErrors_Syn_Module :: Syn_Module -> (TypeErrors)
warnings_Syn_Module :: Syn_Module -> (Warnings)
wrap_Module :: T_Module -> Inh_Module -> (Syn_Module)
sem_Module :: Module -> T_Module
newtype T_Module
T_Module :: Identity (T_Module_s110) -> T_Module
attach_T_Module :: T_Module -> Identity (T_Module_s110)
newtype T_Module_s110
C_Module_s110 :: (T_Module_v109) -> T_Module_s110
inv_Module_s110 :: T_Module_s110 -> (T_Module_v109)
data T_Module_s111
C_Module_s111 :: T_Module_s111
type T_Module_v109 = (T_Module_vIn109) -> (T_Module_vOut109)
data T_Module_vIn109
T_Module_vIn109 :: (ImportEnvironment) -> ([Option]) -> T_Module_vIn109
data T_Module_vOut109
T_Module_vOut109 :: (Assumptions) -> (DictionaryEnvironment) -> (InfoTree) -> (LogEntries) -> (Module) -> (SolveResult ConstraintInfo) -> (TypeEnvironment) -> (TypeErrors) -> (Warnings) -> T_Module_vOut109
sem_Module_Module :: T_Range -> T_MaybeName -> T_MaybeExports -> T_Body -> T_Module
data Inh_Name
Inh_Name :: Inh_Name
data Syn_Name
Syn_Name :: (Name) -> Syn_Name
self_Syn_Name :: Syn_Name -> (Name)
wrap_Name :: T_Name -> Inh_Name -> (Syn_Name)
sem_Name :: Name -> T_Name
newtype T_Name
T_Name :: Identity (T_Name_s113) -> T_Name
attach_T_Name :: T_Name -> Identity (T_Name_s113)
newtype T_Name_s113
C_Name_s113 :: (T_Name_v112) -> T_Name_s113
inv_Name_s113 :: T_Name_s113 -> (T_Name_v112)
data T_Name_s114
C_Name_s114 :: T_Name_s114
type T_Name_v112 = (T_Name_vIn112) -> (T_Name_vOut112)
data T_Name_vIn112
T_Name_vIn112 :: T_Name_vIn112
data T_Name_vOut112
T_Name_vOut112 :: (Name) -> T_Name_vOut112
sem_Name_Identifier :: T_Range -> T_Strings -> (String) -> T_Name
sem_Name_Operator :: T_Range -> T_Strings -> (String) -> T_Name
sem_Name_Special :: T_Range -> T_Strings -> (String) -> T_Name
data Inh_Names
Inh_Names :: Inh_Names
data Syn_Names
Syn_Names :: (Names) -> Syn_Names
self_Syn_Names :: Syn_Names -> (Names)
wrap_Names :: T_Names -> Inh_Names -> (Syn_Names)
sem_Names :: Names -> T_Names
newtype T_Names
T_Names :: Identity (T_Names_s116) -> T_Names
attach_T_Names :: T_Names -> Identity (T_Names_s116)
newtype T_Names_s116
C_Names_s116 :: (T_Names_v115) -> T_Names_s116
inv_Names_s116 :: T_Names_s116 -> (T_Names_v115)
data T_Names_s117
C_Names_s117 :: T_Names_s117
type T_Names_v115 = (T_Names_vIn115) -> (T_Names_vOut115)
data T_Names_vIn115
T_Names_vIn115 :: T_Names_vIn115
data T_Names_vOut115
T_Names_vOut115 :: (Names) -> T_Names_vOut115
sem_Names_Cons :: T_Name -> T_Names -> T_Names
sem_Names_Nil :: T_Names
data Inh_Pattern
Inh_Pattern :: (Int) -> (Int) -> (ImportEnvironment) -> (Monos) -> (Names) -> (InfoTree) -> ([Warning]) -> Inh_Pattern
betaUnique_Inh_Pattern :: Inh_Pattern -> (Int)
counter_Inh_Pattern :: Inh_Pattern -> (Int)
importEnvironment_Inh_Pattern :: Inh_Pattern -> (ImportEnvironment)
monos_Inh_Pattern :: Inh_Pattern -> (Monos)
namesInScope_Inh_Pattern :: Inh_Pattern -> (Names)
parentTree_Inh_Pattern :: Inh_Pattern -> (InfoTree)
patternMatchWarnings_Inh_Pattern :: Inh_Pattern -> ([Warning])
data Syn_Pattern
Syn_Pattern :: (Tp) -> (Int) -> (ConstraintSet) -> (Int) -> ([PatternElement]) -> (PatternAssumptions) -> (InfoTree) -> (Names) -> ([Warning]) -> (Pattern) -> (Names) -> Syn_Pattern
beta_Syn_Pattern :: Syn_Pattern -> (Tp)
betaUnique_Syn_Pattern :: Syn_Pattern -> (Int)
constraints_Syn_Pattern :: Syn_Pattern -> (ConstraintSet)
counter_Syn_Pattern :: Syn_Pattern -> (Int)
elements_Syn_Pattern :: Syn_Pattern -> ([PatternElement])
environment_Syn_Pattern :: Syn_Pattern -> (PatternAssumptions)
infoTree_Syn_Pattern :: Syn_Pattern -> (InfoTree)
patVarNames_Syn_Pattern :: Syn_Pattern -> (Names)
patternMatchWarnings_Syn_Pattern :: Syn_Pattern -> ([Warning])
self_Syn_Pattern :: Syn_Pattern -> (Pattern)
unboundNames_Syn_Pattern :: Syn_Pattern -> (Names)
wrap_Pattern :: T_Pattern -> Inh_Pattern -> (Syn_Pattern)
sem_Pattern :: Pattern -> T_Pattern
newtype T_Pattern
T_Pattern :: Identity (T_Pattern_s119) -> T_Pattern
attach_T_Pattern :: T_Pattern -> Identity (T_Pattern_s119)
newtype T_Pattern_s119
C_Pattern_s119 :: (T_Pattern_v118) -> T_Pattern_s119
inv_Pattern_s119 :: T_Pattern_s119 -> (T_Pattern_v118)
data T_Pattern_s120
C_Pattern_s120 :: T_Pattern_s120
type T_Pattern_v118 = (T_Pattern_vIn118) -> (T_Pattern_vOut118)
data T_Pattern_vIn118
T_Pattern_vIn118 :: (Int) -> (Int) -> (ImportEnvironment) -> (Monos) -> (Names) -> (InfoTree) -> ([Warning]) -> T_Pattern_vIn118
data T_Pattern_vOut118
T_Pattern_vOut118 :: (Tp) -> (Int) -> (ConstraintSet) -> (Int) -> ([PatternElement]) -> (PatternAssumptions) -> (InfoTree) -> (Names) -> ([Warning]) -> (Pattern) -> (Names) -> T_Pattern_vOut118
sem_Pattern_Hole :: T_Range -> (Integer) -> T_Pattern
sem_Pattern_Literal :: T_Range -> T_Literal -> T_Pattern
sem_Pattern_Variable :: T_Range -> T_Name -> T_Pattern
sem_Pattern_Constructor :: T_Range -> T_Name -> T_Patterns -> T_Pattern
sem_Pattern_Parenthesized :: T_Range -> T_Pattern -> T_Pattern
sem_Pattern_InfixConstructor :: T_Range -> T_Pattern -> T_Name -> T_Pattern -> T_Pattern
sem_Pattern_List :: T_Range -> T_Patterns -> T_Pattern
sem_Pattern_Tuple :: T_Range -> T_Patterns -> T_Pattern
sem_Pattern_Record :: T_Range -> T_Name -> T_RecordPatternBindings -> T_Pattern
sem_Pattern_Negate :: T_Range -> T_Literal -> T_Pattern
sem_Pattern_As :: T_Range -> T_Name -> T_Pattern -> T_Pattern
sem_Pattern_Wildcard :: T_Range -> T_Pattern
sem_Pattern_Irrefutable :: T_Range -> T_Pattern -> T_Pattern
sem_Pattern_Successor :: T_Range -> T_Name -> T_Literal -> T_Pattern
sem_Pattern_NegateFloat :: T_Range -> T_Literal -> T_Pattern
data Inh_Patterns
Inh_Patterns :: (Int) -> (Int) -> (ImportEnvironment) -> (Monos) -> (Names) -> (InfoTree) -> ([Warning]) -> Inh_Patterns
betaUnique_Inh_Patterns :: Inh_Patterns -> (Int)
counter_Inh_Patterns :: Inh_Patterns -> (Int)
importEnvironment_Inh_Patterns :: Inh_Patterns -> (ImportEnvironment)
monos_Inh_Patterns :: Inh_Patterns -> (Monos)
namesInScope_Inh_Patterns :: Inh_Patterns -> (Names)
parentTree_Inh_Patterns :: Inh_Patterns -> (InfoTree)
patternMatchWarnings_Inh_Patterns :: Inh_Patterns -> ([Warning])
data Syn_Patterns
Syn_Patterns :: (Int) -> (Tps) -> (ConstraintSets) -> (Int) -> ([[PatternElement]]) -> (PatternAssumptions) -> (InfoTrees) -> (Int) -> (Names) -> ([Warning]) -> (Patterns) -> (Names) -> Syn_Patterns
betaUnique_Syn_Patterns :: Syn_Patterns -> (Int)
betas_Syn_Patterns :: Syn_Patterns -> (Tps)
constraintslist_Syn_Patterns :: Syn_Patterns -> (ConstraintSets)
counter_Syn_Patterns :: Syn_Patterns -> (Int)
elementss_Syn_Patterns :: Syn_Patterns -> ([[PatternElement]])
environment_Syn_Patterns :: Syn_Patterns -> (PatternAssumptions)
infoTrees_Syn_Patterns :: Syn_Patterns -> (InfoTrees)
numberOfPatterns_Syn_Patterns :: Syn_Patterns -> (Int)
patVarNames_Syn_Patterns :: Syn_Patterns -> (Names)
patternMatchWarnings_Syn_Patterns :: Syn_Patterns -> ([Warning])
self_Syn_Patterns :: Syn_Patterns -> (Patterns)
unboundNames_Syn_Patterns :: Syn_Patterns -> (Names)
wrap_Patterns :: T_Patterns -> Inh_Patterns -> (Syn_Patterns)
sem_Patterns :: Patterns -> T_Patterns
newtype T_Patterns
T_Patterns :: Identity (T_Patterns_s122) -> T_Patterns
attach_T_Patterns :: T_Patterns -> Identity (T_Patterns_s122)
newtype T_Patterns_s122
C_Patterns_s122 :: (T_Patterns_v121) -> T_Patterns_s122
inv_Patterns_s122 :: T_Patterns_s122 -> (T_Patterns_v121)
data T_Patterns_s123
C_Patterns_s123 :: T_Patterns_s123
type T_Patterns_v121 = (T_Patterns_vIn121) -> (T_Patterns_vOut121)
data T_Patterns_vIn121
T_Patterns_vIn121 :: (Int) -> (Int) -> (ImportEnvironment) -> (Monos) -> (Names) -> (InfoTree) -> ([Warning]) -> T_Patterns_vIn121
data T_Patterns_vOut121
T_Patterns_vOut121 :: (Int) -> (Tps) -> (ConstraintSets) -> (Int) -> ([[PatternElement]]) -> (PatternAssumptions) -> (InfoTrees) -> (Int) -> (Names) -> ([Warning]) -> (Patterns) -> (Names) -> T_Patterns_vOut121
sem_Patterns_Cons :: T_Pattern -> T_Patterns -> T_Patterns
sem_Patterns_Nil :: T_Patterns
data Inh_Position
Inh_Position :: Inh_Position
data Syn_Position
Syn_Position :: (Position) -> Syn_Position
self_Syn_Position :: Syn_Position -> (Position)
wrap_Position :: T_Position -> Inh_Position -> (Syn_Position)
sem_Position :: Position -> T_Position
newtype T_Position
T_Position :: Identity (T_Position_s125) -> T_Position
attach_T_Position :: T_Position -> Identity (T_Position_s125)
newtype T_Position_s125
C_Position_s125 :: (T_Position_v124) -> T_Position_s125
inv_Position_s125 :: T_Position_s125 -> (T_Position_v124)
data T_Position_s126
C_Position_s126 :: T_Position_s126
type T_Position_v124 = (T_Position_vIn124) -> (T_Position_vOut124)
data T_Position_vIn124
T_Position_vIn124 :: T_Position_vIn124
data T_Position_vOut124
T_Position_vOut124 :: (Position) -> T_Position_vOut124
sem_Position_Position :: (String) -> (Int) -> (Int) -> T_Position
sem_Position_Unknown :: T_Position
data Inh_Qualifier
Inh_Qualifier :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Assumptions) -> (Predicates) -> (Int) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (ConstraintSet) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (IO ()) -> (Monos) -> (Names) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> (Map Int (Scheme Predicates)) -> (Names) -> (Int) -> (Int) -> Inh_Qualifier
allPatterns_Inh_Qualifier :: Inh_Qualifier -> ([((Expression, [String]), Core_TypingStrategy)])
allTypeSchemes_Inh_Qualifier :: Inh_Qualifier -> (Map NameWithRange TpScheme)
assumptions_Inh_Qualifier :: Inh_Qualifier -> (Assumptions)
availablePredicates_Inh_Qualifier :: Inh_Qualifier -> (Predicates)
betaUnique_Inh_Qualifier :: Inh_Qualifier -> (Int)
classEnvironment_Inh_Qualifier :: Inh_Qualifier -> (ClassEnvironment)
collectErrors_Inh_Qualifier :: Inh_Qualifier -> (TypeErrors)
collectWarnings_Inh_Qualifier :: Inh_Qualifier -> (Warnings)
constraints_Inh_Qualifier :: Inh_Qualifier -> (ConstraintSet)
counter_Inh_Qualifier :: Inh_Qualifier -> (Int)
currentChunk_Inh_Qualifier :: Inh_Qualifier -> (Int)
dictionaryEnvironment_Inh_Qualifier :: Inh_Qualifier -> (DictionaryEnvironment)
importEnvironment_Inh_Qualifier :: Inh_Qualifier -> (ImportEnvironment)
matchIO_Inh_Qualifier :: Inh_Qualifier -> (IO ())
monos_Inh_Qualifier :: Inh_Qualifier -> (Monos)
namesInScope_Inh_Qualifier :: Inh_Qualifier -> (Names)
orderedTypeSynonyms_Inh_Qualifier :: Inh_Qualifier -> (OrderedTypeSynonyms)
parentTree_Inh_Qualifier :: Inh_Qualifier -> (InfoTree)
patternMatchWarnings_Inh_Qualifier :: Inh_Qualifier -> ([Warning])
substitution_Inh_Qualifier :: Inh_Qualifier -> (FixpointSubstitution)
typeschemeMap_Inh_Qualifier :: Inh_Qualifier -> (Map Int (Scheme Predicates))
unboundNames_Inh_Qualifier :: Inh_Qualifier -> (Names)
uniqueChunk_Inh_Qualifier :: Inh_Qualifier -> (Int)
uniqueSecondRound_Inh_Qualifier :: Inh_Qualifier -> (Int)
data Syn_Qualifier
Syn_Qualifier :: (Assumptions) -> (Int) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (ConstraintSet) -> (Int) -> (DictionaryEnvironment) -> (InfoTree) -> (IO ()) -> (Monos) -> (Names) -> ([Warning]) -> (Qualifier) -> (Names) -> (Int) -> (Int) -> Syn_Qualifier
assumptions_Syn_Qualifier :: Syn_Qualifier -> (Assumptions)
betaUnique_Syn_Qualifier :: Syn_Qualifier -> (Int)
collectErrors_Syn_Qualifier :: Syn_Qualifier -> (TypeErrors)
collectInstances_Syn_Qualifier :: Syn_Qualifier -> ([(Name, Instance)])
collectWarnings_Syn_Qualifier :: Syn_Qualifier -> (Warnings)
constraints_Syn_Qualifier :: Syn_Qualifier -> (ConstraintSet)
counter_Syn_Qualifier :: Syn_Qualifier -> (Int)
dictionaryEnvironment_Syn_Qualifier :: Syn_Qualifier -> (DictionaryEnvironment)
infoTree_Syn_Qualifier :: Syn_Qualifier -> (InfoTree)
matchIO_Syn_Qualifier :: Syn_Qualifier -> (IO ())
monos_Syn_Qualifier :: Syn_Qualifier -> (Monos)
namesInScope_Syn_Qualifier :: Syn_Qualifier -> (Names)
patternMatchWarnings_Syn_Qualifier :: Syn_Qualifier -> ([Warning])
self_Syn_Qualifier :: Syn_Qualifier -> (Qualifier)
unboundNames_Syn_Qualifier :: Syn_Qualifier -> (Names)
uniqueChunk_Syn_Qualifier :: Syn_Qualifier -> (Int)
uniqueSecondRound_Syn_Qualifier :: Syn_Qualifier -> (Int)
wrap_Qualifier :: T_Qualifier -> Inh_Qualifier -> (Syn_Qualifier)
sem_Qualifier :: Qualifier -> T_Qualifier
newtype T_Qualifier
T_Qualifier :: Identity (T_Qualifier_s128) -> T_Qualifier
attach_T_Qualifier :: T_Qualifier -> Identity (T_Qualifier_s128)
newtype T_Qualifier_s128
C_Qualifier_s128 :: (T_Qualifier_v127) -> T_Qualifier_s128
inv_Qualifier_s128 :: T_Qualifier_s128 -> (T_Qualifier_v127)
data T_Qualifier_s129
C_Qualifier_s129 :: T_Qualifier_s129
type T_Qualifier_v127 = (T_Qualifier_vIn127) -> (T_Qualifier_vOut127)
data T_Qualifier_vIn127
T_Qualifier_vIn127 :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Assumptions) -> (Predicates) -> (Int) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (ConstraintSet) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (IO ()) -> (Monos) -> (Names) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> (Map Int (Scheme Predicates)) -> (Names) -> (Int) -> (Int) -> T_Qualifier_vIn127
data T_Qualifier_vOut127
T_Qualifier_vOut127 :: (Assumptions) -> (Int) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (ConstraintSet) -> (Int) -> (DictionaryEnvironment) -> (InfoTree) -> (IO ()) -> (Monos) -> (Names) -> ([Warning]) -> (Qualifier) -> (Names) -> (Int) -> (Int) -> T_Qualifier_vOut127
sem_Qualifier_Guard :: T_Range -> T_Expression -> T_Qualifier
sem_Qualifier_Let :: T_Range -> T_Declarations -> T_Qualifier
sem_Qualifier_Generator :: T_Range -> T_Pattern -> T_Expression -> T_Qualifier
sem_Qualifier_Empty :: T_Range -> T_Qualifier
data Inh_Qualifiers
Inh_Qualifiers :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Assumptions) -> (Predicates) -> (Int) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (ConstraintSet) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (IO ()) -> (Monos) -> (Names) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> (Map Int (Scheme Predicates)) -> (Names) -> (Int) -> (Int) -> Inh_Qualifiers
allPatterns_Inh_Qualifiers :: Inh_Qualifiers -> ([((Expression, [String]), Core_TypingStrategy)])
allTypeSchemes_Inh_Qualifiers :: Inh_Qualifiers -> (Map NameWithRange TpScheme)
assumptions_Inh_Qualifiers :: Inh_Qualifiers -> (Assumptions)
availablePredicates_Inh_Qualifiers :: Inh_Qualifiers -> (Predicates)
betaUnique_Inh_Qualifiers :: Inh_Qualifiers -> (Int)
classEnvironment_Inh_Qualifiers :: Inh_Qualifiers -> (ClassEnvironment)
collectErrors_Inh_Qualifiers :: Inh_Qualifiers -> (TypeErrors)
collectWarnings_Inh_Qualifiers :: Inh_Qualifiers -> (Warnings)
constraints_Inh_Qualifiers :: Inh_Qualifiers -> (ConstraintSet)
counter_Inh_Qualifiers :: Inh_Qualifiers -> (Int)
currentChunk_Inh_Qualifiers :: Inh_Qualifiers -> (Int)
dictionaryEnvironment_Inh_Qualifiers :: Inh_Qualifiers -> (DictionaryEnvironment)
importEnvironment_Inh_Qualifiers :: Inh_Qualifiers -> (ImportEnvironment)
matchIO_Inh_Qualifiers :: Inh_Qualifiers -> (IO ())
monos_Inh_Qualifiers :: Inh_Qualifiers -> (Monos)
namesInScope_Inh_Qualifiers :: Inh_Qualifiers -> (Names)
orderedTypeSynonyms_Inh_Qualifiers :: Inh_Qualifiers -> (OrderedTypeSynonyms)
parentTree_Inh_Qualifiers :: Inh_Qualifiers -> (InfoTree)
patternMatchWarnings_Inh_Qualifiers :: Inh_Qualifiers -> ([Warning])
substitution_Inh_Qualifiers :: Inh_Qualifiers -> (FixpointSubstitution)
typeschemeMap_Inh_Qualifiers :: Inh_Qualifiers -> (Map Int (Scheme Predicates))
unboundNames_Inh_Qualifiers :: Inh_Qualifiers -> (Names)
uniqueChunk_Inh_Qualifiers :: Inh_Qualifiers -> (Int)
uniqueSecondRound_Inh_Qualifiers :: Inh_Qualifiers -> (Int)
data Syn_Qualifiers
Syn_Qualifiers :: (Assumptions) -> (Int) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (ConstraintSet) -> (Int) -> (DictionaryEnvironment) -> (InfoTrees) -> (IO ()) -> (Monos) -> (Names) -> ([Warning]) -> (Qualifiers) -> (Names) -> (Int) -> (Int) -> Syn_Qualifiers
assumptions_Syn_Qualifiers :: Syn_Qualifiers -> (Assumptions)
betaUnique_Syn_Qualifiers :: Syn_Qualifiers -> (Int)
collectErrors_Syn_Qualifiers :: Syn_Qualifiers -> (TypeErrors)
collectInstances_Syn_Qualifiers :: Syn_Qualifiers -> ([(Name, Instance)])
collectWarnings_Syn_Qualifiers :: Syn_Qualifiers -> (Warnings)
constraints_Syn_Qualifiers :: Syn_Qualifiers -> (ConstraintSet)
counter_Syn_Qualifiers :: Syn_Qualifiers -> (Int)
dictionaryEnvironment_Syn_Qualifiers :: Syn_Qualifiers -> (DictionaryEnvironment)
infoTrees_Syn_Qualifiers :: Syn_Qualifiers -> (InfoTrees)
matchIO_Syn_Qualifiers :: Syn_Qualifiers -> (IO ())
monos_Syn_Qualifiers :: Syn_Qualifiers -> (Monos)
namesInScope_Syn_Qualifiers :: Syn_Qualifiers -> (Names)
patternMatchWarnings_Syn_Qualifiers :: Syn_Qualifiers -> ([Warning])
self_Syn_Qualifiers :: Syn_Qualifiers -> (Qualifiers)
unboundNames_Syn_Qualifiers :: Syn_Qualifiers -> (Names)
uniqueChunk_Syn_Qualifiers :: Syn_Qualifiers -> (Int)
uniqueSecondRound_Syn_Qualifiers :: Syn_Qualifiers -> (Int)
wrap_Qualifiers :: T_Qualifiers -> Inh_Qualifiers -> (Syn_Qualifiers)
sem_Qualifiers :: Qualifiers -> T_Qualifiers
newtype T_Qualifiers
T_Qualifiers :: Identity (T_Qualifiers_s131) -> T_Qualifiers
attach_T_Qualifiers :: T_Qualifiers -> Identity (T_Qualifiers_s131)
newtype T_Qualifiers_s131
C_Qualifiers_s131 :: (T_Qualifiers_v130) -> T_Qualifiers_s131
inv_Qualifiers_s131 :: T_Qualifiers_s131 -> (T_Qualifiers_v130)
data T_Qualifiers_s132
C_Qualifiers_s132 :: T_Qualifiers_s132
type T_Qualifiers_v130 = (T_Qualifiers_vIn130) -> (T_Qualifiers_vOut130)
data T_Qualifiers_vIn130
T_Qualifiers_vIn130 :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Assumptions) -> (Predicates) -> (Int) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (ConstraintSet) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (IO ()) -> (Monos) -> (Names) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> (Map Int (Scheme Predicates)) -> (Names) -> (Int) -> (Int) -> T_Qualifiers_vIn130
data T_Qualifiers_vOut130
T_Qualifiers_vOut130 :: (Assumptions) -> (Int) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (ConstraintSet) -> (Int) -> (DictionaryEnvironment) -> (InfoTrees) -> (IO ()) -> (Monos) -> (Names) -> ([Warning]) -> (Qualifiers) -> (Names) -> (Int) -> (Int) -> T_Qualifiers_vOut130
sem_Qualifiers_Cons :: T_Qualifier -> T_Qualifiers -> T_Qualifiers
sem_Qualifiers_Nil :: T_Qualifiers
data Inh_Range
Inh_Range :: Inh_Range
data Syn_Range
Syn_Range :: (Range) -> Syn_Range
self_Syn_Range :: Syn_Range -> (Range)
wrap_Range :: T_Range -> Inh_Range -> (Syn_Range)
sem_Range :: Range -> T_Range
newtype T_Range
T_Range :: Identity (T_Range_s134) -> T_Range
attach_T_Range :: T_Range -> Identity (T_Range_s134)
newtype T_Range_s134
C_Range_s134 :: (T_Range_v133) -> T_Range_s134
inv_Range_s134 :: T_Range_s134 -> (T_Range_v133)
data T_Range_s135
C_Range_s135 :: T_Range_s135
type T_Range_v133 = (T_Range_vIn133) -> (T_Range_vOut133)
data T_Range_vIn133
T_Range_vIn133 :: T_Range_vIn133
data T_Range_vOut133
T_Range_vOut133 :: (Range) -> T_Range_vOut133
sem_Range_Range :: T_Position -> T_Position -> T_Range
data Inh_RecordExpressionBinding
Inh_RecordExpressionBinding :: (Map NameWithRange TpScheme) -> (Predicates) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (Names) -> (OrderedTypeSynonyms) -> ([Warning]) -> (FixpointSubstitution) -> (Map Int (Scheme Predicates)) -> (Int) -> Inh_RecordExpressionBinding
allTypeSchemes_Inh_RecordExpressionBinding :: Inh_RecordExpressionBinding -> (Map NameWithRange TpScheme)
availablePredicates_Inh_RecordExpressionBinding :: Inh_RecordExpressionBinding -> (Predicates)
classEnvironment_Inh_RecordExpressionBinding :: Inh_RecordExpressionBinding -> (ClassEnvironment)
collectErrors_Inh_RecordExpressionBinding :: Inh_RecordExpressionBinding -> (TypeErrors)
collectWarnings_Inh_RecordExpressionBinding :: Inh_RecordExpressionBinding -> (Warnings)
counter_Inh_RecordExpressionBinding :: Inh_RecordExpressionBinding -> (Int)
currentChunk_Inh_RecordExpressionBinding :: Inh_RecordExpressionBinding -> (Int)
dictionaryEnvironment_Inh_RecordExpressionBinding :: Inh_RecordExpressionBinding -> (DictionaryEnvironment)
importEnvironment_Inh_RecordExpressionBinding :: Inh_RecordExpressionBinding -> (ImportEnvironment)
namesInScope_Inh_RecordExpressionBinding :: Inh_RecordExpressionBinding -> (Names)
orderedTypeSynonyms_Inh_RecordExpressionBinding :: Inh_RecordExpressionBinding -> (OrderedTypeSynonyms)
patternMatchWarnings_Inh_RecordExpressionBinding :: Inh_RecordExpressionBinding -> ([Warning])
substitution_Inh_RecordExpressionBinding :: Inh_RecordExpressionBinding -> (FixpointSubstitution)
typeschemeMap_Inh_RecordExpressionBinding :: Inh_RecordExpressionBinding -> (Map Int (Scheme Predicates))
uniqueChunk_Inh_RecordExpressionBinding :: Inh_RecordExpressionBinding -> (Int)
data Syn_RecordExpressionBinding
Syn_RecordExpressionBinding :: (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (Int) -> (DictionaryEnvironment) -> ([Warning]) -> (RecordExpressionBinding) -> (Names) -> (Int) -> Syn_RecordExpressionBinding
collectErrors_Syn_RecordExpressionBinding :: Syn_RecordExpressionBinding -> (TypeErrors)
collectInstances_Syn_RecordExpressionBinding :: Syn_RecordExpressionBinding -> ([(Name, Instance)])
collectWarnings_Syn_RecordExpressionBinding :: Syn_RecordExpressionBinding -> (Warnings)
counter_Syn_RecordExpressionBinding :: Syn_RecordExpressionBinding -> (Int)
dictionaryEnvironment_Syn_RecordExpressionBinding :: Syn_RecordExpressionBinding -> (DictionaryEnvironment)
patternMatchWarnings_Syn_RecordExpressionBinding :: Syn_RecordExpressionBinding -> ([Warning])
self_Syn_RecordExpressionBinding :: Syn_RecordExpressionBinding -> (RecordExpressionBinding)
unboundNames_Syn_RecordExpressionBinding :: Syn_RecordExpressionBinding -> (Names)
uniqueChunk_Syn_RecordExpressionBinding :: Syn_RecordExpressionBinding -> (Int)
wrap_RecordExpressionBinding :: T_RecordExpressionBinding -> Inh_RecordExpressionBinding -> (Syn_RecordExpressionBinding)
sem_RecordExpressionBinding :: RecordExpressionBinding -> T_RecordExpressionBinding
newtype T_RecordExpressionBinding
T_RecordExpressionBinding :: Identity (T_RecordExpressionBinding_s137) -> T_RecordExpressionBinding
attach_T_RecordExpressionBinding :: T_RecordExpressionBinding -> Identity (T_RecordExpressionBinding_s137)
newtype T_RecordExpressionBinding_s137
C_RecordExpressionBinding_s137 :: (T_RecordExpressionBinding_v136) -> T_RecordExpressionBinding_s137
inv_RecordExpressionBinding_s137 :: T_RecordExpressionBinding_s137 -> (T_RecordExpressionBinding_v136)
data T_RecordExpressionBinding_s138
C_RecordExpressionBinding_s138 :: T_RecordExpressionBinding_s138
type T_RecordExpressionBinding_v136 = (T_RecordExpressionBinding_vIn136) -> (T_RecordExpressionBinding_vOut136)
data T_RecordExpressionBinding_vIn136
T_RecordExpressionBinding_vIn136 :: (Map NameWithRange TpScheme) -> (Predicates) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (Names) -> (OrderedTypeSynonyms) -> ([Warning]) -> (FixpointSubstitution) -> (Map Int (Scheme Predicates)) -> (Int) -> T_RecordExpressionBinding_vIn136
data T_RecordExpressionBinding_vOut136
T_RecordExpressionBinding_vOut136 :: (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (Int) -> (DictionaryEnvironment) -> ([Warning]) -> (RecordExpressionBinding) -> (Names) -> (Int) -> T_RecordExpressionBinding_vOut136
sem_RecordExpressionBinding_RecordExpressionBinding :: T_Range -> T_Name -> T_Expression -> T_RecordExpressionBinding
data Inh_RecordExpressionBindings
Inh_RecordExpressionBindings :: (Map NameWithRange TpScheme) -> (Predicates) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (Names) -> (OrderedTypeSynonyms) -> ([Warning]) -> (FixpointSubstitution) -> (Map Int (Scheme Predicates)) -> (Int) -> Inh_RecordExpressionBindings
allTypeSchemes_Inh_RecordExpressionBindings :: Inh_RecordExpressionBindings -> (Map NameWithRange TpScheme)
availablePredicates_Inh_RecordExpressionBindings :: Inh_RecordExpressionBindings -> (Predicates)
classEnvironment_Inh_RecordExpressionBindings :: Inh_RecordExpressionBindings -> (ClassEnvironment)
collectErrors_Inh_RecordExpressionBindings :: Inh_RecordExpressionBindings -> (TypeErrors)
collectWarnings_Inh_RecordExpressionBindings :: Inh_RecordExpressionBindings -> (Warnings)
counter_Inh_RecordExpressionBindings :: Inh_RecordExpressionBindings -> (Int)
currentChunk_Inh_RecordExpressionBindings :: Inh_RecordExpressionBindings -> (Int)
dictionaryEnvironment_Inh_RecordExpressionBindings :: Inh_RecordExpressionBindings -> (DictionaryEnvironment)
importEnvironment_Inh_RecordExpressionBindings :: Inh_RecordExpressionBindings -> (ImportEnvironment)
namesInScope_Inh_RecordExpressionBindings :: Inh_RecordExpressionBindings -> (Names)
orderedTypeSynonyms_Inh_RecordExpressionBindings :: Inh_RecordExpressionBindings -> (OrderedTypeSynonyms)
patternMatchWarnings_Inh_RecordExpressionBindings :: Inh_RecordExpressionBindings -> ([Warning])
substitution_Inh_RecordExpressionBindings :: Inh_RecordExpressionBindings -> (FixpointSubstitution)
typeschemeMap_Inh_RecordExpressionBindings :: Inh_RecordExpressionBindings -> (Map Int (Scheme Predicates))
uniqueChunk_Inh_RecordExpressionBindings :: Inh_RecordExpressionBindings -> (Int)
data Syn_RecordExpressionBindings
Syn_RecordExpressionBindings :: (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (Int) -> (DictionaryEnvironment) -> ([Warning]) -> (RecordExpressionBindings) -> (Names) -> (Int) -> Syn_RecordExpressionBindings
collectErrors_Syn_RecordExpressionBindings :: Syn_RecordExpressionBindings -> (TypeErrors)
collectInstances_Syn_RecordExpressionBindings :: Syn_RecordExpressionBindings -> ([(Name, Instance)])
collectWarnings_Syn_RecordExpressionBindings :: Syn_RecordExpressionBindings -> (Warnings)
counter_Syn_RecordExpressionBindings :: Syn_RecordExpressionBindings -> (Int)
dictionaryEnvironment_Syn_RecordExpressionBindings :: Syn_RecordExpressionBindings -> (DictionaryEnvironment)
patternMatchWarnings_Syn_RecordExpressionBindings :: Syn_RecordExpressionBindings -> ([Warning])
self_Syn_RecordExpressionBindings :: Syn_RecordExpressionBindings -> (RecordExpressionBindings)
unboundNames_Syn_RecordExpressionBindings :: Syn_RecordExpressionBindings -> (Names)
uniqueChunk_Syn_RecordExpressionBindings :: Syn_RecordExpressionBindings -> (Int)
wrap_RecordExpressionBindings :: T_RecordExpressionBindings -> Inh_RecordExpressionBindings -> (Syn_RecordExpressionBindings)
sem_RecordExpressionBindings :: RecordExpressionBindings -> T_RecordExpressionBindings
newtype T_RecordExpressionBindings
T_RecordExpressionBindings :: Identity (T_RecordExpressionBindings_s140) -> T_RecordExpressionBindings
attach_T_RecordExpressionBindings :: T_RecordExpressionBindings -> Identity (T_RecordExpressionBindings_s140)
newtype T_RecordExpressionBindings_s140
C_RecordExpressionBindings_s140 :: (T_RecordExpressionBindings_v139) -> T_RecordExpressionBindings_s140
inv_RecordExpressionBindings_s140 :: T_RecordExpressionBindings_s140 -> (T_RecordExpressionBindings_v139)
data T_RecordExpressionBindings_s141
C_RecordExpressionBindings_s141 :: T_RecordExpressionBindings_s141
type T_RecordExpressionBindings_v139 = (T_RecordExpressionBindings_vIn139) -> (T_RecordExpressionBindings_vOut139)
data T_RecordExpressionBindings_vIn139
T_RecordExpressionBindings_vIn139 :: (Map NameWithRange TpScheme) -> (Predicates) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (Names) -> (OrderedTypeSynonyms) -> ([Warning]) -> (FixpointSubstitution) -> (Map Int (Scheme Predicates)) -> (Int) -> T_RecordExpressionBindings_vIn139
data T_RecordExpressionBindings_vOut139
T_RecordExpressionBindings_vOut139 :: (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (Int) -> (DictionaryEnvironment) -> ([Warning]) -> (RecordExpressionBindings) -> (Names) -> (Int) -> T_RecordExpressionBindings_vOut139
sem_RecordExpressionBindings_Cons :: T_RecordExpressionBinding -> T_RecordExpressionBindings -> T_RecordExpressionBindings
sem_RecordExpressionBindings_Nil :: T_RecordExpressionBindings
data Inh_RecordPatternBinding
Inh_RecordPatternBinding :: (Int) -> (Names) -> ([Warning]) -> Inh_RecordPatternBinding
counter_Inh_RecordPatternBinding :: Inh_RecordPatternBinding -> (Int)
namesInScope_Inh_RecordPatternBinding :: Inh_RecordPatternBinding -> (Names)
patternMatchWarnings_Inh_RecordPatternBinding :: Inh_RecordPatternBinding -> ([Warning])
data Syn_RecordPatternBinding
Syn_RecordPatternBinding :: (Int) -> ([Warning]) -> (RecordPatternBinding) -> (Names) -> Syn_RecordPatternBinding
counter_Syn_RecordPatternBinding :: Syn_RecordPatternBinding -> (Int)
patternMatchWarnings_Syn_RecordPatternBinding :: Syn_RecordPatternBinding -> ([Warning])
self_Syn_RecordPatternBinding :: Syn_RecordPatternBinding -> (RecordPatternBinding)
unboundNames_Syn_RecordPatternBinding :: Syn_RecordPatternBinding -> (Names)
wrap_RecordPatternBinding :: T_RecordPatternBinding -> Inh_RecordPatternBinding -> (Syn_RecordPatternBinding)
sem_RecordPatternBinding :: RecordPatternBinding -> T_RecordPatternBinding
newtype T_RecordPatternBinding
T_RecordPatternBinding :: Identity (T_RecordPatternBinding_s143) -> T_RecordPatternBinding
attach_T_RecordPatternBinding :: T_RecordPatternBinding -> Identity (T_RecordPatternBinding_s143)
newtype T_RecordPatternBinding_s143
C_RecordPatternBinding_s143 :: (T_RecordPatternBinding_v142) -> T_RecordPatternBinding_s143
inv_RecordPatternBinding_s143 :: T_RecordPatternBinding_s143 -> (T_RecordPatternBinding_v142)
data T_RecordPatternBinding_s144
C_RecordPatternBinding_s144 :: T_RecordPatternBinding_s144
type T_RecordPatternBinding_v142 = (T_RecordPatternBinding_vIn142) -> (T_RecordPatternBinding_vOut142)
data T_RecordPatternBinding_vIn142
T_RecordPatternBinding_vIn142 :: (Int) -> (Names) -> ([Warning]) -> T_RecordPatternBinding_vIn142
data T_RecordPatternBinding_vOut142
T_RecordPatternBinding_vOut142 :: (Int) -> ([Warning]) -> (RecordPatternBinding) -> (Names) -> T_RecordPatternBinding_vOut142
sem_RecordPatternBinding_RecordPatternBinding :: T_Range -> T_Name -> T_Pattern -> T_RecordPatternBinding
data Inh_RecordPatternBindings
Inh_RecordPatternBindings :: (Int) -> (Names) -> ([Warning]) -> Inh_RecordPatternBindings
counter_Inh_RecordPatternBindings :: Inh_RecordPatternBindings -> (Int)
namesInScope_Inh_RecordPatternBindings :: Inh_RecordPatternBindings -> (Names)
patternMatchWarnings_Inh_RecordPatternBindings :: Inh_RecordPatternBindings -> ([Warning])
data Syn_RecordPatternBindings
Syn_RecordPatternBindings :: (Int) -> ([Warning]) -> (RecordPatternBindings) -> (Names) -> Syn_RecordPatternBindings
counter_Syn_RecordPatternBindings :: Syn_RecordPatternBindings -> (Int)
patternMatchWarnings_Syn_RecordPatternBindings :: Syn_RecordPatternBindings -> ([Warning])
self_Syn_RecordPatternBindings :: Syn_RecordPatternBindings -> (RecordPatternBindings)
unboundNames_Syn_RecordPatternBindings :: Syn_RecordPatternBindings -> (Names)
wrap_RecordPatternBindings :: T_RecordPatternBindings -> Inh_RecordPatternBindings -> (Syn_RecordPatternBindings)
sem_RecordPatternBindings :: RecordPatternBindings -> T_RecordPatternBindings
newtype T_RecordPatternBindings
T_RecordPatternBindings :: Identity (T_RecordPatternBindings_s146) -> T_RecordPatternBindings
attach_T_RecordPatternBindings :: T_RecordPatternBindings -> Identity (T_RecordPatternBindings_s146)
newtype T_RecordPatternBindings_s146
C_RecordPatternBindings_s146 :: (T_RecordPatternBindings_v145) -> T_RecordPatternBindings_s146
inv_RecordPatternBindings_s146 :: T_RecordPatternBindings_s146 -> (T_RecordPatternBindings_v145)
data T_RecordPatternBindings_s147
C_RecordPatternBindings_s147 :: T_RecordPatternBindings_s147
type T_RecordPatternBindings_v145 = (T_RecordPatternBindings_vIn145) -> (T_RecordPatternBindings_vOut145)
data T_RecordPatternBindings_vIn145
T_RecordPatternBindings_vIn145 :: (Int) -> (Names) -> ([Warning]) -> T_RecordPatternBindings_vIn145
data T_RecordPatternBindings_vOut145
T_RecordPatternBindings_vOut145 :: (Int) -> ([Warning]) -> (RecordPatternBindings) -> (Names) -> T_RecordPatternBindings_vOut145
sem_RecordPatternBindings_Cons :: T_RecordPatternBinding -> T_RecordPatternBindings -> T_RecordPatternBindings
sem_RecordPatternBindings_Nil :: T_RecordPatternBindings
data Inh_RightHandSide
Inh_RightHandSide :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Predicates) -> (Tp) -> (Int) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (IO ()) -> (Monos) -> (Names) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> (Map Int (Scheme Predicates)) -> (Int) -> Inh_RightHandSide
allPatterns_Inh_RightHandSide :: Inh_RightHandSide -> ([((Expression, [String]), Core_TypingStrategy)])
allTypeSchemes_Inh_RightHandSide :: Inh_RightHandSide -> (Map NameWithRange TpScheme)
availablePredicates_Inh_RightHandSide :: Inh_RightHandSide -> (Predicates)
betaRight_Inh_RightHandSide :: Inh_RightHandSide -> (Tp)
betaUnique_Inh_RightHandSide :: Inh_RightHandSide -> (Int)
classEnvironment_Inh_RightHandSide :: Inh_RightHandSide -> (ClassEnvironment)
collectErrors_Inh_RightHandSide :: Inh_RightHandSide -> (TypeErrors)
collectWarnings_Inh_RightHandSide :: Inh_RightHandSide -> (Warnings)
counter_Inh_RightHandSide :: Inh_RightHandSide -> (Int)
currentChunk_Inh_RightHandSide :: Inh_RightHandSide -> (Int)
dictionaryEnvironment_Inh_RightHandSide :: Inh_RightHandSide -> (DictionaryEnvironment)
importEnvironment_Inh_RightHandSide :: Inh_RightHandSide -> (ImportEnvironment)
matchIO_Inh_RightHandSide :: Inh_RightHandSide -> (IO ())
monos_Inh_RightHandSide :: Inh_RightHandSide -> (Monos)
namesInScope_Inh_RightHandSide :: Inh_RightHandSide -> (Names)
orderedTypeSynonyms_Inh_RightHandSide :: Inh_RightHandSide -> (OrderedTypeSynonyms)
parentTree_Inh_RightHandSide :: Inh_RightHandSide -> (InfoTree)
patternMatchWarnings_Inh_RightHandSide :: Inh_RightHandSide -> ([Warning])
substitution_Inh_RightHandSide :: Inh_RightHandSide -> (FixpointSubstitution)
typeschemeMap_Inh_RightHandSide :: Inh_RightHandSide -> (Map Int (Scheme Predicates))
uniqueChunk_Inh_RightHandSide :: Inh_RightHandSide -> (Int)
data Syn_RightHandSide
Syn_RightHandSide :: (Assumptions) -> (Int) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (ConstraintSet) -> (Int) -> (DictionaryEnvironment) -> (Bool) -> (InfoTree) -> (IO ()) -> ([Warning]) -> (RightHandSide) -> (Names) -> (Int) -> Syn_RightHandSide
assumptions_Syn_RightHandSide :: Syn_RightHandSide -> (Assumptions)
betaUnique_Syn_RightHandSide :: Syn_RightHandSide -> (Int)
collectErrors_Syn_RightHandSide :: Syn_RightHandSide -> (TypeErrors)
collectInstances_Syn_RightHandSide :: Syn_RightHandSide -> ([(Name, Instance)])
collectWarnings_Syn_RightHandSide :: Syn_RightHandSide -> (Warnings)
constraints_Syn_RightHandSide :: Syn_RightHandSide -> (ConstraintSet)
counter_Syn_RightHandSide :: Syn_RightHandSide -> (Int)
dictionaryEnvironment_Syn_RightHandSide :: Syn_RightHandSide -> (DictionaryEnvironment)
fallthrough_Syn_RightHandSide :: Syn_RightHandSide -> (Bool)
infoTree_Syn_RightHandSide :: Syn_RightHandSide -> (InfoTree)
matchIO_Syn_RightHandSide :: Syn_RightHandSide -> (IO ())
patternMatchWarnings_Syn_RightHandSide :: Syn_RightHandSide -> ([Warning])
self_Syn_RightHandSide :: Syn_RightHandSide -> (RightHandSide)
unboundNames_Syn_RightHandSide :: Syn_RightHandSide -> (Names)
uniqueChunk_Syn_RightHandSide :: Syn_RightHandSide -> (Int)
wrap_RightHandSide :: T_RightHandSide -> Inh_RightHandSide -> (Syn_RightHandSide)
sem_RightHandSide :: RightHandSide -> T_RightHandSide
newtype T_RightHandSide
T_RightHandSide :: Identity (T_RightHandSide_s149) -> T_RightHandSide
attach_T_RightHandSide :: T_RightHandSide -> Identity (T_RightHandSide_s149)
newtype T_RightHandSide_s149
C_RightHandSide_s149 :: (T_RightHandSide_v148) -> T_RightHandSide_s149
inv_RightHandSide_s149 :: T_RightHandSide_s149 -> (T_RightHandSide_v148)
data T_RightHandSide_s150
C_RightHandSide_s150 :: T_RightHandSide_s150
type T_RightHandSide_v148 = (T_RightHandSide_vIn148) -> (T_RightHandSide_vOut148)
data T_RightHandSide_vIn148
T_RightHandSide_vIn148 :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Predicates) -> (Tp) -> (Int) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (IO ()) -> (Monos) -> (Names) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> (Map Int (Scheme Predicates)) -> (Int) -> T_RightHandSide_vIn148
data T_RightHandSide_vOut148
T_RightHandSide_vOut148 :: (Assumptions) -> (Int) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (ConstraintSet) -> (Int) -> (DictionaryEnvironment) -> (Bool) -> (InfoTree) -> (IO ()) -> ([Warning]) -> (RightHandSide) -> (Names) -> (Int) -> T_RightHandSide_vOut148
sem_RightHandSide_Expression :: T_Range -> T_Expression -> T_MaybeDeclarations -> T_RightHandSide
sem_RightHandSide_Guarded :: T_Range -> T_GuardedExpressions -> T_MaybeDeclarations -> T_RightHandSide
data Inh_SimpleType
Inh_SimpleType :: Inh_SimpleType
data Syn_SimpleType
Syn_SimpleType :: (Name) -> (SimpleType) -> (Names) -> Syn_SimpleType
name_Syn_SimpleType :: Syn_SimpleType -> (Name)
self_Syn_SimpleType :: Syn_SimpleType -> (SimpleType)
typevariables_Syn_SimpleType :: Syn_SimpleType -> (Names)
wrap_SimpleType :: T_SimpleType -> Inh_SimpleType -> (Syn_SimpleType)
sem_SimpleType :: SimpleType -> T_SimpleType
newtype T_SimpleType
T_SimpleType :: Identity (T_SimpleType_s152) -> T_SimpleType
attach_T_SimpleType :: T_SimpleType -> Identity (T_SimpleType_s152)
newtype T_SimpleType_s152
C_SimpleType_s152 :: (T_SimpleType_v151) -> T_SimpleType_s152
inv_SimpleType_s152 :: T_SimpleType_s152 -> (T_SimpleType_v151)
data T_SimpleType_s153
C_SimpleType_s153 :: T_SimpleType_s153
type T_SimpleType_v151 = (T_SimpleType_vIn151) -> (T_SimpleType_vOut151)
data T_SimpleType_vIn151
T_SimpleType_vIn151 :: T_SimpleType_vIn151
data T_SimpleType_vOut151
T_SimpleType_vOut151 :: (Name) -> (SimpleType) -> (Names) -> T_SimpleType_vOut151
sem_SimpleType_SimpleType :: T_Range -> T_Name -> T_Names -> T_SimpleType
data Inh_Statement
Inh_Statement :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Assumptions) -> (Predicates) -> (Int) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (ConstraintSet) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (Maybe Tp) -> (ImportEnvironment) -> (IO ()) -> (Monos) -> (Names) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> (Map Int (Scheme Predicates)) -> (Names) -> (Int) -> (Int) -> Inh_Statement
allPatterns_Inh_Statement :: Inh_Statement -> ([((Expression, [String]), Core_TypingStrategy)])
allTypeSchemes_Inh_Statement :: Inh_Statement -> (Map NameWithRange TpScheme)
assumptions_Inh_Statement :: Inh_Statement -> (Assumptions)
availablePredicates_Inh_Statement :: Inh_Statement -> (Predicates)
betaUnique_Inh_Statement :: Inh_Statement -> (Int)
classEnvironment_Inh_Statement :: Inh_Statement -> (ClassEnvironment)
collectErrors_Inh_Statement :: Inh_Statement -> (TypeErrors)
collectWarnings_Inh_Statement :: Inh_Statement -> (Warnings)
constraints_Inh_Statement :: Inh_Statement -> (ConstraintSet)
counter_Inh_Statement :: Inh_Statement -> (Int)
currentChunk_Inh_Statement :: Inh_Statement -> (Int)
dictionaryEnvironment_Inh_Statement :: Inh_Statement -> (DictionaryEnvironment)
generatorBeta_Inh_Statement :: Inh_Statement -> (Maybe Tp)
importEnvironment_Inh_Statement :: Inh_Statement -> (ImportEnvironment)
matchIO_Inh_Statement :: Inh_Statement -> (IO ())
monos_Inh_Statement :: Inh_Statement -> (Monos)
namesInScope_Inh_Statement :: Inh_Statement -> (Names)
orderedTypeSynonyms_Inh_Statement :: Inh_Statement -> (OrderedTypeSynonyms)
parentTree_Inh_Statement :: Inh_Statement -> (InfoTree)
patternMatchWarnings_Inh_Statement :: Inh_Statement -> ([Warning])
substitution_Inh_Statement :: Inh_Statement -> (FixpointSubstitution)
typeschemeMap_Inh_Statement :: Inh_Statement -> (Map Int (Scheme Predicates))
unboundNames_Inh_Statement :: Inh_Statement -> (Names)
uniqueChunk_Inh_Statement :: Inh_Statement -> (Int)
uniqueSecondRound_Inh_Statement :: Inh_Statement -> (Int)
data Syn_Statement
Syn_Statement :: (Assumptions) -> (Int) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (ConstraintSet) -> (Int) -> (DictionaryEnvironment) -> (Maybe Tp) -> (InfoTree) -> (IO ()) -> (Monos) -> (Names) -> ([Warning]) -> (Statement) -> (Names) -> (Int) -> (Int) -> Syn_Statement
assumptions_Syn_Statement :: Syn_Statement -> (Assumptions)
betaUnique_Syn_Statement :: Syn_Statement -> (Int)
collectErrors_Syn_Statement :: Syn_Statement -> (TypeErrors)
collectInstances_Syn_Statement :: Syn_Statement -> ([(Name, Instance)])
collectWarnings_Syn_Statement :: Syn_Statement -> (Warnings)
constraints_Syn_Statement :: Syn_Statement -> (ConstraintSet)
counter_Syn_Statement :: Syn_Statement -> (Int)
dictionaryEnvironment_Syn_Statement :: Syn_Statement -> (DictionaryEnvironment)
generatorBeta_Syn_Statement :: Syn_Statement -> (Maybe Tp)
infoTree_Syn_Statement :: Syn_Statement -> (InfoTree)
matchIO_Syn_Statement :: Syn_Statement -> (IO ())
monos_Syn_Statement :: Syn_Statement -> (Monos)
namesInScope_Syn_Statement :: Syn_Statement -> (Names)
patternMatchWarnings_Syn_Statement :: Syn_Statement -> ([Warning])
self_Syn_Statement :: Syn_Statement -> (Statement)
unboundNames_Syn_Statement :: Syn_Statement -> (Names)
uniqueChunk_Syn_Statement :: Syn_Statement -> (Int)
uniqueSecondRound_Syn_Statement :: Syn_Statement -> (Int)
wrap_Statement :: T_Statement -> Inh_Statement -> (Syn_Statement)
sem_Statement :: Statement -> T_Statement
newtype T_Statement
T_Statement :: Identity (T_Statement_s155) -> T_Statement
attach_T_Statement :: T_Statement -> Identity (T_Statement_s155)
newtype T_Statement_s155
C_Statement_s155 :: (T_Statement_v154) -> T_Statement_s155
inv_Statement_s155 :: T_Statement_s155 -> (T_Statement_v154)
data T_Statement_s156
C_Statement_s156 :: T_Statement_s156
type T_Statement_v154 = (T_Statement_vIn154) -> (T_Statement_vOut154)
data T_Statement_vIn154
T_Statement_vIn154 :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Assumptions) -> (Predicates) -> (Int) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (ConstraintSet) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (Maybe Tp) -> (ImportEnvironment) -> (IO ()) -> (Monos) -> (Names) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> (Map Int (Scheme Predicates)) -> (Names) -> (Int) -> (Int) -> T_Statement_vIn154
data T_Statement_vOut154
T_Statement_vOut154 :: (Assumptions) -> (Int) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (ConstraintSet) -> (Int) -> (DictionaryEnvironment) -> (Maybe Tp) -> (InfoTree) -> (IO ()) -> (Monos) -> (Names) -> ([Warning]) -> (Statement) -> (Names) -> (Int) -> (Int) -> T_Statement_vOut154
sem_Statement_Expression :: T_Range -> T_Expression -> T_Statement
sem_Statement_Let :: T_Range -> T_Declarations -> T_Statement
sem_Statement_Generator :: T_Range -> T_Pattern -> T_Expression -> T_Statement
sem_Statement_Empty :: T_Range -> T_Statement
data Inh_Statements
Inh_Statements :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Assumptions) -> (Predicates) -> (Int) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (ConstraintSet) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (Maybe Tp) -> (ImportEnvironment) -> (IO ()) -> (Monos) -> (Names) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> (Map Int (Scheme Predicates)) -> (Names) -> (Int) -> (Int) -> Inh_Statements
allPatterns_Inh_Statements :: Inh_Statements -> ([((Expression, [String]), Core_TypingStrategy)])
allTypeSchemes_Inh_Statements :: Inh_Statements -> (Map NameWithRange TpScheme)
assumptions_Inh_Statements :: Inh_Statements -> (Assumptions)
availablePredicates_Inh_Statements :: Inh_Statements -> (Predicates)
betaUnique_Inh_Statements :: Inh_Statements -> (Int)
classEnvironment_Inh_Statements :: Inh_Statements -> (ClassEnvironment)
collectErrors_Inh_Statements :: Inh_Statements -> (TypeErrors)
collectWarnings_Inh_Statements :: Inh_Statements -> (Warnings)
constraints_Inh_Statements :: Inh_Statements -> (ConstraintSet)
counter_Inh_Statements :: Inh_Statements -> (Int)
currentChunk_Inh_Statements :: Inh_Statements -> (Int)
dictionaryEnvironment_Inh_Statements :: Inh_Statements -> (DictionaryEnvironment)
generatorBeta_Inh_Statements :: Inh_Statements -> (Maybe Tp)
importEnvironment_Inh_Statements :: Inh_Statements -> (ImportEnvironment)
matchIO_Inh_Statements :: Inh_Statements -> (IO ())
monos_Inh_Statements :: Inh_Statements -> (Monos)
namesInScope_Inh_Statements :: Inh_Statements -> (Names)
orderedTypeSynonyms_Inh_Statements :: Inh_Statements -> (OrderedTypeSynonyms)
parentTree_Inh_Statements :: Inh_Statements -> (InfoTree)
patternMatchWarnings_Inh_Statements :: Inh_Statements -> ([Warning])
substitution_Inh_Statements :: Inh_Statements -> (FixpointSubstitution)
typeschemeMap_Inh_Statements :: Inh_Statements -> (Map Int (Scheme Predicates))
unboundNames_Inh_Statements :: Inh_Statements -> (Names)
uniqueChunk_Inh_Statements :: Inh_Statements -> (Int)
uniqueSecondRound_Inh_Statements :: Inh_Statements -> (Int)
data Syn_Statements
Syn_Statements :: (Assumptions) -> (Int) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (ConstraintSet) -> (Int) -> (DictionaryEnvironment) -> (Maybe Tp) -> (InfoTrees) -> (IO ()) -> (Names) -> ([Warning]) -> (Statements) -> (Names) -> (Int) -> (Int) -> Syn_Statements
assumptions_Syn_Statements :: Syn_Statements -> (Assumptions)
betaUnique_Syn_Statements :: Syn_Statements -> (Int)
collectErrors_Syn_Statements :: Syn_Statements -> (TypeErrors)
collectInstances_Syn_Statements :: Syn_Statements -> ([(Name, Instance)])
collectWarnings_Syn_Statements :: Syn_Statements -> (Warnings)
constraints_Syn_Statements :: Syn_Statements -> (ConstraintSet)
counter_Syn_Statements :: Syn_Statements -> (Int)
dictionaryEnvironment_Syn_Statements :: Syn_Statements -> (DictionaryEnvironment)
generatorBeta_Syn_Statements :: Syn_Statements -> (Maybe Tp)
infoTrees_Syn_Statements :: Syn_Statements -> (InfoTrees)
matchIO_Syn_Statements :: Syn_Statements -> (IO ())
namesInScope_Syn_Statements :: Syn_Statements -> (Names)
patternMatchWarnings_Syn_Statements :: Syn_Statements -> ([Warning])
self_Syn_Statements :: Syn_Statements -> (Statements)
unboundNames_Syn_Statements :: Syn_Statements -> (Names)
uniqueChunk_Syn_Statements :: Syn_Statements -> (Int)
uniqueSecondRound_Syn_Statements :: Syn_Statements -> (Int)
wrap_Statements :: T_Statements -> Inh_Statements -> (Syn_Statements)
sem_Statements :: Statements -> T_Statements
newtype T_Statements
T_Statements :: Identity (T_Statements_s158) -> T_Statements
attach_T_Statements :: T_Statements -> Identity (T_Statements_s158)
newtype T_Statements_s158
C_Statements_s158 :: (T_Statements_v157) -> T_Statements_s158
inv_Statements_s158 :: T_Statements_s158 -> (T_Statements_v157)
data T_Statements_s159
C_Statements_s159 :: T_Statements_s159
type T_Statements_v157 = (T_Statements_vIn157) -> (T_Statements_vOut157)
data T_Statements_vIn157
T_Statements_vIn157 :: ([((Expression, [String]), Core_TypingStrategy)]) -> (Map NameWithRange TpScheme) -> (Assumptions) -> (Predicates) -> (Int) -> (ClassEnvironment) -> (TypeErrors) -> (Warnings) -> (ConstraintSet) -> (Int) -> (Int) -> (DictionaryEnvironment) -> (Maybe Tp) -> (ImportEnvironment) -> (IO ()) -> (Monos) -> (Names) -> (OrderedTypeSynonyms) -> (InfoTree) -> ([Warning]) -> (FixpointSubstitution) -> (Map Int (Scheme Predicates)) -> (Names) -> (Int) -> (Int) -> T_Statements_vIn157
data T_Statements_vOut157
T_Statements_vOut157 :: (Assumptions) -> (Int) -> (TypeErrors) -> ([(Name, Instance)]) -> (Warnings) -> (ConstraintSet) -> (Int) -> (DictionaryEnvironment) -> (Maybe Tp) -> (InfoTrees) -> (IO ()) -> (Names) -> ([Warning]) -> (Statements) -> (Names) -> (Int) -> (Int) -> T_Statements_vOut157
sem_Statements_Cons :: T_Statement -> T_Statements -> T_Statements
sem_Statements_Nil :: T_Statements
data Inh_Strings
Inh_Strings :: Inh_Strings
data Syn_Strings
Syn_Strings :: (Strings) -> Syn_Strings
self_Syn_Strings :: Syn_Strings -> (Strings)
wrap_Strings :: T_Strings -> Inh_Strings -> (Syn_Strings)
sem_Strings :: Strings -> T_Strings
newtype T_Strings
T_Strings :: Identity (T_Strings_s161) -> T_Strings
attach_T_Strings :: T_Strings -> Identity (T_Strings_s161)
newtype T_Strings_s161
C_Strings_s161 :: (T_Strings_v160) -> T_Strings_s161
inv_Strings_s161 :: T_Strings_s161 -> (T_Strings_v160)
data T_Strings_s162
C_Strings_s162 :: T_Strings_s162
type T_Strings_v160 = (T_Strings_vIn160) -> (T_Strings_vOut160)
data T_Strings_vIn160
T_Strings_vIn160 :: T_Strings_vIn160
data T_Strings_vOut160
T_Strings_vOut160 :: (Strings) -> T_Strings_vOut160
sem_Strings_Cons :: (String) -> T_Strings -> T_Strings
sem_Strings_Nil :: T_Strings
data Inh_Type
Inh_Type :: Inh_Type
data Syn_Type
Syn_Type :: (Type) -> Syn_Type
self_Syn_Type :: Syn_Type -> (Type)
wrap_Type :: T_Type -> Inh_Type -> (Syn_Type)
sem_Type :: Type -> T_Type
newtype T_Type
T_Type :: Identity (T_Type_s164) -> T_Type
attach_T_Type :: T_Type -> Identity (T_Type_s164)
newtype T_Type_s164
C_Type_s164 :: (T_Type_v163) -> T_Type_s164
inv_Type_s164 :: T_Type_s164 -> (T_Type_v163)
data T_Type_s165
C_Type_s165 :: T_Type_s165
type T_Type_v163 = (T_Type_vIn163) -> (T_Type_vOut163)
data T_Type_vIn163
T_Type_vIn163 :: T_Type_vIn163
data T_Type_vOut163
T_Type_vOut163 :: (Type) -> T_Type_vOut163
sem_Type_Application :: T_Range -> (Bool) -> T_Type -> T_Types -> T_Type
sem_Type_Variable :: T_Range -> T_Name -> T_Type
sem_Type_Constructor :: T_Range -> T_Name -> T_Type
sem_Type_Qualified :: T_Range -> T_ContextItems -> T_Type -> T_Type
sem_Type_Forall :: T_Range -> T_Names -> T_Type -> T_Type
sem_Type_Exists :: T_Range -> T_Names -> T_Type -> T_Type
sem_Type_Parenthesized :: T_Range -> T_Type -> T_Type
data Inh_Types
Inh_Types :: Inh_Types
data Syn_Types
Syn_Types :: (Types) -> Syn_Types
self_Syn_Types :: Syn_Types -> (Types)
wrap_Types :: T_Types -> Inh_Types -> (Syn_Types)
sem_Types :: Types -> T_Types
newtype T_Types
T_Types :: Identity (T_Types_s167) -> T_Types
attach_T_Types :: T_Types -> Identity (T_Types_s167)
newtype T_Types_s167
C_Types_s167 :: (T_Types_v166) -> T_Types_s167
inv_Types_s167 :: T_Types_s167 -> (T_Types_v166)
data T_Types_s168
C_Types_s168 :: T_Types_s168
type T_Types_v166 = (T_Types_vIn166) -> (T_Types_vOut166)
data T_Types_vIn166
T_Types_vIn166 :: T_Types_vIn166
data T_Types_vOut166
T_Types_vOut166 :: (Types) -> T_Types_vOut166
sem_Types_Cons :: T_Type -> T_Types -> T_Types
sem_Types_Nil :: T_Types
instance Eq PatternElement
instance Show (Match a)


module Helium.Main.PhaseTypeInferencer
phaseTypeInferencer :: String -> String -> Module -> ImportEnvironment -> ImportEnvironment -> [Option] -> Phase TypeError (DictionaryEnvironment, ImportEnvironment, TypeEnvironment, [Warning])


module Helium.StaticAnalysis.Inferencers.ExpressionTypeInferencer
expressionTypeInferencer :: ImportEnvironment -> Expression -> (TpScheme, Assumptions, TypeErrors)

module Helium.StaticAnalysis.Directives.TS_Analyse
analyseTypingStrategies :: TypingStrategies -> ImportEnvironment -> (TS_Errors, TS_Warnings)
analyseTypingStrategy :: TypingStrategy -> ImportEnvironment -> (TS_Errors, TS_Warnings)
findDuplicates :: Ord a => [a] -> [[a]]
data Inh_Alternative
Inh_Alternative :: Inh_Alternative
data Syn_Alternative
Syn_Alternative :: (Alternative) -> Syn_Alternative
self_Syn_Alternative :: Syn_Alternative -> (Alternative)
wrap_Alternative :: T_Alternative -> Inh_Alternative -> (Syn_Alternative)
sem_Alternative :: Alternative -> T_Alternative
newtype T_Alternative
T_Alternative :: Identity (T_Alternative_s2) -> T_Alternative
attach_T_Alternative :: T_Alternative -> Identity (T_Alternative_s2)
newtype T_Alternative_s2
C_Alternative_s2 :: (T_Alternative_v1) -> T_Alternative_s2
inv_Alternative_s2 :: T_Alternative_s2 -> (T_Alternative_v1)
data T_Alternative_s3
C_Alternative_s3 :: T_Alternative_s3
type T_Alternative_v1 = (T_Alternative_vIn1) -> (T_Alternative_vOut1)
data T_Alternative_vIn1
T_Alternative_vIn1 :: T_Alternative_vIn1
data T_Alternative_vOut1
T_Alternative_vOut1 :: (Alternative) -> T_Alternative_vOut1
sem_Alternative_Hole :: T_Range -> (Integer) -> T_Alternative
sem_Alternative_Feedback :: T_Range -> (String) -> T_Alternative -> T_Alternative
sem_Alternative_Alternative :: T_Range -> T_Pattern -> T_RightHandSide -> T_Alternative
sem_Alternative_Empty :: T_Range -> T_Alternative
data Inh_Alternatives
Inh_Alternatives :: Inh_Alternatives
data Syn_Alternatives
Syn_Alternatives :: (Alternatives) -> Syn_Alternatives
self_Syn_Alternatives :: Syn_Alternatives -> (Alternatives)
wrap_Alternatives :: T_Alternatives -> Inh_Alternatives -> (Syn_Alternatives)
sem_Alternatives :: Alternatives -> T_Alternatives
newtype T_Alternatives
T_Alternatives :: Identity (T_Alternatives_s5) -> T_Alternatives
attach_T_Alternatives :: T_Alternatives -> Identity (T_Alternatives_s5)
newtype T_Alternatives_s5
C_Alternatives_s5 :: (T_Alternatives_v4) -> T_Alternatives_s5
inv_Alternatives_s5 :: T_Alternatives_s5 -> (T_Alternatives_v4)
data T_Alternatives_s6
C_Alternatives_s6 :: T_Alternatives_s6
type T_Alternatives_v4 = (T_Alternatives_vIn4) -> (T_Alternatives_vOut4)
data T_Alternatives_vIn4
T_Alternatives_vIn4 :: T_Alternatives_vIn4
data T_Alternatives_vOut4
T_Alternatives_vOut4 :: (Alternatives) -> T_Alternatives_vOut4
sem_Alternatives_Cons :: T_Alternative -> T_Alternatives -> T_Alternatives
sem_Alternatives_Nil :: T_Alternatives
data Inh_AnnotatedType
Inh_AnnotatedType :: Inh_AnnotatedType
data Syn_AnnotatedType
Syn_AnnotatedType :: (AnnotatedType) -> Syn_AnnotatedType
self_Syn_AnnotatedType :: Syn_AnnotatedType -> (AnnotatedType)
wrap_AnnotatedType :: T_AnnotatedType -> Inh_AnnotatedType -> (Syn_AnnotatedType)
sem_AnnotatedType :: AnnotatedType -> T_AnnotatedType
newtype T_AnnotatedType
T_AnnotatedType :: Identity (T_AnnotatedType_s8) -> T_AnnotatedType
attach_T_AnnotatedType :: T_AnnotatedType -> Identity (T_AnnotatedType_s8)
newtype T_AnnotatedType_s8
C_AnnotatedType_s8 :: (T_AnnotatedType_v7) -> T_AnnotatedType_s8
inv_AnnotatedType_s8 :: T_AnnotatedType_s8 -> (T_AnnotatedType_v7)
data T_AnnotatedType_s9
C_AnnotatedType_s9 :: T_AnnotatedType_s9
type T_AnnotatedType_v7 = (T_AnnotatedType_vIn7) -> (T_AnnotatedType_vOut7)
data T_AnnotatedType_vIn7
T_AnnotatedType_vIn7 :: T_AnnotatedType_vIn7
data T_AnnotatedType_vOut7
T_AnnotatedType_vOut7 :: (AnnotatedType) -> T_AnnotatedType_vOut7
sem_AnnotatedType_AnnotatedType :: T_Range -> (Bool) -> T_Type -> T_AnnotatedType
data Inh_AnnotatedTypes
Inh_AnnotatedTypes :: Inh_AnnotatedTypes
data Syn_AnnotatedTypes
Syn_AnnotatedTypes :: (AnnotatedTypes) -> Syn_AnnotatedTypes
self_Syn_AnnotatedTypes :: Syn_AnnotatedTypes -> (AnnotatedTypes)
wrap_AnnotatedTypes :: T_AnnotatedTypes -> Inh_AnnotatedTypes -> (Syn_AnnotatedTypes)
sem_AnnotatedTypes :: AnnotatedTypes -> T_AnnotatedTypes
newtype T_AnnotatedTypes
T_AnnotatedTypes :: Identity (T_AnnotatedTypes_s11) -> T_AnnotatedTypes
attach_T_AnnotatedTypes :: T_AnnotatedTypes -> Identity (T_AnnotatedTypes_s11)
newtype T_AnnotatedTypes_s11
C_AnnotatedTypes_s11 :: (T_AnnotatedTypes_v10) -> T_AnnotatedTypes_s11
inv_AnnotatedTypes_s11 :: T_AnnotatedTypes_s11 -> (T_AnnotatedTypes_v10)
data T_AnnotatedTypes_s12
C_AnnotatedTypes_s12 :: T_AnnotatedTypes_s12
type T_AnnotatedTypes_v10 = (T_AnnotatedTypes_vIn10) -> (T_AnnotatedTypes_vOut10)
data T_AnnotatedTypes_vIn10
T_AnnotatedTypes_vIn10 :: T_AnnotatedTypes_vIn10
data T_AnnotatedTypes_vOut10
T_AnnotatedTypes_vOut10 :: (AnnotatedTypes) -> T_AnnotatedTypes_vOut10
sem_AnnotatedTypes_Cons :: T_AnnotatedType -> T_AnnotatedTypes -> T_AnnotatedTypes
sem_AnnotatedTypes_Nil :: T_AnnotatedTypes
data Inh_Body
Inh_Body :: Inh_Body
data Syn_Body
Syn_Body :: (Body) -> Syn_Body
self_Syn_Body :: Syn_Body -> (Body)
wrap_Body :: T_Body -> Inh_Body -> (Syn_Body)
sem_Body :: Body -> T_Body
newtype T_Body
T_Body :: Identity (T_Body_s14) -> T_Body
attach_T_Body :: T_Body -> Identity (T_Body_s14)
newtype T_Body_s14
C_Body_s14 :: (T_Body_v13) -> T_Body_s14
inv_Body_s14 :: T_Body_s14 -> (T_Body_v13)
data T_Body_s15
C_Body_s15 :: T_Body_s15
type T_Body_v13 = (T_Body_vIn13) -> (T_Body_vOut13)
data T_Body_vIn13
T_Body_vIn13 :: T_Body_vIn13
data T_Body_vOut13
T_Body_vOut13 :: (Body) -> T_Body_vOut13
sem_Body_Hole :: T_Range -> (Integer) -> T_Body
sem_Body_Body :: T_Range -> T_ImportDeclarations -> T_Declarations -> T_Body
data Inh_Constructor
Inh_Constructor :: Inh_Constructor
data Syn_Constructor
Syn_Constructor :: (Constructor) -> Syn_Constructor
self_Syn_Constructor :: Syn_Constructor -> (Constructor)
wrap_Constructor :: T_Constructor -> Inh_Constructor -> (Syn_Constructor)
sem_Constructor :: Constructor -> T_Constructor
newtype T_Constructor
T_Constructor :: Identity (T_Constructor_s17) -> T_Constructor
attach_T_Constructor :: T_Constructor -> Identity (T_Constructor_s17)
newtype T_Constructor_s17
C_Constructor_s17 :: (T_Constructor_v16) -> T_Constructor_s17
inv_Constructor_s17 :: T_Constructor_s17 -> (T_Constructor_v16)
data T_Constructor_s18
C_Constructor_s18 :: T_Constructor_s18
type T_Constructor_v16 = (T_Constructor_vIn16) -> (T_Constructor_vOut16)
data T_Constructor_vIn16
T_Constructor_vIn16 :: T_Constructor_vIn16
data T_Constructor_vOut16
T_Constructor_vOut16 :: (Constructor) -> T_Constructor_vOut16
sem_Constructor_Constructor :: T_Range -> T_Name -> T_AnnotatedTypes -> T_Constructor
sem_Constructor_Infix :: T_Range -> T_AnnotatedType -> T_Name -> T_AnnotatedType -> T_Constructor
sem_Constructor_Record :: T_Range -> T_Name -> T_FieldDeclarations -> T_Constructor
data Inh_Constructors
Inh_Constructors :: Inh_Constructors
data Syn_Constructors
Syn_Constructors :: (Constructors) -> Syn_Constructors
self_Syn_Constructors :: Syn_Constructors -> (Constructors)
wrap_Constructors :: T_Constructors -> Inh_Constructors -> (Syn_Constructors)
sem_Constructors :: Constructors -> T_Constructors
newtype T_Constructors
T_Constructors :: Identity (T_Constructors_s20) -> T_Constructors
attach_T_Constructors :: T_Constructors -> Identity (T_Constructors_s20)
newtype T_Constructors_s20
C_Constructors_s20 :: (T_Constructors_v19) -> T_Constructors_s20
inv_Constructors_s20 :: T_Constructors_s20 -> (T_Constructors_v19)
data T_Constructors_s21
C_Constructors_s21 :: T_Constructors_s21
type T_Constructors_v19 = (T_Constructors_vIn19) -> (T_Constructors_vOut19)
data T_Constructors_vIn19
T_Constructors_vIn19 :: T_Constructors_vIn19
data T_Constructors_vOut19
T_Constructors_vOut19 :: (Constructors) -> T_Constructors_vOut19
sem_Constructors_Cons :: T_Constructor -> T_Constructors -> T_Constructors
sem_Constructors_Nil :: T_Constructors
data Inh_ContextItem
Inh_ContextItem :: Inh_ContextItem
data Syn_ContextItem
Syn_ContextItem :: (ContextItem) -> Syn_ContextItem
self_Syn_ContextItem :: Syn_ContextItem -> (ContextItem)
wrap_ContextItem :: T_ContextItem -> Inh_ContextItem -> (Syn_ContextItem)
sem_ContextItem :: ContextItem -> T_ContextItem
newtype T_ContextItem
T_ContextItem :: Identity (T_ContextItem_s23) -> T_ContextItem
attach_T_ContextItem :: T_ContextItem -> Identity (T_ContextItem_s23)
newtype T_ContextItem_s23
C_ContextItem_s23 :: (T_ContextItem_v22) -> T_ContextItem_s23
inv_ContextItem_s23 :: T_ContextItem_s23 -> (T_ContextItem_v22)
data T_ContextItem_s24
C_ContextItem_s24 :: T_ContextItem_s24
type T_ContextItem_v22 = (T_ContextItem_vIn22) -> (T_ContextItem_vOut22)
data T_ContextItem_vIn22
T_ContextItem_vIn22 :: T_ContextItem_vIn22
data T_ContextItem_vOut22
T_ContextItem_vOut22 :: (ContextItem) -> T_ContextItem_vOut22
sem_ContextItem_ContextItem :: T_Range -> T_Name -> T_Types -> T_ContextItem
data Inh_ContextItems
Inh_ContextItems :: Inh_ContextItems
data Syn_ContextItems
Syn_ContextItems :: (ContextItems) -> Syn_ContextItems
self_Syn_ContextItems :: Syn_ContextItems -> (ContextItems)
wrap_ContextItems :: T_ContextItems -> Inh_ContextItems -> (Syn_ContextItems)
sem_ContextItems :: ContextItems -> T_ContextItems
newtype T_ContextItems
T_ContextItems :: Identity (T_ContextItems_s26) -> T_ContextItems
attach_T_ContextItems :: T_ContextItems -> Identity (T_ContextItems_s26)
newtype T_ContextItems_s26
C_ContextItems_s26 :: (T_ContextItems_v25) -> T_ContextItems_s26
inv_ContextItems_s26 :: T_ContextItems_s26 -> (T_ContextItems_v25)
data T_ContextItems_s27
C_ContextItems_s27 :: T_ContextItems_s27
type T_ContextItems_v25 = (T_ContextItems_vIn25) -> (T_ContextItems_vOut25)
data T_ContextItems_vIn25
T_ContextItems_vIn25 :: T_ContextItems_vIn25
data T_ContextItems_vOut25
T_ContextItems_vOut25 :: (ContextItems) -> T_ContextItems_vOut25
sem_ContextItems_Cons :: T_ContextItem -> T_ContextItems -> T_ContextItems
sem_ContextItems_Nil :: T_ContextItems
data Inh_Declaration
Inh_Declaration :: Inh_Declaration
data Syn_Declaration
Syn_Declaration :: (Declaration) -> Syn_Declaration
self_Syn_Declaration :: Syn_Declaration -> (Declaration)
wrap_Declaration :: T_Declaration -> Inh_Declaration -> (Syn_Declaration)
sem_Declaration :: Declaration -> T_Declaration
newtype T_Declaration
T_Declaration :: Identity (T_Declaration_s29) -> T_Declaration
attach_T_Declaration :: T_Declaration -> Identity (T_Declaration_s29)
newtype T_Declaration_s29
C_Declaration_s29 :: (T_Declaration_v28) -> T_Declaration_s29
inv_Declaration_s29 :: T_Declaration_s29 -> (T_Declaration_v28)
data T_Declaration_s30
C_Declaration_s30 :: T_Declaration_s30
type T_Declaration_v28 = (T_Declaration_vIn28) -> (T_Declaration_vOut28)
data T_Declaration_vIn28
T_Declaration_vIn28 :: T_Declaration_vIn28
data T_Declaration_vOut28
T_Declaration_vOut28 :: (Declaration) -> T_Declaration_vOut28
sem_Declaration_Hole :: T_Range -> (Integer) -> T_Declaration
sem_Declaration_Type :: T_Range -> T_SimpleType -> T_Type -> T_Declaration
sem_Declaration_Data :: T_Range -> T_ContextItems -> T_SimpleType -> T_Constructors -> T_Names -> T_Declaration
sem_Declaration_Newtype :: T_Range -> T_ContextItems -> T_SimpleType -> T_Constructor -> T_Names -> T_Declaration
sem_Declaration_Class :: T_Range -> T_ContextItems -> T_SimpleType -> T_MaybeDeclarations -> T_Declaration
sem_Declaration_Instance :: T_Range -> T_ContextItems -> T_Name -> T_Types -> T_MaybeDeclarations -> T_Declaration
sem_Declaration_Default :: T_Range -> T_Types -> T_Declaration
sem_Declaration_FunctionBindings :: T_Range -> T_FunctionBindings -> T_Declaration
sem_Declaration_PatternBinding :: T_Range -> T_Pattern -> T_RightHandSide -> T_Declaration
sem_Declaration_TypeSignature :: T_Range -> T_Names -> T_Type -> T_Declaration
sem_Declaration_Fixity :: T_Range -> T_Fixity -> T_MaybeInt -> T_Names -> T_Declaration
sem_Declaration_Empty :: T_Range -> T_Declaration
data Inh_Declarations
Inh_Declarations :: Inh_Declarations
data Syn_Declarations
Syn_Declarations :: (Declarations) -> Syn_Declarations
self_Syn_Declarations :: Syn_Declarations -> (Declarations)
wrap_Declarations :: T_Declarations -> Inh_Declarations -> (Syn_Declarations)
sem_Declarations :: Declarations -> T_Declarations
newtype T_Declarations
T_Declarations :: Identity (T_Declarations_s32) -> T_Declarations
attach_T_Declarations :: T_Declarations -> Identity (T_Declarations_s32)
newtype T_Declarations_s32
C_Declarations_s32 :: (T_Declarations_v31) -> T_Declarations_s32
inv_Declarations_s32 :: T_Declarations_s32 -> (T_Declarations_v31)
data T_Declarations_s33
C_Declarations_s33 :: T_Declarations_s33
type T_Declarations_v31 = (T_Declarations_vIn31) -> (T_Declarations_vOut31)
data T_Declarations_vIn31
T_Declarations_vIn31 :: T_Declarations_vIn31
data T_Declarations_vOut31
T_Declarations_vOut31 :: (Declarations) -> T_Declarations_vOut31
sem_Declarations_Cons :: T_Declaration -> T_Declarations -> T_Declarations
sem_Declarations_Nil :: T_Declarations
data Inh_Export
Inh_Export :: Inh_Export
data Syn_Export
Syn_Export :: (Export) -> Syn_Export
self_Syn_Export :: Syn_Export -> (Export)
wrap_Export :: T_Export -> Inh_Export -> (Syn_Export)
sem_Export :: Export -> T_Export
newtype T_Export
T_Export :: Identity (T_Export_s35) -> T_Export
attach_T_Export :: T_Export -> Identity (T_Export_s35)
newtype T_Export_s35
C_Export_s35 :: (T_Export_v34) -> T_Export_s35
inv_Export_s35 :: T_Export_s35 -> (T_Export_v34)
data T_Export_s36
C_Export_s36 :: T_Export_s36
type T_Export_v34 = (T_Export_vIn34) -> (T_Export_vOut34)
data T_Export_vIn34
T_Export_vIn34 :: T_Export_vIn34
data T_Export_vOut34
T_Export_vOut34 :: (Export) -> T_Export_vOut34
sem_Export_Variable :: T_Range -> T_Name -> T_Export
sem_Export_TypeOrClass :: T_Range -> T_Name -> T_MaybeNames -> T_Export
sem_Export_TypeOrClassComplete :: T_Range -> T_Name -> T_Export
sem_Export_Module :: T_Range -> T_Name -> T_Export
data Inh_Exports
Inh_Exports :: Inh_Exports
data Syn_Exports
Syn_Exports :: (Exports) -> Syn_Exports
self_Syn_Exports :: Syn_Exports -> (Exports)
wrap_Exports :: T_Exports -> Inh_Exports -> (Syn_Exports)
sem_Exports :: Exports -> T_Exports
newtype T_Exports
T_Exports :: Identity (T_Exports_s38) -> T_Exports
attach_T_Exports :: T_Exports -> Identity (T_Exports_s38)
newtype T_Exports_s38
C_Exports_s38 :: (T_Exports_v37) -> T_Exports_s38
inv_Exports_s38 :: T_Exports_s38 -> (T_Exports_v37)
data T_Exports_s39
C_Exports_s39 :: T_Exports_s39
type T_Exports_v37 = (T_Exports_vIn37) -> (T_Exports_vOut37)
data T_Exports_vIn37
T_Exports_vIn37 :: T_Exports_vIn37
data T_Exports_vOut37
T_Exports_vOut37 :: (Exports) -> T_Exports_vOut37
sem_Exports_Cons :: T_Export -> T_Exports -> T_Exports
sem_Exports_Nil :: T_Exports
data Inh_Expression
Inh_Expression :: Inh_Expression
data Syn_Expression
Syn_Expression :: ([(Name, Entity)]) -> (Expression) -> Syn_Expression
allVariables_Syn_Expression :: Syn_Expression -> ([(Name, Entity)])
self_Syn_Expression :: Syn_Expression -> (Expression)
wrap_Expression :: T_Expression -> Inh_Expression -> (Syn_Expression)
sem_Expression :: Expression -> T_Expression
newtype T_Expression
T_Expression :: Identity (T_Expression_s41) -> T_Expression
attach_T_Expression :: T_Expression -> Identity (T_Expression_s41)
newtype T_Expression_s41
C_Expression_s41 :: (T_Expression_v40) -> T_Expression_s41
inv_Expression_s41 :: T_Expression_s41 -> (T_Expression_v40)
data T_Expression_s42
C_Expression_s42 :: T_Expression_s42
type T_Expression_v40 = (T_Expression_vIn40) -> (T_Expression_vOut40)
data T_Expression_vIn40
T_Expression_vIn40 :: T_Expression_vIn40
data T_Expression_vOut40
T_Expression_vOut40 :: ([(Name, Entity)]) -> (Expression) -> T_Expression_vOut40
sem_Expression_Hole :: T_Range -> (Integer) -> T_Expression
sem_Expression_Feedback :: T_Range -> (String) -> T_Expression -> T_Expression
sem_Expression_MustUse :: T_Range -> T_Expression -> T_Expression
sem_Expression_Literal :: T_Range -> T_Literal -> T_Expression
sem_Expression_Variable :: T_Range -> T_Name -> T_Expression
sem_Expression_Constructor :: T_Range -> T_Name -> T_Expression
sem_Expression_Parenthesized :: T_Range -> T_Expression -> T_Expression
sem_Expression_NormalApplication :: T_Range -> T_Expression -> T_Expressions -> T_Expression
sem_Expression_InfixApplication :: T_Range -> T_MaybeExpression -> T_Expression -> T_MaybeExpression -> T_Expression
sem_Expression_If :: T_Range -> T_Expression -> T_Expression -> T_Expression -> T_Expression
sem_Expression_Lambda :: T_Range -> T_Patterns -> T_Expression -> T_Expression
sem_Expression_Case :: T_Range -> T_Expression -> T_Alternatives -> T_Expression
sem_Expression_Let :: T_Range -> T_Declarations -> T_Expression -> T_Expression
sem_Expression_Do :: T_Range -> T_Statements -> T_Expression
sem_Expression_List :: T_Range -> T_Expressions -> T_Expression
sem_Expression_Tuple :: T_Range -> T_Expressions -> T_Expression
sem_Expression_Comprehension :: T_Range -> T_Expression -> T_Qualifiers -> T_Expression
sem_Expression_Typed :: T_Range -> T_Expression -> T_Type -> T_Expression
sem_Expression_RecordConstruction :: T_Range -> T_Name -> T_RecordExpressionBindings -> T_Expression
sem_Expression_RecordUpdate :: T_Range -> T_Expression -> T_RecordExpressionBindings -> T_Expression
sem_Expression_Enum :: T_Range -> T_Expression -> T_MaybeExpression -> T_MaybeExpression -> T_Expression
sem_Expression_Negate :: T_Range -> T_Expression -> T_Expression
sem_Expression_NegateFloat :: T_Range -> T_Expression -> T_Expression
data Inh_Expressions
Inh_Expressions :: Inh_Expressions
data Syn_Expressions
Syn_Expressions :: ([(Name, Entity)]) -> (Expressions) -> Syn_Expressions
allVariables_Syn_Expressions :: Syn_Expressions -> ([(Name, Entity)])
self_Syn_Expressions :: Syn_Expressions -> (Expressions)
wrap_Expressions :: T_Expressions -> Inh_Expressions -> (Syn_Expressions)
sem_Expressions :: Expressions -> T_Expressions
newtype T_Expressions
T_Expressions :: Identity (T_Expressions_s44) -> T_Expressions
attach_T_Expressions :: T_Expressions -> Identity (T_Expressions_s44)
newtype T_Expressions_s44
C_Expressions_s44 :: (T_Expressions_v43) -> T_Expressions_s44
inv_Expressions_s44 :: T_Expressions_s44 -> (T_Expressions_v43)
data T_Expressions_s45
C_Expressions_s45 :: T_Expressions_s45
type T_Expressions_v43 = (T_Expressions_vIn43) -> (T_Expressions_vOut43)
data T_Expressions_vIn43
T_Expressions_vIn43 :: T_Expressions_vIn43
data T_Expressions_vOut43
T_Expressions_vOut43 :: ([(Name, Entity)]) -> (Expressions) -> T_Expressions_vOut43
sem_Expressions_Cons :: T_Expression -> T_Expressions -> T_Expressions
sem_Expressions_Nil :: T_Expressions
data Inh_FieldDeclaration
Inh_FieldDeclaration :: Inh_FieldDeclaration
data Syn_FieldDeclaration
Syn_FieldDeclaration :: (FieldDeclaration) -> Syn_FieldDeclaration
self_Syn_FieldDeclaration :: Syn_FieldDeclaration -> (FieldDeclaration)
wrap_FieldDeclaration :: T_FieldDeclaration -> Inh_FieldDeclaration -> (Syn_FieldDeclaration)
sem_FieldDeclaration :: FieldDeclaration -> T_FieldDeclaration
newtype T_FieldDeclaration
T_FieldDeclaration :: Identity (T_FieldDeclaration_s47) -> T_FieldDeclaration
attach_T_FieldDeclaration :: T_FieldDeclaration -> Identity (T_FieldDeclaration_s47)
newtype T_FieldDeclaration_s47
C_FieldDeclaration_s47 :: (T_FieldDeclaration_v46) -> T_FieldDeclaration_s47
inv_FieldDeclaration_s47 :: T_FieldDeclaration_s47 -> (T_FieldDeclaration_v46)
data T_FieldDeclaration_s48
C_FieldDeclaration_s48 :: T_FieldDeclaration_s48
type T_FieldDeclaration_v46 = (T_FieldDeclaration_vIn46) -> (T_FieldDeclaration_vOut46)
data T_FieldDeclaration_vIn46
T_FieldDeclaration_vIn46 :: T_FieldDeclaration_vIn46
data T_FieldDeclaration_vOut46
T_FieldDeclaration_vOut46 :: (FieldDeclaration) -> T_FieldDeclaration_vOut46
sem_FieldDeclaration_FieldDeclaration :: T_Range -> T_Names -> T_AnnotatedType -> T_FieldDeclaration
data Inh_FieldDeclarations
Inh_FieldDeclarations :: Inh_FieldDeclarations
data Syn_FieldDeclarations
Syn_FieldDeclarations :: (FieldDeclarations) -> Syn_FieldDeclarations
self_Syn_FieldDeclarations :: Syn_FieldDeclarations -> (FieldDeclarations)
wrap_FieldDeclarations :: T_FieldDeclarations -> Inh_FieldDeclarations -> (Syn_FieldDeclarations)
sem_FieldDeclarations :: FieldDeclarations -> T_FieldDeclarations
newtype T_FieldDeclarations
T_FieldDeclarations :: Identity (T_FieldDeclarations_s50) -> T_FieldDeclarations
attach_T_FieldDeclarations :: T_FieldDeclarations -> Identity (T_FieldDeclarations_s50)
newtype T_FieldDeclarations_s50
C_FieldDeclarations_s50 :: (T_FieldDeclarations_v49) -> T_FieldDeclarations_s50
inv_FieldDeclarations_s50 :: T_FieldDeclarations_s50 -> (T_FieldDeclarations_v49)
data T_FieldDeclarations_s51
C_FieldDeclarations_s51 :: T_FieldDeclarations_s51
type T_FieldDeclarations_v49 = (T_FieldDeclarations_vIn49) -> (T_FieldDeclarations_vOut49)
data T_FieldDeclarations_vIn49
T_FieldDeclarations_vIn49 :: T_FieldDeclarations_vIn49
data T_FieldDeclarations_vOut49
T_FieldDeclarations_vOut49 :: (FieldDeclarations) -> T_FieldDeclarations_vOut49
sem_FieldDeclarations_Cons :: T_FieldDeclaration -> T_FieldDeclarations -> T_FieldDeclarations
sem_FieldDeclarations_Nil :: T_FieldDeclarations
data Inh_Fixity
Inh_Fixity :: Inh_Fixity
data Syn_Fixity
Syn_Fixity :: (Fixity) -> Syn_Fixity
self_Syn_Fixity :: Syn_Fixity -> (Fixity)
wrap_Fixity :: T_Fixity -> Inh_Fixity -> (Syn_Fixity)
sem_Fixity :: Fixity -> T_Fixity
newtype T_Fixity
T_Fixity :: Identity (T_Fixity_s53) -> T_Fixity
attach_T_Fixity :: T_Fixity -> Identity (T_Fixity_s53)
newtype T_Fixity_s53
C_Fixity_s53 :: (T_Fixity_v52) -> T_Fixity_s53
inv_Fixity_s53 :: T_Fixity_s53 -> (T_Fixity_v52)
data T_Fixity_s54
C_Fixity_s54 :: T_Fixity_s54
type T_Fixity_v52 = (T_Fixity_vIn52) -> (T_Fixity_vOut52)
data T_Fixity_vIn52
T_Fixity_vIn52 :: T_Fixity_vIn52
data T_Fixity_vOut52
T_Fixity_vOut52 :: (Fixity) -> T_Fixity_vOut52
sem_Fixity_Infixl :: T_Range -> T_Fixity
sem_Fixity_Infixr :: T_Range -> T_Fixity
sem_Fixity_Infix :: T_Range -> T_Fixity
data Inh_FunctionBinding
Inh_FunctionBinding :: Inh_FunctionBinding
data Syn_FunctionBinding
Syn_FunctionBinding :: (FunctionBinding) -> Syn_FunctionBinding
self_Syn_FunctionBinding :: Syn_FunctionBinding -> (FunctionBinding)
wrap_FunctionBinding :: T_FunctionBinding -> Inh_FunctionBinding -> (Syn_FunctionBinding)
sem_FunctionBinding :: FunctionBinding -> T_FunctionBinding
newtype T_FunctionBinding
T_FunctionBinding :: Identity (T_FunctionBinding_s56) -> T_FunctionBinding
attach_T_FunctionBinding :: T_FunctionBinding -> Identity (T_FunctionBinding_s56)
newtype T_FunctionBinding_s56
C_FunctionBinding_s56 :: (T_FunctionBinding_v55) -> T_FunctionBinding_s56
inv_FunctionBinding_s56 :: T_FunctionBinding_s56 -> (T_FunctionBinding_v55)
data T_FunctionBinding_s57
C_FunctionBinding_s57 :: T_FunctionBinding_s57
type T_FunctionBinding_v55 = (T_FunctionBinding_vIn55) -> (T_FunctionBinding_vOut55)
data T_FunctionBinding_vIn55
T_FunctionBinding_vIn55 :: T_FunctionBinding_vIn55
data T_FunctionBinding_vOut55
T_FunctionBinding_vOut55 :: (FunctionBinding) -> T_FunctionBinding_vOut55
sem_FunctionBinding_Hole :: T_Range -> (Integer) -> T_FunctionBinding
sem_FunctionBinding_Feedback :: T_Range -> (String) -> T_FunctionBinding -> T_FunctionBinding
sem_FunctionBinding_FunctionBinding :: T_Range -> T_LeftHandSide -> T_RightHandSide -> T_FunctionBinding
data Inh_FunctionBindings
Inh_FunctionBindings :: Inh_FunctionBindings
data Syn_FunctionBindings
Syn_FunctionBindings :: (FunctionBindings) -> Syn_FunctionBindings
self_Syn_FunctionBindings :: Syn_FunctionBindings -> (FunctionBindings)
wrap_FunctionBindings :: T_FunctionBindings -> Inh_FunctionBindings -> (Syn_FunctionBindings)
sem_FunctionBindings :: FunctionBindings -> T_FunctionBindings
newtype T_FunctionBindings
T_FunctionBindings :: Identity (T_FunctionBindings_s59) -> T_FunctionBindings
attach_T_FunctionBindings :: T_FunctionBindings -> Identity (T_FunctionBindings_s59)
newtype T_FunctionBindings_s59
C_FunctionBindings_s59 :: (T_FunctionBindings_v58) -> T_FunctionBindings_s59
inv_FunctionBindings_s59 :: T_FunctionBindings_s59 -> (T_FunctionBindings_v58)
data T_FunctionBindings_s60
C_FunctionBindings_s60 :: T_FunctionBindings_s60
type T_FunctionBindings_v58 = (T_FunctionBindings_vIn58) -> (T_FunctionBindings_vOut58)
data T_FunctionBindings_vIn58
T_FunctionBindings_vIn58 :: T_FunctionBindings_vIn58
data T_FunctionBindings_vOut58
T_FunctionBindings_vOut58 :: (FunctionBindings) -> T_FunctionBindings_vOut58
sem_FunctionBindings_Cons :: T_FunctionBinding -> T_FunctionBindings -> T_FunctionBindings
sem_FunctionBindings_Nil :: T_FunctionBindings
data Inh_GuardedExpression
Inh_GuardedExpression :: Inh_GuardedExpression
data Syn_GuardedExpression
Syn_GuardedExpression :: (GuardedExpression) -> Syn_GuardedExpression
self_Syn_GuardedExpression :: Syn_GuardedExpression -> (GuardedExpression)
wrap_GuardedExpression :: T_GuardedExpression -> Inh_GuardedExpression -> (Syn_GuardedExpression)
sem_GuardedExpression :: GuardedExpression -> T_GuardedExpression
newtype T_GuardedExpression
T_GuardedExpression :: Identity (T_GuardedExpression_s62) -> T_GuardedExpression
attach_T_GuardedExpression :: T_GuardedExpression -> Identity (T_GuardedExpression_s62)
newtype T_GuardedExpression_s62
C_GuardedExpression_s62 :: (T_GuardedExpression_v61) -> T_GuardedExpression_s62
inv_GuardedExpression_s62 :: T_GuardedExpression_s62 -> (T_GuardedExpression_v61)
data T_GuardedExpression_s63
C_GuardedExpression_s63 :: T_GuardedExpression_s63
type T_GuardedExpression_v61 = (T_GuardedExpression_vIn61) -> (T_GuardedExpression_vOut61)
data T_GuardedExpression_vIn61
T_GuardedExpression_vIn61 :: T_GuardedExpression_vIn61
data T_GuardedExpression_vOut61
T_GuardedExpression_vOut61 :: (GuardedExpression) -> T_GuardedExpression_vOut61
sem_GuardedExpression_GuardedExpression :: T_Range -> T_Expression -> T_Expression -> T_GuardedExpression
data Inh_GuardedExpressions
Inh_GuardedExpressions :: Inh_GuardedExpressions
data Syn_GuardedExpressions
Syn_GuardedExpressions :: (GuardedExpressions) -> Syn_GuardedExpressions
self_Syn_GuardedExpressions :: Syn_GuardedExpressions -> (GuardedExpressions)
wrap_GuardedExpressions :: T_GuardedExpressions -> Inh_GuardedExpressions -> (Syn_GuardedExpressions)
sem_GuardedExpressions :: GuardedExpressions -> T_GuardedExpressions
newtype T_GuardedExpressions
T_GuardedExpressions :: Identity (T_GuardedExpressions_s65) -> T_GuardedExpressions
attach_T_GuardedExpressions :: T_GuardedExpressions -> Identity (T_GuardedExpressions_s65)
newtype T_GuardedExpressions_s65
C_GuardedExpressions_s65 :: (T_GuardedExpressions_v64) -> T_GuardedExpressions_s65
inv_GuardedExpressions_s65 :: T_GuardedExpressions_s65 -> (T_GuardedExpressions_v64)
data T_GuardedExpressions_s66
C_GuardedExpressions_s66 :: T_GuardedExpressions_s66
type T_GuardedExpressions_v64 = (T_GuardedExpressions_vIn64) -> (T_GuardedExpressions_vOut64)
data T_GuardedExpressions_vIn64
T_GuardedExpressions_vIn64 :: T_GuardedExpressions_vIn64
data T_GuardedExpressions_vOut64
T_GuardedExpressions_vOut64 :: (GuardedExpressions) -> T_GuardedExpressions_vOut64
sem_GuardedExpressions_Cons :: T_GuardedExpression -> T_GuardedExpressions -> T_GuardedExpressions
sem_GuardedExpressions_Nil :: T_GuardedExpressions
data Inh_Import
Inh_Import :: Inh_Import
data Syn_Import
Syn_Import :: (Import) -> Syn_Import
self_Syn_Import :: Syn_Import -> (Import)
wrap_Import :: T_Import -> Inh_Import -> (Syn_Import)
sem_Import :: Import -> T_Import
newtype T_Import
T_Import :: Identity (T_Import_s68) -> T_Import
attach_T_Import :: T_Import -> Identity (T_Import_s68)
newtype T_Import_s68
C_Import_s68 :: (T_Import_v67) -> T_Import_s68
inv_Import_s68 :: T_Import_s68 -> (T_Import_v67)
data T_Import_s69
C_Import_s69 :: T_Import_s69
type T_Import_v67 = (T_Import_vIn67) -> (T_Import_vOut67)
data T_Import_vIn67
T_Import_vIn67 :: T_Import_vIn67
data T_Import_vOut67
T_Import_vOut67 :: (Import) -> T_Import_vOut67
sem_Import_Variable :: T_Range -> T_Name -> T_Import
sem_Import_TypeOrClass :: T_Range -> T_Name -> T_MaybeNames -> T_Import
sem_Import_TypeOrClassComplete :: T_Range -> T_Name -> T_Import
data Inh_ImportDeclaration
Inh_ImportDeclaration :: Inh_ImportDeclaration
data Syn_ImportDeclaration
Syn_ImportDeclaration :: (ImportDeclaration) -> Syn_ImportDeclaration
self_Syn_ImportDeclaration :: Syn_ImportDeclaration -> (ImportDeclaration)
wrap_ImportDeclaration :: T_ImportDeclaration -> Inh_ImportDeclaration -> (Syn_ImportDeclaration)
sem_ImportDeclaration :: ImportDeclaration -> T_ImportDeclaration
newtype T_ImportDeclaration
T_ImportDeclaration :: Identity (T_ImportDeclaration_s71) -> T_ImportDeclaration
attach_T_ImportDeclaration :: T_ImportDeclaration -> Identity (T_ImportDeclaration_s71)
newtype T_ImportDeclaration_s71
C_ImportDeclaration_s71 :: (T_ImportDeclaration_v70) -> T_ImportDeclaration_s71
inv_ImportDeclaration_s71 :: T_ImportDeclaration_s71 -> (T_ImportDeclaration_v70)
data T_ImportDeclaration_s72
C_ImportDeclaration_s72 :: T_ImportDeclaration_s72
type T_ImportDeclaration_v70 = (T_ImportDeclaration_vIn70) -> (T_ImportDeclaration_vOut70)
data T_ImportDeclaration_vIn70
T_ImportDeclaration_vIn70 :: T_ImportDeclaration_vIn70
data T_ImportDeclaration_vOut70
T_ImportDeclaration_vOut70 :: (ImportDeclaration) -> T_ImportDeclaration_vOut70
sem_ImportDeclaration_Import :: T_Range -> (Bool) -> T_Name -> T_MaybeName -> T_MaybeImportSpecification -> T_ImportDeclaration
sem_ImportDeclaration_Empty :: T_Range -> T_ImportDeclaration
data Inh_ImportDeclarations
Inh_ImportDeclarations :: Inh_ImportDeclarations
data Syn_ImportDeclarations
Syn_ImportDeclarations :: (ImportDeclarations) -> Syn_ImportDeclarations
self_Syn_ImportDeclarations :: Syn_ImportDeclarations -> (ImportDeclarations)
wrap_ImportDeclarations :: T_ImportDeclarations -> Inh_ImportDeclarations -> (Syn_ImportDeclarations)
sem_ImportDeclarations :: ImportDeclarations -> T_ImportDeclarations
newtype T_ImportDeclarations
T_ImportDeclarations :: Identity (T_ImportDeclarations_s74) -> T_ImportDeclarations
attach_T_ImportDeclarations :: T_ImportDeclarations -> Identity (T_ImportDeclarations_s74)
newtype T_ImportDeclarations_s74
C_ImportDeclarations_s74 :: (T_ImportDeclarations_v73) -> T_ImportDeclarations_s74
inv_ImportDeclarations_s74 :: T_ImportDeclarations_s74 -> (T_ImportDeclarations_v73)
data T_ImportDeclarations_s75
C_ImportDeclarations_s75 :: T_ImportDeclarations_s75
type T_ImportDeclarations_v73 = (T_ImportDeclarations_vIn73) -> (T_ImportDeclarations_vOut73)
data T_ImportDeclarations_vIn73
T_ImportDeclarations_vIn73 :: T_ImportDeclarations_vIn73
data T_ImportDeclarations_vOut73
T_ImportDeclarations_vOut73 :: (ImportDeclarations) -> T_ImportDeclarations_vOut73
sem_ImportDeclarations_Cons :: T_ImportDeclaration -> T_ImportDeclarations -> T_ImportDeclarations
sem_ImportDeclarations_Nil :: T_ImportDeclarations
data Inh_ImportSpecification
Inh_ImportSpecification :: Inh_ImportSpecification
data Syn_ImportSpecification
Syn_ImportSpecification :: (ImportSpecification) -> Syn_ImportSpecification
self_Syn_ImportSpecification :: Syn_ImportSpecification -> (ImportSpecification)
wrap_ImportSpecification :: T_ImportSpecification -> Inh_ImportSpecification -> (Syn_ImportSpecification)
sem_ImportSpecification :: ImportSpecification -> T_ImportSpecification
newtype T_ImportSpecification
T_ImportSpecification :: Identity (T_ImportSpecification_s77) -> T_ImportSpecification
attach_T_ImportSpecification :: T_ImportSpecification -> Identity (T_ImportSpecification_s77)
newtype T_ImportSpecification_s77
C_ImportSpecification_s77 :: (T_ImportSpecification_v76) -> T_ImportSpecification_s77
inv_ImportSpecification_s77 :: T_ImportSpecification_s77 -> (T_ImportSpecification_v76)
data T_ImportSpecification_s78
C_ImportSpecification_s78 :: T_ImportSpecification_s78
type T_ImportSpecification_v76 = (T_ImportSpecification_vIn76) -> (T_ImportSpecification_vOut76)
data T_ImportSpecification_vIn76
T_ImportSpecification_vIn76 :: T_ImportSpecification_vIn76
data T_ImportSpecification_vOut76
T_ImportSpecification_vOut76 :: (ImportSpecification) -> T_ImportSpecification_vOut76
sem_ImportSpecification_Import :: T_Range -> (Bool) -> T_Imports -> T_ImportSpecification
data Inh_Imports
Inh_Imports :: Inh_Imports
data Syn_Imports
Syn_Imports :: (Imports) -> Syn_Imports
self_Syn_Imports :: Syn_Imports -> (Imports)
wrap_Imports :: T_Imports -> Inh_Imports -> (Syn_Imports)
sem_Imports :: Imports -> T_Imports
newtype T_Imports
T_Imports :: Identity (T_Imports_s80) -> T_Imports
attach_T_Imports :: T_Imports -> Identity (T_Imports_s80)
newtype T_Imports_s80
C_Imports_s80 :: (T_Imports_v79) -> T_Imports_s80
inv_Imports_s80 :: T_Imports_s80 -> (T_Imports_v79)
data T_Imports_s81
C_Imports_s81 :: T_Imports_s81
type T_Imports_v79 = (T_Imports_vIn79) -> (T_Imports_vOut79)
data T_Imports_vIn79
T_Imports_vIn79 :: T_Imports_vIn79
data T_Imports_vOut79
T_Imports_vOut79 :: (Imports) -> T_Imports_vOut79
sem_Imports_Cons :: T_Import -> T_Imports -> T_Imports
sem_Imports_Nil :: T_Imports
data Inh_Judgement
Inh_Judgement :: ([(Name, Tp)]) -> Inh_Judgement
nameMap_Inh_Judgement :: Inh_Judgement -> ([(Name, Tp)])
data Syn_Judgement
Syn_Judgement :: ([(Name, Entity)]) -> (Tp) -> (Judgement) -> (Expression) -> (Names) -> Syn_Judgement
allVariables_Syn_Judgement :: Syn_Judgement -> ([(Name, Entity)])
conclusionType_Syn_Judgement :: Syn_Judgement -> (Tp)
self_Syn_Judgement :: Syn_Judgement -> (Judgement)
theExpression_Syn_Judgement :: Syn_Judgement -> (Expression)
typevariables_Syn_Judgement :: Syn_Judgement -> (Names)
wrap_Judgement :: T_Judgement -> Inh_Judgement -> (Syn_Judgement)
sem_Judgement :: Judgement -> T_Judgement
newtype T_Judgement
T_Judgement :: Identity (T_Judgement_s83) -> T_Judgement
attach_T_Judgement :: T_Judgement -> Identity (T_Judgement_s83)
newtype T_Judgement_s83
C_Judgement_s83 :: (T_Judgement_v82) -> T_Judgement_s83
inv_Judgement_s83 :: T_Judgement_s83 -> (T_Judgement_v82)
data T_Judgement_s84
C_Judgement_s84 :: T_Judgement_s84
type T_Judgement_v82 = (T_Judgement_vIn82) -> (T_Judgement_vOut82)
data T_Judgement_vIn82
T_Judgement_vIn82 :: ([(Name, Tp)]) -> T_Judgement_vIn82
data T_Judgement_vOut82
T_Judgement_vOut82 :: ([(Name, Entity)]) -> (Tp) -> (Judgement) -> (Expression) -> (Names) -> T_Judgement_vOut82
sem_Judgement_Judgement :: T_Expression -> T_Type -> T_Judgement
data Inh_LeftHandSide
Inh_LeftHandSide :: Inh_LeftHandSide
data Syn_LeftHandSide
Syn_LeftHandSide :: (LeftHandSide) -> Syn_LeftHandSide
self_Syn_LeftHandSide :: Syn_LeftHandSide -> (LeftHandSide)
wrap_LeftHandSide :: T_LeftHandSide -> Inh_LeftHandSide -> (Syn_LeftHandSide)
sem_LeftHandSide :: LeftHandSide -> T_LeftHandSide
newtype T_LeftHandSide
T_LeftHandSide :: Identity (T_LeftHandSide_s86) -> T_LeftHandSide
attach_T_LeftHandSide :: T_LeftHandSide -> Identity (T_LeftHandSide_s86)
newtype T_LeftHandSide_s86
C_LeftHandSide_s86 :: (T_LeftHandSide_v85) -> T_LeftHandSide_s86
inv_LeftHandSide_s86 :: T_LeftHandSide_s86 -> (T_LeftHandSide_v85)
data T_LeftHandSide_s87
C_LeftHandSide_s87 :: T_LeftHandSide_s87
type T_LeftHandSide_v85 = (T_LeftHandSide_vIn85) -> (T_LeftHandSide_vOut85)
data T_LeftHandSide_vIn85
T_LeftHandSide_vIn85 :: T_LeftHandSide_vIn85
data T_LeftHandSide_vOut85
T_LeftHandSide_vOut85 :: (LeftHandSide) -> T_LeftHandSide_vOut85
sem_LeftHandSide_Function :: T_Range -> T_Name -> T_Patterns -> T_LeftHandSide
sem_LeftHandSide_Infix :: T_Range -> T_Pattern -> T_Name -> T_Pattern -> T_LeftHandSide
sem_LeftHandSide_Parenthesized :: T_Range -> T_LeftHandSide -> T_Patterns -> T_LeftHandSide
data Inh_Literal
Inh_Literal :: Inh_Literal
data Syn_Literal
Syn_Literal :: (Literal) -> Syn_Literal
self_Syn_Literal :: Syn_Literal -> (Literal)
wrap_Literal :: T_Literal -> Inh_Literal -> (Syn_Literal)
sem_Literal :: Literal -> T_Literal
newtype T_Literal
T_Literal :: Identity (T_Literal_s89) -> T_Literal
attach_T_Literal :: T_Literal -> Identity (T_Literal_s89)
newtype T_Literal_s89
C_Literal_s89 :: (T_Literal_v88) -> T_Literal_s89
inv_Literal_s89 :: T_Literal_s89 -> (T_Literal_v88)
data T_Literal_s90
C_Literal_s90 :: T_Literal_s90
type T_Literal_v88 = (T_Literal_vIn88) -> (T_Literal_vOut88)
data T_Literal_vIn88
T_Literal_vIn88 :: T_Literal_vIn88
data T_Literal_vOut88
T_Literal_vOut88 :: (Literal) -> T_Literal_vOut88
sem_Literal_Int :: T_Range -> (String) -> T_Literal
sem_Literal_Char :: T_Range -> (String) -> T_Literal
sem_Literal_Float :: T_Range -> (String) -> T_Literal
sem_Literal_String :: T_Range -> (String) -> T_Literal
data Inh_MaybeDeclarations
Inh_MaybeDeclarations :: Inh_MaybeDeclarations
data Syn_MaybeDeclarations
Syn_MaybeDeclarations :: (MaybeDeclarations) -> Syn_MaybeDeclarations
self_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> (MaybeDeclarations)
wrap_MaybeDeclarations :: T_MaybeDeclarations -> Inh_MaybeDeclarations -> (Syn_MaybeDeclarations)
sem_MaybeDeclarations :: MaybeDeclarations -> T_MaybeDeclarations
newtype T_MaybeDeclarations
T_MaybeDeclarations :: Identity (T_MaybeDeclarations_s92) -> T_MaybeDeclarations
attach_T_MaybeDeclarations :: T_MaybeDeclarations -> Identity (T_MaybeDeclarations_s92)
newtype T_MaybeDeclarations_s92
C_MaybeDeclarations_s92 :: (T_MaybeDeclarations_v91) -> T_MaybeDeclarations_s92
inv_MaybeDeclarations_s92 :: T_MaybeDeclarations_s92 -> (T_MaybeDeclarations_v91)
data T_MaybeDeclarations_s93
C_MaybeDeclarations_s93 :: T_MaybeDeclarations_s93
type T_MaybeDeclarations_v91 = (T_MaybeDeclarations_vIn91) -> (T_MaybeDeclarations_vOut91)
data T_MaybeDeclarations_vIn91
T_MaybeDeclarations_vIn91 :: T_MaybeDeclarations_vIn91
data T_MaybeDeclarations_vOut91
T_MaybeDeclarations_vOut91 :: (MaybeDeclarations) -> T_MaybeDeclarations_vOut91
sem_MaybeDeclarations_Nothing :: T_MaybeDeclarations
sem_MaybeDeclarations_Just :: T_Declarations -> T_MaybeDeclarations
data Inh_MaybeExports
Inh_MaybeExports :: Inh_MaybeExports
data Syn_MaybeExports
Syn_MaybeExports :: (MaybeExports) -> Syn_MaybeExports
self_Syn_MaybeExports :: Syn_MaybeExports -> (MaybeExports)
wrap_MaybeExports :: T_MaybeExports -> Inh_MaybeExports -> (Syn_MaybeExports)
sem_MaybeExports :: MaybeExports -> T_MaybeExports
newtype T_MaybeExports
T_MaybeExports :: Identity (T_MaybeExports_s95) -> T_MaybeExports
attach_T_MaybeExports :: T_MaybeExports -> Identity (T_MaybeExports_s95)
newtype T_MaybeExports_s95
C_MaybeExports_s95 :: (T_MaybeExports_v94) -> T_MaybeExports_s95
inv_MaybeExports_s95 :: T_MaybeExports_s95 -> (T_MaybeExports_v94)
data T_MaybeExports_s96
C_MaybeExports_s96 :: T_MaybeExports_s96
type T_MaybeExports_v94 = (T_MaybeExports_vIn94) -> (T_MaybeExports_vOut94)
data T_MaybeExports_vIn94
T_MaybeExports_vIn94 :: T_MaybeExports_vIn94
data T_MaybeExports_vOut94
T_MaybeExports_vOut94 :: (MaybeExports) -> T_MaybeExports_vOut94
sem_MaybeExports_Nothing :: T_MaybeExports
sem_MaybeExports_Just :: T_Exports -> T_MaybeExports
data Inh_MaybeExpression
Inh_MaybeExpression :: Inh_MaybeExpression
data Syn_MaybeExpression
Syn_MaybeExpression :: ([(Name, Entity)]) -> (MaybeExpression) -> Syn_MaybeExpression
allVariables_Syn_MaybeExpression :: Syn_MaybeExpression -> ([(Name, Entity)])
self_Syn_MaybeExpression :: Syn_MaybeExpression -> (MaybeExpression)
wrap_MaybeExpression :: T_MaybeExpression -> Inh_MaybeExpression -> (Syn_MaybeExpression)
sem_MaybeExpression :: MaybeExpression -> T_MaybeExpression
newtype T_MaybeExpression
T_MaybeExpression :: Identity (T_MaybeExpression_s98) -> T_MaybeExpression
attach_T_MaybeExpression :: T_MaybeExpression -> Identity (T_MaybeExpression_s98)
newtype T_MaybeExpression_s98
C_MaybeExpression_s98 :: (T_MaybeExpression_v97) -> T_MaybeExpression_s98
inv_MaybeExpression_s98 :: T_MaybeExpression_s98 -> (T_MaybeExpression_v97)
data T_MaybeExpression_s99
C_MaybeExpression_s99 :: T_MaybeExpression_s99
type T_MaybeExpression_v97 = (T_MaybeExpression_vIn97) -> (T_MaybeExpression_vOut97)
data T_MaybeExpression_vIn97
T_MaybeExpression_vIn97 :: T_MaybeExpression_vIn97
data T_MaybeExpression_vOut97
T_MaybeExpression_vOut97 :: ([(Name, Entity)]) -> (MaybeExpression) -> T_MaybeExpression_vOut97
sem_MaybeExpression_Nothing :: T_MaybeExpression
sem_MaybeExpression_Just :: T_Expression -> T_MaybeExpression
data Inh_MaybeImportSpecification
Inh_MaybeImportSpecification :: Inh_MaybeImportSpecification
data Syn_MaybeImportSpecification
Syn_MaybeImportSpecification :: (MaybeImportSpecification) -> Syn_MaybeImportSpecification
self_Syn_MaybeImportSpecification :: Syn_MaybeImportSpecification -> (MaybeImportSpecification)
wrap_MaybeImportSpecification :: T_MaybeImportSpecification -> Inh_MaybeImportSpecification -> (Syn_MaybeImportSpecification)
sem_MaybeImportSpecification :: MaybeImportSpecification -> T_MaybeImportSpecification
newtype T_MaybeImportSpecification
T_MaybeImportSpecification :: Identity (T_MaybeImportSpecification_s101) -> T_MaybeImportSpecification
attach_T_MaybeImportSpecification :: T_MaybeImportSpecification -> Identity (T_MaybeImportSpecification_s101)
newtype T_MaybeImportSpecification_s101
C_MaybeImportSpecification_s101 :: (T_MaybeImportSpecification_v100) -> T_MaybeImportSpecification_s101
inv_MaybeImportSpecification_s101 :: T_MaybeImportSpecification_s101 -> (T_MaybeImportSpecification_v100)
data T_MaybeImportSpecification_s102
C_MaybeImportSpecification_s102 :: T_MaybeImportSpecification_s102
type T_MaybeImportSpecification_v100 = (T_MaybeImportSpecification_vIn100) -> (T_MaybeImportSpecification_vOut100)
data T_MaybeImportSpecification_vIn100
T_MaybeImportSpecification_vIn100 :: T_MaybeImportSpecification_vIn100
data T_MaybeImportSpecification_vOut100
T_MaybeImportSpecification_vOut100 :: (MaybeImportSpecification) -> T_MaybeImportSpecification_vOut100
sem_MaybeImportSpecification_Nothing :: T_MaybeImportSpecification
sem_MaybeImportSpecification_Just :: T_ImportSpecification -> T_MaybeImportSpecification
data Inh_MaybeInt
Inh_MaybeInt :: Inh_MaybeInt
data Syn_MaybeInt
Syn_MaybeInt :: (MaybeInt) -> Syn_MaybeInt
self_Syn_MaybeInt :: Syn_MaybeInt -> (MaybeInt)
wrap_MaybeInt :: T_MaybeInt -> Inh_MaybeInt -> (Syn_MaybeInt)
sem_MaybeInt :: MaybeInt -> T_MaybeInt
newtype T_MaybeInt
T_MaybeInt :: Identity (T_MaybeInt_s104) -> T_MaybeInt
attach_T_MaybeInt :: T_MaybeInt -> Identity (T_MaybeInt_s104)
newtype T_MaybeInt_s104
C_MaybeInt_s104 :: (T_MaybeInt_v103) -> T_MaybeInt_s104
inv_MaybeInt_s104 :: T_MaybeInt_s104 -> (T_MaybeInt_v103)
data T_MaybeInt_s105
C_MaybeInt_s105 :: T_MaybeInt_s105
type T_MaybeInt_v103 = (T_MaybeInt_vIn103) -> (T_MaybeInt_vOut103)
data T_MaybeInt_vIn103
T_MaybeInt_vIn103 :: T_MaybeInt_vIn103
data T_MaybeInt_vOut103
T_MaybeInt_vOut103 :: (MaybeInt) -> T_MaybeInt_vOut103
sem_MaybeInt_Nothing :: T_MaybeInt
sem_MaybeInt_Just :: (Int) -> T_MaybeInt
data Inh_MaybeName
Inh_MaybeName :: Inh_MaybeName
data Syn_MaybeName
Syn_MaybeName :: (MaybeName) -> Syn_MaybeName
self_Syn_MaybeName :: Syn_MaybeName -> (MaybeName)
wrap_MaybeName :: T_MaybeName -> Inh_MaybeName -> (Syn_MaybeName)
sem_MaybeName :: MaybeName -> T_MaybeName
newtype T_MaybeName
T_MaybeName :: Identity (T_MaybeName_s107) -> T_MaybeName
attach_T_MaybeName :: T_MaybeName -> Identity (T_MaybeName_s107)
newtype T_MaybeName_s107
C_MaybeName_s107 :: (T_MaybeName_v106) -> T_MaybeName_s107
inv_MaybeName_s107 :: T_MaybeName_s107 -> (T_MaybeName_v106)
data T_MaybeName_s108
C_MaybeName_s108 :: T_MaybeName_s108
type T_MaybeName_v106 = (T_MaybeName_vIn106) -> (T_MaybeName_vOut106)
data T_MaybeName_vIn106
T_MaybeName_vIn106 :: T_MaybeName_vIn106
data T_MaybeName_vOut106
T_MaybeName_vOut106 :: (MaybeName) -> T_MaybeName_vOut106
sem_MaybeName_Nothing :: T_MaybeName
sem_MaybeName_Just :: T_Name -> T_MaybeName
data Inh_MaybeNames
Inh_MaybeNames :: Inh_MaybeNames
data Syn_MaybeNames
Syn_MaybeNames :: (MaybeNames) -> Syn_MaybeNames
self_Syn_MaybeNames :: Syn_MaybeNames -> (MaybeNames)
wrap_MaybeNames :: T_MaybeNames -> Inh_MaybeNames -> (Syn_MaybeNames)
sem_MaybeNames :: MaybeNames -> T_MaybeNames
newtype T_MaybeNames
T_MaybeNames :: Identity (T_MaybeNames_s110) -> T_MaybeNames
attach_T_MaybeNames :: T_MaybeNames -> Identity (T_MaybeNames_s110)
newtype T_MaybeNames_s110
C_MaybeNames_s110 :: (T_MaybeNames_v109) -> T_MaybeNames_s110
inv_MaybeNames_s110 :: T_MaybeNames_s110 -> (T_MaybeNames_v109)
data T_MaybeNames_s111
C_MaybeNames_s111 :: T_MaybeNames_s111
type T_MaybeNames_v109 = (T_MaybeNames_vIn109) -> (T_MaybeNames_vOut109)
data T_MaybeNames_vIn109
T_MaybeNames_vIn109 :: T_MaybeNames_vIn109
data T_MaybeNames_vOut109
T_MaybeNames_vOut109 :: (MaybeNames) -> T_MaybeNames_vOut109
sem_MaybeNames_Nothing :: T_MaybeNames
sem_MaybeNames_Just :: T_Names -> T_MaybeNames
data Inh_Module
Inh_Module :: Inh_Module
data Syn_Module
Syn_Module :: (Module) -> Syn_Module
self_Syn_Module :: Syn_Module -> (Module)
wrap_Module :: T_Module -> Inh_Module -> (Syn_Module)
sem_Module :: Module -> T_Module
newtype T_Module
T_Module :: Identity (T_Module_s113) -> T_Module
attach_T_Module :: T_Module -> Identity (T_Module_s113)
newtype T_Module_s113
C_Module_s113 :: (T_Module_v112) -> T_Module_s113
inv_Module_s113 :: T_Module_s113 -> (T_Module_v112)
data T_Module_s114
C_Module_s114 :: T_Module_s114
type T_Module_v112 = (T_Module_vIn112) -> (T_Module_vOut112)
data T_Module_vIn112
T_Module_vIn112 :: T_Module_vIn112
data T_Module_vOut112
T_Module_vOut112 :: (Module) -> T_Module_vOut112
sem_Module_Module :: T_Range -> T_MaybeName -> T_MaybeExports -> T_Body -> T_Module
data Inh_Name
Inh_Name :: Inh_Name
data Syn_Name
Syn_Name :: (Name) -> Syn_Name
self_Syn_Name :: Syn_Name -> (Name)
wrap_Name :: T_Name -> Inh_Name -> (Syn_Name)
sem_Name :: Name -> T_Name
newtype T_Name
T_Name :: Identity (T_Name_s116) -> T_Name
attach_T_Name :: T_Name -> Identity (T_Name_s116)
newtype T_Name_s116
C_Name_s116 :: (T_Name_v115) -> T_Name_s116
inv_Name_s116 :: T_Name_s116 -> (T_Name_v115)
data T_Name_s117
C_Name_s117 :: T_Name_s117
type T_Name_v115 = (T_Name_vIn115) -> (T_Name_vOut115)
data T_Name_vIn115
T_Name_vIn115 :: T_Name_vIn115
data T_Name_vOut115
T_Name_vOut115 :: (Name) -> T_Name_vOut115
sem_Name_Identifier :: T_Range -> T_Strings -> (String) -> T_Name
sem_Name_Operator :: T_Range -> T_Strings -> (String) -> T_Name
sem_Name_Special :: T_Range -> T_Strings -> (String) -> T_Name
data Inh_Names
Inh_Names :: Inh_Names
data Syn_Names
Syn_Names :: (Names) -> Syn_Names
self_Syn_Names :: Syn_Names -> (Names)
wrap_Names :: T_Names -> Inh_Names -> (Syn_Names)
sem_Names :: Names -> T_Names
newtype T_Names
T_Names :: Identity (T_Names_s119) -> T_Names
attach_T_Names :: T_Names -> Identity (T_Names_s119)
newtype T_Names_s119
C_Names_s119 :: (T_Names_v118) -> T_Names_s119
inv_Names_s119 :: T_Names_s119 -> (T_Names_v118)
data T_Names_s120
C_Names_s120 :: T_Names_s120
type T_Names_v118 = (T_Names_vIn118) -> (T_Names_vOut118)
data T_Names_vIn118
T_Names_vIn118 :: T_Names_vIn118
data T_Names_vOut118
T_Names_vOut118 :: (Names) -> T_Names_vOut118
sem_Names_Cons :: T_Name -> T_Names -> T_Names
sem_Names_Nil :: T_Names
data Inh_Pattern
Inh_Pattern :: Inh_Pattern
data Syn_Pattern
Syn_Pattern :: (Pattern) -> Syn_Pattern
self_Syn_Pattern :: Syn_Pattern -> (Pattern)
wrap_Pattern :: T_Pattern -> Inh_Pattern -> (Syn_Pattern)
sem_Pattern :: Pattern -> T_Pattern
newtype T_Pattern
T_Pattern :: Identity (T_Pattern_s122) -> T_Pattern
attach_T_Pattern :: T_Pattern -> Identity (T_Pattern_s122)
newtype T_Pattern_s122
C_Pattern_s122 :: (T_Pattern_v121) -> T_Pattern_s122
inv_Pattern_s122 :: T_Pattern_s122 -> (T_Pattern_v121)
data T_Pattern_s123
C_Pattern_s123 :: T_Pattern_s123
type T_Pattern_v121 = (T_Pattern_vIn121) -> (T_Pattern_vOut121)
data T_Pattern_vIn121
T_Pattern_vIn121 :: T_Pattern_vIn121
data T_Pattern_vOut121
T_Pattern_vOut121 :: (Pattern) -> T_Pattern_vOut121
sem_Pattern_Hole :: T_Range -> (Integer) -> T_Pattern
sem_Pattern_Literal :: T_Range -> T_Literal -> T_Pattern
sem_Pattern_Variable :: T_Range -> T_Name -> T_Pattern
sem_Pattern_Constructor :: T_Range -> T_Name -> T_Patterns -> T_Pattern
sem_Pattern_Parenthesized :: T_Range -> T_Pattern -> T_Pattern
sem_Pattern_InfixConstructor :: T_Range -> T_Pattern -> T_Name -> T_Pattern -> T_Pattern
sem_Pattern_List :: T_Range -> T_Patterns -> T_Pattern
sem_Pattern_Tuple :: T_Range -> T_Patterns -> T_Pattern
sem_Pattern_Record :: T_Range -> T_Name -> T_RecordPatternBindings -> T_Pattern
sem_Pattern_Negate :: T_Range -> T_Literal -> T_Pattern
sem_Pattern_As :: T_Range -> T_Name -> T_Pattern -> T_Pattern
sem_Pattern_Wildcard :: T_Range -> T_Pattern
sem_Pattern_Irrefutable :: T_Range -> T_Pattern -> T_Pattern
sem_Pattern_Successor :: T_Range -> T_Name -> T_Literal -> T_Pattern
sem_Pattern_NegateFloat :: T_Range -> T_Literal -> T_Pattern
data Inh_Patterns
Inh_Patterns :: Inh_Patterns
data Syn_Patterns
Syn_Patterns :: (Patterns) -> Syn_Patterns
self_Syn_Patterns :: Syn_Patterns -> (Patterns)
wrap_Patterns :: T_Patterns -> Inh_Patterns -> (Syn_Patterns)
sem_Patterns :: Patterns -> T_Patterns
newtype T_Patterns
T_Patterns :: Identity (T_Patterns_s125) -> T_Patterns
attach_T_Patterns :: T_Patterns -> Identity (T_Patterns_s125)
newtype T_Patterns_s125
C_Patterns_s125 :: (T_Patterns_v124) -> T_Patterns_s125
inv_Patterns_s125 :: T_Patterns_s125 -> (T_Patterns_v124)
data T_Patterns_s126
C_Patterns_s126 :: T_Patterns_s126
type T_Patterns_v124 = (T_Patterns_vIn124) -> (T_Patterns_vOut124)
data T_Patterns_vIn124
T_Patterns_vIn124 :: T_Patterns_vIn124
data T_Patterns_vOut124
T_Patterns_vOut124 :: (Patterns) -> T_Patterns_vOut124
sem_Patterns_Cons :: T_Pattern -> T_Patterns -> T_Patterns
sem_Patterns_Nil :: T_Patterns
data Inh_Position
Inh_Position :: Inh_Position
data Syn_Position
Syn_Position :: (Position) -> Syn_Position
self_Syn_Position :: Syn_Position -> (Position)
wrap_Position :: T_Position -> Inh_Position -> (Syn_Position)
sem_Position :: Position -> T_Position
newtype T_Position
T_Position :: Identity (T_Position_s128) -> T_Position
attach_T_Position :: T_Position -> Identity (T_Position_s128)
newtype T_Position_s128
C_Position_s128 :: (T_Position_v127) -> T_Position_s128
inv_Position_s128 :: T_Position_s128 -> (T_Position_v127)
data T_Position_s129
C_Position_s129 :: T_Position_s129
type T_Position_v127 = (T_Position_vIn127) -> (T_Position_vOut127)
data T_Position_vIn127
T_Position_vIn127 :: T_Position_vIn127
data T_Position_vOut127
T_Position_vOut127 :: (Position) -> T_Position_vOut127
sem_Position_Position :: (String) -> (Int) -> (Int) -> T_Position
sem_Position_Unknown :: T_Position
data Inh_Qualifier
Inh_Qualifier :: Inh_Qualifier
data Syn_Qualifier
Syn_Qualifier :: (Qualifier) -> Syn_Qualifier
self_Syn_Qualifier :: Syn_Qualifier -> (Qualifier)
wrap_Qualifier :: T_Qualifier -> Inh_Qualifier -> (Syn_Qualifier)
sem_Qualifier :: Qualifier -> T_Qualifier
newtype T_Qualifier
T_Qualifier :: Identity (T_Qualifier_s131) -> T_Qualifier
attach_T_Qualifier :: T_Qualifier -> Identity (T_Qualifier_s131)
newtype T_Qualifier_s131
C_Qualifier_s131 :: (T_Qualifier_v130) -> T_Qualifier_s131
inv_Qualifier_s131 :: T_Qualifier_s131 -> (T_Qualifier_v130)
data T_Qualifier_s132
C_Qualifier_s132 :: T_Qualifier_s132
type T_Qualifier_v130 = (T_Qualifier_vIn130) -> (T_Qualifier_vOut130)
data T_Qualifier_vIn130
T_Qualifier_vIn130 :: T_Qualifier_vIn130
data T_Qualifier_vOut130
T_Qualifier_vOut130 :: (Qualifier) -> T_Qualifier_vOut130
sem_Qualifier_Guard :: T_Range -> T_Expression -> T_Qualifier
sem_Qualifier_Let :: T_Range -> T_Declarations -> T_Qualifier
sem_Qualifier_Generator :: T_Range -> T_Pattern -> T_Expression -> T_Qualifier
sem_Qualifier_Empty :: T_Range -> T_Qualifier
data Inh_Qualifiers
Inh_Qualifiers :: Inh_Qualifiers
data Syn_Qualifiers
Syn_Qualifiers :: (Qualifiers) -> Syn_Qualifiers
self_Syn_Qualifiers :: Syn_Qualifiers -> (Qualifiers)
wrap_Qualifiers :: T_Qualifiers -> Inh_Qualifiers -> (Syn_Qualifiers)
sem_Qualifiers :: Qualifiers -> T_Qualifiers
newtype T_Qualifiers
T_Qualifiers :: Identity (T_Qualifiers_s134) -> T_Qualifiers
attach_T_Qualifiers :: T_Qualifiers -> Identity (T_Qualifiers_s134)
newtype T_Qualifiers_s134
C_Qualifiers_s134 :: (T_Qualifiers_v133) -> T_Qualifiers_s134
inv_Qualifiers_s134 :: T_Qualifiers_s134 -> (T_Qualifiers_v133)
data T_Qualifiers_s135
C_Qualifiers_s135 :: T_Qualifiers_s135
type T_Qualifiers_v133 = (T_Qualifiers_vIn133) -> (T_Qualifiers_vOut133)
data T_Qualifiers_vIn133
T_Qualifiers_vIn133 :: T_Qualifiers_vIn133
data T_Qualifiers_vOut133
T_Qualifiers_vOut133 :: (Qualifiers) -> T_Qualifiers_vOut133
sem_Qualifiers_Cons :: T_Qualifier -> T_Qualifiers -> T_Qualifiers
sem_Qualifiers_Nil :: T_Qualifiers
data Inh_Range
Inh_Range :: Inh_Range
data Syn_Range
Syn_Range :: (Range) -> Syn_Range
self_Syn_Range :: Syn_Range -> (Range)
wrap_Range :: T_Range -> Inh_Range -> (Syn_Range)
sem_Range :: Range -> T_Range
newtype T_Range
T_Range :: Identity (T_Range_s137) -> T_Range
attach_T_Range :: T_Range -> Identity (T_Range_s137)
newtype T_Range_s137
C_Range_s137 :: (T_Range_v136) -> T_Range_s137
inv_Range_s137 :: T_Range_s137 -> (T_Range_v136)
data T_Range_s138
C_Range_s138 :: T_Range_s138
type T_Range_v136 = (T_Range_vIn136) -> (T_Range_vOut136)
data T_Range_vIn136
T_Range_vIn136 :: T_Range_vIn136
data T_Range_vOut136
T_Range_vOut136 :: (Range) -> T_Range_vOut136
sem_Range_Range :: T_Position -> T_Position -> T_Range
data Inh_RecordExpressionBinding
Inh_RecordExpressionBinding :: Inh_RecordExpressionBinding
data Syn_RecordExpressionBinding
Syn_RecordExpressionBinding :: (RecordExpressionBinding) -> Syn_RecordExpressionBinding
self_Syn_RecordExpressionBinding :: Syn_RecordExpressionBinding -> (RecordExpressionBinding)
wrap_RecordExpressionBinding :: T_RecordExpressionBinding -> Inh_RecordExpressionBinding -> (Syn_RecordExpressionBinding)
sem_RecordExpressionBinding :: RecordExpressionBinding -> T_RecordExpressionBinding
newtype T_RecordExpressionBinding
T_RecordExpressionBinding :: Identity (T_RecordExpressionBinding_s140) -> T_RecordExpressionBinding
attach_T_RecordExpressionBinding :: T_RecordExpressionBinding -> Identity (T_RecordExpressionBinding_s140)
newtype T_RecordExpressionBinding_s140
C_RecordExpressionBinding_s140 :: (T_RecordExpressionBinding_v139) -> T_RecordExpressionBinding_s140
inv_RecordExpressionBinding_s140 :: T_RecordExpressionBinding_s140 -> (T_RecordExpressionBinding_v139)
data T_RecordExpressionBinding_s141
C_RecordExpressionBinding_s141 :: T_RecordExpressionBinding_s141
type T_RecordExpressionBinding_v139 = (T_RecordExpressionBinding_vIn139) -> (T_RecordExpressionBinding_vOut139)
data T_RecordExpressionBinding_vIn139
T_RecordExpressionBinding_vIn139 :: T_RecordExpressionBinding_vIn139
data T_RecordExpressionBinding_vOut139
T_RecordExpressionBinding_vOut139 :: (RecordExpressionBinding) -> T_RecordExpressionBinding_vOut139
sem_RecordExpressionBinding_RecordExpressionBinding :: T_Range -> T_Name -> T_Expression -> T_RecordExpressionBinding
data Inh_RecordExpressionBindings
Inh_RecordExpressionBindings :: Inh_RecordExpressionBindings
data Syn_RecordExpressionBindings
Syn_RecordExpressionBindings :: (RecordExpressionBindings) -> Syn_RecordExpressionBindings
self_Syn_RecordExpressionBindings :: Syn_RecordExpressionBindings -> (RecordExpressionBindings)
wrap_RecordExpressionBindings :: T_RecordExpressionBindings -> Inh_RecordExpressionBindings -> (Syn_RecordExpressionBindings)
sem_RecordExpressionBindings :: RecordExpressionBindings -> T_RecordExpressionBindings
newtype T_RecordExpressionBindings
T_RecordExpressionBindings :: Identity (T_RecordExpressionBindings_s143) -> T_RecordExpressionBindings
attach_T_RecordExpressionBindings :: T_RecordExpressionBindings -> Identity (T_RecordExpressionBindings_s143)
newtype T_RecordExpressionBindings_s143
C_RecordExpressionBindings_s143 :: (T_RecordExpressionBindings_v142) -> T_RecordExpressionBindings_s143
inv_RecordExpressionBindings_s143 :: T_RecordExpressionBindings_s143 -> (T_RecordExpressionBindings_v142)
data T_RecordExpressionBindings_s144
C_RecordExpressionBindings_s144 :: T_RecordExpressionBindings_s144
type T_RecordExpressionBindings_v142 = (T_RecordExpressionBindings_vIn142) -> (T_RecordExpressionBindings_vOut142)
data T_RecordExpressionBindings_vIn142
T_RecordExpressionBindings_vIn142 :: T_RecordExpressionBindings_vIn142
data T_RecordExpressionBindings_vOut142
T_RecordExpressionBindings_vOut142 :: (RecordExpressionBindings) -> T_RecordExpressionBindings_vOut142
sem_RecordExpressionBindings_Cons :: T_RecordExpressionBinding -> T_RecordExpressionBindings -> T_RecordExpressionBindings
sem_RecordExpressionBindings_Nil :: T_RecordExpressionBindings
data Inh_RecordPatternBinding
Inh_RecordPatternBinding :: Inh_RecordPatternBinding
data Syn_RecordPatternBinding
Syn_RecordPatternBinding :: (RecordPatternBinding) -> Syn_RecordPatternBinding
self_Syn_RecordPatternBinding :: Syn_RecordPatternBinding -> (RecordPatternBinding)
wrap_RecordPatternBinding :: T_RecordPatternBinding -> Inh_RecordPatternBinding -> (Syn_RecordPatternBinding)
sem_RecordPatternBinding :: RecordPatternBinding -> T_RecordPatternBinding
newtype T_RecordPatternBinding
T_RecordPatternBinding :: Identity (T_RecordPatternBinding_s146) -> T_RecordPatternBinding
attach_T_RecordPatternBinding :: T_RecordPatternBinding -> Identity (T_RecordPatternBinding_s146)
newtype T_RecordPatternBinding_s146
C_RecordPatternBinding_s146 :: (T_RecordPatternBinding_v145) -> T_RecordPatternBinding_s146
inv_RecordPatternBinding_s146 :: T_RecordPatternBinding_s146 -> (T_RecordPatternBinding_v145)
data T_RecordPatternBinding_s147
C_RecordPatternBinding_s147 :: T_RecordPatternBinding_s147
type T_RecordPatternBinding_v145 = (T_RecordPatternBinding_vIn145) -> (T_RecordPatternBinding_vOut145)
data T_RecordPatternBinding_vIn145
T_RecordPatternBinding_vIn145 :: T_RecordPatternBinding_vIn145
data T_RecordPatternBinding_vOut145
T_RecordPatternBinding_vOut145 :: (RecordPatternBinding) -> T_RecordPatternBinding_vOut145
sem_RecordPatternBinding_RecordPatternBinding :: T_Range -> T_Name -> T_Pattern -> T_RecordPatternBinding
data Inh_RecordPatternBindings
Inh_RecordPatternBindings :: Inh_RecordPatternBindings
data Syn_RecordPatternBindings
Syn_RecordPatternBindings :: (RecordPatternBindings) -> Syn_RecordPatternBindings
self_Syn_RecordPatternBindings :: Syn_RecordPatternBindings -> (RecordPatternBindings)
wrap_RecordPatternBindings :: T_RecordPatternBindings -> Inh_RecordPatternBindings -> (Syn_RecordPatternBindings)
sem_RecordPatternBindings :: RecordPatternBindings -> T_RecordPatternBindings
newtype T_RecordPatternBindings
T_RecordPatternBindings :: Identity (T_RecordPatternBindings_s149) -> T_RecordPatternBindings
attach_T_RecordPatternBindings :: T_RecordPatternBindings -> Identity (T_RecordPatternBindings_s149)
newtype T_RecordPatternBindings_s149
C_RecordPatternBindings_s149 :: (T_RecordPatternBindings_v148) -> T_RecordPatternBindings_s149
inv_RecordPatternBindings_s149 :: T_RecordPatternBindings_s149 -> (T_RecordPatternBindings_v148)
data T_RecordPatternBindings_s150
C_RecordPatternBindings_s150 :: T_RecordPatternBindings_s150
type T_RecordPatternBindings_v148 = (T_RecordPatternBindings_vIn148) -> (T_RecordPatternBindings_vOut148)
data T_RecordPatternBindings_vIn148
T_RecordPatternBindings_vIn148 :: T_RecordPatternBindings_vIn148
data T_RecordPatternBindings_vOut148
T_RecordPatternBindings_vOut148 :: (RecordPatternBindings) -> T_RecordPatternBindings_vOut148
sem_RecordPatternBindings_Cons :: T_RecordPatternBinding -> T_RecordPatternBindings -> T_RecordPatternBindings
sem_RecordPatternBindings_Nil :: T_RecordPatternBindings
data Inh_RightHandSide
Inh_RightHandSide :: Inh_RightHandSide
data Syn_RightHandSide
Syn_RightHandSide :: (RightHandSide) -> Syn_RightHandSide
self_Syn_RightHandSide :: Syn_RightHandSide -> (RightHandSide)
wrap_RightHandSide :: T_RightHandSide -> Inh_RightHandSide -> (Syn_RightHandSide)
sem_RightHandSide :: RightHandSide -> T_RightHandSide
newtype T_RightHandSide
T_RightHandSide :: Identity (T_RightHandSide_s152) -> T_RightHandSide
attach_T_RightHandSide :: T_RightHandSide -> Identity (T_RightHandSide_s152)
newtype T_RightHandSide_s152
C_RightHandSide_s152 :: (T_RightHandSide_v151) -> T_RightHandSide_s152
inv_RightHandSide_s152 :: T_RightHandSide_s152 -> (T_RightHandSide_v151)
data T_RightHandSide_s153
C_RightHandSide_s153 :: T_RightHandSide_s153
type T_RightHandSide_v151 = (T_RightHandSide_vIn151) -> (T_RightHandSide_vOut151)
data T_RightHandSide_vIn151
T_RightHandSide_vIn151 :: T_RightHandSide_vIn151
data T_RightHandSide_vOut151
T_RightHandSide_vOut151 :: (RightHandSide) -> T_RightHandSide_vOut151
sem_RightHandSide_Expression :: T_Range -> T_Expression -> T_MaybeDeclarations -> T_RightHandSide
sem_RightHandSide_Guarded :: T_Range -> T_GuardedExpressions -> T_MaybeDeclarations -> T_RightHandSide
data Inh_SimpleJudgement
Inh_SimpleJudgement :: ([(Name, Tp)]) -> ([(String, Tp)]) -> Inh_SimpleJudgement
nameMap_Inh_SimpleJudgement :: Inh_SimpleJudgement -> ([(Name, Tp)])
simpleJudgements_Inh_SimpleJudgement :: Inh_SimpleJudgement -> ([(String, Tp)])
data Syn_SimpleJudgement
Syn_SimpleJudgement :: (SimpleJudgement) -> ([(String, Tp)]) -> (Names) -> Syn_SimpleJudgement
self_Syn_SimpleJudgement :: Syn_SimpleJudgement -> (SimpleJudgement)
simpleJudgements_Syn_SimpleJudgement :: Syn_SimpleJudgement -> ([(String, Tp)])
typevariables_Syn_SimpleJudgement :: Syn_SimpleJudgement -> (Names)
wrap_SimpleJudgement :: T_SimpleJudgement -> Inh_SimpleJudgement -> (Syn_SimpleJudgement)
sem_SimpleJudgement :: SimpleJudgement -> T_SimpleJudgement
newtype T_SimpleJudgement
T_SimpleJudgement :: Identity (T_SimpleJudgement_s155) -> T_SimpleJudgement
attach_T_SimpleJudgement :: T_SimpleJudgement -> Identity (T_SimpleJudgement_s155)
newtype T_SimpleJudgement_s155
C_SimpleJudgement_s155 :: (T_SimpleJudgement_v154) -> T_SimpleJudgement_s155
inv_SimpleJudgement_s155 :: T_SimpleJudgement_s155 -> (T_SimpleJudgement_v154)
data T_SimpleJudgement_s156
C_SimpleJudgement_s156 :: T_SimpleJudgement_s156
type T_SimpleJudgement_v154 = (T_SimpleJudgement_vIn154) -> (T_SimpleJudgement_vOut154)
data T_SimpleJudgement_vIn154
T_SimpleJudgement_vIn154 :: ([(Name, Tp)]) -> ([(String, Tp)]) -> T_SimpleJudgement_vIn154
data T_SimpleJudgement_vOut154
T_SimpleJudgement_vOut154 :: (SimpleJudgement) -> ([(String, Tp)]) -> (Names) -> T_SimpleJudgement_vOut154
sem_SimpleJudgement_SimpleJudgement :: T_Name -> T_Type -> T_SimpleJudgement
data Inh_SimpleJudgements
Inh_SimpleJudgements :: ([(Name, Tp)]) -> ([(String, Tp)]) -> Inh_SimpleJudgements
nameMap_Inh_SimpleJudgements :: Inh_SimpleJudgements -> ([(Name, Tp)])
simpleJudgements_Inh_SimpleJudgements :: Inh_SimpleJudgements -> ([(String, Tp)])
data Syn_SimpleJudgements
Syn_SimpleJudgements :: (SimpleJudgements) -> ([(String, Tp)]) -> (Names) -> Syn_SimpleJudgements
self_Syn_SimpleJudgements :: Syn_SimpleJudgements -> (SimpleJudgements)
simpleJudgements_Syn_SimpleJudgements :: Syn_SimpleJudgements -> ([(String, Tp)])
typevariables_Syn_SimpleJudgements :: Syn_SimpleJudgements -> (Names)
wrap_SimpleJudgements :: T_SimpleJudgements -> Inh_SimpleJudgements -> (Syn_SimpleJudgements)
sem_SimpleJudgements :: SimpleJudgements -> T_SimpleJudgements
newtype T_SimpleJudgements
T_SimpleJudgements :: Identity (T_SimpleJudgements_s158) -> T_SimpleJudgements
attach_T_SimpleJudgements :: T_SimpleJudgements -> Identity (T_SimpleJudgements_s158)
newtype T_SimpleJudgements_s158
C_SimpleJudgements_s158 :: (T_SimpleJudgements_v157) -> T_SimpleJudgements_s158
inv_SimpleJudgements_s158 :: T_SimpleJudgements_s158 -> (T_SimpleJudgements_v157)
data T_SimpleJudgements_s159
C_SimpleJudgements_s159 :: T_SimpleJudgements_s159
type T_SimpleJudgements_v157 = (T_SimpleJudgements_vIn157) -> (T_SimpleJudgements_vOut157)
data T_SimpleJudgements_vIn157
T_SimpleJudgements_vIn157 :: ([(Name, Tp)]) -> ([(String, Tp)]) -> T_SimpleJudgements_vIn157
data T_SimpleJudgements_vOut157
T_SimpleJudgements_vOut157 :: (SimpleJudgements) -> ([(String, Tp)]) -> (Names) -> T_SimpleJudgements_vOut157
sem_SimpleJudgements_Cons :: T_SimpleJudgement -> T_SimpleJudgements -> T_SimpleJudgements
sem_SimpleJudgements_Nil :: T_SimpleJudgements
data Inh_SimpleType
Inh_SimpleType :: Inh_SimpleType
data Syn_SimpleType
Syn_SimpleType :: (SimpleType) -> Syn_SimpleType
self_Syn_SimpleType :: Syn_SimpleType -> (SimpleType)
wrap_SimpleType :: T_SimpleType -> Inh_SimpleType -> (Syn_SimpleType)
sem_SimpleType :: SimpleType -> T_SimpleType
newtype T_SimpleType
T_SimpleType :: Identity (T_SimpleType_s161) -> T_SimpleType
attach_T_SimpleType :: T_SimpleType -> Identity (T_SimpleType_s161)
newtype T_SimpleType_s161
C_SimpleType_s161 :: (T_SimpleType_v160) -> T_SimpleType_s161
inv_SimpleType_s161 :: T_SimpleType_s161 -> (T_SimpleType_v160)
data T_SimpleType_s162
C_SimpleType_s162 :: T_SimpleType_s162
type T_SimpleType_v160 = (T_SimpleType_vIn160) -> (T_SimpleType_vOut160)
data T_SimpleType_vIn160
T_SimpleType_vIn160 :: T_SimpleType_vIn160
data T_SimpleType_vOut160
T_SimpleType_vOut160 :: (SimpleType) -> T_SimpleType_vOut160
sem_SimpleType_SimpleType :: T_Range -> T_Name -> T_Names -> T_SimpleType
data Inh_Statement
Inh_Statement :: Inh_Statement
data Syn_Statement
Syn_Statement :: (Statement) -> Syn_Statement
self_Syn_Statement :: Syn_Statement -> (Statement)
wrap_Statement :: T_Statement -> Inh_Statement -> (Syn_Statement)
sem_Statement :: Statement -> T_Statement
newtype T_Statement
T_Statement :: Identity (T_Statement_s164) -> T_Statement
attach_T_Statement :: T_Statement -> Identity (T_Statement_s164)
newtype T_Statement_s164
C_Statement_s164 :: (T_Statement_v163) -> T_Statement_s164
inv_Statement_s164 :: T_Statement_s164 -> (T_Statement_v163)
data T_Statement_s165
C_Statement_s165 :: T_Statement_s165
type T_Statement_v163 = (T_Statement_vIn163) -> (T_Statement_vOut163)
data T_Statement_vIn163
T_Statement_vIn163 :: T_Statement_vIn163
data T_Statement_vOut163
T_Statement_vOut163 :: (Statement) -> T_Statement_vOut163
sem_Statement_Expression :: T_Range -> T_Expression -> T_Statement
sem_Statement_Let :: T_Range -> T_Declarations -> T_Statement
sem_Statement_Generator :: T_Range -> T_Pattern -> T_Expression -> T_Statement
sem_Statement_Empty :: T_Range -> T_Statement
data Inh_Statements
Inh_Statements :: Inh_Statements
data Syn_Statements
Syn_Statements :: (Statements) -> Syn_Statements
self_Syn_Statements :: Syn_Statements -> (Statements)
wrap_Statements :: T_Statements -> Inh_Statements -> (Syn_Statements)
sem_Statements :: Statements -> T_Statements
newtype T_Statements
T_Statements :: Identity (T_Statements_s167) -> T_Statements
attach_T_Statements :: T_Statements -> Identity (T_Statements_s167)
newtype T_Statements_s167
C_Statements_s167 :: (T_Statements_v166) -> T_Statements_s167
inv_Statements_s167 :: T_Statements_s167 -> (T_Statements_v166)
data T_Statements_s168
C_Statements_s168 :: T_Statements_s168
type T_Statements_v166 = (T_Statements_vIn166) -> (T_Statements_vOut166)
data T_Statements_vIn166
T_Statements_vIn166 :: T_Statements_vIn166
data T_Statements_vOut166
T_Statements_vOut166 :: (Statements) -> T_Statements_vOut166
sem_Statements_Cons :: T_Statement -> T_Statements -> T_Statements
sem_Statements_Nil :: T_Statements
data Inh_Strings
Inh_Strings :: Inh_Strings
data Syn_Strings
Syn_Strings :: (Strings) -> Syn_Strings
self_Syn_Strings :: Syn_Strings -> (Strings)
wrap_Strings :: T_Strings -> Inh_Strings -> (Syn_Strings)
sem_Strings :: Strings -> T_Strings
newtype T_Strings
T_Strings :: Identity (T_Strings_s170) -> T_Strings
attach_T_Strings :: T_Strings -> Identity (T_Strings_s170)
newtype T_Strings_s170
C_Strings_s170 :: (T_Strings_v169) -> T_Strings_s170
inv_Strings_s170 :: T_Strings_s170 -> (T_Strings_v169)
data T_Strings_s171
C_Strings_s171 :: T_Strings_s171
type T_Strings_v169 = (T_Strings_vIn169) -> (T_Strings_vOut169)
data T_Strings_vIn169
T_Strings_vIn169 :: T_Strings_vIn169
data T_Strings_vOut169
T_Strings_vOut169 :: (Strings) -> T_Strings_vOut169
sem_Strings_Cons :: (String) -> T_Strings -> T_Strings
sem_Strings_Nil :: T_Strings
data Inh_Type
Inh_Type :: Inh_Type
data Syn_Type
Syn_Type :: (Type) -> (Names) -> Syn_Type
self_Syn_Type :: Syn_Type -> (Type)
typevariables_Syn_Type :: Syn_Type -> (Names)
wrap_Type :: T_Type -> Inh_Type -> (Syn_Type)
sem_Type :: Type -> T_Type
newtype T_Type
T_Type :: Identity (T_Type_s173) -> T_Type
attach_T_Type :: T_Type -> Identity (T_Type_s173)
newtype T_Type_s173
C_Type_s173 :: (T_Type_v172) -> T_Type_s173
inv_Type_s173 :: T_Type_s173 -> (T_Type_v172)
data T_Type_s174
C_Type_s174 :: T_Type_s174
type T_Type_v172 = (T_Type_vIn172) -> (T_Type_vOut172)
data T_Type_vIn172
T_Type_vIn172 :: T_Type_vIn172
data T_Type_vOut172
T_Type_vOut172 :: (Type) -> (Names) -> T_Type_vOut172
sem_Type_Application :: T_Range -> (Bool) -> T_Type -> T_Types -> T_Type
sem_Type_Variable :: T_Range -> T_Name -> T_Type
sem_Type_Constructor :: T_Range -> T_Name -> T_Type
sem_Type_Qualified :: T_Range -> T_ContextItems -> T_Type -> T_Type
sem_Type_Forall :: T_Range -> T_Names -> T_Type -> T_Type
sem_Type_Exists :: T_Range -> T_Names -> T_Type -> T_Type
sem_Type_Parenthesized :: T_Range -> T_Type -> T_Type
data Inh_TypeRule
Inh_TypeRule :: ([(Name, Tp)]) -> ([(String, Tp)]) -> Inh_TypeRule
nameMap_Inh_TypeRule :: Inh_TypeRule -> ([(Name, Tp)])
simpleJudgements_Inh_TypeRule :: Inh_TypeRule -> ([(String, Tp)])
data Syn_TypeRule
Syn_TypeRule :: ([(Name, Entity)]) -> (Expression) -> (Tp) -> (TypeRule) -> ([(String, Tp)]) -> (Names) -> Syn_TypeRule
conclusionAllVariables_Syn_TypeRule :: Syn_TypeRule -> ([(Name, Entity)])
conclusionExpression_Syn_TypeRule :: Syn_TypeRule -> (Expression)
conclusionType_Syn_TypeRule :: Syn_TypeRule -> (Tp)
self_Syn_TypeRule :: Syn_TypeRule -> (TypeRule)
simpleJudgements_Syn_TypeRule :: Syn_TypeRule -> ([(String, Tp)])
typevariables_Syn_TypeRule :: Syn_TypeRule -> (Names)
wrap_TypeRule :: T_TypeRule -> Inh_TypeRule -> (Syn_TypeRule)
sem_TypeRule :: TypeRule -> T_TypeRule
newtype T_TypeRule
T_TypeRule :: Identity (T_TypeRule_s176) -> T_TypeRule
attach_T_TypeRule :: T_TypeRule -> Identity (T_TypeRule_s176)
newtype T_TypeRule_s176
C_TypeRule_s176 :: (T_TypeRule_v175) -> T_TypeRule_s176
inv_TypeRule_s176 :: T_TypeRule_s176 -> (T_TypeRule_v175)
data T_TypeRule_s177
C_TypeRule_s177 :: T_TypeRule_s177
type T_TypeRule_v175 = (T_TypeRule_vIn175) -> (T_TypeRule_vOut175)
data T_TypeRule_vIn175
T_TypeRule_vIn175 :: ([(Name, Tp)]) -> ([(String, Tp)]) -> T_TypeRule_vIn175
data T_TypeRule_vOut175
T_TypeRule_vOut175 :: ([(Name, Entity)]) -> (Expression) -> (Tp) -> (TypeRule) -> ([(String, Tp)]) -> (Names) -> T_TypeRule_vOut175
sem_TypeRule_TypeRule :: T_SimpleJudgements -> T_Judgement -> T_TypeRule
data Inh_Types
Inh_Types :: Inh_Types
data Syn_Types
Syn_Types :: (Types) -> (Names) -> Syn_Types
self_Syn_Types :: Syn_Types -> (Types)
typevariables_Syn_Types :: Syn_Types -> (Names)
wrap_Types :: T_Types -> Inh_Types -> (Syn_Types)
sem_Types :: Types -> T_Types
newtype T_Types
T_Types :: Identity (T_Types_s179) -> T_Types
attach_T_Types :: T_Types -> Identity (T_Types_s179)
newtype T_Types_s179
C_Types_s179 :: (T_Types_v178) -> T_Types_s179
inv_Types_s179 :: T_Types_s179 -> (T_Types_v178)
data T_Types_s180
C_Types_s180 :: T_Types_s180
type T_Types_v178 = (T_Types_vIn178) -> (T_Types_vOut178)
data T_Types_vIn178
T_Types_vIn178 :: T_Types_vIn178
data T_Types_vOut178
T_Types_vOut178 :: (Types) -> (Names) -> T_Types_vOut178
sem_Types_Cons :: T_Type -> T_Types -> T_Types
sem_Types_Nil :: T_Types
data Inh_TypingStrategies
Inh_TypingStrategies :: Inh_TypingStrategies
data Syn_TypingStrategies
Syn_TypingStrategies :: (TypingStrategies) -> Syn_TypingStrategies
self_Syn_TypingStrategies :: Syn_TypingStrategies -> (TypingStrategies)
wrap_TypingStrategies :: T_TypingStrategies -> Inh_TypingStrategies -> (Syn_TypingStrategies)
sem_TypingStrategies :: TypingStrategies -> T_TypingStrategies
newtype T_TypingStrategies
T_TypingStrategies :: Identity (T_TypingStrategies_s182) -> T_TypingStrategies
attach_T_TypingStrategies :: T_TypingStrategies -> Identity (T_TypingStrategies_s182)
newtype T_TypingStrategies_s182
C_TypingStrategies_s182 :: (T_TypingStrategies_v181) -> T_TypingStrategies_s182
inv_TypingStrategies_s182 :: T_TypingStrategies_s182 -> (T_TypingStrategies_v181)
data T_TypingStrategies_s183
C_TypingStrategies_s183 :: T_TypingStrategies_s183
type T_TypingStrategies_v181 = (T_TypingStrategies_vIn181) -> (T_TypingStrategies_vOut181)
data T_TypingStrategies_vIn181
T_TypingStrategies_vIn181 :: T_TypingStrategies_vIn181
data T_TypingStrategies_vOut181
T_TypingStrategies_vOut181 :: (TypingStrategies) -> T_TypingStrategies_vOut181
sem_TypingStrategies_Cons :: T_TypingStrategy -> T_TypingStrategies -> T_TypingStrategies
sem_TypingStrategies_Nil :: T_TypingStrategies
data Inh_TypingStrategy
Inh_TypingStrategy :: (ImportEnvironment) -> Inh_TypingStrategy
importEnvironment_Inh_TypingStrategy :: Inh_TypingStrategy -> (ImportEnvironment)
data Syn_TypingStrategy
Syn_TypingStrategy :: (TS_Errors) -> (TypingStrategy) -> (TS_Warnings) -> Syn_TypingStrategy
errors_Syn_TypingStrategy :: Syn_TypingStrategy -> (TS_Errors)
self_Syn_TypingStrategy :: Syn_TypingStrategy -> (TypingStrategy)
warnings_Syn_TypingStrategy :: Syn_TypingStrategy -> (TS_Warnings)
wrap_TypingStrategy :: T_TypingStrategy -> Inh_TypingStrategy -> (Syn_TypingStrategy)
sem_TypingStrategy :: TypingStrategy -> T_TypingStrategy
newtype T_TypingStrategy
T_TypingStrategy :: Identity (T_TypingStrategy_s185) -> T_TypingStrategy
attach_T_TypingStrategy :: T_TypingStrategy -> Identity (T_TypingStrategy_s185)
newtype T_TypingStrategy_s185
C_TypingStrategy_s185 :: (T_TypingStrategy_v184) -> T_TypingStrategy_s185
inv_TypingStrategy_s185 :: T_TypingStrategy_s185 -> (T_TypingStrategy_v184)
data T_TypingStrategy_s186
C_TypingStrategy_s186 :: T_TypingStrategy_s186
type T_TypingStrategy_v184 = (T_TypingStrategy_vIn184) -> (T_TypingStrategy_vOut184)
data T_TypingStrategy_vIn184
T_TypingStrategy_vIn184 :: (ImportEnvironment) -> T_TypingStrategy_vIn184
data T_TypingStrategy_vOut184
T_TypingStrategy_vOut184 :: (TS_Errors) -> (TypingStrategy) -> (TS_Warnings) -> T_TypingStrategy_vOut184
sem_TypingStrategy_Siblings :: T_Names -> T_TypingStrategy
sem_TypingStrategy_TypingStrategy :: T_TypeRule -> T_UserStatements -> T_TypingStrategy
data Inh_UserStatement
Inh_UserStatement :: ([((String, Maybe String), MessageBlock)]) -> (Names) -> ([(Name, Tp)]) -> (ConstraintInfo) -> (TypeConstraints ConstraintInfo) -> (Predicates) -> Inh_UserStatement
attributeTable_Inh_UserStatement :: Inh_UserStatement -> ([((String, Maybe String), MessageBlock)])
metaVariableConstraintNames_Inh_UserStatement :: Inh_UserStatement -> (Names)
nameMap_Inh_UserStatement :: Inh_UserStatement -> ([(Name, Tp)])
standardConstraintInfo_Inh_UserStatement :: Inh_UserStatement -> (ConstraintInfo)
userConstraints_Inh_UserStatement :: Inh_UserStatement -> (TypeConstraints ConstraintInfo)
userPredicates_Inh_UserStatement :: Inh_UserStatement -> (Predicates)
data Syn_UserStatement
Syn_UserStatement :: (Names) -> (UserStatement) -> (Names) -> (TypeConstraints ConstraintInfo) -> (Predicates) -> Syn_UserStatement
metaVariableConstraintNames_Syn_UserStatement :: Syn_UserStatement -> (Names)
self_Syn_UserStatement :: Syn_UserStatement -> (UserStatement)
typevariables_Syn_UserStatement :: Syn_UserStatement -> (Names)
userConstraints_Syn_UserStatement :: Syn_UserStatement -> (TypeConstraints ConstraintInfo)
userPredicates_Syn_UserStatement :: Syn_UserStatement -> (Predicates)
wrap_UserStatement :: T_UserStatement -> Inh_UserStatement -> (Syn_UserStatement)
sem_UserStatement :: UserStatement -> T_UserStatement
newtype T_UserStatement
T_UserStatement :: Identity (T_UserStatement_s188) -> T_UserStatement
attach_T_UserStatement :: T_UserStatement -> Identity (T_UserStatement_s188)
newtype T_UserStatement_s188
C_UserStatement_s188 :: (T_UserStatement_v187) -> T_UserStatement_s188
inv_UserStatement_s188 :: T_UserStatement_s188 -> (T_UserStatement_v187)
data T_UserStatement_s189
C_UserStatement_s189 :: T_UserStatement_s189
type T_UserStatement_v187 = (T_UserStatement_vIn187) -> (T_UserStatement_vOut187)
data T_UserStatement_vIn187
T_UserStatement_vIn187 :: ([((String, Maybe String), MessageBlock)]) -> (Names) -> ([(Name, Tp)]) -> (ConstraintInfo) -> (TypeConstraints ConstraintInfo) -> (Predicates) -> T_UserStatement_vIn187
data T_UserStatement_vOut187
T_UserStatement_vOut187 :: (Names) -> (UserStatement) -> (Names) -> (TypeConstraints ConstraintInfo) -> (Predicates) -> T_UserStatement_vOut187
sem_UserStatement_Equal :: T_Type -> T_Type -> (String) -> T_UserStatement
sem_UserStatement_Pred :: T_Name -> T_Type -> (String) -> T_UserStatement
sem_UserStatement_MetaVariableConstraints :: T_Name -> T_UserStatement
sem_UserStatement_Phase :: (Int) -> T_UserStatement
data Inh_UserStatements
Inh_UserStatements :: ([((String, Maybe String), MessageBlock)]) -> (Names) -> ([(Name, Tp)]) -> (ConstraintInfo) -> (TypeConstraints ConstraintInfo) -> (Predicates) -> Inh_UserStatements
attributeTable_Inh_UserStatements :: Inh_UserStatements -> ([((String, Maybe String), MessageBlock)])
metaVariableConstraintNames_Inh_UserStatements :: Inh_UserStatements -> (Names)
nameMap_Inh_UserStatements :: Inh_UserStatements -> ([(Name, Tp)])
standardConstraintInfo_Inh_UserStatements :: Inh_UserStatements -> (ConstraintInfo)
userConstraints_Inh_UserStatements :: Inh_UserStatements -> (TypeConstraints ConstraintInfo)
userPredicates_Inh_UserStatements :: Inh_UserStatements -> (Predicates)
data Syn_UserStatements
Syn_UserStatements :: (Names) -> (UserStatements) -> (Names) -> (TypeConstraints ConstraintInfo) -> (Predicates) -> Syn_UserStatements
metaVariableConstraintNames_Syn_UserStatements :: Syn_UserStatements -> (Names)
self_Syn_UserStatements :: Syn_UserStatements -> (UserStatements)
typevariables_Syn_UserStatements :: Syn_UserStatements -> (Names)
userConstraints_Syn_UserStatements :: Syn_UserStatements -> (TypeConstraints ConstraintInfo)
userPredicates_Syn_UserStatements :: Syn_UserStatements -> (Predicates)
wrap_UserStatements :: T_UserStatements -> Inh_UserStatements -> (Syn_UserStatements)
sem_UserStatements :: UserStatements -> T_UserStatements
newtype T_UserStatements
T_UserStatements :: Identity (T_UserStatements_s191) -> T_UserStatements
attach_T_UserStatements :: T_UserStatements -> Identity (T_UserStatements_s191)
newtype T_UserStatements_s191
C_UserStatements_s191 :: (T_UserStatements_v190) -> T_UserStatements_s191
inv_UserStatements_s191 :: T_UserStatements_s191 -> (T_UserStatements_v190)
data T_UserStatements_s192
C_UserStatements_s192 :: T_UserStatements_s192
type T_UserStatements_v190 = (T_UserStatements_vIn190) -> (T_UserStatements_vOut190)
data T_UserStatements_vIn190
T_UserStatements_vIn190 :: ([((String, Maybe String), MessageBlock)]) -> (Names) -> ([(Name, Tp)]) -> (ConstraintInfo) -> (TypeConstraints ConstraintInfo) -> (Predicates) -> T_UserStatements_vIn190
data T_UserStatements_vOut190
T_UserStatements_vOut190 :: (Names) -> (UserStatements) -> (Names) -> (TypeConstraints ConstraintInfo) -> (Predicates) -> T_UserStatements_vOut190
sem_UserStatements_Cons :: T_UserStatement -> T_UserStatements -> T_UserStatements
sem_UserStatements_Nil :: T_UserStatements

module Helium.StaticAnalysis.Directives.TS_ToCore
typingStrategyToCore :: ImportEnvironment -> TypingStrategy -> Core_TypingStrategy
useNameMap :: [(Name, Tp)] -> Attribute -> Attribute
sem_Alternative :: Alternative -> T_Alternative
type T_Alternative = Alternative
data Inh_Alternative
Inh_Alternative :: Inh_Alternative
data Syn_Alternative
Syn_Alternative :: Alternative -> Syn_Alternative
self_Syn_Alternative :: Syn_Alternative -> Alternative
wrap_Alternative :: T_Alternative -> Inh_Alternative -> Syn_Alternative
sem_Alternative_Hole :: T_Range -> Integer -> T_Alternative
sem_Alternative_Feedback :: T_Range -> String -> T_Alternative -> T_Alternative
sem_Alternative_Alternative :: T_Range -> T_Pattern -> T_RightHandSide -> T_Alternative
sem_Alternative_Empty :: T_Range -> T_Alternative
sem_Alternatives :: Alternatives -> T_Alternatives
type T_Alternatives = Alternatives
data Inh_Alternatives
Inh_Alternatives :: Inh_Alternatives
data Syn_Alternatives
Syn_Alternatives :: Alternatives -> Syn_Alternatives
self_Syn_Alternatives :: Syn_Alternatives -> Alternatives
wrap_Alternatives :: T_Alternatives -> Inh_Alternatives -> Syn_Alternatives
sem_Alternatives_Cons :: T_Alternative -> T_Alternatives -> T_Alternatives
sem_Alternatives_Nil :: T_Alternatives
sem_AnnotatedType :: AnnotatedType -> T_AnnotatedType
type T_AnnotatedType = AnnotatedType
data Inh_AnnotatedType
Inh_AnnotatedType :: Inh_AnnotatedType
data Syn_AnnotatedType
Syn_AnnotatedType :: AnnotatedType -> Syn_AnnotatedType
self_Syn_AnnotatedType :: Syn_AnnotatedType -> AnnotatedType
wrap_AnnotatedType :: T_AnnotatedType -> Inh_AnnotatedType -> Syn_AnnotatedType
sem_AnnotatedType_AnnotatedType :: T_Range -> Bool -> T_Type -> T_AnnotatedType
sem_AnnotatedTypes :: AnnotatedTypes -> T_AnnotatedTypes
type T_AnnotatedTypes = AnnotatedTypes
data Inh_AnnotatedTypes
Inh_AnnotatedTypes :: Inh_AnnotatedTypes
data Syn_AnnotatedTypes
Syn_AnnotatedTypes :: AnnotatedTypes -> Syn_AnnotatedTypes
self_Syn_AnnotatedTypes :: Syn_AnnotatedTypes -> AnnotatedTypes
wrap_AnnotatedTypes :: T_AnnotatedTypes -> Inh_AnnotatedTypes -> Syn_AnnotatedTypes
sem_AnnotatedTypes_Cons :: T_AnnotatedType -> T_AnnotatedTypes -> T_AnnotatedTypes
sem_AnnotatedTypes_Nil :: T_AnnotatedTypes
sem_Body :: Body -> T_Body
type T_Body = Body
data Inh_Body
Inh_Body :: Inh_Body
data Syn_Body
Syn_Body :: Body -> Syn_Body
self_Syn_Body :: Syn_Body -> Body
wrap_Body :: T_Body -> Inh_Body -> Syn_Body
sem_Body_Hole :: T_Range -> Integer -> T_Body
sem_Body_Body :: T_Range -> T_ImportDeclarations -> T_Declarations -> T_Body
sem_Constructor :: Constructor -> T_Constructor
type T_Constructor = Constructor
data Inh_Constructor
Inh_Constructor :: Inh_Constructor
data Syn_Constructor
Syn_Constructor :: Constructor -> Syn_Constructor
self_Syn_Constructor :: Syn_Constructor -> Constructor
wrap_Constructor :: T_Constructor -> Inh_Constructor -> Syn_Constructor
sem_Constructor_Constructor :: T_Range -> T_Name -> T_AnnotatedTypes -> T_Constructor
sem_Constructor_Infix :: T_Range -> T_AnnotatedType -> T_Name -> T_AnnotatedType -> T_Constructor
sem_Constructor_Record :: T_Range -> T_Name -> T_FieldDeclarations -> T_Constructor
sem_Constructors :: Constructors -> T_Constructors
type T_Constructors = Constructors
data Inh_Constructors
Inh_Constructors :: Inh_Constructors
data Syn_Constructors
Syn_Constructors :: Constructors -> Syn_Constructors
self_Syn_Constructors :: Syn_Constructors -> Constructors
wrap_Constructors :: T_Constructors -> Inh_Constructors -> Syn_Constructors
sem_Constructors_Cons :: T_Constructor -> T_Constructors -> T_Constructors
sem_Constructors_Nil :: T_Constructors
sem_ContextItem :: ContextItem -> T_ContextItem
type T_ContextItem = ContextItem
data Inh_ContextItem
Inh_ContextItem :: Inh_ContextItem
data Syn_ContextItem
Syn_ContextItem :: ContextItem -> Syn_ContextItem
self_Syn_ContextItem :: Syn_ContextItem -> ContextItem
wrap_ContextItem :: T_ContextItem -> Inh_ContextItem -> Syn_ContextItem
sem_ContextItem_ContextItem :: T_Range -> T_Name -> T_Types -> T_ContextItem
sem_ContextItems :: ContextItems -> T_ContextItems
type T_ContextItems = ContextItems
data Inh_ContextItems
Inh_ContextItems :: Inh_ContextItems
data Syn_ContextItems
Syn_ContextItems :: ContextItems -> Syn_ContextItems
self_Syn_ContextItems :: Syn_ContextItems -> ContextItems
wrap_ContextItems :: T_ContextItems -> Inh_ContextItems -> Syn_ContextItems
sem_ContextItems_Cons :: T_ContextItem -> T_ContextItems -> T_ContextItems
sem_ContextItems_Nil :: T_ContextItems
sem_Declaration :: Declaration -> T_Declaration
type T_Declaration = Declaration
data Inh_Declaration
Inh_Declaration :: Inh_Declaration
data Syn_Declaration
Syn_Declaration :: Declaration -> Syn_Declaration
self_Syn_Declaration :: Syn_Declaration -> Declaration
wrap_Declaration :: T_Declaration -> Inh_Declaration -> Syn_Declaration
sem_Declaration_Hole :: T_Range -> Integer -> T_Declaration
sem_Declaration_Type :: T_Range -> T_SimpleType -> T_Type -> T_Declaration
sem_Declaration_Data :: T_Range -> T_ContextItems -> T_SimpleType -> T_Constructors -> T_Names -> T_Declaration
sem_Declaration_Newtype :: T_Range -> T_ContextItems -> T_SimpleType -> T_Constructor -> T_Names -> T_Declaration
sem_Declaration_Class :: T_Range -> T_ContextItems -> T_SimpleType -> T_MaybeDeclarations -> T_Declaration
sem_Declaration_Instance :: T_Range -> T_ContextItems -> T_Name -> T_Types -> T_MaybeDeclarations -> T_Declaration
sem_Declaration_Default :: T_Range -> T_Types -> T_Declaration
sem_Declaration_FunctionBindings :: T_Range -> T_FunctionBindings -> T_Declaration
sem_Declaration_PatternBinding :: T_Range -> T_Pattern -> T_RightHandSide -> T_Declaration
sem_Declaration_TypeSignature :: T_Range -> T_Names -> T_Type -> T_Declaration
sem_Declaration_Fixity :: T_Range -> T_Fixity -> T_MaybeInt -> T_Names -> T_Declaration
sem_Declaration_Empty :: T_Range -> T_Declaration
sem_Declarations :: Declarations -> T_Declarations
type T_Declarations = Declarations
data Inh_Declarations
Inh_Declarations :: Inh_Declarations
data Syn_Declarations
Syn_Declarations :: Declarations -> Syn_Declarations
self_Syn_Declarations :: Syn_Declarations -> Declarations
wrap_Declarations :: T_Declarations -> Inh_Declarations -> Syn_Declarations
sem_Declarations_Cons :: T_Declaration -> T_Declarations -> T_Declarations
sem_Declarations_Nil :: T_Declarations
sem_Export :: Export -> T_Export
type T_Export = Export
data Inh_Export
Inh_Export :: Inh_Export
data Syn_Export
Syn_Export :: Export -> Syn_Export
self_Syn_Export :: Syn_Export -> Export
wrap_Export :: T_Export -> Inh_Export -> Syn_Export
sem_Export_Variable :: T_Range -> T_Name -> T_Export
sem_Export_TypeOrClass :: T_Range -> T_Name -> T_MaybeNames -> T_Export
sem_Export_TypeOrClassComplete :: T_Range -> T_Name -> T_Export
sem_Export_Module :: T_Range -> T_Name -> T_Export
sem_Exports :: Exports -> T_Exports
type T_Exports = Exports
data Inh_Exports
Inh_Exports :: Inh_Exports
data Syn_Exports
Syn_Exports :: Exports -> Syn_Exports
self_Syn_Exports :: Syn_Exports -> Exports
wrap_Exports :: T_Exports -> Inh_Exports -> Syn_Exports
sem_Exports_Cons :: T_Export -> T_Exports -> T_Exports
sem_Exports_Nil :: T_Exports
sem_Expression :: Expression -> T_Expression
type T_Expression = Expression
data Inh_Expression
Inh_Expression :: Inh_Expression
data Syn_Expression
Syn_Expression :: Expression -> Syn_Expression
self_Syn_Expression :: Syn_Expression -> Expression
wrap_Expression :: T_Expression -> Inh_Expression -> Syn_Expression
sem_Expression_Hole :: T_Range -> Integer -> T_Expression
sem_Expression_Feedback :: T_Range -> String -> T_Expression -> T_Expression
sem_Expression_MustUse :: T_Range -> T_Expression -> T_Expression
sem_Expression_Literal :: T_Range -> T_Literal -> T_Expression
sem_Expression_Variable :: T_Range -> T_Name -> T_Expression
sem_Expression_Constructor :: T_Range -> T_Name -> T_Expression
sem_Expression_Parenthesized :: T_Range -> T_Expression -> T_Expression
sem_Expression_NormalApplication :: T_Range -> T_Expression -> T_Expressions -> T_Expression
sem_Expression_InfixApplication :: T_Range -> T_MaybeExpression -> T_Expression -> T_MaybeExpression -> T_Expression
sem_Expression_If :: T_Range -> T_Expression -> T_Expression -> T_Expression -> T_Expression
sem_Expression_Lambda :: T_Range -> T_Patterns -> T_Expression -> T_Expression
sem_Expression_Case :: T_Range -> T_Expression -> T_Alternatives -> T_Expression
sem_Expression_Let :: T_Range -> T_Declarations -> T_Expression -> T_Expression
sem_Expression_Do :: T_Range -> T_Statements -> T_Expression
sem_Expression_List :: T_Range -> T_Expressions -> T_Expression
sem_Expression_Tuple :: T_Range -> T_Expressions -> T_Expression
sem_Expression_Comprehension :: T_Range -> T_Expression -> T_Qualifiers -> T_Expression
sem_Expression_Typed :: T_Range -> T_Expression -> T_Type -> T_Expression
sem_Expression_RecordConstruction :: T_Range -> T_Name -> T_RecordExpressionBindings -> T_Expression
sem_Expression_RecordUpdate :: T_Range -> T_Expression -> T_RecordExpressionBindings -> T_Expression
sem_Expression_Enum :: T_Range -> T_Expression -> T_MaybeExpression -> T_MaybeExpression -> T_Expression
sem_Expression_Negate :: T_Range -> T_Expression -> T_Expression
sem_Expression_NegateFloat :: T_Range -> T_Expression -> T_Expression
sem_Expressions :: Expressions -> T_Expressions
type T_Expressions = Expressions
data Inh_Expressions
Inh_Expressions :: Inh_Expressions
data Syn_Expressions
Syn_Expressions :: Expressions -> Syn_Expressions
self_Syn_Expressions :: Syn_Expressions -> Expressions
wrap_Expressions :: T_Expressions -> Inh_Expressions -> Syn_Expressions
sem_Expressions_Cons :: T_Expression -> T_Expressions -> T_Expressions
sem_Expressions_Nil :: T_Expressions
sem_FieldDeclaration :: FieldDeclaration -> T_FieldDeclaration
type T_FieldDeclaration = FieldDeclaration
data Inh_FieldDeclaration
Inh_FieldDeclaration :: Inh_FieldDeclaration
data Syn_FieldDeclaration
Syn_FieldDeclaration :: FieldDeclaration -> Syn_FieldDeclaration
self_Syn_FieldDeclaration :: Syn_FieldDeclaration -> FieldDeclaration
wrap_FieldDeclaration :: T_FieldDeclaration -> Inh_FieldDeclaration -> Syn_FieldDeclaration
sem_FieldDeclaration_FieldDeclaration :: T_Range -> T_Names -> T_AnnotatedType -> T_FieldDeclaration
sem_FieldDeclarations :: FieldDeclarations -> T_FieldDeclarations
type T_FieldDeclarations = FieldDeclarations
data Inh_FieldDeclarations
Inh_FieldDeclarations :: Inh_FieldDeclarations
data Syn_FieldDeclarations
Syn_FieldDeclarations :: FieldDeclarations -> Syn_FieldDeclarations
self_Syn_FieldDeclarations :: Syn_FieldDeclarations -> FieldDeclarations
wrap_FieldDeclarations :: T_FieldDeclarations -> Inh_FieldDeclarations -> Syn_FieldDeclarations
sem_FieldDeclarations_Cons :: T_FieldDeclaration -> T_FieldDeclarations -> T_FieldDeclarations
sem_FieldDeclarations_Nil :: T_FieldDeclarations
sem_Fixity :: Fixity -> T_Fixity
type T_Fixity = Fixity
data Inh_Fixity
Inh_Fixity :: Inh_Fixity
data Syn_Fixity
Syn_Fixity :: Fixity -> Syn_Fixity
self_Syn_Fixity :: Syn_Fixity -> Fixity
wrap_Fixity :: T_Fixity -> Inh_Fixity -> Syn_Fixity
sem_Fixity_Infixl :: T_Range -> T_Fixity
sem_Fixity_Infixr :: T_Range -> T_Fixity
sem_Fixity_Infix :: T_Range -> T_Fixity
sem_FunctionBinding :: FunctionBinding -> T_FunctionBinding
type T_FunctionBinding = FunctionBinding
data Inh_FunctionBinding
Inh_FunctionBinding :: Inh_FunctionBinding
data Syn_FunctionBinding
Syn_FunctionBinding :: FunctionBinding -> Syn_FunctionBinding
self_Syn_FunctionBinding :: Syn_FunctionBinding -> FunctionBinding
wrap_FunctionBinding :: T_FunctionBinding -> Inh_FunctionBinding -> Syn_FunctionBinding
sem_FunctionBinding_Hole :: T_Range -> Integer -> T_FunctionBinding
sem_FunctionBinding_Feedback :: T_Range -> String -> T_FunctionBinding -> T_FunctionBinding
sem_FunctionBinding_FunctionBinding :: T_Range -> T_LeftHandSide -> T_RightHandSide -> T_FunctionBinding
sem_FunctionBindings :: FunctionBindings -> T_FunctionBindings
type T_FunctionBindings = FunctionBindings
data Inh_FunctionBindings
Inh_FunctionBindings :: Inh_FunctionBindings
data Syn_FunctionBindings
Syn_FunctionBindings :: FunctionBindings -> Syn_FunctionBindings
self_Syn_FunctionBindings :: Syn_FunctionBindings -> FunctionBindings
wrap_FunctionBindings :: T_FunctionBindings -> Inh_FunctionBindings -> Syn_FunctionBindings
sem_FunctionBindings_Cons :: T_FunctionBinding -> T_FunctionBindings -> T_FunctionBindings
sem_FunctionBindings_Nil :: T_FunctionBindings
sem_GuardedExpression :: GuardedExpression -> T_GuardedExpression
type T_GuardedExpression = GuardedExpression
data Inh_GuardedExpression
Inh_GuardedExpression :: Inh_GuardedExpression
data Syn_GuardedExpression
Syn_GuardedExpression :: GuardedExpression -> Syn_GuardedExpression
self_Syn_GuardedExpression :: Syn_GuardedExpression -> GuardedExpression
wrap_GuardedExpression :: T_GuardedExpression -> Inh_GuardedExpression -> Syn_GuardedExpression
sem_GuardedExpression_GuardedExpression :: T_Range -> T_Expression -> T_Expression -> T_GuardedExpression
sem_GuardedExpressions :: GuardedExpressions -> T_GuardedExpressions
type T_GuardedExpressions = GuardedExpressions
data Inh_GuardedExpressions
Inh_GuardedExpressions :: Inh_GuardedExpressions
data Syn_GuardedExpressions
Syn_GuardedExpressions :: GuardedExpressions -> Syn_GuardedExpressions
self_Syn_GuardedExpressions :: Syn_GuardedExpressions -> GuardedExpressions
wrap_GuardedExpressions :: T_GuardedExpressions -> Inh_GuardedExpressions -> Syn_GuardedExpressions
sem_GuardedExpressions_Cons :: T_GuardedExpression -> T_GuardedExpressions -> T_GuardedExpressions
sem_GuardedExpressions_Nil :: T_GuardedExpressions
sem_Import :: Import -> T_Import
type T_Import = Import
data Inh_Import
Inh_Import :: Inh_Import
data Syn_Import
Syn_Import :: Import -> Syn_Import
self_Syn_Import :: Syn_Import -> Import
wrap_Import :: T_Import -> Inh_Import -> Syn_Import
sem_Import_Variable :: T_Range -> T_Name -> T_Import
sem_Import_TypeOrClass :: T_Range -> T_Name -> T_MaybeNames -> T_Import
sem_Import_TypeOrClassComplete :: T_Range -> T_Name -> T_Import
sem_ImportDeclaration :: ImportDeclaration -> T_ImportDeclaration
type T_ImportDeclaration = ImportDeclaration
data Inh_ImportDeclaration
Inh_ImportDeclaration :: Inh_ImportDeclaration
data Syn_ImportDeclaration
Syn_ImportDeclaration :: ImportDeclaration -> Syn_ImportDeclaration
self_Syn_ImportDeclaration :: Syn_ImportDeclaration -> ImportDeclaration
wrap_ImportDeclaration :: T_ImportDeclaration -> Inh_ImportDeclaration -> Syn_ImportDeclaration
sem_ImportDeclaration_Import :: T_Range -> Bool -> T_Name -> T_MaybeName -> T_MaybeImportSpecification -> T_ImportDeclaration
sem_ImportDeclaration_Empty :: T_Range -> T_ImportDeclaration
sem_ImportDeclarations :: ImportDeclarations -> T_ImportDeclarations
type T_ImportDeclarations = ImportDeclarations
data Inh_ImportDeclarations
Inh_ImportDeclarations :: Inh_ImportDeclarations
data Syn_ImportDeclarations
Syn_ImportDeclarations :: ImportDeclarations -> Syn_ImportDeclarations
self_Syn_ImportDeclarations :: Syn_ImportDeclarations -> ImportDeclarations
wrap_ImportDeclarations :: T_ImportDeclarations -> Inh_ImportDeclarations -> Syn_ImportDeclarations
sem_ImportDeclarations_Cons :: T_ImportDeclaration -> T_ImportDeclarations -> T_ImportDeclarations
sem_ImportDeclarations_Nil :: T_ImportDeclarations
sem_ImportSpecification :: ImportSpecification -> T_ImportSpecification
type T_ImportSpecification = ImportSpecification
data Inh_ImportSpecification
Inh_ImportSpecification :: Inh_ImportSpecification
data Syn_ImportSpecification
Syn_ImportSpecification :: ImportSpecification -> Syn_ImportSpecification
self_Syn_ImportSpecification :: Syn_ImportSpecification -> ImportSpecification
wrap_ImportSpecification :: T_ImportSpecification -> Inh_ImportSpecification -> Syn_ImportSpecification
sem_ImportSpecification_Import :: T_Range -> Bool -> T_Imports -> T_ImportSpecification
sem_Imports :: Imports -> T_Imports
type T_Imports = Imports
data Inh_Imports
Inh_Imports :: Inh_Imports
data Syn_Imports
Syn_Imports :: Imports -> Syn_Imports
self_Syn_Imports :: Syn_Imports -> Imports
wrap_Imports :: T_Imports -> Inh_Imports -> Syn_Imports
sem_Imports_Cons :: T_Import -> T_Imports -> T_Imports
sem_Imports_Nil :: T_Imports
sem_Judgement :: Judgement -> T_Judgement
type T_Judgement = ([(Name, Tp)]) -> (Tp, Core_Judgement, Judgement, Expression, Names)
data Inh_Judgement
Inh_Judgement :: ([(Name, Tp)]) -> Inh_Judgement
nameMap_Inh_Judgement :: Inh_Judgement -> ([(Name, Tp)])
data Syn_Judgement
Syn_Judgement :: Tp -> Core_Judgement -> Judgement -> Expression -> Names -> Syn_Judgement
conclusionType_Syn_Judgement :: Syn_Judgement -> Tp
core_Syn_Judgement :: Syn_Judgement -> Core_Judgement
self_Syn_Judgement :: Syn_Judgement -> Judgement
theExpression_Syn_Judgement :: Syn_Judgement -> Expression
typevariables_Syn_Judgement :: Syn_Judgement -> Names
wrap_Judgement :: T_Judgement -> Inh_Judgement -> Syn_Judgement
sem_Judgement_Judgement :: T_Expression -> T_Type -> T_Judgement
sem_LeftHandSide :: LeftHandSide -> T_LeftHandSide
type T_LeftHandSide = LeftHandSide
data Inh_LeftHandSide
Inh_LeftHandSide :: Inh_LeftHandSide
data Syn_LeftHandSide
Syn_LeftHandSide :: LeftHandSide -> Syn_LeftHandSide
self_Syn_LeftHandSide :: Syn_LeftHandSide -> LeftHandSide
wrap_LeftHandSide :: T_LeftHandSide -> Inh_LeftHandSide -> Syn_LeftHandSide
sem_LeftHandSide_Function :: T_Range -> T_Name -> T_Patterns -> T_LeftHandSide
sem_LeftHandSide_Infix :: T_Range -> T_Pattern -> T_Name -> T_Pattern -> T_LeftHandSide
sem_LeftHandSide_Parenthesized :: T_Range -> T_LeftHandSide -> T_Patterns -> T_LeftHandSide
sem_Literal :: Literal -> T_Literal
type T_Literal = Literal
data Inh_Literal
Inh_Literal :: Inh_Literal
data Syn_Literal
Syn_Literal :: Literal -> Syn_Literal
self_Syn_Literal :: Syn_Literal -> Literal
wrap_Literal :: T_Literal -> Inh_Literal -> Syn_Literal
sem_Literal_Int :: T_Range -> String -> T_Literal
sem_Literal_Char :: T_Range -> String -> T_Literal
sem_Literal_Float :: T_Range -> String -> T_Literal
sem_Literal_String :: T_Range -> String -> T_Literal
sem_MaybeDeclarations :: MaybeDeclarations -> T_MaybeDeclarations
type T_MaybeDeclarations = MaybeDeclarations
data Inh_MaybeDeclarations
Inh_MaybeDeclarations :: Inh_MaybeDeclarations
data Syn_MaybeDeclarations
Syn_MaybeDeclarations :: MaybeDeclarations -> Syn_MaybeDeclarations
self_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> MaybeDeclarations
wrap_MaybeDeclarations :: T_MaybeDeclarations -> Inh_MaybeDeclarations -> Syn_MaybeDeclarations
sem_MaybeDeclarations_Nothing :: T_MaybeDeclarations
sem_MaybeDeclarations_Just :: T_Declarations -> T_MaybeDeclarations
sem_MaybeExports :: MaybeExports -> T_MaybeExports
type T_MaybeExports = MaybeExports
data Inh_MaybeExports
Inh_MaybeExports :: Inh_MaybeExports
data Syn_MaybeExports
Syn_MaybeExports :: MaybeExports -> Syn_MaybeExports
self_Syn_MaybeExports :: Syn_MaybeExports -> MaybeExports
wrap_MaybeExports :: T_MaybeExports -> Inh_MaybeExports -> Syn_MaybeExports
sem_MaybeExports_Nothing :: T_MaybeExports
sem_MaybeExports_Just :: T_Exports -> T_MaybeExports
sem_MaybeExpression :: MaybeExpression -> T_MaybeExpression
type T_MaybeExpression = MaybeExpression
data Inh_MaybeExpression
Inh_MaybeExpression :: Inh_MaybeExpression
data Syn_MaybeExpression
Syn_MaybeExpression :: MaybeExpression -> Syn_MaybeExpression
self_Syn_MaybeExpression :: Syn_MaybeExpression -> MaybeExpression
wrap_MaybeExpression :: T_MaybeExpression -> Inh_MaybeExpression -> Syn_MaybeExpression
sem_MaybeExpression_Nothing :: T_MaybeExpression
sem_MaybeExpression_Just :: T_Expression -> T_MaybeExpression
sem_MaybeImportSpecification :: MaybeImportSpecification -> T_MaybeImportSpecification
type T_MaybeImportSpecification = MaybeImportSpecification
data Inh_MaybeImportSpecification
Inh_MaybeImportSpecification :: Inh_MaybeImportSpecification
data Syn_MaybeImportSpecification
Syn_MaybeImportSpecification :: MaybeImportSpecification -> Syn_MaybeImportSpecification
self_Syn_MaybeImportSpecification :: Syn_MaybeImportSpecification -> MaybeImportSpecification
wrap_MaybeImportSpecification :: T_MaybeImportSpecification -> Inh_MaybeImportSpecification -> Syn_MaybeImportSpecification
sem_MaybeImportSpecification_Nothing :: T_MaybeImportSpecification
sem_MaybeImportSpecification_Just :: T_ImportSpecification -> T_MaybeImportSpecification
sem_MaybeInt :: MaybeInt -> T_MaybeInt
type T_MaybeInt = MaybeInt
data Inh_MaybeInt
Inh_MaybeInt :: Inh_MaybeInt
data Syn_MaybeInt
Syn_MaybeInt :: MaybeInt -> Syn_MaybeInt
self_Syn_MaybeInt :: Syn_MaybeInt -> MaybeInt
wrap_MaybeInt :: T_MaybeInt -> Inh_MaybeInt -> Syn_MaybeInt
sem_MaybeInt_Nothing :: T_MaybeInt
sem_MaybeInt_Just :: Int -> T_MaybeInt
sem_MaybeName :: MaybeName -> T_MaybeName
type T_MaybeName = MaybeName
data Inh_MaybeName
Inh_MaybeName :: Inh_MaybeName
data Syn_MaybeName
Syn_MaybeName :: MaybeName -> Syn_MaybeName
self_Syn_MaybeName :: Syn_MaybeName -> MaybeName
wrap_MaybeName :: T_MaybeName -> Inh_MaybeName -> Syn_MaybeName
sem_MaybeName_Nothing :: T_MaybeName
sem_MaybeName_Just :: T_Name -> T_MaybeName
sem_MaybeNames :: MaybeNames -> T_MaybeNames
type T_MaybeNames = MaybeNames
data Inh_MaybeNames
Inh_MaybeNames :: Inh_MaybeNames
data Syn_MaybeNames
Syn_MaybeNames :: MaybeNames -> Syn_MaybeNames
self_Syn_MaybeNames :: Syn_MaybeNames -> MaybeNames
wrap_MaybeNames :: T_MaybeNames -> Inh_MaybeNames -> Syn_MaybeNames
sem_MaybeNames_Nothing :: T_MaybeNames
sem_MaybeNames_Just :: T_Names -> T_MaybeNames
sem_Module :: Module -> T_Module
type T_Module = Module
data Inh_Module
Inh_Module :: Inh_Module
data Syn_Module
Syn_Module :: Module -> Syn_Module
self_Syn_Module :: Syn_Module -> Module
wrap_Module :: T_Module -> Inh_Module -> Syn_Module
sem_Module_Module :: T_Range -> T_MaybeName -> T_MaybeExports -> T_Body -> T_Module
sem_Name :: Name -> T_Name
type T_Name = Name
data Inh_Name
Inh_Name :: Inh_Name
data Syn_Name
Syn_Name :: Name -> Syn_Name
self_Syn_Name :: Syn_Name -> Name
wrap_Name :: T_Name -> Inh_Name -> Syn_Name
sem_Name_Identifier :: T_Range -> T_Strings -> String -> T_Name
sem_Name_Operator :: T_Range -> T_Strings -> String -> T_Name
sem_Name_Special :: T_Range -> T_Strings -> String -> T_Name
sem_Names :: Names -> T_Names
type T_Names = Names
data Inh_Names
Inh_Names :: Inh_Names
data Syn_Names
Syn_Names :: Names -> Syn_Names
self_Syn_Names :: Syn_Names -> Names
wrap_Names :: T_Names -> Inh_Names -> Syn_Names
sem_Names_Cons :: T_Name -> T_Names -> T_Names
sem_Names_Nil :: T_Names
sem_Pattern :: Pattern -> T_Pattern
type T_Pattern = Pattern
data Inh_Pattern
Inh_Pattern :: Inh_Pattern
data Syn_Pattern
Syn_Pattern :: Pattern -> Syn_Pattern
self_Syn_Pattern :: Syn_Pattern -> Pattern
wrap_Pattern :: T_Pattern -> Inh_Pattern -> Syn_Pattern
sem_Pattern_Hole :: T_Range -> Integer -> T_Pattern
sem_Pattern_Literal :: T_Range -> T_Literal -> T_Pattern
sem_Pattern_Variable :: T_Range -> T_Name -> T_Pattern
sem_Pattern_Constructor :: T_Range -> T_Name -> T_Patterns -> T_Pattern
sem_Pattern_Parenthesized :: T_Range -> T_Pattern -> T_Pattern
sem_Pattern_InfixConstructor :: T_Range -> T_Pattern -> T_Name -> T_Pattern -> T_Pattern
sem_Pattern_List :: T_Range -> T_Patterns -> T_Pattern
sem_Pattern_Tuple :: T_Range -> T_Patterns -> T_Pattern
sem_Pattern_Record :: T_Range -> T_Name -> T_RecordPatternBindings -> T_Pattern
sem_Pattern_Negate :: T_Range -> T_Literal -> T_Pattern
sem_Pattern_As :: T_Range -> T_Name -> T_Pattern -> T_Pattern
sem_Pattern_Wildcard :: T_Range -> T_Pattern
sem_Pattern_Irrefutable :: T_Range -> T_Pattern -> T_Pattern
sem_Pattern_Successor :: T_Range -> T_Name -> T_Literal -> T_Pattern
sem_Pattern_NegateFloat :: T_Range -> T_Literal -> T_Pattern
sem_Patterns :: Patterns -> T_Patterns
type T_Patterns = Patterns
data Inh_Patterns
Inh_Patterns :: Inh_Patterns
data Syn_Patterns
Syn_Patterns :: Patterns -> Syn_Patterns
self_Syn_Patterns :: Syn_Patterns -> Patterns
wrap_Patterns :: T_Patterns -> Inh_Patterns -> Syn_Patterns
sem_Patterns_Cons :: T_Pattern -> T_Patterns -> T_Patterns
sem_Patterns_Nil :: T_Patterns
sem_Position :: Position -> T_Position
type T_Position = Position
data Inh_Position
Inh_Position :: Inh_Position
data Syn_Position
Syn_Position :: Position -> Syn_Position
self_Syn_Position :: Syn_Position -> Position
wrap_Position :: T_Position -> Inh_Position -> Syn_Position
sem_Position_Position :: String -> Int -> Int -> T_Position
sem_Position_Unknown :: T_Position
sem_Qualifier :: Qualifier -> T_Qualifier
type T_Qualifier = Qualifier
data Inh_Qualifier
Inh_Qualifier :: Inh_Qualifier
data Syn_Qualifier
Syn_Qualifier :: Qualifier -> Syn_Qualifier
self_Syn_Qualifier :: Syn_Qualifier -> Qualifier
wrap_Qualifier :: T_Qualifier -> Inh_Qualifier -> Syn_Qualifier
sem_Qualifier_Guard :: T_Range -> T_Expression -> T_Qualifier
sem_Qualifier_Let :: T_Range -> T_Declarations -> T_Qualifier
sem_Qualifier_Generator :: T_Range -> T_Pattern -> T_Expression -> T_Qualifier
sem_Qualifier_Empty :: T_Range -> T_Qualifier
sem_Qualifiers :: Qualifiers -> T_Qualifiers
type T_Qualifiers = Qualifiers
data Inh_Qualifiers
Inh_Qualifiers :: Inh_Qualifiers
data Syn_Qualifiers
Syn_Qualifiers :: Qualifiers -> Syn_Qualifiers
self_Syn_Qualifiers :: Syn_Qualifiers -> Qualifiers
wrap_Qualifiers :: T_Qualifiers -> Inh_Qualifiers -> Syn_Qualifiers
sem_Qualifiers_Cons :: T_Qualifier -> T_Qualifiers -> T_Qualifiers
sem_Qualifiers_Nil :: T_Qualifiers
sem_Range :: Range -> T_Range
type T_Range = Range
data Inh_Range
Inh_Range :: Inh_Range
data Syn_Range
Syn_Range :: Range -> Syn_Range
self_Syn_Range :: Syn_Range -> Range
wrap_Range :: T_Range -> Inh_Range -> Syn_Range
sem_Range_Range :: T_Position -> T_Position -> T_Range
sem_RecordExpressionBinding :: RecordExpressionBinding -> T_RecordExpressionBinding
type T_RecordExpressionBinding = RecordExpressionBinding
data Inh_RecordExpressionBinding
Inh_RecordExpressionBinding :: Inh_RecordExpressionBinding
data Syn_RecordExpressionBinding
Syn_RecordExpressionBinding :: RecordExpressionBinding -> Syn_RecordExpressionBinding
self_Syn_RecordExpressionBinding :: Syn_RecordExpressionBinding -> RecordExpressionBinding
wrap_RecordExpressionBinding :: T_RecordExpressionBinding -> Inh_RecordExpressionBinding -> Syn_RecordExpressionBinding
sem_RecordExpressionBinding_RecordExpressionBinding :: T_Range -> T_Name -> T_Expression -> T_RecordExpressionBinding
sem_RecordExpressionBindings :: RecordExpressionBindings -> T_RecordExpressionBindings
type T_RecordExpressionBindings = RecordExpressionBindings
data Inh_RecordExpressionBindings
Inh_RecordExpressionBindings :: Inh_RecordExpressionBindings
data Syn_RecordExpressionBindings
Syn_RecordExpressionBindings :: RecordExpressionBindings -> Syn_RecordExpressionBindings
self_Syn_RecordExpressionBindings :: Syn_RecordExpressionBindings -> RecordExpressionBindings
wrap_RecordExpressionBindings :: T_RecordExpressionBindings -> Inh_RecordExpressionBindings -> Syn_RecordExpressionBindings
sem_RecordExpressionBindings_Cons :: T_RecordExpressionBinding -> T_RecordExpressionBindings -> T_RecordExpressionBindings
sem_RecordExpressionBindings_Nil :: T_RecordExpressionBindings
sem_RecordPatternBinding :: RecordPatternBinding -> T_RecordPatternBinding
type T_RecordPatternBinding = RecordPatternBinding
data Inh_RecordPatternBinding
Inh_RecordPatternBinding :: Inh_RecordPatternBinding
data Syn_RecordPatternBinding
Syn_RecordPatternBinding :: RecordPatternBinding -> Syn_RecordPatternBinding
self_Syn_RecordPatternBinding :: Syn_RecordPatternBinding -> RecordPatternBinding
wrap_RecordPatternBinding :: T_RecordPatternBinding -> Inh_RecordPatternBinding -> Syn_RecordPatternBinding
sem_RecordPatternBinding_RecordPatternBinding :: T_Range -> T_Name -> T_Pattern -> T_RecordPatternBinding
sem_RecordPatternBindings :: RecordPatternBindings -> T_RecordPatternBindings
type T_RecordPatternBindings = RecordPatternBindings
data Inh_RecordPatternBindings
Inh_RecordPatternBindings :: Inh_RecordPatternBindings
data Syn_RecordPatternBindings
Syn_RecordPatternBindings :: RecordPatternBindings -> Syn_RecordPatternBindings
self_Syn_RecordPatternBindings :: Syn_RecordPatternBindings -> RecordPatternBindings
wrap_RecordPatternBindings :: T_RecordPatternBindings -> Inh_RecordPatternBindings -> Syn_RecordPatternBindings
sem_RecordPatternBindings_Cons :: T_RecordPatternBinding -> T_RecordPatternBindings -> T_RecordPatternBindings
sem_RecordPatternBindings_Nil :: T_RecordPatternBindings
sem_RightHandSide :: RightHandSide -> T_RightHandSide
type T_RightHandSide = RightHandSide
data Inh_RightHandSide
Inh_RightHandSide :: Inh_RightHandSide
data Syn_RightHandSide
Syn_RightHandSide :: RightHandSide -> Syn_RightHandSide
self_Syn_RightHandSide :: Syn_RightHandSide -> RightHandSide
wrap_RightHandSide :: T_RightHandSide -> Inh_RightHandSide -> Syn_RightHandSide
sem_RightHandSide_Expression :: T_Range -> T_Expression -> T_MaybeDeclarations -> T_RightHandSide
sem_RightHandSide_Guarded :: T_Range -> T_GuardedExpressions -> T_MaybeDeclarations -> T_RightHandSide
sem_SimpleJudgement :: SimpleJudgement -> T_SimpleJudgement
type T_SimpleJudgement = ([(Name, Tp)]) -> ([(String, Tp)]) -> (Core_Judgement, SimpleJudgement, [(String, Tp)], Names)
data Inh_SimpleJudgement
Inh_SimpleJudgement :: ([(Name, Tp)]) -> ([(String, Tp)]) -> Inh_SimpleJudgement
nameMap_Inh_SimpleJudgement :: Inh_SimpleJudgement -> ([(Name, Tp)])
simpleJudgements_Inh_SimpleJudgement :: Inh_SimpleJudgement -> ([(String, Tp)])
data Syn_SimpleJudgement
Syn_SimpleJudgement :: Core_Judgement -> SimpleJudgement -> ([(String, Tp)]) -> Names -> Syn_SimpleJudgement
core_Syn_SimpleJudgement :: Syn_SimpleJudgement -> Core_Judgement
self_Syn_SimpleJudgement :: Syn_SimpleJudgement -> SimpleJudgement
simpleJudgements_Syn_SimpleJudgement :: Syn_SimpleJudgement -> ([(String, Tp)])
typevariables_Syn_SimpleJudgement :: Syn_SimpleJudgement -> Names
wrap_SimpleJudgement :: T_SimpleJudgement -> Inh_SimpleJudgement -> Syn_SimpleJudgement
sem_SimpleJudgement_SimpleJudgement :: T_Name -> T_Type -> T_SimpleJudgement
sem_SimpleJudgements :: SimpleJudgements -> T_SimpleJudgements
type T_SimpleJudgements = ([(Name, Tp)]) -> ([(String, Tp)]) -> (Core_Judgements, SimpleJudgements, [(String, Tp)], Names)
data Inh_SimpleJudgements
Inh_SimpleJudgements :: ([(Name, Tp)]) -> ([(String, Tp)]) -> Inh_SimpleJudgements
nameMap_Inh_SimpleJudgements :: Inh_SimpleJudgements -> ([(Name, Tp)])
simpleJudgements_Inh_SimpleJudgements :: Inh_SimpleJudgements -> ([(String, Tp)])
data Syn_SimpleJudgements
Syn_SimpleJudgements :: Core_Judgements -> SimpleJudgements -> ([(String, Tp)]) -> Names -> Syn_SimpleJudgements
core_Syn_SimpleJudgements :: Syn_SimpleJudgements -> Core_Judgements
self_Syn_SimpleJudgements :: Syn_SimpleJudgements -> SimpleJudgements
simpleJudgements_Syn_SimpleJudgements :: Syn_SimpleJudgements -> ([(String, Tp)])
typevariables_Syn_SimpleJudgements :: Syn_SimpleJudgements -> Names
wrap_SimpleJudgements :: T_SimpleJudgements -> Inh_SimpleJudgements -> Syn_SimpleJudgements
sem_SimpleJudgements_Cons :: T_SimpleJudgement -> T_SimpleJudgements -> T_SimpleJudgements
sem_SimpleJudgements_Nil :: T_SimpleJudgements
sem_SimpleType :: SimpleType -> T_SimpleType
type T_SimpleType = SimpleType
data Inh_SimpleType
Inh_SimpleType :: Inh_SimpleType
data Syn_SimpleType
Syn_SimpleType :: SimpleType -> Syn_SimpleType
self_Syn_SimpleType :: Syn_SimpleType -> SimpleType
wrap_SimpleType :: T_SimpleType -> Inh_SimpleType -> Syn_SimpleType
sem_SimpleType_SimpleType :: T_Range -> T_Name -> T_Names -> T_SimpleType
sem_Statement :: Statement -> T_Statement
type T_Statement = Statement
data Inh_Statement
Inh_Statement :: Inh_Statement
data Syn_Statement
Syn_Statement :: Statement -> Syn_Statement
self_Syn_Statement :: Syn_Statement -> Statement
wrap_Statement :: T_Statement -> Inh_Statement -> Syn_Statement
sem_Statement_Expression :: T_Range -> T_Expression -> T_Statement
sem_Statement_Let :: T_Range -> T_Declarations -> T_Statement
sem_Statement_Generator :: T_Range -> T_Pattern -> T_Expression -> T_Statement
sem_Statement_Empty :: T_Range -> T_Statement
sem_Statements :: Statements -> T_Statements
type T_Statements = Statements
data Inh_Statements
Inh_Statements :: Inh_Statements
data Syn_Statements
Syn_Statements :: Statements -> Syn_Statements
self_Syn_Statements :: Syn_Statements -> Statements
wrap_Statements :: T_Statements -> Inh_Statements -> Syn_Statements
sem_Statements_Cons :: T_Statement -> T_Statements -> T_Statements
sem_Statements_Nil :: T_Statements
sem_Strings :: Strings -> T_Strings
type T_Strings = Strings
data Inh_Strings
Inh_Strings :: Inh_Strings
data Syn_Strings
Syn_Strings :: Strings -> Syn_Strings
self_Syn_Strings :: Syn_Strings -> Strings
wrap_Strings :: T_Strings -> Inh_Strings -> Syn_Strings
sem_Strings_Cons :: String -> T_Strings -> T_Strings
sem_Strings_Nil :: T_Strings
sem_Type :: Type -> T_Type
type T_Type = (Type, Names)
data Inh_Type
Inh_Type :: Inh_Type
data Syn_Type
Syn_Type :: Type -> Names -> Syn_Type
self_Syn_Type :: Syn_Type -> Type
typevariables_Syn_Type :: Syn_Type -> Names
wrap_Type :: T_Type -> Inh_Type -> Syn_Type
sem_Type_Application :: T_Range -> Bool -> T_Type -> T_Types -> T_Type
sem_Type_Variable :: T_Range -> T_Name -> T_Type
sem_Type_Constructor :: T_Range -> T_Name -> T_Type
sem_Type_Qualified :: T_Range -> T_ContextItems -> T_Type -> T_Type
sem_Type_Forall :: T_Range -> T_Names -> T_Type -> T_Type
sem_Type_Exists :: T_Range -> T_Names -> T_Type -> T_Type
sem_Type_Parenthesized :: T_Range -> T_Type -> T_Type
sem_TypeRule :: TypeRule -> T_TypeRule
type T_TypeRule = ([(Name, Tp)]) -> ([(String, Tp)]) -> (Expression, Tp, Core_TypeRule, TypeRule, [(String, Tp)], Names)
data Inh_TypeRule
Inh_TypeRule :: ([(Name, Tp)]) -> ([(String, Tp)]) -> Inh_TypeRule
nameMap_Inh_TypeRule :: Inh_TypeRule -> ([(Name, Tp)])
simpleJudgements_Inh_TypeRule :: Inh_TypeRule -> ([(String, Tp)])
data Syn_TypeRule
Syn_TypeRule :: Expression -> Tp -> Core_TypeRule -> TypeRule -> ([(String, Tp)]) -> Names -> Syn_TypeRule
conclusionExpression_Syn_TypeRule :: Syn_TypeRule -> Expression
conclusionType_Syn_TypeRule :: Syn_TypeRule -> Tp
core_Syn_TypeRule :: Syn_TypeRule -> Core_TypeRule
self_Syn_TypeRule :: Syn_TypeRule -> TypeRule
simpleJudgements_Syn_TypeRule :: Syn_TypeRule -> ([(String, Tp)])
typevariables_Syn_TypeRule :: Syn_TypeRule -> Names
wrap_TypeRule :: T_TypeRule -> Inh_TypeRule -> Syn_TypeRule
sem_TypeRule_TypeRule :: T_SimpleJudgements -> T_Judgement -> T_TypeRule
sem_Types :: Types -> T_Types
type T_Types = (Types, Names)
data Inh_Types
Inh_Types :: Inh_Types
data Syn_Types
Syn_Types :: Types -> Names -> Syn_Types
self_Syn_Types :: Syn_Types -> Types
typevariables_Syn_Types :: Syn_Types -> Names
wrap_Types :: T_Types -> Inh_Types -> Syn_Types
sem_Types_Cons :: T_Type -> T_Types -> T_Types
sem_Types_Nil :: T_Types
sem_TypingStrategies :: TypingStrategies -> T_TypingStrategies
type T_TypingStrategies = ImportEnvironment -> (TypingStrategies)
data Inh_TypingStrategies
Inh_TypingStrategies :: ImportEnvironment -> Inh_TypingStrategies
importEnvironment_Inh_TypingStrategies :: Inh_TypingStrategies -> ImportEnvironment
data Syn_TypingStrategies
Syn_TypingStrategies :: TypingStrategies -> Syn_TypingStrategies
self_Syn_TypingStrategies :: Syn_TypingStrategies -> TypingStrategies
wrap_TypingStrategies :: T_TypingStrategies -> Inh_TypingStrategies -> Syn_TypingStrategies
sem_TypingStrategies_Cons :: T_TypingStrategy -> T_TypingStrategies -> T_TypingStrategies
sem_TypingStrategies_Nil :: T_TypingStrategies
sem_TypingStrategy :: TypingStrategy -> T_TypingStrategy
type T_TypingStrategy = ImportEnvironment -> (Core_TypingStrategy, TypingStrategy)
data Inh_TypingStrategy
Inh_TypingStrategy :: ImportEnvironment -> Inh_TypingStrategy
importEnvironment_Inh_TypingStrategy :: Inh_TypingStrategy -> ImportEnvironment
data Syn_TypingStrategy
Syn_TypingStrategy :: Core_TypingStrategy -> TypingStrategy -> Syn_TypingStrategy
core_Syn_TypingStrategy :: Syn_TypingStrategy -> Core_TypingStrategy
self_Syn_TypingStrategy :: Syn_TypingStrategy -> TypingStrategy
wrap_TypingStrategy :: T_TypingStrategy -> Inh_TypingStrategy -> Syn_TypingStrategy
sem_TypingStrategy_Siblings :: T_Names -> T_TypingStrategy
sem_TypingStrategy_TypingStrategy :: T_TypeRule -> T_UserStatements -> T_TypingStrategy
sem_UserStatement :: UserStatement -> T_UserStatement
type T_UserStatement = ([((String, Maybe String), MessageBlock)]) -> Names -> ([(Name, Tp)]) -> ConstraintInfo -> (TypeConstraints ConstraintInfo) -> Predicates -> (Core_UserStatement, Names, UserStatement, Names, TypeConstraints ConstraintInfo, Predicates)
data Inh_UserStatement
Inh_UserStatement :: ([((String, Maybe String), MessageBlock)]) -> Names -> ([(Name, Tp)]) -> ConstraintInfo -> (TypeConstraints ConstraintInfo) -> Predicates -> Inh_UserStatement
attributeTable_Inh_UserStatement :: Inh_UserStatement -> ([((String, Maybe String), MessageBlock)])
metaVariableConstraintNames_Inh_UserStatement :: Inh_UserStatement -> Names
nameMap_Inh_UserStatement :: Inh_UserStatement -> ([(Name, Tp)])
standardConstraintInfo_Inh_UserStatement :: Inh_UserStatement -> ConstraintInfo
userConstraints_Inh_UserStatement :: Inh_UserStatement -> (TypeConstraints ConstraintInfo)
userPredicates_Inh_UserStatement :: Inh_UserStatement -> Predicates
data Syn_UserStatement
Syn_UserStatement :: Core_UserStatement -> Names -> UserStatement -> Names -> (TypeConstraints ConstraintInfo) -> Predicates -> Syn_UserStatement
core_Syn_UserStatement :: Syn_UserStatement -> Core_UserStatement
metaVariableConstraintNames_Syn_UserStatement :: Syn_UserStatement -> Names
self_Syn_UserStatement :: Syn_UserStatement -> UserStatement
typevariables_Syn_UserStatement :: Syn_UserStatement -> Names
userConstraints_Syn_UserStatement :: Syn_UserStatement -> (TypeConstraints ConstraintInfo)
userPredicates_Syn_UserStatement :: Syn_UserStatement -> Predicates
wrap_UserStatement :: T_UserStatement -> Inh_UserStatement -> Syn_UserStatement
sem_UserStatement_Equal :: T_Type -> T_Type -> String -> T_UserStatement
sem_UserStatement_Pred :: T_Name -> T_Type -> String -> T_UserStatement
sem_UserStatement_MetaVariableConstraints :: T_Name -> T_UserStatement
sem_UserStatement_Phase :: Int -> T_UserStatement
sem_UserStatements :: UserStatements -> T_UserStatements
type T_UserStatements = ([((String, Maybe String), MessageBlock)]) -> Names -> ([(Name, Tp)]) -> ConstraintInfo -> (TypeConstraints ConstraintInfo) -> Predicates -> (Core_UserStatements, Names, UserStatements, Names, TypeConstraints ConstraintInfo, Predicates)
data Inh_UserStatements
Inh_UserStatements :: ([((String, Maybe String), MessageBlock)]) -> Names -> ([(Name, Tp)]) -> ConstraintInfo -> (TypeConstraints ConstraintInfo) -> Predicates -> Inh_UserStatements
attributeTable_Inh_UserStatements :: Inh_UserStatements -> ([((String, Maybe String), MessageBlock)])
metaVariableConstraintNames_Inh_UserStatements :: Inh_UserStatements -> Names
nameMap_Inh_UserStatements :: Inh_UserStatements -> ([(Name, Tp)])
standardConstraintInfo_Inh_UserStatements :: Inh_UserStatements -> ConstraintInfo
userConstraints_Inh_UserStatements :: Inh_UserStatements -> (TypeConstraints ConstraintInfo)
userPredicates_Inh_UserStatements :: Inh_UserStatements -> Predicates
data Syn_UserStatements
Syn_UserStatements :: Core_UserStatements -> Names -> UserStatements -> Names -> (TypeConstraints ConstraintInfo) -> Predicates -> Syn_UserStatements
core_Syn_UserStatements :: Syn_UserStatements -> Core_UserStatements
metaVariableConstraintNames_Syn_UserStatements :: Syn_UserStatements -> Names
self_Syn_UserStatements :: Syn_UserStatements -> UserStatements
typevariables_Syn_UserStatements :: Syn_UserStatements -> Names
userConstraints_Syn_UserStatements :: Syn_UserStatements -> (TypeConstraints ConstraintInfo)
userPredicates_Syn_UserStatements :: Syn_UserStatements -> Predicates
wrap_UserStatements :: T_UserStatements -> Inh_UserStatements -> Syn_UserStatements
sem_UserStatements_Cons :: T_UserStatement -> T_UserStatements -> T_UserStatements
sem_UserStatements_Nil :: T_UserStatements


-- | Compile a .type file.
--   
--   (directives based on "Scripting the Type Inference Process", ICFP
--   2003)
module Helium.StaticAnalysis.Directives.TS_Compile
readTypingStrategiesFromFile :: [Option] -> String -> ImportEnvironment -> IO (Core_TypingStrategies, [CoreDecl])


module Helium.Main.PhaseTypingStrategies
phaseTypingStrategies :: String -> ImportEnvironment -> [(Name, TpScheme)] -> [Option] -> IO (ImportEnvironment, [CoreDecl])

module Helium.CodeGeneration.CodeGeneration
type CoreDecl = Decl Expr
makeCoreModule :: Maybe Id -> [Decl v] -> Module v
interpreterMain :: String
insertedMain :: TypeEnvironment -> CoreDecl
everythingPublicButPrelude :: CoreModule -> CoreModule
predicateToId :: Predicate -> Id
dictionaryTreeToCore :: DictionaryTree -> Expr
insertDictionaries :: Name -> DictionaryEnvironment -> Expr
toplevelType :: Name -> ImportEnvironment -> Bool -> [Custom]
constructorCustoms :: Name -> Name -> ValueConstructorEnvironment -> [Custom]
bind :: Expr -> Expr -> Expr
primBindIOId :: Id
parameterId :: Id
okId :: Id
caseExprId :: Id
chainCode :: [Maybe Expr -> Expr] -> Expr
patternAlwaysSucceeds :: Pattern -> Bool
patternMatchFail :: String -> Range -> Expr
data Inh_Alternative
Inh_Alternative :: (DictionaryEnvironment) -> Inh_Alternative
dictionaryEnv_Inh_Alternative :: Inh_Alternative -> (DictionaryEnvironment)
data Syn_Alternative
Syn_Alternative :: (Expr -> Expr) -> (Alternative) -> Syn_Alternative
core_Syn_Alternative :: Syn_Alternative -> (Expr -> Expr)
self_Syn_Alternative :: Syn_Alternative -> (Alternative)
wrap_Alternative :: T_Alternative -> Inh_Alternative -> (Syn_Alternative)
sem_Alternative :: Alternative -> T_Alternative
newtype T_Alternative
T_Alternative :: Identity (T_Alternative_s2) -> T_Alternative
attach_T_Alternative :: T_Alternative -> Identity (T_Alternative_s2)
newtype T_Alternative_s2
C_Alternative_s2 :: (T_Alternative_v1) -> T_Alternative_s2
inv_Alternative_s2 :: T_Alternative_s2 -> (T_Alternative_v1)
data T_Alternative_s3
C_Alternative_s3 :: T_Alternative_s3
type T_Alternative_v1 = (T_Alternative_vIn1) -> (T_Alternative_vOut1)
data T_Alternative_vIn1
T_Alternative_vIn1 :: (DictionaryEnvironment) -> T_Alternative_vIn1
data T_Alternative_vOut1
T_Alternative_vOut1 :: (Expr -> Expr) -> (Alternative) -> T_Alternative_vOut1
sem_Alternative_Hole :: T_Range -> (Integer) -> T_Alternative
sem_Alternative_Feedback :: T_Range -> (String) -> T_Alternative -> T_Alternative
sem_Alternative_Alternative :: T_Range -> T_Pattern -> T_RightHandSide -> T_Alternative
sem_Alternative_Empty :: T_Range -> T_Alternative
data Inh_Alternatives
Inh_Alternatives :: (Range) -> (DictionaryEnvironment) -> Inh_Alternatives
caseRange_Inh_Alternatives :: Inh_Alternatives -> (Range)
dictionaryEnv_Inh_Alternatives :: Inh_Alternatives -> (DictionaryEnvironment)
data Syn_Alternatives
Syn_Alternatives :: (Expr) -> (Alternatives) -> Syn_Alternatives
core_Syn_Alternatives :: Syn_Alternatives -> (Expr)
self_Syn_Alternatives :: Syn_Alternatives -> (Alternatives)
wrap_Alternatives :: T_Alternatives -> Inh_Alternatives -> (Syn_Alternatives)
sem_Alternatives :: Alternatives -> T_Alternatives
newtype T_Alternatives
T_Alternatives :: Identity (T_Alternatives_s5) -> T_Alternatives
attach_T_Alternatives :: T_Alternatives -> Identity (T_Alternatives_s5)
newtype T_Alternatives_s5
C_Alternatives_s5 :: (T_Alternatives_v4) -> T_Alternatives_s5
inv_Alternatives_s5 :: T_Alternatives_s5 -> (T_Alternatives_v4)
data T_Alternatives_s6
C_Alternatives_s6 :: T_Alternatives_s6
type T_Alternatives_v4 = (T_Alternatives_vIn4) -> (T_Alternatives_vOut4)
data T_Alternatives_vIn4
T_Alternatives_vIn4 :: (Range) -> (DictionaryEnvironment) -> T_Alternatives_vIn4
data T_Alternatives_vOut4
T_Alternatives_vOut4 :: (Expr) -> (Alternatives) -> T_Alternatives_vOut4
sem_Alternatives_Cons :: T_Alternative -> T_Alternatives -> T_Alternatives
sem_Alternatives_Nil :: T_Alternatives
data Inh_AnnotatedType
Inh_AnnotatedType :: Inh_AnnotatedType
data Syn_AnnotatedType
Syn_AnnotatedType :: (AnnotatedType) -> Syn_AnnotatedType
self_Syn_AnnotatedType :: Syn_AnnotatedType -> (AnnotatedType)
wrap_AnnotatedType :: T_AnnotatedType -> Inh_AnnotatedType -> (Syn_AnnotatedType)
sem_AnnotatedType :: AnnotatedType -> T_AnnotatedType
newtype T_AnnotatedType
T_AnnotatedType :: Identity (T_AnnotatedType_s8) -> T_AnnotatedType
attach_T_AnnotatedType :: T_AnnotatedType -> Identity (T_AnnotatedType_s8)
newtype T_AnnotatedType_s8
C_AnnotatedType_s8 :: (T_AnnotatedType_v7) -> T_AnnotatedType_s8
inv_AnnotatedType_s8 :: T_AnnotatedType_s8 -> (T_AnnotatedType_v7)
data T_AnnotatedType_s9
C_AnnotatedType_s9 :: T_AnnotatedType_s9
type T_AnnotatedType_v7 = (T_AnnotatedType_vIn7) -> (T_AnnotatedType_vOut7)
data T_AnnotatedType_vIn7
T_AnnotatedType_vIn7 :: T_AnnotatedType_vIn7
data T_AnnotatedType_vOut7
T_AnnotatedType_vOut7 :: (AnnotatedType) -> T_AnnotatedType_vOut7
sem_AnnotatedType_AnnotatedType :: T_Range -> (Bool) -> T_Type -> T_AnnotatedType
data Inh_AnnotatedTypes
Inh_AnnotatedTypes :: Inh_AnnotatedTypes
data Syn_AnnotatedTypes
Syn_AnnotatedTypes :: (Int) -> (AnnotatedTypes) -> Syn_AnnotatedTypes
length_Syn_AnnotatedTypes :: Syn_AnnotatedTypes -> (Int)
self_Syn_AnnotatedTypes :: Syn_AnnotatedTypes -> (AnnotatedTypes)
wrap_AnnotatedTypes :: T_AnnotatedTypes -> Inh_AnnotatedTypes -> (Syn_AnnotatedTypes)
sem_AnnotatedTypes :: AnnotatedTypes -> T_AnnotatedTypes
newtype T_AnnotatedTypes
T_AnnotatedTypes :: Identity (T_AnnotatedTypes_s11) -> T_AnnotatedTypes
attach_T_AnnotatedTypes :: T_AnnotatedTypes -> Identity (T_AnnotatedTypes_s11)
newtype T_AnnotatedTypes_s11
C_AnnotatedTypes_s11 :: (T_AnnotatedTypes_v10) -> T_AnnotatedTypes_s11
inv_AnnotatedTypes_s11 :: T_AnnotatedTypes_s11 -> (T_AnnotatedTypes_v10)
data T_AnnotatedTypes_s12
C_AnnotatedTypes_s12 :: T_AnnotatedTypes_s12
type T_AnnotatedTypes_v10 = (T_AnnotatedTypes_vIn10) -> (T_AnnotatedTypes_vOut10)
data T_AnnotatedTypes_vIn10
T_AnnotatedTypes_vIn10 :: T_AnnotatedTypes_vIn10
data T_AnnotatedTypes_vOut10
T_AnnotatedTypes_vOut10 :: (Int) -> (AnnotatedTypes) -> T_AnnotatedTypes_vOut10
sem_AnnotatedTypes_Cons :: T_AnnotatedType -> T_AnnotatedTypes -> T_AnnotatedTypes
sem_AnnotatedTypes_Nil :: T_AnnotatedTypes
data Inh_Body
Inh_Body :: (DictionaryEnvironment) -> (ImportEnvironment) -> Inh_Body
dictionaryEnv_Inh_Body :: Inh_Body -> (DictionaryEnvironment)
importEnv_Inh_Body :: Inh_Body -> (ImportEnvironment)
data Syn_Body
Syn_Body :: ([CoreDecl]) -> (Body) -> Syn_Body
decls_Syn_Body :: Syn_Body -> ([CoreDecl])
self_Syn_Body :: Syn_Body -> (Body)
wrap_Body :: T_Body -> Inh_Body -> (Syn_Body)
sem_Body :: Body -> T_Body
newtype T_Body
T_Body :: Identity (T_Body_s14) -> T_Body
attach_T_Body :: T_Body -> Identity (T_Body_s14)
newtype T_Body_s14
C_Body_s14 :: (T_Body_v13) -> T_Body_s14
inv_Body_s14 :: T_Body_s14 -> (T_Body_v13)
data T_Body_s15
C_Body_s15 :: T_Body_s15
type T_Body_v13 = (T_Body_vIn13) -> (T_Body_vOut13)
data T_Body_vIn13
T_Body_vIn13 :: (DictionaryEnvironment) -> (ImportEnvironment) -> T_Body_vIn13
data T_Body_vOut13
T_Body_vOut13 :: ([CoreDecl]) -> (Body) -> T_Body_vOut13
sem_Body_Hole :: T_Range -> (Integer) -> T_Body
sem_Body_Body :: T_Range -> T_ImportDeclarations -> T_Declarations -> T_Body
data Inh_Constructor
Inh_Constructor :: (Name) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (Int) -> Inh_Constructor
dataTypeName_Inh_Constructor :: Inh_Constructor -> (Name)
dictionaryEnv_Inh_Constructor :: Inh_Constructor -> (DictionaryEnvironment)
importEnv_Inh_Constructor :: Inh_Constructor -> (ImportEnvironment)
tag_Inh_Constructor :: Inh_Constructor -> (Int)
data Syn_Constructor
Syn_Constructor :: ([(Id, CoreDecl)]) -> (Constructor) -> Syn_Constructor
cons_Syn_Constructor :: Syn_Constructor -> ([(Id, CoreDecl)])
self_Syn_Constructor :: Syn_Constructor -> (Constructor)
wrap_Constructor :: T_Constructor -> Inh_Constructor -> (Syn_Constructor)
sem_Constructor :: Constructor -> T_Constructor
newtype T_Constructor
T_Constructor :: Identity (T_Constructor_s17) -> T_Constructor
attach_T_Constructor :: T_Constructor -> Identity (T_Constructor_s17)
newtype T_Constructor_s17
C_Constructor_s17 :: (T_Constructor_v16) -> T_Constructor_s17
inv_Constructor_s17 :: T_Constructor_s17 -> (T_Constructor_v16)
data T_Constructor_s18
C_Constructor_s18 :: T_Constructor_s18
type T_Constructor_v16 = (T_Constructor_vIn16) -> (T_Constructor_vOut16)
data T_Constructor_vIn16
T_Constructor_vIn16 :: (Name) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (Int) -> T_Constructor_vIn16
data T_Constructor_vOut16
T_Constructor_vOut16 :: ([(Id, CoreDecl)]) -> (Constructor) -> T_Constructor_vOut16
sem_Constructor_Constructor :: T_Range -> T_Name -> T_AnnotatedTypes -> T_Constructor
sem_Constructor_Infix :: T_Range -> T_AnnotatedType -> T_Name -> T_AnnotatedType -> T_Constructor
sem_Constructor_Record :: T_Range -> T_Name -> T_FieldDeclarations -> T_Constructor
data Inh_Constructors
Inh_Constructors :: (Name) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (Int) -> Inh_Constructors
dataTypeName_Inh_Constructors :: Inh_Constructors -> (Name)
dictionaryEnv_Inh_Constructors :: Inh_Constructors -> (DictionaryEnvironment)
importEnv_Inh_Constructors :: Inh_Constructors -> (ImportEnvironment)
tag_Inh_Constructors :: Inh_Constructors -> (Int)
data Syn_Constructors
Syn_Constructors :: ([(Id, CoreDecl)]) -> (Constructors) -> Syn_Constructors
cons_Syn_Constructors :: Syn_Constructors -> ([(Id, CoreDecl)])
self_Syn_Constructors :: Syn_Constructors -> (Constructors)
wrap_Constructors :: T_Constructors -> Inh_Constructors -> (Syn_Constructors)
sem_Constructors :: Constructors -> T_Constructors
newtype T_Constructors
T_Constructors :: Identity (T_Constructors_s20) -> T_Constructors
attach_T_Constructors :: T_Constructors -> Identity (T_Constructors_s20)
newtype T_Constructors_s20
C_Constructors_s20 :: (T_Constructors_v19) -> T_Constructors_s20
inv_Constructors_s20 :: T_Constructors_s20 -> (T_Constructors_v19)
data T_Constructors_s21
C_Constructors_s21 :: T_Constructors_s21
type T_Constructors_v19 = (T_Constructors_vIn19) -> (T_Constructors_vOut19)
data T_Constructors_vIn19
T_Constructors_vIn19 :: (Name) -> (DictionaryEnvironment) -> (ImportEnvironment) -> (Int) -> T_Constructors_vIn19
data T_Constructors_vOut19
T_Constructors_vOut19 :: ([(Id, CoreDecl)]) -> (Constructors) -> T_Constructors_vOut19
sem_Constructors_Cons :: T_Constructor -> T_Constructors -> T_Constructors
sem_Constructors_Nil :: T_Constructors
data Inh_ContextItem
Inh_ContextItem :: Inh_ContextItem
data Syn_ContextItem
Syn_ContextItem :: (ContextItem) -> Syn_ContextItem
self_Syn_ContextItem :: Syn_ContextItem -> (ContextItem)
wrap_ContextItem :: T_ContextItem -> Inh_ContextItem -> (Syn_ContextItem)
sem_ContextItem :: ContextItem -> T_ContextItem
newtype T_ContextItem
T_ContextItem :: Identity (T_ContextItem_s23) -> T_ContextItem
attach_T_ContextItem :: T_ContextItem -> Identity (T_ContextItem_s23)
newtype T_ContextItem_s23
C_ContextItem_s23 :: (T_ContextItem_v22) -> T_ContextItem_s23
inv_ContextItem_s23 :: T_ContextItem_s23 -> (T_ContextItem_v22)
data T_ContextItem_s24
C_ContextItem_s24 :: T_ContextItem_s24
type T_ContextItem_v22 = (T_ContextItem_vIn22) -> (T_ContextItem_vOut22)
data T_ContextItem_vIn22
T_ContextItem_vIn22 :: T_ContextItem_vIn22
data T_ContextItem_vOut22
T_ContextItem_vOut22 :: (ContextItem) -> T_ContextItem_vOut22
sem_ContextItem_ContextItem :: T_Range -> T_Name -> T_Types -> T_ContextItem
data Inh_ContextItems
Inh_ContextItems :: Inh_ContextItems
data Syn_ContextItems
Syn_ContextItems :: (ContextItems) -> Syn_ContextItems
self_Syn_ContextItems :: Syn_ContextItems -> (ContextItems)
wrap_ContextItems :: T_ContextItems -> Inh_ContextItems -> (Syn_ContextItems)
sem_ContextItems :: ContextItems -> T_ContextItems
newtype T_ContextItems
T_ContextItems :: Identity (T_ContextItems_s26) -> T_ContextItems
attach_T_ContextItems :: T_ContextItems -> Identity (T_ContextItems_s26)
newtype T_ContextItems_s26
C_ContextItems_s26 :: (T_ContextItems_v25) -> T_ContextItems_s26
inv_ContextItems_s26 :: T_ContextItems_s26 -> (T_ContextItems_v25)
data T_ContextItems_s27
C_ContextItems_s27 :: T_ContextItems_s27
type T_ContextItems_v25 = (T_ContextItems_vIn25) -> (T_ContextItems_vOut25)
data T_ContextItems_vIn25
T_ContextItems_vIn25 :: T_ContextItems_vIn25
data T_ContextItems_vOut25
T_ContextItems_vOut25 :: (ContextItems) -> T_ContextItems_vOut25
sem_ContextItems_Cons :: T_ContextItem -> T_ContextItems -> T_ContextItems
sem_ContextItems_Nil :: T_ContextItems
data Inh_Declaration
Inh_Declaration :: (DictionaryEnvironment) -> (ImportEnvironment) -> (Bool) -> (Int) -> Inh_Declaration
dictionaryEnv_Inh_Declaration :: Inh_Declaration -> (DictionaryEnvironment)
importEnv_Inh_Declaration :: Inh_Declaration -> (ImportEnvironment)
isTopLevel_Inh_Declaration :: Inh_Declaration -> (Bool)
patBindNr_Inh_Declaration :: Inh_Declaration -> (Int)
data Syn_Declaration
Syn_Declaration :: ([CoreDecl]) -> (Int) -> (Declaration) -> Syn_Declaration
decls_Syn_Declaration :: Syn_Declaration -> ([CoreDecl])
patBindNr_Syn_Declaration :: Syn_Declaration -> (Int)
self_Syn_Declaration :: Syn_Declaration -> (Declaration)
wrap_Declaration :: T_Declaration -> Inh_Declaration -> (Syn_Declaration)
sem_Declaration :: Declaration -> T_Declaration
newtype T_Declaration
T_Declaration :: Identity (T_Declaration_s29) -> T_Declaration
attach_T_Declaration :: T_Declaration -> Identity (T_Declaration_s29)
newtype T_Declaration_s29
C_Declaration_s29 :: (T_Declaration_v28) -> T_Declaration_s29
inv_Declaration_s29 :: T_Declaration_s29 -> (T_Declaration_v28)
data T_Declaration_s30
C_Declaration_s30 :: T_Declaration_s30
type T_Declaration_v28 = (T_Declaration_vIn28) -> (T_Declaration_vOut28)
data T_Declaration_vIn28
T_Declaration_vIn28 :: (DictionaryEnvironment) -> (ImportEnvironment) -> (Bool) -> (Int) -> T_Declaration_vIn28
data T_Declaration_vOut28
T_Declaration_vOut28 :: ([CoreDecl]) -> (Int) -> (Declaration) -> T_Declaration_vOut28
sem_Declaration_Hole :: T_Range -> (Integer) -> T_Declaration
sem_Declaration_Type :: T_Range -> T_SimpleType -> T_Type -> T_Declaration
sem_Declaration_Data :: T_Range -> T_ContextItems -> T_SimpleType -> T_Constructors -> T_Names -> T_Declaration
sem_Declaration_Newtype :: T_Range -> T_ContextItems -> T_SimpleType -> T_Constructor -> T_Names -> T_Declaration
sem_Declaration_Class :: T_Range -> T_ContextItems -> T_SimpleType -> T_MaybeDeclarations -> T_Declaration
sem_Declaration_Instance :: T_Range -> T_ContextItems -> T_Name -> T_Types -> T_MaybeDeclarations -> T_Declaration
sem_Declaration_Default :: T_Range -> T_Types -> T_Declaration
sem_Declaration_FunctionBindings :: T_Range -> T_FunctionBindings -> T_Declaration
sem_Declaration_PatternBinding :: T_Range -> T_Pattern -> T_RightHandSide -> T_Declaration
sem_Declaration_TypeSignature :: T_Range -> T_Names -> T_Type -> T_Declaration
sem_Declaration_Fixity :: T_Range -> T_Fixity -> T_MaybeInt -> T_Names -> T_Declaration
sem_Declaration_Empty :: T_Range -> T_Declaration
data Inh_Declarations
Inh_Declarations :: (DictionaryEnvironment) -> (ImportEnvironment) -> (Bool) -> (Int) -> Inh_Declarations
dictionaryEnv_Inh_Declarations :: Inh_Declarations -> (DictionaryEnvironment)
importEnv_Inh_Declarations :: Inh_Declarations -> (ImportEnvironment)
isTopLevel_Inh_Declarations :: Inh_Declarations -> (Bool)
patBindNr_Inh_Declarations :: Inh_Declarations -> (Int)
data Syn_Declarations
Syn_Declarations :: ([CoreDecl]) -> (Int) -> (Declarations) -> Syn_Declarations
decls_Syn_Declarations :: Syn_Declarations -> ([CoreDecl])
patBindNr_Syn_Declarations :: Syn_Declarations -> (Int)
self_Syn_Declarations :: Syn_Declarations -> (Declarations)
wrap_Declarations :: T_Declarations -> Inh_Declarations -> (Syn_Declarations)
sem_Declarations :: Declarations -> T_Declarations
newtype T_Declarations
T_Declarations :: Identity (T_Declarations_s32) -> T_Declarations
attach_T_Declarations :: T_Declarations -> Identity (T_Declarations_s32)
newtype T_Declarations_s32
C_Declarations_s32 :: (T_Declarations_v31) -> T_Declarations_s32
inv_Declarations_s32 :: T_Declarations_s32 -> (T_Declarations_v31)
data T_Declarations_s33
C_Declarations_s33 :: T_Declarations_s33
type T_Declarations_v31 = (T_Declarations_vIn31) -> (T_Declarations_vOut31)
data T_Declarations_vIn31
T_Declarations_vIn31 :: (DictionaryEnvironment) -> (ImportEnvironment) -> (Bool) -> (Int) -> T_Declarations_vIn31
data T_Declarations_vOut31
T_Declarations_vOut31 :: ([CoreDecl]) -> (Int) -> (Declarations) -> T_Declarations_vOut31
sem_Declarations_Cons :: T_Declaration -> T_Declarations -> T_Declarations
sem_Declarations_Nil :: T_Declarations
data Inh_Export
Inh_Export :: Inh_Export
data Syn_Export
Syn_Export :: (IdSet) -> (IdSet) -> (Export) -> (IdSet) -> (IdSet) -> Syn_Export
cons_Syn_Export :: Syn_Export -> (IdSet)
mods_Syn_Export :: Syn_Export -> (IdSet)
self_Syn_Export :: Syn_Export -> (Export)
types_Syn_Export :: Syn_Export -> (IdSet)
values_Syn_Export :: Syn_Export -> (IdSet)
wrap_Export :: T_Export -> Inh_Export -> (Syn_Export)
sem_Export :: Export -> T_Export
newtype T_Export
T_Export :: Identity (T_Export_s35) -> T_Export
attach_T_Export :: T_Export -> Identity (T_Export_s35)
newtype T_Export_s35
C_Export_s35 :: (T_Export_v34) -> T_Export_s35
inv_Export_s35 :: T_Export_s35 -> (T_Export_v34)
data T_Export_s36
C_Export_s36 :: T_Export_s36
type T_Export_v34 = (T_Export_vIn34) -> (T_Export_vOut34)
data T_Export_vIn34
T_Export_vIn34 :: T_Export_vIn34
data T_Export_vOut34
T_Export_vOut34 :: (IdSet) -> (IdSet) -> (Export) -> (IdSet) -> (IdSet) -> T_Export_vOut34
sem_Export_Variable :: T_Range -> T_Name -> T_Export
sem_Export_TypeOrClass :: T_Range -> T_Name -> T_MaybeNames -> T_Export
sem_Export_TypeOrClassComplete :: T_Range -> T_Name -> T_Export
sem_Export_Module :: T_Range -> T_Name -> T_Export
data Inh_Exports
Inh_Exports :: Inh_Exports
data Syn_Exports
Syn_Exports :: (IdSet) -> (IdSet) -> (Exports) -> (IdSet) -> (IdSet) -> Syn_Exports
cons_Syn_Exports :: Syn_Exports -> (IdSet)
mods_Syn_Exports :: Syn_Exports -> (IdSet)
self_Syn_Exports :: Syn_Exports -> (Exports)
types_Syn_Exports :: Syn_Exports -> (IdSet)
values_Syn_Exports :: Syn_Exports -> (IdSet)
wrap_Exports :: T_Exports -> Inh_Exports -> (Syn_Exports)
sem_Exports :: Exports -> T_Exports
newtype T_Exports
T_Exports :: Identity (T_Exports_s38) -> T_Exports
attach_T_Exports :: T_Exports -> Identity (T_Exports_s38)
newtype T_Exports_s38
C_Exports_s38 :: (T_Exports_v37) -> T_Exports_s38
inv_Exports_s38 :: T_Exports_s38 -> (T_Exports_v37)
data T_Exports_s39
C_Exports_s39 :: T_Exports_s39
type T_Exports_v37 = (T_Exports_vIn37) -> (T_Exports_vOut37)
data T_Exports_vIn37
T_Exports_vIn37 :: T_Exports_vIn37
data T_Exports_vOut37
T_Exports_vOut37 :: (IdSet) -> (IdSet) -> (Exports) -> (IdSet) -> (IdSet) -> T_Exports_vOut37
sem_Exports_Cons :: T_Export -> T_Exports -> T_Exports
sem_Exports_Nil :: T_Exports
data Inh_Expression
Inh_Expression :: (DictionaryEnvironment) -> Inh_Expression
dictionaryEnv_Inh_Expression :: Inh_Expression -> (DictionaryEnvironment)
data Syn_Expression
Syn_Expression :: (Expr) -> (Expression) -> Syn_Expression
core_Syn_Expression :: Syn_Expression -> (Expr)
self_Syn_Expression :: Syn_Expression -> (Expression)
wrap_Expression :: T_Expression -> Inh_Expression -> (Syn_Expression)
sem_Expression :: Expression -> T_Expression
newtype T_Expression
T_Expression :: Identity (T_Expression_s41) -> T_Expression
attach_T_Expression :: T_Expression -> Identity (T_Expression_s41)
newtype T_Expression_s41
C_Expression_s41 :: (T_Expression_v40) -> T_Expression_s41
inv_Expression_s41 :: T_Expression_s41 -> (T_Expression_v40)
data T_Expression_s42
C_Expression_s42 :: T_Expression_s42
type T_Expression_v40 = (T_Expression_vIn40) -> (T_Expression_vOut40)
data T_Expression_vIn40
T_Expression_vIn40 :: (DictionaryEnvironment) -> T_Expression_vIn40
data T_Expression_vOut40
T_Expression_vOut40 :: (Expr) -> (Expression) -> T_Expression_vOut40
sem_Expression_Hole :: T_Range -> (Integer) -> T_Expression
sem_Expression_Feedback :: T_Range -> (String) -> T_Expression -> T_Expression
sem_Expression_MustUse :: T_Range -> T_Expression -> T_Expression
sem_Expression_Literal :: T_Range -> T_Literal -> T_Expression
sem_Expression_Variable :: T_Range -> T_Name -> T_Expression
sem_Expression_Constructor :: T_Range -> T_Name -> T_Expression
sem_Expression_Parenthesized :: T_Range -> T_Expression -> T_Expression
sem_Expression_NormalApplication :: T_Range -> T_Expression -> T_Expressions -> T_Expression
sem_Expression_InfixApplication :: T_Range -> T_MaybeExpression -> T_Expression -> T_MaybeExpression -> T_Expression
sem_Expression_If :: T_Range -> T_Expression -> T_Expression -> T_Expression -> T_Expression
sem_Expression_Lambda :: T_Range -> T_Patterns -> T_Expression -> T_Expression
sem_Expression_Case :: T_Range -> T_Expression -> T_Alternatives -> T_Expression
sem_Expression_Let :: T_Range -> T_Declarations -> T_Expression -> T_Expression
sem_Expression_Do :: T_Range -> T_Statements -> T_Expression
sem_Expression_List :: T_Range -> T_Expressions -> T_Expression
sem_Expression_Tuple :: T_Range -> T_Expressions -> T_Expression
sem_Expression_Comprehension :: T_Range -> T_Expression -> T_Qualifiers -> T_Expression
sem_Expression_Typed :: T_Range -> T_Expression -> T_Type -> T_Expression
sem_Expression_RecordConstruction :: T_Range -> T_Name -> T_RecordExpressionBindings -> T_Expression
sem_Expression_RecordUpdate :: T_Range -> T_Expression -> T_RecordExpressionBindings -> T_Expression
sem_Expression_Enum :: T_Range -> T_Expression -> T_MaybeExpression -> T_MaybeExpression -> T_Expression
sem_Expression_Negate :: T_Range -> T_Expression -> T_Expression
sem_Expression_NegateFloat :: T_Range -> T_Expression -> T_Expression
data Inh_Expressions
Inh_Expressions :: (DictionaryEnvironment) -> Inh_Expressions
dictionaryEnv_Inh_Expressions :: Inh_Expressions -> (DictionaryEnvironment)
data Syn_Expressions
Syn_Expressions :: ([Expr]) -> (Expressions) -> Syn_Expressions
core_Syn_Expressions :: Syn_Expressions -> ([Expr])
self_Syn_Expressions :: Syn_Expressions -> (Expressions)
wrap_Expressions :: T_Expressions -> Inh_Expressions -> (Syn_Expressions)
sem_Expressions :: Expressions -> T_Expressions
newtype T_Expressions
T_Expressions :: Identity (T_Expressions_s44) -> T_Expressions
attach_T_Expressions :: T_Expressions -> Identity (T_Expressions_s44)
newtype T_Expressions_s44
C_Expressions_s44 :: (T_Expressions_v43) -> T_Expressions_s44
inv_Expressions_s44 :: T_Expressions_s44 -> (T_Expressions_v43)
data T_Expressions_s45
C_Expressions_s45 :: T_Expressions_s45
type T_Expressions_v43 = (T_Expressions_vIn43) -> (T_Expressions_vOut43)
data T_Expressions_vIn43
T_Expressions_vIn43 :: (DictionaryEnvironment) -> T_Expressions_vIn43
data T_Expressions_vOut43
T_Expressions_vOut43 :: ([Expr]) -> (Expressions) -> T_Expressions_vOut43
sem_Expressions_Cons :: T_Expression -> T_Expressions -> T_Expressions
sem_Expressions_Nil :: T_Expressions
data Inh_FieldDeclaration
Inh_FieldDeclaration :: Inh_FieldDeclaration
data Syn_FieldDeclaration
Syn_FieldDeclaration :: (FieldDeclaration) -> Syn_FieldDeclaration
self_Syn_FieldDeclaration :: Syn_FieldDeclaration -> (FieldDeclaration)
wrap_FieldDeclaration :: T_FieldDeclaration -> Inh_FieldDeclaration -> (Syn_FieldDeclaration)
sem_FieldDeclaration :: FieldDeclaration -> T_FieldDeclaration
newtype T_FieldDeclaration
T_FieldDeclaration :: Identity (T_FieldDeclaration_s47) -> T_FieldDeclaration
attach_T_FieldDeclaration :: T_FieldDeclaration -> Identity (T_FieldDeclaration_s47)
newtype T_FieldDeclaration_s47
C_FieldDeclaration_s47 :: (T_FieldDeclaration_v46) -> T_FieldDeclaration_s47
inv_FieldDeclaration_s47 :: T_FieldDeclaration_s47 -> (T_FieldDeclaration_v46)
data T_FieldDeclaration_s48
C_FieldDeclaration_s48 :: T_FieldDeclaration_s48
type T_FieldDeclaration_v46 = (T_FieldDeclaration_vIn46) -> (T_FieldDeclaration_vOut46)
data T_FieldDeclaration_vIn46
T_FieldDeclaration_vIn46 :: T_FieldDeclaration_vIn46
data T_FieldDeclaration_vOut46
T_FieldDeclaration_vOut46 :: (FieldDeclaration) -> T_FieldDeclaration_vOut46
sem_FieldDeclaration_FieldDeclaration :: T_Range -> T_Names -> T_AnnotatedType -> T_FieldDeclaration
data Inh_FieldDeclarations
Inh_FieldDeclarations :: Inh_FieldDeclarations
data Syn_FieldDeclarations
Syn_FieldDeclarations :: (FieldDeclarations) -> Syn_FieldDeclarations
self_Syn_FieldDeclarations :: Syn_FieldDeclarations -> (FieldDeclarations)
wrap_FieldDeclarations :: T_FieldDeclarations -> Inh_FieldDeclarations -> (Syn_FieldDeclarations)
sem_FieldDeclarations :: FieldDeclarations -> T_FieldDeclarations
newtype T_FieldDeclarations
T_FieldDeclarations :: Identity (T_FieldDeclarations_s50) -> T_FieldDeclarations
attach_T_FieldDeclarations :: T_FieldDeclarations -> Identity (T_FieldDeclarations_s50)
newtype T_FieldDeclarations_s50
C_FieldDeclarations_s50 :: (T_FieldDeclarations_v49) -> T_FieldDeclarations_s50
inv_FieldDeclarations_s50 :: T_FieldDeclarations_s50 -> (T_FieldDeclarations_v49)
data T_FieldDeclarations_s51
C_FieldDeclarations_s51 :: T_FieldDeclarations_s51
type T_FieldDeclarations_v49 = (T_FieldDeclarations_vIn49) -> (T_FieldDeclarations_vOut49)
data T_FieldDeclarations_vIn49
T_FieldDeclarations_vIn49 :: T_FieldDeclarations_vIn49
data T_FieldDeclarations_vOut49
T_FieldDeclarations_vOut49 :: (FieldDeclarations) -> T_FieldDeclarations_vOut49
sem_FieldDeclarations_Cons :: T_FieldDeclaration -> T_FieldDeclarations -> T_FieldDeclarations
sem_FieldDeclarations_Nil :: T_FieldDeclarations
data Inh_Fixity
Inh_Fixity :: Inh_Fixity
data Syn_Fixity
Syn_Fixity :: (Fixity) -> Syn_Fixity
self_Syn_Fixity :: Syn_Fixity -> (Fixity)
wrap_Fixity :: T_Fixity -> Inh_Fixity -> (Syn_Fixity)
sem_Fixity :: Fixity -> T_Fixity
newtype T_Fixity
T_Fixity :: Identity (T_Fixity_s53) -> T_Fixity
attach_T_Fixity :: T_Fixity -> Identity (T_Fixity_s53)
newtype T_Fixity_s53
C_Fixity_s53 :: (T_Fixity_v52) -> T_Fixity_s53
inv_Fixity_s53 :: T_Fixity_s53 -> (T_Fixity_v52)
data T_Fixity_s54
C_Fixity_s54 :: T_Fixity_s54
type T_Fixity_v52 = (T_Fixity_vIn52) -> (T_Fixity_vOut52)
data T_Fixity_vIn52
T_Fixity_vIn52 :: T_Fixity_vIn52
data T_Fixity_vOut52
T_Fixity_vOut52 :: (Fixity) -> T_Fixity_vOut52
sem_Fixity_Infixl :: T_Range -> T_Fixity
sem_Fixity_Infixr :: T_Range -> T_Fixity
sem_Fixity_Infix :: T_Range -> T_Fixity
data Inh_FunctionBinding
Inh_FunctionBinding :: (DictionaryEnvironment) -> ([Id]) -> Inh_FunctionBinding
dictionaryEnv_Inh_FunctionBinding :: Inh_FunctionBinding -> (DictionaryEnvironment)
ids_Inh_FunctionBinding :: Inh_FunctionBinding -> ([Id])
data Syn_FunctionBinding
Syn_FunctionBinding :: (Int) -> (Expr -> Expr) -> (Name) -> (FunctionBinding) -> Syn_FunctionBinding
arity_Syn_FunctionBinding :: Syn_FunctionBinding -> (Int)
core_Syn_FunctionBinding :: Syn_FunctionBinding -> (Expr -> Expr)
name_Syn_FunctionBinding :: Syn_FunctionBinding -> (Name)
self_Syn_FunctionBinding :: Syn_FunctionBinding -> (FunctionBinding)
wrap_FunctionBinding :: T_FunctionBinding -> Inh_FunctionBinding -> (Syn_FunctionBinding)
sem_FunctionBinding :: FunctionBinding -> T_FunctionBinding
newtype T_FunctionBinding
T_FunctionBinding :: Identity (T_FunctionBinding_s56) -> T_FunctionBinding
attach_T_FunctionBinding :: T_FunctionBinding -> Identity (T_FunctionBinding_s56)
newtype T_FunctionBinding_s56
C_FunctionBinding_s56 :: (T_FunctionBinding_v55) -> T_FunctionBinding_s56
inv_FunctionBinding_s56 :: T_FunctionBinding_s56 -> (T_FunctionBinding_v55)
data T_FunctionBinding_s57
C_FunctionBinding_s57 :: T_FunctionBinding_s57
type T_FunctionBinding_v55 = (T_FunctionBinding_vIn55) -> (T_FunctionBinding_vOut55)
data T_FunctionBinding_vIn55
T_FunctionBinding_vIn55 :: (DictionaryEnvironment) -> ([Id]) -> T_FunctionBinding_vIn55
data T_FunctionBinding_vOut55
T_FunctionBinding_vOut55 :: (Int) -> (Expr -> Expr) -> (Name) -> (FunctionBinding) -> T_FunctionBinding_vOut55
sem_FunctionBinding_Hole :: T_Range -> (Integer) -> T_FunctionBinding
sem_FunctionBinding_Feedback :: T_Range -> (String) -> T_FunctionBinding -> T_FunctionBinding
sem_FunctionBinding_FunctionBinding :: T_Range -> T_LeftHandSide -> T_RightHandSide -> T_FunctionBinding
data Inh_FunctionBindings
Inh_FunctionBindings :: (DictionaryEnvironment) -> ([Id]) -> (Range) -> Inh_FunctionBindings
dictionaryEnv_Inh_FunctionBindings :: Inh_FunctionBindings -> (DictionaryEnvironment)
ids_Inh_FunctionBindings :: Inh_FunctionBindings -> ([Id])
range_Inh_FunctionBindings :: Inh_FunctionBindings -> (Range)
data Syn_FunctionBindings
Syn_FunctionBindings :: (Int) -> (Expr) -> (Name) -> (FunctionBindings) -> Syn_FunctionBindings
arity_Syn_FunctionBindings :: Syn_FunctionBindings -> (Int)
core_Syn_FunctionBindings :: Syn_FunctionBindings -> (Expr)
name_Syn_FunctionBindings :: Syn_FunctionBindings -> (Name)
self_Syn_FunctionBindings :: Syn_FunctionBindings -> (FunctionBindings)
wrap_FunctionBindings :: T_FunctionBindings -> Inh_FunctionBindings -> (Syn_FunctionBindings)
sem_FunctionBindings :: FunctionBindings -> T_FunctionBindings
newtype T_FunctionBindings
T_FunctionBindings :: Identity (T_FunctionBindings_s59) -> T_FunctionBindings
attach_T_FunctionBindings :: T_FunctionBindings -> Identity (T_FunctionBindings_s59)
newtype T_FunctionBindings_s59
C_FunctionBindings_s59 :: (T_FunctionBindings_v58) -> T_FunctionBindings_s59
inv_FunctionBindings_s59 :: T_FunctionBindings_s59 -> (T_FunctionBindings_v58)
data T_FunctionBindings_s60
C_FunctionBindings_s60 :: T_FunctionBindings_s60
type T_FunctionBindings_v58 = (T_FunctionBindings_vIn58) -> (T_FunctionBindings_vOut58)
data T_FunctionBindings_vIn58
T_FunctionBindings_vIn58 :: (DictionaryEnvironment) -> ([Id]) -> (Range) -> T_FunctionBindings_vIn58
data T_FunctionBindings_vOut58
T_FunctionBindings_vOut58 :: (Int) -> (Expr) -> (Name) -> (FunctionBindings) -> T_FunctionBindings_vOut58
sem_FunctionBindings_Cons :: T_FunctionBinding -> T_FunctionBindings -> T_FunctionBindings
sem_FunctionBindings_Nil :: T_FunctionBindings
data Inh_GuardedExpression
Inh_GuardedExpression :: (DictionaryEnvironment) -> Inh_GuardedExpression
dictionaryEnv_Inh_GuardedExpression :: Inh_GuardedExpression -> (DictionaryEnvironment)
data Syn_GuardedExpression
Syn_GuardedExpression :: (Expr -> Expr) -> (GuardedExpression) -> Syn_GuardedExpression
core_Syn_GuardedExpression :: Syn_GuardedExpression -> (Expr -> Expr)
self_Syn_GuardedExpression :: Syn_GuardedExpression -> (GuardedExpression)
wrap_GuardedExpression :: T_GuardedExpression -> Inh_GuardedExpression -> (Syn_GuardedExpression)
sem_GuardedExpression :: GuardedExpression -> T_GuardedExpression
newtype T_GuardedExpression
T_GuardedExpression :: Identity (T_GuardedExpression_s62) -> T_GuardedExpression
attach_T_GuardedExpression :: T_GuardedExpression -> Identity (T_GuardedExpression_s62)
newtype T_GuardedExpression_s62
C_GuardedExpression_s62 :: (T_GuardedExpression_v61) -> T_GuardedExpression_s62
inv_GuardedExpression_s62 :: T_GuardedExpression_s62 -> (T_GuardedExpression_v61)
data T_GuardedExpression_s63
C_GuardedExpression_s63 :: T_GuardedExpression_s63
type T_GuardedExpression_v61 = (T_GuardedExpression_vIn61) -> (T_GuardedExpression_vOut61)
data T_GuardedExpression_vIn61
T_GuardedExpression_vIn61 :: (DictionaryEnvironment) -> T_GuardedExpression_vIn61
data T_GuardedExpression_vOut61
T_GuardedExpression_vOut61 :: (Expr -> Expr) -> (GuardedExpression) -> T_GuardedExpression_vOut61
sem_GuardedExpression_GuardedExpression :: T_Range -> T_Expression -> T_Expression -> T_GuardedExpression
data Inh_GuardedExpressions
Inh_GuardedExpressions :: (DictionaryEnvironment) -> Inh_GuardedExpressions
dictionaryEnv_Inh_GuardedExpressions :: Inh_GuardedExpressions -> (DictionaryEnvironment)
data Syn_GuardedExpressions
Syn_GuardedExpressions :: ([Expr -> Expr]) -> (GuardedExpressions) -> Syn_GuardedExpressions
core_Syn_GuardedExpressions :: Syn_GuardedExpressions -> ([Expr -> Expr])
self_Syn_GuardedExpressions :: Syn_GuardedExpressions -> (GuardedExpressions)
wrap_GuardedExpressions :: T_GuardedExpressions -> Inh_GuardedExpressions -> (Syn_GuardedExpressions)
sem_GuardedExpressions :: GuardedExpressions -> T_GuardedExpressions
newtype T_GuardedExpressions
T_GuardedExpressions :: Identity (T_GuardedExpressions_s65) -> T_GuardedExpressions
attach_T_GuardedExpressions :: T_GuardedExpressions -> Identity (T_GuardedExpressions_s65)
newtype T_GuardedExpressions_s65
C_GuardedExpressions_s65 :: (T_GuardedExpressions_v64) -> T_GuardedExpressions_s65
inv_GuardedExpressions_s65 :: T_GuardedExpressions_s65 -> (T_GuardedExpressions_v64)
data T_GuardedExpressions_s66
C_GuardedExpressions_s66 :: T_GuardedExpressions_s66
type T_GuardedExpressions_v64 = (T_GuardedExpressions_vIn64) -> (T_GuardedExpressions_vOut64)
data T_GuardedExpressions_vIn64
T_GuardedExpressions_vIn64 :: (DictionaryEnvironment) -> T_GuardedExpressions_vIn64
data T_GuardedExpressions_vOut64
T_GuardedExpressions_vOut64 :: ([Expr -> Expr]) -> (GuardedExpressions) -> T_GuardedExpressions_vOut64
sem_GuardedExpressions_Cons :: T_GuardedExpression -> T_GuardedExpressions -> T_GuardedExpressions
sem_GuardedExpressions_Nil :: T_GuardedExpressions
data Inh_Import
Inh_Import :: Inh_Import
data Syn_Import
Syn_Import :: (Import) -> Syn_Import
self_Syn_Import :: Syn_Import -> (Import)
wrap_Import :: T_Import -> Inh_Import -> (Syn_Import)
sem_Import :: Import -> T_Import
newtype T_Import
T_Import :: Identity (T_Import_s68) -> T_Import
attach_T_Import :: T_Import -> Identity (T_Import_s68)
newtype T_Import_s68
C_Import_s68 :: (T_Import_v67) -> T_Import_s68
inv_Import_s68 :: T_Import_s68 -> (T_Import_v67)
data T_Import_s69
C_Import_s69 :: T_Import_s69
type T_Import_v67 = (T_Import_vIn67) -> (T_Import_vOut67)
data T_Import_vIn67
T_Import_vIn67 :: T_Import_vIn67
data T_Import_vOut67
T_Import_vOut67 :: (Import) -> T_Import_vOut67
sem_Import_Variable :: T_Range -> T_Name -> T_Import
sem_Import_TypeOrClass :: T_Range -> T_Name -> T_MaybeNames -> T_Import
sem_Import_TypeOrClassComplete :: T_Range -> T_Name -> T_Import
data Inh_ImportDeclaration
Inh_ImportDeclaration :: Inh_ImportDeclaration
data Syn_ImportDeclaration
Syn_ImportDeclaration :: (ImportDeclaration) -> Syn_ImportDeclaration
self_Syn_ImportDeclaration :: Syn_ImportDeclaration -> (ImportDeclaration)
wrap_ImportDeclaration :: T_ImportDeclaration -> Inh_ImportDeclaration -> (Syn_ImportDeclaration)
sem_ImportDeclaration :: ImportDeclaration -> T_ImportDeclaration
newtype T_ImportDeclaration
T_ImportDeclaration :: Identity (T_ImportDeclaration_s71) -> T_ImportDeclaration
attach_T_ImportDeclaration :: T_ImportDeclaration -> Identity (T_ImportDeclaration_s71)
newtype T_ImportDeclaration_s71
C_ImportDeclaration_s71 :: (T_ImportDeclaration_v70) -> T_ImportDeclaration_s71
inv_ImportDeclaration_s71 :: T_ImportDeclaration_s71 -> (T_ImportDeclaration_v70)
data T_ImportDeclaration_s72
C_ImportDeclaration_s72 :: T_ImportDeclaration_s72
type T_ImportDeclaration_v70 = (T_ImportDeclaration_vIn70) -> (T_ImportDeclaration_vOut70)
data T_ImportDeclaration_vIn70
T_ImportDeclaration_vIn70 :: T_ImportDeclaration_vIn70
data T_ImportDeclaration_vOut70
T_ImportDeclaration_vOut70 :: (ImportDeclaration) -> T_ImportDeclaration_vOut70
sem_ImportDeclaration_Import :: T_Range -> (Bool) -> T_Name -> T_MaybeName -> T_MaybeImportSpecification -> T_ImportDeclaration
sem_ImportDeclaration_Empty :: T_Range -> T_ImportDeclaration
data Inh_ImportDeclarations
Inh_ImportDeclarations :: Inh_ImportDeclarations
data Syn_ImportDeclarations
Syn_ImportDeclarations :: (ImportDeclarations) -> Syn_ImportDeclarations
self_Syn_ImportDeclarations :: Syn_ImportDeclarations -> (ImportDeclarations)
wrap_ImportDeclarations :: T_ImportDeclarations -> Inh_ImportDeclarations -> (Syn_ImportDeclarations)
sem_ImportDeclarations :: ImportDeclarations -> T_ImportDeclarations
newtype T_ImportDeclarations
T_ImportDeclarations :: Identity (T_ImportDeclarations_s74) -> T_ImportDeclarations
attach_T_ImportDeclarations :: T_ImportDeclarations -> Identity (T_ImportDeclarations_s74)
newtype T_ImportDeclarations_s74
C_ImportDeclarations_s74 :: (T_ImportDeclarations_v73) -> T_ImportDeclarations_s74
inv_ImportDeclarations_s74 :: T_ImportDeclarations_s74 -> (T_ImportDeclarations_v73)
data T_ImportDeclarations_s75
C_ImportDeclarations_s75 :: T_ImportDeclarations_s75
type T_ImportDeclarations_v73 = (T_ImportDeclarations_vIn73) -> (T_ImportDeclarations_vOut73)
data T_ImportDeclarations_vIn73
T_ImportDeclarations_vIn73 :: T_ImportDeclarations_vIn73
data T_ImportDeclarations_vOut73
T_ImportDeclarations_vOut73 :: (ImportDeclarations) -> T_ImportDeclarations_vOut73
sem_ImportDeclarations_Cons :: T_ImportDeclaration -> T_ImportDeclarations -> T_ImportDeclarations
sem_ImportDeclarations_Nil :: T_ImportDeclarations
data Inh_ImportSpecification
Inh_ImportSpecification :: Inh_ImportSpecification
data Syn_ImportSpecification
Syn_ImportSpecification :: (ImportSpecification) -> Syn_ImportSpecification
self_Syn_ImportSpecification :: Syn_ImportSpecification -> (ImportSpecification)
wrap_ImportSpecification :: T_ImportSpecification -> Inh_ImportSpecification -> (Syn_ImportSpecification)
sem_ImportSpecification :: ImportSpecification -> T_ImportSpecification
newtype T_ImportSpecification
T_ImportSpecification :: Identity (T_ImportSpecification_s77) -> T_ImportSpecification
attach_T_ImportSpecification :: T_ImportSpecification -> Identity (T_ImportSpecification_s77)
newtype T_ImportSpecification_s77
C_ImportSpecification_s77 :: (T_ImportSpecification_v76) -> T_ImportSpecification_s77
inv_ImportSpecification_s77 :: T_ImportSpecification_s77 -> (T_ImportSpecification_v76)
data T_ImportSpecification_s78
C_ImportSpecification_s78 :: T_ImportSpecification_s78
type T_ImportSpecification_v76 = (T_ImportSpecification_vIn76) -> (T_ImportSpecification_vOut76)
data T_ImportSpecification_vIn76
T_ImportSpecification_vIn76 :: T_ImportSpecification_vIn76
data T_ImportSpecification_vOut76
T_ImportSpecification_vOut76 :: (ImportSpecification) -> T_ImportSpecification_vOut76
sem_ImportSpecification_Import :: T_Range -> (Bool) -> T_Imports -> T_ImportSpecification
data Inh_Imports
Inh_Imports :: Inh_Imports
data Syn_Imports
Syn_Imports :: (Imports) -> Syn_Imports
self_Syn_Imports :: Syn_Imports -> (Imports)
wrap_Imports :: T_Imports -> Inh_Imports -> (Syn_Imports)
sem_Imports :: Imports -> T_Imports
newtype T_Imports
T_Imports :: Identity (T_Imports_s80) -> T_Imports
attach_T_Imports :: T_Imports -> Identity (T_Imports_s80)
newtype T_Imports_s80
C_Imports_s80 :: (T_Imports_v79) -> T_Imports_s80
inv_Imports_s80 :: T_Imports_s80 -> (T_Imports_v79)
data T_Imports_s81
C_Imports_s81 :: T_Imports_s81
type T_Imports_v79 = (T_Imports_vIn79) -> (T_Imports_vOut79)
data T_Imports_vIn79
T_Imports_vIn79 :: T_Imports_vIn79
data T_Imports_vOut79
T_Imports_vOut79 :: (Imports) -> T_Imports_vOut79
sem_Imports_Cons :: T_Import -> T_Imports -> T_Imports
sem_Imports_Nil :: T_Imports
data Inh_LeftHandSide
Inh_LeftHandSide :: Inh_LeftHandSide
data Syn_LeftHandSide
Syn_LeftHandSide :: (Int) -> (Name) -> (Patterns) -> (LeftHandSide) -> Syn_LeftHandSide
arity_Syn_LeftHandSide :: Syn_LeftHandSide -> (Int)
name_Syn_LeftHandSide :: Syn_LeftHandSide -> (Name)
patterns_Syn_LeftHandSide :: Syn_LeftHandSide -> (Patterns)
self_Syn_LeftHandSide :: Syn_LeftHandSide -> (LeftHandSide)
wrap_LeftHandSide :: T_LeftHandSide -> Inh_LeftHandSide -> (Syn_LeftHandSide)
sem_LeftHandSide :: LeftHandSide -> T_LeftHandSide
newtype T_LeftHandSide
T_LeftHandSide :: Identity (T_LeftHandSide_s83) -> T_LeftHandSide
attach_T_LeftHandSide :: T_LeftHandSide -> Identity (T_LeftHandSide_s83)
newtype T_LeftHandSide_s83
C_LeftHandSide_s83 :: (T_LeftHandSide_v82) -> T_LeftHandSide_s83
inv_LeftHandSide_s83 :: T_LeftHandSide_s83 -> (T_LeftHandSide_v82)
data T_LeftHandSide_s84
C_LeftHandSide_s84 :: T_LeftHandSide_s84
type T_LeftHandSide_v82 = (T_LeftHandSide_vIn82) -> (T_LeftHandSide_vOut82)
data T_LeftHandSide_vIn82
T_LeftHandSide_vIn82 :: T_LeftHandSide_vIn82
data T_LeftHandSide_vOut82
T_LeftHandSide_vOut82 :: (Int) -> (Name) -> (Patterns) -> (LeftHandSide) -> T_LeftHandSide_vOut82
sem_LeftHandSide_Function :: T_Range -> T_Name -> T_Patterns -> T_LeftHandSide
sem_LeftHandSide_Infix :: T_Range -> T_Pattern -> T_Name -> T_Pattern -> T_LeftHandSide
sem_LeftHandSide_Parenthesized :: T_Range -> T_LeftHandSide -> T_Patterns -> T_LeftHandSide
data Inh_Literal
Inh_Literal :: Inh_Literal
data Syn_Literal
Syn_Literal :: (Expr) -> (Literal) -> Syn_Literal
core_Syn_Literal :: Syn_Literal -> (Expr)
self_Syn_Literal :: Syn_Literal -> (Literal)
wrap_Literal :: T_Literal -> Inh_Literal -> (Syn_Literal)
sem_Literal :: Literal -> T_Literal
newtype T_Literal
T_Literal :: Identity (T_Literal_s86) -> T_Literal
attach_T_Literal :: T_Literal -> Identity (T_Literal_s86)
newtype T_Literal_s86
C_Literal_s86 :: (T_Literal_v85) -> T_Literal_s86
inv_Literal_s86 :: T_Literal_s86 -> (T_Literal_v85)
data T_Literal_s87
C_Literal_s87 :: T_Literal_s87
type T_Literal_v85 = (T_Literal_vIn85) -> (T_Literal_vOut85)
data T_Literal_vIn85
T_Literal_vIn85 :: T_Literal_vIn85
data T_Literal_vOut85
T_Literal_vOut85 :: (Expr) -> (Literal) -> T_Literal_vOut85
sem_Literal_Int :: T_Range -> (String) -> T_Literal
sem_Literal_Char :: T_Range -> (String) -> T_Literal
sem_Literal_Float :: T_Range -> (String) -> T_Literal
sem_Literal_String :: T_Range -> (String) -> T_Literal
data Inh_MaybeDeclarations
Inh_MaybeDeclarations :: (DictionaryEnvironment) -> Inh_MaybeDeclarations
dictionaryEnv_Inh_MaybeDeclarations :: Inh_MaybeDeclarations -> (DictionaryEnvironment)
data Syn_MaybeDeclarations
Syn_MaybeDeclarations :: (Expr -> Expr) -> (MaybeDeclarations) -> Syn_MaybeDeclarations
core_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> (Expr -> Expr)
self_Syn_MaybeDeclarations :: Syn_MaybeDeclarations -> (MaybeDeclarations)
wrap_MaybeDeclarations :: T_MaybeDeclarations -> Inh_MaybeDeclarations -> (Syn_MaybeDeclarations)
sem_MaybeDeclarations :: MaybeDeclarations -> T_MaybeDeclarations
newtype T_MaybeDeclarations
T_MaybeDeclarations :: Identity (T_MaybeDeclarations_s89) -> T_MaybeDeclarations
attach_T_MaybeDeclarations :: T_MaybeDeclarations -> Identity (T_MaybeDeclarations_s89)
newtype T_MaybeDeclarations_s89
C_MaybeDeclarations_s89 :: (T_MaybeDeclarations_v88) -> T_MaybeDeclarations_s89
inv_MaybeDeclarations_s89 :: T_MaybeDeclarations_s89 -> (T_MaybeDeclarations_v88)
data T_MaybeDeclarations_s90
C_MaybeDeclarations_s90 :: T_MaybeDeclarations_s90
type T_MaybeDeclarations_v88 = (T_MaybeDeclarations_vIn88) -> (T_MaybeDeclarations_vOut88)
data T_MaybeDeclarations_vIn88
T_MaybeDeclarations_vIn88 :: (DictionaryEnvironment) -> T_MaybeDeclarations_vIn88
data T_MaybeDeclarations_vOut88
T_MaybeDeclarations_vOut88 :: (Expr -> Expr) -> (MaybeDeclarations) -> T_MaybeDeclarations_vOut88
sem_MaybeDeclarations_Nothing :: T_MaybeDeclarations
sem_MaybeDeclarations_Just :: T_Declarations -> T_MaybeDeclarations
data Inh_MaybeExports
Inh_MaybeExports :: Inh_MaybeExports
data Syn_MaybeExports
Syn_MaybeExports :: (IdSet) -> (IdSet) -> (MaybeExports) -> (IdSet) -> (IdSet) -> Syn_MaybeExports
cons_Syn_MaybeExports :: Syn_MaybeExports -> (IdSet)
mods_Syn_MaybeExports :: Syn_MaybeExports -> (IdSet)
self_Syn_MaybeExports :: Syn_MaybeExports -> (MaybeExports)
types_Syn_MaybeExports :: Syn_MaybeExports -> (IdSet)
values_Syn_MaybeExports :: Syn_MaybeExports -> (IdSet)
wrap_MaybeExports :: T_MaybeExports -> Inh_MaybeExports -> (Syn_MaybeExports)
sem_MaybeExports :: MaybeExports -> T_MaybeExports
newtype T_MaybeExports
T_MaybeExports :: Identity (T_MaybeExports_s92) -> T_MaybeExports
attach_T_MaybeExports :: T_MaybeExports -> Identity (T_MaybeExports_s92)
newtype T_MaybeExports_s92
C_MaybeExports_s92 :: (T_MaybeExports_v91) -> T_MaybeExports_s92
inv_MaybeExports_s92 :: T_MaybeExports_s92 -> (T_MaybeExports_v91)
data T_MaybeExports_s93
C_MaybeExports_s93 :: T_MaybeExports_s93
type T_MaybeExports_v91 = (T_MaybeExports_vIn91) -> (T_MaybeExports_vOut91)
data T_MaybeExports_vIn91
T_MaybeExports_vIn91 :: T_MaybeExports_vIn91
data T_MaybeExports_vOut91
T_MaybeExports_vOut91 :: (IdSet) -> (IdSet) -> (MaybeExports) -> (IdSet) -> (IdSet) -> T_MaybeExports_vOut91
sem_MaybeExports_Nothing :: T_MaybeExports
sem_MaybeExports_Just :: T_Exports -> T_MaybeExports
data Inh_MaybeExpression
Inh_MaybeExpression :: (DictionaryEnvironment) -> Inh_MaybeExpression
dictionaryEnv_Inh_MaybeExpression :: Inh_MaybeExpression -> (DictionaryEnvironment)
data Syn_MaybeExpression
Syn_MaybeExpression :: (Maybe Expr) -> (MaybeExpression) -> Syn_MaybeExpression
core_Syn_MaybeExpression :: Syn_MaybeExpression -> (Maybe Expr)
self_Syn_MaybeExpression :: Syn_MaybeExpression -> (MaybeExpression)
wrap_MaybeExpression :: T_MaybeExpression -> Inh_MaybeExpression -> (Syn_MaybeExpression)
sem_MaybeExpression :: MaybeExpression -> T_MaybeExpression
newtype T_MaybeExpression
T_MaybeExpression :: Identity (T_MaybeExpression_s95) -> T_MaybeExpression
attach_T_MaybeExpression :: T_MaybeExpression -> Identity (T_MaybeExpression_s95)
newtype T_MaybeExpression_s95
C_MaybeExpression_s95 :: (T_MaybeExpression_v94) -> T_MaybeExpression_s95
inv_MaybeExpression_s95 :: T_MaybeExpression_s95 -> (T_MaybeExpression_v94)
data T_MaybeExpression_s96
C_MaybeExpression_s96 :: T_MaybeExpression_s96
type T_MaybeExpression_v94 = (T_MaybeExpression_vIn94) -> (T_MaybeExpression_vOut94)
data T_MaybeExpression_vIn94
T_MaybeExpression_vIn94 :: (DictionaryEnvironment) -> T_MaybeExpression_vIn94
data T_MaybeExpression_vOut94
T_MaybeExpression_vOut94 :: (Maybe Expr) -> (MaybeExpression) -> T_MaybeExpression_vOut94
sem_MaybeExpression_Nothing :: T_MaybeExpression
sem_MaybeExpression_Just :: T_Expression -> T_MaybeExpression
data Inh_MaybeImportSpecification
Inh_MaybeImportSpecification :: Inh_MaybeImportSpecification
data Syn_MaybeImportSpecification
Syn_MaybeImportSpecification :: (MaybeImportSpecification) -> Syn_MaybeImportSpecification
self_Syn_MaybeImportSpecification :: Syn_MaybeImportSpecification -> (MaybeImportSpecification)
wrap_MaybeImportSpecification :: T_MaybeImportSpecification -> Inh_MaybeImportSpecification -> (Syn_MaybeImportSpecification)
sem_MaybeImportSpecification :: MaybeImportSpecification -> T_MaybeImportSpecification
newtype T_MaybeImportSpecification
T_MaybeImportSpecification :: Identity (T_MaybeImportSpecification_s98) -> T_MaybeImportSpecification
attach_T_MaybeImportSpecification :: T_MaybeImportSpecification -> Identity (T_MaybeImportSpecification_s98)
newtype T_MaybeImportSpecification_s98
C_MaybeImportSpecification_s98 :: (T_MaybeImportSpecification_v97) -> T_MaybeImportSpecification_s98
inv_MaybeImportSpecification_s98 :: T_MaybeImportSpecification_s98 -> (T_MaybeImportSpecification_v97)
data T_MaybeImportSpecification_s99
C_MaybeImportSpecification_s99 :: T_MaybeImportSpecification_s99
type T_MaybeImportSpecification_v97 = (T_MaybeImportSpecification_vIn97) -> (T_MaybeImportSpecification_vOut97)
data T_MaybeImportSpecification_vIn97
T_MaybeImportSpecification_vIn97 :: T_MaybeImportSpecification_vIn97
data T_MaybeImportSpecification_vOut97
T_MaybeImportSpecification_vOut97 :: (MaybeImportSpecification) -> T_MaybeImportSpecification_vOut97
sem_MaybeImportSpecification_Nothing :: T_MaybeImportSpecification
sem_MaybeImportSpecification_Just :: T_ImportSpecification -> T_MaybeImportSpecification
data Inh_MaybeInt
Inh_MaybeInt :: Inh_MaybeInt
data Syn_MaybeInt
Syn_MaybeInt :: (MaybeInt) -> Syn_MaybeInt
self_Syn_MaybeInt :: Syn_MaybeInt -> (MaybeInt)
wrap_MaybeInt :: T_MaybeInt -> Inh_MaybeInt -> (Syn_MaybeInt)
sem_MaybeInt :: MaybeInt -> T_MaybeInt
newtype T_MaybeInt
T_MaybeInt :: Identity (T_MaybeInt_s101) -> T_MaybeInt
attach_T_MaybeInt :: T_MaybeInt -> Identity (T_MaybeInt_s101)
newtype T_MaybeInt_s101
C_MaybeInt_s101 :: (T_MaybeInt_v100) -> T_MaybeInt_s101
inv_MaybeInt_s101 :: T_MaybeInt_s101 -> (T_MaybeInt_v100)
data T_MaybeInt_s102
C_MaybeInt_s102 :: T_MaybeInt_s102
type T_MaybeInt_v100 = (T_MaybeInt_vIn100) -> (T_MaybeInt_vOut100)
data T_MaybeInt_vIn100
T_MaybeInt_vIn100 :: T_MaybeInt_vIn100
data T_MaybeInt_vOut100
T_MaybeInt_vOut100 :: (MaybeInt) -> T_MaybeInt_vOut100
sem_MaybeInt_Nothing :: T_MaybeInt
sem_MaybeInt_Just :: (Int) -> T_MaybeInt
data Inh_MaybeName
Inh_MaybeName :: Inh_MaybeName
data Syn_MaybeName
Syn_MaybeName :: (Bool) -> (Maybe Name) -> (MaybeName) -> Syn_MaybeName
isNothing_Syn_MaybeName :: Syn_MaybeName -> (Bool)
name_Syn_MaybeName :: Syn_MaybeName -> (Maybe Name)
self_Syn_MaybeName :: Syn_MaybeName -> (MaybeName)
wrap_MaybeName :: T_MaybeName -> Inh_MaybeName -> (Syn_MaybeName)
sem_MaybeName :: MaybeName -> T_MaybeName
newtype T_MaybeName
T_MaybeName :: Identity (T_MaybeName_s104) -> T_MaybeName
attach_T_MaybeName :: T_MaybeName -> Identity (T_MaybeName_s104)
newtype T_MaybeName_s104
C_MaybeName_s104 :: (T_MaybeName_v103) -> T_MaybeName_s104
inv_MaybeName_s104 :: T_MaybeName_s104 -> (T_MaybeName_v103)
data T_MaybeName_s105
C_MaybeName_s105 :: T_MaybeName_s105
type T_MaybeName_v103 = (T_MaybeName_vIn103) -> (T_MaybeName_vOut103)
data T_MaybeName_vIn103
T_MaybeName_vIn103 :: T_MaybeName_vIn103
data T_MaybeName_vOut103
T_MaybeName_vOut103 :: (Bool) -> (Maybe Name) -> (MaybeName) -> T_MaybeName_vOut103
sem_MaybeName_Nothing :: T_MaybeName
sem_MaybeName_Just :: T_Name -> T_MaybeName
data Inh_MaybeNames
Inh_MaybeNames :: Inh_MaybeNames
data Syn_MaybeNames
Syn_MaybeNames :: (Maybe [Name]) -> (MaybeNames) -> Syn_MaybeNames
names_Syn_MaybeNames :: Syn_MaybeNames -> (Maybe [Name])
self_Syn_MaybeNames :: Syn_MaybeNames -> (MaybeNames)
wrap_MaybeNames :: T_MaybeNames -> Inh_MaybeNames -> (Syn_MaybeNames)
sem_MaybeNames :: MaybeNames -> T_MaybeNames
newtype T_MaybeNames
T_MaybeNames :: Identity (T_MaybeNames_s107) -> T_MaybeNames
attach_T_MaybeNames :: T_MaybeNames -> Identity (T_MaybeNames_s107)
newtype T_MaybeNames_s107
C_MaybeNames_s107 :: (T_MaybeNames_v106) -> T_MaybeNames_s107
inv_MaybeNames_s107 :: T_MaybeNames_s107 -> (T_MaybeNames_v106)
data T_MaybeNames_s108
C_MaybeNames_s108 :: T_MaybeNames_s108
type T_MaybeNames_v106 = (T_MaybeNames_vIn106) -> (T_MaybeNames_vOut106)
data T_MaybeNames_vIn106
T_MaybeNames_vIn106 :: T_MaybeNames_vIn106
data T_MaybeNames_vOut106
T_MaybeNames_vOut106 :: (Maybe [Name]) -> (MaybeNames) -> T_MaybeNames_vOut106
sem_MaybeNames_Nothing :: T_MaybeNames
sem_MaybeNames_Just :: T_Names -> T_MaybeNames
data Inh_Module
Inh_Module :: (DictionaryEnvironment) -> ([CoreDecl]) -> (ImportEnvironment) -> (TypeEnvironment) -> Inh_Module
dictionaryEnv_Inh_Module :: Inh_Module -> (DictionaryEnvironment)
extraDecls_Inh_Module :: Inh_Module -> ([CoreDecl])
importEnv_Inh_Module :: Inh_Module -> (ImportEnvironment)
toplevelTypes_Inh_Module :: Inh_Module -> (TypeEnvironment)
data Syn_Module
Syn_Module :: (CoreModule) -> (Module) -> Syn_Module
core_Syn_Module :: Syn_Module -> (CoreModule)
self_Syn_Module :: Syn_Module -> (Module)
wrap_Module :: T_Module -> Inh_Module -> (Syn_Module)
sem_Module :: Module -> T_Module
newtype T_Module
T_Module :: Identity (T_Module_s110) -> T_Module
attach_T_Module :: T_Module -> Identity (T_Module_s110)
newtype T_Module_s110
C_Module_s110 :: (T_Module_v109) -> T_Module_s110
inv_Module_s110 :: T_Module_s110 -> (T_Module_v109)
data T_Module_s111
C_Module_s111 :: T_Module_s111
type T_Module_v109 = (T_Module_vIn109) -> (T_Module_vOut109)
data T_Module_vIn109
T_Module_vIn109 :: (DictionaryEnvironment) -> ([CoreDecl]) -> (ImportEnvironment) -> (TypeEnvironment) -> T_Module_vIn109
data T_Module_vOut109
T_Module_vOut109 :: (CoreModule) -> (Module) -> T_Module_vOut109
sem_Module_Module :: T_Range -> T_MaybeName -> T_MaybeExports -> T_Body -> T_Module
data Inh_Name
Inh_Name :: Inh_Name
data Syn_Name
Syn_Name :: (Name) -> Syn_Name
self_Syn_Name :: Syn_Name -> (Name)
wrap_Name :: T_Name -> Inh_Name -> (Syn_Name)
sem_Name :: Name -> T_Name
newtype T_Name
T_Name :: Identity (T_Name_s113) -> T_Name
attach_T_Name :: T_Name -> Identity (T_Name_s113)
newtype T_Name_s113
C_Name_s113 :: (T_Name_v112) -> T_Name_s113
inv_Name_s113 :: T_Name_s113 -> (T_Name_v112)
data T_Name_s114
C_Name_s114 :: T_Name_s114
type T_Name_v112 = (T_Name_vIn112) -> (T_Name_vOut112)
data T_Name_vIn112
T_Name_vIn112 :: T_Name_vIn112
data T_Name_vOut112
T_Name_vOut112 :: (Name) -> T_Name_vOut112
sem_Name_Identifier :: T_Range -> T_Strings -> (String) -> T_Name
sem_Name_Operator :: T_Range -> T_Strings -> (String) -> T_Name
sem_Name_Special :: T_Range -> T_Strings -> (String) -> T_Name
data Inh_Names
Inh_Names :: Inh_Names
data Syn_Names
Syn_Names :: ([Name]) -> (Names) -> Syn_Names
names_Syn_Names :: Syn_Names -> ([Name])
self_Syn_Names :: Syn_Names -> (Names)
wrap_Names :: T_Names -> Inh_Names -> (Syn_Names)
sem_Names :: Names -> T_Names
newtype T_Names
T_Names :: Identity (T_Names_s116) -> T_Names
attach_T_Names :: T_Names -> Identity (T_Names_s116)
newtype T_Names_s116
C_Names_s116 :: (T_Names_v115) -> T_Names_s116
inv_Names_s116 :: T_Names_s116 -> (T_Names_v115)
data T_Names_s117
C_Names_s117 :: T_Names_s117
type T_Names_v115 = (T_Names_vIn115) -> (T_Names_vOut115)
data T_Names_vIn115
T_Names_vIn115 :: T_Names_vIn115
data T_Names_vOut115
T_Names_vOut115 :: ([Name]) -> (Names) -> T_Names_vOut115
sem_Names_Cons :: T_Name -> T_Names -> T_Names
sem_Names_Nil :: T_Names
data Inh_Pattern
Inh_Pattern :: Inh_Pattern
data Syn_Pattern
Syn_Pattern :: (Pattern) -> ([Name]) -> Syn_Pattern
self_Syn_Pattern :: Syn_Pattern -> (Pattern)
vars_Syn_Pattern :: Syn_Pattern -> ([Name])
wrap_Pattern :: T_Pattern -> Inh_Pattern -> (Syn_Pattern)
sem_Pattern :: Pattern -> T_Pattern
newtype T_Pattern
T_Pattern :: Identity (T_Pattern_s119) -> T_Pattern
attach_T_Pattern :: T_Pattern -> Identity (T_Pattern_s119)
newtype T_Pattern_s119
C_Pattern_s119 :: (T_Pattern_v118) -> T_Pattern_s119
inv_Pattern_s119 :: T_Pattern_s119 -> (T_Pattern_v118)
data T_Pattern_s120
C_Pattern_s120 :: T_Pattern_s120
type T_Pattern_v118 = (T_Pattern_vIn118) -> (T_Pattern_vOut118)
data T_Pattern_vIn118
T_Pattern_vIn118 :: T_Pattern_vIn118
data T_Pattern_vOut118
T_Pattern_vOut118 :: (Pattern) -> ([Name]) -> T_Pattern_vOut118
sem_Pattern_Hole :: T_Range -> (Integer) -> T_Pattern
sem_Pattern_Literal :: T_Range -> T_Literal -> T_Pattern
sem_Pattern_Variable :: T_Range -> T_Name -> T_Pattern
sem_Pattern_Constructor :: T_Range -> T_Name -> T_Patterns -> T_Pattern
sem_Pattern_Parenthesized :: T_Range -> T_Pattern -> T_Pattern
sem_Pattern_InfixConstructor :: T_Range -> T_Pattern -> T_Name -> T_Pattern -> T_Pattern
sem_Pattern_List :: T_Range -> T_Patterns -> T_Pattern
sem_Pattern_Tuple :: T_Range -> T_Patterns -> T_Pattern
sem_Pattern_Record :: T_Range -> T_Name -> T_RecordPatternBindings -> T_Pattern
sem_Pattern_Negate :: T_Range -> T_Literal -> T_Pattern
sem_Pattern_As :: T_Range -> T_Name -> T_Pattern -> T_Pattern
sem_Pattern_Wildcard :: T_Range -> T_Pattern
sem_Pattern_Irrefutable :: T_Range -> T_Pattern -> T_Pattern
sem_Pattern_Successor :: T_Range -> T_Name -> T_Literal -> T_Pattern
sem_Pattern_NegateFloat :: T_Range -> T_Literal -> T_Pattern
data Inh_Patterns
Inh_Patterns :: Inh_Patterns
data Syn_Patterns
Syn_Patterns :: (Int) -> (Patterns) -> ([Name]) -> Syn_Patterns
length_Syn_Patterns :: Syn_Patterns -> (Int)
self_Syn_Patterns :: Syn_Patterns -> (Patterns)
vars_Syn_Patterns :: Syn_Patterns -> ([Name])
wrap_Patterns :: T_Patterns -> Inh_Patterns -> (Syn_Patterns)
sem_Patterns :: Patterns -> T_Patterns
newtype T_Patterns
T_Patterns :: Identity (T_Patterns_s122) -> T_Patterns
attach_T_Patterns :: T_Patterns -> Identity (T_Patterns_s122)
newtype T_Patterns_s122
C_Patterns_s122 :: (T_Patterns_v121) -> T_Patterns_s122
inv_Patterns_s122 :: T_Patterns_s122 -> (T_Patterns_v121)
data T_Patterns_s123
C_Patterns_s123 :: T_Patterns_s123
type T_Patterns_v121 = (T_Patterns_vIn121) -> (T_Patterns_vOut121)
data T_Patterns_vIn121
T_Patterns_vIn121 :: T_Patterns_vIn121
data T_Patterns_vOut121
T_Patterns_vOut121 :: (Int) -> (Patterns) -> ([Name]) -> T_Patterns_vOut121
sem_Patterns_Cons :: T_Pattern -> T_Patterns -> T_Patterns
sem_Patterns_Nil :: T_Patterns
data Inh_Position
Inh_Position :: Inh_Position
data Syn_Position
Syn_Position :: (Position) -> Syn_Position
self_Syn_Position :: Syn_Position -> (Position)
wrap_Position :: T_Position -> Inh_Position -> (Syn_Position)
sem_Position :: Position -> T_Position
newtype T_Position
T_Position :: Identity (T_Position_s125) -> T_Position
attach_T_Position :: T_Position -> Identity (T_Position_s125)
newtype T_Position_s125
C_Position_s125 :: (T_Position_v124) -> T_Position_s125
inv_Position_s125 :: T_Position_s125 -> (T_Position_v124)
data T_Position_s126
C_Position_s126 :: T_Position_s126
type T_Position_v124 = (T_Position_vIn124) -> (T_Position_vOut124)
data T_Position_vIn124
T_Position_vIn124 :: T_Position_vIn124
data T_Position_vOut124
T_Position_vOut124 :: (Position) -> T_Position_vOut124
sem_Position_Position :: (String) -> (Int) -> (Int) -> T_Position
sem_Position_Unknown :: T_Position
data Inh_Qualifier
Inh_Qualifier :: (DictionaryEnvironment) -> Inh_Qualifier
dictionaryEnv_Inh_Qualifier :: Inh_Qualifier -> (DictionaryEnvironment)
data Syn_Qualifier
Syn_Qualifier :: (Expr -> Expr) -> (Qualifier) -> Syn_Qualifier
core_Syn_Qualifier :: Syn_Qualifier -> (Expr -> Expr)
self_Syn_Qualifier :: Syn_Qualifier -> (Qualifier)
wrap_Qualifier :: T_Qualifier -> Inh_Qualifier -> (Syn_Qualifier)
sem_Qualifier :: Qualifier -> T_Qualifier
newtype T_Qualifier
T_Qualifier :: Identity (T_Qualifier_s128) -> T_Qualifier
attach_T_Qualifier :: T_Qualifier -> Identity (T_Qualifier_s128)
newtype T_Qualifier_s128
C_Qualifier_s128 :: (T_Qualifier_v127) -> T_Qualifier_s128
inv_Qualifier_s128 :: T_Qualifier_s128 -> (T_Qualifier_v127)
data T_Qualifier_s129
C_Qualifier_s129 :: T_Qualifier_s129
type T_Qualifier_v127 = (T_Qualifier_vIn127) -> (T_Qualifier_vOut127)
data T_Qualifier_vIn127
T_Qualifier_vIn127 :: (DictionaryEnvironment) -> T_Qualifier_vIn127
data T_Qualifier_vOut127
T_Qualifier_vOut127 :: (Expr -> Expr) -> (Qualifier) -> T_Qualifier_vOut127
sem_Qualifier_Guard :: T_Range -> T_Expression -> T_Qualifier
sem_Qualifier_Let :: T_Range -> T_Declarations -> T_Qualifier
sem_Qualifier_Generator :: T_Range -> T_Pattern -> T_Expression -> T_Qualifier
sem_Qualifier_Empty :: T_Range -> T_Qualifier
data Inh_Qualifiers
Inh_Qualifiers :: (DictionaryEnvironment) -> Inh_Qualifiers
dictionaryEnv_Inh_Qualifiers :: Inh_Qualifiers -> (DictionaryEnvironment)
data Syn_Qualifiers
Syn_Qualifiers :: ([Expr -> Expr]) -> (Qualifiers) -> Syn_Qualifiers
core_Syn_Qualifiers :: Syn_Qualifiers -> ([Expr -> Expr])
self_Syn_Qualifiers :: Syn_Qualifiers -> (Qualifiers)
wrap_Qualifiers :: T_Qualifiers -> Inh_Qualifiers -> (Syn_Qualifiers)
sem_Qualifiers :: Qualifiers -> T_Qualifiers
newtype T_Qualifiers
T_Qualifiers :: Identity (T_Qualifiers_s131) -> T_Qualifiers
attach_T_Qualifiers :: T_Qualifiers -> Identity (T_Qualifiers_s131)
newtype T_Qualifiers_s131
C_Qualifiers_s131 :: (T_Qualifiers_v130) -> T_Qualifiers_s131
inv_Qualifiers_s131 :: T_Qualifiers_s131 -> (T_Qualifiers_v130)
data T_Qualifiers_s132
C_Qualifiers_s132 :: T_Qualifiers_s132
type T_Qualifiers_v130 = (T_Qualifiers_vIn130) -> (T_Qualifiers_vOut130)
data T_Qualifiers_vIn130
T_Qualifiers_vIn130 :: (DictionaryEnvironment) -> T_Qualifiers_vIn130
data T_Qualifiers_vOut130
T_Qualifiers_vOut130 :: ([Expr -> Expr]) -> (Qualifiers) -> T_Qualifiers_vOut130
sem_Qualifiers_Cons :: T_Qualifier -> T_Qualifiers -> T_Qualifiers
sem_Qualifiers_Nil :: T_Qualifiers
data Inh_Range
Inh_Range :: Inh_Range
data Syn_Range
Syn_Range :: (Range) -> Syn_Range
self_Syn_Range :: Syn_Range -> (Range)
wrap_Range :: T_Range -> Inh_Range -> (Syn_Range)
sem_Range :: Range -> T_Range
newtype T_Range
T_Range :: Identity (T_Range_s134) -> T_Range
attach_T_Range :: T_Range -> Identity (T_Range_s134)
newtype T_Range_s134
C_Range_s134 :: (T_Range_v133) -> T_Range_s134
inv_Range_s134 :: T_Range_s134 -> (T_Range_v133)
data T_Range_s135
C_Range_s135 :: T_Range_s135
type T_Range_v133 = (T_Range_vIn133) -> (T_Range_vOut133)
data T_Range_vIn133
T_Range_vIn133 :: T_Range_vIn133
data T_Range_vOut133
T_Range_vOut133 :: (Range) -> T_Range_vOut133
sem_Range_Range :: T_Position -> T_Position -> T_Range
data Inh_RecordExpressionBinding
Inh_RecordExpressionBinding :: (DictionaryEnvironment) -> Inh_RecordExpressionBinding
dictionaryEnv_Inh_RecordExpressionBinding :: Inh_RecordExpressionBinding -> (DictionaryEnvironment)
data Syn_RecordExpressionBinding
Syn_RecordExpressionBinding :: (RecordExpressionBinding) -> Syn_RecordExpressionBinding
self_Syn_RecordExpressionBinding :: Syn_RecordExpressionBinding -> (RecordExpressionBinding)
wrap_RecordExpressionBinding :: T_RecordExpressionBinding -> Inh_RecordExpressionBinding -> (Syn_RecordExpressionBinding)
sem_RecordExpressionBinding :: RecordExpressionBinding -> T_RecordExpressionBinding
newtype T_RecordExpressionBinding
T_RecordExpressionBinding :: Identity (T_RecordExpressionBinding_s137) -> T_RecordExpressionBinding
attach_T_RecordExpressionBinding :: T_RecordExpressionBinding -> Identity (T_RecordExpressionBinding_s137)
newtype T_RecordExpressionBinding_s137
C_RecordExpressionBinding_s137 :: (T_RecordExpressionBinding_v136) -> T_RecordExpressionBinding_s137
inv_RecordExpressionBinding_s137 :: T_RecordExpressionBinding_s137 -> (T_RecordExpressionBinding_v136)
data T_RecordExpressionBinding_s138
C_RecordExpressionBinding_s138 :: T_RecordExpressionBinding_s138
type T_RecordExpressionBinding_v136 = (T_RecordExpressionBinding_vIn136) -> (T_RecordExpressionBinding_vOut136)
data T_RecordExpressionBinding_vIn136
T_RecordExpressionBinding_vIn136 :: (DictionaryEnvironment) -> T_RecordExpressionBinding_vIn136
data T_RecordExpressionBinding_vOut136
T_RecordExpressionBinding_vOut136 :: (RecordExpressionBinding) -> T_RecordExpressionBinding_vOut136
sem_RecordExpressionBinding_RecordExpressionBinding :: T_Range -> T_Name -> T_Expression -> T_RecordExpressionBinding
data Inh_RecordExpressionBindings
Inh_RecordExpressionBindings :: (DictionaryEnvironment) -> Inh_RecordExpressionBindings
dictionaryEnv_Inh_RecordExpressionBindings :: Inh_RecordExpressionBindings -> (DictionaryEnvironment)
data Syn_RecordExpressionBindings
Syn_RecordExpressionBindings :: (RecordExpressionBindings) -> Syn_RecordExpressionBindings
self_Syn_RecordExpressionBindings :: Syn_RecordExpressionBindings -> (RecordExpressionBindings)
wrap_RecordExpressionBindings :: T_RecordExpressionBindings -> Inh_RecordExpressionBindings -> (Syn_RecordExpressionBindings)
sem_RecordExpressionBindings :: RecordExpressionBindings -> T_RecordExpressionBindings
newtype T_RecordExpressionBindings
T_RecordExpressionBindings :: Identity (T_RecordExpressionBindings_s140) -> T_RecordExpressionBindings
attach_T_RecordExpressionBindings :: T_RecordExpressionBindings -> Identity (T_RecordExpressionBindings_s140)
newtype T_RecordExpressionBindings_s140
C_RecordExpressionBindings_s140 :: (T_RecordExpressionBindings_v139) -> T_RecordExpressionBindings_s140
inv_RecordExpressionBindings_s140 :: T_RecordExpressionBindings_s140 -> (T_RecordExpressionBindings_v139)
data T_RecordExpressionBindings_s141
C_RecordExpressionBindings_s141 :: T_RecordExpressionBindings_s141
type T_RecordExpressionBindings_v139 = (T_RecordExpressionBindings_vIn139) -> (T_RecordExpressionBindings_vOut139)
data T_RecordExpressionBindings_vIn139
T_RecordExpressionBindings_vIn139 :: (DictionaryEnvironment) -> T_RecordExpressionBindings_vIn139
data T_RecordExpressionBindings_vOut139
T_RecordExpressionBindings_vOut139 :: (RecordExpressionBindings) -> T_RecordExpressionBindings_vOut139
sem_RecordExpressionBindings_Cons :: T_RecordExpressionBinding -> T_RecordExpressionBindings -> T_RecordExpressionBindings
sem_RecordExpressionBindings_Nil :: T_RecordExpressionBindings
data Inh_RecordPatternBinding
Inh_RecordPatternBinding :: Inh_RecordPatternBinding
data Syn_RecordPatternBinding
Syn_RecordPatternBinding :: (RecordPatternBinding) -> Syn_RecordPatternBinding
self_Syn_RecordPatternBinding :: Syn_RecordPatternBinding -> (RecordPatternBinding)
wrap_RecordPatternBinding :: T_RecordPatternBinding -> Inh_RecordPatternBinding -> (Syn_RecordPatternBinding)
sem_RecordPatternBinding :: RecordPatternBinding -> T_RecordPatternBinding
newtype T_RecordPatternBinding
T_RecordPatternBinding :: Identity (T_RecordPatternBinding_s143) -> T_RecordPatternBinding
attach_T_RecordPatternBinding :: T_RecordPatternBinding -> Identity (T_RecordPatternBinding_s143)
newtype T_RecordPatternBinding_s143
C_RecordPatternBinding_s143 :: (T_RecordPatternBinding_v142) -> T_RecordPatternBinding_s143
inv_RecordPatternBinding_s143 :: T_RecordPatternBinding_s143 -> (T_RecordPatternBinding_v142)
data T_RecordPatternBinding_s144
C_RecordPatternBinding_s144 :: T_RecordPatternBinding_s144
type T_RecordPatternBinding_v142 = (T_RecordPatternBinding_vIn142) -> (T_RecordPatternBinding_vOut142)
data T_RecordPatternBinding_vIn142
T_RecordPatternBinding_vIn142 :: T_RecordPatternBinding_vIn142
data T_RecordPatternBinding_vOut142
T_RecordPatternBinding_vOut142 :: (RecordPatternBinding) -> T_RecordPatternBinding_vOut142
sem_RecordPatternBinding_RecordPatternBinding :: T_Range -> T_Name -> T_Pattern -> T_RecordPatternBinding
data Inh_RecordPatternBindings
Inh_RecordPatternBindings :: Inh_RecordPatternBindings
data Syn_RecordPatternBindings
Syn_RecordPatternBindings :: (RecordPatternBindings) -> Syn_RecordPatternBindings
self_Syn_RecordPatternBindings :: Syn_RecordPatternBindings -> (RecordPatternBindings)
wrap_RecordPatternBindings :: T_RecordPatternBindings -> Inh_RecordPatternBindings -> (Syn_RecordPatternBindings)
sem_RecordPatternBindings :: RecordPatternBindings -> T_RecordPatternBindings
newtype T_RecordPatternBindings
T_RecordPatternBindings :: Identity (T_RecordPatternBindings_s146) -> T_RecordPatternBindings
attach_T_RecordPatternBindings :: T_RecordPatternBindings -> Identity (T_RecordPatternBindings_s146)
newtype T_RecordPatternBindings_s146
C_RecordPatternBindings_s146 :: (T_RecordPatternBindings_v145) -> T_RecordPatternBindings_s146
inv_RecordPatternBindings_s146 :: T_RecordPatternBindings_s146 -> (T_RecordPatternBindings_v145)
data T_RecordPatternBindings_s147
C_RecordPatternBindings_s147 :: T_RecordPatternBindings_s147
type T_RecordPatternBindings_v145 = (T_RecordPatternBindings_vIn145) -> (T_RecordPatternBindings_vOut145)
data T_RecordPatternBindings_vIn145
T_RecordPatternBindings_vIn145 :: T_RecordPatternBindings_vIn145
data T_RecordPatternBindings_vOut145
T_RecordPatternBindings_vOut145 :: (RecordPatternBindings) -> T_RecordPatternBindings_vOut145
sem_RecordPatternBindings_Cons :: T_RecordPatternBinding -> T_RecordPatternBindings -> T_RecordPatternBindings
sem_RecordPatternBindings_Nil :: T_RecordPatternBindings
data Inh_RightHandSide
Inh_RightHandSide :: (DictionaryEnvironment) -> Inh_RightHandSide
dictionaryEnv_Inh_RightHandSide :: Inh_RightHandSide -> (DictionaryEnvironment)
data Syn_RightHandSide
Syn_RightHandSide :: (Expr) -> (Bool) -> (RightHandSide) -> Syn_RightHandSide
core_Syn_RightHandSide :: Syn_RightHandSide -> (Expr)
isGuarded_Syn_RightHandSide :: Syn_RightHandSide -> (Bool)
self_Syn_RightHandSide :: Syn_RightHandSide -> (RightHandSide)
wrap_RightHandSide :: T_RightHandSide -> Inh_RightHandSide -> (Syn_RightHandSide)
sem_RightHandSide :: RightHandSide -> T_RightHandSide
newtype T_RightHandSide
T_RightHandSide :: Identity (T_RightHandSide_s149) -> T_RightHandSide
attach_T_RightHandSide :: T_RightHandSide -> Identity (T_RightHandSide_s149)
newtype T_RightHandSide_s149
C_RightHandSide_s149 :: (T_RightHandSide_v148) -> T_RightHandSide_s149
inv_RightHandSide_s149 :: T_RightHandSide_s149 -> (T_RightHandSide_v148)
data T_RightHandSide_s150
C_RightHandSide_s150 :: T_RightHandSide_s150
type T_RightHandSide_v148 = (T_RightHandSide_vIn148) -> (T_RightHandSide_vOut148)
data T_RightHandSide_vIn148
T_RightHandSide_vIn148 :: (DictionaryEnvironment) -> T_RightHandSide_vIn148
data T_RightHandSide_vOut148
T_RightHandSide_vOut148 :: (Expr) -> (Bool) -> (RightHandSide) -> T_RightHandSide_vOut148
sem_RightHandSide_Expression :: T_Range -> T_Expression -> T_MaybeDeclarations -> T_RightHandSide
sem_RightHandSide_Guarded :: T_Range -> T_GuardedExpressions -> T_MaybeDeclarations -> T_RightHandSide
data Inh_SimpleType
Inh_SimpleType :: Inh_SimpleType
data Syn_SimpleType
Syn_SimpleType :: (Name) -> (SimpleType) -> (Names) -> Syn_SimpleType
name_Syn_SimpleType :: Syn_SimpleType -> (Name)
self_Syn_SimpleType :: Syn_SimpleType -> (SimpleType)
typevariables_Syn_SimpleType :: Syn_SimpleType -> (Names)
wrap_SimpleType :: T_SimpleType -> Inh_SimpleType -> (Syn_SimpleType)
sem_SimpleType :: SimpleType -> T_SimpleType
newtype T_SimpleType
T_SimpleType :: Identity (T_SimpleType_s152) -> T_SimpleType
attach_T_SimpleType :: T_SimpleType -> Identity (T_SimpleType_s152)
newtype T_SimpleType_s152
C_SimpleType_s152 :: (T_SimpleType_v151) -> T_SimpleType_s152
inv_SimpleType_s152 :: T_SimpleType_s152 -> (T_SimpleType_v151)
data T_SimpleType_s153
C_SimpleType_s153 :: T_SimpleType_s153
type T_SimpleType_v151 = (T_SimpleType_vIn151) -> (T_SimpleType_vOut151)
data T_SimpleType_vIn151
T_SimpleType_vIn151 :: T_SimpleType_vIn151
data T_SimpleType_vOut151
T_SimpleType_vOut151 :: (Name) -> (SimpleType) -> (Names) -> T_SimpleType_vOut151
sem_SimpleType_SimpleType :: T_Range -> T_Name -> T_Names -> T_SimpleType
data Inh_Statement
Inh_Statement :: (DictionaryEnvironment) -> Inh_Statement
dictionaryEnv_Inh_Statement :: Inh_Statement -> (DictionaryEnvironment)
data Syn_Statement
Syn_Statement :: (Maybe Expr -> Expr) -> (Statement) -> Syn_Statement
core_Syn_Statement :: Syn_Statement -> (Maybe Expr -> Expr)
self_Syn_Statement :: Syn_Statement -> (Statement)
wrap_Statement :: T_Statement -> Inh_Statement -> (Syn_Statement)
sem_Statement :: Statement -> T_Statement
newtype T_Statement
T_Statement :: Identity (T_Statement_s155) -> T_Statement
attach_T_Statement :: T_Statement -> Identity (T_Statement_s155)
newtype T_Statement_s155
C_Statement_s155 :: (T_Statement_v154) -> T_Statement_s155
inv_Statement_s155 :: T_Statement_s155 -> (T_Statement_v154)
data T_Statement_s156
C_Statement_s156 :: T_Statement_s156
type T_Statement_v154 = (T_Statement_vIn154) -> (T_Statement_vOut154)
data T_Statement_vIn154
T_Statement_vIn154 :: (DictionaryEnvironment) -> T_Statement_vIn154
data T_Statement_vOut154
T_Statement_vOut154 :: (Maybe Expr -> Expr) -> (Statement) -> T_Statement_vOut154
sem_Statement_Expression :: T_Range -> T_Expression -> T_Statement
sem_Statement_Let :: T_Range -> T_Declarations -> T_Statement
sem_Statement_Generator :: T_Range -> T_Pattern -> T_Expression -> T_Statement
sem_Statement_Empty :: T_Range -> T_Statement
data Inh_Statements
Inh_Statements :: (DictionaryEnvironment) -> Inh_Statements
dictionaryEnv_Inh_Statements :: Inh_Statements -> (DictionaryEnvironment)
data Syn_Statements
Syn_Statements :: ([Maybe Expr -> Expr]) -> (Statements) -> Syn_Statements
core_Syn_Statements :: Syn_Statements -> ([Maybe Expr -> Expr])
self_Syn_Statements :: Syn_Statements -> (Statements)
wrap_Statements :: T_Statements -> Inh_Statements -> (Syn_Statements)
sem_Statements :: Statements -> T_Statements
newtype T_Statements
T_Statements :: Identity (T_Statements_s158) -> T_Statements
attach_T_Statements :: T_Statements -> Identity (T_Statements_s158)
newtype T_Statements_s158
C_Statements_s158 :: (T_Statements_v157) -> T_Statements_s158
inv_Statements_s158 :: T_Statements_s158 -> (T_Statements_v157)
data T_Statements_s159
C_Statements_s159 :: T_Statements_s159
type T_Statements_v157 = (T_Statements_vIn157) -> (T_Statements_vOut157)
data T_Statements_vIn157
T_Statements_vIn157 :: (DictionaryEnvironment) -> T_Statements_vIn157
data T_Statements_vOut157
T_Statements_vOut157 :: ([Maybe Expr -> Expr]) -> (Statements) -> T_Statements_vOut157
sem_Statements_Cons :: T_Statement -> T_Statements -> T_Statements
sem_Statements_Nil :: T_Statements
data Inh_Strings
Inh_Strings :: Inh_Strings
data Syn_Strings
Syn_Strings :: (Strings) -> Syn_Strings
self_Syn_Strings :: Syn_Strings -> (Strings)
wrap_Strings :: T_Strings -> Inh_Strings -> (Syn_Strings)
sem_Strings :: Strings -> T_Strings
newtype T_Strings
T_Strings :: Identity (T_Strings_s161) -> T_Strings
attach_T_Strings :: T_Strings -> Identity (T_Strings_s161)
newtype T_Strings_s161
C_Strings_s161 :: (T_Strings_v160) -> T_Strings_s161
inv_Strings_s161 :: T_Strings_s161 -> (T_Strings_v160)
data T_Strings_s162
C_Strings_s162 :: T_Strings_s162
type T_Strings_v160 = (T_Strings_vIn160) -> (T_Strings_vOut160)
data T_Strings_vIn160
T_Strings_vIn160 :: T_Strings_vIn160
data T_Strings_vOut160
T_Strings_vOut160 :: (Strings) -> T_Strings_vOut160
sem_Strings_Cons :: (String) -> T_Strings -> T_Strings
sem_Strings_Nil :: T_Strings
data Inh_Type
Inh_Type :: Inh_Type
data Syn_Type
Syn_Type :: (Type) -> Syn_Type
self_Syn_Type :: Syn_Type -> (Type)
wrap_Type :: T_Type -> Inh_Type -> (Syn_Type)
sem_Type :: Type -> T_Type
newtype T_Type
T_Type :: Identity (T_Type_s164) -> T_Type
attach_T_Type :: T_Type -> Identity (T_Type_s164)
newtype T_Type_s164
C_Type_s164 :: (T_Type_v163) -> T_Type_s164
inv_Type_s164 :: T_Type_s164 -> (T_Type_v163)
data T_Type_s165
C_Type_s165 :: T_Type_s165
type T_Type_v163 = (T_Type_vIn163) -> (T_Type_vOut163)
data T_Type_vIn163
T_Type_vIn163 :: T_Type_vIn163
data T_Type_vOut163
T_Type_vOut163 :: (Type) -> T_Type_vOut163
sem_Type_Application :: T_Range -> (Bool) -> T_Type -> T_Types -> T_Type
sem_Type_Variable :: T_Range -> T_Name -> T_Type
sem_Type_Constructor :: T_Range -> T_Name -> T_Type
sem_Type_Qualified :: T_Range -> T_ContextItems -> T_Type -> T_Type
sem_Type_Forall :: T_Range -> T_Names -> T_Type -> T_Type
sem_Type_Exists :: T_Range -> T_Names -> T_Type -> T_Type
sem_Type_Parenthesized :: T_Range -> T_Type -> T_Type
data Inh_Types
Inh_Types :: Inh_Types
data Syn_Types
Syn_Types :: (Types) -> Syn_Types
self_Syn_Types :: Syn_Types -> (Types)
wrap_Types :: T_Types -> Inh_Types -> (Syn_Types)
sem_Types :: Types -> T_Types
newtype T_Types
T_Types :: Identity (T_Types_s167) -> T_Types
attach_T_Types :: T_Types -> Identity (T_Types_s167)
newtype T_Types_s167
C_Types_s167 :: (T_Types_v166) -> T_Types_s167
inv_Types_s167 :: T_Types_s167 -> (T_Types_v166)
data T_Types_s168
C_Types_s168 :: T_Types_s168
type T_Types_v166 = (T_Types_vIn166) -> (T_Types_vOut166)
data T_Types_vIn166
T_Types_vIn166 :: T_Types_vIn166
data T_Types_vOut166
T_Types_vOut166 :: (Types) -> T_Types_vOut166
sem_Types_Cons :: T_Type -> T_Types -> T_Types
sem_Types_Nil :: T_Types


module Helium.Main.PhaseDesugarer
phaseDesugarer :: DictionaryEnvironment -> String -> Module -> [CoreDecl] -> ImportEnvironment -> TypeEnvironment -> [Option] -> IO CoreModule


module Helium.Main.Compile
compile :: String -> String -> [Option] -> [String] -> [String] -> IO ()
safeReadFile :: String -> IO String
stopCompilingIf :: Bool -> IO ()
maximumNumberOfTypeErrors :: Int
maximumNumberOfKindErrors :: Int
