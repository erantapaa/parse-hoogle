-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Utilities for working with cabal packages and your package database
--   
--   Utility to help managing Makefiles for Haskell projects, a cabal lint
--   which can check the other-modules and build-deps sections in your
--   cabal files, and a quick command that can show the direct package
--   dependencies of a set of Haskell source files. See the README in the
--   repo for more information:
--   <a>https://github.com/JakeWheat/package-o-tron</a>.
@package package-o-tron
@version 0.1.0.0

module Distribution.Pot.Packages

-- | returns a map from package name to the names of the modules in that
--   package. The information is from the output of ghc-pkg dump, so only
--   includes information from installed packages
readPackages :: IO [(String, [String])]

module Distribution.Pot.Modules

-- | The collected information on one module
data ModuleInfo
ModuleInfo :: FilePath -> FilePath -> FilePath -> String -> [((FilePath, FilePath), String)] -> [((FilePath, FilePath), String)] -> [String] -> [String] -> ModuleInfo
miFileName :: ModuleInfo -> FilePath
miFilePrefix :: ModuleInfo -> FilePath
miModuleFile :: ModuleInfo -> FilePath
miModuleName :: ModuleInfo -> String
miLocalDependencies :: ModuleInfo -> [((FilePath, FilePath), String)]
miLocalTransitiveDependencies :: ModuleInfo -> [((FilePath, FilePath), String)]
miPackages :: ModuleInfo -> [String]
miTransitivePackages :: ModuleInfo -> [String]

-- | Takes a set of source files and gets the ModuleInfo information for
--   all of them
modulesInfo :: [FilePath] -> IO [(FilePath, ModuleInfo)]
showmi :: [(FilePath, ModuleInfo)] -> String

-- | helper to filter the two module lists according to some function
filterModules :: (String -> Bool) -> ModuleInfo -> ModuleInfo
instance Show ModuleInfo
