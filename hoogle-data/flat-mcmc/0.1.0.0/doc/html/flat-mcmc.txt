-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Painless general-purpose sampling.
--   
--   Painless general-purpose sampling.
@package flat-mcmc
@version 0.1.0.0

module Numeric.MCMC.Flat

-- | State of the Markov chain. Current ensemble position is held in
--   <tt>theta</tt>, while <a>accepts</a> counts the number of proposals
--   accepted.
data MarkovChain
MarkovChain :: Ensemble -> {-# UNPACK #-} !Int -> MarkovChain
ensemble :: MarkovChain -> Ensemble
accepts :: MarkovChain -> {-# UNPACK #-} !Int

-- | Options for the chain. The target (expected to be a log density), as
--   well as the size of the ensemble. The size should be an even number.
--   Also holds the specified parallel granularity as <tt>csize</tt>.
data Options
Options :: ([Double] -> Double) -> {-# UNPACK #-} !Int -> {-# UNPACK #-} !Int -> Options
_target :: Options -> [Double] -> Double
_size :: Options -> {-# UNPACK #-} !Int
_csize :: Options -> {-# UNPACK #-} !Int

-- | An ensemble of particles.
type Ensemble = Vector [Double]

-- | Diffuse through states.
runChain :: Options -> Int -> Int -> MarkovChain -> Gen RealWorld -> IO MarkovChain

-- | A convenience function to read and parse ensemble inits from disk.
--   Assumes a text file with one particle per line, where each particle
--   element is separated by whitespace.
readInits :: FilePath -> IO Ensemble
instance Show MarkovChain
