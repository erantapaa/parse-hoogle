-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Cross-platform interface to the PC speaker.
--   
@package honk
@version 1.3.0.0


-- | Low level FFI interface. You should rarely need to use this directly.
module Sound.Honk.Internal
newtype BeepFd
BeepFd :: CInt -> BeepFd

-- | Open a handle to the console.
--   
--   Use <a>withBeepFd</a> instead if possible, since it keeps track of
--   closing the handle automatically.
beepOpen :: IO BeepFd

-- | Perform a beep.
beepDo :: BeepFd -> Rational -> Double -> IO ()

-- | Close the handle.
beepClose :: BeepFd -> IO ()

-- | Run a function that uses a <a>BeepFd</a>, opening and closing the
--   handle automatically.
withBeepFd :: (BeepFd -> IO a) -> IO a


-- | Cross-platform interface to the PC speaker.
--   
--   Here's an example:
--   
--   <pre>
--   simpleBeep = play [Note 1.0 440]
--   </pre>
--   
--   For more examples, see the readme.
module Sound.Honk

-- | Play multiple notes in order, one after the other.
play :: [Note] -> IO ()

-- | Play a single note.
playOne :: Note -> IO ()

-- | Represents a single note, with a duration in seconds and a frequency
--   in hertz.
data Note
Note :: Rational -> Double -> Note
duration :: Note -> Rational
frequency :: Note -> Double

-- | Convert a frequency to a MIDI note value.
freqToMidi :: Floating a => a -> a

-- | Convert a MIDI note value to a frequency.
midiToFreq :: Floating a => a -> a

-- | Repeat a sequence a specified number of times.
loop :: Int -> [a] -> [a]
