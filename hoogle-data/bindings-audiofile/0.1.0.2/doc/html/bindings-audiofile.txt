-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Low level bindings to audiofile
--   
--   Bindings to audiofile: <a>http://www.68k.org/~michael/audiofile/</a>
@package bindings-audiofile
@version 0.1.0.2

module Bindings.AudioFile.PVList
c'AU_PVTYPE_LONG :: Num a => a
c'AU_PVTYPE_DOUBLE :: Num a => a
c'AU_PVTYPE_PTR :: Num a => a
data C'_AUpvlist
C'_AUpvlist :: C'_AUpvlist
type C'AUpvlist = Ptr C'_AUpvlist
c'AU_NULL_PVLIST :: Ptr a
c'AUpvnew :: CInt -> IO C'AUpvlist
c'AUpvgetmaxitems :: C'AUpvlist -> IO CInt
c'AUpvfree :: C'AUpvlist -> IO CInt
p'AUpvnew :: FunPtr (CInt -> IO C'AUpvlist)
c'AUpvsetparam :: C'AUpvlist -> CInt -> IO CInt
p'AUpvgetmaxitems :: FunPtr (C'AUpvlist -> IO CInt)
p'AUpvfree :: FunPtr (C'AUpvlist -> IO CInt)
c'AUpvsetvaltype :: C'AUpvlist -> CInt -> CInt -> IO CInt
p'AUpvsetparam :: FunPtr (C'AUpvlist -> CInt -> IO CInt)
c'AUpvsetval :: C'AUpvlist -> CInt -> Ptr () -> IO CInt
c'AUpvgetparam :: C'AUpvlist -> CInt -> Ptr CInt -> IO CInt
p'AUpvsetvaltype :: FunPtr (C'AUpvlist -> CInt -> CInt -> IO CInt)
c'AUpvgetvaltype :: C'AUpvlist -> CInt -> Ptr CInt -> IO CInt
p'AUpvsetval :: FunPtr (C'AUpvlist -> CInt -> Ptr () -> IO CInt)
c'AUpvgetval :: C'AUpvlist -> CInt -> Ptr () -> IO CInt
p'AUpvgetparam :: FunPtr (C'AUpvlist -> CInt -> Ptr CInt -> IO CInt)
p'AUpvgetvaltype :: FunPtr (C'AUpvlist -> CInt -> Ptr CInt -> IO CInt)
p'AUpvgetval :: FunPtr (C'AUpvlist -> CInt -> Ptr () -> IO CInt)

module Bindings.AudioFile.VFS
data C'_AFvirtualfile
C'_AFvirtualfile :: FunPtr (C'AFvirtualfile -> Ptr () -> CSize -> IO CSsize) -> FunPtr (C'AFvirtualfile -> IO CLong) -> FunPtr (C'AFvirtualfile -> Ptr () -> CSize -> IO CSsize) -> FunPtr (C'AFvirtualfile -> IO ()) -> FunPtr (C'AFvirtualfile -> CLong -> CInt -> IO CLong) -> FunPtr (C'AFvirtualfile -> IO CLong) -> Ptr () -> C'_AFvirtualfile
c'_AFvirtualfile'read :: C'_AFvirtualfile -> FunPtr (C'AFvirtualfile -> Ptr () -> CSize -> IO CSsize)
c'_AFvirtualfile'length :: C'_AFvirtualfile -> FunPtr (C'AFvirtualfile -> IO CLong)
c'_AFvirtualfile'write :: C'_AFvirtualfile -> FunPtr (C'AFvirtualfile -> Ptr () -> CSize -> IO CSsize)
c'_AFvirtualfile'destroy :: C'_AFvirtualfile -> FunPtr (C'AFvirtualfile -> IO ())
c'_AFvirtualfile'seek :: C'_AFvirtualfile -> FunPtr (C'AFvirtualfile -> CLong -> CInt -> IO CLong)
c'_AFvirtualfile'tell :: C'_AFvirtualfile -> FunPtr (C'AFvirtualfile -> IO CLong)
c'_AFvirtualfile'closure :: C'_AFvirtualfile -> Ptr ()
type C'AFvirtualfile = C'_AFvirtualfile
c'af_virtual_file_new :: IO (Ptr C'AFvirtualfile)
c'af_virtual_file_new_for_file :: Ptr CFile -> IO (Ptr C'AFvirtualfile)
c'af_virtual_file_destroy :: Ptr C'AFvirtualfile -> IO ()
p'af_virtual_file_new :: FunPtr (IO (Ptr C'AFvirtualfile))
p'af_virtual_file_new_for_file :: FunPtr (Ptr CFile -> IO (Ptr C'AFvirtualfile))
p'af_virtual_file_destroy :: FunPtr (Ptr C'AFvirtualfile -> IO ())
c'af_fread :: Ptr () -> CSize -> CSize -> Ptr C'AFvirtualfile -> IO CSize
c'af_fwrite :: Ptr () -> CSize -> CSize -> Ptr C'AFvirtualfile -> IO CSize
c'af_fclose :: Ptr C'AFvirtualfile -> IO CInt
p'af_fread :: FunPtr (Ptr () -> CSize -> CSize -> Ptr C'AFvirtualfile -> IO CSize)
p'_AFvirtualfile'read :: Ptr (C'_AFvirtualfile) -> Ptr (FunPtr (C'AFvirtualfile -> Ptr () -> CSize -> IO CSsize))
c'af_flength :: Ptr C'AFvirtualfile -> IO CLong
p'af_fwrite :: FunPtr (Ptr () -> CSize -> CSize -> Ptr C'AFvirtualfile -> IO CSize)
p'af_fclose :: FunPtr (Ptr C'AFvirtualfile -> IO CInt)
c'af_fseek :: Ptr C'AFvirtualfile -> CLong -> CInt -> IO CInt
p'_AFvirtualfile'length :: Ptr (C'_AFvirtualfile) -> Ptr (FunPtr (C'AFvirtualfile -> IO CLong))
c'af_ftell :: Ptr C'AFvirtualfile -> IO CLong
p'af_flength :: FunPtr (Ptr C'AFvirtualfile -> IO CLong)
p'af_fseek :: FunPtr (Ptr C'AFvirtualfile -> CLong -> CInt -> IO CInt)
p'_AFvirtualfile'write :: Ptr (C'_AFvirtualfile) -> Ptr (FunPtr (C'AFvirtualfile -> Ptr () -> CSize -> IO CSsize))
p'af_ftell :: FunPtr (Ptr C'AFvirtualfile -> IO CLong)
p'_AFvirtualfile'destroy :: Ptr (C'_AFvirtualfile) -> Ptr (FunPtr (C'AFvirtualfile -> IO ()))
p'_AFvirtualfile'seek :: Ptr (C'_AFvirtualfile) -> Ptr (FunPtr (C'AFvirtualfile -> CLong -> CInt -> IO CLong))
p'_AFvirtualfile'tell :: Ptr (C'_AFvirtualfile) -> Ptr (FunPtr (C'AFvirtualfile -> IO CLong))
p'_AFvirtualfile'closure :: Ptr (C'_AFvirtualfile) -> Ptr (Ptr ())
instance Eq C'_AFvirtualfile
instance Show C'_AFvirtualfile
instance Storable C'_AFvirtualfile

module Bindings.AudioFile
data C'_AFfilesetup
C'_AFfilesetup :: C'_AFfilesetup
type C'AFfilesetup = Ptr C'_AFfilesetup
data C'_AFfilehandle
C'_AFfilehandle :: C'_AFfilehandle
type C'AFfilehandle = Ptr C'_AFfilehandle
type C'AFerrfunc = FunPtr (CLong -> Ptr CChar -> IO ())
mk'AFerrfunc :: (CLong -> Ptr CChar -> IO ()) -> IO C'AFerrfunc
type C'AFframecount = Int64
type C'AFfileoffset = Int64
mK'AFerrfunc :: C'AFerrfunc -> (CLong -> Ptr CChar -> IO ())
c'AF_NULL_FILESETUP :: Ptr a
c'AF_NULL_FILEHANDLE :: Ptr a
c'AF_ERR_BASE :: Num a => a
c'AF_DEFAULT_TRACK :: Num a => a
c'AF_DEFAULT_INST :: Num a => a
c'AF_NUM_UNLIMITED :: Num a => a
c'AF_BYTEORDER_BIGENDIAN :: Num a => a
c'AF_BYTEORDER_LITTLEENDIAN :: Num a => a
c'AF_FILE_UNKNOWN :: Num a => a
c'AF_FILE_RAWDATA :: Num a => a
c'AF_FILE_AIFFC :: Num a => a
c'AF_FILE_AIFF :: Num a => a
c'AF_FILE_NEXTSND :: Num a => a
c'AF_FILE_WAVE :: Num a => a
c'AF_FILE_BICSF :: Num a => a
c'AF_FILE_IRCAM :: Num a => a
c'AF_FILE_MPEG1BITSTREAM :: Num a => a
c'AF_FILE_SOUNDDESIGNER1 :: Num a => a
c'AF_FILE_SOUNDDESIGNER2 :: Num a => a
c'AF_FILE_AVR :: Num a => a
c'AF_FILE_IFF_8SVX :: Num a => a
c'AF_FILE_SAMPLEVISION :: Num a => a
c'AF_FILE_VOC :: Num a => a
c'AF_FILE_NIST_SPHERE :: Num a => a
c'AF_FILE_SOUNDFONT2 :: Num a => a
c'AF_LOOP_MODE_NOLOOP :: Num a => a
c'AF_LOOP_MODE_FORW :: Num a => a
c'AF_LOOP_MODE_FORWBAKW :: Num a => a
c'AF_SAMPFMT_TWOSCOMP :: Num a => a
c'AF_SAMPFMT_UNSIGNED :: Num a => a
c'AF_SAMPFMT_FLOAT :: Num a => a
c'AF_SAMPFMT_DOUBLE :: Num a => a
c'AF_INST_LOOP_OFF :: Num a => a
c'AF_INST_LOOP_CONTINUOUS :: Num a => a
c'AF_INST_LOOP_SUSTAIN :: Num a => a
c'AF_INST_MIDI_BASENOTE :: Num a => a
c'AF_INST_NUMCENTS_DETUNE :: Num a => a
c'AF_INST_MIDI_LONOTE :: Num a => a
c'AF_INST_MIDI_HINOTE :: Num a => a
c'AF_INST_MIDI_LOVELOCITY :: Num a => a
c'AF_INST_MIDI_HIVELOCITY :: Num a => a
c'AF_INST_NUMDBS_GAIN :: Num a => a
c'AF_INST_SUSLOOPID :: Num a => a
c'AF_INST_RELLOOPID :: Num a => a
c'AF_INST_SAMP_STARTFRAME :: Num a => a
c'AF_INST_SAMP_ENDFRAME :: Num a => a
c'AF_INST_SAMP_MODE :: Num a => a
c'AF_INST_TRACKID :: Num a => a
c'AF_INST_NAME :: Num a => a
c'AF_INST_SAMP_RATE :: Num a => a
c'AF_INST_PRESETID :: Num a => a
c'AF_INST_PRESET_NAME :: Num a => a
c'AF_MISC_UNRECOGNIZED :: Num a => a
c'AF_MISC_COPY :: Num a => a
c'AF_MISC_AUTH :: Num a => a
c'AF_MISC_NAME :: Num a => a
c'AF_MISC_ANNO :: Num a => a
c'AF_MISC_APPL :: Num a => a
c'AF_MISC_MIDI :: Num a => a
c'AF_MISC_PCMMAP :: Num a => a
c'AF_MISC_NeXT :: Num a => a
c'AF_MISC_IRCAM_PEAKAMP :: Num a => a
c'AF_MISC_IRCAM_COMMENT :: Num a => a
c'AF_MISC_COMMENT :: Num a => a
c'AF_MISC_ICMT :: Num a => a
c'AF_MISC_ICRD :: Num a => a
c'AF_MISC_ISFT :: Num a => a
c'AF_COMPRESSION_UNKNOWN :: Num a => a
c'AF_COMPRESSION_NONE :: Num a => a
c'AF_COMPRESSION_G722 :: Num a => a
c'AF_COMPRESSION_G711_ULAW :: Num a => a
c'AF_COMPRESSION_G711_ALAW :: Num a => a
c'AF_COMPRESSION_APPLE_ACE2 :: Num a => a
c'AF_COMPRESSION_APPLE_ACE8 :: Num a => a
c'AF_COMPRESSION_APPLE_MAC3 :: Num a => a
c'AF_COMPRESSION_APPLE_MAC6 :: Num a => a
c'AF_COMPRESSION_G726 :: Num a => a
c'AF_COMPRESSION_G728 :: Num a => a
c'AF_COMPRESSION_DVI_AUDIO :: Num a => a
c'AF_COMPRESSION_IMA :: Num a => a
c'AF_COMPRESSION_GSM :: Num a => a
c'AF_COMPRESSION_FS1016 :: Num a => a
c'AF_COMPRESSION_DV :: Num a => a
c'AF_COMPRESSION_MS_ADPCM :: Num a => a
c'AF_QUERYTYPE_INSTPARAM :: Num a => a
c'AF_QUERYTYPE_FILEFMT :: Num a => a
c'AF_QUERYTYPE_COMPRESSION :: Num a => a
c'AF_QUERYTYPE_COMPRESSIONPARAM :: Num a => a
c'AF_QUERYTYPE_MISC :: Num a => a
c'AF_QUERYTYPE_INST :: Num a => a
c'AF_QUERYTYPE_MARK :: Num a => a
c'AF_QUERYTYPE_LOOP :: Num a => a
c'AF_QUERY_NAME :: Num a => a
c'AF_QUERY_DESC :: Num a => a
c'AF_QUERY_LABEL :: Num a => a
c'AF_QUERY_TYPE :: Num a => a
c'AF_QUERY_DEFAULT :: Num a => a
c'AF_QUERY_ID_COUNT :: Num a => a
c'AF_QUERY_IDS :: Num a => a
c'AF_QUERY_IMPLEMENTED :: Num a => a
c'AF_QUERY_TYPE_COUNT :: Num a => a
c'AF_QUERY_TYPES :: Num a => a
c'AF_QUERY_NATIVE_SAMPFMT :: Num a => a
c'AF_QUERY_NATIVE_SAMPWIDTH :: Num a => a
c'AF_QUERY_SQUISHFAC :: Num a => a
c'AF_QUERY_MAX_NUMBER :: Num a => a
c'AF_QUERY_SUPPORTED :: Num a => a
c'AF_QUERY_TRACKS :: Num a => a
c'AF_QUERY_CHANNELS :: Num a => a
c'AF_QUERY_SAMPLE_SIZES :: Num a => a
c'AF_QUERY_SAMPLE_FORMATS :: Num a => a
c'AF_QUERY_COMPRESSION_TYPES :: Num a => a
c'AF_QUERY_VALUE_COUNT :: Num a => a
c'AF_QUERY_VALUES :: Num a => a
c'AF_BAD_NOT_IMPLEMENTED :: Num a => a
c'AF_BAD_FILEHANDLE :: Num a => a
c'AF_BAD_OPEN :: Num a => a
c'AF_BAD_CLOSE :: Num a => a
c'AF_BAD_READ :: Num a => a
c'AF_BAD_WRITE :: Num a => a
c'AF_BAD_LSEEK :: Num a => a
c'AF_BAD_NO_FILEHANDLE :: Num a => a
c'AF_BAD_ACCMODE :: Num a => a
c'AF_BAD_NOWRITEACC :: Num a => a
c'AF_BAD_NOREADACC :: Num a => a
c'AF_BAD_FILEFMT :: Num a => a
c'AF_BAD_RATE :: Num a => a
c'AF_BAD_CHANNELS :: Num a => a
c'AF_BAD_SAMPCNT :: Num a => a
c'AF_BAD_WIDTH :: Num a => a
c'AF_BAD_SEEKMODE :: Num a => a
c'AF_BAD_NO_LOOPDATA :: Num a => a
c'AF_BAD_MALLOC :: Num a => a
c'AF_BAD_LOOPID :: Num a => a
c'AF_BAD_SAMPFMT :: Num a => a
c'AF_BAD_FILESETUP :: Num a => a
c'AF_BAD_TRACKID :: Num a => a
c'AF_BAD_NUMTRACKS :: Num a => a
c'AF_BAD_NO_FILESETUP :: Num a => a
c'AF_BAD_LOOPMODE :: Num a => a
c'AF_BAD_INSTID :: Num a => a
c'AF_BAD_NUMLOOPS :: Num a => a
c'AF_BAD_NUMMARKS :: Num a => a
c'AF_BAD_MARKID :: Num a => a
c'AF_BAD_MARKPOS :: Num a => a
c'AF_BAD_NUMINSTS :: Num a => a
c'AF_BAD_NOAESDATA :: Num a => a
c'AF_BAD_MISCID :: Num a => a
c'AF_BAD_NUMMISC :: Num a => a
c'AF_BAD_MISCSIZE :: Num a => a
c'AF_BAD_MISCTYPE :: Num a => a
c'AF_BAD_MISCSEEK :: Num a => a
c'AF_BAD_STRLEN :: Num a => a
c'AF_BAD_RATECONV :: Num a => a
c'AF_BAD_SYNCFILE :: Num a => a
c'AF_BAD_CODEC_CONFIG :: Num a => a
c'AF_BAD_CODEC_STATE :: Num a => a
c'AF_BAD_CODEC_LICENSE :: Num a => a
c'AF_BAD_CODEC_TYPE :: Num a => a
c'AF_BAD_COMPRESSION :: Num a => a
c'AF_BAD_COMPTYPE :: Num a => a
c'AF_BAD_INSTPTYPE :: Num a => a
c'AF_BAD_INSTPID :: Num a => a
c'AF_BAD_BYTEORDER :: Num a => a
c'AF_BAD_FILEFMT_PARAM :: Num a => a
c'AF_BAD_COMP_PARAM :: Num a => a
c'AF_BAD_DATAOFFSET :: Num a => a
c'AF_BAD_FRAMECNT :: Num a => a
c'AF_BAD_QUERYTYPE :: Num a => a
c'AF_BAD_QUERY :: Num a => a
c'AF_WARNING_CODEC_RATE :: Num a => a
c'AF_WARNING_RATECVT :: Num a => a
c'AF_BAD_HEADER :: Num a => a
c'AF_BAD_FRAME :: Num a => a
c'AF_BAD_LOOPCOUNT :: Num a => a
c'AF_BAD_DMEDIA_CALL :: Num a => a
c'AF_BAD_AIFF_HEADER :: Num a => a
c'AF_BAD_AIFF_FORM :: Num a => a
c'AF_BAD_AIFF_SSND :: Num a => a
c'AF_BAD_AIFF_CHUNKID :: Num a => a
c'AF_BAD_AIFF_COMM :: Num a => a
c'AF_BAD_AIFF_INST :: Num a => a
c'AF_BAD_AIFF_MARK :: Num a => a
c'AF_BAD_AIFF_SKIP :: Num a => a
c'AF_BAD_AIFF_LOOPMODE :: Num a => a
c'AF_ERR_NOT_IMPLEMENTED :: Num a => a
c'AF_ERR_BAD_FILEHANDLE :: Num a => a
c'AF_ERR_BAD_READ :: Num a => a
c'AF_ERR_BAD_WRITE :: Num a => a
c'AF_ERR_BAD_LSEEK :: Num a => a
c'AF_ERR_BAD_ACCMODE :: Num a => a
c'AF_ERR_NO_WRITEACC :: Num a => a
c'AF_ERR_NO_READACC :: Num a => a
c'AF_ERR_BAD_FILEFMT :: Num a => a
c'AF_ERR_BAD_RATE :: Num a => a
c'AF_ERR_BAD_CHANNELS :: Num a => a
c'AF_ERR_BAD_SAMPCNT :: Num a => a
c'AF_ERR_BAD_WIDTH :: Num a => a
c'AF_ERR_BAD_SEEKMODE :: Num a => a
c'AF_ERR_BAD_LOOPID :: Num a => a
c'AF_ERR_BAD_SAMPFMT :: Num a => a
c'AF_ERR_BAD_FILESETUP :: Num a => a
c'AF_ERR_BAD_TRACKID :: Num a => a
c'AF_ERR_BAD_NUMTRACKS :: Num a => a
c'AF_ERR_BAD_LOOPMODE :: Num a => a
c'AF_ERR_BAD_INSTID :: Num a => a
c'AF_ERR_BAD_NUMLOOPS :: Num a => a
c'AF_ERR_BAD_NUMMARKS :: Num a => a
c'AF_ERR_BAD_MARKID :: Num a => a
c'AF_ERR_BAD_MARKPOS :: Num a => a
c'AF_ERR_BAD_NUMINSTS :: Num a => a
c'AF_ERR_BAD_NOAESDATA :: Num a => a
c'AF_ERR_BAD_MISCID :: Num a => a
c'AF_ERR_BAD_NUMMISC :: Num a => a
c'AF_ERR_BAD_MISCSIZE :: Num a => a
c'AF_ERR_BAD_MISCTYPE :: Num a => a
c'AF_ERR_BAD_MISCSEEK :: Num a => a
c'AF_ERR_BAD_STRLEN :: Num a => a
c'AF_ERR_BAD_RATECONV :: Num a => a
c'AF_ERR_BAD_SYNCFILE :: Num a => a
c'AF_ERR_BAD_CODEC_CONFIG :: Num a => a
c'AF_ERR_BAD_CODEC_TYPE :: Num a => a
c'AF_ERR_BAD_INSTPTYPE :: Num a => a
c'AF_ERR_BAD_INSTPID :: Num a => a
c'AF_ERR_BAD_BYTEORDER :: Num a => a
c'AF_ERR_BAD_FILEFMT_PARAM :: Num a => a
c'AF_ERR_BAD_COMP_PARAM :: Num a => a
c'AF_ERR_BAD_DATAOFFSET :: Num a => a
c'AF_ERR_BAD_FRAMECNT :: Num a => a
c'AF_ERR_BAD_QUERYTYPE :: Num a => a
c'AF_ERR_BAD_QUERY :: Num a => a
c'AF_ERR_BAD_HEADER :: Num a => a
c'AF_ERR_BAD_FRAME :: Num a => a
c'AF_ERR_BAD_LOOPCOUNT :: Num a => a
c'AF_ERR_BAD_AIFF_HEADER :: Num a => a
c'AF_ERR_BAD_AIFF_FORM :: Num a => a
c'AF_ERR_BAD_AIFF_SSND :: Num a => a
c'AF_ERR_BAD_AIFF_CHUNKID :: Num a => a
c'AF_ERR_BAD_AIFF_COMM :: Num a => a
c'AF_ERR_BAD_AIFF_INST :: Num a => a
c'AF_ERR_BAD_AIFF_MARK :: Num a => a
c'AF_ERR_BAD_AIFF_SKIP :: Num a => a
c'AF_ERR_BAD_AIFF_LOOPMODE :: Num a => a
c'afSetErrorHandler :: C'AFerrfunc -> IO C'AFerrfunc
p'afSetErrorHandler :: FunPtr (C'AFerrfunc -> IO C'AFerrfunc)
c'afQuery :: CInt -> CInt -> CInt -> CInt -> CInt -> IO C'AUpvlist
c'afQueryLong :: CInt -> CInt -> CInt -> CInt -> CInt -> IO CLong
c'afQueryDouble :: CInt -> CInt -> CInt -> CInt -> CInt -> IO CDouble
p'afQuery :: FunPtr (CInt -> CInt -> CInt -> CInt -> CInt -> IO C'AUpvlist)
c'afQueryPointer :: CInt -> CInt -> CInt -> CInt -> CInt -> IO (Ptr ())
p'afQueryLong :: FunPtr (CInt -> CInt -> CInt -> CInt -> CInt -> IO CLong)
p'afQueryDouble :: FunPtr (CInt -> CInt -> CInt -> CInt -> CInt -> IO CDouble)
c'afNewFileSetup :: IO C'AFfilesetup
p'afQueryPointer :: FunPtr (CInt -> CInt -> CInt -> CInt -> CInt -> IO (Ptr ()))
c'afFreeFileSetup :: C'AFfilesetup -> IO ()
c'afIdentifyFD :: CInt -> IO CInt
p'afNewFileSetup :: FunPtr (IO C'AFfilesetup)
p'afFreeFileSetup :: FunPtr (C'AFfilesetup -> IO ())
c'afIdentifyNamedFD :: CInt -> Ptr CChar -> Ptr CInt -> IO CInt
p'afIdentifyFD :: FunPtr (CInt -> IO CInt)
p'afIdentifyNamedFD :: FunPtr (CInt -> Ptr CChar -> Ptr CInt -> IO CInt)
c'afOpenFile :: Ptr CChar -> Ptr CChar -> C'AFfilesetup -> IO C'AFfilehandle
c'afOpenVirtualFile :: Ptr C'AFvirtualfile -> Ptr CChar -> C'AFfilesetup -> IO C'AFfilehandle
c'afOpenFD :: CInt -> Ptr CChar -> C'AFfilesetup -> IO C'AFfilehandle
p'afOpenFile :: FunPtr (Ptr CChar -> Ptr CChar -> C'AFfilesetup -> IO C'AFfilehandle)
c'afOpenNamedFD :: CInt -> Ptr CChar -> C'AFfilesetup -> Ptr CChar -> IO C'AFfilehandle
p'afOpenVirtualFile :: FunPtr (Ptr C'AFvirtualfile -> Ptr CChar -> C'AFfilesetup -> IO C'AFfilehandle)
p'afOpenFD :: FunPtr (CInt -> Ptr CChar -> C'AFfilesetup -> IO C'AFfilehandle)
p'afOpenNamedFD :: FunPtr (CInt -> Ptr CChar -> C'AFfilesetup -> Ptr CChar -> IO C'AFfilehandle)
c'afSyncFile :: C'AFfilehandle -> IO CInt
c'afCloseFile :: C'AFfilehandle -> IO CInt
p'afSyncFile :: FunPtr (C'AFfilehandle -> IO CInt)
c'afInitFileFormat :: C'AFfilesetup -> CInt -> IO ()
p'afCloseFile :: FunPtr (C'AFfilehandle -> IO CInt)
c'afGetFileFormat :: C'AFfilehandle -> Ptr CInt -> IO CInt
p'afInitFileFormat :: FunPtr (C'AFfilesetup -> CInt -> IO ())
c'afInitTrackIDs :: C'AFfilesetup -> Ptr CInt -> CInt -> IO ()
p'afGetFileFormat :: FunPtr (C'AFfilehandle -> Ptr CInt -> IO CInt)
c'afGetTrackIDs :: C'AFfilehandle -> Ptr CInt -> IO CInt
p'afInitTrackIDs :: FunPtr (C'AFfilesetup -> Ptr CInt -> CInt -> IO ())
p'afGetTrackIDs :: FunPtr (C'AFfilehandle -> Ptr CInt -> IO CInt)
c'afReadFrames :: C'AFfilehandle -> CInt -> Ptr () -> CInt -> IO CInt
c'afWriteFrames :: C'AFfilehandle -> CInt -> Ptr () -> CInt -> IO CInt
p'afReadFrames :: FunPtr (C'AFfilehandle -> CInt -> Ptr () -> CInt -> IO CInt)
c'afSeekFrame :: C'AFfilehandle -> CInt -> C'AFframecount -> IO C'AFframecount
c'afTellFrame :: C'AFfilehandle -> CInt -> IO C'AFframecount
p'afWriteFrames :: FunPtr (C'AFfilehandle -> CInt -> Ptr () -> CInt -> IO CInt)
c'afGetTrackBytes :: C'AFfilehandle -> CInt -> IO C'AFfileoffset
p'afSeekFrame :: FunPtr (C'AFfilehandle -> CInt -> C'AFframecount -> IO C'AFframecount)
c'afGetFrameSize :: C'AFfilehandle -> CInt -> CInt -> IO CFloat
p'afTellFrame :: FunPtr (C'AFfilehandle -> CInt -> IO C'AFframecount)
c'afGetVirtualFrameSize :: C'AFfilehandle -> CInt -> CInt -> IO CFloat
p'afGetTrackBytes :: FunPtr (C'AFfilehandle -> CInt -> IO C'AFfileoffset)
p'afGetFrameSize :: FunPtr (C'AFfilehandle -> CInt -> CInt -> IO CFloat)
c'afInitAESChannelData :: C'AFfilesetup -> CInt -> IO ()
p'afGetVirtualFrameSize :: FunPtr (C'AFfilehandle -> CInt -> CInt -> IO CFloat)
c'afInitAESChannelDataTo :: C'AFfilesetup -> CInt -> CInt -> IO ()
p'afInitAESChannelData :: FunPtr (C'AFfilesetup -> CInt -> IO ())
c'afGetAESChannelData :: C'AFfilehandle -> CInt -> Ptr CUChar -> IO CInt
c'afSetAESChannelData :: C'AFfilehandle -> CInt -> Ptr CUChar -> IO ()
p'afInitAESChannelDataTo :: FunPtr (C'AFfilesetup -> CInt -> CInt -> IO ())
p'afGetAESChannelData :: FunPtr (C'AFfilehandle -> CInt -> Ptr CUChar -> IO CInt)
c'afInitByteOrder :: C'AFfilesetup -> CInt -> CInt -> IO ()
p'afSetAESChannelData :: FunPtr (C'AFfilehandle -> CInt -> Ptr CUChar -> IO ())
c'afGetByteOrder :: C'AFfilehandle -> CInt -> IO CInt
c'afSetVirtualByteOrder :: C'AFfilehandle -> CInt -> CInt -> IO CInt
p'afInitByteOrder :: FunPtr (C'AFfilesetup -> CInt -> CInt -> IO ())
c'afGetVirtualByteOrder :: C'AFfilehandle -> CInt -> IO CInt
p'afGetByteOrder :: FunPtr (C'AFfilehandle -> CInt -> IO CInt)
p'afSetVirtualByteOrder :: FunPtr (C'AFfilehandle -> CInt -> CInt -> IO CInt)
c'afInitChannels :: C'AFfilesetup -> CInt -> CInt -> IO ()
p'afGetVirtualByteOrder :: FunPtr (C'AFfilehandle -> CInt -> IO CInt)
c'afGetChannels :: C'AFfilehandle -> CInt -> IO CInt
c'afSetVirtualChannels :: C'AFfilehandle -> CInt -> CInt -> IO CInt
p'afInitChannels :: FunPtr (C'AFfilesetup -> CInt -> CInt -> IO ())
c'afGetVirtualChannels :: C'AFfilehandle -> CInt -> IO CInt
p'afGetChannels :: FunPtr (C'AFfilehandle -> CInt -> IO CInt)
c'afSetChannelMatrix :: C'AFfilehandle -> CInt -> Ptr CDouble -> IO ()
p'afSetVirtualChannels :: FunPtr (C'AFfilehandle -> CInt -> CInt -> IO CInt)
p'afGetVirtualChannels :: FunPtr (C'AFfilehandle -> CInt -> IO CInt)
c'afInitSampleFormat :: C'AFfilesetup -> CInt -> CInt -> CInt -> IO ()
p'afSetChannelMatrix :: FunPtr (C'AFfilehandle -> CInt -> Ptr CDouble -> IO ())
c'afGetSampleFormat :: C'AFfilehandle -> CInt -> Ptr CInt -> Ptr CInt -> IO ()
c'afGetVirtualSampleFormat :: C'AFfilehandle -> CInt -> Ptr CInt -> Ptr CInt -> IO ()
p'afInitSampleFormat :: FunPtr (C'AFfilesetup -> CInt -> CInt -> CInt -> IO ())
c'afSetVirtualSampleFormat :: C'AFfilehandle -> CInt -> CInt -> CInt -> IO CInt
p'afGetSampleFormat :: FunPtr (C'AFfilehandle -> CInt -> Ptr CInt -> Ptr CInt -> IO ())
p'afGetVirtualSampleFormat :: FunPtr (C'AFfilehandle -> CInt -> Ptr CInt -> Ptr CInt -> IO ())
c'afInitRate :: C'AFfilesetup -> CInt -> CDouble -> IO ()
p'afSetVirtualSampleFormat :: FunPtr (C'AFfilehandle -> CInt -> CInt -> CInt -> IO CInt)
c'afGetRate :: C'AFfilehandle -> CInt -> IO CDouble
p'afInitRate :: FunPtr (C'AFfilesetup -> CInt -> CDouble -> IO ())
c'afInitCompression :: C'AFfilesetup -> CInt -> CInt -> IO ()
p'afGetRate :: FunPtr (C'AFfilehandle -> CInt -> IO CDouble)
c'afGetCompression :: C'AFfilehandle -> CInt -> IO CInt
p'afInitCompression :: FunPtr (C'AFfilesetup -> CInt -> CInt -> IO ())
p'afGetCompression :: FunPtr (C'AFfilehandle -> CInt -> IO CInt)
c'afInitPCMMapping :: C'AFfilesetup -> CInt -> CDouble -> CDouble -> CDouble -> CDouble -> IO ()
c'afGetPCMMapping :: C'AFfilehandle -> CInt -> Ptr CDouble -> Ptr CDouble -> Ptr CDouble -> Ptr CDouble -> IO ()
c'afSetTrackPCMMapping :: C'AFfilehandle -> CInt -> CDouble -> CDouble -> CDouble -> CDouble -> IO CInt
p'afInitPCMMapping :: FunPtr (C'AFfilesetup -> CInt -> CDouble -> CDouble -> CDouble -> CDouble -> IO ())
c'afSetVirtualPCMMapping :: C'AFfilehandle -> CInt -> CDouble -> CDouble -> CDouble -> CDouble -> IO CInt
p'afGetPCMMapping :: FunPtr (C'AFfilehandle -> CInt -> Ptr CDouble -> Ptr CDouble -> Ptr CDouble -> Ptr CDouble -> IO ())
p'afSetTrackPCMMapping :: FunPtr (C'AFfilehandle -> CInt -> CDouble -> CDouble -> CDouble -> CDouble -> IO CInt)
c'afGetVirtualPCMMapping :: C'AFfilehandle -> CInt -> Ptr CDouble -> Ptr CDouble -> Ptr CDouble -> Ptr CDouble -> IO ()
p'afSetVirtualPCMMapping :: FunPtr (C'AFfilehandle -> CInt -> CDouble -> CDouble -> CDouble -> CDouble -> IO CInt)
c'afInitDataOffset :: C'AFfilesetup -> CInt -> C'AFfileoffset -> IO ()
p'afGetVirtualPCMMapping :: FunPtr (C'AFfilehandle -> CInt -> Ptr CDouble -> Ptr CDouble -> Ptr CDouble -> Ptr CDouble -> IO ())
c'afGetDataOffset :: C'AFfilehandle -> CInt -> IO C'AFfileoffset
p'afInitDataOffset :: FunPtr (C'AFfilesetup -> CInt -> C'AFfileoffset -> IO ())
c'afInitFrameCount :: C'AFfilesetup -> CInt -> C'AFframecount -> IO ()
p'afGetDataOffset :: FunPtr (C'AFfilehandle -> CInt -> IO C'AFfileoffset)
c'afGetFrameCount :: C'AFfilehandle -> CInt -> IO C'AFframecount
p'afInitFrameCount :: FunPtr (C'AFfilesetup -> CInt -> C'AFframecount -> IO ())
c'afInitLoopIDs :: C'AFfilesetup -> CInt -> Ptr CInt -> CInt -> IO ()
p'afGetFrameCount :: FunPtr (C'AFfilehandle -> CInt -> IO C'AFframecount)
c'afGetLoopIDs :: C'AFfilehandle -> CInt -> Ptr CInt -> IO CInt
c'afSetLoopMode :: C'AFfilehandle -> CInt -> CInt -> CInt -> IO ()
p'afInitLoopIDs :: FunPtr (C'AFfilesetup -> CInt -> Ptr CInt -> CInt -> IO ())
c'afGetLoopMode :: C'AFfilehandle -> CInt -> CInt -> IO CInt
p'afGetLoopIDs :: FunPtr (C'AFfilehandle -> CInt -> Ptr CInt -> IO CInt)
c'afSetLoopCount :: C'AFfilehandle -> CInt -> CInt -> CInt -> IO CInt
p'afSetLoopMode :: FunPtr (C'AFfilehandle -> CInt -> CInt -> CInt -> IO ())
c'afGetLoopCount :: C'AFfilehandle -> CInt -> CInt -> IO CInt
p'afGetLoopMode :: FunPtr (C'AFfilehandle -> CInt -> CInt -> IO CInt)
c'afSetLoopStart :: C'AFfilehandle -> CInt -> CInt -> CInt -> IO ()
p'afSetLoopCount :: FunPtr (C'AFfilehandle -> CInt -> CInt -> CInt -> IO CInt)
c'afGetLoopStart :: C'AFfilehandle -> CInt -> CInt -> IO CInt
p'afGetLoopCount :: FunPtr (C'AFfilehandle -> CInt -> CInt -> IO CInt)
c'afSetLoopEnd :: C'AFfilehandle -> CInt -> CInt -> CInt -> IO ()
p'afSetLoopStart :: FunPtr (C'AFfilehandle -> CInt -> CInt -> CInt -> IO ())
c'afGetLoopEnd :: C'AFfilehandle -> CInt -> CInt -> IO CInt
p'afGetLoopStart :: FunPtr (C'AFfilehandle -> CInt -> CInt -> IO CInt)
p'afSetLoopEnd :: FunPtr (C'AFfilehandle -> CInt -> CInt -> CInt -> IO ())
p'afGetLoopEnd :: FunPtr (C'AFfilehandle -> CInt -> CInt -> IO CInt)
c'afSetLoopStartFrame :: C'AFfilehandle -> CInt -> CInt -> C'AFframecount -> IO CInt
c'afGetLoopStartFrame :: C'AFfilehandle -> CInt -> CInt -> IO C'AFframecount
c'afSetLoopEndFrame :: C'AFfilehandle -> CInt -> CInt -> C'AFframecount -> IO CInt
p'afSetLoopStartFrame :: FunPtr (C'AFfilehandle -> CInt -> CInt -> C'AFframecount -> IO CInt)
c'afGetLoopEndFrame :: C'AFfilehandle -> CInt -> CInt -> IO C'AFframecount
p'afGetLoopStartFrame :: FunPtr (C'AFfilehandle -> CInt -> CInt -> IO C'AFframecount)
p'afSetLoopEndFrame :: FunPtr (C'AFfilehandle -> CInt -> CInt -> C'AFframecount -> IO CInt)
c'afSetLoopTrack :: C'AFfilehandle -> CInt -> CInt -> CInt -> IO ()
p'afGetLoopEndFrame :: FunPtr (C'AFfilehandle -> CInt -> CInt -> IO C'AFframecount)
c'afGetLoopTrack :: C'AFfilehandle -> CInt -> CInt -> IO CInt
p'afSetLoopTrack :: FunPtr (C'AFfilehandle -> CInt -> CInt -> CInt -> IO ())
c'afInitMarkIDs :: C'AFfilesetup -> CInt -> Ptr CInt -> CInt -> IO ()
p'afGetLoopTrack :: FunPtr (C'AFfilehandle -> CInt -> CInt -> IO CInt)
c'afGetMarkIDs :: C'AFfilehandle -> CInt -> Ptr CInt -> IO CInt
c'afSetMarkPosition :: C'AFfilehandle -> CInt -> CInt -> C'AFframecount -> IO ()
p'afInitMarkIDs :: FunPtr (C'AFfilesetup -> CInt -> Ptr CInt -> CInt -> IO ())
c'afGetMarkPosition :: C'AFfilehandle -> CInt -> CInt -> IO C'AFframecount
p'afGetMarkIDs :: FunPtr (C'AFfilehandle -> CInt -> Ptr CInt -> IO CInt)
c'afInitMarkName :: C'AFfilesetup -> CInt -> CInt -> Ptr CChar -> IO ()
p'afSetMarkPosition :: FunPtr (C'AFfilehandle -> CInt -> CInt -> C'AFframecount -> IO ())
c'afInitMarkComment :: C'AFfilesetup -> CInt -> CInt -> Ptr CChar -> IO ()
p'afGetMarkPosition :: FunPtr (C'AFfilehandle -> CInt -> CInt -> IO C'AFframecount)
c'afGetMarkName :: C'AFfilehandle -> CInt -> CInt -> IO (Ptr CChar)
p'afInitMarkName :: FunPtr (C'AFfilesetup -> CInt -> CInt -> Ptr CChar -> IO ())
c'afGetMarkComment :: C'AFfilehandle -> CInt -> CInt -> IO (Ptr CChar)
p'afInitMarkComment :: FunPtr (C'AFfilesetup -> CInt -> CInt -> Ptr CChar -> IO ())
p'afGetMarkName :: FunPtr (C'AFfilehandle -> CInt -> CInt -> IO (Ptr CChar))
c'afInitInstIDs :: C'AFfilesetup -> Ptr CInt -> CInt -> IO ()
p'afGetMarkComment :: FunPtr (C'AFfilehandle -> CInt -> CInt -> IO (Ptr CChar))
c'afGetInstIDs :: C'AFfilehandle -> Ptr CInt -> IO CInt
p'afInitInstIDs :: FunPtr (C'AFfilesetup -> Ptr CInt -> CInt -> IO ())
c'afGetInstParams :: C'AFfilehandle -> CInt -> C'AUpvlist -> CInt -> IO ()
p'afGetInstIDs :: FunPtr (C'AFfilehandle -> Ptr CInt -> IO CInt)
c'afSetInstParams :: C'AFfilehandle -> CInt -> C'AUpvlist -> CInt -> IO ()
c'afGetInstParamLong :: C'AFfilehandle -> CInt -> CInt -> IO CLong
p'afGetInstParams :: FunPtr (C'AFfilehandle -> CInt -> C'AUpvlist -> CInt -> IO ())
c'afSetInstParamLong :: C'AFfilehandle -> CInt -> CInt -> CLong -> IO ()
p'afSetInstParams :: FunPtr (C'AFfilehandle -> CInt -> C'AUpvlist -> CInt -> IO ())
p'afGetInstParamLong :: FunPtr (C'AFfilehandle -> CInt -> CInt -> IO CLong)
c'afInitMiscIDs :: C'AFfilesetup -> Ptr CInt -> CInt -> IO ()
p'afSetInstParamLong :: FunPtr (C'AFfilehandle -> CInt -> CInt -> CLong -> IO ())
c'afGetMiscIDs :: C'AFfilehandle -> Ptr CInt -> IO CInt
c'afInitMiscType :: C'AFfilesetup -> CInt -> CInt -> IO ()
p'afInitMiscIDs :: FunPtr (C'AFfilesetup -> Ptr CInt -> CInt -> IO ())
c'afGetMiscType :: C'AFfilehandle -> CInt -> IO CInt
p'afGetMiscIDs :: FunPtr (C'AFfilehandle -> Ptr CInt -> IO CInt)
c'afInitMiscSize :: C'AFfilesetup -> CInt -> CInt -> IO ()
p'afInitMiscType :: FunPtr (C'AFfilesetup -> CInt -> CInt -> IO ())
c'afGetMiscSize :: C'AFfilehandle -> CInt -> IO CInt
p'afGetMiscType :: FunPtr (C'AFfilehandle -> CInt -> IO CInt)
p'afInitMiscSize :: FunPtr (C'AFfilesetup -> CInt -> CInt -> IO ())
c'afWriteMisc :: C'AFfilehandle -> CInt -> Ptr () -> CInt -> IO CInt
p'afGetMiscSize :: FunPtr (C'AFfilehandle -> CInt -> IO CInt)
c'afReadMisc :: C'AFfilehandle -> CInt -> Ptr () -> CInt -> IO CInt
c'afSeekMisc :: C'AFfilehandle -> CInt -> CInt -> IO CInt
p'afWriteMisc :: FunPtr (C'AFfilehandle -> CInt -> Ptr () -> CInt -> IO CInt)
p'afReadMisc :: FunPtr (C'AFfilehandle -> CInt -> Ptr () -> CInt -> IO CInt)
p'afSeekMisc :: FunPtr (C'AFfilehandle -> CInt -> CInt -> IO CInt)
