-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Generate and parse Mac OS X property list format
--   
@package plist
@version 0.0.6


-- | PlObject data type
module Text.XML.Plist.PlObject

-- | Data type that represents plist object
data PlObject

-- | string
PlString :: String -> PlObject

-- | bool
PlBool :: Bool -> PlObject

-- | integer
PlInteger :: Int -> PlObject

-- | real
PlReal :: Double -> PlObject

-- | array
PlArray :: [PlObject] -> PlObject

-- | dictionary
PlDict :: [(String, PlObject)] -> PlObject

-- | raw data
PlData :: [Word8] -> PlObject

-- | date (ISO 8601, but currently it is not validated)
PlDate :: String -> PlObject
fromPlString :: Monad m => PlObject -> m String
fromPlBool :: Monad m => PlObject -> m Bool
fromPlInteger :: Monad m => PlObject -> m Int
fromPlReal :: Monad m => PlObject -> m Double
fromPlArray :: Monad m => PlObject -> m [PlObject]
fromPlDict :: Monad m => PlObject -> m [(String, PlObject)]
instance Eq PlObject
instance Ord PlObject
instance Show PlObject
instance Read PlObject


-- | Parsing property list format
module Text.XML.Plist.Read

-- | Read <a>PlObject</a> from file.
readPlistFromFile :: SysConfigList -> String -> IO PlObject

-- | Read <a>PlObject</a> from string.
readPlistFromString :: SysConfigList -> String -> IO PlObject

-- | Arrow that converts XML tree to <a>PlObject</a>. Tree should contain
--   at list one "plist" element.
plistToObject :: ArrowXml a => a XmlTree PlObject

-- | Arrow that converts XML element to <a>PlObject</a>. Element should be
--   "string", "array", "dict", etc.
xmlToObject :: ArrowXml a => a XmlTree PlObject


-- | Generating property list format
module Text.XML.Plist.Write

-- | Write <a>PlObject</a> to file
writePlistToFile :: String -> PlObject -> IO ()

-- | Write <a>PlObject</a> to String
writePlistToString :: PlObject -> IO String

-- | Arrow to convert <a>PlObject</a> to plist with root element and DTD
--   declaration.
objectToPlist :: ArrowDTD a => a PlObject XmlTree

-- | Arrow to convert <a>PlObject</a> to XML. It produces <a>XmlTree</a>
--   without root element.
objectToXml :: ArrowXml a => PlObject -> a b XmlTree


-- | Library for generation and parsing Mac OS X plist format
module Text.XML.Plist

-- | Data type that represents plist object
data PlObject

-- | string
PlString :: String -> PlObject

-- | bool
PlBool :: Bool -> PlObject

-- | integer
PlInteger :: Int -> PlObject

-- | real
PlReal :: Double -> PlObject

-- | array
PlArray :: [PlObject] -> PlObject

-- | dictionary
PlDict :: [(String, PlObject)] -> PlObject

-- | raw data
PlData :: [Word8] -> PlObject

-- | date (ISO 8601, but currently it is not validated)
PlDate :: String -> PlObject

-- | Write <a>PlObject</a> to file
writePlistToFile :: String -> PlObject -> IO ()

-- | Write <a>PlObject</a> to String
writePlistToString :: PlObject -> IO String

-- | Read <a>PlObject</a> from file.
readPlistFromFile :: SysConfigList -> String -> IO PlObject

-- | Read <a>PlObject</a> from string.
readPlistFromString :: SysConfigList -> String -> IO PlObject

-- | Arrow to convert <a>PlObject</a> to plist with root element and DTD
--   declaration.
objectToPlist :: ArrowDTD a => a PlObject XmlTree

-- | Arrow that converts XML tree to <a>PlObject</a>. Tree should contain
--   at list one "plist" element.
plistToObject :: ArrowXml a => a XmlTree PlObject

-- | Arrow to convert <a>PlObject</a> to XML. It produces <a>XmlTree</a>
--   without root element.
objectToXml :: ArrowXml a => PlObject -> a b XmlTree

-- | Arrow that converts XML element to <a>PlObject</a>. Element should be
--   "string", "array", "dict", etc.
xmlToObject :: ArrowXml a => a XmlTree PlObject
fromPlString :: Monad m => PlObject -> m String
fromPlBool :: Monad m => PlObject -> m Bool
fromPlInteger :: Monad m => PlObject -> m Int
fromPlReal :: Monad m => PlObject -> m Double
fromPlArray :: Monad m => PlObject -> m [PlObject]
fromPlDict :: Monad m => PlObject -> m [(String, PlObject)]
