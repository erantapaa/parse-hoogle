-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Labeled tree structure
--   
--   Labeled tree structure, on the model of the standard Data.Tree
@package labeled-tree
@version 1.0.0.0

module Data.LabeledTree
data Tree k a
Node :: a -> Forest k a -> Tree k a

-- | label value
rootLabel :: Tree k a -> a

-- | zero or more child trees
subForest :: Tree k a -> Forest k a

-- | label + value pair
data (::>) k a
(::>) :: k -> a -> ::> k a
type Forest k a = [k ::> Tree k a]
instance (Show k, Show a) => Show (k ::> a)
instance (Eq k, Eq a) => Eq (k ::> a)
instance (Read k, Read a) => Read (k ::> a)
instance (Show k, Show a) => Show (Tree k a)
instance (Eq k, Eq a) => Eq (Tree k a)
instance (Read k, Read a) => Read (Tree k a)
instance Traversable (Tree k)
instance Foldable (Tree k)
instance Functor (Tree k)
instance Traversable ((::>) k)
instance Foldable ((::>) k)
instance Functor ((::>) k)
