-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | ircbot plugin for clckwrks
--   
--   ircbot plugin for clckwrks
@package clckwrks-plugin-ircbot
@version 0.6.12

module Paths_clckwrks_plugin_ircbot
version :: Version
getBinDir :: IO FilePath
getLibDir :: IO FilePath
getDataDir :: IO FilePath
getLibexecDir :: IO FilePath
getDataFileName :: FilePath -> IO FilePath
getSysconfDir :: IO FilePath

module Clckwrks.IrcBot.Types
data IrcConfig
IrcConfig :: String -> Word16 -> String -> String -> User -> Set String -> Bool -> IrcConfig

-- | IRC server
ircHost :: IrcConfig -> String

-- | port (usually 6667)
ircPort :: IrcConfig -> Word16

-- | irc nick
ircNick :: IrcConfig -> String

-- | prefix for bot commands
ircCommandPrefix :: IrcConfig -> String

-- | irc <a>User</a>
ircUser :: IrcConfig -> User

-- | channels to join on connect
ircChannels :: IrcConfig -> Set String

-- | enable the bot
ircEnabled :: IrcConfig -> Bool
data User :: *
User :: ByteString -> HostName -> HostName -> ByteString -> User

-- | username on client system
username :: User -> ByteString

-- | hostname of client system
hostname :: User -> HostName

-- | irc server client is connected to
servername :: User -> HostName

-- | client's real name
realname :: User -> ByteString
emptyIrcConfig :: IrcConfig
instance Migrate IrcConfig
instance SafeCopy IrcConfig
instance Typeable IrcConfig
instance Eq IrcConfig
instance Ord IrcConfig
instance Read IrcConfig
instance Show IrcConfig
instance Data IrcConfig
instance SafeCopy IrcConfig_0
instance Typeable IrcConfig_0
instance Eq IrcConfig_0
instance Ord IrcConfig_0
instance Read IrcConfig_0
instance Show IrcConfig_0
instance Data IrcConfig_0
instance Migrate User
instance SafeCopy User
instance SafeCopy User_0
instance Typeable User_0
instance Data User_0
instance Eq User_0
instance Ord User_0
instance Read User_0
instance Show User_0

module Clckwrks.IrcBot.Acid
data IrcBotState
IrcBotState :: IrcConfig -> IrcBotState
ircConfig :: IrcBotState -> IrcConfig
initialIrcBotState :: IrcConfig -> IrcBotState
getIrcConfig :: Query IrcBotState IrcConfig
setIrcConfig :: IrcConfig -> Update IrcBotState ()
data GetIrcConfig
GetIrcConfig :: GetIrcConfig
newtype SetIrcConfig
SetIrcConfig :: IrcConfig -> SetIrcConfig
instance Typeable GetIrcConfig
instance Typeable SetIrcConfig
instance UpdateEvent SetIrcConfig
instance Method SetIrcConfig
instance SafeCopy SetIrcConfig
instance QueryEvent GetIrcConfig
instance Method GetIrcConfig
instance SafeCopy GetIrcConfig
instance IsAcidic IrcBotState
instance SafeCopy IrcBotState
instance Typeable IrcBotState
instance Eq IrcBotState
instance Ord IrcBotState
instance Read IrcBotState
instance Show IrcBotState
instance Data IrcBotState

module Clckwrks.IrcBot.URL
data IrcBotAdminURL
IrcBotReconnect :: IrcBotAdminURL
IrcBotSettings :: IrcBotAdminURL
data IrcBotURL
IrcLogs :: IrcBotURL
IrcLog :: FilePath -> IrcBotURL
IrcBotAdmin :: IrcBotAdminURL -> IrcBotURL
instance PathInfo IrcBotURL
instance Typeable IrcBotURL
instance Eq IrcBotURL
instance Ord IrcBotURL
instance Read IrcBotURL
instance Show IrcBotURL
instance Data IrcBotURL
instance PathInfo IrcBotAdminURL
instance Typeable IrcBotAdminURL
instance Eq IrcBotAdminURL
instance Ord IrcBotAdminURL
instance Read IrcBotAdminURL
instance Show IrcBotAdminURL
instance Data IrcBotAdminURL

module Clckwrks.IrcBot.PreProcess
parseAttr :: Text -> Parser ()
width :: Parser Attribute
height :: Parser Attribute
ircBotCmd :: Monad m => (IrcBotURL -> [(Text, Maybe Text)] -> Text) -> Text -> ClckT url m Builder

module Clckwrks.IrcBot.Monad
data IrcBotConfig
IrcBotConfig :: FilePath -> AcidState IrcBotState -> (ClckURL -> [(Text, Maybe Text)] -> Text) -> IO () -> IrcBotConfig

-- | directory in which to store irc logs
ircBotLogDirectory :: IrcBotConfig -> FilePath
ircBotState :: IrcBotConfig -> AcidState IrcBotState
ircBotClckURL :: IrcBotConfig -> ClckURL -> [(Text, Maybe Text)] -> Text
ircReconnect :: IrcBotConfig -> IO ()
type IrcBotT m = ClckT IrcBotURL (ReaderT IrcBotConfig m)
type IrcBotM = ClckT IrcBotURL (ReaderT IrcBotConfig (ServerPartT IO))
data IrcFormError
IrcCFE :: (CommonFormError [Input]) -> IrcFormError
CouldNotParsePort :: String -> IrcFormError
type IrcBotForm = ClckFormT IrcFormError IrcBotM
runIrcBotT :: IrcBotConfig -> IrcBotT m a -> ClckT IrcBotURL m a
instance Show IrcFormError
instance (Functor m, Monad m) => GetAcidState (IrcBotT m) IrcBotState
instance Monad m => MonadReader IrcBotConfig (IrcBotT m)
instance IsName n Text => EmbedAsAttr IrcBotM (Attr n ClckURL)
instance IsName n Text => EmbedAsAttr IrcBotM (Attr n IrcBotURL)
instance (Functor m, Monad m) => EmbedAsChild (IrcBotT m) IrcFormError
instance FormError IrcFormError

module Clckwrks.IrcBot.Page.Template
template :: (EmbedAsChild IrcBotM headers, EmbedAsChild IrcBotM body) => Text -> headers -> body -> IrcBotM Response

module Clckwrks.IrcBot.Page.IrcLog
ircLog :: FilePath -> IrcBotM Response

module Clckwrks.IrcBot.Page.IrcLogs
ircLogs :: IrcBotM Response

module Clckwrks.IrcBot.Page.Reconnect
ircReconnectPage :: IrcBotURL -> IrcBotM Response
forceReconnectForm :: IrcBotForm (Maybe String)

module Clckwrks.IrcBot.Page.Settings
ircBotSettings :: IrcBotURL -> IrcBotM Response
ircBotSettingsForm :: IrcConfig -> IrcBotForm IrcConfig

module Clckwrks.IrcBot.Route
checkAuth :: IrcBotURL -> IrcBotM IrcBotURL
routeIrcBot :: IrcBotURL -> IrcBotM Response

module Clckwrks.IrcBot.Plugin
ircBotHandler :: (IrcBotURL -> [(Text, Maybe Text)] -> Text) -> IrcBotConfig -> ClckPlugins -> [Text] -> ClckT ClckURL (ServerPartT IO) Response
ircBotInit :: ClckPlugins -> IO (Maybe Text)
ircBotNavBarCallback :: (IrcBotURL -> [(Text, Maybe Text)] -> Text) -> ClckT ClckURL IO (String, [NamedLink])
botConnect :: Plugins theme n hook config st -> AcidState (EventState GetIrcConfig) -> FilePath -> IO (IO ())
initParts :: BotMonad m => Set ByteString -> IO [m ()]
addIrcBotAdminMenu :: ClckT url IO ()
ircBotPlugin :: Plugin IrcBotURL Theme (ClckT ClckURL (ServerPartT IO) Response) (ClckT ClckURL IO ()) ClckwrksConfig ClckPluginsSt
plugin :: ClckPlugins -> Text -> IO (Maybe Text)

module Clckwrks.IrcBot
