-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Generic implementation of Gerstein/Sonnhammer/Chothia weighting.
--   
--   In their 1994 paper "Volume Changes in Protein Evolution", Gerstein,
--   Sonnhammer and Chothia developed a weighting procedure for protein
--   sequences to avoid over-represented sequences in the appendix "A
--   Method to Weight Protein Sequences to Correct for Unequal
--   Representation". Although their method was developed for protein
--   sequences, it is readily extended to work on any measurable set.
--   
--   This package calculates GSC weights for any reasonable dendrogram. If
--   you want to recreate their algorithm, then just use <tt>UPGMA</tt> as
--   linkage and residue identity as distance function when creating the
--   dendrogram.
--   
--   Changes in version 0.2:
--   
--   <ul>
--   <li>Updated to work with <tt>hierarchical-clustering</tt> 0.4.</li>
--   </ul>
--   
--   Changes in version 0.1.1.1:
--   
--   <ul>
--   <li>Use an stricter upper bound on
--   <tt>hierachical-clustering</tt>.</li>
--   </ul>
--   
--   Changes in version 0.1.1:
--   
--   <ul>
--   <li>Now works even when some (or all) branches have distance zero
--   (i.e. elements below that branches are all equal with respect to
--   distance metric that was used to create the dendrogram).</li>
--   </ul>
@package gsc-weighting
@version 0.2

module Data.Weighting.GSC

-- | <i>O(n^2)</i> Calculates the Gerstein/Sonnhammer/Chothia weights for
--   all elements of a dendrogram. Weights are annotated to the leafs of
--   the dendrogram while distances in branches are kept unchanged.
--   
--   Distances <tt>d</tt> in branches should be non-increasing and between
--   <tt>0</tt> (in the leafs) and <tt>1</tt>. The final weights are
--   normalized to average to <tt>1</tt> (i.e. sum to the number of
--   sequences, the same they would sum if all weights were <tt>1</tt>).
--   
--   For example, suppose we have
--   
--   <pre>
--   dendro = Branch 0.8
--              (Branch 0.5
--                (Branch 0.2
--                  (Leaf <tt>A</tt>)
--                  (Leaf <tt>B</tt>))
--                (Leaf <tt>C</tt>))
--              (Leaf <tt>D</tt>)
--   </pre>
--   
--   This is the same as GSC paper's example, however they used
--   similarities while we are using distances (i.e. applying <tt>(1-)</tt>
--   to the distances would give exactly their example). Then <tt>gsc
--   dendro</tt> is
--   
--   <pre>
--   gsc dendro == Branch 0.8
--                   (Branch 0.5
--                     (Branch 0.2
--                       (Leaf (<tt>A</tt>,0.7608695652173914))
--                       (Leaf (<tt>B</tt>,0.7608695652173914)))
--                     (Leaf (<tt>C</tt>,1.0869565217391306)))
--                   (Leaf (<tt>D</tt>,1.3913043478260871))
--   </pre>
--   
--   which is exactly what they calculated.
gsc :: Dendrogram a -> Dendrogram (a, Distance)
