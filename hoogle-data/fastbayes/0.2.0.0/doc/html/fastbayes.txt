-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Bayesian modeling algorithms accelerated for particular model structures
--   
--   General-purpose sampling approaches like Gibbs sampling are very
--   useful for models that have not been studied extensively. But for some
--   cases, specialized algorithms are available because of the model's
--   commonality (<i>e.g.</i>, linear regression) or niche popularity
--   (<i>e.g.</i>, Latent Dirichlet Allocation). This package is an effort
--   to collect such algorithms in one place.
@package fastbayes
@version 0.2.0.0


-- | This module gives an implementation of Bayesian linear regression,
--   with the scale of the prior chosen by marginal likelihood.
--   
--   The inputs for a Bayesian linear model are identical to those of a
--   classical linear model, except that in addition to a design matrix and
--   response, we must also specify a prior distribution on the weights and
--   the noise. This leaves us with an open question of how these should be
--   specified.
--   
--   In his book <i>Pattern Recognition and Machine Learning</i>,
--   Christopher Bishop provides details for an approach that simplifies
--   the situation significantly, and allows for much faster inference. The
--   structure of the linear model allows us to integrate the posterior
--   over the weights, resulting in the <i>marginal likelihood</i>,
--   expressed as a function of the prior precision and noise precision.
--   This, in turn, can be easily optimized.
module Statistics.FastBayes.Linear
data Fit

-- | <tt>fit lim x y</tt> fits a Bayesian linear model to a design matrix
--   <tt>x</tt> and response vector <tt>y</tt>. This is an iterative
--   algorithm, resulting in a sequence (list) of (α,β) values. Here α is
--   the prior precision, and β is the noise precision. <tt>lim</tt>
--   function passed in is used to specify how the limit of this sequence
--   should be computed.
fit :: ([(Double, Double)] -> (Double, Double)) -> Matrix Double -> Vector Double -> Fit

-- | The design matrix used for the fit.
design :: Fit -> Matrix Double

-- | The response vector used for the fit
response :: Fit -> Vector Double

-- | The precision (inverse variance) of the prior distribution, determined
--   by maximizing the marginal likelihood
priorPrecision :: Fit -> Double

-- | The precision (inverse variance) of the noise
noisePrecision :: Fit -> Double

-- | The effective number of parameters in the model
effectiveNumParameters :: Fit -> Double

-- | The log of the evidence, which is useful for model comparison
--   (different features, same response)
logEvidence :: Fit -> Double

-- | The MAP (maximum a posteriori) values for the parameter weights
mapWeights :: Fit -> Vector Double

-- | The Hessian (matrix of second derivatives) for the posterior
--   distribution
hessian :: Fit -> Matrix Double
instance Show Fit

module Statistics.FastBayes
