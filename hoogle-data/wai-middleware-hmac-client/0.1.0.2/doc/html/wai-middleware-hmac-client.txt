-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | WAI HMAC Authentication Middleware Client
--   
@package wai-middleware-hmac-client
@version 0.1.0.2


-- | Compatible with HTTP Client
module Network.Wai.Middleware.HmacAuth.Client

-- | Add an Hmac auth header, signed with the specified secret, to the
--   given Request. Ignore error handling:
--   
--   <pre>
--   applyHmacAuth defaultHmacSettings "secret" $ fromJust $ parseUrl url
--   </pre>
--   
--   Since 0.1.0
applyHmacAuth :: (MonadIO m, HashAlgorithm alg) => HmacAuthSettings alg -> Key -> Secret -> Request -> m Request

-- | default HMAC client settings
defaultHmacAuthSettings :: HmacAuthSettings SHA512

-- | Various control settings for HMAC authentication
data HmacAuthSettings alg
HmacAuthSettings :: !(CI ByteString) -> !(CI ByteString) -> alg -> !ByteString -> !Strategy -> HmacAuthSettings alg
authKeyHeader :: HmacAuthSettings alg -> !(CI ByteString)
authTimestampHeader :: HmacAuthSettings alg -> !(CI ByteString)

-- | HMAC signing algorithm
--   
--   MD5, SHA1, SHA256, and SHA512 supported
authAlgorithm :: HmacAuthSettings alg -> alg

-- | Realm provider.
--   
--   e.g. Authorization: API key:signature
authRealm :: HmacAuthSettings alg -> !ByteString

-- | Use Header or QueryParam spec.
--   
--   Currently, only the <tt>Header</tt> <tt>Strategy</tt> is supported
authSpec :: HmacAuthSettings alg -> !Strategy
