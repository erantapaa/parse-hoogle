-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Types and instances for implementing a Storable with different peek and poke
--   
--   Utilities useful for working with unioned data structures, where you
--   want to use a different peek and poke. This is particularly useful for
--   use with the ioctl package if you have an ioctl that provides output
--   of a different type to the input.
@package foreign-storable-asymmetric
@version 0.0.1

module Foreign.Storable.Asymmetric

-- | Used as a placeholder for no data.
data NoData
NoData :: NoData

-- | A data structure where peek reads one structure, and poke writes
--   another.
data DifferentPeekPoke a b
PeekOut :: b -> DifferentPeekPoke a b
PokeIn :: a -> DifferentPeekPoke a b

-- | Retrieves the <a>peek</a> structure from a DifferentPeekPoke.
getPeek :: DifferentPeekPoke t t1 -> t1
instance (Storable a, Storable b) => Storable (DifferentPeekPoke a b)
instance Storable NoData
