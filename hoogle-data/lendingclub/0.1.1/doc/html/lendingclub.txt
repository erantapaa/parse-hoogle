-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Bindings for the LendingClub marketplace API
--   
@package lendingclub
@version 0.1.1

module LendingClub.Money
type Money = Double

module LendingClub.Listing
data Listing
Listing :: !Int -> !Grade -> !SubGrade -> !Purpose -> !Money -> !Offer -> !Credit -> Listing
listingId :: Listing -> !Int

-- | analogous to ProsperRating
listingGrade :: Listing -> !Grade

-- | maybe analogous to score?
subGrade :: Listing -> !SubGrade

-- | "purpose" in the API
purpose :: Listing -> !Purpose
fundedAmount :: Listing -> !Money

-- | Contract data
offer :: Listing -> !Offer

-- | Credit data
credit :: Listing -> !Credit

-- | Data related to the listing's offer and contract terms
data Offer
Offer :: !Money -> !Double -> !Int -> Offer
requestAmount :: Offer -> !Money

-- | Interest rate for the borrower
rate :: Offer -> !Double

-- | Integer number of months
termInMonths :: Offer -> !Int

-- | Data related to the credibility of the listing
data Credit
Credit :: !Int -> !Double -> !Bool -> !Double -> !(Maybe Int) -> !(Maybe Int) -> !(Maybe Money) -> !(Maybe Int) -> !(Maybe Int) -> !(Maybe Money) -> !(Maybe Int) -> Credit
fico :: Credit -> !Int
bankcardUtilization :: Credit -> !Double
isHomeowner :: Credit -> !Bool
debtToIncome :: Credit -> !Double
monthsEmployed :: Credit -> !(Maybe Int)
currentDelinquencies :: Credit -> !(Maybe Int)
amountDelinquent :: Credit -> !(Maybe Money)
openCreditLines :: Credit -> !(Maybe Int)
totOpenRevolvingAccts :: Credit -> !(Maybe Int)
revolvingBalance :: Credit -> !(Maybe Money)

-- | Percent
revolvingAvailableCredit :: Credit -> !(Maybe Int)
data Grade
G :: Grade
F :: Grade
E :: Grade
D :: Grade
C :: Grade
B :: Grade
A :: Grade
data SubGrade
G5 :: SubGrade
G4 :: SubGrade
G3 :: SubGrade
G2 :: SubGrade
G1 :: SubGrade
F5 :: SubGrade
F4 :: SubGrade
F3 :: SubGrade
F2 :: SubGrade
F1 :: SubGrade
E5 :: SubGrade
E4 :: SubGrade
E3 :: SubGrade
E2 :: SubGrade
E1 :: SubGrade
D5 :: SubGrade
D4 :: SubGrade
D3 :: SubGrade
D2 :: SubGrade
D1 :: SubGrade
C5 :: SubGrade
C4 :: SubGrade
C3 :: SubGrade
C2 :: SubGrade
C1 :: SubGrade
B5 :: SubGrade
B4 :: SubGrade
B3 :: SubGrade
B2 :: SubGrade
B1 :: SubGrade
A5 :: SubGrade
A4 :: SubGrade
A3 :: SubGrade
A2 :: SubGrade
A1 :: SubGrade
data Purpose
DebtConsolidation :: Purpose
Medical :: Purpose
HomeImprovement :: Purpose
RenewableEnergy :: Purpose
SmallBusiness :: Purpose
Wedding :: Purpose
Vacation :: Purpose
Moving :: Purpose
House :: Purpose
Car :: Purpose
MajorPurchase :: Purpose
CreditCard :: Purpose
Other :: Purpose
instance Typeable Homeownership
instance Typeable Grade
instance Typeable SubGrade
instance Show Offer
instance Show Credit
instance Show Homeownership
instance Eq Homeownership
instance Generic Homeownership
instance Show Grade
instance Eq Grade
instance Ord Grade
instance Generic Grade
instance Read Grade
instance Enum Grade
instance Show SubGrade
instance Eq SubGrade
instance Ord SubGrade
instance Generic SubGrade
instance Read SubGrade
instance Enum SubGrade
instance Show Purpose
instance Eq Purpose
instance Read Purpose
instance Show Listing
instance Datatype D1Homeownership
instance Constructor C1_0Homeownership
instance Constructor C1_1Homeownership
instance Constructor C1_2Homeownership
instance Constructor C1_3Homeownership
instance Datatype D1Grade
instance Constructor C1_0Grade
instance Constructor C1_1Grade
instance Constructor C1_2Grade
instance Constructor C1_3Grade
instance Constructor C1_4Grade
instance Constructor C1_5Grade
instance Constructor C1_6Grade
instance Datatype D1SubGrade
instance Constructor C1_0SubGrade
instance Constructor C1_1SubGrade
instance Constructor C1_2SubGrade
instance Constructor C1_3SubGrade
instance Constructor C1_4SubGrade
instance Constructor C1_5SubGrade
instance Constructor C1_6SubGrade
instance Constructor C1_7SubGrade
instance Constructor C1_8SubGrade
instance Constructor C1_9SubGrade
instance Constructor C1_10SubGrade
instance Constructor C1_11SubGrade
instance Constructor C1_12SubGrade
instance Constructor C1_13SubGrade
instance Constructor C1_14SubGrade
instance Constructor C1_15SubGrade
instance Constructor C1_16SubGrade
instance Constructor C1_17SubGrade
instance Constructor C1_18SubGrade
instance Constructor C1_19SubGrade
instance Constructor C1_20SubGrade
instance Constructor C1_21SubGrade
instance Constructor C1_22SubGrade
instance Constructor C1_23SubGrade
instance Constructor C1_24SubGrade
instance Constructor C1_25SubGrade
instance Constructor C1_26SubGrade
instance Constructor C1_27SubGrade
instance Constructor C1_28SubGrade
instance Constructor C1_29SubGrade
instance Constructor C1_30SubGrade
instance Constructor C1_31SubGrade
instance Constructor C1_32SubGrade
instance Constructor C1_33SubGrade
instance Constructor C1_34SubGrade
instance FromJSON Purpose
instance FromJSON SubGrade
instance ToJSON Grade
instance FromJSON Grade
instance FromJSON Homeownership
instance FromJSON Listing
instance Eq Listing

module LendingClub.Note
data Note
Note :: Int -> Int -> Int -> Double -> Int -> Text -> Grade -> Money -> Money -> Money -> Note
loanId :: Note -> Int
noteId :: Note -> Int
orderId :: Note -> Int
interestRate :: Note -> Double
loanLength :: Note -> Int
loanStatus :: Note -> Text
grade :: Note -> Grade
loanAmount :: Note -> Money
noteAmount :: Note -> Money
paymentsReceived :: Note -> Money
instance Generic Note
instance Show Note
instance Eq Note
instance Datatype D1Note
instance Constructor C1_0Note
instance Selector S1_0_0Note
instance Selector S1_0_1Note
instance Selector S1_0_2Note
instance Selector S1_0_3Note
instance Selector S1_0_4Note
instance Selector S1_0_5Note
instance Selector S1_0_6Note
instance Selector S1_0_7Note
instance Selector S1_0_8Note
instance Selector S1_0_9Note
instance FromJSON Note

module LendingClub.Invest
data InvestResponse
InvestResponse :: Int -> [InvestConfirmation] -> InvestResponse
orderInstructId :: InvestResponse -> Int
orderConfirmations :: InvestResponse -> [InvestConfirmation]
InvestError :: [ErrorMessage] -> InvestResponse
errors :: InvestResponse -> [ErrorMessage]
data ErrorMessage
ErrorMessage :: Text -> Text -> Text -> ErrorMessage
field :: ErrorMessage -> Text
code :: ErrorMessage -> Text
message :: ErrorMessage -> Text
data InvestConfirmation
InvestConfirmation :: Int -> Money -> Money -> [ExecutionStatus] -> InvestConfirmation
loanId :: InvestConfirmation -> Int
requestedAmount :: InvestConfirmation -> Money
investedAmount :: InvestConfirmation -> Money
executionStatus :: InvestConfirmation -> [ExecutionStatus]
data ExecutionStatus
OrderFulfilled :: ExecutionStatus
LoanAmountExceeded :: ExecutionStatus
NotAnInfundingLoan :: ExecutionStatus
RequestedAmountLow :: ExecutionStatus
RequestedAmountRounded :: ExecutionStatus
AugmentedByMerge :: ExecutionStatus
ElimByMerge :: ExecutionStatus
InsufficientCash :: ExecutionStatus
NotAnInvestor :: ExecutionStatus
NotAValidInvestment :: ExecutionStatus
NoteAddedToPortfolio :: ExecutionStatus
NotAValidPortfolio :: ExecutionStatus
ErrorAddingNoteToPortfolio :: ExecutionStatus
SystemBusy :: ExecutionStatus
UnknownError :: ExecutionStatus
instance Generic ErrorMessage
instance Show ErrorMessage
instance Eq ErrorMessage
instance Show ExecutionStatus
instance Eq ExecutionStatus
instance Generic InvestConfirmation
instance Show InvestConfirmation
instance Eq InvestConfirmation
instance Show InvestResponse
instance Eq InvestResponse
instance Datatype D1ErrorMessage
instance Constructor C1_0ErrorMessage
instance Selector S1_0_0ErrorMessage
instance Selector S1_0_1ErrorMessage
instance Selector S1_0_2ErrorMessage
instance Datatype D1InvestConfirmation
instance Constructor C1_0InvestConfirmation
instance Selector S1_0_0InvestConfirmation
instance Selector S1_0_1InvestConfirmation
instance Selector S1_0_2InvestConfirmation
instance Selector S1_0_3InvestConfirmation
instance FromJSON ExecutionStatus
instance FromJSON InvestConfirmation
instance FromJSON ErrorMessage
instance FromJSON InvestResponse

module LendingClub.Authorization
newtype Authorization
Authorization :: ByteString -> Authorization
authorization :: Authorization -> ByteString
newtype InvestorId
InvestorId :: Int -> InvestorId
instance Show Authorization
instance Eq Authorization
instance Show InvestorId
instance Eq InvestorId
instance FromJSON InvestorId

module LendingClub.Internal.JSON

-- | Make a GET request to LendingClub's JSON api, return the parsed JSON
--   data
jsonGet :: FromJSON a => Authorization -> ByteString -> IO a
investRequest :: Authorization -> InvestorId -> Int -> Money -> IO InvestResponse
instance Generic Order
instance Show Order
instance Generic InvestRequest
instance Show InvestRequest
instance Datatype D1Order
instance Constructor C1_0Order
instance Selector S1_0_0Order
instance Selector S1_0_1Order
instance Datatype D1InvestRequest
instance Constructor C1_0InvestRequest
instance Selector S1_0_0InvestRequest
instance Selector S1_0_1InvestRequest
instance ToJSON InvestRequest
instance ToJSON Order

module LendingClub.Account

-- | A data structure for holding account information for LendingClub
data Account
Account :: InvestorId -> Money -> Money -> Money -> Money -> Money -> Money -> Maybe Money -> Money -> Int -> Int -> Account
investorId :: Account -> InvestorId
availableCash :: Account -> Money
accountTotal :: Account -> Money
accruedInterest :: Account -> Money
infundingBalance :: Account -> Money
receivedInterest :: Account -> Money
receivedPrincipal :: Account -> Money
receivedLateFees :: Account -> Maybe Money
outstandingPrincipal :: Account -> Money
totalNotes :: Account -> Int
totalPortfolios :: Account -> Int
instance Generic Account
instance Show Account
instance Eq Account
instance Datatype D1Account
instance Constructor C1_0Account
instance Selector S1_0_0Account
instance Selector S1_0_1Account
instance Selector S1_0_2Account
instance Selector S1_0_3Account
instance Selector S1_0_4Account
instance Selector S1_0_5Account
instance Selector S1_0_6Account
instance Selector S1_0_7Account
instance Selector S1_0_8Account
instance Selector S1_0_9Account
instance Selector S1_0_10Account
instance FromJSON Account

module LendingClub.Commands
invest :: Authorization -> InvestorId -> Money -> Listing -> IO InvestResponse
account :: Authorization -> InvestorId -> IO Account
allListings :: Authorization -> IO (Vector Listing)
notes :: Authorization -> InvestorId -> IO (Vector Note)

-- | Does not talk to LendingClub's listings endpoint. This uses in-memory
--   data to retrieve listings.
--   
--   TODO This thing is pretty much useles... Need to access historical
--   listings
listingFromNote :: Authorization -> Note -> IO (Maybe Listing)
instance Generic LCListings
instance Generic LCNotes
instance Datatype D1LCListings
instance Constructor C1_0LCListings
instance Selector S1_0_0LCListings
instance Datatype D1LCNotes
instance Constructor C1_0LCNotes
instance Selector S1_0_0LCNotes
instance FromJSON LCNotes
instance FromJSON LCListings

module LendingClub
invest :: Authorization -> InvestorId -> Money -> Listing -> IO InvestResponse
account :: Authorization -> InvestorId -> IO Account
allListings :: Authorization -> IO (Vector Listing)
notes :: Authorization -> InvestorId -> IO (Vector Note)

-- | Does not talk to LendingClub's listings endpoint. This uses in-memory
--   data to retrieve listings.
--   
--   TODO This thing is pretty much useles... Need to access historical
--   listings
listingFromNote :: Authorization -> Note -> IO (Maybe Listing)

-- | A data structure for holding account information for LendingClub
data Account
Account :: InvestorId -> Money -> Money -> Money -> Money -> Money -> Money -> Maybe Money -> Money -> Int -> Int -> Account
investorId :: Account -> InvestorId
availableCash :: Account -> Money
accountTotal :: Account -> Money
accruedInterest :: Account -> Money
infundingBalance :: Account -> Money
receivedInterest :: Account -> Money
receivedPrincipal :: Account -> Money
receivedLateFees :: Account -> Maybe Money
outstandingPrincipal :: Account -> Money
totalNotes :: Account -> Int
totalPortfolios :: Account -> Int
newtype Authorization
Authorization :: ByteString -> Authorization
authorization :: Authorization -> ByteString
newtype InvestorId
InvestorId :: Int -> InvestorId
data InvestResponse
InvestResponse :: Int -> [InvestConfirmation] -> InvestResponse
orderInstructId :: InvestResponse -> Int
orderConfirmations :: InvestResponse -> [InvestConfirmation]
InvestError :: [ErrorMessage] -> InvestResponse
errors :: InvestResponse -> [ErrorMessage]
data ErrorMessage
ErrorMessage :: Text -> Text -> Text -> ErrorMessage
field :: ErrorMessage -> Text
code :: ErrorMessage -> Text
message :: ErrorMessage -> Text
data InvestConfirmation
InvestConfirmation :: Int -> Money -> Money -> [ExecutionStatus] -> InvestConfirmation
loanId :: InvestConfirmation -> Int
requestedAmount :: InvestConfirmation -> Money
investedAmount :: InvestConfirmation -> Money
executionStatus :: InvestConfirmation -> [ExecutionStatus]
data ExecutionStatus
OrderFulfilled :: ExecutionStatus
LoanAmountExceeded :: ExecutionStatus
NotAnInfundingLoan :: ExecutionStatus
RequestedAmountLow :: ExecutionStatus
RequestedAmountRounded :: ExecutionStatus
AugmentedByMerge :: ExecutionStatus
ElimByMerge :: ExecutionStatus
InsufficientCash :: ExecutionStatus
NotAnInvestor :: ExecutionStatus
NotAValidInvestment :: ExecutionStatus
NoteAddedToPortfolio :: ExecutionStatus
NotAValidPortfolio :: ExecutionStatus
ErrorAddingNoteToPortfolio :: ExecutionStatus
SystemBusy :: ExecutionStatus
UnknownError :: ExecutionStatus
data Listing
Listing :: !Int -> !Grade -> !SubGrade -> !Purpose -> !Money -> !Offer -> !Credit -> Listing
listingId :: Listing -> !Int

-- | analogous to ProsperRating
listingGrade :: Listing -> !Grade

-- | maybe analogous to score?
subGrade :: Listing -> !SubGrade

-- | "purpose" in the API
purpose :: Listing -> !Purpose
fundedAmount :: Listing -> !Money

-- | Contract data
offer :: Listing -> !Offer

-- | Credit data
credit :: Listing -> !Credit

-- | Data related to the listing's offer and contract terms
data Offer
Offer :: !Money -> !Double -> !Int -> Offer
requestAmount :: Offer -> !Money

-- | Interest rate for the borrower
rate :: Offer -> !Double

-- | Integer number of months
termInMonths :: Offer -> !Int

-- | Data related to the credibility of the listing
data Credit
Credit :: !Int -> !Double -> !Bool -> !Double -> !(Maybe Int) -> !(Maybe Int) -> !(Maybe Money) -> !(Maybe Int) -> !(Maybe Int) -> !(Maybe Money) -> !(Maybe Int) -> Credit
fico :: Credit -> !Int
bankcardUtilization :: Credit -> !Double
isHomeowner :: Credit -> !Bool
debtToIncome :: Credit -> !Double
monthsEmployed :: Credit -> !(Maybe Int)
currentDelinquencies :: Credit -> !(Maybe Int)
amountDelinquent :: Credit -> !(Maybe Money)
openCreditLines :: Credit -> !(Maybe Int)
totOpenRevolvingAccts :: Credit -> !(Maybe Int)
revolvingBalance :: Credit -> !(Maybe Money)

-- | Percent
revolvingAvailableCredit :: Credit -> !(Maybe Int)
data Grade
G :: Grade
F :: Grade
E :: Grade
D :: Grade
C :: Grade
B :: Grade
A :: Grade
data SubGrade
G5 :: SubGrade
G4 :: SubGrade
G3 :: SubGrade
G2 :: SubGrade
G1 :: SubGrade
F5 :: SubGrade
F4 :: SubGrade
F3 :: SubGrade
F2 :: SubGrade
F1 :: SubGrade
E5 :: SubGrade
E4 :: SubGrade
E3 :: SubGrade
E2 :: SubGrade
E1 :: SubGrade
D5 :: SubGrade
D4 :: SubGrade
D3 :: SubGrade
D2 :: SubGrade
D1 :: SubGrade
C5 :: SubGrade
C4 :: SubGrade
C3 :: SubGrade
C2 :: SubGrade
C1 :: SubGrade
B5 :: SubGrade
B4 :: SubGrade
B3 :: SubGrade
B2 :: SubGrade
B1 :: SubGrade
A5 :: SubGrade
A4 :: SubGrade
A3 :: SubGrade
A2 :: SubGrade
A1 :: SubGrade
data Purpose
DebtConsolidation :: Purpose
Medical :: Purpose
HomeImprovement :: Purpose
RenewableEnergy :: Purpose
SmallBusiness :: Purpose
Wedding :: Purpose
Vacation :: Purpose
Moving :: Purpose
House :: Purpose
Car :: Purpose
MajorPurchase :: Purpose
CreditCard :: Purpose
Other :: Purpose
data Note
Note :: Int -> Int -> Int -> Double -> Int -> Text -> Grade -> Money -> Money -> Money -> Note
type Money = Double
