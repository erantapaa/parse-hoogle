-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | yet another visual editor
--   
--   yet another visual editor
--   
--   Customizable vi like editor. You can customize by edit
--   ~/.yavie/vty/yavie-vty.hs. It's very buggy now.
@package yavie
@version 0.0.1

module Yavie.Editor
type Editor c = EditorC (Container c)
type Pos = (Int, Int)
initialSaveToEditor :: Int -> Int -> FilePath -> String -> Editor c
saveToEditor :: FilePath -> Editor c -> Editor c
saveToFile :: Editor c -> Editor c
saveToTmpFile :: Editor c -> Editor c
isBoxCursor :: Editor c -> Bool
cursorPosOfDpy :: Editor c -> Pos
displayLines :: Editor c -> [String]
displayVisualLines :: Editor c -> [(Bool, String)]
fileName :: Editor c -> FilePath
cursorPos :: Editor c -> Pos
resizeDisplay :: Int -> Int -> Editor c -> Editor c
cursorToXY :: Int -> Int -> Editor c -> Editor c
cursorUp :: Editor c -> Editor c
cursorDown :: Editor c -> Editor c
cursorToTop :: Editor c -> Editor c
cursorToLine :: Editor c -> Editor c
cursorToLinePercent :: Editor c -> Editor c
cursorToHead :: Editor c -> Editor c
cursorToMiddle :: Editor c -> Editor c
cursorToLast :: Editor c -> Editor c
cursorLeft :: Editor c -> Editor c
cursorRight :: Editor c -> Editor c
cursorTopOfLine :: Editor c -> Editor c
cursorTopOfLineNotSpace :: Editor c -> Editor c
cursorEndOfLine :: Editor c -> Editor c
cursorFindChar :: Char -> Editor c -> Editor c
cursorFindCharBack :: Char -> Editor c -> Editor c
cursorWord :: Editor c -> Editor c
cursorWordEnd :: Editor c -> Editor c
cursorBackWord :: Editor c -> Editor c
cursorSearchStr :: Editor c -> Editor c
cursorNextSearchStr :: Editor c -> Editor c
cursorSearchStrBack :: Editor c -> Editor c
cursorNextSearchStrBack :: Editor c -> Editor c
resetStrForSearch :: Editor c -> Editor c
addStrForSearch :: Char -> Editor c -> Editor c
scrollUp :: Editor c -> Editor c
scrollDown :: Editor c -> Editor c
scrollUpPage :: Editor c -> Editor c
scrollDownPage :: Editor c -> Editor c
scrollUpHPage :: Editor c -> Editor c
scrollDownHPage :: Editor c -> Editor c
scrollForCursorHead :: Editor c -> Editor c
scrollForCursorMiddle :: Editor c -> Editor c
scrollForCursorLast :: Editor c -> Editor c
deleteUp :: Editor c -> Editor c
deleteDown :: Editor c -> Editor c
deleteLine :: Editor c -> Editor c
deleteInLargeVmode :: Editor c -> Editor c
concatTwoLines :: Editor c -> Editor c
deleteLeft :: Editor c -> Editor c
deleteRight :: Editor c -> Editor c
deleteChar :: Editor c -> Editor c
deleteCursorToEnd :: Editor c -> Editor c
deleteCursorToBegin :: Editor c -> Editor c
deleteFind :: Char -> Editor c -> Editor c
deleteFindMore :: Char -> Editor c -> Editor c
deleteFindBack :: Char -> Editor c -> Editor c
deleteWord :: Editor c -> Editor c
deleteWordEnd :: Editor c -> Editor c
deleteBackWord :: Editor c -> Editor c
insertString :: String -> Editor c -> Editor c
insertStringAfter :: String -> Editor c -> Editor c
insertChar :: Char -> Editor c -> Editor c
insertNL :: Editor c -> Editor c
flipCase :: Editor c -> Editor c
inInsertMode :: Editor c -> Editor c
outInsertMode :: Editor c -> Editor c
replaceModeOn :: Editor c -> Editor c
replaceModeOff :: Editor c -> Editor c
resetYank :: Editor c -> Editor c
yankLines :: Editor c -> Editor c
yankInLargeVmode :: Editor c -> Editor c
pasteYanked :: Editor c -> Editor c
pasteYankedAfter :: Editor c -> Editor c
saveToHistory :: Editor c -> Editor c
undo :: Editor c -> Editor c
redo :: Editor c -> Editor c
isModified :: Editor c -> Bool
resetModified :: Editor c -> Editor c
setVisualBeginY :: Editor c -> Editor c
resetVisualmode :: Editor c -> Editor c
resetStatus :: Editor c -> Editor c
setStatus :: String -> Editor c -> Editor c
addStatus :: Char -> Editor c -> Editor c
bsStatus :: Editor c -> Editor c
resetExCmd :: Editor c -> Editor c
addExCmd :: Char -> Editor c -> Editor c
getExCmd :: Editor c -> String
bsExCmd :: Editor c -> Editor c
multi :: (Editor c -> Editor c) -> Editor c -> Editor c
resetTimes :: Editor c -> Editor c
addTimes :: Char -> Editor c -> Editor c
resetIOAction :: Editor c -> Editor c
setIOAction :: (Editor c -> IO (Editor c)) -> Editor c -> Editor c
runIOAction :: Editor c -> IO (Editor c)
needDeleteThisEditor :: Editor c -> Bool
deleteThisEditor :: Editor c -> Editor c
getOtherValue :: Editor c -> Maybe c
setOtherValue :: c -> Editor c -> Editor c
modifyOtherValue :: (c -> c) -> Editor c -> Editor c

module Yavie.Keybind
type Keybind c = Event -> EventMonad Event (Editor c) ()
type Cmdbind c = String -> EventMonad Event (Editor c) ()
data Event
EvKey :: Key -> [Modifier] -> Event
EvMouse :: Int -> Int -> Button -> [Modifier] -> Event
EvResize :: Int -> Int -> Event
EvExpose :: Event
EvDeleteEditor :: Event
UnknownEvent :: Event
data Key
KEsc :: Key
KFun :: Int -> Key
KBS :: Key
KDel :: Key
KIns :: Key
KTab :: Key
KBackTab :: Key
KEnter :: Key
KUp :: Key
KDown :: Key
KLeft :: Key
KRight :: Key
KHome :: Key
KEnd :: Key
KPageUp :: Key
KPageDown :: Key
KMenu :: Key
KPause :: Key
KPrtScr :: Key
KASCII :: Char -> Key
KOthers :: Int -> Key
KUnknown :: Key
data Modifier
MShift :: Modifier
MCtrl :: Modifier
MAlt :: Modifier
MMeta :: Modifier
data Button
BLeft :: Button
BMiddle :: Button
BRight :: Button

module Yavie.Keybind.Vi
defaultKeybind :: Cmdbind c -> Keybind c
defaultCmdbind :: Cmdbind c
defaultRomode :: Keybind c
defaultInsertmode :: Keybind c

module Yavie
runYavie :: (Monad m, RefMonad m (EventState Event (Editor c))) => YavieConfig m iface c -> m ()
class RefMonad m a
data YavieConfig m iface c
YavieConfig :: Bool -> (Int -> Int -> (Editor c -> m (Editor c)) -> m ()) -> (iface -> m (Int, Int)) -> m iface -> (iface -> (Event -> m Bool) -> m ()) -> (iface -> m ()) -> (iface -> m (Editor c) -> m ()) -> Keybind c -> Keybind c -> m Bool -> (Editor c -> m (Editor c)) -> YavieConfig m iface c
isEventDriven :: YavieConfig m iface c -> Bool
withInitEditor :: YavieConfig m iface c -> Int -> Int -> (Editor c -> m (Editor c)) -> m ()
displaySize :: YavieConfig m iface c -> iface -> m (Int, Int)
initialize :: YavieConfig m iface c -> m iface
supplyEvent :: YavieConfig m iface c -> iface -> (Event -> m Bool) -> m ()
finalize :: YavieConfig m iface c -> iface -> m ()
drawDisplay :: YavieConfig m iface c -> iface -> m (Editor c) -> m ()
keybind :: YavieConfig m iface c -> Keybind c
romode :: YavieConfig m iface c -> Keybind c
getReadOnlyFlag :: YavieConfig m iface c -> m Bool
runAction :: YavieConfig m iface c -> Editor c -> m (Editor c)
defaultWithInitEditor :: Int -> Int -> (Editor c -> IO (Editor c)) -> IO ()
defaultGetReadOnlyFlag :: IO Bool
bind :: (e -> EventMonad e c ()) -> EventMonad e c ()
