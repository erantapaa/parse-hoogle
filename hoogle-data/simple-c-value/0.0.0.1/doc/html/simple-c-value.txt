-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | A simple C value type
--   
--   This library provides a very simple C like AST and conversion type
--   classes. The classes use GHC.Generics and default signatures so you
--   can painless convert to and from Haskell types. This is not a library
--   for parsing C. There are plenty of great ones on Hackage though. This
--   is meant to make the process of converting from a non-recursive
--   Haskell value to a C value easier for data serialization tasks.
@package simple-c-value
@version 0.0.0.1

module Language.C.Simple.CValue

-- | A generic C value
data CValue
VStruct :: [CValue] -> CValue
VUnion :: UnionPath -> CValue -> CValue
VPrimitive :: PrimitiveValue -> CValue
VArray :: [CValue] -> CValue
VMember :: CValue -> CValue
Void :: CValue

-- | ToCValue Class
class ToCValue a where toCValue a = gToCValue (from a)
toCValue :: ToCValue a => a -> CValue

-- | Derive from this to convert from a CValue to Haskell type
class FromCValue a where fromCValue = fmap to . gFromCValue . traceDebug "fromCValue"
fromCValue :: FromCValue a => CValue -> Either String a

-- | A step in union path
data Side
Lft :: Side
Rght :: Side

-- | This is used for the conversion from a CValue back to Haskell type.
--   Ideally it should be and index, but unforunately this does not work
--   with the way Generics creates its :+: binary tree. I'm leaving it here
--   for now, but I might find a more elegant way to handle this.
type UnionPath = [Side]

-- | Primitive C values
data PrimitiveValue
PChar :: CChar -> PrimitiveValue
PSChar :: CSChar -> PrimitiveValue
PUChar :: CUChar -> PrimitiveValue
PShort :: CShort -> PrimitiveValue
PUShort :: CUShort -> PrimitiveValue
PInt :: CInt -> PrimitiveValue
PUInt :: CUInt -> PrimitiveValue
PLong :: CLong -> PrimitiveValue
PULong :: CULong -> PrimitiveValue
PPtrdiff :: CPtrdiff -> PrimitiveValue
PSize :: CSize -> PrimitiveValue
PWchar :: CWchar -> PrimitiveValue
PSigAtomic :: CSigAtomic -> PrimitiveValue
PLLong :: CLLong -> PrimitiveValue
PULLong :: CULLong -> PrimitiveValue
PIntPtr :: CIntPtr -> PrimitiveValue
PUIntPtr :: CUIntPtr -> PrimitiveValue
PIntMax :: CIntMax -> PrimitiveValue
PUIntMax :: CUIntMax -> PrimitiveValue
PClock :: CClock -> PrimitiveValue
PTime :: CTime -> PrimitiveValue
PUSeconds :: CUSeconds -> PrimitiveValue
PSUSeconds :: CSUSeconds -> PrimitiveValue
PFloat :: CFloat -> PrimitiveValue
PDouble :: CDouble -> PrimitiveValue
instance [incoherent] Show Side
instance [incoherent] Eq Side
instance [incoherent] Generic Side
instance [incoherent] Eq PrimitiveValue
instance [incoherent] Show PrimitiveValue
instance [incoherent] Generic PrimitiveValue
instance [incoherent] Show CValue
instance [incoherent] Eq CValue
instance [incoherent] Generic CValue
instance Datatype D1Side
instance Constructor C1_0Side
instance Constructor C1_1Side
instance Datatype D1PrimitiveValue
instance Constructor C1_0PrimitiveValue
instance Constructor C1_1PrimitiveValue
instance Constructor C1_2PrimitiveValue
instance Constructor C1_3PrimitiveValue
instance Constructor C1_4PrimitiveValue
instance Constructor C1_5PrimitiveValue
instance Constructor C1_6PrimitiveValue
instance Constructor C1_7PrimitiveValue
instance Constructor C1_8PrimitiveValue
instance Constructor C1_9PrimitiveValue
instance Constructor C1_10PrimitiveValue
instance Constructor C1_11PrimitiveValue
instance Constructor C1_12PrimitiveValue
instance Constructor C1_13PrimitiveValue
instance Constructor C1_14PrimitiveValue
instance Constructor C1_15PrimitiveValue
instance Constructor C1_16PrimitiveValue
instance Constructor C1_17PrimitiveValue
instance Constructor C1_18PrimitiveValue
instance Constructor C1_19PrimitiveValue
instance Constructor C1_20PrimitiveValue
instance Constructor C1_21PrimitiveValue
instance Constructor C1_22PrimitiveValue
instance Constructor C1_23PrimitiveValue
instance Constructor C1_24PrimitiveValue
instance Datatype D1CValue
instance Constructor C1_0CValue
instance Constructor C1_1CValue
instance Constructor C1_2CValue
instance Constructor C1_3CValue
instance Constructor C1_4CValue
instance Constructor C1_5CValue
instance [incoherent] IsSum U1 False
instance [incoherent] IsSum (K1 i c) False
instance [incoherent] IsSum (f :*: g) False
instance [incoherent] IsSum (f :+: g) True
instance [incoherent] IsSum f b => IsSum (M1 D c f) b
instance [incoherent] IsSum f b => IsSum (M1 C c f) b
instance [incoherent] IsSum f b => IsSum (M1 S s f) b
instance [incoherent] GFromCValue f => GFromSum f
instance [incoherent] (GFromSum a, GFromSum b) => GFromSum (a :+: b)
instance [incoherent] (Selector s, GFromCValue a) => GFromProduct (S1 s a)
instance [incoherent] (GFromProduct a, GFromProduct b) => GFromProduct (a :*: b)
instance [incoherent] GFromCValue f => ConsFromCValue' False f
instance [incoherent] GFromSum f => ConsFromCValue' True f
instance [incoherent] (IsSum f b, ConsFromCValue' b f, GFromSum f) => ConsFromCValue f
instance [incoherent] (GFromCValue a, GFromCValue b, GFromProduct a, GFromProduct b) => GFromCValue (a :*: b)
instance [incoherent] FromCValue a => GFromCValue (K1 i a)
instance [incoherent] (Selector s, GFromCValue a) => GFromCValue (S1 s a)
instance [incoherent] (Constructor c, GFromCValue a) => GFromCValue (C1 c a)
instance [incoherent] (Datatype d, ConsFromCValue a, GFromSum a) => GFromCValue (D1 d a)
instance [incoherent] GFromCValue U1
instance [incoherent] FromCValue a => FromCValue [a]
instance [incoherent] FromCValue CDouble
instance [incoherent] FromCValue CFloat
instance [incoherent] FromCValue CSUSeconds
instance [incoherent] FromCValue CUSeconds
instance [incoherent] FromCValue CTime
instance [incoherent] FromCValue CClock
instance [incoherent] FromCValue CUIntMax
instance [incoherent] FromCValue CIntMax
instance [incoherent] FromCValue CUIntPtr
instance [incoherent] FromCValue CIntPtr
instance [incoherent] FromCValue CULLong
instance [incoherent] FromCValue CLLong
instance [incoherent] FromCValue CSigAtomic
instance [incoherent] FromCValue CWchar
instance [incoherent] FromCValue CSize
instance [incoherent] FromCValue CPtrdiff
instance [incoherent] FromCValue CULong
instance [incoherent] FromCValue CLong
instance [incoherent] FromCValue CUInt
instance [incoherent] FromCValue CInt
instance [incoherent] FromCValue CUShort
instance [incoherent] FromCValue CShort
instance [incoherent] FromCValue CUChar
instance [incoherent] FromCValue CSChar
instance [incoherent] FromCValue PrimitiveValue
instance [incoherent] (GToCValueList a, GToCValueList b) => GToCValueList' True (a :+: b)
instance [incoherent] GToCValue f => GToCValueList' False f
instance [incoherent] (IsSum f b, GToCValueList' b f) => GToCValueList f
instance [incoherent] GToCValue f => DispatchConstructor' False f
instance [incoherent] GToCValueList a => DispatchConstructor' True a
instance [incoherent] (IsSum f b, DispatchConstructor' b f, GToCValueList f) => DispatchConstructor f
instance [incoherent] (Selector s, GToCValue a) => GConArgToLit (S1 s a)
instance [incoherent] (GConArgToLit a, GConArgToLit b) => GConArgToLit (a :*: b)
instance [incoherent] (GToCValue a, GToCValue b, GConArgToLit a, GConArgToLit b) => GToCValue (a :*: b)
instance [incoherent] ToCValue a => GToCValue (K1 i a)
instance [incoherent] (Selector s, GToCValue a) => GToCValue (S1 s a)
instance [incoherent] (Constructor c, GToCValue a) => GToCValue (C1 c a)
instance [incoherent] (Datatype d, DispatchConstructor a, GToCValueList a) => GToCValue (D1 d a)
instance [incoherent] GToCValue U1
instance [incoherent] ToCValue a => ToCValue [a]
instance [incoherent] ToCValue CSUSeconds
instance [incoherent] ToCValue CUSeconds
instance [incoherent] ToCValue CTime
instance [incoherent] ToCValue CClock
instance [incoherent] ToCValue CUIntMax
instance [incoherent] ToCValue CIntMax
instance [incoherent] ToCValue CUIntPtr
instance [incoherent] ToCValue CIntPtr
instance [incoherent] ToCValue CULLong
instance [incoherent] ToCValue CLLong
instance [incoherent] ToCValue CSigAtomic
instance [incoherent] ToCValue CWchar
instance [incoherent] ToCValue CSize
instance [incoherent] ToCValue CPtrdiff
instance [incoherent] ToCValue CULong
instance [incoherent] ToCValue CLong
instance [incoherent] ToCValue CUInt
instance [incoherent] ToCValue CInt
instance [incoherent] ToCValue CUShort
instance [incoherent] ToCValue CShort
instance [incoherent] ToCValue CUChar
instance [incoherent] ToCValue CSChar
instance [incoherent] ToCValue CChar
instance [incoherent] ToCValue CDouble
instance [incoherent] ToCValue CFloat
