-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Missing bindings to the X11 graphics library
--   
--   Missing bindings to the X11 graphics library.
--   
--   The binding is a direct translation of the C binding; for
--   documentation of these calls, refer to <a>The Xlib Programming
--   Manual</a>, available online at <a>http://tronche.com/gui/x/xlib/</a>.
@package X11-extras
@version 0.4


module Graphics.X11.Xlib.Extras
data Event
AnyEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> Event
ev_event_type :: Event -> !EventType
ev_serial :: Event -> !CULong
ev_send_event :: Event -> !Bool
ev_event_display :: Event -> Display
ev_window :: Event -> !Window
ConfigureRequestEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !Window -> !CInt -> !CInt -> !CInt -> !CInt -> !CInt -> !Window -> !NotifyDetail -> !CULong -> Event
ev_event_type :: Event -> !EventType
ev_serial :: Event -> !CULong
ev_send_event :: Event -> !Bool
ev_event_display :: Event -> Display
ev_parent :: Event -> !Window
ev_window :: Event -> !Window
ev_x :: Event -> !CInt
ev_y :: Event -> !CInt
ev_width :: Event -> !CInt
ev_height :: Event -> !CInt
ev_border_width :: Event -> !CInt
ev_above :: Event -> !Window
ev_detail :: Event -> !NotifyDetail
ev_value_mask :: Event -> !CULong
ConfigureEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !Window -> !CInt -> !CInt -> !CInt -> !CInt -> !CInt -> !Window -> !Bool -> Event
ev_event_type :: Event -> !EventType
ev_serial :: Event -> !CULong
ev_send_event :: Event -> !Bool
ev_event_display :: Event -> Display
ev_event :: Event -> !Window
ev_window :: Event -> !Window
ev_x :: Event -> !CInt
ev_y :: Event -> !CInt
ev_width :: Event -> !CInt
ev_height :: Event -> !CInt
ev_border_width :: Event -> !CInt
ev_above :: Event -> !Window
ev_override_redirect :: Event -> !Bool
MapRequestEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !Window -> Event
ev_event_type :: Event -> !EventType
ev_serial :: Event -> !CULong
ev_send_event :: Event -> !Bool
ev_event_display :: Event -> Display
ev_parent :: Event -> !Window
ev_window :: Event -> !Window
KeyEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !Window -> !Window -> !Time -> !CInt -> !CInt -> !CInt -> !CInt -> !KeyMask -> !KeyCode -> !Bool -> Event
ev_event_type :: Event -> !EventType
ev_serial :: Event -> !CULong
ev_send_event :: Event -> !Bool
ev_event_display :: Event -> Display
ev_window :: Event -> !Window
ev_root :: Event -> !Window
ev_subwindow :: Event -> !Window
ev_time :: Event -> !Time
ev_x :: Event -> !CInt
ev_y :: Event -> !CInt
ev_x_root :: Event -> !CInt
ev_y_root :: Event -> !CInt
ev_state :: Event -> !KeyMask
ev_keycode :: Event -> !KeyCode
ev_same_screen :: Event -> !Bool
ButtonEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !Window -> !Window -> !Time -> !CInt -> !CInt -> !CInt -> !CInt -> !KeyMask -> !Button -> !Bool -> Event
ev_event_type :: Event -> !EventType
ev_serial :: Event -> !CULong
ev_send_event :: Event -> !Bool
ev_event_display :: Event -> Display
ev_window :: Event -> !Window
ev_root :: Event -> !Window
ev_subwindow :: Event -> !Window
ev_time :: Event -> !Time
ev_x :: Event -> !CInt
ev_y :: Event -> !CInt
ev_x_root :: Event -> !CInt
ev_y_root :: Event -> !CInt
ev_state :: Event -> !KeyMask
ev_button :: Event -> !Button
ev_same_screen :: Event -> !Bool
MotionEvent :: !EventType -> !CULong -> !Bool -> Display -> !CInt -> !CInt -> !Window -> Event
ev_event_type :: Event -> !EventType
ev_serial :: Event -> !CULong
ev_send_event :: Event -> !Bool
ev_event_display :: Event -> Display
ev_x :: Event -> !CInt
ev_y :: Event -> !CInt
ev_window :: Event -> !Window
DestroyWindowEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !Window -> Event
ev_event_type :: Event -> !EventType
ev_serial :: Event -> !CULong
ev_send_event :: Event -> !Bool
ev_event_display :: Event -> Display
ev_event :: Event -> !Window
ev_window :: Event -> !Window
UnmapEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !Window -> !Bool -> Event
ev_event_type :: Event -> !EventType
ev_serial :: Event -> !CULong
ev_send_event :: Event -> !Bool
ev_event_display :: Event -> Display
ev_event :: Event -> !Window
ev_window :: Event -> !Window
ev_from_configure :: Event -> !Bool
MapNotifyEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !Window -> !Bool -> Event
ev_event_type :: Event -> !EventType
ev_serial :: Event -> !CULong
ev_send_event :: Event -> !Bool
ev_event_display :: Event -> Display
ev_event :: Event -> !Window
ev_window :: Event -> !Window
ev_override_redirect :: Event -> !Bool
MappingNotifyEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !MappingRequest -> !KeyCode -> !CInt -> Event
ev_event_type :: Event -> !EventType
ev_serial :: Event -> !CULong
ev_send_event :: Event -> !Bool
ev_event_display :: Event -> Display
ev_window :: Event -> !Window
ev_request :: Event -> !MappingRequest
ev_first_keycode :: Event -> !KeyCode
ev_count :: Event -> !CInt
CrossingEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !Window -> !Window -> !Time -> !CInt -> !CInt -> !CInt -> !CInt -> !NotifyMode -> !NotifyDetail -> !Bool -> !Bool -> !Modifier -> Event
ev_event_type :: Event -> !EventType
ev_serial :: Event -> !CULong
ev_send_event :: Event -> !Bool
ev_event_display :: Event -> Display
ev_window :: Event -> !Window
ev_root :: Event -> !Window
ev_subwindow :: Event -> !Window
ev_time :: Event -> !Time
ev_x :: Event -> !CInt
ev_y :: Event -> !CInt
ev_x_root :: Event -> !CInt
ev_y_root :: Event -> !CInt
ev_mode :: Event -> !NotifyMode
ev_detail :: Event -> !NotifyDetail
ev_same_screen :: Event -> !Bool
ev_focus :: Event -> !Bool
ev_state :: Event -> !Modifier
SelectionRequest :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !Window -> !Atom -> !Atom -> !Atom -> !Time -> Event
ev_event_type :: Event -> !EventType
ev_serial :: Event -> !CULong
ev_send_event :: Event -> !Bool
ev_event_display :: Event -> Display
ev_owner :: Event -> !Window
ev_requestor :: Event -> !Window
ev_selection :: Event -> !Atom
ev_target :: Event -> !Atom
ev_property :: Event -> !Atom
ev_time :: Event -> !Time
PropertyEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !Atom -> !Time -> !CInt -> Event
ev_event_type :: Event -> !EventType
ev_serial :: Event -> !CULong
ev_send_event :: Event -> !Bool
ev_event_display :: Event -> Display
ev_window :: Event -> !Window
ev_atom :: Event -> !Atom
ev_time :: Event -> !Time
ev_propstate :: Event -> !CInt
ExposeEvent :: !EventType -> !CULong -> !Bool -> Display -> !Window -> !CInt -> !CInt -> !CInt -> !CInt -> !CInt -> Event
ev_event_type :: Event -> !EventType
ev_serial :: Event -> !CULong
ev_send_event :: Event -> !Bool
ev_event_display :: Event -> Display
ev_window :: Event -> !Window
ev_x :: Event -> !CInt
ev_y :: Event -> !CInt
ev_width :: Event -> !CInt
ev_height :: Event -> !CInt
ev_count :: Event -> !CInt
eventName :: Event -> String
getEvent :: XEventPtr -> IO Event
data WindowChanges
WindowChanges :: CInt -> CInt -> CInt -> CInt -> CInt -> Window -> CInt -> WindowChanges
wc_x :: WindowChanges -> CInt
wc_y :: WindowChanges -> CInt
wc_width :: WindowChanges -> CInt
wc_height :: WindowChanges -> CInt
wc_border_width :: WindowChanges -> CInt
wc_sibling :: WindowChanges -> Window
wc_stack_mode :: WindowChanges -> CInt
none :: XID
anyButton :: Button
anyKey :: KeyCode
currentTime :: Time
xConfigureWindow :: Display -> Window -> CULong -> Ptr WindowChanges -> IO CInt
killClient :: Display -> Window -> IO CInt
configureWindow :: Display -> Window -> CULong -> WindowChanges -> IO ()
xFree :: Ptr a -> IO CInt
xQueryTree :: Display -> Window -> Ptr Window -> Ptr Window -> Ptr (Ptr Window) -> Ptr CInt -> IO Status
queryTree :: Display -> Window -> IO (Window, Window, [Window])
data WindowAttributes
WindowAttributes :: CInt -> CInt -> CInt -> CInt -> CInt -> CInt -> Bool -> WindowAttributes
wa_x :: WindowAttributes -> CInt
wa_y :: WindowAttributes -> CInt
wa_width :: WindowAttributes -> CInt
wa_height :: WindowAttributes -> CInt
wa_border_width :: WindowAttributes -> CInt
wa_map_state :: WindowAttributes -> CInt
wa_override_redirect :: WindowAttributes -> Bool
waIsUnviewable :: CInt
waIsViewable :: CInt
waIsUnmapped :: CInt
xGetWindowAttributes :: Display -> Window -> Ptr (WindowAttributes) -> IO Status

-- | interface to the X11 library function
--   <tt>XChangeWindowAttributes()</tt>.
changeWindowAttributes :: Display -> Window -> AttributeMask -> Ptr SetWindowAttributes -> IO ()

-- | Run an action with the server
withServer :: Display -> IO () -> IO ()
data TextProperty
TextProperty :: CString -> Atom -> CInt -> Word32 -> TextProperty
tp_value :: TextProperty -> CString
tp_encoding :: TextProperty -> Atom
tp_format :: TextProperty -> CInt
tp_nitems :: TextProperty -> Word32
xGetTextProperty :: Display -> Window -> Ptr TextProperty -> Atom -> IO Status
getTextProperty :: Display -> Window -> Atom -> IO TextProperty
xwcTextPropertyToTextList :: Display -> Ptr TextProperty -> Ptr (Ptr CWString) -> Ptr CInt -> IO CInt
wcTextPropertyToTextList :: Display -> TextProperty -> IO [String]
wcFreeStringList :: Ptr CWString -> IO ()
newtype FontSet
FontSet :: (Ptr FontSet) -> FontSet
xCreateFontSet :: Display -> CString -> Ptr (Ptr CString) -> Ptr CInt -> Ptr CString -> IO (Ptr FontSet)
createFontSet :: Display -> String -> IO ([String], String, FontSet)
freeStringList :: Ptr CString -> IO ()
freeFontSet :: Display -> FontSet -> IO ()
xwcTextExtents :: FontSet -> CWString -> CInt -> Ptr Rectangle -> Ptr Rectangle -> IO CInt
wcTextExtents :: FontSet -> String -> (Rectangle, Rectangle)
xwcDrawString :: Display -> Drawable -> FontSet -> GC -> Position -> Position -> CWString -> CInt -> IO ()
wcDrawString :: Display -> Drawable -> FontSet -> GC -> Position -> Position -> String -> IO ()
xwcDrawImageString :: Display -> Drawable -> FontSet -> GC -> Position -> Position -> CWString -> CInt -> IO ()
wcDrawImageString :: Display -> Drawable -> FontSet -> GC -> Position -> Position -> String -> IO ()
xwcTextEscapement :: FontSet -> CWString -> CInt -> IO Int32
wcTextEscapement :: FontSet -> String -> Int32
xFetchName :: Display -> Window -> Ptr CString -> IO Status
fetchName :: Display -> Window -> IO (Maybe String)
xGetTransientForHint :: Display -> Window -> Ptr Window -> IO Status
getTransientForHint :: Display -> Window -> IO (Maybe Window)

-- | The XGetWMProtocols function returns the list of atoms stored in the
--   WM_PROTOCOLS property on the specified win  dow. These atoms describe
--   window manager protocols in which the owner of this window is willing
--   to participate. If the property exists, is of type ATOM, is of format
--   32, and the atom WM_PROTOCOLS can be interned, XGetWMProtocols sets
--   the protocols_return argument to a list of atoms, sets the
--   count_return argument to the number of elements in the list, and
--   returns a nonzero status. Otherwise, it sets neither of the return
--   arguments and returns a zero status. To release the list of atoms, use
--   XFree.
getWMProtocols :: Display -> Window -> IO [Atom]
xGetWMProtocols :: Display -> Window -> Ptr (Ptr Atom) -> Ptr CInt -> IO Status
setEventType :: XEventPtr -> EventType -> IO ()
setSelectionNotify :: XEventPtr -> Window -> Atom -> Atom -> Atom -> Time -> IO ()
setClientMessageEvent :: XEventPtr -> Window -> Atom -> CInt -> Atom -> Time -> IO ()
setConfigureEvent :: XEventPtr -> Window -> Window -> CInt -> CInt -> CInt -> CInt -> CInt -> Window -> Bool -> IO ()
xSetErrorHandler :: IO ()

-- | refreshKeyboardMapping. TODO Remove this binding when the fix has been
--   commited to X11
refreshKeyboardMapping :: Event -> IO ()
xRefreshKeyboardMapping :: Ptr () -> IO CInt
anyPropertyType :: Atom
xChangeProperty :: Display -> Window -> Atom -> Atom -> CInt -> CInt -> Ptr CUChar -> CInt -> IO Status
xGetWindowProperty :: Display -> Window -> Atom -> CLong -> CLong -> Bool -> Atom -> Ptr Atom -> Ptr CInt -> Ptr CULong -> Ptr CULong -> Ptr (Ptr CUChar) -> IO Status
rawGetWindowProperty :: (Storable a) => Int -> Display -> Atom -> Window -> IO (Maybe [a])
getWindowProperty8 :: Display -> Atom -> Window -> IO (Maybe [Word8])
getWindowProperty16 :: Display -> Atom -> Window -> IO (Maybe [Word16])
getWindowProperty32 :: Display -> Atom -> Window -> IO (Maybe [Word32])
changeProperty8 :: Display -> Window -> Atom -> Atom -> CInt -> [Word8] -> IO ()
changeProperty16 :: Display -> Window -> Atom -> Atom -> CInt -> [Word16] -> IO ()
changeProperty32 :: Display -> Window -> Atom -> Atom -> CInt -> [Word32] -> IO ()
propModePrepend :: CInt
propModeAppend :: CInt
propModeReplace :: CInt
xUnmapWindow :: Display -> Window -> IO CInt
unmapWindow :: Display -> Window -> IO ()
data SizeHints
SizeHints :: Maybe (Dimension, Dimension) -> Maybe (Dimension, Dimension) -> Maybe (Dimension, Dimension) -> Maybe ((Dimension, Dimension), (Dimension, Dimension)) -> Maybe (Dimension, Dimension) -> Maybe (BitGravity) -> SizeHints
sh_min_size :: SizeHints -> Maybe (Dimension, Dimension)
sh_max_size :: SizeHints -> Maybe (Dimension, Dimension)
sh_resize_inc :: SizeHints -> Maybe (Dimension, Dimension)
sh_aspect :: SizeHints -> Maybe ((Dimension, Dimension), (Dimension, Dimension))
sh_base_size :: SizeHints -> Maybe (Dimension, Dimension)
sh_win_gravity :: SizeHints -> Maybe (BitGravity)
xGetWMNormalHints :: Display -> Window -> Ptr SizeHints -> Ptr CLong -> IO Status
getWMNormalHints :: Display -> Window -> IO SizeHints
data ClassHint
ClassHint :: String -> String -> ClassHint
resName :: ClassHint -> String
resClass :: ClassHint -> String
getClassHint :: Display -> Window -> IO ClassHint
xGetClassHint :: Display -> Window -> Ptr ClassHint -> IO Status
isCursorKey :: KeySym -> Bool
isFunctionKey :: KeySym -> Bool
isKeypadKey :: KeySym -> Bool
isMiscFunctionKey :: KeySym -> Bool
isModifierKey :: KeySym -> Bool
isPFKey :: KeySym -> Bool
isPrivateKeypadKey :: KeySym -> Bool
xSetSelectionOwner :: Display -> Atom -> Window -> Time -> IO ()
xGetSelectionOwner :: Display -> Atom -> IO Window
xConvertSelection :: Display -> Atom -> Atom -> Atom -> Window -> Time -> IO ()
instance Typeable Event
instance Eq FontSet
instance Ord FontSet
instance Show FontSet
instance Show Event
instance Read Rectangle
instance Storable SizeHints
instance Storable TextProperty
instance Storable WindowAttributes
instance Storable WindowChanges


-- | Interface to Xinerama API
module Graphics.X11.Xinerama

-- | Representation of the XineramaScreenInfo struct
data XineramaScreenInfo
XineramaScreenInfo :: CInt -> CShort -> CShort -> CShort -> CShort -> XineramaScreenInfo
xsi_screen_number :: XineramaScreenInfo -> CInt
xsi_x_org :: XineramaScreenInfo -> CShort
xsi_y_org :: XineramaScreenInfo -> CShort
xsi_width :: XineramaScreenInfo -> CShort
xsi_height :: XineramaScreenInfo -> CShort
xineramaIsActive :: Display -> IO Bool
xineramaQueryExtension :: Display -> IO (Maybe (CInt, CInt))
xineramaQueryVersion :: Display -> IO (Maybe (CInt, CInt))
xineramaQueryScreens :: Display -> IO (Maybe [XineramaScreenInfo])
compiledWithXinerama :: Bool

-- | Wrapper around xineramaQueryScreens that fakes a single screen when
--   Xinerama is not active. This is the preferred interface to
--   Graphics.X11.Xinerama.
getScreenInfo :: Display -> IO [Rectangle]
instance Show XineramaScreenInfo
instance Storable XineramaScreenInfo
