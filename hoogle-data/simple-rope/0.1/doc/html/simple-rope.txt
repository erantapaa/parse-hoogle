-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Memory-efficient strings with concatenation and splitting.
--   
--   A very simple but rather memory- and performance-efficient rope with
--   logarithmic concatenation, access and splitting at an index or
--   predicate. Differs from the current <a>rope</a> package (as of rope
--   0.6.1) by providing guaranteed logarithmic performance.
@package simple-rope
@version 0.1

module Data.Rope
data Rope a
class StringLike a where { type family Elem a :: *; }
size :: StringLike a => a -> Int
empty :: StringLike a => a
(.<) :: StringLike a => Elem a -> a -> a
(>.) :: StringLike a => a -> Elem a -> a
(<>) :: StringLike a => a -> a -> a
splitAt :: StringLike a => Int -> a -> (a, a)
decomposeAt :: StringLike a => Int -> a -> (a, Elem a, a)
pack :: StringLike a => Int -> a -> Rope a
unpack :: StringLike a => Rope a -> a
instance Show a => Show (Rope a)
instance Arbitrary (Rope ByteString)
instance StringLike a => StringLike (Rope a)
instance StringLike ByteString
