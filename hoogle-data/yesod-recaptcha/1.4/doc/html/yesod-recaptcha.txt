-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Dead simple support for reCAPTCHA on Yesod applications.
--   
@package yesod-recaptcha
@version 1.4

module Yesod.ReCAPTCHA

-- | Class used by <tt>yesod-recaptcha</tt>'s fields. It should be fairly
--   easy to implement a barebones instance of this class for you
--   foundation data type:
--   
--   <pre>
--   instance YesodReCAPTCHA MyType where
--     recaptchaPublicKey  = return "[your public key]"
--     recaptchaPrivateKey = return "[your private key]"
--   </pre>
--   
--   You may also write a more sophisticated instance. For example, you may
--   get these values from your <tt>settings.yml</tt> instead of hardcoding
--   them. Or you may give different keys depending on the request (maybe
--   you're serving to two different domains in the same application).
--   
--   The <a>YesodAuth</a> superclass is used only for the HTTP request.
--   Please fill a bug report if you think that this
--   <tt>YesodReCAPTCHA</tt> may be useful without <tt>YesodAuth</tt>.
--   
--   <i>Minimum complete definition:</i> <a>recaptchaPublicKey</a> and
--   <a>recaptchaPrivateKey</a>.
class YesodAuth site => YesodReCAPTCHA site where insecureRecaptchaBackdoor = return Nothing
recaptchaPublicKey :: YesodReCAPTCHA site => HandlerT site IO Text
recaptchaPrivateKey :: YesodReCAPTCHA site => HandlerT site IO Text
insecureRecaptchaBackdoor :: YesodReCAPTCHA site => HandlerT site IO (Maybe Text)

-- | A reCAPTCHA field. This <a>AForm</a> returns <tt>()</tt> because
--   CAPTCHAs give no useful information besides having being typed
--   correctly or not. When the user does not type the CAPTCHA correctly,
--   this <a>AForm</a> will automatically fail in the same way as any other
--   <tt>yesod-form</tt> widget fails, so you may just ignore the
--   <tt>()</tt> value.
recaptchaAForm :: YesodReCAPTCHA site => AForm (HandlerT site IO) ()

-- | Same as <a>recaptchaAForm</a>, but instead of being an <a>AForm</a>,
--   it's an <a>MForm</a>.
recaptchaMForm :: YesodReCAPTCHA site => MForm (HandlerT site IO) (FormResult (), [FieldView site])

-- | Define the given <a>RecaptchaOptions</a> for all forms declared after
--   this widget. This widget may be used anywhere, on the
--   <tt><a>head</a></tt> or on the <tt><a>body</a></tt>.
--   
--   Note that this is <i>not</i> required to use <a>recaptchaAForm</a> or
--   <a>recaptchaMForm</a>.
recaptchaOptions :: Yesod site => RecaptchaOptions -> WidgetT site IO ()

-- | Options that may be given to reCAPTCHA. In order to use them on your
--   site, use <a>recaptchaOptions</a> anywhere before the form that
--   contains the <tt>recaptchaField</tt>.
--   
--   Note that there's an instance for <a>Default</a>, so you may use
--   <a>def</a>.
data RecaptchaOptions
RecaptchaOptions :: Maybe Text -> Maybe Text -> RecaptchaOptions

-- | Theme of the reCAPTCHA field. Currently may be <tt>"red"</tt>,
--   <tt>"white"</tt>, <tt>"blackglass"</tt> or <tt>"clean"</tt>. A value
--   of <tt>Nothing</tt> uses the default.
theme :: RecaptchaOptions -> Maybe Text

-- | Language.
lang :: RecaptchaOptions -> Maybe Text
instance Typeable RecaptchaOptions
instance Eq RecaptchaOptions
instance Ord RecaptchaOptions
instance Show RecaptchaOptions
instance Default RecaptchaOptions
