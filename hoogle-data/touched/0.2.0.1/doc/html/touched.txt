-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Library (and cli) to execute a procedure on file change.
--   
@package touched
@version 0.2.0.1

module System.Touched.Procedure

-- | A process defined by three values: exec - the "process" type kill -
--   takes a launched process and stops it fork - takes an <a>exec</a> and
--   launches it into the background
data Procedure a b
Procedure :: (a -> IO b) -> (b -> IO ()) -> a -> Procedure a b
fork :: Procedure a b -> a -> IO b
kill :: Procedure a b -> b -> IO ()
exec :: Procedure a b -> a

-- | A type synonym for a Haskell native process.
type AsyncIO = Procedure (IO ()) ThreadId

-- | A "smart constructor" for Haskell native processes
async :: IO () -> AsyncIO

-- | A type synonym for shell commands in the <a>Process</a> module
type AsyncCmd = Procedure CreateProcess CmdHandles

-- | A smart constructor for shell processes. Takes a string to launch in
--   the shell and returns the process
cmd :: String -> AsyncCmd
instance Show (Procedure a b)

module System.Touched.OnlyOne

-- | A wrapper over a process which allows only one instance of the process
--   to be active at any one time.
data OnlyOne a b
Inactive :: (Procedure a b) -> OnlyOne a b
Active :: (Procedure a b) -> b -> UTCTime -> OnlyOne a b

-- | Gets the time a process launched
otTime :: OnlyOne a b -> Maybe UTCTime

-- | Compare a process' launch time with a <a>UTCTime</a>, returning a Bool
--   specifying whether or not the process was launched prior to the time.
old :: OnlyOne a b -> UTCTime -> Bool

-- | Forces any <a>OnlyOne</a> process into <a>Inactive</a> Mode.
otKill :: OnlyOne a b -> IO (OnlyOne a b)

-- | Starts a process if it has not been started, restarts a process that
--   has been started
otStart :: OnlyOne a b -> IO (OnlyOne a b)

-- | Takes an <a>OnlyOne</a> lifted process and a UTCTime. If the process
--   was launched prior to the UTCTime, the process is (re)started.
--   Otherwise, it's just returned.
restartOld :: OnlyOne a b -> UTCTime -> IO (OnlyOne a b)

module System.Touched

-- | A "smart constructor" for Haskell native processes
async :: IO () -> AsyncIO

-- | A smart constructor for shell processes. Takes a string to launch in
--   the shell and returns the process
cmd :: String -> AsyncCmd

-- | Launches a procedure if any specified file has changed
onChangeAny :: Bool -> [FilePath] -> Procedure a b -> IO ()

-- | Launches a procedure if every specified file has changed
onChangeAll :: Bool -> [FilePath] -> Procedure a b -> IO ()

-- | Takes a single file and launches a procedure when it changes
onChangeFile :: FilePath -> Procedure a b -> IO ()

-- | A process defined by three values: exec - the "process" type kill -
--   takes a launched process and stops it fork - takes an <a>exec</a> and
--   launches it into the background
data Procedure a b
instance Show File
instance Eq File
