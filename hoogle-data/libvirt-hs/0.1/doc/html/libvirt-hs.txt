-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | FFI bindings to libvirt virtualization API (http://libvirt.org)
--   
--   This package provides low-level (at this moment, at least) FFI
--   bindings to libvirt library.
@package libvirt-hs
@version 0.1


-- | Internal types definitions and low-level functions. This module is not
--   supposed to be imported by client code.
module System.LibVirt.Internal
newtype Connection
Connection :: (Ptr (Connection)) -> Connection
newtype Domain
Domain :: (Ptr (Domain)) -> Domain
newtype Network
Network :: (Ptr (Network)) -> Network
instance Typeable Network
instance Data Network
instance Eq Network
instance Typeable Domain
instance Data Domain
instance Eq Domain
instance Typeable Connection
instance Data Connection
instance Eq Connection
instance Show Network
instance Show Domain
instance Show Connection

module System.LibVirt.Errors
data Error
Error :: ErrorNumber -> ErrorDomain -> String -> ErrorLevel -> Connection -> Domain -> Maybe String -> Maybe String -> Maybe String -> Int -> Int -> Network -> Error
veCode :: Error -> ErrorNumber
veDomain :: Error -> ErrorDomain
veMessage :: Error -> String
veLevel :: Error -> ErrorLevel
veConnect :: Error -> Connection
veDom :: Error -> Domain
veStr1 :: Error -> Maybe String
veStr2 :: Error -> Maybe String
veStr3 :: Error -> Maybe String
veInt1 :: Error -> Int
veInt2 :: Error -> Int
veNet :: Error -> Network
data ErrorLevel
ErrNone :: ErrorLevel
ErrWarning :: ErrorLevel
ErrError :: ErrorLevel
data ErrorDomain
FromNone :: ErrorDomain
FromXen :: ErrorDomain
FromXend :: ErrorDomain
FromXenstore :: ErrorDomain
FromSexpr :: ErrorDomain
FromXml :: ErrorDomain
FromDom :: ErrorDomain
FromRpc :: ErrorDomain
FromProxy :: ErrorDomain
FromConf :: ErrorDomain
FromQemu :: ErrorDomain
FromNet :: ErrorDomain
FromTest :: ErrorDomain
FromRemote :: ErrorDomain
FromOpenvz :: ErrorDomain
FromXenxm :: ErrorDomain
FromStatsLinux :: ErrorDomain
FromLxc :: ErrorDomain
FromStorage :: ErrorDomain
FromNetwork :: ErrorDomain
FromDomain :: ErrorDomain
FromUml :: ErrorDomain
FromNodedev :: ErrorDomain
FromXenInotify :: ErrorDomain
FromSecurity :: ErrorDomain
FromVbox :: ErrorDomain
FromInterface :: ErrorDomain
FromOne :: ErrorDomain
FromEsx :: ErrorDomain
FromPhyp :: ErrorDomain
FromSecret :: ErrorDomain
FromCpu :: ErrorDomain
FromXenapi :: ErrorDomain
FromNwfilter :: ErrorDomain
FromHook :: ErrorDomain
FromDomainSnapshot :: ErrorDomain
FromAudit :: ErrorDomain
FromSysinfo :: ErrorDomain
FromStreams :: ErrorDomain
FromVmware :: ErrorDomain
FromEvent :: ErrorDomain
FromLibxl :: ErrorDomain
FromLocking :: ErrorDomain
FromHyperv :: ErrorDomain
FromCapabilities :: ErrorDomain
FromUri :: ErrorDomain
FromAuth :: ErrorDomain
FromDbus :: ErrorDomain
data ErrorNumber
ErrOk :: ErrorNumber
ErrInternalError :: ErrorNumber
ErrNoMemory :: ErrorNumber
ErrNoSupport :: ErrorNumber
ErrUnknownHost :: ErrorNumber
ErrNoConnect :: ErrorNumber
ErrInvalidConn :: ErrorNumber
ErrInvalidDomain :: ErrorNumber
ErrInvalidArg :: ErrorNumber
ErrOperationFailed :: ErrorNumber
ErrGetFailed :: ErrorNumber
ErrPostFailed :: ErrorNumber
ErrHttpError :: ErrorNumber
ErrSexprSerial :: ErrorNumber
ErrNoXen :: ErrorNumber
ErrXenCall :: ErrorNumber
ErrOsType :: ErrorNumber
ErrNoKernel :: ErrorNumber
ErrNoRoot :: ErrorNumber
ErrNoSource :: ErrorNumber
ErrNoTarget :: ErrorNumber
ErrNoName :: ErrorNumber
ErrNoOs :: ErrorNumber
ErrNoDevice :: ErrorNumber
ErrNoXenstore :: ErrorNumber
ErrDriverFull :: ErrorNumber
ErrCallFailed :: ErrorNumber
ErrXmlError :: ErrorNumber
ErrDomExist :: ErrorNumber
ErrOperationDenied :: ErrorNumber
ErrOpenFailed :: ErrorNumber
ErrReadFailed :: ErrorNumber
ErrParseFailed :: ErrorNumber
ErrConfSyntax :: ErrorNumber
ErrWriteFailed :: ErrorNumber
ErrXmlDetail :: ErrorNumber
ErrInvalidNetwork :: ErrorNumber
ErrNetworkExist :: ErrorNumber
ErrSystemError :: ErrorNumber
ErrRpc :: ErrorNumber
ErrGnutlsError :: ErrorNumber
WarNoNetwork :: ErrorNumber
ErrNoDomain :: ErrorNumber
ErrNoNetwork :: ErrorNumber
ErrInvalidMac :: ErrorNumber
ErrAuthFailed :: ErrorNumber
ErrInvalidStoragePool :: ErrorNumber
ErrInvalidStorageVol :: ErrorNumber
WarNoStorage :: ErrorNumber
ErrNoStoragePool :: ErrorNumber
ErrNoStorageVol :: ErrorNumber
WarNoNode :: ErrorNumber
ErrInvalidNodeDevice :: ErrorNumber
ErrNoNodeDevice :: ErrorNumber
ErrNoSecurityModel :: ErrorNumber
ErrOperationInvalid :: ErrorNumber
WarNoInterface :: ErrorNumber
ErrNoInterface :: ErrorNumber
ErrInvalidInterface :: ErrorNumber
ErrMultipleInterfaces :: ErrorNumber
WarNoNwfilter :: ErrorNumber
ErrInvalidNwfilter :: ErrorNumber
ErrNoNwfilter :: ErrorNumber
ErrBuildFirewall :: ErrorNumber
WarNoSecret :: ErrorNumber
ErrInvalidSecret :: ErrorNumber
ErrNoSecret :: ErrorNumber
ErrConfigUnsupported :: ErrorNumber
ErrOperationTimeout :: ErrorNumber
ErrMigratePersistFailed :: ErrorNumber
ErrHookScriptFailed :: ErrorNumber
ErrInvalidDomainSnapshot :: ErrorNumber
ErrNoDomainSnapshot :: ErrorNumber
ErrInvalidStream :: ErrorNumber
ErrArgumentUnsupported :: ErrorNumber
ErrStorageProbeFailed :: ErrorNumber
ErrStoragePoolBuilt :: ErrorNumber
ErrSnapshotRevertRisky :: ErrorNumber
ErrOperationAborted :: ErrorNumber
ErrAuthCancelled :: ErrorNumber
ErrNoDomainMetadata :: ErrorNumber
ErrMigrateUnsafe :: ErrorNumber
ErrOverflow :: ErrorNumber
ErrBlockCopyActive :: ErrorNumber
catchVirtError :: IO a -> (Error -> IO b) -> IO (Either b a)
exceptionOnMinusOne :: CInt -> IO Int
ptrToConnection :: Ptr () -> IO Connection
ptrToDomain :: Ptr () -> IO Domain
ptrToNetwork :: Ptr () -> IO Network
connectionToPtr :: Connection -> Ptr ()
domainToPtr :: Domain -> Ptr ()
networkToPtr :: Network -> Ptr ()
instance Typeable Error
instance Typeable UnknownError
instance Typeable ErrorNumber
instance Data ErrorNumber
instance Typeable ErrorDomain
instance Data ErrorDomain
instance Typeable ErrorLevel
instance Data ErrorLevel
instance Eq ErrorLevel
instance Show ErrorLevel
instance Eq ErrorDomain
instance Show ErrorDomain
instance Eq ErrorNumber
instance Show ErrorNumber
instance Eq Error
instance Show Error
instance Data Error
instance Eq UnknownError
instance Show UnknownError
instance Data UnknownError
instance Exception UnknownError
instance Enum ErrorNumber
instance Exception Error
instance Enum ErrorDomain
instance Enum ErrorLevel

module System.LibVirt.Foreign
data Connection
data Domain
data Network
type DomainID = CInt
data DomainInfo
DomainInfo :: DomainState -> Integer -> Integer -> Int -> Integer -> DomainInfo
diState :: DomainInfo -> DomainState
diMaxMem :: DomainInfo -> Integer
diMemory :: DomainInfo -> Integer
diNrVirtCPU :: DomainInfo -> Int
diCPUTime :: DomainInfo -> Integer
data DomainState
DomainNostate :: DomainState
DomainRunning :: DomainState
DomainBlocked :: DomainState
DomainPaused :: DomainState
DomainShutdown :: DomainState
DomainShutoff :: DomainState
DomainCrashed :: DomainState
DomainPmsuspended :: DomainState
data Stream
data DomainCreateFlags
DomainNone :: DomainCreateFlags
DomainStartPaused :: DomainCreateFlags
DomainStartAutodestroy :: DomainCreateFlags
DomainStartBypassCache :: DomainCreateFlags
DomainStartForceBoot :: DomainCreateFlags
data DomainXMLFlags
DomainXmlSecure :: DomainXMLFlags
DomainXmlInactive :: DomainXMLFlags
DomainXmlUpdateCpu :: DomainXMLFlags
data SecurityLabel
SecurityLabel :: String -> Int -> SecurityLabel
slLabel :: SecurityLabel -> String
slEnforcing :: SecurityLabel -> Int
data SecurityModel
SecurityModel :: String -> String -> SecurityModel
smModel :: SecurityModel -> String
smDOI :: SecurityModel -> String
data NodeInfo
NodeInfo :: String -> CULong -> CUInt -> CUInt -> CUInt -> CUInt -> CUInt -> CUInt -> NodeInfo
niModel :: NodeInfo -> String
niMemory :: NodeInfo -> CULong
niCPUs :: NodeInfo -> CUInt
niMHz :: NodeInfo -> CUInt
niNodes :: NodeInfo -> CUInt
niSockets :: NodeInfo -> CUInt
niCores :: NodeInfo -> CUInt
niThreads :: NodeInfo -> CUInt
data SchedParameterType
DomainSchedFieldInt :: SchedParameterType
DomainSchedFieldUint :: SchedParameterType
DomainSchedFieldLlong :: SchedParameterType
DomainSchedFieldUllong :: SchedParameterType
DomainSchedFieldDouble :: SchedParameterType
DomainSchedFieldBoolean :: SchedParameterType
data ConnectCredential
ConnectCredential :: Int -> String -> String -> String -> String -> Integer -> ConnectCredential
ccType :: ConnectCredential -> Int
ccPrompt :: ConnectCredential -> String
ccChallenge :: ConnectCredential -> String
ccDefresult :: ConnectCredential -> String
ccResult :: ConnectCredential -> String
ccResultLen :: ConnectCredential -> Integer
initialize :: IO (Int)
openConnection :: String -> IO (Connection)
closeConnection :: Connection -> IO (Int)
runningDomainsCount :: Connection -> IO (Int)
definedDomainsCount :: Connection -> IO (Int)
runningDomainsIDs :: Connection -> IO [DomainID]
definedDomainsNames :: Connection -> IO [String]
lookupDomainID :: Connection -> DomainID -> IO (Domain)
lookupDomainName :: Connection -> String -> IO (Domain)
getDomainInfo :: Domain -> IO DomainInfo
getDomainXML :: Domain -> [DomainXMLFlags] -> IO (String)
defineDomainXML :: Connection -> String -> IO (Domain)
undefineDomain :: Domain -> IO (Int)
getDomainID :: Domain -> IO (DomainID)
getDomainName :: Domain -> IO (String)
createDomain :: Domain -> IO (Int)
createDomainXML :: Connection -> String -> [DomainCreateFlags] -> IO (Domain)
destroyDomain :: Domain -> IO (Int)
shutdownDomain :: Domain -> IO (Int)
rebootDomain :: Domain -> CUInt -> IO (Int)
suspendDomain :: Domain -> IO (Int)
resumeDomain :: Domain -> IO (Int)
saveDomain :: Domain -> String -> IO (Int)
restoreDomain :: Connection -> String -> IO (Int)
refDomain :: Domain -> IO (Int)
freeDomain :: Domain -> IO (Int)
getNetworkConnection :: Network -> IO (Connection)
runningNetworksCount :: Connection -> IO (Int)
definedNetworksCount :: Connection -> IO (Int)
runningNetworksNames :: Connection -> IO [String]
definedNetworksNames :: Connection -> IO [String]
lookupNetworkName :: Connection -> String -> IO (Network)
lookupNetworkUUID :: Connection -> String -> IO (Network)
createNetworkXML :: Connection -> String -> IO (Network)
defineNetworkXML :: Connection -> String -> IO (Network)
undefineNetwork :: Network -> IO (Int)
destroyNetwork :: Network -> IO (Int)
createNetwork :: Network -> IO (Int)
refNetwork :: Network -> IO (Int)
freeNetwork :: Network -> IO (Int)
getNetworkName :: Network -> IO (String)
getNetworkXML :: Network -> [NetworkXMLFlags] -> IO (String)
instance Eq DomainState
instance Show DomainState
instance Eq DomainInfo
instance Show DomainInfo
instance Eq DomainCreateFlags
instance Show DomainCreateFlags
instance Eq DomainXMLFlags
instance Show DomainXMLFlags
instance Eq NetworkXMLFlags
instance Show NetworkXMLFlags
instance Enum NetworkXMLFlags
instance Eq SecurityLabel
instance Show SecurityLabel
instance Eq SecurityModel
instance Show SecurityModel
instance Eq NodeInfo
instance Show NodeInfo
instance Eq SchedParameterType
instance Show SchedParameterType
instance Eq ConnectCredential
instance Show ConnectCredential
instance Enum SchedParameterType
instance Enum DomainXMLFlags
instance Enum DomainCreateFlags
instance Enum DomainState

module System.LibVirt
withConnection :: String -> (Connection -> IO a) -> IO a
