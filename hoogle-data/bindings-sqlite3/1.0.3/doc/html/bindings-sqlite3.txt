-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Low level bindings to sqlite3.
--   
--   Low level bindings to sqlite3.
@package bindings-sqlite3
@version 1.0.3


-- | <a>http://www.sqlite.org/c3ref/intro.html</a>
module Bindings.Sqlite3
c'SQLITE_SHM_NLOCK :: Num a => a
c'SQLITE_VTAB_CONSTRAINT_SUPPORT :: Num a => a
data C'sqlite3_backup
C'sqlite3_backup :: C'sqlite3_backup
data C'sqlite3_context
C'sqlite3_context :: C'sqlite3_context
p'sqlite3_data_directory :: Ptr (Ptr CChar)
data C'sqlite3_file
C'sqlite3_file :: Ptr C'sqlite3_io_methods -> C'sqlite3_file
c'sqlite3_file'pMethods :: C'sqlite3_file -> Ptr C'sqlite3_io_methods
p'sqlite3_file'pMethods :: Ptr (C'sqlite3_file) -> Ptr (Ptr C'sqlite3_io_methods)
data C'sqlite3_index_info
C'sqlite3_index_info :: CInt -> Ptr C'sqlite3_index_constraint -> CInt -> Ptr C'sqlite3_index_orderby -> Ptr C'sqlite3_index_constraint_usage -> CInt -> CString -> CInt -> CInt -> CDouble -> C'sqlite3_index_info
c'sqlite3_index_info'nConstraint :: C'sqlite3_index_info -> CInt
c'sqlite3_index_info'aConstraint :: C'sqlite3_index_info -> Ptr C'sqlite3_index_constraint
c'sqlite3_index_info'nOrderBy :: C'sqlite3_index_info -> CInt
c'sqlite3_index_info'aOrderBy :: C'sqlite3_index_info -> Ptr C'sqlite3_index_orderby
c'sqlite3_index_info'aConstraintUsage :: C'sqlite3_index_info -> Ptr C'sqlite3_index_constraint_usage
c'sqlite3_index_info'idxNum :: C'sqlite3_index_info -> CInt
c'sqlite3_index_info'idxStr :: C'sqlite3_index_info -> CString
c'sqlite3_index_info'needToFreeIdxStr :: C'sqlite3_index_info -> CInt
c'sqlite3_index_info'orderByConsumed :: C'sqlite3_index_info -> CInt
c'sqlite3_index_info'estimatedCost :: C'sqlite3_index_info -> CDouble
data C'sqlite3_index_constraint
C'sqlite3_index_constraint :: CInt -> CUChar -> CUChar -> C'sqlite3_index_constraint
c'sqlite3_index_constraint'iColumn :: C'sqlite3_index_constraint -> CInt
c'sqlite3_index_constraint'op :: C'sqlite3_index_constraint -> CUChar
c'sqlite3_index_constraint'usable :: C'sqlite3_index_constraint -> CUChar
data C'sqlite3_index_orderby
C'sqlite3_index_orderby :: CInt -> CUChar -> C'sqlite3_index_orderby
c'sqlite3_index_orderby'iColumn :: C'sqlite3_index_orderby -> CInt
c'sqlite3_index_orderby'desc :: C'sqlite3_index_orderby -> CUChar
p'sqlite3_index_constraint'iColumn :: Ptr (C'sqlite3_index_constraint) -> Ptr (CInt)
p'sqlite3_index_info'nConstraint :: Ptr (C'sqlite3_index_info) -> Ptr (CInt)
p'sqlite3_index_constraint'op :: Ptr (C'sqlite3_index_constraint) -> Ptr (CUChar)
data C'sqlite3_index_constraint_usage
C'sqlite3_index_constraint_usage :: CInt -> CUChar -> C'sqlite3_index_constraint_usage
c'sqlite3_index_constraint_usage'argvIndex :: C'sqlite3_index_constraint_usage -> CInt
c'sqlite3_index_constraint_usage'omit :: C'sqlite3_index_constraint_usage -> CUChar
p'sqlite3_index_orderby'iColumn :: Ptr (C'sqlite3_index_orderby) -> Ptr (CInt)
p'sqlite3_index_constraint'usable :: Ptr (C'sqlite3_index_constraint) -> Ptr (CUChar)
p'sqlite3_index_info'aConstraint :: Ptr (C'sqlite3_index_info) -> Ptr (Ptr C'sqlite3_index_constraint)
p'sqlite3_index_orderby'desc :: Ptr (C'sqlite3_index_orderby) -> Ptr (CUChar)
p'sqlite3_index_info'nOrderBy :: Ptr (C'sqlite3_index_info) -> Ptr (CInt)
p'sqlite3_index_constraint_usage'argvIndex :: Ptr (C'sqlite3_index_constraint_usage) -> Ptr (CInt)
p'sqlite3_index_info'aOrderBy :: Ptr (C'sqlite3_index_info) -> Ptr (Ptr C'sqlite3_index_orderby)
p'sqlite3_index_constraint_usage'omit :: Ptr (C'sqlite3_index_constraint_usage) -> Ptr (CUChar)
p'sqlite3_index_info'aConstraintUsage :: Ptr (C'sqlite3_index_info) -> Ptr (Ptr C'sqlite3_index_constraint_usage)
p'sqlite3_index_info'idxNum :: Ptr (C'sqlite3_index_info) -> Ptr (CInt)
p'sqlite3_index_info'idxStr :: Ptr (C'sqlite3_index_info) -> Ptr (CString)
p'sqlite3_index_info'needToFreeIdxStr :: Ptr (C'sqlite3_index_info) -> Ptr (CInt)
p'sqlite3_index_info'orderByConsumed :: Ptr (C'sqlite3_index_info) -> Ptr (CInt)
p'sqlite3_index_info'estimatedCost :: Ptr (C'sqlite3_index_info) -> Ptr (CDouble)
data C'sqlite3_io_methods
C'sqlite3_io_methods :: CInt -> FunPtr (Ptr C'sqlite3_file -> IO CInt) -> FunPtr (Ptr C'sqlite3_file -> Ptr () -> CInt -> C'sqlite3_int64 -> IO CInt) -> FunPtr (Ptr C'sqlite3_file -> Ptr () -> CInt -> C'sqlite3_int64 -> IO ()) -> FunPtr (Ptr C'sqlite3_file -> C'sqlite3_int64 -> IO CInt) -> FunPtr (Ptr C'sqlite3_file -> CInt -> IO CInt) -> FunPtr (Ptr C'sqlite3_file -> Ptr C'sqlite3_int64 -> IO CInt) -> FunPtr (Ptr C'sqlite3_file -> CInt -> IO CInt) -> FunPtr (Ptr C'sqlite3_file -> CInt -> IO CInt) -> FunPtr (Ptr C'sqlite3_file -> Ptr CInt -> IO CInt) -> FunPtr (Ptr C'sqlite3_file -> CInt -> Ptr () -> IO CInt) -> FunPtr (Ptr C'sqlite3_file -> IO CInt) -> FunPtr (Ptr C'sqlite3_file -> IO CInt) -> FunPtr (Ptr C'sqlite3_file -> CInt -> CInt -> CInt -> Ptr (Ptr ()) -> IO CInt) -> FunPtr (Ptr C'sqlite3_file -> CInt -> CInt -> CInt -> IO CInt) -> FunPtr (Ptr C'sqlite3_file -> IO ()) -> FunPtr (Ptr C'sqlite3_file -> CInt -> IO CInt) -> FunPtr (Ptr C'sqlite3_file -> C'sqlite3_int64 -> CInt -> Ptr (Ptr ()) -> IO CInt) -> FunPtr (Ptr C'sqlite3_file -> C'sqlite3_int64 -> Ptr () -> IO CInt) -> C'sqlite3_io_methods
c'sqlite3_io_methods'iVersion :: C'sqlite3_io_methods -> CInt
c'sqlite3_io_methods'xClose :: C'sqlite3_io_methods -> FunPtr (Ptr C'sqlite3_file -> IO CInt)
c'sqlite3_io_methods'xRead :: C'sqlite3_io_methods -> FunPtr (Ptr C'sqlite3_file -> Ptr () -> CInt -> C'sqlite3_int64 -> IO CInt)
c'sqlite3_io_methods'xWrite :: C'sqlite3_io_methods -> FunPtr (Ptr C'sqlite3_file -> Ptr () -> CInt -> C'sqlite3_int64 -> IO ())
c'sqlite3_io_methods'xTruncate :: C'sqlite3_io_methods -> FunPtr (Ptr C'sqlite3_file -> C'sqlite3_int64 -> IO CInt)
c'sqlite3_io_methods'xSync :: C'sqlite3_io_methods -> FunPtr (Ptr C'sqlite3_file -> CInt -> IO CInt)
c'sqlite3_io_methods'xFileSize :: C'sqlite3_io_methods -> FunPtr (Ptr C'sqlite3_file -> Ptr C'sqlite3_int64 -> IO CInt)
c'sqlite3_io_methods'xLock :: C'sqlite3_io_methods -> FunPtr (Ptr C'sqlite3_file -> CInt -> IO CInt)
c'sqlite3_io_methods'xUnlock :: C'sqlite3_io_methods -> FunPtr (Ptr C'sqlite3_file -> CInt -> IO CInt)
c'sqlite3_io_methods'xCheckReservedLock :: C'sqlite3_io_methods -> FunPtr (Ptr C'sqlite3_file -> Ptr CInt -> IO CInt)
c'sqlite3_io_methods'xFileControl :: C'sqlite3_io_methods -> FunPtr (Ptr C'sqlite3_file -> CInt -> Ptr () -> IO CInt)
c'sqlite3_io_methods'xSectorSize :: C'sqlite3_io_methods -> FunPtr (Ptr C'sqlite3_file -> IO CInt)
c'sqlite3_io_methods'xDeviceCharacteristics :: C'sqlite3_io_methods -> FunPtr (Ptr C'sqlite3_file -> IO CInt)
c'sqlite3_io_methods'xShmMap :: C'sqlite3_io_methods -> FunPtr (Ptr C'sqlite3_file -> CInt -> CInt -> CInt -> Ptr (Ptr ()) -> IO CInt)
c'sqlite3_io_methods'xShmLock :: C'sqlite3_io_methods -> FunPtr (Ptr C'sqlite3_file -> CInt -> CInt -> CInt -> IO CInt)
c'sqlite3_io_methods'xShmBarrier :: C'sqlite3_io_methods -> FunPtr (Ptr C'sqlite3_file -> IO ())
c'sqlite3_io_methods'xShmUnmap :: C'sqlite3_io_methods -> FunPtr (Ptr C'sqlite3_file -> CInt -> IO CInt)
c'sqlite3_io_methods'xFetch :: C'sqlite3_io_methods -> FunPtr (Ptr C'sqlite3_file -> C'sqlite3_int64 -> CInt -> Ptr (Ptr ()) -> IO CInt)
c'sqlite3_io_methods'xUnfetch :: C'sqlite3_io_methods -> FunPtr (Ptr C'sqlite3_file -> C'sqlite3_int64 -> Ptr () -> IO CInt)
data C'sqlite3_mem_methods
C'sqlite3_mem_methods :: FunPtr (CInt -> IO (Ptr ())) -> FunPtr (Ptr () -> IO ()) -> FunPtr (Ptr () -> CInt -> IO (Ptr ())) -> FunPtr (Ptr () -> IO CInt) -> FunPtr (CInt -> IO CInt) -> FunPtr (Ptr () -> IO CInt) -> FunPtr (Ptr () -> IO ()) -> Ptr () -> C'sqlite3_mem_methods
c'sqlite3_mem_methods'xMalloc :: C'sqlite3_mem_methods -> FunPtr (CInt -> IO (Ptr ()))
c'sqlite3_mem_methods'xFree :: C'sqlite3_mem_methods -> FunPtr (Ptr () -> IO ())
c'sqlite3_mem_methods'xRealloc :: C'sqlite3_mem_methods -> FunPtr (Ptr () -> CInt -> IO (Ptr ()))
c'sqlite3_mem_methods'xSize :: C'sqlite3_mem_methods -> FunPtr (Ptr () -> IO CInt)
c'sqlite3_mem_methods'xRoundup :: C'sqlite3_mem_methods -> FunPtr (CInt -> IO CInt)
c'sqlite3_mem_methods'xInit :: C'sqlite3_mem_methods -> FunPtr (Ptr () -> IO CInt)
c'sqlite3_mem_methods'xShutdown :: C'sqlite3_mem_methods -> FunPtr (Ptr () -> IO ())
c'sqlite3_mem_methods'pAppData :: C'sqlite3_mem_methods -> Ptr ()
data C'sqlite3_mutex
C'sqlite3_mutex :: C'sqlite3_mutex
p'sqlite3_io_methods'iVersion :: Ptr (C'sqlite3_io_methods) -> Ptr (CInt)
p'sqlite3_mem_methods'xMalloc :: Ptr (C'sqlite3_mem_methods) -> Ptr (FunPtr (CInt -> IO (Ptr ())))
p'sqlite3_mem_methods'xFree :: Ptr (C'sqlite3_mem_methods) -> Ptr (FunPtr (Ptr () -> IO ()))
p'sqlite3_io_methods'xClose :: Ptr (C'sqlite3_io_methods) -> Ptr (FunPtr (Ptr C'sqlite3_file -> IO CInt))
data C'sqlite3_mutex_methods
C'sqlite3_mutex_methods :: FunPtr (IO CInt) -> FunPtr (IO CInt) -> FunPtr (CInt -> IO (Ptr C'sqlite3_mutex)) -> FunPtr (Ptr C'sqlite3_mutex -> IO ()) -> FunPtr (Ptr C'sqlite3_mutex -> IO ()) -> FunPtr (Ptr C'sqlite3_mutex -> IO CInt) -> FunPtr (Ptr C'sqlite3_mutex -> IO ()) -> FunPtr (Ptr C'sqlite3_mutex -> IO CInt) -> FunPtr (Ptr C'sqlite3_mutex -> IO CInt) -> C'sqlite3_mutex_methods
c'sqlite3_mutex_methods'xMutexInit :: C'sqlite3_mutex_methods -> FunPtr (IO CInt)
c'sqlite3_mutex_methods'xMutexEnd :: C'sqlite3_mutex_methods -> FunPtr (IO CInt)
c'sqlite3_mutex_methods'xMutexAlloc :: C'sqlite3_mutex_methods -> FunPtr (CInt -> IO (Ptr C'sqlite3_mutex))
c'sqlite3_mutex_methods'xMutexFree :: C'sqlite3_mutex_methods -> FunPtr (Ptr C'sqlite3_mutex -> IO ())
c'sqlite3_mutex_methods'xMutexEnter :: C'sqlite3_mutex_methods -> FunPtr (Ptr C'sqlite3_mutex -> IO ())
c'sqlite3_mutex_methods'xMutexTry :: C'sqlite3_mutex_methods -> FunPtr (Ptr C'sqlite3_mutex -> IO CInt)
c'sqlite3_mutex_methods'xMutexLeave :: C'sqlite3_mutex_methods -> FunPtr (Ptr C'sqlite3_mutex -> IO ())
c'sqlite3_mutex_methods'xMutexHeld :: C'sqlite3_mutex_methods -> FunPtr (Ptr C'sqlite3_mutex -> IO CInt)
c'sqlite3_mutex_methods'xMutexNotheld :: C'sqlite3_mutex_methods -> FunPtr (Ptr C'sqlite3_mutex -> IO CInt)
p'sqlite3_mem_methods'xRealloc :: Ptr (C'sqlite3_mem_methods) -> Ptr (FunPtr (Ptr () -> CInt -> IO (Ptr ())))
p'sqlite3_io_methods'xRead :: Ptr (C'sqlite3_io_methods) -> Ptr (FunPtr (Ptr C'sqlite3_file -> Ptr () -> CInt -> C'sqlite3_int64 -> IO CInt))
data C'sqlite3_pcache
C'sqlite3_pcache :: C'sqlite3_pcache
p'sqlite3_mem_methods'xSize :: Ptr (C'sqlite3_mem_methods) -> Ptr (FunPtr (Ptr () -> IO CInt))
p'sqlite3_io_methods'xWrite :: Ptr (C'sqlite3_io_methods) -> Ptr (FunPtr (Ptr C'sqlite3_file -> Ptr () -> CInt -> C'sqlite3_int64 -> IO ()))
p'sqlite3_mem_methods'xRoundup :: Ptr (C'sqlite3_mem_methods) -> Ptr (FunPtr (CInt -> IO CInt))
p'sqlite3_io_methods'xTruncate :: Ptr (C'sqlite3_io_methods) -> Ptr (FunPtr (Ptr C'sqlite3_file -> C'sqlite3_int64 -> IO CInt))
p'sqlite3_mem_methods'xInit :: Ptr (C'sqlite3_mem_methods) -> Ptr (FunPtr (Ptr () -> IO CInt))
p'sqlite3_io_methods'xSync :: Ptr (C'sqlite3_io_methods) -> Ptr (FunPtr (Ptr C'sqlite3_file -> CInt -> IO CInt))
data C'sqlite3_pcache_page
C'sqlite3_pcache_page :: Ptr () -> Ptr () -> C'sqlite3_pcache_page
c'sqlite3_pcache_page'pBuf :: C'sqlite3_pcache_page -> Ptr ()
c'sqlite3_pcache_page'pExtra :: C'sqlite3_pcache_page -> Ptr ()
p'sqlite3_mem_methods'xShutdown :: Ptr (C'sqlite3_mem_methods) -> Ptr (FunPtr (Ptr () -> IO ()))
p'sqlite3_io_methods'xFileSize :: Ptr (C'sqlite3_io_methods) -> Ptr (FunPtr (Ptr C'sqlite3_file -> Ptr C'sqlite3_int64 -> IO CInt))
p'sqlite3_temp_directory :: Ptr (CString)
type C'sqlite3_syscall_ptr = FunPtr (IO ())
p'sqlite3_mem_methods'pAppData :: Ptr (C'sqlite3_mem_methods) -> Ptr (Ptr ())
p'sqlite3_io_methods'xLock :: Ptr (C'sqlite3_io_methods) -> Ptr (FunPtr (Ptr C'sqlite3_file -> CInt -> IO CInt))
p'sqlite3_pcache_page'pBuf :: Ptr (C'sqlite3_pcache_page) -> Ptr (Ptr ())
p'sqlite3_mutex_methods'xMutexInit :: Ptr (C'sqlite3_mutex_methods) -> Ptr (FunPtr (IO CInt))
mk'sqlite3_syscall_ptr :: (IO ()) -> IO C'sqlite3_syscall_ptr
p'sqlite3_io_methods'xUnlock :: Ptr (C'sqlite3_io_methods) -> Ptr (FunPtr (Ptr C'sqlite3_file -> CInt -> IO CInt))
p'sqlite3_pcache_page'pExtra :: Ptr (C'sqlite3_pcache_page) -> Ptr (Ptr ())
p'sqlite3_mutex_methods'xMutexEnd :: Ptr (C'sqlite3_mutex_methods) -> Ptr (FunPtr (IO CInt))
mK'sqlite3_syscall_ptr :: C'sqlite3_syscall_ptr -> (IO ())
p'sqlite3_io_methods'xCheckReservedLock :: Ptr (C'sqlite3_io_methods) -> Ptr (FunPtr (Ptr C'sqlite3_file -> Ptr CInt -> IO CInt))
p'sqlite3_mutex_methods'xMutexAlloc :: Ptr (C'sqlite3_mutex_methods) -> Ptr (FunPtr (CInt -> IO (Ptr C'sqlite3_mutex)))
p'sqlite3_io_methods'xFileControl :: Ptr (C'sqlite3_io_methods) -> Ptr (FunPtr (Ptr C'sqlite3_file -> CInt -> Ptr () -> IO CInt))
p'sqlite3_mutex_methods'xMutexFree :: Ptr (C'sqlite3_mutex_methods) -> Ptr (FunPtr (Ptr C'sqlite3_mutex -> IO ()))
p'sqlite3_io_methods'xSectorSize :: Ptr (C'sqlite3_io_methods) -> Ptr (FunPtr (Ptr C'sqlite3_file -> IO CInt))
p'sqlite3_mutex_methods'xMutexEnter :: Ptr (C'sqlite3_mutex_methods) -> Ptr (FunPtr (Ptr C'sqlite3_mutex -> IO ()))
p'sqlite3_io_methods'xDeviceCharacteristics :: Ptr (C'sqlite3_io_methods) -> Ptr (FunPtr (Ptr C'sqlite3_file -> IO CInt))
p'sqlite3_mutex_methods'xMutexTry :: Ptr (C'sqlite3_mutex_methods) -> Ptr (FunPtr (Ptr C'sqlite3_mutex -> IO CInt))
p'sqlite3_io_methods'xShmMap :: Ptr (C'sqlite3_io_methods) -> Ptr (FunPtr (Ptr C'sqlite3_file -> CInt -> CInt -> CInt -> Ptr (Ptr ()) -> IO CInt))
p'sqlite3_mutex_methods'xMutexLeave :: Ptr (C'sqlite3_mutex_methods) -> Ptr (FunPtr (Ptr C'sqlite3_mutex -> IO ()))
p'sqlite3_io_methods'xShmLock :: Ptr (C'sqlite3_io_methods) -> Ptr (FunPtr (Ptr C'sqlite3_file -> CInt -> CInt -> CInt -> IO CInt))
p'sqlite3_mutex_methods'xMutexHeld :: Ptr (C'sqlite3_mutex_methods) -> Ptr (FunPtr (Ptr C'sqlite3_mutex -> IO CInt))
p'sqlite3_io_methods'xShmBarrier :: Ptr (C'sqlite3_io_methods) -> Ptr (FunPtr (Ptr C'sqlite3_file -> IO ()))
p'sqlite3_mutex_methods'xMutexNotheld :: Ptr (C'sqlite3_mutex_methods) -> Ptr (FunPtr (Ptr C'sqlite3_mutex -> IO CInt))
p'sqlite3_io_methods'xShmUnmap :: Ptr (C'sqlite3_io_methods) -> Ptr (FunPtr (Ptr C'sqlite3_file -> CInt -> IO CInt))
p'sqlite3_io_methods'xFetch :: Ptr (C'sqlite3_io_methods) -> Ptr (FunPtr (Ptr C'sqlite3_file -> C'sqlite3_int64 -> CInt -> Ptr (Ptr ()) -> IO CInt))
p'sqlite3_io_methods'xUnfetch :: Ptr (C'sqlite3_io_methods) -> Ptr (FunPtr (Ptr C'sqlite3_file -> C'sqlite3_int64 -> Ptr () -> IO CInt))
data C'sqlite3_vfs
C'sqlite3_vfs :: CInt -> CInt -> CInt -> Ptr C'sqlite3_vfs -> CString -> Ptr () -> FunPtr (Ptr C'sqlite3_vfs -> CString -> Ptr C'sqlite3_file -> CInt -> Ptr CInt -> IO CInt) -> FunPtr (Ptr C'sqlite3_vfs -> CString -> CInt -> IO CInt) -> FunPtr (Ptr C'sqlite3_vfs -> CString -> CInt -> Ptr CInt -> IO CInt) -> FunPtr (Ptr C'sqlite3_vfs -> CString -> CInt -> CString -> IO CInt) -> FunPtr (Ptr C'sqlite3_vfs -> CString -> IO (Ptr ())) -> FunPtr (Ptr C'sqlite3_vfs -> CInt -> CString -> IO ()) -> FunPtr (Ptr C'sqlite3_vfs -> Ptr () -> CString -> IO (FunPtr (IO ()))) -> FunPtr (Ptr C'sqlite3_vfs -> Ptr () -> IO ()) -> FunPtr (Ptr C'sqlite3_vfs -> CInt -> CString -> IO CInt) -> FunPtr (Ptr C'sqlite3_vfs -> CInt -> IO CInt) -> FunPtr (Ptr C'sqlite3_vfs -> Ptr CDouble -> IO CInt) -> FunPtr (Ptr C'sqlite3_vfs -> CInt -> CString -> IO CInt) -> FunPtr (Ptr C'sqlite3_vfs -> Ptr C'sqlite3_int64 -> IO CInt) -> FunPtr (Ptr C'sqlite3_vfs -> CString -> C'sqlite3_syscall_ptr -> IO CInt) -> FunPtr (Ptr C'sqlite3_vfs -> CString -> IO C'sqlite3_syscall_ptr) -> FunPtr (Ptr C'sqlite3_vfs -> CString -> IO CString) -> C'sqlite3_vfs
c'sqlite3_vfs'iVersion :: C'sqlite3_vfs -> CInt
c'sqlite3_vfs'szOsFile :: C'sqlite3_vfs -> CInt
c'sqlite3_vfs'mxPathname :: C'sqlite3_vfs -> CInt
c'sqlite3_vfs'pNext :: C'sqlite3_vfs -> Ptr C'sqlite3_vfs
c'sqlite3_vfs'zName :: C'sqlite3_vfs -> CString
c'sqlite3_vfs'pAppData :: C'sqlite3_vfs -> Ptr ()
c'sqlite3_vfs'xOpen :: C'sqlite3_vfs -> FunPtr (Ptr C'sqlite3_vfs -> CString -> Ptr C'sqlite3_file -> CInt -> Ptr CInt -> IO CInt)
c'sqlite3_vfs'xDelete :: C'sqlite3_vfs -> FunPtr (Ptr C'sqlite3_vfs -> CString -> CInt -> IO CInt)
c'sqlite3_vfs'xAccess :: C'sqlite3_vfs -> FunPtr (Ptr C'sqlite3_vfs -> CString -> CInt -> Ptr CInt -> IO CInt)
c'sqlite3_vfs'xFullPathname :: C'sqlite3_vfs -> FunPtr (Ptr C'sqlite3_vfs -> CString -> CInt -> CString -> IO CInt)
c'sqlite3_vfs'xDlOpen :: C'sqlite3_vfs -> FunPtr (Ptr C'sqlite3_vfs -> CString -> IO (Ptr ()))
c'sqlite3_vfs'xDlError :: C'sqlite3_vfs -> FunPtr (Ptr C'sqlite3_vfs -> CInt -> CString -> IO ())
c'sqlite3_vfs'xDlSym :: C'sqlite3_vfs -> FunPtr (Ptr C'sqlite3_vfs -> Ptr () -> CString -> IO (FunPtr (IO ())))
c'sqlite3_vfs'xDlClose :: C'sqlite3_vfs -> FunPtr (Ptr C'sqlite3_vfs -> Ptr () -> IO ())
c'sqlite3_vfs'xRandomness :: C'sqlite3_vfs -> FunPtr (Ptr C'sqlite3_vfs -> CInt -> CString -> IO CInt)
c'sqlite3_vfs'xSleep :: C'sqlite3_vfs -> FunPtr (Ptr C'sqlite3_vfs -> CInt -> IO CInt)
c'sqlite3_vfs'xCurrentTime :: C'sqlite3_vfs -> FunPtr (Ptr C'sqlite3_vfs -> Ptr CDouble -> IO CInt)
c'sqlite3_vfs'xGetLastError :: C'sqlite3_vfs -> FunPtr (Ptr C'sqlite3_vfs -> CInt -> CString -> IO CInt)
c'sqlite3_vfs'xCurrentTimeInt64 :: C'sqlite3_vfs -> FunPtr (Ptr C'sqlite3_vfs -> Ptr C'sqlite3_int64 -> IO CInt)
c'sqlite3_vfs'xSetSystemCall :: C'sqlite3_vfs -> FunPtr (Ptr C'sqlite3_vfs -> CString -> C'sqlite3_syscall_ptr -> IO CInt)
c'sqlite3_vfs'xGetSystemCall :: C'sqlite3_vfs -> FunPtr (Ptr C'sqlite3_vfs -> CString -> IO C'sqlite3_syscall_ptr)
c'sqlite3_vfs'xNextSystemCall :: C'sqlite3_vfs -> FunPtr (Ptr C'sqlite3_vfs -> CString -> IO CString)
data C'sqlite3_vtab
C'sqlite3_vtab :: Ptr C'sqlite3_module -> CString -> C'sqlite3_vtab
c'sqlite3_vtab'pModule :: C'sqlite3_vtab -> Ptr C'sqlite3_module
c'sqlite3_vtab'zErrMsg :: C'sqlite3_vtab -> CString
c'sqlite3_aggregate_context :: Ptr C'sqlite3_context -> CInt -> IO (Ptr ())
p'sqlite3_aggregate_context :: FunPtr (Ptr C'sqlite3_context -> CInt -> IO (Ptr ()))
p'sqlite3_vtab'pModule :: Ptr (C'sqlite3_vtab) -> Ptr (Ptr C'sqlite3_module)
c'sqlite3_auto_extension :: FunPtr (IO ()) -> IO CInt
p'sqlite3_vtab'zErrMsg :: Ptr (C'sqlite3_vtab) -> Ptr (CString)
c'sqlite3_bind_parameter_count :: Ptr C'sqlite3_stmt -> IO CInt
p'sqlite3_auto_extension :: FunPtr (FunPtr (IO ()) -> IO CInt)
p'sqlite3_bind_parameter_count :: FunPtr (Ptr C'sqlite3_stmt -> IO CInt)
c'sqlite3_bind_parameter_index :: Ptr C'sqlite3_stmt -> CString -> IO CInt
p'sqlite3_bind_parameter_index :: FunPtr (Ptr C'sqlite3_stmt -> CString -> IO CInt)
c'sqlite3_bind_parameter_name :: Ptr C'sqlite3_stmt -> CInt -> IO CString
p'sqlite3_bind_parameter_name :: FunPtr (Ptr C'sqlite3_stmt -> CInt -> IO CString)
c'sqlite3_blob_bytes :: Ptr C'sqlite3_blob -> IO CInt
c'sqlite3_blob_close :: Ptr C'sqlite3_blob -> IO CInt
p'sqlite3_blob_bytes :: FunPtr (Ptr C'sqlite3_blob -> IO CInt)
p'sqlite3_blob_close :: FunPtr (Ptr C'sqlite3_blob -> IO CInt)
c'sqlite3_blob_open :: Ptr C'sqlite3 -> CString -> CString -> CString -> C'sqlite3_int64 -> CInt -> Ptr (Ptr C'sqlite3_blob) -> IO CInt
p'sqlite3_vfs'iVersion :: Ptr (C'sqlite3_vfs) -> Ptr (CInt)
p'sqlite3_blob_open :: FunPtr (Ptr C'sqlite3 -> CString -> CString -> CString -> C'sqlite3_int64 -> CInt -> Ptr (Ptr C'sqlite3_blob) -> IO CInt)
p'sqlite3_vfs'szOsFile :: Ptr (C'sqlite3_vfs) -> Ptr (CInt)
c'sqlite3_blob_read :: Ptr C'sqlite3_blob -> Ptr () -> CInt -> CInt -> IO CInt
p'sqlite3_vfs'mxPathname :: Ptr (C'sqlite3_vfs) -> Ptr (CInt)
p'sqlite3_blob_read :: FunPtr (Ptr C'sqlite3_blob -> Ptr () -> CInt -> CInt -> IO CInt)
p'sqlite3_vfs'pNext :: Ptr (C'sqlite3_vfs) -> Ptr (Ptr C'sqlite3_vfs)
c'sqlite3_blob_reopen :: Ptr C'sqlite3_blob -> C'sqlite3_int64 -> IO CInt
p'sqlite3_vfs'zName :: Ptr (C'sqlite3_vfs) -> Ptr (CString)
c'sqlite3_blob_write :: Ptr C'sqlite3_blob -> Ptr () -> CInt -> CInt -> IO CInt
p'sqlite3_blob_reopen :: FunPtr (Ptr C'sqlite3_blob -> C'sqlite3_int64 -> IO CInt)
p'sqlite3_vfs'pAppData :: Ptr (C'sqlite3_vfs) -> Ptr (Ptr ())
p'sqlite3_blob_write :: FunPtr (Ptr C'sqlite3_blob -> Ptr () -> CInt -> CInt -> IO CInt)
c'sqlite3_busy_handler :: Ptr C'sqlite3 -> FunPtr (Ptr () -> CInt -> IO CInt) -> Ptr () -> IO CInt
p'sqlite3_vfs'xOpen :: Ptr (C'sqlite3_vfs) -> Ptr (FunPtr (Ptr C'sqlite3_vfs -> CString -> Ptr C'sqlite3_file -> CInt -> Ptr CInt -> IO CInt))
p'sqlite3_busy_handler :: FunPtr (Ptr C'sqlite3 -> FunPtr (Ptr () -> CInt -> IO CInt) -> Ptr () -> IO CInt)
p'sqlite3_vfs'xDelete :: Ptr (C'sqlite3_vfs) -> Ptr (FunPtr (Ptr C'sqlite3_vfs -> CString -> CInt -> IO CInt))
c'sqlite3_busy_timeout :: Ptr C'sqlite3 -> CInt -> IO CInt
p'sqlite3_vfs'xAccess :: Ptr (C'sqlite3_vfs) -> Ptr (FunPtr (Ptr C'sqlite3_vfs -> CString -> CInt -> Ptr CInt -> IO CInt))
c'sqlite3_changes :: Ptr C'sqlite3 -> IO CInt
p'sqlite3_busy_timeout :: FunPtr (Ptr C'sqlite3 -> CInt -> IO CInt)
p'sqlite3_vfs'xFullPathname :: Ptr (C'sqlite3_vfs) -> Ptr (FunPtr (Ptr C'sqlite3_vfs -> CString -> CInt -> CString -> IO CInt))
c'sqlite3_clear_bindings :: Ptr C'sqlite3_stmt -> IO CInt
p'sqlite3_changes :: FunPtr (Ptr C'sqlite3 -> IO CInt)
p'sqlite3_vfs'xDlOpen :: Ptr (C'sqlite3_vfs) -> Ptr (FunPtr (Ptr C'sqlite3_vfs -> CString -> IO (Ptr ())))
c'sqlite3_column_count :: Ptr C'sqlite3_stmt -> IO CInt
p'sqlite3_clear_bindings :: FunPtr (Ptr C'sqlite3_stmt -> IO CInt)
p'sqlite3_vfs'xDlError :: Ptr (C'sqlite3_vfs) -> Ptr (FunPtr (Ptr C'sqlite3_vfs -> CInt -> CString -> IO ()))
p'sqlite3_column_count :: FunPtr (Ptr C'sqlite3_stmt -> IO CInt)
c'sqlite3_context_db_handle :: Ptr C'sqlite3_context -> IO (Ptr C'sqlite3)
p'sqlite3_vfs'xDlSym :: Ptr (C'sqlite3_vfs) -> Ptr (FunPtr (Ptr C'sqlite3_vfs -> Ptr () -> CString -> IO (FunPtr (IO ()))))
p'sqlite3_context_db_handle :: FunPtr (Ptr C'sqlite3_context -> IO (Ptr C'sqlite3))
c'sqlite3_data_count :: Ptr C'sqlite3_stmt -> IO CInt
p'sqlite3_vfs'xDlClose :: Ptr (C'sqlite3_vfs) -> Ptr (FunPtr (Ptr C'sqlite3_vfs -> Ptr () -> IO ()))
c'sqlite3_db_filename :: Ptr C'sqlite3 -> CString -> IO CString
p'sqlite3_data_count :: FunPtr (Ptr C'sqlite3_stmt -> IO CInt)
p'sqlite3_vfs'xRandomness :: Ptr (C'sqlite3_vfs) -> Ptr (FunPtr (Ptr C'sqlite3_vfs -> CInt -> CString -> IO CInt))
c'sqlite3_db_handle :: Ptr C'sqlite3_stmt -> IO (Ptr C'sqlite3)
p'sqlite3_db_filename :: FunPtr (Ptr C'sqlite3 -> CString -> IO CString)
p'sqlite3_vfs'xSleep :: Ptr (C'sqlite3_vfs) -> Ptr (FunPtr (Ptr C'sqlite3_vfs -> CInt -> IO CInt))
c'sqlite3_db_mutex :: Ptr C'sqlite3 -> IO (Ptr C'sqlite3_mutex)
p'sqlite3_db_handle :: FunPtr (Ptr C'sqlite3_stmt -> IO (Ptr C'sqlite3))
p'sqlite3_vfs'xCurrentTime :: Ptr (C'sqlite3_vfs) -> Ptr (FunPtr (Ptr C'sqlite3_vfs -> Ptr CDouble -> IO CInt))
c'sqlite3_db_readonly :: Ptr C'sqlite3 -> CString -> IO CInt
p'sqlite3_db_mutex :: FunPtr (Ptr C'sqlite3 -> IO (Ptr C'sqlite3_mutex))
p'sqlite3_vfs'xGetLastError :: Ptr (C'sqlite3_vfs) -> Ptr (FunPtr (Ptr C'sqlite3_vfs -> CInt -> CString -> IO CInt))
c'sqlite3_db_release_memory :: Ptr C'sqlite3 -> IO CInt
p'sqlite3_db_readonly :: FunPtr (Ptr C'sqlite3 -> CString -> IO CInt)
p'sqlite3_vfs'xCurrentTimeInt64 :: Ptr (C'sqlite3_vfs) -> Ptr (FunPtr (Ptr C'sqlite3_vfs -> Ptr C'sqlite3_int64 -> IO CInt))
p'sqlite3_db_release_memory :: FunPtr (Ptr C'sqlite3 -> IO CInt)
c'sqlite3_db_status :: Ptr C'sqlite3 -> CInt -> Ptr CInt -> Ptr CInt -> CInt -> IO CInt
p'sqlite3_vfs'xSetSystemCall :: Ptr (C'sqlite3_vfs) -> Ptr (FunPtr (Ptr C'sqlite3_vfs -> CString -> C'sqlite3_syscall_ptr -> IO CInt))
p'sqlite3_db_status :: FunPtr (Ptr C'sqlite3 -> CInt -> Ptr CInt -> Ptr CInt -> CInt -> IO CInt)
p'sqlite3_vfs'xGetSystemCall :: Ptr (C'sqlite3_vfs) -> Ptr (FunPtr (Ptr C'sqlite3_vfs -> CString -> IO C'sqlite3_syscall_ptr))
c'sqlite3_declare_vtab :: Ptr C'sqlite3 -> CString -> IO CInt
p'sqlite3_vfs'xNextSystemCall :: Ptr (C'sqlite3_vfs) -> Ptr (FunPtr (Ptr C'sqlite3_vfs -> CString -> IO CString))
c'sqlite3_enable_load_extension :: Ptr C'sqlite3 -> CInt -> IO CInt
p'sqlite3_declare_vtab :: FunPtr (Ptr C'sqlite3 -> CString -> IO CInt)
c'sqlite3_enable_shared_cache :: CInt -> IO CInt
p'sqlite3_enable_load_extension :: FunPtr (Ptr C'sqlite3 -> CInt -> IO CInt)
p'sqlite3_enable_shared_cache :: FunPtr (CInt -> IO CInt)
c'sqlite3_exec :: Ptr C'sqlite3 -> CString -> FunPtr (Ptr () -> CInt -> Ptr CString -> Ptr CString -> IO CInt) -> Ptr () -> Ptr CString -> IO CInt
p'sqlite3_exec :: FunPtr (Ptr C'sqlite3 -> CString -> FunPtr (Ptr () -> CInt -> Ptr CString -> Ptr CString -> IO CInt) -> Ptr () -> Ptr CString -> IO CInt)
c'sqlite3_extended_result_codes :: Ptr C'sqlite3 -> CInt -> IO CInt
p'sqlite3_extended_result_codes :: FunPtr (Ptr C'sqlite3 -> CInt -> IO CInt)
c'sqlite3_file_control :: Ptr C'sqlite3 -> CString -> CInt -> Ptr () -> IO CInt
p'sqlite3_file_control :: FunPtr (Ptr C'sqlite3 -> CString -> CInt -> Ptr () -> IO CInt)
c'sqlite3_finalize :: Ptr C'sqlite3_stmt -> IO CInt
c'sqlite3_interrupt :: Ptr C'sqlite3 -> IO ()
p'sqlite3_finalize :: FunPtr (Ptr C'sqlite3_stmt -> IO CInt)
p'sqlite3_interrupt :: FunPtr (Ptr C'sqlite3 -> IO ())
c'sqlite3_last_insert_rowid :: Ptr C'sqlite3 -> IO C'sqlite3_int64
c'sqlite3_limit :: Ptr C'sqlite3 -> CInt -> CInt -> IO CInt
p'sqlite3_last_insert_rowid :: FunPtr (Ptr C'sqlite3 -> IO C'sqlite3_int64)
p'sqlite3_limit :: FunPtr (Ptr C'sqlite3 -> CInt -> CInt -> IO CInt)
c'sqlite3_load_extension :: Ptr C'sqlite3 -> CString -> CString -> Ptr CString -> IO CInt
p'sqlite3_load_extension :: FunPtr (Ptr C'sqlite3 -> CString -> CString -> Ptr CString -> IO CInt)
c'sqlite3_next_stmt :: Ptr C'sqlite3 -> Ptr C'sqlite3_stmt -> IO (Ptr C'sqlite3_stmt)
p'sqlite3_next_stmt :: FunPtr (Ptr C'sqlite3 -> Ptr C'sqlite3_stmt -> IO (Ptr C'sqlite3_stmt))
c'sqlite3_overload_function :: Ptr C'sqlite3 -> CString -> CInt -> IO CInt
p'sqlite3_overload_function :: FunPtr (Ptr C'sqlite3 -> CString -> CInt -> IO CInt)
c'sqlite3_progress_handler :: Ptr C'sqlite3 -> CInt -> FunPtr (Ptr () -> IO CInt) -> Ptr () -> IO ()
p'sqlite3_progress_handler :: FunPtr (Ptr C'sqlite3 -> CInt -> FunPtr (Ptr () -> IO CInt) -> Ptr () -> IO ())
c'sqlite3_randomness :: CInt -> Ptr () -> IO ()
c'sqlite3_release_memory :: CInt -> IO CInt
p'sqlite3_randomness :: FunPtr (CInt -> Ptr () -> IO ())
p'sqlite3_release_memory :: FunPtr (CInt -> IO CInt)
c'sqlite3_reset :: Ptr C'sqlite3_stmt -> IO CInt
c'sqlite3_reset_auto_extension :: IO ()
p'sqlite3_reset :: FunPtr (Ptr C'sqlite3_stmt -> IO CInt)
p'sqlite3_reset_auto_extension :: FunPtr (IO ())
c'sqlite3_set_authorizer :: Ptr C'sqlite3 -> FunPtr (Ptr () -> CInt -> CString -> CString -> CString -> CString -> IO CInt) -> Ptr () -> IO CInt
p'sqlite3_set_authorizer :: FunPtr (Ptr C'sqlite3 -> FunPtr (Ptr () -> CInt -> CString -> CString -> CString -> CString -> IO CInt) -> Ptr () -> IO CInt)
c'sqlite3_sleep :: CInt -> IO CInt
p'sqlite3_sleep :: FunPtr (CInt -> IO CInt)
c'sqlite3_soft_heap_limit64 :: C'sqlite3_int64 -> IO C'sqlite3_int64
c'sqlite3_sql :: Ptr C'sqlite3_stmt -> IO CString
p'sqlite3_soft_heap_limit64 :: FunPtr (C'sqlite3_int64 -> IO C'sqlite3_int64)
p'sqlite3_sql :: FunPtr (Ptr C'sqlite3_stmt -> IO CString)
c'sqlite3_status :: CInt -> Ptr CInt -> Ptr CInt -> CInt -> IO CInt
c'sqlite3_step :: Ptr C'sqlite3_stmt -> IO CInt
p'sqlite3_status :: FunPtr (CInt -> Ptr CInt -> Ptr CInt -> CInt -> IO CInt)
c'sqlite3_stmt_busy :: Ptr C'sqlite3_stmt -> IO CInt
p'sqlite3_step :: FunPtr (Ptr C'sqlite3_stmt -> IO CInt)
c'sqlite3_stmt_readonly :: Ptr C'sqlite3_stmt -> IO CInt
p'sqlite3_stmt_busy :: FunPtr (Ptr C'sqlite3_stmt -> IO CInt)
p'sqlite3_stmt_readonly :: FunPtr (Ptr C'sqlite3_stmt -> IO CInt)
c'sqlite3_stmt_status :: Ptr C'sqlite3_stmt -> CInt -> CInt -> IO CInt
c'sqlite3_strglob :: CString -> CString -> IO CInt
p'sqlite3_stmt_status :: FunPtr (Ptr C'sqlite3_stmt -> CInt -> CInt -> IO CInt)
p'sqlite3_strglob :: FunPtr (CString -> CString -> IO CInt)
c'sqlite3_table_column_metadata :: Ptr C'sqlite3 -> CString -> CString -> CString -> Ptr CString -> Ptr CString -> Ptr CInt -> Ptr CInt -> Ptr CInt -> IO CInt
p'sqlite3_table_column_metadata :: FunPtr (Ptr C'sqlite3 -> CString -> CString -> CString -> Ptr CString -> Ptr CString -> Ptr CInt -> Ptr CInt -> Ptr CInt -> IO CInt)
c'sqlite3_threadsafe :: IO CInt
p'sqlite3_threadsafe :: FunPtr (IO CInt)
c'sqlite3_total_changes :: Ptr C'sqlite3 -> IO CInt
p'sqlite3_total_changes :: FunPtr (Ptr C'sqlite3 -> IO CInt)
c'sqlite3_unlock_notify :: Ptr C'sqlite3 -> FunPtr (Ptr (Ptr ()) -> CInt -> IO ()) -> Ptr () -> IO CInt
p'sqlite3_unlock_notify :: FunPtr (Ptr C'sqlite3 -> FunPtr (Ptr (Ptr ()) -> CInt -> IO ()) -> Ptr () -> IO CInt)
c'sqlite3_update_hook :: Ptr C'sqlite3 -> FunPtr (Ptr () -> CInt -> CString -> CString -> C'sqlite3_int64 -> IO ()) -> Ptr () -> IO (Ptr ())
p'sqlite3_update_hook :: FunPtr (Ptr C'sqlite3 -> FunPtr (Ptr () -> CInt -> CString -> CString -> C'sqlite3_int64 -> IO ()) -> Ptr () -> IO (Ptr ()))
c'sqlite3_user_data :: Ptr C'sqlite3_context -> IO (Ptr ())
c'sqlite3_vtab_on_conflict :: Ptr C'sqlite3 -> IO CInt
p'sqlite3_user_data :: FunPtr (Ptr C'sqlite3_context -> IO (Ptr ()))
c'sqlite3_wal_autocheckpoint :: Ptr C'sqlite3 -> CInt -> IO CInt
p'sqlite3_vtab_on_conflict :: FunPtr (Ptr C'sqlite3 -> IO CInt)
c'sqlite3_wal_checkpoint :: Ptr C'sqlite3 -> CString -> IO CInt
p'sqlite3_wal_autocheckpoint :: FunPtr (Ptr C'sqlite3 -> CInt -> IO CInt)
p'sqlite3_wal_checkpoint :: FunPtr (Ptr C'sqlite3 -> CString -> IO CInt)
c'sqlite3_wal_checkpoint_v2 :: Ptr C'sqlite3 -> CString -> CInt -> Ptr CInt -> Ptr CInt -> IO CInt
p'sqlite3_wal_checkpoint_v2 :: FunPtr (Ptr C'sqlite3 -> CString -> CInt -> Ptr CInt -> Ptr CInt -> IO CInt)
c'sqlite3_wal_hook :: Ptr C'sqlite3 -> FunPtr (Ptr () -> Ptr C'sqlite3 -> CString -> CInt -> IO CInt) -> Ptr () -> IO (Ptr ())
p'sqlite3_wal_hook :: FunPtr (Ptr C'sqlite3 -> FunPtr (Ptr () -> Ptr C'sqlite3 -> CString -> CInt -> IO CInt) -> Ptr () -> IO (Ptr ()))
c'SQLITE_OK :: Num a => a
c'SQLITE_ERROR :: Num a => a
c'SQLITE_INTERNAL :: Num a => a
c'SQLITE_PERM :: Num a => a
c'SQLITE_ABORT :: Num a => a
c'SQLITE_BUSY :: Num a => a
c'SQLITE_LOCKED :: Num a => a
c'SQLITE_NOMEM :: Num a => a
c'SQLITE_READONLY :: Num a => a
c'SQLITE_INTERRUPT :: Num a => a
c'SQLITE_IOERR :: Num a => a
c'SQLITE_CORRUPT :: Num a => a
c'SQLITE_NOTFOUND :: Num a => a
c'SQLITE_FULL :: Num a => a
c'SQLITE_CANTOPEN :: Num a => a
c'SQLITE_PROTOCOL :: Num a => a
c'SQLITE_EMPTY :: Num a => a
c'SQLITE_SCHEMA :: Num a => a
c'SQLITE_TOOBIG :: Num a => a
c'SQLITE_CONSTRAINT :: Num a => a
c'SQLITE_MISMATCH :: Num a => a
c'SQLITE_MISUSE :: Num a => a
c'SQLITE_NOLFS :: Num a => a
c'SQLITE_AUTH :: Num a => a
c'SQLITE_FORMAT :: Num a => a
c'SQLITE_RANGE :: Num a => a
c'SQLITE_NOTADB :: Num a => a
c'SQLITE_NOTICE :: Num a => a
c'SQLITE_WARNING :: Num a => a
c'SQLITE_ROW :: Num a => a
c'SQLITE_DONE :: Num a => a
c'SQLITE_IOERR_READ :: Num a => a
c'SQLITE_IOERR_SHORT_READ :: Num a => a
c'SQLITE_IOERR_WRITE :: Num a => a
c'SQLITE_IOERR_FSYNC :: Num a => a
c'SQLITE_IOERR_DIR_FSYNC :: Num a => a
c'SQLITE_IOERR_TRUNCATE :: Num a => a
c'SQLITE_IOERR_FSTAT :: Num a => a
c'SQLITE_IOERR_UNLOCK :: Num a => a
c'SQLITE_IOERR_RDLOCK :: Num a => a
c'SQLITE_IOERR_DELETE :: Num a => a
c'SQLITE_IOERR_BLOCKED :: Num a => a
c'SQLITE_IOERR_NOMEM :: Num a => a
c'SQLITE_IOERR_ACCESS :: Num a => a
c'SQLITE_IOERR_CHECKRESERVEDLOCK :: Num a => a
c'SQLITE_IOERR_LOCK :: Num a => a
c'SQLITE_IOERR_CLOSE :: Num a => a
c'SQLITE_IOERR_DIR_CLOSE :: Num a => a
c'SQLITE_IOERR_SHMOPEN :: Num a => a
c'SQLITE_IOERR_SHMSIZE :: Num a => a
c'SQLITE_IOERR_SHMLOCK :: Num a => a
c'SQLITE_IOERR_SHMMAP :: Num a => a
c'SQLITE_IOERR_SEEK :: Num a => a
c'SQLITE_IOERR_DELETE_NOENT :: Num a => a
c'SQLITE_IOERR_MMAP :: Num a => a
c'SQLITE_LOCKED_SHAREDCACHE :: Num a => a
c'SQLITE_BUSY_RECOVERY :: Num a => a
c'SQLITE_CANTOPEN_NOTEMPDIR :: Num a => a
c'SQLITE_CANTOPEN_ISDIR :: Num a => a
c'SQLITE_CANTOPEN_FULLPATH :: Num a => a
c'SQLITE_CORRUPT_VTAB :: Num a => a
c'SQLITE_READONLY_RECOVERY :: Num a => a
c'SQLITE_READONLY_CANTLOCK :: Num a => a
c'SQLITE_READONLY_ROLLBACK :: Num a => a
c'SQLITE_ABORT_ROLLBACK :: Num a => a
c'SQLITE_CONSTRAINT_CHECK :: Num a => a
c'SQLITE_CONSTRAINT_COMMITHOOK :: Num a => a
c'SQLITE_CONSTRAINT_FOREIGNKEY :: Num a => a
c'SQLITE_CONSTRAINT_FUNCTION :: Num a => a
c'SQLITE_CONSTRAINT_NOTNULL :: Num a => a
c'SQLITE_CONSTRAINT_PRIMARYKEY :: Num a => a
c'SQLITE_CONSTRAINT_TRIGGER :: Num a => a
c'SQLITE_CONSTRAINT_UNIQUE :: Num a => a
c'SQLITE_CONSTRAINT_VTAB :: Num a => a
c'SQLITE_NOTICE_RECOVER_WAL :: Num a => a
c'SQLITE_NOTICE_RECOVER_ROLLBACK :: Num a => a
c'SQLITE_ACCESS_EXISTS :: Num a => a
c'SQLITE_ACCESS_READWRITE :: Num a => a
c'SQLITE_ACCESS_READ :: Num a => a
c'SQLITE_CREATE_INDEX :: Num a => a
c'SQLITE_CREATE_TABLE :: Num a => a
c'SQLITE_CREATE_TEMP_INDEX :: Num a => a
c'SQLITE_CREATE_TEMP_TABLE :: Num a => a
c'SQLITE_CREATE_TEMP_TRIGGER :: Num a => a
c'SQLITE_CREATE_TEMP_VIEW :: Num a => a
c'SQLITE_CREATE_TRIGGER :: Num a => a
c'SQLITE_CREATE_VIEW :: Num a => a
c'SQLITE_DELETE :: Num a => a
c'SQLITE_DROP_INDEX :: Num a => a
c'SQLITE_DROP_TABLE :: Num a => a
c'SQLITE_DROP_TEMP_INDEX :: Num a => a
c'SQLITE_DROP_TEMP_TABLE :: Num a => a
c'SQLITE_DROP_TEMP_TRIGGER :: Num a => a
c'SQLITE_DROP_TEMP_VIEW :: Num a => a
c'SQLITE_DROP_TRIGGER :: Num a => a
c'SQLITE_DROP_VIEW :: Num a => a
c'SQLITE_INSERT :: Num a => a
c'SQLITE_PRAGMA :: Num a => a
c'SQLITE_READ :: Num a => a
c'SQLITE_SELECT :: Num a => a
c'SQLITE_TRANSACTION :: Num a => a
c'SQLITE_UPDATE :: Num a => a
c'SQLITE_ATTACH :: Num a => a
c'SQLITE_DETACH :: Num a => a
c'SQLITE_ALTER_TABLE :: Num a => a
c'SQLITE_REINDEX :: Num a => a
c'SQLITE_ANALYZE :: Num a => a
c'SQLITE_CREATE_VTABLE :: Num a => a
c'SQLITE_DROP_VTABLE :: Num a => a
c'SQLITE_FUNCTION :: Num a => a
c'SQLITE_SAVEPOINT :: Num a => a
c'SQLITE_COPY :: Num a => a
c'SQLITE_UTF8 :: Num a => a
c'SQLITE_UTF16LE :: Num a => a
c'SQLITE_UTF16BE :: Num a => a
c'SQLITE_UTF16 :: Num a => a
c'SQLITE_ANY :: Num a => a
c'SQLITE_UTF16_ALIGNED :: Num a => a
c'SQLITE_INTEGER :: Num a => a
c'SQLITE_FLOAT :: Num a => a
c'SQLITE_BLOB :: Num a => a
c'SQLITE_NULL :: Num a => a
c'SQLITE_TEXT :: Num a => a
c'SQLITE3_TEXT :: Num a => a
c'SQLITE_CHECKPOINT_PASSIVE :: Num a => a
c'SQLITE_CHECKPOINT_FULL :: Num a => a
c'SQLITE_CHECKPOINT_RESTART :: Num a => a
c'SQLITE_CONFIG_SINGLETHREAD :: Num a => a
c'SQLITE_CONFIG_MULTITHREAD :: Num a => a
c'SQLITE_CONFIG_SERIALIZED :: Num a => a
c'SQLITE_CONFIG_MALLOC :: Num a => a
c'SQLITE_CONFIG_GETMALLOC :: Num a => a
c'SQLITE_CONFIG_SCRATCH :: Num a => a
c'SQLITE_CONFIG_PAGECACHE :: Num a => a
c'SQLITE_CONFIG_HEAP :: Num a => a
c'SQLITE_CONFIG_MEMSTATUS :: Num a => a
c'SQLITE_CONFIG_MUTEX :: Num a => a
c'SQLITE_CONFIG_GETMUTEX :: Num a => a
c'SQLITE_CONFIG_LOOKASIDE :: Num a => a
c'SQLITE_CONFIG_PCACHE :: Num a => a
c'SQLITE_CONFIG_GETPCACHE :: Num a => a
c'SQLITE_CONFIG_LOG :: Num a => a
c'SQLITE_CONFIG_URI :: Num a => a
c'SQLITE_CONFIG_PCACHE2 :: Num a => a
c'SQLITE_CONFIG_GETPCACHE2 :: Num a => a
c'SQLITE_CONFIG_COVERING_INDEX_SCAN :: Num a => a
c'SQLITE_CONFIG_SQLLOG :: Num a => a
c'SQLITE_CONFIG_MMAP_SIZE :: Num a => a
c'SQLITE_DBCONFIG_LOOKASIDE :: Num a => a
c'SQLITE_DBCONFIG_ENABLE_FKEY :: Num a => a
c'SQLITE_DBCONFIG_ENABLE_TRIGGER :: Num a => a
c'SQLITE_DENY :: Num a => a
c'SQLITE_IGNORE :: Num a => a
c'SQLITE_ROLLBACK :: Num a => a
c'SQLITE_FAIL :: Num a => a
c'SQLITE_REPLACE :: Num a => a
c'SQLITE_FCNTL_LOCKSTATE :: Num a => a
c'SQLITE_GET_LOCKPROXYFILE :: Num a => a
c'SQLITE_SET_LOCKPROXYFILE :: Num a => a
c'SQLITE_LAST_ERRNO :: Num a => a
c'SQLITE_FCNTL_SIZE_HINT :: Num a => a
c'SQLITE_FCNTL_CHUNK_SIZE :: Num a => a
c'SQLITE_FCNTL_FILE_POINTER :: Num a => a
c'SQLITE_FCNTL_SYNC_OMITTED :: Num a => a
c'SQLITE_FCNTL_WIN32_AV_RETRY :: Num a => a
c'SQLITE_FCNTL_PERSIST_WAL :: Num a => a
c'SQLITE_FCNTL_OVERWRITE :: Num a => a
c'SQLITE_FCNTL_VFSNAME :: Num a => a
c'SQLITE_FCNTL_POWERSAFE_OVERWRITE :: Num a => a
c'SQLITE_FCNTL_PRAGMA :: Num a => a
c'SQLITE_FCNTL_BUSYHANDLER :: Num a => a
c'SQLITE_FCNTL_TEMPFILENAME :: Num a => a
c'SQLITE_FCNTL_MMAP_SIZE :: Num a => a
c'SQLITE_INDEX_CONSTRAINT_EQ :: Num a => a
c'SQLITE_INDEX_CONSTRAINT_GT :: Num a => a
c'SQLITE_INDEX_CONSTRAINT_LE :: Num a => a
c'SQLITE_INDEX_CONSTRAINT_LT :: Num a => a
c'SQLITE_INDEX_CONSTRAINT_GE :: Num a => a
c'SQLITE_INDEX_CONSTRAINT_MATCH :: Num a => a
c'SQLITE_IOCAP_ATOMIC :: Num a => a
c'SQLITE_IOCAP_ATOMIC512 :: Num a => a
c'SQLITE_IOCAP_ATOMIC1K :: Num a => a
c'SQLITE_IOCAP_ATOMIC2K :: Num a => a
c'SQLITE_IOCAP_ATOMIC4K :: Num a => a
c'SQLITE_IOCAP_ATOMIC8K :: Num a => a
c'SQLITE_IOCAP_ATOMIC16K :: Num a => a
c'SQLITE_IOCAP_ATOMIC32K :: Num a => a
c'SQLITE_IOCAP_ATOMIC64K :: Num a => a
c'SQLITE_IOCAP_SAFE_APPEND :: Num a => a
c'SQLITE_IOCAP_SEQUENTIAL :: Num a => a
c'SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN :: Num a => a
c'SQLITE_IOCAP_POWERSAFE_OVERWRITE :: Num a => a
c'SQLITE_LOCK_NONE :: Num a => a
c'SQLITE_LOCK_SHARED :: Num a => a
c'SQLITE_LOCK_RESERVED :: Num a => a
c'SQLITE_LOCK_PENDING :: Num a => a
c'SQLITE_LOCK_EXCLUSIVE :: Num a => a
c'SQLITE_MUTEX_FAST :: Num a => a
c'SQLITE_MUTEX_RECURSIVE :: Num a => a
c'SQLITE_MUTEX_STATIC_MASTER :: Num a => a
c'SQLITE_MUTEX_STATIC_MEM :: Num a => a
c'SQLITE_MUTEX_STATIC_MEM2 :: Num a => a
c'SQLITE_MUTEX_STATIC_OPEN :: Num a => a
c'SQLITE_MUTEX_STATIC_PRNG :: Num a => a
c'SQLITE_MUTEX_STATIC_LRU :: Num a => a
c'SQLITE_MUTEX_STATIC_LRU2 :: Num a => a
c'SQLITE_MUTEX_STATIC_PMEM :: Num a => a
c'SQLITE_OPEN_READONLY :: Num a => a
c'SQLITE_OPEN_READWRITE :: Num a => a
c'SQLITE_OPEN_CREATE :: Num a => a
c'SQLITE_OPEN_DELETEONCLOSE :: Num a => a
c'SQLITE_OPEN_EXCLUSIVE :: Num a => a
c'SQLITE_OPEN_AUTOPROXY :: Num a => a
c'SQLITE_OPEN_URI :: Num a => a
c'SQLITE_OPEN_MEMORY :: Num a => a
c'SQLITE_OPEN_MAIN_DB :: Num a => a
c'SQLITE_OPEN_TEMP_DB :: Num a => a
c'SQLITE_OPEN_TRANSIENT_DB :: Num a => a
c'SQLITE_OPEN_MAIN_JOURNAL :: Num a => a
c'SQLITE_OPEN_TEMP_JOURNAL :: Num a => a
c'SQLITE_OPEN_SUBJOURNAL :: Num a => a
c'SQLITE_OPEN_MASTER_JOURNAL :: Num a => a
c'SQLITE_OPEN_NOMUTEX :: Num a => a
c'SQLITE_OPEN_FULLMUTEX :: Num a => a
c'SQLITE_OPEN_SHAREDCACHE :: Num a => a
c'SQLITE_OPEN_PRIVATECACHE :: Num a => a
c'SQLITE_OPEN_WAL :: Num a => a
c'SQLITE_SHM_UNLOCK :: Num a => a
c'SQLITE_SHM_LOCK :: Num a => a
c'SQLITE_SHM_SHARED :: Num a => a
c'SQLITE_SHM_EXCLUSIVE :: Num a => a
c'SQLITE_VERSION :: Ptr (CChar)
c'SQLITE_VERSION_NUMBER :: Num a => a
c'SQLITE_SOURCE_ID :: Ptr (CChar)
type C'sqlite3_destructor_type = FunPtr (Ptr () -> IO ())
mk'sqlite3_destructor_type :: (Ptr () -> IO ()) -> IO C'sqlite3_destructor_type
c'SQLITE_STATIC :: FunPtr a
c'SQLITE_TRANSIENT :: FunPtr a
mK'sqlite3_destructor_type :: C'sqlite3_destructor_type -> (Ptr () -> IO ())
c'SQLITE_STATUS_MEMORY_USED :: Num a => a
c'SQLITE_STATUS_PAGECACHE_USED :: Num a => a
c'SQLITE_STATUS_PAGECACHE_OVERFLOW :: Num a => a
c'SQLITE_STATUS_SCRATCH_USED :: Num a => a
c'SQLITE_STATUS_SCRATCH_OVERFLOW :: Num a => a
c'SQLITE_STATUS_MALLOC_SIZE :: Num a => a
c'SQLITE_STATUS_PARSER_STACK :: Num a => a
c'SQLITE_STATUS_PAGECACHE_SIZE :: Num a => a
c'SQLITE_STATUS_SCRATCH_SIZE :: Num a => a
c'SQLITE_STATUS_MALLOC_COUNT :: Num a => a
c'SQLITE_SYNC_NORMAL :: Num a => a
c'SQLITE_SYNC_FULL :: Num a => a
c'SQLITE_SYNC_DATAONLY :: Num a => a
c'SQLITE_TESTCTRL_FIRST :: Num a => a
c'SQLITE_TESTCTRL_PRNG_SAVE :: Num a => a
c'SQLITE_TESTCTRL_PRNG_RESTORE :: Num a => a
c'SQLITE_TESTCTRL_PRNG_RESET :: Num a => a
c'SQLITE_TESTCTRL_BITVEC_TEST :: Num a => a
c'SQLITE_TESTCTRL_FAULT_INSTALL :: Num a => a
c'SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS :: Num a => a
c'SQLITE_TESTCTRL_PENDING_BYTE :: Num a => a
c'SQLITE_TESTCTRL_ASSERT :: Num a => a
c'SQLITE_TESTCTRL_ALWAYS :: Num a => a
c'SQLITE_TESTCTRL_RESERVE :: Num a => a
c'SQLITE_TESTCTRL_OPTIMIZATIONS :: Num a => a
c'SQLITE_TESTCTRL_ISKEYWORD :: Num a => a
c'SQLITE_TESTCTRL_SCRATCHMALLOC :: Num a => a
c'SQLITE_TESTCTRL_LOCALTIME_FAULT :: Num a => a
c'SQLITE_TESTCTRL_EXPLAIN_STMT :: Num a => a
c'SQLITE_TESTCTRL_LAST :: Num a => a
c'SQLITE_LIMIT_LENGTH :: Num a => a
c'SQLITE_LIMIT_SQL_LENGTH :: Num a => a
c'SQLITE_LIMIT_COLUMN :: Num a => a
c'SQLITE_LIMIT_EXPR_DEPTH :: Num a => a
c'SQLITE_LIMIT_COMPOUND_SELECT :: Num a => a
c'SQLITE_LIMIT_VDBE_OP :: Num a => a
c'SQLITE_LIMIT_FUNCTION_ARG :: Num a => a
c'SQLITE_LIMIT_ATTACHED :: Num a => a
c'SQLITE_LIMIT_LIKE_PATTERN_LENGTH :: Num a => a
c'SQLITE_LIMIT_VARIABLE_NUMBER :: Num a => a
c'SQLITE_LIMIT_TRIGGER_DEPTH :: Num a => a
c'SQLITE_DBSTATUS_LOOKASIDE_USED :: Num a => a
c'SQLITE_DBSTATUS_CACHE_USED :: Num a => a
c'SQLITE_DBSTATUS_SCHEMA_USED :: Num a => a
c'SQLITE_DBSTATUS_STMT_USED :: Num a => a
c'SQLITE_DBSTATUS_LOOKASIDE_HIT :: Num a => a
c'SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE :: Num a => a
c'SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL :: Num a => a
c'SQLITE_DBSTATUS_CACHE_HIT :: Num a => a
c'SQLITE_DBSTATUS_CACHE_MISS :: Num a => a
c'SQLITE_DBSTATUS_CACHE_WRITE :: Num a => a
c'SQLITE_DBSTATUS_MAX :: Num a => a
c'SQLITE_STMTSTATUS_FULLSCAN_STEP :: Num a => a
c'SQLITE_STMTSTATUS_SORT :: Num a => a
c'SQLITE_STMTSTATUS_AUTOINDEX :: Num a => a
type C'sqlite3_int64 = Int64
type C'sqlite3_uint64 = Word64
data C'sqlite3_module
C'sqlite3_module :: CInt -> FunPtr (Ptr C'sqlite3 -> Ptr () -> CInt -> Ptr CString -> Ptr (Ptr C'sqlite3_vtab) -> Ptr CString -> IO CInt) -> FunPtr (Ptr C'sqlite3 -> Ptr () -> CInt -> Ptr CString -> Ptr (Ptr C'sqlite3_vtab) -> Ptr CString -> IO CInt) -> FunPtr (Ptr C'sqlite3_vtab -> Ptr C'sqlite3_index_info -> IO CInt) -> FunPtr (Ptr C'sqlite3_vtab -> IO CInt) -> FunPtr (Ptr C'sqlite3_vtab -> IO CInt) -> FunPtr (Ptr C'sqlite3_vtab -> Ptr (Ptr C'sqlite3_vtab_cursor) -> IO CInt) -> FunPtr (Ptr C'sqlite3_vtab_cursor -> IO CInt) -> FunPtr (Ptr C'sqlite3_vtab_cursor -> CInt -> CString -> CInt -> Ptr (Ptr C'sqlite3_value) -> IO CInt) -> FunPtr (Ptr C'sqlite3_vtab_cursor -> IO CInt) -> FunPtr (Ptr C'sqlite3_vtab_cursor -> IO CInt) -> FunPtr (Ptr C'sqlite3_vtab_cursor -> Ptr C'sqlite3_context -> CInt -> IO CInt) -> FunPtr (Ptr C'sqlite3_vtab_cursor -> Ptr C'sqlite3_int64 -> IO CInt) -> FunPtr (Ptr C'sqlite3_vtab -> CInt -> Ptr (Ptr C'sqlite3_value) -> Ptr C'sqlite3_int64 -> IO CInt) -> FunPtr (Ptr C'sqlite3_vtab -> IO CInt) -> FunPtr (Ptr C'sqlite3_vtab -> IO CInt) -> FunPtr (Ptr C'sqlite3_vtab -> IO CInt) -> FunPtr (Ptr C'sqlite3_vtab -> IO CInt) -> FunPtr (Ptr C'sqlite3_vtab -> CInt -> CString -> Ptr (FunPtr (Ptr C'sqlite3_context -> CInt -> Ptr (Ptr C'sqlite3_value) -> Ptr (Ptr ()) -> IO ())) -> Ptr (Ptr ()) -> IO CInt) -> FunPtr (Ptr C'sqlite3_vtab -> CString -> IO CInt) -> FunPtr (Ptr C'sqlite3_vtab -> CInt -> IO CInt) -> FunPtr (Ptr C'sqlite3_vtab -> CInt -> IO CInt) -> FunPtr (Ptr C'sqlite3_vtab -> CInt -> IO CInt) -> C'sqlite3_module
c'sqlite3_module'iVersion :: C'sqlite3_module -> CInt
c'sqlite3_module'xCreate :: C'sqlite3_module -> FunPtr (Ptr C'sqlite3 -> Ptr () -> CInt -> Ptr CString -> Ptr (Ptr C'sqlite3_vtab) -> Ptr CString -> IO CInt)
c'sqlite3_module'xConnect :: C'sqlite3_module -> FunPtr (Ptr C'sqlite3 -> Ptr () -> CInt -> Ptr CString -> Ptr (Ptr C'sqlite3_vtab) -> Ptr CString -> IO CInt)
c'sqlite3_module'xBestIndex :: C'sqlite3_module -> FunPtr (Ptr C'sqlite3_vtab -> Ptr C'sqlite3_index_info -> IO CInt)
c'sqlite3_module'xDisconnect :: C'sqlite3_module -> FunPtr (Ptr C'sqlite3_vtab -> IO CInt)
c'sqlite3_module'xDestroy :: C'sqlite3_module -> FunPtr (Ptr C'sqlite3_vtab -> IO CInt)
c'sqlite3_module'xOpen :: C'sqlite3_module -> FunPtr (Ptr C'sqlite3_vtab -> Ptr (Ptr C'sqlite3_vtab_cursor) -> IO CInt)
c'sqlite3_module'xClose :: C'sqlite3_module -> FunPtr (Ptr C'sqlite3_vtab_cursor -> IO CInt)
c'sqlite3_module'xFilter :: C'sqlite3_module -> FunPtr (Ptr C'sqlite3_vtab_cursor -> CInt -> CString -> CInt -> Ptr (Ptr C'sqlite3_value) -> IO CInt)
c'sqlite3_module'xNext :: C'sqlite3_module -> FunPtr (Ptr C'sqlite3_vtab_cursor -> IO CInt)
c'sqlite3_module'xEof :: C'sqlite3_module -> FunPtr (Ptr C'sqlite3_vtab_cursor -> IO CInt)
c'sqlite3_module'xColumn :: C'sqlite3_module -> FunPtr (Ptr C'sqlite3_vtab_cursor -> Ptr C'sqlite3_context -> CInt -> IO CInt)
c'sqlite3_module'xRowid :: C'sqlite3_module -> FunPtr (Ptr C'sqlite3_vtab_cursor -> Ptr C'sqlite3_int64 -> IO CInt)
c'sqlite3_module'xUpdate :: C'sqlite3_module -> FunPtr (Ptr C'sqlite3_vtab -> CInt -> Ptr (Ptr C'sqlite3_value) -> Ptr C'sqlite3_int64 -> IO CInt)
c'sqlite3_module'xBegin :: C'sqlite3_module -> FunPtr (Ptr C'sqlite3_vtab -> IO CInt)
c'sqlite3_module'xSync :: C'sqlite3_module -> FunPtr (Ptr C'sqlite3_vtab -> IO CInt)
c'sqlite3_module'xCommit :: C'sqlite3_module -> FunPtr (Ptr C'sqlite3_vtab -> IO CInt)
c'sqlite3_module'xRollback :: C'sqlite3_module -> FunPtr (Ptr C'sqlite3_vtab -> IO CInt)
c'sqlite3_module'xFindFunction :: C'sqlite3_module -> FunPtr (Ptr C'sqlite3_vtab -> CInt -> CString -> Ptr (FunPtr (Ptr C'sqlite3_context -> CInt -> Ptr (Ptr C'sqlite3_value) -> Ptr (Ptr ()) -> IO ())) -> Ptr (Ptr ()) -> IO CInt)
c'sqlite3_module'xRename :: C'sqlite3_module -> FunPtr (Ptr C'sqlite3_vtab -> CString -> IO CInt)
c'sqlite3_module'xSavepoint :: C'sqlite3_module -> FunPtr (Ptr C'sqlite3_vtab -> CInt -> IO CInt)
c'sqlite3_module'xRelease :: C'sqlite3_module -> FunPtr (Ptr C'sqlite3_vtab -> CInt -> IO CInt)
c'sqlite3_module'xRollbackTo :: C'sqlite3_module -> FunPtr (Ptr C'sqlite3_vtab -> CInt -> IO CInt)
data C'sqlite3_vtab_cursor
C'sqlite3_vtab_cursor :: Ptr C'sqlite3_vtab -> C'sqlite3_vtab_cursor
c'sqlite3_vtab_cursor'pVtab :: C'sqlite3_vtab_cursor -> Ptr C'sqlite3_vtab
data C'sqlite3_blob
C'sqlite3_blob :: C'sqlite3_blob
data C'sqlite3
C'sqlite3 :: C'sqlite3
p'sqlite3_vtab_cursor'pVtab :: Ptr (C'sqlite3_vtab_cursor) -> Ptr (Ptr C'sqlite3_vtab)
data C'sqlite3_pcache_methods2
C'sqlite3_pcache_methods2 :: CInt -> Ptr () -> FunPtr (Ptr () -> IO CInt) -> FunPtr (Ptr () -> IO ()) -> FunPtr (CInt -> CInt -> CInt -> IO (Ptr C'sqlite3_pcache)) -> FunPtr (Ptr C'sqlite3_pcache -> CInt -> IO ()) -> FunPtr (Ptr C'sqlite3_pcache -> IO CInt) -> FunPtr (Ptr C'sqlite3_pcache -> CUInt -> CInt -> IO (Ptr C'sqlite3_pcache_page)) -> FunPtr (Ptr C'sqlite3_pcache -> Ptr C'sqlite3_pcache_page -> CInt -> IO ()) -> FunPtr (Ptr C'sqlite3_pcache -> Ptr C'sqlite3_pcache_page -> CUInt -> CUInt -> IO ()) -> FunPtr (Ptr C'sqlite3_pcache -> CUInt -> IO ()) -> FunPtr (Ptr C'sqlite3_pcache -> IO ()) -> FunPtr (Ptr C'sqlite3_pcache -> IO ()) -> C'sqlite3_pcache_methods2
c'sqlite3_pcache_methods2'iVersion :: C'sqlite3_pcache_methods2 -> CInt
c'sqlite3_pcache_methods2'pArg :: C'sqlite3_pcache_methods2 -> Ptr ()
c'sqlite3_pcache_methods2'xInit :: C'sqlite3_pcache_methods2 -> FunPtr (Ptr () -> IO CInt)
c'sqlite3_pcache_methods2'xShutdown :: C'sqlite3_pcache_methods2 -> FunPtr (Ptr () -> IO ())
c'sqlite3_pcache_methods2'xCreate :: C'sqlite3_pcache_methods2 -> FunPtr (CInt -> CInt -> CInt -> IO (Ptr C'sqlite3_pcache))
c'sqlite3_pcache_methods2'xCachesize :: C'sqlite3_pcache_methods2 -> FunPtr (Ptr C'sqlite3_pcache -> CInt -> IO ())
c'sqlite3_pcache_methods2'xPagecount :: C'sqlite3_pcache_methods2 -> FunPtr (Ptr C'sqlite3_pcache -> IO CInt)
c'sqlite3_pcache_methods2'xFetch :: C'sqlite3_pcache_methods2 -> FunPtr (Ptr C'sqlite3_pcache -> CUInt -> CInt -> IO (Ptr C'sqlite3_pcache_page))
c'sqlite3_pcache_methods2'xUnpin :: C'sqlite3_pcache_methods2 -> FunPtr (Ptr C'sqlite3_pcache -> Ptr C'sqlite3_pcache_page -> CInt -> IO ())
c'sqlite3_pcache_methods2'xRekey :: C'sqlite3_pcache_methods2 -> FunPtr (Ptr C'sqlite3_pcache -> Ptr C'sqlite3_pcache_page -> CUInt -> CUInt -> IO ())
c'sqlite3_pcache_methods2'xTruncate :: C'sqlite3_pcache_methods2 -> FunPtr (Ptr C'sqlite3_pcache -> CUInt -> IO ())
c'sqlite3_pcache_methods2'xDestroy :: C'sqlite3_pcache_methods2 -> FunPtr (Ptr C'sqlite3_pcache -> IO ())
c'sqlite3_pcache_methods2'xShrink :: C'sqlite3_pcache_methods2 -> FunPtr (Ptr C'sqlite3_pcache -> IO ())
data C'sqlite3_stmt
C'sqlite3_stmt :: C'sqlite3_stmt
data C'sqlite3_value
C'sqlite3_value :: C'sqlite3_value
p'sqlite3_module'iVersion :: Ptr (C'sqlite3_module) -> Ptr (CInt)
p'sqlite3_module'xCreate :: Ptr (C'sqlite3_module) -> Ptr (FunPtr (Ptr C'sqlite3 -> Ptr () -> CInt -> Ptr CString -> Ptr (Ptr C'sqlite3_vtab) -> Ptr CString -> IO CInt))
c'sqlite3_backup_init :: Ptr C'sqlite3 -> CString -> Ptr C'sqlite3 -> CString -> IO (Ptr C'sqlite3_backup)
p'sqlite3_module'xConnect :: Ptr (C'sqlite3_module) -> Ptr (FunPtr (Ptr C'sqlite3 -> Ptr () -> CInt -> Ptr CString -> Ptr (Ptr C'sqlite3_vtab) -> Ptr CString -> IO CInt))
c'sqlite3_backup_step :: Ptr C'sqlite3_backup -> CInt -> IO CInt
p'sqlite3_backup_init :: FunPtr (Ptr C'sqlite3 -> CString -> Ptr C'sqlite3 -> CString -> IO (Ptr C'sqlite3_backup))
c'sqlite3_backup_finish :: Ptr C'sqlite3_backup -> IO CInt
p'sqlite3_module'xBestIndex :: Ptr (C'sqlite3_module) -> Ptr (FunPtr (Ptr C'sqlite3_vtab -> Ptr C'sqlite3_index_info -> IO CInt))
c'sqlite3_backup_remaining :: Ptr C'sqlite3_backup -> IO CInt
p'sqlite3_backup_step :: FunPtr (Ptr C'sqlite3_backup -> CInt -> IO CInt)
c'sqlite3_backup_pagecount :: Ptr C'sqlite3_backup -> IO CInt
p'sqlite3_backup_finish :: FunPtr (Ptr C'sqlite3_backup -> IO CInt)
p'sqlite3_module'xDisconnect :: Ptr (C'sqlite3_module) -> Ptr (FunPtr (Ptr C'sqlite3_vtab -> IO CInt))
p'sqlite3_backup_remaining :: FunPtr (Ptr C'sqlite3_backup -> IO CInt)
c'sqlite3_close :: Ptr C'sqlite3 -> IO CInt
p'sqlite3_backup_pagecount :: FunPtr (Ptr C'sqlite3_backup -> IO CInt)
p'sqlite3_module'xDestroy :: Ptr (C'sqlite3_module) -> Ptr (FunPtr (Ptr C'sqlite3_vtab -> IO CInt))
c'sqlite3_close_v2 :: Ptr C'sqlite3 -> IO CInt
p'sqlite3_close :: FunPtr (Ptr C'sqlite3 -> IO CInt)
p'sqlite3_module'xOpen :: Ptr (C'sqlite3_module) -> Ptr (FunPtr (Ptr C'sqlite3_vtab -> Ptr (Ptr C'sqlite3_vtab_cursor) -> IO CInt))
p'sqlite3_close_v2 :: FunPtr (Ptr C'sqlite3 -> IO CInt)
c'sqlite3_collation_needed :: Ptr C'sqlite3 -> Ptr () -> FunPtr (Ptr () -> Ptr C'sqlite3 -> CInt -> CString -> IO ()) -> IO CInt
p'sqlite3_pcache_methods2'iVersion :: Ptr (C'sqlite3_pcache_methods2) -> Ptr (CInt)
p'sqlite3_module'xClose :: Ptr (C'sqlite3_module) -> Ptr (FunPtr (Ptr C'sqlite3_vtab_cursor -> IO CInt))
p'sqlite3_collation_needed :: FunPtr (Ptr C'sqlite3 -> Ptr () -> FunPtr (Ptr () -> Ptr C'sqlite3 -> CInt -> CString -> IO ()) -> IO CInt)
p'sqlite3_pcache_methods2'pArg :: Ptr (C'sqlite3_pcache_methods2) -> Ptr (Ptr ())
c'sqlite3_collation_needed16 :: Ptr C'sqlite3 -> Ptr () -> FunPtr (Ptr () -> Ptr C'sqlite3 -> CInt -> Ptr () -> IO ()) -> IO CInt
p'sqlite3_module'xFilter :: Ptr (C'sqlite3_module) -> Ptr (FunPtr (Ptr C'sqlite3_vtab_cursor -> CInt -> CString -> CInt -> Ptr (Ptr C'sqlite3_value) -> IO CInt))
p'sqlite3_pcache_methods2'xInit :: Ptr (C'sqlite3_pcache_methods2) -> Ptr (FunPtr (Ptr () -> IO CInt))
p'sqlite3_collation_needed16 :: FunPtr (Ptr C'sqlite3 -> Ptr () -> FunPtr (Ptr () -> Ptr C'sqlite3 -> CInt -> Ptr () -> IO ()) -> IO CInt)
p'sqlite3_module'xNext :: Ptr (C'sqlite3_module) -> Ptr (FunPtr (Ptr C'sqlite3_vtab_cursor -> IO CInt))
p'sqlite3_pcache_methods2'xShutdown :: Ptr (C'sqlite3_pcache_methods2) -> Ptr (FunPtr (Ptr () -> IO ()))
c'sqlite3_column_database_name :: Ptr C'sqlite3_stmt -> CInt -> IO CString
p'sqlite3_module'xEof :: Ptr (C'sqlite3_module) -> Ptr (FunPtr (Ptr C'sqlite3_vtab_cursor -> IO CInt))
p'sqlite3_pcache_methods2'xCreate :: Ptr (C'sqlite3_pcache_methods2) -> Ptr (FunPtr (CInt -> CInt -> CInt -> IO (Ptr C'sqlite3_pcache)))
c'sqlite3_column_database_name16 :: Ptr C'sqlite3_stmt -> CInt -> IO (Ptr ())
p'sqlite3_column_database_name :: FunPtr (Ptr C'sqlite3_stmt -> CInt -> IO CString)
p'sqlite3_module'xColumn :: Ptr (C'sqlite3_module) -> Ptr (FunPtr (Ptr C'sqlite3_vtab_cursor -> Ptr C'sqlite3_context -> CInt -> IO CInt))
p'sqlite3_pcache_methods2'xCachesize :: Ptr (C'sqlite3_pcache_methods2) -> Ptr (FunPtr (Ptr C'sqlite3_pcache -> CInt -> IO ()))
c'sqlite3_column_table_name :: Ptr C'sqlite3_stmt -> CInt -> IO CString
p'sqlite3_column_database_name16 :: FunPtr (Ptr C'sqlite3_stmt -> CInt -> IO (Ptr ()))
p'sqlite3_module'xRowid :: Ptr (C'sqlite3_module) -> Ptr (FunPtr (Ptr C'sqlite3_vtab_cursor -> Ptr C'sqlite3_int64 -> IO CInt))
p'sqlite3_pcache_methods2'xPagecount :: Ptr (C'sqlite3_pcache_methods2) -> Ptr (FunPtr (Ptr C'sqlite3_pcache -> IO CInt))
c'sqlite3_column_table_name16 :: Ptr C'sqlite3_stmt -> CInt -> IO (Ptr ())
p'sqlite3_column_table_name :: FunPtr (Ptr C'sqlite3_stmt -> CInt -> IO CString)
p'sqlite3_module'xUpdate :: Ptr (C'sqlite3_module) -> Ptr (FunPtr (Ptr C'sqlite3_vtab -> CInt -> Ptr (Ptr C'sqlite3_value) -> Ptr C'sqlite3_int64 -> IO CInt))
p'sqlite3_pcache_methods2'xFetch :: Ptr (C'sqlite3_pcache_methods2) -> Ptr (FunPtr (Ptr C'sqlite3_pcache -> CUInt -> CInt -> IO (Ptr C'sqlite3_pcache_page)))
c'sqlite3_column_origin_name :: Ptr C'sqlite3_stmt -> CInt -> IO CString
p'sqlite3_column_table_name16 :: FunPtr (Ptr C'sqlite3_stmt -> CInt -> IO (Ptr ()))
p'sqlite3_module'xBegin :: Ptr (C'sqlite3_module) -> Ptr (FunPtr (Ptr C'sqlite3_vtab -> IO CInt))
p'sqlite3_pcache_methods2'xUnpin :: Ptr (C'sqlite3_pcache_methods2) -> Ptr (FunPtr (Ptr C'sqlite3_pcache -> Ptr C'sqlite3_pcache_page -> CInt -> IO ()))
c'sqlite3_column_origin_name16 :: Ptr C'sqlite3_stmt -> CInt -> IO (Ptr ())
p'sqlite3_column_origin_name :: FunPtr (Ptr C'sqlite3_stmt -> CInt -> IO CString)
p'sqlite3_module'xSync :: Ptr (C'sqlite3_module) -> Ptr (FunPtr (Ptr C'sqlite3_vtab -> IO CInt))
p'sqlite3_pcache_methods2'xRekey :: Ptr (C'sqlite3_pcache_methods2) -> Ptr (FunPtr (Ptr C'sqlite3_pcache -> Ptr C'sqlite3_pcache_page -> CUInt -> CUInt -> IO ()))
p'sqlite3_column_origin_name16 :: FunPtr (Ptr C'sqlite3_stmt -> CInt -> IO (Ptr ()))
p'sqlite3_module'xCommit :: Ptr (C'sqlite3_module) -> Ptr (FunPtr (Ptr C'sqlite3_vtab -> IO CInt))
c'sqlite3_column_decltype :: Ptr C'sqlite3_stmt -> CInt -> IO CString
p'sqlite3_pcache_methods2'xTruncate :: Ptr (C'sqlite3_pcache_methods2) -> Ptr (FunPtr (Ptr C'sqlite3_pcache -> CUInt -> IO ()))
p'sqlite3_module'xRollback :: Ptr (C'sqlite3_module) -> Ptr (FunPtr (Ptr C'sqlite3_vtab -> IO CInt))
c'sqlite3_column_decltype16 :: Ptr C'sqlite3_stmt -> CInt -> IO (Ptr ())
p'sqlite3_column_decltype :: FunPtr (Ptr C'sqlite3_stmt -> CInt -> IO CString)
p'sqlite3_pcache_methods2'xDestroy :: Ptr (C'sqlite3_pcache_methods2) -> Ptr (FunPtr (Ptr C'sqlite3_pcache -> IO ()))
p'sqlite3_module'xFindFunction :: Ptr (C'sqlite3_module) -> Ptr (FunPtr (Ptr C'sqlite3_vtab -> CInt -> CString -> Ptr (FunPtr (Ptr C'sqlite3_context -> CInt -> Ptr (Ptr C'sqlite3_value) -> Ptr (Ptr ()) -> IO ())) -> Ptr (Ptr ()) -> IO CInt))
p'sqlite3_column_decltype16 :: FunPtr (Ptr C'sqlite3_stmt -> CInt -> IO (Ptr ()))
p'sqlite3_pcache_methods2'xShrink :: Ptr (C'sqlite3_pcache_methods2) -> Ptr (FunPtr (Ptr C'sqlite3_pcache -> IO ()))
c'sqlite3_column_name :: Ptr C'sqlite3_stmt -> CInt -> IO CString
p'sqlite3_module'xRename :: Ptr (C'sqlite3_module) -> Ptr (FunPtr (Ptr C'sqlite3_vtab -> CString -> IO CInt))
c'sqlite3_column_name16 :: Ptr C'sqlite3_stmt -> CInt -> IO (Ptr ())
p'sqlite3_column_name :: FunPtr (Ptr C'sqlite3_stmt -> CInt -> IO CString)
p'sqlite3_module'xSavepoint :: Ptr (C'sqlite3_module) -> Ptr (FunPtr (Ptr C'sqlite3_vtab -> CInt -> IO CInt))
p'sqlite3_column_name16 :: FunPtr (Ptr C'sqlite3_stmt -> CInt -> IO (Ptr ()))
p'sqlite3_module'xRelease :: Ptr (C'sqlite3_module) -> Ptr (FunPtr (Ptr C'sqlite3_vtab -> CInt -> IO CInt))
c'sqlite3_commit_hook :: Ptr C'sqlite3 -> FunPtr (Ptr () -> IO CInt) -> Ptr () -> IO (Ptr ())
p'sqlite3_module'xRollbackTo :: Ptr (C'sqlite3_module) -> Ptr (FunPtr (Ptr C'sqlite3_vtab -> CInt -> IO CInt))
c'sqlite3_rollback_hook :: Ptr C'sqlite3 -> FunPtr (Ptr () -> IO ()) -> Ptr () -> IO (Ptr ())
p'sqlite3_commit_hook :: FunPtr (Ptr C'sqlite3 -> FunPtr (Ptr () -> IO CInt) -> Ptr () -> IO (Ptr ()))
p'sqlite3_rollback_hook :: FunPtr (Ptr C'sqlite3 -> FunPtr (Ptr () -> IO ()) -> Ptr () -> IO (Ptr ()))
c'sqlite3_complete :: CString -> IO CInt
c'sqlite3_complete16 :: Ptr () -> IO CInt
p'sqlite3_complete :: FunPtr (CString -> IO CInt)
p'sqlite3_complete16 :: FunPtr (Ptr () -> IO CInt)
c'sqlite3_create_collation :: Ptr C'sqlite3 -> CString -> CInt -> Ptr () -> FunPtr (Ptr () -> CInt -> Ptr () -> CInt -> Ptr () -> IO CInt) -> IO CInt
p'sqlite3_create_collation :: FunPtr (Ptr C'sqlite3 -> CString -> CInt -> Ptr () -> FunPtr (Ptr () -> CInt -> Ptr () -> CInt -> Ptr () -> IO CInt) -> IO CInt)
c'sqlite3_create_collation_v2 :: Ptr C'sqlite3 -> CString -> CInt -> Ptr () -> FunPtr (Ptr () -> CInt -> Ptr () -> CInt -> Ptr () -> IO CInt) -> FunPtr (Ptr () -> IO ()) -> IO CInt
p'sqlite3_create_collation_v2 :: FunPtr (Ptr C'sqlite3 -> CString -> CInt -> Ptr () -> FunPtr (Ptr () -> CInt -> Ptr () -> CInt -> Ptr () -> IO CInt) -> FunPtr (Ptr () -> IO ()) -> IO CInt)
c'sqlite3_create_collation16 :: Ptr C'sqlite3 -> Ptr () -> CInt -> Ptr () -> FunPtr (Ptr () -> CInt -> Ptr () -> CInt -> Ptr () -> IO CInt) -> IO CInt
p'sqlite3_create_collation16 :: FunPtr (Ptr C'sqlite3 -> Ptr () -> CInt -> Ptr () -> FunPtr (Ptr () -> CInt -> Ptr () -> CInt -> Ptr () -> IO CInt) -> IO CInt)
c'sqlite3_create_module :: Ptr C'sqlite3 -> CString -> Ptr C'sqlite3_module -> Ptr () -> IO CInt
p'sqlite3_create_module :: FunPtr (Ptr C'sqlite3 -> CString -> Ptr C'sqlite3_module -> Ptr () -> IO CInt)
c'sqlite3_create_module_v2 :: Ptr C'sqlite3 -> CString -> Ptr C'sqlite3_module -> Ptr () -> FunPtr (Ptr () -> IO ()) -> IO CInt
p'sqlite3_create_module_v2 :: FunPtr (Ptr C'sqlite3 -> CString -> Ptr C'sqlite3_module -> Ptr () -> FunPtr (Ptr () -> IO ()) -> IO CInt)
c'sqlite3_errcode :: Ptr C'sqlite3 -> IO CInt
c'sqlite3_extended_errcode :: Ptr C'sqlite3 -> IO CInt
c'sqlite3_errmsg :: Ptr C'sqlite3 -> IO CString
p'sqlite3_errcode :: FunPtr (Ptr C'sqlite3 -> IO CInt)
c'sqlite3_errmsg16 :: Ptr C'sqlite3 -> IO (Ptr ())
p'sqlite3_extended_errcode :: FunPtr (Ptr C'sqlite3 -> IO CInt)
c'sqlite3_errstr :: CInt -> IO CString
p'sqlite3_errmsg :: FunPtr (Ptr C'sqlite3 -> IO CString)
p'sqlite3_errmsg16 :: FunPtr (Ptr C'sqlite3 -> IO (Ptr ()))
c'sqlite3_malloc :: CInt -> IO (Ptr ())
p'sqlite3_errstr :: FunPtr (CInt -> IO CString)
c'sqlite3_realloc :: Ptr () -> CInt -> IO (Ptr ())
c'sqlite3_free :: Ptr () -> IO ()
p'sqlite3_malloc :: FunPtr (CInt -> IO (Ptr ()))
p'sqlite3_realloc :: FunPtr (Ptr () -> CInt -> IO (Ptr ()))
p'sqlite3_free :: FunPtr (Ptr () -> IO ())
c'sqlite3_get_table :: Ptr C'sqlite3 -> CString -> Ptr (Ptr CString) -> Ptr CInt -> Ptr CInt -> Ptr CString -> IO CInt
p'sqlite3_get_table :: FunPtr (Ptr C'sqlite3 -> CString -> Ptr (Ptr CString) -> Ptr CInt -> Ptr CInt -> Ptr CString -> IO CInt)
c'sqlite3_free_table :: Ptr CString -> IO ()
p'sqlite3_free_table :: FunPtr (Ptr CString -> IO ())
c'sqlite3_get_auxdata :: Ptr C'sqlite3_context -> CInt -> IO (Ptr ())
p'sqlite3_get_auxdata :: FunPtr (Ptr C'sqlite3_context -> CInt -> IO (Ptr ()))
c'sqlite3_set_auxdata :: Ptr C'sqlite3_context -> CInt -> Ptr () -> FunPtr (Ptr () -> IO ()) -> IO ()
p'sqlite3_set_auxdata :: FunPtr (Ptr C'sqlite3_context -> CInt -> Ptr () -> FunPtr (Ptr () -> IO ()) -> IO ())
c'sqlite3_initialize :: IO CInt
c'sqlite3_shutdown :: IO CInt
c'sqlite3_os_init :: IO CInt
p'sqlite3_initialize :: FunPtr (IO CInt)
c'sqlite3_os_end :: IO CInt
p'sqlite3_shutdown :: FunPtr (IO CInt)
p'sqlite3_os_init :: FunPtr (IO CInt)
c'sqlite3_version :: Ptr (CChar)
p'sqlite3_os_end :: FunPtr (IO CInt)
c'sqlite3_libversion :: IO CString
c'sqlite3_sourceid :: IO CString
c'sqlite3_libversion_number :: IO CInt
p'sqlite3_libversion :: FunPtr (IO CString)
p'sqlite3_sourceid :: FunPtr (IO CString)
p'sqlite3_libversion_number :: FunPtr (IO CInt)
c'sqlite3_memory_used :: IO C'sqlite3_int64
c'sqlite3_memory_highwater :: CInt -> IO C'sqlite3_int64
p'sqlite3_memory_used :: FunPtr (IO C'sqlite3_int64)
c'sqlite3_mutex_alloc :: CInt -> IO (Ptr C'sqlite3_mutex)
p'sqlite3_memory_highwater :: FunPtr (CInt -> IO C'sqlite3_int64)
c'sqlite3_mutex_free :: Ptr C'sqlite3_mutex -> IO ()
c'sqlite3_mutex_enter :: Ptr C'sqlite3_mutex -> IO ()
p'sqlite3_mutex_alloc :: FunPtr (CInt -> IO (Ptr C'sqlite3_mutex))
c'sqlite3_mutex_try :: Ptr C'sqlite3_mutex -> IO CInt
p'sqlite3_mutex_free :: FunPtr (Ptr C'sqlite3_mutex -> IO ())
c'sqlite3_mutex_leave :: Ptr C'sqlite3_mutex -> IO ()
p'sqlite3_mutex_enter :: FunPtr (Ptr C'sqlite3_mutex -> IO ())
p'sqlite3_mutex_try :: FunPtr (Ptr C'sqlite3_mutex -> IO CInt)
p'sqlite3_mutex_leave :: FunPtr (Ptr C'sqlite3_mutex -> IO ())
c'sqlite3_open :: CString -> Ptr (Ptr C'sqlite3) -> IO CInt
c'sqlite3_open16 :: Ptr () -> Ptr (Ptr C'sqlite3) -> IO CInt
p'sqlite3_open :: FunPtr (CString -> Ptr (Ptr C'sqlite3) -> IO CInt)
c'sqlite3_open_v2 :: CString -> Ptr (Ptr C'sqlite3) -> CInt -> CString -> IO CInt
p'sqlite3_open16 :: FunPtr (Ptr () -> Ptr (Ptr C'sqlite3) -> IO CInt)
p'sqlite3_open_v2 :: FunPtr (CString -> Ptr (Ptr C'sqlite3) -> CInt -> CString -> IO CInt)
c'sqlite3_trace :: Ptr C'sqlite3 -> FunPtr (Ptr () -> CString -> IO ()) -> Ptr () -> IO (Ptr ())
p'sqlite3_trace :: FunPtr (Ptr C'sqlite3 -> FunPtr (Ptr () -> CString -> IO ()) -> Ptr () -> IO (Ptr ()))
c'sqlite3_profile :: Ptr C'sqlite3 -> FunPtr (Ptr () -> CString -> C'sqlite3_uint64 -> IO ()) -> Ptr () -> IO (Ptr ())
p'sqlite3_profile :: FunPtr (Ptr C'sqlite3 -> FunPtr (Ptr () -> CString -> C'sqlite3_uint64 -> IO ()) -> Ptr () -> IO (Ptr ()))
c'sqlite3_result_blob :: Ptr C'sqlite3_context -> Ptr () -> CInt -> FunPtr (Ptr () -> IO ()) -> IO ()
c'sqlite3_result_double :: Ptr C'sqlite3_context -> CDouble -> IO ()
p'sqlite3_result_blob :: FunPtr (Ptr C'sqlite3_context -> Ptr () -> CInt -> FunPtr (Ptr () -> IO ()) -> IO ())
c'sqlite3_result_error :: Ptr C'sqlite3_context -> CString -> CInt -> IO ()
p'sqlite3_result_double :: FunPtr (Ptr C'sqlite3_context -> CDouble -> IO ())
c'sqlite3_result_error16 :: Ptr C'sqlite3_context -> Ptr () -> CInt -> IO ()
p'sqlite3_result_error :: FunPtr (Ptr C'sqlite3_context -> CString -> CInt -> IO ())
c'sqlite3_result_error_toobig :: Ptr C'sqlite3_context -> IO ()
p'sqlite3_result_error16 :: FunPtr (Ptr C'sqlite3_context -> Ptr () -> CInt -> IO ())
c'sqlite3_result_error_nomem :: Ptr C'sqlite3_context -> IO ()
c'sqlite3_result_error_code :: Ptr C'sqlite3_context -> CInt -> IO ()
p'sqlite3_result_error_toobig :: FunPtr (Ptr C'sqlite3_context -> IO ())
p'sqlite3_result_error_nomem :: FunPtr (Ptr C'sqlite3_context -> IO ())
c'sqlite3_result_int :: Ptr C'sqlite3_context -> CInt -> IO ()
p'sqlite3_result_error_code :: FunPtr (Ptr C'sqlite3_context -> CInt -> IO ())
c'sqlite3_result_int64 :: Ptr C'sqlite3_context -> C'sqlite3_int64 -> IO ()
c'sqlite3_result_null :: Ptr C'sqlite3_context -> IO ()
p'sqlite3_result_int :: FunPtr (Ptr C'sqlite3_context -> CInt -> IO ())
p'sqlite3_result_int64 :: FunPtr (Ptr C'sqlite3_context -> C'sqlite3_int64 -> IO ())
c'sqlite3_result_text :: Ptr C'sqlite3_context -> CString -> CInt -> FunPtr (Ptr () -> IO ()) -> IO ()
p'sqlite3_result_null :: FunPtr (Ptr C'sqlite3_context -> IO ())
c'sqlite3_result_text16 :: Ptr C'sqlite3_context -> Ptr () -> CInt -> FunPtr (Ptr () -> IO ()) -> IO ()
p'sqlite3_result_text :: FunPtr (Ptr C'sqlite3_context -> CString -> CInt -> FunPtr (Ptr () -> IO ()) -> IO ())
c'sqlite3_result_text16le :: Ptr C'sqlite3_context -> Ptr () -> CInt -> FunPtr (Ptr () -> IO ()) -> IO ()
p'sqlite3_result_text16 :: FunPtr (Ptr C'sqlite3_context -> Ptr () -> CInt -> FunPtr (Ptr () -> IO ()) -> IO ())
c'sqlite3_result_text16be :: Ptr C'sqlite3_context -> Ptr () -> CInt -> FunPtr (Ptr () -> IO ()) -> IO ()
p'sqlite3_result_text16le :: FunPtr (Ptr C'sqlite3_context -> Ptr () -> CInt -> FunPtr (Ptr () -> IO ()) -> IO ())
c'sqlite3_result_value :: Ptr C'sqlite3_context -> Ptr C'sqlite3_value -> IO ()
p'sqlite3_result_text16be :: FunPtr (Ptr C'sqlite3_context -> Ptr () -> CInt -> FunPtr (Ptr () -> IO ()) -> IO ())
c'sqlite3_result_zeroblob :: Ptr C'sqlite3_context -> CInt -> IO ()
p'sqlite3_result_value :: FunPtr (Ptr C'sqlite3_context -> Ptr C'sqlite3_value -> IO ())
p'sqlite3_result_zeroblob :: FunPtr (Ptr C'sqlite3_context -> CInt -> IO ())
c'sqlite3_stricmp :: CString -> CString -> IO CInt
c'sqlite3_strnicmp :: CString -> CString -> CInt -> IO CInt
p'sqlite3_stricmp :: FunPtr (CString -> CString -> IO CInt)
c'sqlite3_uri_parameter :: CString -> CString -> IO CString
p'sqlite3_strnicmp :: FunPtr (CString -> CString -> CInt -> IO CInt)
c'sqlite3_uri_boolean :: CString -> CString -> CInt -> IO CInt
p'sqlite3_uri_parameter :: FunPtr (CString -> CString -> IO CString)
c'sqlite3_uri_int64 :: CString -> CString -> C'sqlite3_int64 -> IO C'sqlite3_int64
p'sqlite3_uri_boolean :: FunPtr (CString -> CString -> CInt -> IO CInt)
p'sqlite3_uri_int64 :: FunPtr (CString -> CString -> C'sqlite3_int64 -> IO C'sqlite3_int64)
c'sqlite3_value_blob :: Ptr C'sqlite3_value -> IO (Ptr ())
c'sqlite3_value_bytes :: Ptr C'sqlite3_value -> IO CInt
c'sqlite3_value_bytes16 :: Ptr C'sqlite3_value -> IO CInt
p'sqlite3_value_blob :: FunPtr (Ptr C'sqlite3_value -> IO (Ptr ()))
c'sqlite3_value_double :: Ptr C'sqlite3_value -> IO CDouble
p'sqlite3_value_bytes :: FunPtr (Ptr C'sqlite3_value -> IO CInt)
c'sqlite3_value_int :: Ptr C'sqlite3_value -> IO CInt
p'sqlite3_value_bytes16 :: FunPtr (Ptr C'sqlite3_value -> IO CInt)
c'sqlite3_value_int64 :: Ptr C'sqlite3_value -> IO C'sqlite3_int64
p'sqlite3_value_double :: FunPtr (Ptr C'sqlite3_value -> IO CDouble)
c'sqlite3_value_text :: Ptr C'sqlite3_value -> IO (Ptr CUChar)
p'sqlite3_value_int :: FunPtr (Ptr C'sqlite3_value -> IO CInt)
c'sqlite3_value_text16 :: Ptr C'sqlite3_value -> IO (Ptr ())
p'sqlite3_value_int64 :: FunPtr (Ptr C'sqlite3_value -> IO C'sqlite3_int64)
c'sqlite3_value_text16le :: Ptr C'sqlite3_value -> IO (Ptr ())
p'sqlite3_value_text :: FunPtr (Ptr C'sqlite3_value -> IO (Ptr CUChar))
c'sqlite3_value_text16be :: Ptr C'sqlite3_value -> IO (Ptr ())
p'sqlite3_value_text16 :: FunPtr (Ptr C'sqlite3_value -> IO (Ptr ()))
c'sqlite3_value_type :: Ptr C'sqlite3_value -> IO CInt
p'sqlite3_value_text16le :: FunPtr (Ptr C'sqlite3_value -> IO (Ptr ()))
c'sqlite3_value_numeric_type :: Ptr C'sqlite3_value -> IO CInt
p'sqlite3_value_text16be :: FunPtr (Ptr C'sqlite3_value -> IO (Ptr ()))
p'sqlite3_value_type :: FunPtr (Ptr C'sqlite3_value -> IO CInt)
c'sqlite3_vfs_find :: CString -> IO (Ptr C'sqlite3_vfs)
p'sqlite3_value_numeric_type :: FunPtr (Ptr C'sqlite3_value -> IO CInt)
c'sqlite3_vfs_register :: Ptr C'sqlite3_vfs -> CInt -> IO CInt
c'sqlite3_vfs_unregister :: Ptr C'sqlite3_vfs -> IO CInt
p'sqlite3_vfs_find :: FunPtr (CString -> IO (Ptr C'sqlite3_vfs))
p'sqlite3_vfs_register :: FunPtr (Ptr C'sqlite3_vfs -> CInt -> IO CInt)
p'sqlite3_vfs_unregister :: FunPtr (Ptr C'sqlite3_vfs -> IO CInt)
c'sqlite3_bind_blob :: Ptr C'sqlite3_stmt -> CInt -> Ptr () -> CInt -> FunPtr (Ptr () -> IO ()) -> IO CInt
c'sqlite3_bind_double :: Ptr C'sqlite3_stmt -> CInt -> CDouble -> IO CInt
p'sqlite3_bind_blob :: FunPtr (Ptr C'sqlite3_stmt -> CInt -> Ptr () -> CInt -> FunPtr (Ptr () -> IO ()) -> IO CInt)
c'sqlite3_bind_int :: Ptr C'sqlite3_stmt -> CInt -> CInt -> IO CInt
p'sqlite3_bind_double :: FunPtr (Ptr C'sqlite3_stmt -> CInt -> CDouble -> IO CInt)
p'sqlite3_bind_int :: FunPtr (Ptr C'sqlite3_stmt -> CInt -> CInt -> IO CInt)
c'sqlite3_bind_int64 :: Ptr C'sqlite3_stmt -> CInt -> C'sqlite3_int64 -> IO CInt
c'sqlite3_bind_null :: Ptr C'sqlite3_stmt -> CInt -> IO CInt
p'sqlite3_bind_int64 :: FunPtr (Ptr C'sqlite3_stmt -> CInt -> C'sqlite3_int64 -> IO CInt)
c'sqlite3_bind_text :: Ptr C'sqlite3_stmt -> CInt -> CString -> CInt -> FunPtr (Ptr () -> IO ()) -> IO CInt
p'sqlite3_bind_null :: FunPtr (Ptr C'sqlite3_stmt -> CInt -> IO CInt)
c'sqlite3_bind_text16 :: Ptr C'sqlite3_stmt -> CInt -> Ptr () -> CInt -> FunPtr (Ptr () -> IO ()) -> IO CInt
p'sqlite3_bind_text :: FunPtr (Ptr C'sqlite3_stmt -> CInt -> CString -> CInt -> FunPtr (Ptr () -> IO ()) -> IO CInt)
c'sqlite3_bind_value :: Ptr C'sqlite3_stmt -> CInt -> Ptr C'sqlite3_value -> IO CInt
p'sqlite3_bind_text16 :: FunPtr (Ptr C'sqlite3_stmt -> CInt -> Ptr () -> CInt -> FunPtr (Ptr () -> IO ()) -> IO CInt)
c'sqlite3_bind_zeroblob :: Ptr C'sqlite3_stmt -> CInt -> CInt -> IO CInt
p'sqlite3_bind_value :: FunPtr (Ptr C'sqlite3_stmt -> CInt -> Ptr C'sqlite3_value -> IO CInt)
p'sqlite3_bind_zeroblob :: FunPtr (Ptr C'sqlite3_stmt -> CInt -> CInt -> IO CInt)
c'sqlite3_prepare :: Ptr C'sqlite3 -> CString -> CInt -> Ptr (Ptr C'sqlite3_stmt) -> Ptr CString -> IO CInt
c'sqlite3_prepare_v2 :: Ptr C'sqlite3 -> CString -> CInt -> Ptr (Ptr C'sqlite3_stmt) -> Ptr CString -> IO CInt
p'sqlite3_prepare :: FunPtr (Ptr C'sqlite3 -> CString -> CInt -> Ptr (Ptr C'sqlite3_stmt) -> Ptr CString -> IO CInt)
c'sqlite3_prepare16 :: Ptr C'sqlite3 -> Ptr () -> CInt -> Ptr (Ptr C'sqlite3_stmt) -> Ptr (Ptr ()) -> IO CInt
p'sqlite3_prepare_v2 :: FunPtr (Ptr C'sqlite3 -> CString -> CInt -> Ptr (Ptr C'sqlite3_stmt) -> Ptr CString -> IO CInt)
c'sqlite3_prepare16_v2 :: Ptr C'sqlite3 -> Ptr () -> CInt -> Ptr (Ptr C'sqlite3_stmt) -> Ptr (Ptr ()) -> IO CInt
p'sqlite3_prepare16 :: FunPtr (Ptr C'sqlite3 -> Ptr () -> CInt -> Ptr (Ptr C'sqlite3_stmt) -> Ptr (Ptr ()) -> IO CInt)
p'sqlite3_prepare16_v2 :: FunPtr (Ptr C'sqlite3 -> Ptr () -> CInt -> Ptr (Ptr C'sqlite3_stmt) -> Ptr (Ptr ()) -> IO CInt)
c'sqlite3_create_function :: Ptr C'sqlite3 -> CString -> CInt -> CInt -> Ptr () -> FunPtr (Ptr C'sqlite3_context -> CInt -> Ptr (Ptr C'sqlite3_value) -> IO ()) -> FunPtr (Ptr C'sqlite3_context -> CInt -> Ptr (Ptr C'sqlite3_value) -> IO ()) -> FunPtr (Ptr C'sqlite3_context -> IO ()) -> IO CInt
p'sqlite3_create_function :: FunPtr (Ptr C'sqlite3 -> CString -> CInt -> CInt -> Ptr () -> FunPtr (Ptr C'sqlite3_context -> CInt -> Ptr (Ptr C'sqlite3_value) -> IO ()) -> FunPtr (Ptr C'sqlite3_context -> CInt -> Ptr (Ptr C'sqlite3_value) -> IO ()) -> FunPtr (Ptr C'sqlite3_context -> IO ()) -> IO CInt)
c'sqlite3_create_function16 :: Ptr C'sqlite3 -> Ptr () -> CInt -> CInt -> Ptr () -> FunPtr (Ptr C'sqlite3_context -> CInt -> Ptr (Ptr C'sqlite3_value) -> IO ()) -> FunPtr (Ptr C'sqlite3_context -> CInt -> Ptr (Ptr C'sqlite3_value) -> IO ()) -> FunPtr (Ptr C'sqlite3_context -> IO ()) -> IO CInt
p'sqlite3_create_function16 :: FunPtr (Ptr C'sqlite3 -> Ptr () -> CInt -> CInt -> Ptr () -> FunPtr (Ptr C'sqlite3_context -> CInt -> Ptr (Ptr C'sqlite3_value) -> IO ()) -> FunPtr (Ptr C'sqlite3_context -> CInt -> Ptr (Ptr C'sqlite3_value) -> IO ()) -> FunPtr (Ptr C'sqlite3_context -> IO ()) -> IO CInt)
c'sqlite3_create_function_v2 :: Ptr C'sqlite3 -> CString -> CInt -> CInt -> Ptr () -> FunPtr (Ptr C'sqlite3_context -> CInt -> Ptr (Ptr C'sqlite3_value) -> IO ()) -> FunPtr (Ptr C'sqlite3_context -> CInt -> Ptr (Ptr C'sqlite3_value) -> IO ()) -> FunPtr (Ptr C'sqlite3_context -> IO ()) -> FunPtr (Ptr () -> IO ()) -> IO CInt
p'sqlite3_create_function_v2 :: FunPtr (Ptr C'sqlite3 -> CString -> CInt -> CInt -> Ptr () -> FunPtr (Ptr C'sqlite3_context -> CInt -> Ptr (Ptr C'sqlite3_value) -> IO ()) -> FunPtr (Ptr C'sqlite3_context -> CInt -> Ptr (Ptr C'sqlite3_value) -> IO ()) -> FunPtr (Ptr C'sqlite3_context -> IO ()) -> FunPtr (Ptr () -> IO ()) -> IO CInt)
c'sqlite3_get_autocommit :: Ptr C'sqlite3 -> IO CInt
p'sqlite3_get_autocommit :: FunPtr (Ptr C'sqlite3 -> IO CInt)
c'sqlite3_column_blob :: Ptr C'sqlite3_stmt -> CInt -> IO (Ptr ())
c'sqlite3_column_bytes :: Ptr C'sqlite3_stmt -> CInt -> IO CInt
c'sqlite3_column_bytes16 :: Ptr C'sqlite3_stmt -> CInt -> IO CInt
p'sqlite3_column_blob :: FunPtr (Ptr C'sqlite3_stmt -> CInt -> IO (Ptr ()))
c'sqlite3_column_double :: Ptr C'sqlite3_stmt -> CInt -> IO CDouble
p'sqlite3_column_bytes :: FunPtr (Ptr C'sqlite3_stmt -> CInt -> IO CInt)
c'sqlite3_column_int :: Ptr C'sqlite3_stmt -> CInt -> IO CInt
p'sqlite3_column_bytes16 :: FunPtr (Ptr C'sqlite3_stmt -> CInt -> IO CInt)
c'sqlite3_column_int64 :: Ptr C'sqlite3_stmt -> CInt -> IO C'sqlite3_int64
p'sqlite3_column_double :: FunPtr (Ptr C'sqlite3_stmt -> CInt -> IO CDouble)
p'sqlite3_column_int :: FunPtr (Ptr C'sqlite3_stmt -> CInt -> IO CInt)
c'sqlite3_column_text :: Ptr C'sqlite3_stmt -> CInt -> IO (Ptr CUChar)
p'sqlite3_column_int64 :: FunPtr (Ptr C'sqlite3_stmt -> CInt -> IO C'sqlite3_int64)
c'sqlite3_column_text16 :: Ptr C'sqlite3_stmt -> CInt -> IO (Ptr ())
p'sqlite3_column_text :: FunPtr (Ptr C'sqlite3_stmt -> CInt -> IO (Ptr CUChar))
c'sqlite3_column_type :: Ptr C'sqlite3_stmt -> CInt -> IO CInt
p'sqlite3_column_text16 :: FunPtr (Ptr C'sqlite3_stmt -> CInt -> IO (Ptr ()))
c'sqlite3_column_value :: Ptr C'sqlite3_stmt -> CInt -> IO (Ptr C'sqlite3_value)
p'sqlite3_column_type :: FunPtr (Ptr C'sqlite3_stmt -> CInt -> IO CInt)
p'sqlite3_column_value :: FunPtr (Ptr C'sqlite3_stmt -> CInt -> IO (Ptr C'sqlite3_value))
instance Eq C'sqlite3_index_constraint
instance Show C'sqlite3_index_constraint
instance Eq C'sqlite3_index_orderby
instance Show C'sqlite3_index_orderby
instance Eq C'sqlite3_index_constraint_usage
instance Show C'sqlite3_index_constraint_usage
instance Eq C'sqlite3_index_info
instance Show C'sqlite3_index_info
instance Eq C'sqlite3_mem_methods
instance Show C'sqlite3_mem_methods
instance Eq C'sqlite3_mutex_methods
instance Show C'sqlite3_mutex_methods
instance Eq C'sqlite3_pcache_page
instance Show C'sqlite3_pcache_page
instance Eq C'sqlite3_io_methods
instance Show C'sqlite3_io_methods
instance Eq C'sqlite3_file
instance Show C'sqlite3_file
instance Eq C'sqlite3_vfs
instance Show C'sqlite3_vfs
instance Eq C'sqlite3_pcache_methods2
instance Show C'sqlite3_pcache_methods2
instance Eq C'sqlite3_module
instance Show C'sqlite3_module
instance Eq C'sqlite3_vtab_cursor
instance Show C'sqlite3_vtab_cursor
instance Eq C'sqlite3_vtab
instance Show C'sqlite3_vtab
instance Storable C'sqlite3_pcache_methods2
instance Storable C'sqlite3_vtab_cursor
instance Storable C'sqlite3_module
instance Storable C'sqlite3_vtab
instance Storable C'sqlite3_vfs
instance Storable C'sqlite3_pcache_page
instance Storable C'sqlite3_mutex_methods
instance Storable C'sqlite3_mem_methods
instance Storable C'sqlite3_io_methods
instance Storable C'sqlite3_index_constraint_usage
instance Storable C'sqlite3_index_orderby
instance Storable C'sqlite3_index_constraint
instance Storable C'sqlite3_index_info
instance Storable C'sqlite3_file
