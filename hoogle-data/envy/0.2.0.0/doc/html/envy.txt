-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | An environmentally friendly way to deal with environment variables
--   
@package envy
@version 0.2.0.0


module System.Envy

-- | FromEnv Typeclass
class FromEnv a
fromEnv :: FromEnv a => Parser a

-- | ToEnv Typeclass
class Show a => ToEnv a
toEnv :: ToEnv a => EnvList a

-- | Class for converting to / from an environment variable
class (Read a, Show a) => Var a
toVar :: Var a => a -> String
fromVar :: Var a => String -> Maybe a

-- | EnvList type w/ phanton
data EnvList a

-- | Environment retrieval with failure info
decodeEnv :: FromEnv a => IO (Either String a)

-- | Environment retrieval (with no failure info)
decode :: FromEnv a => IO (Maybe a)

-- | Env helper
showEnv :: IO ()

-- | Set environment via a ToEnv constrained type
setEnvironment :: EnvList a -> IO (Either String ())

-- | Unset Environment from a ToEnv constrained type
unsetEnvironment :: EnvList a -> IO (Either String ())

-- | smart constructor, Environment creation helper
makeEnv :: ToEnv a => [EnvVar] -> EnvList a

-- | Environment variable getter
env :: (Typeable a, Var a) => String -> Parser a

-- | Maybe parser
envMaybe :: (Typeable a, Var a) => String -> Parser (Maybe a)

-- | Infix environment variable setter this is a smart constructor for
--   producing types of <a>EnvVar</a>
(.=) :: Var a => String -> a -> EnvVar

-- | For use with (.:?) for providing default arguments
(.!=) :: (Typeable a, Var a) => Parser (Maybe a) -> a -> Parser a
instance Functor Parser
instance Monad Parser
instance Applicative Parser
instance MonadError String Parser
instance MonadIO Parser
instance Alternative Parser
instance MonadPlus Parser
instance Show EnvVar
instance Eq EnvVar
instance Show (EnvList a)
instance Var String
instance Var Word64
instance Var Word32
instance Var Word16
instance Var Double
instance Var Bool
instance Var Word8
instance Var Day
instance Var UTCTime
instance Var Integer
instance Var Int64
instance Var Int32
instance Var Int16
instance Var Int8
instance Var Int
instance Var ByteString
instance Var ByteString
instance Var Text
instance Var Text
